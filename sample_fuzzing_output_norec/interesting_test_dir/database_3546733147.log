-- Time: 2024/06/11 00:21:37
-- Database: database47
-- Database version: 3.40.0
-- seed value: 3546733147
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER , c1 TEXT , c2 BLOB NOT NULL ON CONFLICT FAIL CHECK ( (((c0, c1, c0, c1, c2)) NOT BETWEEN ((c2, c0, -1443497272, c0, c0)) AND ((c0, c2, c1, c0, '-1443497272'))) COLLATE BINARY) ); -- 0ms;
CREATE UNIQUE INDEX i73 ON t0((+ ((c1 IN (NULL, c0)))) COLLATE BINARY ASC,((((c2) BETWEEN (c2) AND (c1)))>=(c1)) COLLATE NOCASE ASC,(c1 IN ()) COLLATE NOCASE DESC); -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 0ms;
INSERT OR REPLACE INTO t0(c2, c0) VALUES (0.7417211976649104, 0.9173287349168657); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('280503221' IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffba2829c3)|(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN '' THEN 'Ta]˦<1_QI' ELSE 2.80503221E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-2119081316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9307067729720135; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('#q')AND('-2119081316')))OR(280503221)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.23293502965289004)))+((~ (0.6876709163557713)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1620519997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c05d')AND(0.3281664241175476)))AND(0.2329504166382773)))&((- ('-951185464')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(x'fafb')))AND('榖vB<]T')))OR(0.8603497692126705)))AND(x'3ef0')))<<(((x'')>>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('-362409368')))OR(NULL))) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-327735142'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-2089392715 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1277635944'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-112891498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -951185464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((('-327735142')<<('-327735142'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-951185464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 sz=280503221'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1171772989'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('y\nMD' AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-2119081316')AND(x'')))OR(-1.443497272E9))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('?6')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.3281664241175476' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1899082742'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=917482239 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1213928127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1620519997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1897404798'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM(NULL) THEN x'afba' ELSE ((0.5120202325590627) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-362409368'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(((x'') BETWEEN (x'') AND (0.727547337117889)), ((0xffffffff81b1629c) BETWEEN (NULL) AND (0.7515730178598163))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (x'') AND ('-865551324')) IN (CAST(0.061740223974746655 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1131038476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'', '튘RJO.s', NULL, 0.41556607157638514, 'w'))>(('-903334061', x'', NULL, x'', 0xfffffffffdc4b341))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\n|')IS NOT(9223372036854775807)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-2089392715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((1935337920)AND(0xffffffffc74e0fc8)))AND('Z&[3nQ|{')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('?', '-37440703', NULL, '0.8603497692126705', NULL))==(('0.41556607157638514', '', x'', NULL, 0x2d28888a)))) BETWEEN ('e駉AxE' COLLATE RTRIM) AND (((x'')>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1171772989') BETWEEN (NULL) AND ('qpc2咶')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1213928127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-974680179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1722023125 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)/(0.07050128961566549)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1587060496 sz=1617662762 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1277635944 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=926623886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=-1419022896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1352156922; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1880250373'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1220035012 1386437411 sz=-896576307 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')OR(x'')))OR(1935337920)))AND(x'80b6')))OR('Z&[3NQ|{'))) BETWEEN ((~ ('501464390'))) AND (CAST(-706307639 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-1731777274 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8848274425283574) NOT BETWEEN ('vI6LhGc') AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1361624239 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (1722023125) AND (x'')))IS(CASE 1390678275  WHEN '\n|' THEN -3.27735142E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-162947485 sz=759253068 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1257173217'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c')) NOT BETWEEN (((('-792433090')<=('1213928127')))) AND ((json_array_length(NULL, '6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1213928127 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1930556252'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS NUMERIC)))<((('1220035012' IN (x'', '1454402149'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-792433090 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-872165319'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1125052579'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<(NULL)))GLOB((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '4 354846055 sz=2078941785'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1443497272 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1083281465 1620519997 sz=-1171772989 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.078941785E9) BETWEEN (x'') AND (x''))) NOT BETWEEN (('' IN ())) AND ((NOT (0.5967136950716655)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1215662989 sz=-706307639'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1899082742 sz=560167738 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((1080629343)OR('-1122127029')))OR(x'')))OR('-1754569830')))OR(0.3281664241175476)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-617864997')) NOT BETWEEN ((CAST(0.1332865904210876 AS INTEGER))) AND (((('')!=(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'964a', NULL, '0.727547337117889')) NOT BETWEEN (((~ (0.5850439754768652)), json_insert(x'', NULL, -1171772989), ((x'') BETWEEN (x'') AND (x'')))) AND (((NOT ('1220035012')), (- (1.080629343E9)), (x'6ee5' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=69847308'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2024452320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)>(LIKELIHOOD('-2024452320', 0.22340454253035014))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 218330003 4 sz=373179429 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=728226815'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-1171772989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1361624239 728226815 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-327735142' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-974680179 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-87162138 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-199792897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=757631114'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1208139644 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(DISTINCT NULL))OR(((NULL)=('-1277635944')))))OR((('69847308') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 2 sz=676503454 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1054347896 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((0.727547337117889)OR('-958674579')))AND('1060175785')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-548321962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1287217708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1792289606 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1811324501 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN 0.7417211976649104 ELSE NULL END THEN CASE WHEN -1.131038476E9 THEN 0.8603497692126705 END WHEN ((('1617662762'))>(('-1111854242'))) THEN ((NULL)>(x'')) WHEN CAST(0Xffffffff856ea58b AS BLOB) THEN CASE 917482239  WHEN x'' THEN 0.8661038284758346 ELSE '1e500' END WHEN (('') IS TRUE) THEN NULL WHEN '' THEN ((x'1fb6ee0e')>=('	.')) WHEN (+ (x'')) THEN CAST('Ns^!g|?vN' AS INTEGER) WHEN ((NULL) IS FALSE) THEN ((x'') NOT BETWEEN ('%U') AND ('-903334061')) WHEN CASE WHEN x'' THEN 2.80503221E8 ELSE ')\r' END THEN (('TU')==(NULL)) WHEN ((((((((0.1332865904210876)OR(NULL)))OR(0.0051528471566442136)))OR(x'3ca1088e')))OR(x'')) THEN (~ (x'c4c5')) ELSE (('0.8603497692126705')||(0.5426179523092962)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=9223372036854775807'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1495704443 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X57880cc6)) BETWEEN (((NOT (NULL)))) AND ((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 1911881252 sz=-1038416640 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (((('')) NOT BETWEEN (('>')) AND (('1603987063')))) AND (CAST('-1419022896' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1352156922'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))*(IFNULL(x'f76f', 0xffffffffac526f84))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=357359463'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 -1719815378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1235456430'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1731777274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=849361318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-2089392715 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 2 sz=-632781081 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1060175785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3400583351901172 IN ())) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-1594450090 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(JULIANDAY('p\!Mxi', '/^1!gaﾩn0', '?6') AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1382693458 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 1390678275 sz=1255599010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1390678275)) BETWEEN ((NULL)) AND ((-632781081)))) NOT BETWEEN ((('-1120546298')<=(1473352316))) AND (('-2024452320' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=662938407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('759253068'))) BETWEEN ((('PuOS1J~') BETWEEN ('ke>w') AND (0.4739545824812357))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1811324501'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('140224628')<<('e')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-362409368 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-897823454 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=-362409368 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 1248075830 sz=-1516798005 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-112889622 -1517941332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '218330003 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((('1528800861') NOTNULL), CAST('Aj' AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1811324501 sz=670217249 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.012945965099699475)!=(0.912694599292671)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0Xffffffffd2c969f0 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-2070760856 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 sz=-1191317307'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1817187753 sz=-1700885547 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=280503221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((~ (x'16d9')))) AND ((((((0.4784452954938664)AND('-1517941332')))AND(0xffffffffb4e44a5b))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1111854242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=826331940 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1137750535 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1125052579 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-1171772989 AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1935337920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-2022413812 sz=-1637897955 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.24446550954700008 AS BLOB)) BETWEEN ((- ('0.41556607157638514'))) AND (((('1255599010')) BETWEEN ((0.4304473273430798)) AND (('1935337920'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=46075773'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) NOT BETWEEN (((NULL)&(0xffffffffded41dbe))) AND (CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)GLOB(x'b2c0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1493749636 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=-1517941332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1701165760 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26766702812064724; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '280503221'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=2055047504 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((NULL)<(0.08482675494061209)), 0.6485171742053665); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('z'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=1352156922 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1352156922 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1382693458'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=69847308'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'253cc18f' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOT BETWEEN (NULL) AND ('1775331164')) THEN ((('0.5120202325590627'))>(('0.7515730178598163'))) ELSE (('XcO''E') NOT BETWEEN (NULL) AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-112891498')) BETWEEN (((NOT ('-897823454')))) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(1197560685 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 0 sz=1617662762'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=333532074 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=479697150 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-2119081316 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT CASE 1587060496  WHEN x'' THEN 0.3216058707324466 ELSE NULL END, ((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<>((+ ('-272998334')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-327735142 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-719522254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-2024452320 sz=2144171029 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('i,g] ' AS INTEGER)  WHEN (x'' IN ()) THEN ((NULL)|(0.8813040302367526)) WHEN ((x'')%('832890173')) THEN '0.5120202325590627' COLLATE NOCASE WHEN CHAR(NULL) THEN ((((0Xffffffffd4eab071)AND('405584489')))OR(-1.125052579E9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-701555223 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('832890173')OR(x'')))AND('-1769844863')))||(((((((((NULL)OR(NULL)))AND(NULL)))AND('1935337920')))OR(1528800861)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-327735142'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1719439734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (((((((((NULL)AND('-1575876556')))OR(NULL)))OR(0.7131437431386246)))AND(-1.111854242E9))) AND (COALESCE('-478901862', 0.9096567897505743, 'n8-''', '?'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1386437411 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT 0.7515730178598163)) BETWEEN ((((0.8002479957435825)) NOT BETWEEN ((x'463f')) AND ((x'')))) AND ((+ (-1.403883644E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.46913160782952157 AS REAL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1811324501 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-840602990 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 -617864997 sz=-1318510990 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1694024179'  WHEN x'cf68' THEN NULL WHEN x'' THEN -1372902070 WHEN '-2003304400' THEN 0X120eff75 ELSE 'F1<Wx信no' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.6517606745161605 AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-150935811 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1169688408'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=757631114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 0 sz=1353717675 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN (x'b128747f') AND ('571573709'))  WHEN ((0x1ea0d946)IS NOT(x'')) THEN SQLITE_SOURCE_ID() END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1270961960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1451233997'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-280541867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1470195429 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1213928127'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-984959210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(NULL)) NOT BETWEEN (((1390678275)+(x'a2eb3058'))) AND (CASE 'lRB>T9#z'  WHEN '' THEN '?' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=2118215041 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.12829705742536546 COLLATE BINARY THEN (((('Y\nMD')AND(0.14895474282994636)))AND(x'51a0')) ELSE (((x'', x'', x''))!=((NULL, '', ''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(((NULL) NOT NULL), ((('Jᄃ5\nqj-f')) BETWEEN ((x'')) AND (('Y/MJ*,'))), 849361318 COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ((NOT ('728468835'))) AND ((+ ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-220674588'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN (('-1719815378')-(-1.516798005E9)) ELSE CASE 0Xfffffffff51c30a8  WHEN NULL THEN 0.9109017287860789 ELSE -1.419022896E9 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 0 sz=-1445948482'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4784452954938664; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((RTRIM(0.5426179523092962))AND(((((1.352156922E9)AND(x'')))AND(x'')))))AND(CAST(0.8795850026258965 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-756496539 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1721351134247927)GLOB(-1845292116))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff9e63e4a2) ISNULL))||(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=113440267 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=72347517'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '484801179 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 -1421145928 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 243877182 THEN x'' END)OR(((NULL)+(NULL)))))AND(((0.4145079696612495) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '' WHEN -959209499 THEN NULL WHEN NULL THEN NULL ELSE 's䶩' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-903334061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1908316516 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-460784852'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=860646356 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-706307639'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-112891498'  WHEN 0xffffffff92b3bfa2 THEN '-1731777274' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2078941785 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '560167738'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1904096530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1960172842 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1466173826 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0x27f2b421 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'')||('1128345817')), ((x'')GLOB(x'aef8'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-310980113 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1060267170 sz=-866792643 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1642702203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4796584997035921 IN ()))<>(((('9H'))>=((NULL))))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1516798005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.709690773178784 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1594450090'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS TEXT))AND(((0X1de3bd46) BETWEEN (x'') AND ('沥Y}h')))))AND((~ ('')))))OR((('[3') NOT BETWEEN (x'a42f') AND (0Xffffffff837665b5)))))AND((('XR') BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1217201389 sz=-1277635944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-659496311 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1258138534')AND(NULL)))AND('1390678275')))AND(HEX(DISTINCT 'Y/MJ*,'))))AND((((x''))<((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((RTRIM(''))AND((('-974680179') BETWEEN (-1403883644) AND (x'')))))AND(NULL COLLATE RTRIM)))OR(CAST(0.3874898019510954 AS INTEGER))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (- (0xffffffffa41ce95d)), 0xffffffff8289fc94, ((1.208139644E9)/(NULL)), (-7.5855208E8 IN ('-37440703'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1509987619 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1038416640'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 -1660335922 sz=1667693983 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array((NULL IN ()), ((NULL)IS NOT(NULL)), (- ('0.6517606745161605')), LAST_INSERT_ROWID()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('?' COLLATE BINARY)>=('1213928127')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))||(((x'')=(-104121335)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-411799763 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('')))LIKE(0.7322729563226662 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1528800861 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1080629343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '575276295 sz=-1754569830 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'9961ab102874')))OR(CASE WHEN '-1899082742' THEN 0.7708925912594691 ELSE x'b9e7' END)))OR(0.26766702812064724 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-897823454 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1360568890 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1649549208 676503454 sz=-1691965678 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1232443881 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-555029879 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '123332505 sz=765122158'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=662938407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1398387905 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-621318370 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-725110240 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1517941332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=218330003 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 2 sz=-1643586207'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e2fb96d8') IS FALSE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '759253068'  WHEN 0.7600574293640072 THEN '' END) BETWEEN ((NULL IN ())) AND (((x'c739')!=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1476553898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-145094899' IN ())) NOT BETWEEN (((NULL)GLOB(NULL))) AND ((- (x'843b')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-2119081316 sz=-1220475213 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1257173217 sz=-135805745 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8987663922529187 COLLATE BINARY) BETWEEN ((((NULL)) BETWEEN ((9.17482239E8)) AND (('-944460903')))) AND (((NULL)<(0.7610095314333497)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1248075830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7622443804241099 IN ()))>>((('4h7|TU抜') BETWEEN (NULL) AND (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=1326473460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'faad' AS NUMERIC) IN (((NULL) IS TRUE), ((0xffffffffab092a7a)==(-1754569830)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1017083561 -1585561867 sz=-1653376627'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=218330003'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1964979029 0 sz=-1246792866 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '985296248 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1586071567 sz=1351022401'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '620228787 sz=-1495704443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1620519997 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))AND(x'71c9d9493da6'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')<(0X1715aef9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8813040302367526)/('')))LIKE((((-1.897404798E9, NULL, 649258003, x'', x'', x'd80c', 'Bﳕ+mXS,'))==((0.21369921462000485, 0.5053240559846385, '-1899082742', x'', NULL, 0.1682330808482102, '378135486'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(DATETIME(0.47739834039106466, '-1125052579', 0Xfffffffff2c0cd78) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=728226815 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=-1780985903 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=676503454 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))+(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(NULL COLLATE RTRIM)))OR('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-501883024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'11c9')AND('')))AND('^#I9t'))) BETWEEN (('I^' IN ('ura淐', 0.04872533103550314))) AND ((NOT (0.19216379580233423)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'' THEN NULL ELSE 0.8661038284758346 END, ((0.7501563242968055) NOTNULL), CAST(x'' AS NUMERIC)))<>((CAST(1213928127 AS INTEGER), ((((0.9117774240859337)OR(NULL)))OR(x'')), (NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.41328426242275296; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((~ (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '851819911 2 sz=759253068 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN '>MoQe.~\' THEN 0Xffffffffc5e78f8d END)OR(((('%O'))!=((0.3216058707324466))))))OR(((x'2634') IS TRUE))))OR(SUBSTR(-1.7976931348623157E308, '912568802'))))OR((((728226815)) NOT BETWEEN (('fD')) AND ((-347495935))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-728011119 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '1254516865', '~4Lp')) BETWEEN ((x'' COLLATE RTRIM, (('0.7610095314333497')<<('')), (- (-1.62947485E8)))) AND (((((NULL, NULL, 0.5165619168703601))>=((x'', x'', x'0e0d'))), '1603987063', LENGTH(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1443497272 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1717355366 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1277635944 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1005721500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=560167738 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN x'' THEN 0Xffffffff8bc54c2a END  WHEN CAST(NULL AS TEXT) THEN CAST(-1.111854242E9 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1517941332') NOT BETWEEN ('-1866866863') AND ('1973312565')))&(((0.7935993774273652) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1793453011 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE NULL  WHEN 0.91550196910263 THEN 0x28b28998 WHEN NULL THEN NULL WHEN NULL THEN 'M' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1262154021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'006c') NOT BETWEEN (((((((((((((NULL)AND(NULL)))AND(x'')))AND(0.029978683558897767)))AND(NULL)))AND(x'')))AND(x''))) AND ((('') BETWEEN ('1\wㅰf') AND (0.31421747626765373)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1383218270 1799132637 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1894983803 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1628411300 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-267702786 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1001784804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((1.473352316E9)) NOT BETWEEN ((x'')) AND ((0.1889244166775117))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1764323736 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1528800861 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-1517941332'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'y{khe]z6g'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, 0.9923059897062908)) NOT BETWEEN ((0.21698586321282431, '[]', '\rd')) AND (('', '0.061740223974746655', x''))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.08687074926055316  WHEN '1080629343' THEN x'' END))!=((x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x''))<(('2078941785'))))OR('qpc2咶')))OR((('')>>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<('')))*((0.8434265138119805 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2032482625 -112891498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-320415902 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-756607244'))<>((x''))))==(((((0.17881013325999107)AND(0.8611219774749755)))OR(-1.897404798E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1722023125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' WHEN x'40f8d925' THEN x'' WHEN '' THEN 0Xffffffffd8804e22 ELSE 0.4349562571427008 END) NOT BETWEEN (CAST(x'c06b' AS NUMERIC)) AND (((x'') NOT BETWEEN (NULL) AND ('y{khe]z6g')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=871586160'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x7454977c)OR(x'')))<((((((((('uF~')AND(x'8de7')))OR(x'')))OR('-438553458')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)%(0.06720633318091407))))<=(((((((((('1832655784')AND('e|+䛺፴{I#H')))AND(x'')))AND(1361630246)))AND(-1e500))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=926623886 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>=(0.16257795542470332)))OR('6n暂3rahhX' COLLATE RTRIM)))OR(UPPER(-1082458230))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=280503221'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-621638650 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2051228771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-432499975'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-37440703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1253342171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-929660744 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0.354138104621767 WHEN x'fa51dca3' THEN NULL WHEN '-896576307' THEN '' ELSE '?' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('')))OR('')))+(CAST(x'24ae' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-354998375 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-794986960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-843243284 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MIN('jM袊}n,a8', x''))*((~ (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (NULL))  WHEN (('1662946848')-(0x40fedfa8)) THEN (0.2642111443790637 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1626920188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1083281465 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1232264522 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1352156922') BETWEEN (x'') AND (x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffa5977fcb; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1263202419 sz=1248075830 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-199792897 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1724988415 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1706405675')%(0Xffffffffe030e4b9))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 2'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-7504531 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1125052579 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((361188391) NOT BETWEEN (NULL) AND (759253068)))<=(UPPER(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.046045641380847546)&(x'')) THEN ((NULL) ISNULL) WHEN CAST(NULL AS BLOB) THEN '6줌-xZ' COLLATE NOCASE WHEN ((0.5273374321888191) NOT NULL) THEN TRIM(DISTINCT NULL, 0.05524082698974497) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-112891498 -1637203083 sz=-317476630 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-1604685138'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1466321737 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.04872533103550314') NOT NULL) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CHAR(0xffffffffd60471ad, '-143561759', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 sz=-1661607010 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((NULL)OR(x'6aa1')), 0.22107642843136266); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-83823518' THEN 0.799843284830924 ELSE NULL END)!=('*2' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'wi]iV~W_R'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-865551324'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF(DISTINCT x'6885') THEN CASE -112891498  WHEN NULL THEN '1898087493' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.9060684430523225 THEN 1.528800861E9 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') IS TRUE), ((0xffffffff8effd705)-(NULL)), CASE WHEN '-1038416640' THEN NULL ELSE NULL END))<>((NULL, '-2017030475' COLLATE RTRIM, ((NULL)%(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((HEX(7.59253068E8)))>=((CAST('' AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=843137363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=804996245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-112889622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-716272532 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1241475539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1080629343 sz=-2145810357 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))LIKE((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '11952508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'9c8d', 0Xffffffffea661268, NULL, '|s')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1513566522 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2089392715'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN -1594450090 THEN -8.72165319E8 WHEN '-632781081' THEN 0.17286088181301607 WHEN '542780451' THEN 0Xffffffffec77289a ELSE 0.42447324732504566 END) BETWEEN (((('-9223372036854775808'))==((0.22281646144423295)))) AND (0.19216379580233423)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-37440703 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1083281465'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT ('-254482048')))AND(CAST(x'' AS NUMERIC))))AND((- ('1255599010')))))AND((+ (x'')))))AND(UPPER(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'c86a33a1' AS NUMERIC) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1691214848'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1060175785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x2c790bbe) NOT BETWEEN ('Tx') AND (8.32890173E8))) NOT BETWEEN ((('0.9096567897505743') BETWEEN (NULL) AND ('601061899'))) AND (((x'')IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1508477492 0 sz=808402438 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1899082742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (NULL)) THEN '-1122127029' ELSE ABS('-1361624239') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (load_extension('0.47739834039106466') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-632781081 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1297978068 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.5933800822815907)AND(0xffffffffc74e0fc8)))AND('E駉AXE'))) NOT BETWEEN (((NULL) ISNULL)) AND (('2009150517' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=314451005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 433345849 sz=647651565 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1003042926 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'764d' AS TEXT)) BETWEEN ((((('U㡉')AND('-1131038476')))OR(x''))) AND (((x'') NOT BETWEEN (0.6741249805303791) AND (x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1792289606')AND(x'')))OR(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1204234371 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-2005301736 2 sz=-1361624239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-969374397 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 140224628 sz=-232988028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1964964121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2078941785 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-162947485 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(NULL)))OR(-1984480960))  WHEN ((0.672788458672558)!=('')) THEN (1.603987063E9 IN (0.7263199248011021)) ELSE ((('1387573257'))>((-1.257173217E9))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1025201706 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-140493092 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))<((((0.9373647400911879)) NOT BETWEEN ((0.17559001969341592)) AND ((x'4393'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1635150753 sz=-1205458120 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1287217708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-547309510'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-903334061 sz=1635435720 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.449788202028259)+(x'')))OR(SQLITE_COMPILEOPTION_GET('1083281465'))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '4 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=30451452'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '' END)||(CAST(-1.899082742E9 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<>('1287217708')))<=(((NULL)AND(-1.403883644E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') ISNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1311037645 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1937639105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1792289606 sz=-1683462954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1857572091) BETWEEN (-1239784507) AND (0.12829705742536546))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-8.65551324E8 COLLATE NOCASE)OR(((NULL)<(0xffffffffd4355158)))))OR((((x'', x'', 0.3048269325658418)) NOT BETWEEN ((0.0, x'', '1881514495')) AND ((0.8795850026258965, 0.5264369697677324, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffac3a54b6 COLLATE NOCASE) NOT BETWEEN (((((x'aee96165')AND(x'')))AND(0.610359589000369))) AND (0.6876709163557713 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=714790352 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>>('>MoQe.~\')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((',MH_&P')IS(1620519997)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1421957333'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1469221028 0 sz=1453131583 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7343015555614272)OR(-1.12889622E8)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.5457806573451829 THEN '-307695646' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0X5c727cf8)) NOT BETWEEN ((x'')) AND (('-87162138')))  WHEN ((x'472ebc32') BETWEEN (0.13607115803961445) AND (NULL)) THEN (('-308772540') IS FALSE) ELSE ((((((((0.029978683558897767)AND('|%')))AND(0.1715043256948)))OR(0.9828689783288752)))OR('-87162138')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(('-1403883644' IN ('1-500000'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1922164808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-738584137'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-345199684 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('ᙓ+H*')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT LOWER(DISTINCT NULL), ',T'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffc0e14684))>=((NULL)))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 -402692072 sz=-980472809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1287217708' AS TEXT)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=97944607 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1352156922 2 sz=-135992798 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-514219764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3c89')IS NOT(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((NULL) NOT BETWEEN (NULL) AND (501464390)))) AND ((((('_N')) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>(x'ccaf')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-2114807207 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=2080012157 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=354846055 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(x'2960')))OR(0.5060127587542728)))&((((0.8607258723348838)) BETWEEN ((0.13195032817000907)) AND ((0.3293014537355752))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'fde9')OR(x'8afa')))OR('兕YJj')))IS(LOWER(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1382693458 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8210525357386518 THEN 0.7510469945416803 END)/('''O' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1978451844 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1544966080 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN NULL COLLATE BINARY ELSE ((('꘼O蛿-경t7?<')) NOT BETWEEN (('!x')) AND ((0.5933800822815907))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(CASE WHEN '쥭*' THEN NULL WHEN 0.21369921462000485 THEN '914587369' WHEN 0.4889292707092163 THEN 'jh' END, CASE x'5c433dc5'  WHEN 1512726776 THEN NULL WHEN 0.10266726613422106 THEN x'' WHEN '7I뺞X' THEN '_࿈' ELSE x'd2fd' END, NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-521802400 0 sz=-1173386078 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1719815378 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-233219765'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=280503221'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((x'', x'', NULL)) NOT BETWEEN ((0Xffffffffe883486e, NULL, x'1164')) AND ((NULL, 0.6424594509340785, NULL))), '0.46913160782952157'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9401754275558485  WHEN 'lRB>T9#z' THEN 'l>EY#<' END)&((('-880956496')*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1444237678'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN -327735142 WHEN x'da1b' THEN x'' WHEN 0.6111159765733937 THEN x'5031' END)<(((('0.9307067729720135')) NOT BETWEEN ((NULL)) AND ((0.8472753221805485))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1302256322 sz=-958674579'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=849361318 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((((x'')AND('1935337920')))AND('4')), ((NULL) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=('%J')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1722023125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.6554533490174457)OR(0.16257795542470332)))OR(x'e575'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (UPPER(DISTINCT '1468823003'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 'qW>'  WHEN '-1421552029' THEN 0.9492023257272861 ELSE 'ta]˦<1_qi' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())%(((x'6cb6')&('翋>')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1144162492 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.6717615103362712)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=1460188643'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffa554d938; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1454402149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-2005426059 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.473352316E9, x'be25', '\r]?]9a6'))<=((-397673842, 0.14895474282994636, -1600456204))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=767700873'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1607668168 sz=-87162138'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=356180401 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.3259732773879729)>=('JnrP I{6+')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((NULL)AND('-162947485')))OR(1138318160)))) AND ((((((0.5819200954588006)OR(0xffffffffec77289a)))AND('0.9060684430523225'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=95764871 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 1792289606 THEN ((x'debe') BETWEEN (0.6452785530537041) AND ('757631114')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '4h7|tu抜', x'') COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CAST(NULL AS NUMERIC), (NOT (0.3925667571633059))); -- 0ms;
VACUUM; -- 1ms;
UPDATE t1 SET c0=0.7876643296346973, c0=0.3524763482448413 WHERE ((t1.c0)*(t1.c0)) COLLATE RTRIM; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t0 SET c0=NULL WHERE CAST(CAST(t0.c0 AS INTEGER) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('140224628', x'd636'); -- 0ms;
INSERT OR REPLACE INTO t0(c0, c2, c1) VALUES ('6.', x'', 0.5994322833775171), (x'34eb', '1473352316', ''), (0.6867603199928973, NULL, x''); -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (x'33ade474'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 1753827832 sz=1042735012 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))|(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-37440703' AS REAL))OR((((0.9748062331063585))<(('7I뺞X'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('-967246815') AND ('1390678275')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0Xffffffff813666a6)<=(0.8781935836194354)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'P\!MXI'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-112891498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1450337024 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('l핤ꖓ|]戬')) BETWEEN ((NULL)) AND ((NULL))))%(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'tD}\m' COLLATE RTRIM THEN (((('-1143567188')OR(x'')))AND(x'1ee2')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.1511304361983521)&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1721351134247927)%(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5358446774084927) BETWEEN ('-2095226422') AND ('r盇!<0Rz멱a')))<=(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1570009965 sz=-409347908 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X74ee8d6)OR('')))AND(NULL)))AND((('') NOT BETWEEN (0.16221669867629984) AND ('Qc')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((1.080629343E9 IN (x'')))AND((('+') NOT BETWEEN ('-Infinity') AND (NULL)))))AND((~ (1473352316)))))AND(((NULL) IS FALSE))))OR(CAST(x'f71e' AS BLOB))))OR((('-327735142') BETWEEN ('1912615445') AND (0X5a24f863)))))AND(((NULL)=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=686172368'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1111854242 660215527 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 2 sz=1911881252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3281664241175476)AND(NULL)))AND(x'')))OR(915703114)))AND('FALSE'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=560167738 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1935337920 1544413060 sz=1044946977 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-265497556 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1619679995 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-295965918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1569730249 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=670217249 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-903334061 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CAST('1860626608' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE ')_'  WHEN NULL THEN NULL ELSE x'' END THEN -992039524 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-37440703 sz=1333643647 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-1610708340) NOT BETWEEN (NULL) AND (0.6213586164253296)) THEN ((NULL)GLOB(']x＆J\橥')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('')>(NULL)))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1852765361 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1620519997) NOT NULL) THEN NULL COLLATE RTRIM ELSE ((0.47739834039106466)!=('0.7610095314333497')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1405463370'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff974e11a7)) BETWEEN (((((NULL, 0.9427923626359855, '1569039226')) NOT BETWEEN ((0.5431029038356667, 0.012523608298808941, '?')) AND ((NULL, '!X', '926623886'))))) AND (((('-1754569830')*(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))AND('938243058'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')AND(NULL)) IN (CASE '0.8661038284758346'  WHEN -6.32781081E8 THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1443497272 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-942700400 sz=-1125052579'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=307745679'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND(-1.125052579E9)))OR(x'596d')))OR(NULL)))AND(x'')))OR('4?M7h*')))AND('lqC!>*9⇽v')))GLOB(CASE WHEN '-37822596' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1083281465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=609189752 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1083281465 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '101364498 0 sz=-1957395667 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('')))AND(CASE '-1165710963'  WHEN '1844266964' THEN 0xffffffffae4af589 WHEN '1811324501' THEN NULL WHEN x'' THEN NULL END)))OR(((3.57359463E8) NOT BETWEEN ('-632781081') AND (-37440703)))))AND(0.0432936778685179)))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT ('y{khe]z6g')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'00c0'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'2c72') ISNULL), CASE x'e0ea'  WHEN 'D￿' THEN NULL END, LIKE(x'', '', '^')))<((CASE WHEN 'wUQE	⭆I)_' THEN NULL ELSE x'' END, ((((1e500)AND(x'9cd3')))OR(-664881102)), (((x'b579'))>=((-1225623189)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '261588832'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-902735968 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1911881252 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ABS(DISTINCT NULL)  WHEN (x'' IN ('')) THEN NULL COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-540846910 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(TYPEOF(373179429), (('7?Y\IA') NOT BETWEEN (NULL) AND ('z0wc'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-897823454 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-1639173620 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=488956529 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1825499252 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))-((('7X') BETWEEN (-1919739183) AND (x'fdfb')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=917482239 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('-757983680') NOT BETWEEN ('') AND ('Pft| F')))) AND ((((('69847308'))>=((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1509869973'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(CASE WHEN x'' THEN 27671482 ELSE 0.5573757727833941 END, (('')IS('5_'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=-951552192 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1180211891) NOT BETWEEN (0.45882756330724517) AND (0X373b288e)))OR(((0.46076265064454247) IS FALSE))))AND((('')>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1051112374 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e49b')) BETWEEN ((DATETIME('0.9373647400911879', '-362409368', x'', 0.7610095314333497, ''))) AND (('797293682'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1119445994 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('1287217708') NOTNULL)  WHEN LIKELY(')L') THEN CASE 'hs'  WHEN '}4' THEN -974680179 WHEN NULL THEN '' WHEN 0.26079748557535243 THEN 'w&''6' ELSE NULL END ELSE CASE '됡sdF{E2'  WHEN x'faa3' THEN 0X51d3e72f END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0x52e41103 THEN 'V-<&' WHEN 'se' THEN -1487232867 WHEN 0.6493494907512593 THEN NULL END)<=(COALESCE('-1232806325', '', 0.240484567029554, x'ae33'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '966912864 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1713228920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-779353730)OR(NULL)))OR(NULL)))OR('%O')))AND(0.6682253519820494)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(CAST(0.4510860197185447 AS REAL))))OR(((729657995)&('XR')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1061888966 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1925217337 sz=-1639375790 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1243401138 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=280503221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '220064364 sz=1792289606 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1111854242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-282717831') BETWEEN ('') AND (x'9774')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS REAL))AND((- (NULL)))))AND(NULLIF(DISTINCT x'', 3.54846055E8))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-37440703') NOT BETWEEN (((0.9241270549732474) IS TRUE)) AND ((('') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1337856725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1528800861 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0.4784452954938664)/(NULL)), NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'44e5'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.769870172601966)))LIKE(((((((((((((NULL)OR('')))OR(NULL)))AND('-405148800')))AND('-632781081')))AND(x'6d1e')))AND(x'ea1b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9600858121310106  WHEN '140224628' THEN 0xffffffffb3d8d298 END)AND((~ (107032997)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2066132769 sz=-469148189 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1893193703'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1079211723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 -1503148324 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-368746186'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME((('#b-Infinity>	nf')LIKE(x'')), CAST(NULL AS BLOB), '996667961' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))<>((((NULL) NOT BETWEEN (0.6890136111742498) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1011933811 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 sz=-1897404798 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.13607115803961445'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1131038476 sz=-615818275 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((905908922)) BETWEEN ((CASE ''  WHEN NULL THEN '2073719886' END)) AND ((x'' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1080629343 2 sz=69847308 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'cb03'))) BETWEEN (((NULL)>=(''))) AND (((x'')||('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(SQLITE_COMPILEOPTION_USED(NULL), ((((NULL)OR(0xffffffffd0c46e3e)))AND(0.7569949178187413))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2027555188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=306324117 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9449190269797497 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1746005185 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1629929251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (0.8795850026258965) AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-508223947 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN NULL THEN -1011328764 WHEN '1189719181' THEN 'O' WHEN x'' THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) BETWEEN ((('[%')<=(x''))) AND (CASE '኿<.'  WHEN '8_' THEN x'77c4' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 0 sz=1930556252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-238513859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '4 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1351521561 sz=1935337920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-878037533'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-341210880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1390678275 sz=-654153274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOT BETWEEN (0.573776714486489) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('L.?', 0.13201177496699557)))==((((0.6291255276970826, 'Sm', NULL))>=((0.2810786835773742, 0.11478005813968939, 0.6459149794662613))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((((0Xffffffff997db32e, x'', '')) BETWEEN (('1N', NULL, x'')) AND ((0.8745043391052421, '218330003', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.40338648442796 IN ())))>((((x'') IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>>(NULL))))>(('Wjtx'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((8.49361318E8 COLLATE RTRIM) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-524623298 sz=-2146277796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-673793982 -548321962 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('K P') IS FALSE)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'46c16c94' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-974486677 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1007826587)IS(1.083281465E9))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1202352064 1248075830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 1792289606 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-1357851691 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1389866107 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 sz=1175163694 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x''))LIKE((((0Xffffffff8a61f1d0))<=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('[]' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'')AND(NULL)), (NOT (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1277635944'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'15867e70' IN ('', 7.28226815E8))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-350753356 670217249'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((COALESCE(NULL, '-1305969202'))AND((('Y')<=(x'')))))AND(IFNULL('jᄃ', ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '胜	' THEN (- (NULL)) ELSE ((0.6483484780621047)+('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('')AND('1248075830')))OR(x''))))<((CASE 0.952279485647133  WHEN '-1111854242' THEN 0.7773383683924462 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=168480833 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-101343189'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=354846055'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1257173217 sz=1386437411'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 -1498116503 sz=757631114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2078941785 sz=1119439550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '427361793 2 sz=-329022960'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9868772600969571)) BETWEEN ((((0x771e827)<=(NULL)))) AND (((('318015476')IS NOT(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-816800652'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN (((x'') BETWEEN (x'') AND (',MH_&P'))) AND ((('0.1889244166775117') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELIHOOD(x'', 0.15587877467673927)  WHEN (0.1103838983512826 IN ('je1~4#')) THEN ((('891827329')) NOT BETWEEN ((NULL)) AND ((NULL))) ELSE (((0X57d1927c)) NOT BETWEEN ((' TfS	I47q')) AND ((0.17483531913019368))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1495704443 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-87162138'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.5656835432852875 THEN x'' ELSE x'' END IN ((0.03893340808588497 IN ()), x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-112889622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 169039162 sz=709165485 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1419022896 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 sz=2103143873 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=1933263037'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1152569688'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '373179429 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)GLOB('2051772355')))OR(((x'12fa')IS(x'')))))AND((((('89906236')OR(x'')))AND('1617662762')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1587060496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-227333753 sz=1454902557 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1587948597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-275400079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=334216148 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1495704443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-535592671 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-327735142 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '#q' THEN x'' WHEN 0.6776413391393489 THEN -1.120546298E9 WHEN x'2d76' THEN 441483121 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1937153741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1187210244 sz=-1809570312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.47887702496963347)IS(x'096c')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1208139644 sz=-199792897 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('')))-((0.7417211976649104 IN (0.8661038284758346)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '140224628'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-816324373 sz=1795875642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-208468526 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '717885506 2 sz=-425316638 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1207971099 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '140224628 sz=-1247865848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1041961300 623769073 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-932791082 sz=851988162 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-733577062') NOT BETWEEN (0.45984400808907844) AND (0Xe68c78a)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((',op8E21LG') NOT BETWEEN (x'') AND ('r>')), ((0.35443851936278314)IS NOT(x'8804')), (('') BETWEEN (NULL) AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(-1719815378 AS REAL))OR(GLOB(0Xffffffffa6b63a99, ''))))OR(CASE WHEN -1403883644 THEN '451706797' ELSE x'da95' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '515057124 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1472945412 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=702090753 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1135646'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('701825615')AND((NOT (x'')))))OR('21f{H')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 1215662989 THEN (NULL IN ()) WHEN 0.08482675494061209 COLLATE BINARY THEN ((0X4ad6eba2) NOTNULL) WHEN (((('-1880250373')AND(1.473352316E9)))OR(NULL)) THEN ((x'e77b') BETWEEN ('f	''beboF') AND (0.15278890555390123)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-893256106 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-543602327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'8843') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c01a')-(0x48758b8d)))!=(COALESCE(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-255512002 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF('560167738', 0.6109280605264596) IN (CASE WHEN 0X9d94d6e THEN NULL WHEN NULL THEN 0.18178273285634428 WHEN NULL THEN 0.14267072844267437 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'af78', 0.26766702812064724, x'')) BETWEEN ((((0xfffffffff7f10355) IS FALSE), ((0.8931049968206833) NOT BETWEEN (x'') AND (x'bdbf')), (((('&ஶ?')AND('-199792897')))OR(1.208139644E9)))) AND (((('IT') NOT BETWEEN (NULL) AND (NULL)), ((0.8208536130248177)<(NULL)), (('234031893') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1248075830 0 sz=-1146040240 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1911881252 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=-91906523 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-37440703 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=355175594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(LIKELY(DISTINCT -1125052579)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('')))IS((0.13134240532690455 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('107806189', NULL, '0.2642111443790637')) BETWEEN ((x'', NULL, '!I')) AND (('', x'', NULL)))  WHEN 'An,*\rxQ7w' COLLATE BINARY THEN ((x'')GLOB('')) ELSE ('u煀e휊H' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR('-1649099662')))AND(-4429340)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 805158841'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9920206603035518; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-632781081'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(((x'8d38') NOT BETWEEN ('1036351645') AND ('')), ((0.19216379580233423) BETWEEN (x'') AND ('GT'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '15378043 sz=578216226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 875842640, x'e6f3')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('14r}>_u ')<=('501464390')))<<(x'7fdb')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-669135889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '%U'  WHEN 0.8231147748354354 THEN 0.9120261017339213 ELSE ',' END)&(CAST('>MoQe.~\' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1457572958')<=('qpc2咶')), -1.62947485E8, NULL))<=((CAST(x'' AS INTEGER), 0.9060684430523225 COLLATE BINARY, '-943160633' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=740895632 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)OR(1.603987063E9)) THEN (((0.9474945401090671, 0.9923059897062908, '1603987063')) NOT BETWEEN (('7R', '', '>')) AND ((x'1190', NULL, ''))) ELSE ((x'') NOT BETWEEN (x'') AND (0.13866472603613866)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) BETWEEN (('1390678275')) AND ((0.4527111449460398)))) BETWEEN (CASE 0.5165619168703601  WHEN NULL THEN x'' ELSE 0.00801994864676503 END) AND ((~ (x'5a5606f2')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2039887471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.1233425507412873)GLOB(' rh21')) THEN (('') NOT BETWEEN (0.8715304059835288) AND (NULL)) ELSE (((0X56e60e46)) NOT BETWEEN (('0.91550196910263')) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '348055662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1712628181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1957683774 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7622443804241099)) BETWEEN ((((x'') NOTNULL))) AND ((CAST(NULL AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '357359463 -112889622 sz=-1708617578'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1060175785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-372578576 sz=-389660973'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.16134208470282774, '-1916587063', 'M'))>=((NULL, 0.36358508440808546, '-1164083304')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.8434265138119805 AS BLOB)  WHEN -1194318840 THEN (('	U(eE‎z') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1082813257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)<=(x'')))AND('uI' COLLATE RTRIM)))AND(6.70217249E8)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1828081730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.04872533103550314)==(0.32852566492096147)), (('670217249') NOT BETWEEN (x'') AND (0.3062822686109984)), (((-1403883644)) NOT BETWEEN (('-617864997')) AND ((NULL)))))<=((NULL COLLATE NOCASE, CAST('289586942' AS INTEGER), '469584879'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1820322548 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('cJ') NOT BETWEEN (0.7781584977934362) AND (NULL)))) AND ((LIKELY(0.8553541252308474)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.2472513547259121 AS NUMERIC))<(CASE NULL  WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1233388442'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2117399931 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (0.47398340121288485)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1645413034'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.8795850026258965'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((0.7322729563226662)<<('1502249901')), (('0.8611219774749755')LIKE('-1737038519'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '450605571 sz=1617662762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('662938407')>=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1028127537 2106703932 -903334061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (NULL) AND ('')))OR(((x'') BETWEEN (x'') AND (x'')))))OR(((NULL)<<('69847308')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=333579264'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7432297981968892)AND(0.20944405504609276)))OR(x'97c3'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=92231481 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9753593883180455)AND('')))OR('tx')))>>((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1484032694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=11922614 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 sz=-1517941332 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((NULL)>>(0.25064241898965345))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1672697213'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN CAST('-327735142' AS INTEGER) THEN ((NULL)-(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((x'' IN ()), ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1297008581 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-870313370 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1965234495'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1119824328 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-1719815378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1897404798 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-327735142'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-375200433 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=217348792'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-409628808 sz=759253068 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1385857026'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1595510007'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 -1899134104 sz=-924277155'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-16822953 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((((1722023125, 0.7622443804241099, '1978032338')) BETWEEN (('917482239', '69847308', '￿')) AND ((NULL, '', '-1535902630'))), ((('0.23293502965289004')) BETWEEN ((417742346)) AND ((0.18396225743750172))), (~ (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-123529239 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3124300885318688 COLLATE RTRIM AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5132003722253652; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '4 sz=827405395'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-503484235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('4E{k}') NOT BETWEEN ('-855274554') AND (x'd0cc')))IS NOT(CAST('0.4304473273430798' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2119081316 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1617662762 849361318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2092645372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=796576654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1171216779 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('/njy')AND(0.3021160838774507)))OR(0.5664441131646056))  WHEN CAST(0.7698816315652082 AS REAL) THEN CAST(x'' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3989337245553176) IS FALSE) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1583515265 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'8d62')IS NOT('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1980563165 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1361624239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-998991503 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-628405148'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5512319675537832)>(0x57d1927c)), (('0.3281664241175476') NOT NULL), ((((((((NULL)OR(0.1205164515538647)))AND(0.9811881235701175)))AND('280503221')))OR(x'')), ((0xffffffffee37da72) IS FALSE), 0.18644668970162548))>=(((((x'', '', '1468533958'))>((x'7609', 1723746868, '-903334061'))), ((1.617662762E9)<=(x'fee2')), ((-1.62947485E8)IS NOT('140224628')), ((NULL)GLOB(x'')), 0.4783247935365368))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7417211976649104)LIKE('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1403883644 sz=-362409368'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-2063952143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((((('qW>')OR(NULL)))OR(0.17881013325999107))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)!=((((('\*R戬?G')OR(x'')))AND(-548321962)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1083281465 sz=-235786054 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') BETWEEN (NULL) AND ('+, ')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6603483194014624 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (1117142105 IN ())  WHEN LOWER(0.9640204345230748) THEN ((x'') NOT BETWEEN (NULL) AND ('-1495704443')) WHEN ((x'') NOT NULL) THEN (((('')AND(x'')))AND('55947184')) WHEN CAST('1587060496' AS BLOB) THEN (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1314348838'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-37440703 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.672788458672558) IS TRUE)))!=((LOWER(DISTINCT 0.20396998114914944)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=451614302 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1442625515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.449788202028259')<<(NULL)))%(('C1\rg	?' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1955796466 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('vG' AS BLOB)))<((COALESCE(x'', 0.6873637801540474, 'ⰽNvel&', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-112891498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('680834185') ISNULL))OR((('n8-''') BETWEEN (NULL) AND (0.1658098767931474)))))OR((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1327261071 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELIHOOD(NULL, 0.5158459230964105) THEN x'3c3f' COLLATE BINARY WHEN CAST('-1203541951' AS REAL) THEN (('')<<(NULL)) WHEN ((0.8709980316433752) BETWEEN (0.7296764529194195) AND (0.8222366773253451)) THEN ((0.8148500273725083) IS TRUE) ELSE CASE x''  WHEN 0.9376040549703598 THEN 0xfffffffff90b423c END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1820767911 sz=485336167 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE -1046066266  WHEN 0.14764906063082373 THEN 0.19448561016308452 ELSE '-548321962' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.8372799252312919)*(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=603255377 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json(x'f9c3'))AND(json_valid(-1168352219))))OR(CAST(0.552703696564002 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-705086863 2 -140998181 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1587060496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('732142809' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=171790343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1811324501 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-95833870'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1386437411 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '1617662762 sz=-1940167067 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET('-576211546'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-617864997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-157448169 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1656979546 4 sz=525421554'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=2099087766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (-7.06307639E8)) THEN ((((((((x'')AND(NULL)))OR(x'2174')))OR(NULL)))AND(x'')) WHEN ((NULL)LIKE(NULL)) THEN CAST(x'056d' AS NUMERIC) WHEN (((('')OR(x'')))AND('1620519997')) THEN '322928190' COLLATE BINARY ELSE (NOT ('1473352316')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0765056380625303; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1225614593') NOT BETWEEN ('j''V') AND (-0.0))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1907753397 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1340589845 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=495045792 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-190789924'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1122127029 1237102087'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN '' THEN 0Xffffffffc786aaf3 ELSE NULL END  WHEN (+ ('K(v--+An')) THEN 0.9544286126127737 COLLATE RTRIM WHEN ((NULL)+('')) THEN (((0.9206142588171624, x'899b', x'')) BETWEEN ((0.13957673026082007, 0.3216058707324466, 0.407566244023297)) AND (('	l玻', x'', -1.880250373E9))) WHEN (- (x'')) THEN (('-474747441') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-617807406')IS NOT(0.5372782590464917)) COLLATE NOCASE; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (0.1682330808482102 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)+('140224628')) THEN ((('s䶩')) BETWEEN ((0.061740223974746655)) AND ((''))) ELSE json_valid('64433191') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1308352600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1719815378 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '879058275 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7263199248011021 COLLATE NOCASE)OR(((((NULL)OR('XW+0%RY}A')))AND('-1')))))OR((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1823455537 0 sz=-1160212896'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '1382693458 sz=1603987063 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)OR(0.5222868067949895)))OR(0.5415112346089982)))AND('')))OR(0.8625352929817871)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1141120514'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.15635361060589514)%(NULL))) BETWEEN (UNLIKELY(NULL)) AND (((('-1167864983', x'', 0.8063368724819668))==((NULL, 1.25559901E9, -1231552407))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(0.17767663164381275)))AND(x''))) BETWEEN (CASE WHEN NULL THEN NULL END) AND (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1235456430 sz=-1122127029 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1754569830'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '439840594'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('Qc'))) BETWEEN (0.7048787489786881 COLLATE RTRIM) AND ('翋>')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-448031545 sz=1523857219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1722023125 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('.f', x'', '')) NOT BETWEEN ((((NULL)>=(-3.27735142E8)), (- (x'')), (- (0.24378293499582226)))) AND ((((NULL) NOT NULL), (('-1314811501') BETWEEN (x'2be8') AND (-9.03334061E8)), CASE x''  WHEN NULL THEN 1271184608 ELSE x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND(((x'b58e')>>(x'')))))AND((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((x'')AND(x'')))AND(0.37871691447066014)), CASE NULL  WHEN NULL THEN '*)N%*I' ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1235456430 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1454402149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE NOCASE) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-462223480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('0.7515730178598163')OR(CASE WHEN x'' THEN NULL ELSE -1.03841664E9 END)))OR(((1553353294) NOTNULL))))OR(0.04160935737877969 COLLATE RTRIM)))AND(0.757237991918517)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1458468577 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1620519997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (-1361624239)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2145869872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-872165319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((NULL)AND(x'')))OR(0.94036298386497)))AND('-1215624335')))AND('1117689551')))OR(NULL)))AND(0.4639432746916712)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1659467550 2 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) BETWEEN ((((x'')) BETWEEN ((NULL)) AND ((0X31f30e1f)))) AND (CASE x''  WHEN x'' THEN '-1111854242' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-117002071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.0878995810498524)%('0.46913160782952157'))))>=(((x'' IN (x'', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '728226815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('', x'', -1405463370, x'')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=-974680179 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1400929747 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (0.740435624637331))) NOT BETWEEN ((1208139644 IN ())) AND (1154155497 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('Y/MJ*,' IN ())))<(('i鹣''#5'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-989805809 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1392193129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -465879510; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-949968805 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=834395913 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1268227074')IS NOT('835692062')))<((('728226815')/('0.17881013325999107')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-149142735 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-557578700 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('b') NOT NULL), ((0.6324094400382732) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 sz=-1883905974'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-958163483 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-479478223 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-2013266589 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('7I뺞X')IS(((0X3c2f9e88) BETWEEN (7.59253068E8) AND ('H鿰')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (-1904550500))) NOT BETWEEN ((NOT (''))) AND (CAST(1.617662762E9 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1224543219 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('-903334061')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1120546298'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1226139377 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-1131038476 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-856067795 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(CAST(NULL AS REAL), (- (1.215662989E9)), (((0.6396629968342915, 0.30755622681869677, NULL, NULL, '0.7708925912594691')) BETWEEN ((0x60972c3d, NULL, 0.9109017287860789, x'c59a', x'')) AND (('玄N', '?', 'rr', 0.8739706436212801, '-1361624239'))), (NULL IN ())); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1897404798 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1981072912 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7276947054303137 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-903334061'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '4 sz=-709187163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN NULL THEN '0.08482675494061209' ELSE NULL END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4c70'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-720246945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') IS FALSE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1287217708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 -1426505300 sz=-590813802'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-162947485)>>('1770987736')))AND(((0xffffffffc4cbc3f1) NOTNULL))))OR(UNLIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1144835300')|(x'')))<=(((((x'')OR(x'')))AND(0.8354941035847644)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-305186781 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (x'02a2')) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 sz=460466509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1094531796 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1814211692 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1235456430 -632781081 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(x'') AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x2d133725) BETWEEN ('1208139644') AND ('0.7515730178598163')))<<(((NULL)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7937099546685924; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN (x'', 0xffffffff8ebc992e))  WHEN DATE(NULL, x'', x'', x'', '1911881252', NULL, NULL) THEN ((NULL) IS TRUE) ELSE CAST(x'' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1322057896 -1880250373 sz=1298665201'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1177804235 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)+('1941337144')), (((NULL)) BETWEEN ((x'0b50')) AND (('ML'))), '288736661' COLLATE NOCASE))=(((x'002b' IN ()), CAST(0x48b841c4 AS NUMERIC), CAST('%5h\n' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.5426179523092962' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=372001767 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-964140011 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(NULL, ((((x'')AND(NULL)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1911881252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-706307639 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOTNULL)))>((((0X342edbcf)+('-1897404798'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1622747033 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.5125763243764571 THEN 0.5120202325590627 END)AND((x'5ebe' IN ()))))AND(((((((((x'')OR(x'e1a6')))OR('')))OR('-365102685')))AND('1080629343')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=1811324501'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-632781081' AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.28521565079264644) IS TRUE)))>=(((-758552080 IN (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=662938407 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT '501464390', x'')) NOT BETWEEN (x'' COLLATE RTRIM) AND (QUOTE(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-478119914 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(0.23113418797849228)))OR('')))AND('0p')))OR(1287217708)))<((('-1043847452')<(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1754569830 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '-576395472 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('I*F\S0')OR(0.8844175685797615)))AND(NULL))) BETWEEN (('1136391547' IN ())) AND (((1.7976931348623157E308) NOT BETWEEN ('501464390') AND ('<')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-1054347896 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('z') ISNULL))|((- ('R,')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('u鏈S%\nu!' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Y\nMD') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x31c61940 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1881854022 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1122127029 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1501450737 -1257173217 sz=784296100 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1223930974 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('611636824')==(0.06226689421066567)))AND(((x'') NOT NULL))))AND((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1755578700)>=('S8')))+((((('')OR('1468533958')))OR('2M*wq6IG')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '187524245', x'', '662938407', NULL)) BETWEEN ((CASE 1.473352316E9  WHEN '-242713400' THEN '' WHEN NULL THEN x'' WHEN NULL THEN NULL ELSE '#6' END, (((x'', -1209643239, -1419022896)) NOT BETWEEN ((x'', x'', x'a023')) AND ((x'1160856d', '-1894856026', 0.27242147771608105))), (NOT (0xffffffffe46853c2)), (('-2056346229')%(0.1408804827931167)), (((x''))<((NULL))))) AND ((NULL COLLATE BINARY, (((((((('2054186100')AND(0Xffffffff9bd183a9)))OR('oJ')))AND(NULL)))OR(0.3051035578690373)), NULL COLLATE RTRIM, ((NULL)IS(x'')), (('354846055')*(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0 sz=534677656 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=-264866195'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((0.7501563242968055)<>(x'')), '1403945724' COLLATE BINARY, ((NULL)GLOB(x'06a0')), ((NULL)-(1))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-1418724905', 'ⴆ'))>=((NULL, x'', 0.9117774240859337))))<=((0xfffffffff10a6eb6 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=2068377409 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN ('') AND (0.6324825446728444)))AND((('CAZq9턫') ISNULL))))OR((('Om4<l!灩')LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1320149053 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY((x'' IN ('0.41328426242275296', '-1594450090'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffcc5374e8 COLLATE BINARY)&(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-758552080 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=1046959340 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0X779c6915) AND (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1317336271 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-903334061 sz=1792289606 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-860835106'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-889914470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('-896576307')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-566071990 sz=-1967367405 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(281080391 AS TEXT))*(CASE WHEN x'' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x71f4fe24) IS FALSE))<=(((((((((x'')AND('-1443497272')))AND(NULL)))AND(x'')))AND(1.287217708E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('JNRP I{6+'))<=(('\nZkp7A{	'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-228042215 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1620519997 0 487799952'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1844961764'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=1611064310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 -2119081316 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '2 sz=-235950962 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '0 0 sz=1528800861 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.32966870873946663  WHEN '1195225910' THEN NULL WHEN NULL THEN -1.120546298E9 WHEN x'' THEN '' ELSE 519150236 END)OR((- ('-2024452320')))))AND(((6.62938407E8)AND('0.0')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1902577451'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '-1122127029 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('<ꀺ\rUk5')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' sz=-2000089352 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' sz=837779815'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-432191584') NOT BETWEEN (0.7373883765371849) AND (0xffffffff856ea58b)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1951558025 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert(0.31998500187481016, x'', NULL)) BETWEEN (((676503454)+(210689613))) AND (CAST(649114322 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '37244625 sz=-1088489864 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LAST_INSERT_ROWID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1602716272' COLLATE NOCASE)>((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', '2 0 sz=-951185464 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1156056879'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-729832807')) BETWEEN (('c#\\[9')) AND ((x'b882eae4'))))IS(CASE WHEN '83912603' THEN '-87162138' WHEN 984941447 THEN 'k' WHEN '0.04872533103550314' THEN x'' ELSE 0.9595811423459567 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1507969764') BETWEEN (NULL) AND (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1528800861'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', '912343167 0 sz=1722023125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (((x'')) NOT BETWEEN ((-6.17864997E8)) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')==(0.10861251787671344)))AND(x'')))AND(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(((((((((0.13607115803961445)AND(1.722023125E9)))AND(0.9567808841038589)))OR(0.3064137300364125)))AND(0xffffffffc61a9a7f))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=699037945'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1954376156'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i73', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(0.0051528471566442136 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (UPPER(0.9060684430523225))); -- 0ms;
ANALYZE i73; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(x'', 0.17913802841107973) WHERE (((NOT (t1.c0))) IS TRUE); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c40; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c40)=(NULL, x'') WHERE (((((((((+ (t0.c0)))OR(((t0.c0)>>(NULL)))))AND(t0.c0)))AND((t0.c40 IN ()))))AND(t0.c0 COLLATE BINARY)); -- 0ms;
UPDATE t0 SET c2=NULL WHERE ((((t0.c0) IS TRUE))IS(json_array_length(t0.c0, t0.c40))); -- 0ms;
REINDEX i73; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.5124865423788069), (''), ('981300157'); -- 0ms;
INSERT OR FAIL INTO t0(c2, c0, c40) VALUES (NULL, '-1361624239', 0.246441919277278) ON CONFLICT DO NOTHING; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES ('y{khe]z6g'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c40, c0) VALUES (0.1098850406469426, '0.9109017287860789'); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES (x''), (''), (-2.056346229E9); -- 0ms;
UPDATE OR IGNORE t0 SET c2=x'faf6', c2=NULL WHERE CASE ((t0.c40)-(t0.c0))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) END; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c45; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (1154254590); -- 3ms;
ALTER TABLE t0 RENAME COLUMN c45 TO c92; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('1945709216') WHERE (((((t0.c0))>((t0.c0)))) NOT NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('876175165'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES ('⧃'), (NULL), (x''), (-1.12891498E8), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
UPDATE t0 SET (c92)=(x''); -- 0ms;
ALTER TABLE t1 ADD COLUMN c76 INT; -- 1ms;
UPDATE OR ABORT t0 SET (c92)=(622598959); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.30454507407214215, 1805169365, 0.12829705742536546), (-1.12891498E8, NULL, x'fded'), ('417304913', '쥭*', ''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 0.0051528471566442136, '757100376'), (NULL, x'53415be9', NULL), ('0.5933800822815907', -1122127029, '-666834978'); -- 0ms;
UPDATE OR REPLACE t0 SET c0=x'8831'; -- 0ms;
UPDATE t1 SET c76=NULL, c0=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 7ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=x'' WHERE SQLITE_SOURCE_ID(); -- 0ms;
CREATE UNIQUE INDEX i23 ON t0(((((c40)||(c45)))+(CASE c0  WHEN 0X3183af6 THEN c0 WHEN c0 THEN c0 WHEN NULL THEN c40 WHEN c40 THEN c0 WHEN x'' THEN c40 ELSE c40 END)) COLLATE NOCASE,((-1.23545643E9 COLLATE RTRIM)=(((c45)*(c0)))) COLLATE RTRIM,((((((((((c45)OR(c40)))OR(c45)))AND(c40)))OR(0x71f4fe24)))&(((((c45)OR(c0)))AND(c45)))) COLLATE BINARY); -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.6704317712158832), (0.19443463679881412), (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x'c2877294'), (0.23868910195757054), ('-112837667'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c0)=(NULL) WHERE (~ (0.035112522418474734)); -- 0ms;
UPDATE t1 SET (c0, c0, c0, c0)=(NULL, x'', '-87162138', x''); -- 0ms;
DELETE FROM t0 WHERE (((((((((t0.c40)AND(t0.c40)))AND(t0.c45)))OR(t0.c0)))AND(t0.c45)) IN ()); -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL WHERE (t1.c0 IN ()); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (x''), (x''), (x'a58ccac4'); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c45 TO c64; -- 1ms;
INSERT OR ROLLBACK INTO t1 VALUES (0.19663792015092862), (NULL), (x'cde1'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c40) VALUES (TRIM(DISTINCT CAST(0.3479820230604337 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO t0(c40) VALUES (0.029978683558897767); -- 0ms;
UPDATE OR ABORT t0 SET c40=0.16059717732231393; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0='-1536917893', c0='L+a(]	'; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr2 AFTER UPDATE ON t1 FOR EACH ROW  BEGIN INSERT OR ROLLBACK INTO t0(c64) VALUES (x'499d');END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')%(-1e500)) THEN ((NULL)%('1603987063')) WHEN x'' COLLATE BINARY THEN NULL COLLATE NOCASE WHEN ((0.06686853618142896)LIKE(NULL)) THEN ((x'') NOTNULL) ELSE (((-1.516798005E9))>=(('0'))) END; -- 0ms;
INSERT OR IGNORE INTO t0(c40) VALUES ('1350146792'), (x''), (NULL); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL), (NULL), (x'c431'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''), (''), (x''); -- 0ms;
UPDATE OR IGNORE t1 SET c0='0.7708925912594691', c0='n8-'''; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('218330003'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c76 BLOB; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c40=1528800861; -- 1ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL); -- 1ms;
UPDATE t0 SET (c76)=('h퐗_') WHERE ((CAST(t0.c64 AS BLOB)) IS FALSE); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO t0(c64, c76, c40) VALUES (0xffffffffbdb9a3a1, x'd14f', NULL), (x'', NULL, 1268368966), ('-1988635795', x'', 0.8813040302367526); -- 1ms;
INSERT OR REPLACE INTO t1(c0) VALUES (NULL), ('Z?'), (x''); -- 1ms;
UPDATE OR IGNORE t0 SET (c64)=(x''); -- 1ms;
REINDEX BINARY; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE OR IGNORE t0 SET c76=0.5548637229026185 WHERE (('-1516798005') IS TRUE) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (x'71b0'); -- 0ms;
UPDATE OR REPLACE t0 SET (c40)=(0X8817d69) WHERE (~ (((0.9643557247266454) IS TRUE))); -- 1ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-845105196 unordered'); -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT DISTINCT ((((t0.c0)=(t0.c40))) ISNULL), ((CASE WHEN t0.c40 THEN t0.c40 END) IS FALSE), COUNT(((t0.c76) BETWEEN (t0.c0) AND ('9+*'))) FROM t0; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
INSERT OR ROLLBACK INTO t0(c64, c40) VALUES (-843064277, 'cD翭c'); -- 1ms;
INSERT OR IGNORE INTO t0(c40) VALUES ('311175558'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (' -%J8B8'), (0.30510347246583536), (1208139644); -- 1ms;
INSERT OR IGNORE INTO t0(c40) VALUES (''); -- 0ms;
END; -- 0ms;
UPDATE OR ROLLBACK t0 SET c76='u''wIfk䛺鉼>', c0=x''; -- 2ms;
UPDATE OR FAIL t0 SET (c64)=('257841887'); -- 0ms;
UPDATE OR REPLACE t0 SET c76=x'cb7c', c40='U-' WHERE CAST(((t0.c0)<(t0.c0)) AS TEXT); -- 0ms;
UPDATE OR IGNORE t0 SET c40=NULL WHERE (+ (t0.c40 COLLATE BINARY)); -- 0ms;
UPDATE t0 SET (c40, c64)=(0X3b267376, '471947220'); -- 0ms;
UPDATE t0 SET (c0)=(NULL) WHERE (((NOT (t0.c0)))!=(((t0.c64)>=(t0.c0)))); -- 0ms;
INSERT OR IGNORE INTO t0(c76) VALUES (x'3bf7'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c40, c64) VALUES (((((x'')IS('g''<S'))) NOT BETWEEN ('鎢b') AND (CAST(NULL AS NUMERIC))), x'4df1'), (-1150579196, 0.8703098201913505), (0xffffffffe6c87845, NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c40) VALUES (0x74a11614); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c76)=(0.9119114149923495) WHERE (((t0.c40, NULL, t0.c0, t0.c0, t0.c76)) NOT BETWEEN ((((t0.c40) IS FALSE), (((t0.c40))<=((t0.c0))), CASE t0.c76  WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END, 0Xffffffff8ece4c0a, ((t0.c64)>>(t0.c64)))) AND ((((t0.c0)OR(t0.c0)), ((((t0.c40)OR(t0.c40)))AND(t0.c76)), ((((t0.c64)AND(t0.c64)))OR(t0.c40)), t0.c64, ((NULL)<<(t0.c76))))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-1277635944); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, 0.012945965099699475, NULL, x''), ('1083281465', 'g\Gq|', '-638764221', x'3db4'), ('757631114', 0.5340496471264133, -2056346229, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((v0.c2) ISNULL) COLLATE NOCASE);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c64 ELSE t0.c0 END) NOT NULL)) ORDER BY (x'599a' IN (t0.c64, t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c40 THEN t0.c64 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (x'599a' IN (t0.c64, t0.c0)) ASC);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c64 ELSE t0.c0 END) NOT NULL)) ORDER BY (x'599a' IN (t0.c64, t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c40 THEN t0.c64 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (x'599a' IN (t0.c64, t0.c0)) ASC);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c64 ELSE t0.c0 END) NOT NULL)) ORDER BY (x'599a' IN (t0.c64, t0.c0)) ASC;
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((('Sb{V4~!聂') NOT BETWEEN (v0.c2) AND (t0.c0))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c64)<(x'')))) WHERE (((((((((((t0.c76) BETWEEN (t0.c0) AND (v0.c1)))AND(QUOTE(t0.c64))))AND(((((t0.c64)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(v0.c2))) ORDER BY (- (((x'ae49') NOTNULL)))  NULLS LAST, '1795346532';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c76) BETWEEN (t0.c0) AND (v0.c1)))AND(QUOTE(t0.c64))))AND(((((t0.c64)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(v0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((('Sb{V4~!聂') NOT BETWEEN (v0.c2) AND (t0.c0))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c64)<(x'')))) ORDER BY (- (((x'ae49') NOTNULL)))  NULLS LAST, '1795346532');
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((('Sb{V4~!聂') NOT BETWEEN (v0.c2) AND (t0.c0))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c64)<(x'')))) WHERE (((((((((((t0.c76) BETWEEN (t0.c0) AND (v0.c1)))AND(QUOTE(t0.c64))))AND(((((t0.c64)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(v0.c2))) ORDER BY (- (((x'ae49') NOTNULL)))  NULLS LAST, '1795346532';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c76) BETWEEN (t0.c0) AND (v0.c1)))AND(QUOTE(t0.c64))))AND(((((t0.c64)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(v0.c2))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((('Sb{V4~!聂') NOT BETWEEN (v0.c2) AND (t0.c0))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c64)<(x'')))) ORDER BY (- (((x'ae49') NOTNULL)))  NULLS LAST, '1795346532');
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((('Sb{V4~!聂') NOT BETWEEN (v0.c2) AND (t0.c0))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c64)<(x'')))) WHERE (((((((((((t0.c76) BETWEEN (t0.c0) AND (v0.c1)))AND(QUOTE(t0.c64))))AND(((((t0.c64)OR(t0.c0)))OR(t0.c0)))))AND(t0.c0 COLLATE NOCASE)))OR(v0.c2))) ORDER BY (- (((x'ae49') NOTNULL)))  NULLS LAST, '1795346532';
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c64)) BETWEEN ((t0.c64, t0.c76, t0.c64)) AND ((t0.c76, t0.c0, t0.c0)))) NOT BETWEEN ('켧\sG' COLLATE RTRIM) AND ((~ (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c64)) BETWEEN ((t0.c64, t0.c76, t0.c64)) AND ((t0.c76, t0.c0, t0.c0)))) NOT BETWEEN ('켧\sG' COLLATE RTRIM) AND ((~ (t0.c40))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c64)) BETWEEN ((t0.c64, t0.c76, t0.c64)) AND ((t0.c76, t0.c0, t0.c0)))) NOT BETWEEN ('켧\sG' COLLATE RTRIM) AND ((~ (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, t0.c64)) BETWEEN ((t0.c64, t0.c76, t0.c64)) AND ((t0.c76, t0.c0, t0.c0)))) NOT BETWEEN ('켧\sG' COLLATE RTRIM) AND ((~ (t0.c40))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c64)) BETWEEN ((t0.c64, t0.c76, t0.c64)) AND ((t0.c76, t0.c0, t0.c0)))) NOT BETWEEN ('켧\sG' COLLATE RTRIM) AND ((~ (t0.c40)))));
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c2)))LIKE((NOT (v0.c1))))) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c2)))LIKE((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c2)))LIKE((NOT (v0.c1))))) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c2)))LIKE((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c2)))LIKE((NOT (v0.c1))))) ORDER BY ((((v0.c0) IS FALSE)) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c76))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c76))) IS FALSE)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c76))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c76))) IS FALSE)) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c76))) IS FALSE));
SELECT * FROM t0, v0 WHERE (((((t0.c0) NOT NULL)) IS TRUE)) ORDER BY ((((((x'')OR(v0.c0)))OR(v0.c0)))LIKE((t0.c64 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((x'')OR(v0.c0)))OR(v0.c0)))LIKE((t0.c64 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c0) NOT NULL)) IS TRUE)) ORDER BY ((((((x'')OR(v0.c0)))OR(v0.c0)))LIKE((t0.c64 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((x'')OR(v0.c0)))OR(v0.c0)))LIKE((t0.c64 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c0) NOT NULL)) IS TRUE)) ORDER BY ((((((x'')OR(v0.c0)))OR(v0.c0)))LIKE((t0.c64 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) IS FALSE)) BETWEEN (0Xffffffffabecbb51) AND (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE)) BETWEEN (0Xffffffffabecbb51) AND (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) IS FALSE)) BETWEEN (0Xffffffffabecbb51) AND (((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS FALSE)) BETWEEN (0Xffffffffabecbb51) AND (((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2) IS FALSE)) BETWEEN (0Xffffffffabecbb51) AND (((v0.c1)>>(v0.c1)))));
SELECT * FROM t0 WHERE (HEX(DISTINCT t0.c40));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT t0.c40)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (HEX(DISTINCT t0.c40));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT t0.c40)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (HEX(DISTINCT t0.c40));
SELECT COUNT(*) FROM v0 WHERE (((('1220035012')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) AND (((((v0.c2, v0.c2, v0.c2))=((v0.c1, v0.c1, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((('1220035012')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) AND (((((v0.c2, v0.c2, v0.c2))=((v0.c1, v0.c1, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('1220035012')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) AND (((((v0.c2, v0.c2, v0.c2))=((v0.c1, v0.c1, v0.c0)))))));
SELECT SUM(count) FROM (SELECT ((((('1220035012')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) AND (((((v0.c2, v0.c2, v0.c2))=((v0.c1, v0.c1, v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('1220035012')) BETWEEN ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) AND (((((v0.c2, v0.c2, v0.c2))=((v0.c1, v0.c1, v0.c0)))))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c2)AND(v0.c0)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c2)AND(v0.c0)))AND(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c2)AND(v0.c0)))AND(v0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c2)AND(v0.c0)))AND(v0.c1)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END THEN v0.c0 COLLATE RTRIM ELSE ((((v0.c2)AND(v0.c0)))AND(v0.c1)) END);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (CASE v0.c2  WHEN t0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (CASE v0.c2  WHEN t0.c0 THEN NULL END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (CASE v0.c2  WHEN t0.c0 THEN NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (CASE v0.c2  WHEN t0.c0 THEN NULL END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((t0.c0) BETWEEN (CAST(v0.c0 AS REAL)) AND (CASE v0.c2  WHEN t0.c0 THEN NULL END)));
SELECT * FROM t0, v0 WHERE (x'') ORDER BY t0.c0, CAST(t0.c40 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY t0.c0, CAST(t0.c40 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (x'') ORDER BY t0.c0, CAST(t0.c40 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY t0.c0, CAST(t0.c40 AS TEXT) COLLATE BINARY  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (x'') ORDER BY t0.c0, CAST(t0.c40 AS TEXT) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (v0.c2);
SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)AND(v0.c1)))OR(t0.c76))) BETWEEN (t0.c0) AND (((((NULL)AND(NULL)))OR(t0.c0))))) ORDER BY CASE t0.c64 COLLATE NOCASE  WHEN ((t0.c0)<=(t0.c64)) THEN (t0.c76 IN (t0.c64)) ELSE CASE WHEN v0.c1 THEN t0.c76 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c1)))OR(t0.c76))) BETWEEN (t0.c0) AND (((((NULL)AND(NULL)))OR(t0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 ORDER BY CASE t0.c64 COLLATE NOCASE  WHEN ((t0.c0)<=(t0.c64)) THEN (t0.c76 IN (t0.c64)) ELSE CASE WHEN v0.c1 THEN t0.c76 END END  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)AND(v0.c1)))OR(t0.c76))) BETWEEN (t0.c0) AND (((((NULL)AND(NULL)))OR(t0.c0))))) ORDER BY CASE t0.c64 COLLATE NOCASE  WHEN ((t0.c0)<=(t0.c64)) THEN (t0.c76 IN (t0.c64)) ELSE CASE WHEN v0.c1 THEN t0.c76 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c1)))OR(t0.c76))) BETWEEN (t0.c0) AND (((((NULL)AND(NULL)))OR(t0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 ORDER BY CASE t0.c64 COLLATE NOCASE  WHEN ((t0.c0)<=(t0.c64)) THEN (t0.c76 IN (t0.c64)) ELSE CASE WHEN v0.c1 THEN t0.c76 END END  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((((v0.c0)AND(v0.c1)))OR(t0.c76))) BETWEEN (t0.c0) AND (((((NULL)AND(NULL)))OR(t0.c0))))) ORDER BY CASE t0.c64 COLLATE NOCASE  WHEN ((t0.c0)<=(t0.c64)) THEN (t0.c76 IN (t0.c64)) ELSE CASE WHEN v0.c1 THEN t0.c76 END END  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE ('1191434653');
SELECT SUM(count) FROM (SELECT (('1191434653') IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ('1191434653');
SELECT SUM(count) FROM (SELECT (('1191434653') IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ('1191434653');
SELECT COUNT(*) FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE RTRIM))) ORDER BY (~ (0xffffffffd06f8cb9))  NULLS LAST, CAST(CAST(v0.c1 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c2, v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (~ (0xffffffffd06f8cb9))  NULLS LAST, CAST(CAST(v0.c1 AS BLOB) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE RTRIM))) ORDER BY (~ (0xffffffffd06f8cb9))  NULLS LAST, CAST(CAST(v0.c1 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c2, v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (~ (0xffffffffd06f8cb9))  NULLS LAST, CAST(CAST(v0.c1 AS BLOB) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE RTRIM))) ORDER BY (~ (0xffffffffd06f8cb9))  NULLS LAST, CAST(CAST(v0.c1 AS BLOB) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((v0.c2)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN v0.c1 END)) AND ((v0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN v0.c1 END)) AND ((v0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((v0.c2)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN v0.c1 END)) AND ((v0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN v0.c1 END)) AND ((v0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((((v0.c2)) BETWEEN ((CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c0 THEN v0.c1 END)) AND ((v0.c1 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c64 IN ()))*(((t0.c76) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c64 IN ()))*(((t0.c76) IS FALSE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c64 IN ()))*(((t0.c76) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c64 IN ()))*(((t0.c76) IS FALSE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((t0.c64 IN ()))*(((t0.c76) IS FALSE))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c64) ORDER BY CAST((t0.c64 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY CAST((t0.c64 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c64) ORDER BY CAST((t0.c64 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY CAST((t0.c64 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (t0.c64) ORDER BY CAST((t0.c64 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (0x6238c120);
SELECT SUM(count) FROM (SELECT ((0x6238c120) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (0x6238c120);
SELECT SUM(count) FROM (SELECT ((0x6238c120) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (0x6238c120);
SELECT * FROM v0 WHERE (ABS(CASE WHEN x'' THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN x'' THEN v0.c2 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(CASE WHEN x'' THEN v0.c2 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE WHEN x'' THEN v0.c2 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (ABS(CASE WHEN x'' THEN v0.c2 END));
SELECT COUNT(*) FROM t0, v0 WHERE (((COALESCE(t0.c40, 0.7131437431386246, v0.c0, t0.c64, t0.c76, v0.c0))OR((NOT (v0.c2))))) ORDER BY ((((((t0.c40)AND(v0.c0)))AND(t0.c40))) NOT BETWEEN ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((t0.c64, v0.c0, v0.c0)) AND ((v0.c2, t0.c0, v0.c2)))) AND (((v0.c2)|(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(t0.c40, 0.7131437431386246, v0.c0, t0.c64, t0.c76, v0.c0))OR((NOT (v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c40)AND(v0.c0)))AND(t0.c40))) NOT BETWEEN ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((t0.c64, v0.c0, v0.c0)) AND ((v0.c2, t0.c0, v0.c2)))) AND (((v0.c2)|(t0.c76)))));
SELECT COUNT(*) FROM t0, v0 WHERE (((COALESCE(t0.c40, 0.7131437431386246, v0.c0, t0.c64, t0.c76, v0.c0))OR((NOT (v0.c2))))) ORDER BY ((((((t0.c40)AND(v0.c0)))AND(t0.c40))) NOT BETWEEN ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((t0.c64, v0.c0, v0.c0)) AND ((v0.c2, t0.c0, v0.c2)))) AND (((v0.c2)|(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(t0.c40, 0.7131437431386246, v0.c0, t0.c64, t0.c76, v0.c0))OR((NOT (v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c40)AND(v0.c0)))AND(t0.c40))) NOT BETWEEN ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((t0.c64, v0.c0, v0.c0)) AND ((v0.c2, t0.c0, v0.c2)))) AND (((v0.c2)|(t0.c76)))));
SELECT COUNT(*) FROM t0, v0 WHERE (((COALESCE(t0.c40, 0.7131437431386246, v0.c0, t0.c64, t0.c76, v0.c0))OR((NOT (v0.c2))))) ORDER BY ((((((t0.c40)AND(v0.c0)))AND(t0.c40))) NOT BETWEEN ((((v0.c2, v0.c1, v0.c2)) NOT BETWEEN ((t0.c64, v0.c0, v0.c0)) AND ((v0.c2, t0.c0, v0.c2)))) AND (((v0.c2)|(t0.c76))));
SELECT * FROM v0 WHERE (((LIKELIHOOD(x'10ff', 0.9355907820682785))>((v0.c1 IN ())))) ORDER BY ((v0.c2)=(v0.c0)) COLLATE BINARY  NULLS FIRST, ((UPPER(v0.c0))<<((NOT (v0.c1)))) DESC  NULLS FIRST, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(x'10ff', 0.9355907820682785))>((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)==(v0.c0)) COLLATE BINARY  NULLS FIRST, ((UPPER(v0.c0))<<((NOT (v0.c1)))) DESC  NULLS FIRST, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c2)) AS TEXT)  NULLS LAST);
SELECT * FROM v0 WHERE (((LIKELIHOOD(x'10ff', 0.9355907820682785))>((v0.c1 IN ())))) ORDER BY ((v0.c2)=(v0.c0)) COLLATE BINARY  NULLS FIRST, ((UPPER(v0.c0))<<((NOT (v0.c1)))) DESC  NULLS FIRST, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(x'10ff', 0.9355907820682785))>((v0.c1 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)==(v0.c0)) COLLATE BINARY  NULLS FIRST, ((UPPER(v0.c0))<<((NOT (v0.c1)))) DESC  NULLS FIRST, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c2)) AS TEXT)  NULLS LAST);
SELECT * FROM v0 WHERE (((LIKELIHOOD(x'10ff', 0.9355907820682785))>((v0.c1 IN ())))) ORDER BY ((v0.c2)=(v0.c0)) COLLATE BINARY  NULLS FIRST, ((UPPER(v0.c0))<<((NOT (v0.c1)))) DESC  NULLS FIRST, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c2)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((0.5684628212304965) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5684628212304965) NOT NULL)) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((0.5684628212304965) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5684628212304965) NOT NULL)) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((0.5684628212304965) NOT NULL));
SELECT ALL * FROM t0 CROSS JOIN v0 ON (t0.c0 IN (NULL, CASE WHEN v0.c1 THEN t0.c0 END)) WHERE (CASE WHEN (((t0.c76)) BETWEEN ((t0.c40)) AND ((0x2783a327))) THEN CAST(v0.c0 AS REAL) ELSE ((((t0.c76)AND(t0.c76)))AND(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c76)) BETWEEN ((t0.c40)) AND ((0x2783a327))) THEN CAST(v0.c0 AS REAL) ELSE ((((t0.c76)AND(t0.c76)))AND(x'')) END) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (t0.c0 IN (NULL, CASE WHEN v0.c1 THEN t0.c0 END)));
SELECT ALL * FROM t0 CROSS JOIN v0 ON (t0.c0 IN (NULL, CASE WHEN v0.c1 THEN t0.c0 END)) WHERE (CASE WHEN (((t0.c76)) BETWEEN ((t0.c40)) AND ((0x2783a327))) THEN CAST(v0.c0 AS REAL) ELSE ((((t0.c76)AND(t0.c76)))AND(x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c76)) BETWEEN ((t0.c40)) AND ((0x2783a327))) THEN CAST(v0.c0 AS REAL) ELSE ((((t0.c76)AND(t0.c76)))AND(x'')) END) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (t0.c0 IN (NULL, CASE WHEN v0.c1 THEN t0.c0 END)));
SELECT ALL * FROM t0 CROSS JOIN v0 ON (t0.c0 IN (NULL, CASE WHEN v0.c1 THEN t0.c0 END)) WHERE (CASE WHEN (((t0.c76)) BETWEEN ((t0.c40)) AND ((0x2783a327))) THEN CAST(v0.c0 AS REAL) ELSE ((((t0.c76)AND(t0.c76)))AND(x'')) END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN v0.c0 THEN t0.c64 WHEN t0.c76 THEN '399183609' WHEN v0.c1 THEN t0.c64 WHEN t0.c76 THEN t0.c64 WHEN 0.03837659153472395 THEN v0.c1 END)OR(NULL)))AND((+ (t0.c0)))))AND(v0.c2 COLLATE BINARY)))AND((t0.c0 IN ()))) WHERE (t0.c0) ORDER BY 0.46913160782952157 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN v0.c0 THEN t0.c64 WHEN t0.c76 THEN '399183609' WHEN v0.c1 THEN t0.c64 WHEN t0.c76 THEN t0.c64 WHEN 0.03837659153472395 THEN v0.c1 END)OR(NULL)))AND((+ (t0.c0)))))AND(v0.c2 COLLATE BINARY)))AND((t0.c0 IN ()))) ORDER BY 0.46913160782952157 DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN v0.c0 THEN t0.c64 WHEN t0.c76 THEN '399183609' WHEN v0.c1 THEN t0.c64 WHEN t0.c76 THEN t0.c64 WHEN 0.03837659153472395 THEN v0.c1 END)OR(NULL)))AND((+ (t0.c0)))))AND(v0.c2 COLLATE BINARY)))AND((t0.c0 IN ()))) WHERE (t0.c0) ORDER BY 0.46913160782952157 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN v0.c0 THEN t0.c64 WHEN t0.c76 THEN '399183609' WHEN v0.c1 THEN t0.c64 WHEN t0.c76 THEN t0.c64 WHEN 0.03837659153472395 THEN v0.c1 END)OR(NULL)))AND((+ (t0.c0)))))AND(v0.c2 COLLATE BINARY)))AND((t0.c0 IN ()))) ORDER BY 0.46913160782952157 DESC  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((CASE WHEN v0.c0 THEN t0.c64 WHEN t0.c76 THEN '399183609' WHEN v0.c1 THEN t0.c64 WHEN t0.c76 THEN t0.c64 WHEN 0.03837659153472395 THEN v0.c1 END)OR(NULL)))AND((+ (t0.c0)))))AND(v0.c2 COLLATE BINARY)))AND((t0.c0 IN ()))) WHERE (t0.c0) ORDER BY 0.46913160782952157 DESC  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN t0 ON (((t0.c64)+(v0.c1)) IN ()) WHERE ('-41381795') ORDER BY (((NULL, json_insert(t0.c40, v0.c2, v0.c2), t0.c0 COLLATE BINARY))>=(((NOT (v0.c1)), 0.6282931765926982 COLLATE RTRIM, ((t0.c64) IS FALSE)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-41381795') IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((t0.c64)+(v0.c1)) IN ()) ORDER BY (((NULL, json_insert(t0.c40, v0.c2, v0.c2), t0.c0 COLLATE BINARY))>=(((NOT (v0.c1)), 0.6282931765926982 COLLATE RTRIM, ((t0.c64) IS FALSE)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN t0 ON (((t0.c64)+(v0.c1)) IN ()) WHERE ('-41381795') ORDER BY (((NULL, json_insert(t0.c40, v0.c2, v0.c2), t0.c0 COLLATE BINARY))>=(((NOT (v0.c1)), 0.6282931765926982 COLLATE RTRIM, ((t0.c64) IS FALSE)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-41381795') IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((t0.c64)+(v0.c1)) IN ()) ORDER BY (((NULL, json_insert(t0.c40, v0.c2, v0.c2), t0.c0 COLLATE BINARY))>=(((NOT (v0.c1)), 0.6282931765926982 COLLATE RTRIM, ((t0.c64) IS FALSE)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN t0 ON (((t0.c64)+(v0.c1)) IN ()) WHERE ('-41381795') ORDER BY (((NULL, json_insert(t0.c40, v0.c2, v0.c2), t0.c0 COLLATE BINARY))>=(((NOT (v0.c1)), 0.6282931765926982 COLLATE RTRIM, ((t0.c64) IS FALSE)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (t0.c0) AND (',T'))))) ORDER BY CAST(t0.c76 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (t0.c0) AND (',T'))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c76 AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (t0.c0) AND (',T'))))) ORDER BY CAST(t0.c76 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (t0.c0) AND (',T'))))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c76 AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1 IN ())) BETWEEN (v0.c0) AND (((v0.c0) BETWEEN (t0.c0) AND (',T'))))) ORDER BY CAST(t0.c76 AS BLOB)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c40, t0.c40))==((t0.c0, t0.c64, t0.c40))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40, t0.c40, t0.c40))==((t0.c0, t0.c64, t0.c40))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c40, t0.c40))==((t0.c0, t0.c64, t0.c40))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40, t0.c40, t0.c40))==((t0.c0, t0.c64, t0.c40))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c40, t0.c40, t0.c40))==((t0.c0, t0.c64, t0.c40))) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c2 IN ()))<=(x''))) ORDER BY ABS((((t0.c40, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, '-893942099', t0.c40)) AND ((t0.c64, t0.c0, t0.c64))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))<=(x''))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS((((t0.c40, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, '-893942099', t0.c40)) AND ((t0.c64, t0.c0, t0.c64)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c2 IN ()))<=(x''))) ORDER BY ABS((((t0.c40, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, '-893942099', t0.c40)) AND ((t0.c64, t0.c0, t0.c64))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))<=(x''))) IS TRUE)  as count FROM t0, v0 ORDER BY ABS((((t0.c40, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, '-893942099', t0.c40)) AND ((t0.c64, t0.c0, t0.c64)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c2 IN ()))<=(x''))) ORDER BY ABS((((t0.c40, v0.c1, v0.c2)) NOT BETWEEN ((t0.c0, '-893942099', t0.c40)) AND ((t0.c64, t0.c0, t0.c64))));
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)>>(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)>>(NULL)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)>>(NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)>>(NULL)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)>>(NULL)) IN ()));
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c1)) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((NOT (v0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c64, t0.c0, t0.c64)) NOT BETWEEN ((t0.c76, t0.c64, t0.c64)) AND ((t0.c0, t0.c40, t0.c64)))) NOT NULL)) ORDER BY v0.c2  NULLS FIRST, ((t0.c0)%(t0.c40)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c64, t0.c0, t0.c64)) NOT BETWEEN ((t0.c76, t0.c64, t0.c64)) AND ((t0.c0, t0.c40, t0.c64)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2  NULLS FIRST, ((t0.c0)%(t0.c40)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c64, t0.c0, t0.c64)) NOT BETWEEN ((t0.c76, t0.c64, t0.c64)) AND ((t0.c0, t0.c40, t0.c64)))) NOT NULL)) ORDER BY v0.c2  NULLS FIRST, ((t0.c0)%(t0.c40)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c64, t0.c0, t0.c64)) NOT BETWEEN ((t0.c76, t0.c64, t0.c64)) AND ((t0.c0, t0.c40, t0.c64)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2  NULLS FIRST, ((t0.c0)%(t0.c40)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((t0.c64, t0.c0, t0.c64)) NOT BETWEEN ((t0.c76, t0.c64, t0.c64)) AND ((t0.c0, t0.c40, t0.c64)))) NOT NULL)) ORDER BY v0.c2  NULLS FIRST, ((t0.c0)%(t0.c40)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM t0 WHERE ((NOT (0.7840932891522995)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7840932891522995))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (0.7840932891522995)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.7840932891522995))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (0.7840932891522995)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c40)>=(NULL)) COLLATE NOCASE) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c40)>=(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c40)>=(NULL)) COLLATE NOCASE) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c40)>=(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c40)>=(NULL)) COLLATE NOCASE) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT * FROM v0, t0 NOT INDEXED WHERE ((((v0.c1 IN ()))GLOB((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))GLOB((v0.c1 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 NOT INDEXED WHERE ((((v0.c1 IN ()))GLOB((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ()))GLOB((v0.c1 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 NOT INDEXED WHERE ((((v0.c1 IN ()))GLOB((v0.c1 IN ()))));
SELECT ALL * FROM v0, t0 WHERE ((((((v0.c2))>=((v0.c1)))) NOT BETWEEN ((NOT (t0.c64))) AND ((~ (x'f6b3')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))>=((v0.c1)))) NOT BETWEEN ((NOT (t0.c64))) AND ((~ (x'f6b3'))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((v0.c2))>=((v0.c1)))) NOT BETWEEN ((NOT (t0.c64))) AND ((~ (x'f6b3')))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2))>=((v0.c1)))) NOT BETWEEN ((NOT (t0.c64))) AND ((~ (x'f6b3'))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((v0.c2))>=((v0.c1)))) NOT BETWEEN ((NOT (t0.c64))) AND ((~ (x'f6b3')))));
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)AND(v0.c2)))OR(v0.c0)) AS NUMERIC)) ORDER BY ((CAST(v0.c1 AS INTEGER))<=(CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c2)AND(v0.c2)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS INTEGER))<=(CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)AND(v0.c2)))OR(v0.c0)) AS NUMERIC)) ORDER BY ((CAST(v0.c1 AS INTEGER))<=(CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c2)AND(v0.c2)))OR(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS INTEGER))<=(CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)AND(v0.c2)))OR(v0.c0)) AS NUMERIC)) ORDER BY ((CAST(v0.c1 AS INTEGER))<=(CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c40))<=((v0.c2))))<<(t0.c64 COLLATE NOCASE)) WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (t0.c40 IN (((t0.c64) NOT NULL)))  NULLS FIRST, CASE ((((((((t0.c0)OR(t0.c64)))AND(v0.c0)))OR(t0.c76)))OR(t0.c64))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END THEN v0.c2 COLLATE RTRIM ELSE TOTAL_CHANGES() END ASC, t0.c76 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c40))<=((v0.c2))))<<(t0.c64 COLLATE NOCASE)) ORDER BY (t0.c40 IN (((t0.c64) NOT NULL)))  NULLS FIRST, CASE ((((((((t0.c0)OR(t0.c64)))AND(v0.c0)))OR(t0.c76)))OR(t0.c64))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END THEN v0.c2 COLLATE RTRIM ELSE TOTAL_CHANGES() END ASC, t0.c76 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c40))<=((v0.c2))))<<(t0.c64 COLLATE NOCASE)) WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (t0.c40 IN (((t0.c64) NOT NULL)))  NULLS FIRST, CASE ((((((((t0.c0)OR(t0.c64)))AND(v0.c0)))OR(t0.c76)))OR(t0.c64))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END THEN v0.c2 COLLATE RTRIM ELSE TOTAL_CHANGES() END ASC, t0.c76 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c40))<=((v0.c2))))<<(t0.c64 COLLATE NOCASE)) ORDER BY (t0.c40 IN (((t0.c64) NOT NULL)))  NULLS FIRST, CASE ((((((((t0.c0)OR(t0.c64)))AND(v0.c0)))OR(t0.c76)))OR(t0.c64))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END THEN v0.c2 COLLATE RTRIM ELSE TOTAL_CHANGES() END ASC, t0.c76 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c40))<=((v0.c2))))<<(t0.c64 COLLATE NOCASE)) WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY (t0.c40 IN (((t0.c64) NOT NULL)))  NULLS FIRST, CASE ((((((((t0.c0)OR(t0.c64)))AND(v0.c0)))OR(t0.c76)))OR(t0.c64))  WHEN CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END THEN v0.c2 COLLATE RTRIM ELSE TOTAL_CHANGES() END ASC, t0.c76 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c76)))AND(((t0.c76) IS FALSE))))AND(((t0.c40)||(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c76)))AND(((t0.c76) IS FALSE))))AND(((t0.c40)||(t0.c64))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c76)))AND(((t0.c76) IS FALSE))))AND(((t0.c40)||(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c76)))AND(((t0.c76) IS FALSE))))AND(((t0.c40)||(t0.c64))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((+ (t0.c76)))AND(((t0.c76) IS FALSE))))AND(((t0.c40)||(t0.c64)))));
SELECT * FROM t0 NATURAL JOIN v0 WHERE ((((((t0.c64))==((v0.c0)))) BETWEEN (SUBSTR(t0.c64, t0.c40)) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c64))=((v0.c0)))) BETWEEN (SUBSTR(t0.c64, t0.c40)) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE ((((((t0.c64))==((v0.c0)))) BETWEEN (SUBSTR(t0.c64, t0.c40)) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c64))=((v0.c0)))) BETWEEN (SUBSTR(t0.c64, t0.c40)) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE ((((((t0.c64))==((v0.c0)))) BETWEEN (SUBSTR(t0.c64, t0.c40)) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((+ (v0.c2)))AND(((((v0.c0)AND(t0.c76)))AND(v0.c1)))))AND(NULL))) ORDER BY ((((CASE t0.c64  WHEN t0.c0 THEN t0.c40 END)OR(t0.c64)))OR(UNLIKELY(DISTINCT v0.c0))) DESC, (+ ((((v0.c1))>=((v0.c0))))) DESC  NULLS FIRST, (((((t0.c76 IN ()))AND(((v0.c1)<(t0.c0)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c2)))AND(((((v0.c0)AND(t0.c76)))AND(v0.c1)))))AND(NULL))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE t0.c64  WHEN t0.c0 THEN t0.c40 END)OR(t0.c64)))OR(UNLIKELY(DISTINCT v0.c0))) DESC, (+ ((((v0.c1))>=((v0.c0))))) DESC  NULLS FIRST, (((((t0.c76 IN ()))AND(((v0.c1)<(t0.c0)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((+ (v0.c2)))AND(((((v0.c0)AND(t0.c76)))AND(v0.c1)))))AND(NULL))) ORDER BY ((((CASE t0.c64  WHEN t0.c0 THEN t0.c40 END)OR(t0.c64)))OR(UNLIKELY(DISTINCT v0.c0))) DESC, (+ ((((v0.c1))>=((v0.c0))))) DESC  NULLS FIRST, (((((t0.c76 IN ()))AND(((v0.c1)<(t0.c0)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c2)))AND(((((v0.c0)AND(t0.c76)))AND(v0.c1)))))AND(NULL))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE t0.c64  WHEN t0.c0 THEN t0.c40 END)OR(t0.c64)))OR(UNLIKELY(DISTINCT v0.c0))) DESC, (+ ((((v0.c1))>=((v0.c0))))) DESC  NULLS FIRST, (((((t0.c76 IN ()))AND(((v0.c1)<(t0.c0)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0)) BETWEEN ((v0.c1)) AND ((x''))))LIKE(CAST(v0.c1 AS REAL))) WHERE ((((v0.c1, t0.c40, t0.c64)) BETWEEN (('y{khe]z6g', ((t0.c0) NOT BETWEEN (v0.c1) AND (t0.c64)), v0.c0)) AND (('', ((v0.c0)>=(x'')), CASE x'a7c8'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN -1131038476 WHEN v0.c2 THEN t0.c76 END)))) ORDER BY (NOT ((((v0.c1))>((v0.c1))))) DESC, v0.c1;
SELECT SUM(count) FROM (SELECT (((((v0.c1, t0.c40, t0.c64)) BETWEEN (('y{khe]z6g', ((t0.c0) NOT BETWEEN (v0.c1) AND (t0.c64)), v0.c0)) AND (('', ((v0.c0)>=(x'')), CASE x'a7c8'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN -1131038476 WHEN v0.c2 THEN t0.c76 END)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0)) BETWEEN ((v0.c1)) AND ((x''))))LIKE(CAST(v0.c1 AS REAL))) ORDER BY (NOT ((((v0.c1))>((v0.c1))))) DESC, v0.c1);
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0)) BETWEEN ((v0.c1)) AND ((x''))))LIKE(CAST(v0.c1 AS REAL))) WHERE ((((v0.c1, t0.c40, t0.c64)) BETWEEN (('y{khe]z6g', ((t0.c0) NOT BETWEEN (v0.c1) AND (t0.c64)), v0.c0)) AND (('', ((v0.c0)>=(x'')), CASE x'a7c8'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN -1131038476 WHEN v0.c2 THEN t0.c76 END)))) ORDER BY (NOT ((((v0.c1))>((v0.c1))))) DESC, v0.c1;
SELECT SUM(count) FROM (SELECT (((((v0.c1, t0.c40, t0.c64)) BETWEEN (('y{khe]z6g', ((t0.c0) NOT BETWEEN (v0.c1) AND (t0.c64)), v0.c0)) AND (('', ((v0.c0)>=(x'')), CASE x'a7c8'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN -1131038476 WHEN v0.c2 THEN t0.c76 END)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0)) BETWEEN ((v0.c1)) AND ((x''))))LIKE(CAST(v0.c1 AS REAL))) ORDER BY (NOT ((((v0.c1))>((v0.c1))))) DESC, v0.c1);
SELECT * FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0)) BETWEEN ((v0.c1)) AND ((x''))))LIKE(CAST(v0.c1 AS REAL))) WHERE ((((v0.c1, t0.c40, t0.c64)) BETWEEN (('y{khe]z6g', ((t0.c0) NOT BETWEEN (v0.c1) AND (t0.c64)), v0.c0)) AND (('', ((v0.c0)>=(x'')), CASE x'a7c8'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN -1131038476 WHEN v0.c2 THEN t0.c76 END)))) ORDER BY (NOT ((((v0.c1))>((v0.c1))))) DESC, v0.c1;
SELECT COUNT(*) FROM t0 WHERE ((((((NOT (t0.c64)))AND(CAST(t0.c76 AS NUMERIC))))OR((- (t0.c0))))) ORDER BY ((NULL) BETWEEN (t0.c76) AND (t0.c40 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c64)))AND(CAST(t0.c76 AS NUMERIC))))OR((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) BETWEEN (t0.c76) AND (t0.c40 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((NOT (t0.c64)))AND(CAST(t0.c76 AS NUMERIC))))OR((- (t0.c0))))) ORDER BY ((NULL) BETWEEN (t0.c76) AND (t0.c40 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c64)))AND(CAST(t0.c76 AS NUMERIC))))OR((- (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) BETWEEN (t0.c76) AND (t0.c40 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((NOT (t0.c64)))AND(CAST(t0.c76 AS NUMERIC))))OR((- (t0.c0))))) ORDER BY ((NULL) BETWEEN (t0.c76) AND (t0.c40 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (INSTR(((((((((0.7417211976649104)AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(x'')), ((v0.c2)>(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((((((0.7417211976649104)AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(x'')), ((v0.c2)>(v0.c1)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (INSTR(((((((((0.7417211976649104)AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(x'')), ((v0.c2)>(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(((((((((0.7417211976649104)AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(x'')), ((v0.c2)>(v0.c1)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (INSTR(((((((((0.7417211976649104)AND(v0.c0)))OR(v0.c0)))AND(t0.c0)))AND(x'')), ((v0.c2)>(v0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c64 AS REAL)) ORDER BY ((LIKELY(DISTINCT t0.c64))+(((t0.c64) NOT BETWEEN (t0.c64) AND (t0.c0))))  NULLS FIRST, json_extract(t0.c40, (((t0.c40, t0.c76, t0.c64)) BETWEEN ((t0.c76, t0.c64, t0.c40)) AND ((t0.c0, t0.c0, t0.c64))), ((t0.c76)%(t0.c64)), ((t0.c64)%(t0.c76)))  NULLS LAST, CASE (- (t0.c76))  WHEN (~ (t0.c76)) THEN (t0.c76 IN ()) ELSE ((((((((((((t0.c40)AND(t0.c0)))OR(t0.c40)))OR(t0.c76)))OR(t0.c0)))AND(t0.c76)))OR(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c64 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c64))+(((t0.c64) NOT BETWEEN (t0.c64) AND (t0.c0))))  NULLS FIRST, json_extract(t0.c40, (((t0.c40, t0.c76, t0.c64)) BETWEEN ((t0.c76, t0.c64, t0.c40)) AND ((t0.c0, t0.c0, t0.c64))), ((t0.c76)%(t0.c64)), ((t0.c64)%(t0.c76)))  NULLS LAST, CASE (- (t0.c76))  WHEN (~ (t0.c76)) THEN (t0.c76 IN ()) ELSE ((((((((((((t0.c40)AND(t0.c0)))OR(t0.c40)))OR(t0.c76)))OR(t0.c0)))AND(t0.c76)))OR(t0.c0)) END ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c64 AS REAL)) ORDER BY ((LIKELY(DISTINCT t0.c64))+(((t0.c64) NOT BETWEEN (t0.c64) AND (t0.c0))))  NULLS FIRST, json_extract(t0.c40, (((t0.c40, t0.c76, t0.c64)) BETWEEN ((t0.c76, t0.c64, t0.c40)) AND ((t0.c0, t0.c0, t0.c64))), ((t0.c76)%(t0.c64)), ((t0.c64)%(t0.c76)))  NULLS LAST, CASE (- (t0.c76))  WHEN (~ (t0.c76)) THEN (t0.c76 IN ()) ELSE ((((((((((((t0.c40)AND(t0.c0)))OR(t0.c40)))OR(t0.c76)))OR(t0.c0)))AND(t0.c76)))OR(t0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c64 AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((LIKELY(DISTINCT t0.c64))+(((t0.c64) NOT BETWEEN (t0.c64) AND (t0.c0))))  NULLS FIRST, json_extract(t0.c40, (((t0.c40, t0.c76, t0.c64)) BETWEEN ((t0.c76, t0.c64, t0.c40)) AND ((t0.c0, t0.c0, t0.c64))), ((t0.c76)%(t0.c64)), ((t0.c64)%(t0.c76)))  NULLS LAST, CASE (- (t0.c76))  WHEN (~ (t0.c76)) THEN (t0.c76 IN ()) ELSE ((((((((((((t0.c40)AND(t0.c0)))OR(t0.c40)))OR(t0.c76)))OR(t0.c0)))AND(t0.c76)))OR(t0.c0)) END ASC);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64)<=('-2021004160'))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c40)) AND ((t0.c0))) THEN (t0.c64 IN ()) ELSE ((t0.c76)OR(t0.c40)) END) ORDER BY t0.c64;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c64)<=('-2021004160'))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c40)) AND ((t0.c0))) THEN (t0.c64 IN ()) ELSE ((t0.c76)OR(t0.c40)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c64);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64)<=('-2021004160'))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c40)) AND ((t0.c0))) THEN (t0.c64 IN ()) ELSE ((t0.c76)OR(t0.c40)) END) ORDER BY t0.c64;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c64)<=('-2021004160'))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c40)) AND ((t0.c0))) THEN (t0.c64 IN ()) ELSE ((t0.c76)OR(t0.c40)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c64);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64)<=('-2021004160'))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c40)) AND ((t0.c0))) THEN (t0.c64 IN ()) ELSE ((t0.c76)OR(t0.c40)) END) ORDER BY t0.c64;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TRIM(t0.c64) COLLATE BINARY) ORDER BY (((((t0.c76))>=((v0.c1)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c64) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c76))>=((v0.c1)))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TRIM(t0.c64) COLLATE BINARY) ORDER BY (((((t0.c76))>=((v0.c1)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c64) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c76))>=((v0.c1)))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (TRIM(t0.c64) COLLATE BINARY) ORDER BY (((((t0.c76))>=((v0.c1)))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c76)), (NOT (t0.c64))))<=(((~ (t0.c40)), ((t0.c40)GLOB(t0.c76)), (+ (t0.c0)))))) ORDER BY IFNULL((t0.c0 IN ()), t0.c64 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c76)), (NOT (t0.c64))))<=(((~ (t0.c40)), ((t0.c40)GLOB(t0.c76)), (+ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL((t0.c0 IN ()), t0.c64 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c76)), (NOT (t0.c64))))<=(((~ (t0.c40)), ((t0.c40)GLOB(t0.c76)), (+ (t0.c0)))))) ORDER BY IFNULL((t0.c0 IN ()), t0.c64 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c76)), (NOT (t0.c64))))<=(((~ (t0.c40)), ((t0.c40)GLOB(t0.c76)), (+ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY IFNULL((t0.c0 IN ()), t0.c64 COLLATE NOCASE) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c76)), (NOT (t0.c64))))<=(((~ (t0.c40)), ((t0.c40)GLOB(t0.c76)), (+ (t0.c0)))))) ORDER BY IFNULL((t0.c0 IN ()), t0.c64 COLLATE NOCASE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY) ORDER BY ((0.3539490013696056 COLLATE NOCASE)>=(v0.c1))  NULLS FIRST, ((v0.c1 COLLATE NOCASE)+(((v0.c2) BETWEEN (t0.c76) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY ((0.3539490013696056 COLLATE NOCASE)>=(v0.c1))  NULLS FIRST, ((v0.c1 COLLATE NOCASE)+(((v0.c2) BETWEEN (t0.c76) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY) ORDER BY ((0.3539490013696056 COLLATE NOCASE)>=(v0.c1))  NULLS FIRST, ((v0.c1 COLLATE NOCASE)+(((v0.c2) BETWEEN (t0.c76) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY ((0.3539490013696056 COLLATE NOCASE)>=(v0.c1))  NULLS FIRST, ((v0.c1 COLLATE NOCASE)+(((v0.c2) BETWEEN (t0.c76) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_USED(t0.c0) COLLATE BINARY) ORDER BY ((0.3539490013696056 COLLATE NOCASE)>=(v0.c1))  NULLS FIRST, ((v0.c1 COLLATE NOCASE)+(((v0.c2) BETWEEN (t0.c76) AND (t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode(NULL, ((t0.c64)*(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, ((t0.c64)*(t0.c76)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode(NULL, ((t0.c64)*(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, ((t0.c64)*(t0.c76)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (rtreenode(NULL, ((t0.c64)*(t0.c76))));
SELECT * FROM v0 WHERE (CAST((+ (v0.c1)) AS NUMERIC)) ORDER BY -1.517941332E9, ((0.45655959784635325) NOT BETWEEN (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) AND (((v0.c1) NOT NULL)))  NULLS FIRST, ((v0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY -1.517941332E9, ((0.45655959784635325) NOT BETWEEN (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) AND (((v0.c1) NOT NULL)))  NULLS FIRST, ((v0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((+ (v0.c1)) AS NUMERIC)) ORDER BY -1.517941332E9, ((0.45655959784635325) NOT BETWEEN (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) AND (((v0.c1) NOT NULL)))  NULLS FIRST, ((v0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY -1.517941332E9, ((0.45655959784635325) NOT BETWEEN (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) AND (((v0.c1) NOT NULL)))  NULLS FIRST, ((v0.c2 IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST((+ (v0.c1)) AS NUMERIC)) ORDER BY -1.517941332E9, ((0.45655959784635325) NOT BETWEEN (CASE v0.c0  WHEN v0.c2 THEN v0.c1 END) AND (((v0.c1) NOT NULL)))  NULLS FIRST, ((v0.c2 IN ()) IN ()) ASC  NULLS LAST;
SELECT * FROM v0 WHERE ('Nc');
SELECT SUM(count) FROM (SELECT (('Nc') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('Nc');
SELECT SUM(count) FROM (SELECT (('Nc') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('Nc');
SELECT ALL * FROM t0 WHERE ((((t0.c64)>(t0.c76)) IN (t0.c40)));
SELECT SUM(count) FROM (SELECT (((((t0.c64)>(t0.c76)) IN (t0.c40))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c64)>(t0.c76)) IN (t0.c40)));
SELECT SUM(count) FROM (SELECT (((((t0.c64)>(t0.c76)) IN (t0.c40))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c64)>(t0.c76)) IN (t0.c40)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)AND(((-1536338532) BETWEEN (v0.c0) AND (v0.c1)))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))AND((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, NULL, v0.c1))))))AND(0x5b1fa65d))) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))OR(((v0.c0) IS TRUE))))AND(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)AND(((-1536338532) BETWEEN (v0.c0) AND (v0.c1)))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))AND((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, NULL, v0.c1))))))AND(0x5b1fa65d))) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))OR(((v0.c0) IS TRUE))))AND(CAST(v0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)AND(((-1536338532) BETWEEN (v0.c0) AND (v0.c1)))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))AND((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, NULL, v0.c1))))))AND(0x5b1fa65d))) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))OR(((v0.c0) IS TRUE))))AND(CAST(v0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)AND(((-1536338532) BETWEEN (v0.c0) AND (v0.c1)))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))AND((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, NULL, v0.c1))))))AND(0x5b1fa65d))) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))OR(((v0.c0) IS TRUE))))AND(CAST(v0.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)AND(((-1536338532) BETWEEN (v0.c0) AND (v0.c1)))))OR((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))AND((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c0, v0.c1, v0.c2)) AND ((v0.c2, NULL, v0.c1))))))AND(0x5b1fa65d))) ORDER BY (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2))))OR(((v0.c0) IS TRUE))))AND(CAST(v0.c2 AS INTEGER)));
SELECT * FROM t0, v0 WHERE ((- (t0.c76)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE RTRIM)<(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c76)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c2 COLLATE RTRIM)<(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((- (t0.c76)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE RTRIM)<(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t0.c76)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c2 COLLATE RTRIM)<(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((- (t0.c76)) COLLATE BINARY) ORDER BY ((v0.c2 COLLATE RTRIM)<(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0)<>(t0.c0)))) ORDER BY CAST(NULL AS REAL), CASE (+ (t0.c0))  WHEN ((t0.c64)<<(t0.c64)) THEN (+ (t0.c64)) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c40)) WHEN (~ (t0.c64)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c0)%(t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c0)!=(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(NULL AS REAL), CASE (+ (t0.c0))  WHEN ((t0.c64)<<(t0.c64)) THEN (+ (t0.c64)) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c40)) WHEN (~ (t0.c64)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c0)%(t0.c40)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0)<>(t0.c0)))) ORDER BY CAST(NULL AS REAL), CASE (+ (t0.c0))  WHEN ((t0.c64)<<(t0.c64)) THEN (+ (t0.c64)) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c40)) WHEN (~ (t0.c64)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c0)%(t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((t0.c0)!=(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY CAST(NULL AS REAL), CASE (+ (t0.c0))  WHEN ((t0.c64)<<(t0.c64)) THEN (+ (t0.c64)) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c40)) WHEN (~ (t0.c64)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c0)%(t0.c40)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT ((t0.c0)<>(t0.c0)))) ORDER BY CAST(NULL AS REAL), CASE (+ (t0.c0))  WHEN ((t0.c64)<<(t0.c64)) THEN (+ (t0.c64)) WHEN t0.c0 THEN ((((t0.c0)OR(t0.c0)))OR(t0.c40)) WHEN (~ (t0.c64)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c0)%(t0.c40)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ('939778309') ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('939778309') IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('939778309') ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('939778309') IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('939778309') ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c76)) NOT BETWEEN (((t0.c40 IN ()))) AND ((((t0.c40)-(t0.c40)))))) ORDER BY CAST(((t0.c40) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76)) NOT BETWEEN (((t0.c40 IN ()))) AND ((((t0.c40)-(t0.c40)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c40) IS TRUE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c76)) NOT BETWEEN (((t0.c40 IN ()))) AND ((((t0.c40)-(t0.c40)))))) ORDER BY CAST(((t0.c40) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76)) NOT BETWEEN (((t0.c40 IN ()))) AND ((((t0.c40)-(t0.c40)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c40) IS TRUE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c76)) NOT BETWEEN (((t0.c40 IN ()))) AND ((((t0.c40)-(t0.c40)))))) ORDER BY CAST(((t0.c40) IS TRUE) AS BLOB) ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c2);
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c76 COLLATE RTRIM) NOT BETWEEN (((t0.c76) NOT BETWEEN (t0.c64) AND (t0.c76))) AND (v0.c2 COLLATE BINARY)) WHERE (((t0.c64)*(t0.c40)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)*(t0.c40)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c76 COLLATE RTRIM) NOT BETWEEN (((t0.c76) NOT BETWEEN (t0.c64) AND (t0.c76))) AND (v0.c2 COLLATE BINARY)));
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c76 COLLATE RTRIM) NOT BETWEEN (((t0.c76) NOT BETWEEN (t0.c64) AND (t0.c76))) AND (v0.c2 COLLATE BINARY)) WHERE (((t0.c64)*(t0.c40)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)*(t0.c40)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c76 COLLATE RTRIM) NOT BETWEEN (((t0.c76) NOT BETWEEN (t0.c64) AND (t0.c76))) AND (v0.c2 COLLATE BINARY)));
SELECT * FROM v0 CROSS JOIN t0 ON ((t0.c76 COLLATE RTRIM) NOT BETWEEN (((t0.c76) NOT BETWEEN (t0.c64) AND (t0.c76))) AND (v0.c2 COLLATE BINARY)) WHERE (((t0.c64)*(t0.c40)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c2 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c2 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c2 AS TEXT) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c2 AS TEXT) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CAST(v0.c2 AS TEXT) AS TEXT));
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76))==((((t0.c40) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76))==((((t0.c40) ISNULL))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76))==((((t0.c40) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76))==((((t0.c40) ISNULL))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76))==((((t0.c40) ISNULL)))));
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR((((v0.c0, v0.c0, v0.c2))<=((v0.c0, '-162947485', v0.c0))))))OR(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(v0.c1))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN ((('Z&[3nQ|{')<=(v0.c0))) AND (LOWER(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR((((v0.c0, v0.c0, v0.c2))<=((v0.c0, '-162947485', v0.c0))))))OR(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN ((('Z&[3nQ|{')<=(v0.c0))) AND (LOWER(v0.c1))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR((((v0.c0, v0.c0, v0.c2))<=((v0.c0, '-162947485', v0.c0))))))OR(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(v0.c1))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN ((('Z&[3nQ|{')<=(v0.c0))) AND (LOWER(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR((((v0.c0, v0.c0, v0.c2))<=((v0.c0, '-162947485', v0.c0))))))OR(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN ((('Z&[3nQ|{')<=(v0.c0))) AND (LOWER(v0.c1))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((v0.c0)OR((((v0.c0, v0.c0, v0.c2))<=((v0.c0, '-162947485', v0.c0))))))OR(CAST(v0.c1 AS BLOB))))AND(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(v0.c1))) ORDER BY ((CAST(v0.c2 AS REAL)) NOT BETWEEN ((('Z&[3nQ|{')<=(v0.c0))) AND (LOWER(v0.c1))) ASC;
SELECT * FROM t0, v0 WHERE (((((t0.c0)||(v0.c2)))*(CAST(v0.c1 AS INTEGER)))) ORDER BY ((((((v0.c0) NOT NULL))AND((((v0.c2))>=((v0.c2))))))OR(-8.7162138E7)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(v0.c2)))*(CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((v0.c0) NOT NULL))AND((((v0.c2))>=((v0.c2))))))OR(-8.7162138E7)) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c0)||(v0.c2)))*(CAST(v0.c1 AS INTEGER)))) ORDER BY ((((((v0.c0) NOT NULL))AND((((v0.c2))>=((v0.c2))))))OR(-8.7162138E7)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(v0.c2)))*(CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((v0.c0) NOT NULL))AND((((v0.c2))>=((v0.c2))))))OR(-8.7162138E7)) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c0)||(v0.c2)))*(CAST(v0.c1 AS INTEGER)))) ORDER BY ((((((v0.c0) NOT NULL))AND((((v0.c2))>=((v0.c2))))))OR(-8.7162138E7)) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (((v0.c0) IS TRUE)))) ORDER BY (((v0.c0, v0.c2, v0.c1)) BETWEEN ((((v0.c0) NOT NULL), (x'' IN ()), (NOT (v0.c1)))) AND ((v0.c1, LENGTH(v0.c0), v0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c1) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c2, v0.c1)) BETWEEN ((((v0.c0) NOT NULL), (x'' IN ()), (NOT (v0.c1)))) AND ((v0.c1, LENGTH(v0.c0), v0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (((v0.c0) IS TRUE)))) ORDER BY (((v0.c0, v0.c2, v0.c1)) BETWEEN ((((v0.c0) NOT NULL), (x'' IN ()), (NOT (v0.c1)))) AND ((v0.c1, LENGTH(v0.c0), v0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) BETWEEN (v0.c1) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c2, v0.c1)) BETWEEN ((((v0.c0) NOT NULL), (x'' IN ()), (NOT (v0.c1)))) AND ((v0.c1, LENGTH(v0.c0), v0.c0 COLLATE RTRIM)))  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c1) BETWEEN (v0.c1) AND (((v0.c0) IS TRUE)))) ORDER BY (((v0.c0, v0.c2, v0.c1)) BETWEEN ((((v0.c0) NOT NULL), (x'' IN ()), (NOT (v0.c1)))) AND ((v0.c1, LENGTH(v0.c0), v0.c0 COLLATE RTRIM)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)AND(LIKELY(v0.c2))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(LIKELY(v0.c2))))AND(NULL))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)AND(LIKELY(v0.c2))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(LIKELY(v0.c2))))AND(NULL))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)AND(LIKELY(v0.c2))))AND(NULL)));
SELECT * FROM v0 WHERE ((((0X718b559, x'5f99', v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((((-1.419022896E9)>('''A')), (v0.c2 IN ()), json_array_length(v0.c2, v0.c1), LOWER(DISTINCT v0.c2), (((v0.c1))>((v0.c2))))) AND (((((v0.c2, v0.c1, v0.c0))=((v0.c2, v0.c2, v0.c0))), (v0.c0 IN ()), ((v0.c2)<=('Yn')), ((((v0.c2)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((0X718b559, x'5f99', v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((((-1.419022896E9)>('''A')), (v0.c2 IN ()), json_array_length(v0.c2, v0.c1), LOWER(DISTINCT v0.c2), (((v0.c1))>((v0.c2))))) AND (((((v0.c2, v0.c1, v0.c0))=((v0.c2, v0.c2, v0.c0))), (v0.c0 IN ()), ((v0.c2)<=('Yn')), ((((v0.c2)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0X718b559, x'5f99', v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((((-1.419022896E9)>('''A')), (v0.c2 IN ()), json_array_length(v0.c2, v0.c1), LOWER(DISTINCT v0.c2), (((v0.c1))>((v0.c2))))) AND (((((v0.c2, v0.c1, v0.c0))=((v0.c2, v0.c2, v0.c0))), (v0.c0 IN ()), ((v0.c2)<=('Yn')), ((((v0.c2)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((0X718b559, x'5f99', v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((((-1.419022896E9)>('''A')), (v0.c2 IN ()), json_array_length(v0.c2, v0.c1), LOWER(DISTINCT v0.c2), (((v0.c1))>((v0.c2))))) AND (((((v0.c2, v0.c1, v0.c0))=((v0.c2, v0.c2, v0.c0))), (v0.c0 IN ()), ((v0.c2)<=('Yn')), ((((v0.c2)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0X718b559, x'5f99', v0.c0, v0.c1, v0.c1)) NOT BETWEEN ((((-1.419022896E9)>('''A')), (v0.c2 IN ()), json_array_length(v0.c2, v0.c1), LOWER(DISTINCT v0.c2), (((v0.c1))>((v0.c2))))) AND (((((v0.c2, v0.c1, v0.c0))=((v0.c2, v0.c2, v0.c0))), (v0.c0 IN ()), ((v0.c2)<=('Yn')), ((((v0.c2)OR(v0.c0)))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END))));
SELECT ALL * FROM t0 WHERE (t0.c64) ORDER BY DATE(CAST(t0.c76 AS BLOB), ((((t0.c64)OR(t0.c64)))AND(t0.c64)), (((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c64)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c76 AS BLOB), ((((t0.c64)OR(t0.c64)))AND(t0.c64)), (((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c64)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c64) ORDER BY DATE(CAST(t0.c76 AS BLOB), ((((t0.c64)OR(t0.c64)))AND(t0.c64)), (((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c64)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM t0 ORDER BY DATE(CAST(t0.c76 AS BLOB), ((((t0.c64)OR(t0.c64)))AND(t0.c64)), (((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c64)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c64) ORDER BY DATE(CAST(t0.c76 AS BLOB), ((((t0.c64)OR(t0.c64)))AND(t0.c64)), (((t0.c0)) BETWEEN ((t0.c64)) AND ((t0.c64)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c64) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c64) IS TRUE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c64) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c64) IS TRUE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c64) IS TRUE))));
SELECT ALL * FROM t0, v0 WHERE (CASE ((x'eccc')=(t0.c76))  WHEN t0.c40 COLLATE NOCASE THEN ((t0.c64) IS TRUE) WHEN v0.c2 THEN LIKELY(DISTINCT t0.c64) WHEN (((t0.c64))==((t0.c40))) THEN NULL WHEN '됡' THEN (+ (t0.c0)) WHEN (t0.c64 IN ()) THEN t0.c40 WHEN '' THEN x'' COLLATE NOCASE WHEN NULLIF(DISTINCT t0.c64, v0.c0) THEN v0.c0 ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((x'eccc')=(t0.c76))  WHEN t0.c40 COLLATE NOCASE THEN ((t0.c64) IS TRUE) WHEN v0.c2 THEN LIKELY(DISTINCT t0.c64) WHEN (((t0.c64))==((t0.c40))) THEN NULL WHEN '됡' THEN (+ (t0.c0)) WHEN (t0.c64 IN ()) THEN t0.c40 WHEN '' THEN x'' COLLATE NOCASE WHEN NULLIF(DISTINCT t0.c64, v0.c0) THEN v0.c0 ELSE ((v0.c1) ISNULL) END) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM t0, v0 WHERE (CASE ((x'eccc')=(t0.c76))  WHEN t0.c40 COLLATE NOCASE THEN ((t0.c64) IS TRUE) WHEN v0.c2 THEN LIKELY(DISTINCT t0.c64) WHEN (((t0.c64))==((t0.c40))) THEN NULL WHEN '됡' THEN (+ (t0.c0)) WHEN (t0.c64 IN ()) THEN t0.c40 WHEN '' THEN x'' COLLATE NOCASE WHEN NULLIF(DISTINCT t0.c64, v0.c0) THEN v0.c0 ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((x'eccc')=(t0.c76))  WHEN t0.c40 COLLATE NOCASE THEN ((t0.c64) IS TRUE) WHEN v0.c2 THEN LIKELY(DISTINCT t0.c64) WHEN (((t0.c64))==((t0.c40))) THEN NULL WHEN '됡' THEN (+ (t0.c0)) WHEN (t0.c64 IN ()) THEN t0.c40 WHEN '' THEN x'' COLLATE NOCASE WHEN NULLIF(DISTINCT t0.c64, v0.c0) THEN v0.c0 ELSE ((v0.c1) ISNULL) END) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC);
SELECT ALL * FROM t0, v0 WHERE (CASE ((x'eccc')=(t0.c76))  WHEN t0.c40 COLLATE NOCASE THEN ((t0.c64) IS TRUE) WHEN v0.c2 THEN LIKELY(DISTINCT t0.c64) WHEN (((t0.c64))==((t0.c40))) THEN NULL WHEN '됡' THEN (+ (t0.c0)) WHEN (t0.c64 IN ()) THEN t0.c40 WHEN '' THEN x'' COLLATE NOCASE WHEN NULLIF(DISTINCT t0.c64, v0.c0) THEN v0.c0 ELSE ((v0.c1) ISNULL) END) ORDER BY v0.c0 DESC;
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c40)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c40)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c40)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c40)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((t0.c40)) NOT BETWEEN ((v0.c1)) AND ((t0.c0)))) NOT NULL));
SELECT * FROM v0, t0 WHERE ((((~ (t0.c0)))<=(((v0.c1)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))<=(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((~ (t0.c0)))<=(((v0.c1)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))<=(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((~ (t0.c0)))<=(((v0.c1)LIKE(v0.c2)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('515088534') ORDER BY ('F/' IN ((- (t0.c0)))) DESC, (((((((t0.c40, t0.c0, t0.c0))<>((t0.c64, '-327735142', v0.c0))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c64, v0.c0))!=((t0.c76, t0.c40, v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('515088534') IS TRUE)  as count FROM t0, v0 ORDER BY ('F/' IN ((- (t0.c0)))) DESC, (((((((t0.c40, t0.c0, t0.c0))!=((t0.c64, '-327735142', v0.c0))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c64, v0.c0))<>((t0.c76, t0.c40, v0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('515088534') ORDER BY ('F/' IN ((- (t0.c0)))) DESC, (((((((t0.c40, t0.c0, t0.c0))<>((t0.c64, '-327735142', v0.c0))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c64, v0.c0))!=((t0.c76, t0.c40, v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('515088534') IS TRUE)  as count FROM t0, v0 ORDER BY ('F/' IN ((- (t0.c0)))) DESC, (((((((t0.c40, t0.c0, t0.c0))!=((t0.c64, '-327735142', v0.c0))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c64, v0.c0))<>((t0.c76, t0.c40, v0.c2)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ('515088534') ORDER BY ('F/' IN ((- (t0.c0)))) DESC, (((((((t0.c40, t0.c0, t0.c0))<>((t0.c64, '-327735142', v0.c0))))AND((~ (t0.c0)))))AND((((t0.c0, t0.c64, v0.c0))!=((t0.c76, t0.c40, v0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((v0.c0)GLOB(v0.c2)) COLLATE RTRIM WHERE (((t0.c76 COLLATE BINARY) NOT NULL)) ORDER BY LTRIM(TRIM(t0.c0), 'Tzxm)+I') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((v0.c0)GLOB(v0.c2)) COLLATE RTRIM ORDER BY LTRIM(TRIM(t0.c0), 'Tzxm)+I') ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((v0.c0)GLOB(v0.c2)) COLLATE RTRIM WHERE (((t0.c76 COLLATE BINARY) NOT NULL)) ORDER BY LTRIM(TRIM(t0.c0), 'Tzxm)+I') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((v0.c0)GLOB(v0.c2)) COLLATE RTRIM ORDER BY LTRIM(TRIM(t0.c0), 'Tzxm)+I') ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((v0.c0)GLOB(v0.c2)) COLLATE RTRIM WHERE (((t0.c76 COLLATE BINARY) NOT NULL)) ORDER BY LTRIM(TRIM(t0.c0), 'Tzxm)+I') ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((NOT ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c76))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c76)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((NOT ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c76))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c76)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((NOT ((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c76))))));
SELECT * FROM t0 WHERE (((((x'e655')AND(((t0.c64)>(t0.c64)))))AND(CAST(t0.c64 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'e655')AND(((t0.c64)>(t0.c64)))))AND(CAST(t0.c64 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((x'e655')AND(((t0.c64)>(t0.c64)))))AND(CAST(t0.c64 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((x'e655')AND(((t0.c64)>(t0.c64)))))AND(CAST(t0.c64 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((x'e655')AND(((t0.c64)>(t0.c64)))))AND(CAST(t0.c64 AS TEXT))));
SELECT ALL * FROM v0 WHERE ((((('I') NOT NULL)) BETWEEN ((((v0.c0))>((v0.c1)))) AND (TYPEOF(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((((('I') NOT NULL)) BETWEEN ((((v0.c0))>((v0.c1)))) AND (TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('I') NOT NULL)) BETWEEN ((((v0.c0))>((v0.c1)))) AND (TYPEOF(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((((('I') NOT NULL)) BETWEEN ((((v0.c0))>((v0.c1)))) AND (TYPEOF(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((('I') NOT NULL)) BETWEEN ((((v0.c0))>((v0.c1)))) AND (TYPEOF(DISTINCT v0.c0))));
SELECT ALL * FROM v0, t0 WHERE (((((0xffffffffd149c646) IS FALSE)) BETWEEN (CAST(t0.c64 AS REAL)) AND (CASE WHEN t0.c76 THEN 0.78529744354675 END))) ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) AND (t0.c76 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffd149c646) IS FALSE)) BETWEEN (CAST(t0.c64 AS REAL)) AND (CASE WHEN t0.c76 THEN 0.78529744354675 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) AND (t0.c76 COLLATE NOCASE)));
SELECT ALL * FROM v0, t0 WHERE (((((0xffffffffd149c646) IS FALSE)) BETWEEN (CAST(t0.c64 AS REAL)) AND (CASE WHEN t0.c76 THEN 0.78529744354675 END))) ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) AND (t0.c76 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffd149c646) IS FALSE)) BETWEEN (CAST(t0.c64 AS REAL)) AND (CASE WHEN t0.c76 THEN 0.78529744354675 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) AND (t0.c76 COLLATE NOCASE)));
SELECT ALL * FROM v0, t0 WHERE (((((0xffffffffd149c646) IS FALSE)) BETWEEN (CAST(t0.c64 AS REAL)) AND (CASE WHEN t0.c76 THEN 0.78529744354675 END))) ORDER BY (((t0.c0 IN ())) NOT BETWEEN (CASE WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) AND (t0.c76 COLLATE NOCASE));
SELECT COUNT(*) FROM v0, t0 WHERE (LIKE(((((v0.c2)AND(t0.c0)))AND(t0.c64)), ((t0.c76) BETWEEN (t0.c40) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((((v0.c2)AND(t0.c0)))AND(t0.c64)), ((t0.c76) BETWEEN (t0.c40) AND (t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (LIKE(((((v0.c2)AND(t0.c0)))AND(t0.c64)), ((t0.c76) BETWEEN (t0.c40) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((((v0.c2)AND(t0.c0)))AND(t0.c64)), ((t0.c76) BETWEEN (t0.c40) AND (t0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (LIKE(((((v0.c2)AND(t0.c0)))AND(t0.c64)), ((t0.c76) BETWEEN (t0.c40) AND (t0.c0))));
SELECT * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST, json_type((((t0.c0))<=((t0.c64)))) DESC, json_object(((t0.c64) NOT BETWEEN (t0.c40) AND ('&')), NULL);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST, json_type((((t0.c0))<=((t0.c64)))) DESC, json_object(((t0.c64) NOT BETWEEN (t0.c40) AND ('&')), NULL));
SELECT * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY) ORDER BY t0.c0 DESC  NULLS LAST, json_type((((t0.c0))<=((t0.c64)))) DESC, json_object(((t0.c64) NOT BETWEEN (t0.c40) AND ('&')), NULL);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST, json_type((((t0.c0))<=((t0.c64)))) DESC, json_object(((t0.c64) NOT BETWEEN (t0.c40) AND ('&')), NULL));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c64)) NOT BETWEEN (((((t0.c76))>((v0.c1))))) AND ((TYPEOF(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c64)) NOT BETWEEN (((((t0.c76))>((v0.c1))))) AND ((TYPEOF(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c64)) NOT BETWEEN (((((t0.c76))>((v0.c1))))) AND ((TYPEOF(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c64)) NOT BETWEEN (((((t0.c76))>((v0.c1))))) AND ((TYPEOF(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c64)) NOT BETWEEN (((((t0.c76))>((v0.c1))))) AND ((TYPEOF(v0.c0)))));
SELECT * FROM v0, t0 WHERE (((((((t0.c0, t0.c64, t0.c76))!=((v0.c2, v0.c1, t0.c0)))))=((((t0.c76) BETWEEN (t0.c64) AND (t0.c40))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c64, t0.c76))<>((v0.c2, v0.c1, t0.c0)))))=((((t0.c76) BETWEEN (t0.c64) AND (t0.c40)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c0, t0.c64, t0.c76))!=((v0.c2, v0.c1, t0.c0)))))=((((t0.c76) BETWEEN (t0.c64) AND (t0.c40))))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c64, t0.c76))<>((v0.c2, v0.c1, t0.c0)))))=((((t0.c76) BETWEEN (t0.c64) AND (t0.c40)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c0, t0.c64, t0.c76))!=((v0.c2, v0.c1, t0.c0)))))=((((t0.c76) BETWEEN (t0.c64) AND (t0.c40))))));
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((0.12987305899253354)%(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.12987305899253354)%(t0.c40))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((0.12987305899253354)%(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((0.12987305899253354)%(t0.c40))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT (((0.12987305899253354)%(t0.c40)))));
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c40))<((t0.c76))))||((((457949222)) BETWEEN ((t0.c76)) AND ((v0.c2)))))) ORDER BY (((t0.c76, t0.c40, v0.c1)) NOT BETWEEN ((((((t0.c76)AND(v0.c1)))OR(t0.c76)), x'14d2', v0.c1 COLLATE RTRIM)) AND ((((((((((t0.c40)AND(t0.c0)))OR(v0.c0)))OR(t0.c64)))OR(v0.c2)), t0.c64 COLLATE BINARY, ((v0.c2) NOT BETWEEN (t0.c0) AND (t0.c64)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c40))<((t0.c76))))||((((457949222)) BETWEEN ((t0.c76)) AND ((v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76, t0.c40, v0.c1)) NOT BETWEEN ((((((t0.c76)AND(v0.c1)))OR(t0.c76)), x'14d2', v0.c1 COLLATE RTRIM)) AND ((((((((((t0.c40)AND(t0.c0)))OR(v0.c0)))OR(t0.c64)))OR(v0.c2)), t0.c64 COLLATE BINARY, ((v0.c2) NOT BETWEEN (t0.c0) AND (t0.c64)))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c40))<((t0.c76))))||((((457949222)) BETWEEN ((t0.c76)) AND ((v0.c2)))))) ORDER BY (((t0.c76, t0.c40, v0.c1)) NOT BETWEEN ((((((t0.c76)AND(v0.c1)))OR(t0.c76)), x'14d2', v0.c1 COLLATE RTRIM)) AND ((((((((((t0.c40)AND(t0.c0)))OR(v0.c0)))OR(t0.c64)))OR(v0.c2)), t0.c64 COLLATE BINARY, ((v0.c2) NOT BETWEEN (t0.c0) AND (t0.c64)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c40))<((t0.c76))))||((((457949222)) BETWEEN ((t0.c76)) AND ((v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76, t0.c40, v0.c1)) NOT BETWEEN ((((((t0.c76)AND(v0.c1)))OR(t0.c76)), x'14d2', v0.c1 COLLATE RTRIM)) AND ((((((((((t0.c40)AND(t0.c0)))OR(v0.c0)))OR(t0.c64)))OR(v0.c2)), t0.c64 COLLATE BINARY, ((v0.c2) NOT BETWEEN (t0.c0) AND (t0.c64)))))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c40))<((t0.c76))))||((((457949222)) BETWEEN ((t0.c76)) AND ((v0.c2)))))) ORDER BY (((t0.c76, t0.c40, v0.c1)) NOT BETWEEN ((((((t0.c76)AND(v0.c1)))OR(t0.c76)), x'14d2', v0.c1 COLLATE RTRIM)) AND ((((((((((t0.c40)AND(t0.c0)))OR(v0.c0)))OR(t0.c64)))OR(v0.c2)), t0.c64 COLLATE BINARY, ((v0.c2) NOT BETWEEN (t0.c0) AND (t0.c64)))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c40)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c0)))AND(t0.c40)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c40)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(t0.c0)))AND(t0.c40)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c40)) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) IS TRUE))<>((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE))!=((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) IS TRUE))<>((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) IS TRUE))!=((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c2) IS TRUE))<>((+ (v0.c2)))));
SELECT * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c2 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c2 AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c40)GLOB(t0.c76))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (((t0.c40)GLOB(t0.c76))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c40)GLOB(t0.c76))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((- (((t0.c40)GLOB(t0.c76))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c40)GLOB(t0.c76))))) ORDER BY ((((t0.c0) IS TRUE)) IS TRUE);
SELECT * FROM v0 WHERE ((((v0.c2 IN ()))/(((0.10071947860579844)|(v0.c0))))) ORDER BY LIKELY(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))/(((0.10071947860579844)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT NULL));
SELECT * FROM v0 WHERE ((((v0.c2 IN ()))/(((0.10071947860579844)|(v0.c0))))) ORDER BY LIKELY(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))/(((0.10071947860579844)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY LIKELY(DISTINCT NULL));
SELECT * FROM v0 WHERE ((((v0.c2 IN ()))/(((0.10071947860579844)|(v0.c0))))) ORDER BY LIKELY(DISTINCT NULL);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c76) BETWEEN (x'6217') AND (v0.c1)))+(((((t0.c0)OR(v0.c0)))OR(v0.c2))))) ORDER BY ((((t0.c40)<(v0.c1)))*(((t0.c64) NOT BETWEEN (v0.c1) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76) BETWEEN (x'6217') AND (v0.c1)))+(((((t0.c0)OR(v0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)<(v0.c1)))*(((t0.c64) NOT BETWEEN (v0.c1) AND (t0.c76)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c76) BETWEEN (x'6217') AND (v0.c1)))+(((((t0.c0)OR(v0.c0)))OR(v0.c2))))) ORDER BY ((((t0.c40)<(v0.c1)))*(((t0.c64) NOT BETWEEN (v0.c1) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c76) BETWEEN (x'6217') AND (v0.c1)))+(((((t0.c0)OR(v0.c0)))OR(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)<(v0.c1)))*(((t0.c64) NOT BETWEEN (v0.c1) AND (t0.c76)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c76) BETWEEN (x'6217') AND (v0.c1)))+(((((t0.c0)OR(v0.c0)))OR(v0.c2))))) ORDER BY ((((t0.c40)<(v0.c1)))*(((t0.c64) NOT BETWEEN (v0.c1) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c1 AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c0) IS TRUE) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c0) IS TRUE) ELSE v0.c1 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c0) IS TRUE) ELSE v0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c0) IS TRUE) ELSE v0.c1 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c0) IS TRUE) ELSE v0.c1 END);
SELECT COUNT(*) FROM t0 WHERE (((NULL)IS NOT(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL)IS NOT(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL)IS NOT(CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (NOT (((t0.c40) NOT BETWEEN (t0.c40) AND (t0.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((t0.c40) NOT BETWEEN (t0.c40) AND (t0.c64)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (NOT (((t0.c40) NOT BETWEEN (t0.c40) AND (t0.c64)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT (((t0.c40) NOT BETWEEN (t0.c40) AND (t0.c64)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c40 IN ())) IS FALSE)) ORDER BY (NOT (((t0.c40) NOT BETWEEN (t0.c40) AND (t0.c64)))) ASC;
SELECT ALL * FROM v0, t0 WHERE (((- (t0.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c64)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((- (t0.c64)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c64)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((- (t0.c64)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c2 AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (~ ((+ (t0.c76)))) WHERE ((NOT ((t0.c40 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c40 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (~ ((+ (t0.c76)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (~ ((+ (t0.c76)))) WHERE ((NOT ((t0.c40 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c40 IN ())))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (~ ((+ (t0.c76)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (~ ((+ (t0.c76)))) WHERE ((NOT ((t0.c40 IN ()))));
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((v0.c2 IN ())) AND (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) BETWEEN ((v0.c2 IN ())) AND (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((v0.c2 IN ())) AND (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS NUMERIC)) BETWEEN ((v0.c2 IN ())) AND (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((v0.c2 IN ())) AND (((v0.c1) NOTNULL))));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON (- (((((t0.c64)AND(t0.c76)))OR(v0.c1)))) WHERE ((v0.c0 IN ())) ORDER BY (((+ (t0.c0)))&(((t0.c64) NOT BETWEEN (v0.c1) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- (((((t0.c64)AND(t0.c76)))OR(v0.c1)))) ORDER BY (((+ (t0.c0)))&(((t0.c64) NOT BETWEEN (v0.c1) AND (v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON (- (((((t0.c64)AND(t0.c76)))OR(v0.c1)))) WHERE ((v0.c0 IN ())) ORDER BY (((+ (t0.c0)))&(((t0.c64) NOT BETWEEN (v0.c1) AND (v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- (((((t0.c64)AND(t0.c76)))OR(v0.c1)))) ORDER BY (((+ (t0.c0)))&(((t0.c64) NOT BETWEEN (v0.c1) AND (v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON (- (((((t0.c64)AND(t0.c76)))OR(v0.c1)))) WHERE ((v0.c0 IN ())) ORDER BY (((+ (t0.c0)))&(((t0.c64) NOT BETWEEN (v0.c1) AND (v0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c76) AND (v0.c0)))>=(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (t0.c76) AND (v0.c0)))>=(LIKELY(t0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c76) AND (v0.c0)))>=(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) NOT BETWEEN (t0.c76) AND (v0.c0)))>=(LIKELY(t0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c76) AND (v0.c0)))>=(LIKELY(t0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.13199318932645376) NOT BETWEEN (t0.c76) AND (v0.c1))) BETWEEN (UNLIKELY(DISTINCT x'11d0b4ef')) AND ((NOT (t0.c0))))) ORDER BY ((IFNULL(DISTINCT '-33953461', t0.c0)) NOT BETWEEN ((t0.c40 IN ())) AND (((v0.c2)-(t0.c40))))  NULLS LAST, CAST(0X5411c288 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.13199318932645376) NOT BETWEEN (t0.c76) AND (v0.c1))) BETWEEN (UNLIKELY(DISTINCT x'11d0b4ef')) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((IFNULL(DISTINCT '-33953461', t0.c0)) NOT BETWEEN ((t0.c40 IN ())) AND (((v0.c2)-(t0.c40))))  NULLS LAST, CAST(0x5411c288 AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.13199318932645376) NOT BETWEEN (t0.c76) AND (v0.c1))) BETWEEN (UNLIKELY(DISTINCT x'11d0b4ef')) AND ((NOT (t0.c0))))) ORDER BY ((IFNULL(DISTINCT '-33953461', t0.c0)) NOT BETWEEN ((t0.c40 IN ())) AND (((v0.c2)-(t0.c40))))  NULLS LAST, CAST(0X5411c288 AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.13199318932645376) NOT BETWEEN (t0.c76) AND (v0.c1))) BETWEEN (UNLIKELY(DISTINCT x'11d0b4ef')) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((IFNULL(DISTINCT '-33953461', t0.c0)) NOT BETWEEN ((t0.c40 IN ())) AND (((v0.c2)-(t0.c40))))  NULLS LAST, CAST(0x5411c288 AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((0.13199318932645376) NOT BETWEEN (t0.c76) AND (v0.c1))) BETWEEN (UNLIKELY(DISTINCT x'11d0b4ef')) AND ((NOT (t0.c0))))) ORDER BY ((IFNULL(DISTINCT '-33953461', t0.c0)) NOT BETWEEN ((t0.c40 IN ())) AND (((v0.c2)-(t0.c40))))  NULLS LAST, CAST(0X5411c288 AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((((((((((((v0.c1)AND(v0.c1)))AND(t0.c64)))AND(v0.c1)))AND(v0.c2)), (((v0.c1)) NOT BETWEEN ((x'2601')) AND ((v0.c1))), ((t0.c0) BETWEEN (t0.c40) AND (t0.c0))))>=((CASE WHEN t0.c76 THEN v0.c2 END, x'' COLLATE RTRIM, v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c1)AND(v0.c1)))AND(t0.c64)))AND(v0.c1)))AND(v0.c2)), (((v0.c1)) NOT BETWEEN ((x'2601')) AND ((v0.c1))), ((t0.c0) BETWEEN (t0.c40) AND (t0.c0))))>=((CASE WHEN t0.c76 THEN v0.c2 END, x'' COLLATE RTRIM, v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((((((((v0.c1)AND(v0.c1)))AND(t0.c64)))AND(v0.c1)))AND(v0.c2)), (((v0.c1)) NOT BETWEEN ((x'2601')) AND ((v0.c1))), ((t0.c0) BETWEEN (t0.c40) AND (t0.c0))))>=((CASE WHEN t0.c76 THEN v0.c2 END, x'' COLLATE RTRIM, v0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((((((((v0.c1)AND(v0.c1)))AND(t0.c64)))AND(v0.c1)))AND(v0.c2)), (((v0.c1)) NOT BETWEEN ((x'2601')) AND ((v0.c1))), ((t0.c0) BETWEEN (t0.c40) AND (t0.c0))))>=((CASE WHEN t0.c76 THEN v0.c2 END, x'' COLLATE RTRIM, v0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((((((((v0.c1)AND(v0.c1)))AND(t0.c64)))AND(v0.c1)))AND(v0.c2)), (((v0.c1)) NOT BETWEEN ((x'2601')) AND ((v0.c1))), ((t0.c0) BETWEEN (t0.c40) AND (t0.c0))))>=((CASE WHEN t0.c76 THEN v0.c2 END, x'' COLLATE RTRIM, v0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c76)AND(t0.c64))) BETWEEN (CAST(t0.c64 AS REAL)) AND (LIKE(t0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)AND(t0.c64))) BETWEEN (CAST(t0.c64 AS REAL)) AND (LIKE(t0.c0, v0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c76)AND(t0.c64))) BETWEEN (CAST(t0.c64 AS REAL)) AND (LIKE(t0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)AND(t0.c64))) BETWEEN (CAST(t0.c64 AS REAL)) AND (LIKE(t0.c0, v0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c76)AND(t0.c64))) BETWEEN (CAST(t0.c64 AS REAL)) AND (LIKE(t0.c0, v0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(t0.c64, t0.c40))+(((t0.c64) NOT BETWEEN ('i,g] ') AND (t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c64, t0.c40))+(((t0.c64) NOT BETWEEN ('i,g] ') AND (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(t0.c64, t0.c40))+(((t0.c64) NOT BETWEEN ('i,g] ') AND (t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c64, t0.c40))+(((t0.c64) NOT BETWEEN ('i,g] ') AND (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TRIM(t0.c64, t0.c40))+(((t0.c64) NOT BETWEEN ('i,g] ') AND (t0.c76)))));
SELECT * FROM v0, t0 WHERE (((CASE t0.c76  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)<=(((t0.c0)IS NOT(t0.c64)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c76  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)<=(((t0.c0)IS NOT(t0.c64))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((CASE t0.c76  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)<=(((t0.c0)IS NOT(t0.c64)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c76  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)<=(((t0.c0)IS NOT(t0.c64))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((CASE t0.c76  WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END)<=(((t0.c0)IS NOT(t0.c64)))));
SELECT * FROM t0, v0 WHERE ((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((json_valid(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((json_valid(t0.c64))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((json_valid(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((json_valid(t0.c64))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c40)) NOT BETWEEN ((t0.c40)) AND ((json_valid(t0.c64)))));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c40 THEN t0.c64 END AS REAL)) ORDER BY ((((t0.c40)>>(t0.c76))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c40 THEN t0.c64 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c40)>>(t0.c76))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c40 THEN t0.c64 END AS REAL)) ORDER BY ((((t0.c40)>>(t0.c76))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c40 THEN t0.c64 END AS REAL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c40)>>(t0.c76))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c40 THEN t0.c64 END AS REAL)) ORDER BY ((((t0.c40)>>(t0.c76))) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ('9묞O%JuE');
SELECT SUM(count) FROM (SELECT ALL (('9묞O%JuE') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('9묞O%JuE');
SELECT SUM(count) FROM (SELECT ALL (('9묞O%JuE') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('9묞O%JuE');
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c64 IN ()) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c64 IN ()) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) IS FALSE)) ORDER BY (((t0.c76, 'j', t0.c40)) BETWEEN ((t0.c40 COLLATE RTRIM, (((t0.c0, t0.c40, t0.c76))!=((t0.c40, t0.c76, t0.c0))), x'')) AND ((t0.c40 COLLATE RTRIM, CASE WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN t0.c0 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END, ((0.6534414298670475)>>(t0.c40)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76, 'j', t0.c40)) BETWEEN ((t0.c40 COLLATE RTRIM, (((t0.c0, t0.c40, t0.c76))!=((t0.c40, t0.c76, t0.c0))), x'')) AND ((t0.c40 COLLATE RTRIM, CASE WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN t0.c0 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END, ((0.6534414298670475)>>(t0.c40)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) IS FALSE)) ORDER BY (((t0.c76, 'j', t0.c40)) BETWEEN ((t0.c40 COLLATE RTRIM, (((t0.c0, t0.c40, t0.c76))!=((t0.c40, t0.c76, t0.c0))), x'')) AND ((t0.c40 COLLATE RTRIM, CASE WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN t0.c0 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END, ((0.6534414298670475)>>(t0.c40)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76, 'j', t0.c40)) BETWEEN ((t0.c40 COLLATE RTRIM, (((t0.c0, t0.c40, t0.c76))!=((t0.c40, t0.c76, t0.c0))), x'')) AND ((t0.c40 COLLATE RTRIM, CASE WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN t0.c0 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END, ((0.6534414298670475)>>(t0.c40)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) IS FALSE)) ORDER BY (((t0.c76, 'j', t0.c40)) BETWEEN ((t0.c40 COLLATE RTRIM, (((t0.c0, t0.c40, t0.c76))!=((t0.c40, t0.c76, t0.c0))), x'')) AND ((t0.c40 COLLATE RTRIM, CASE WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN t0.c0 WHEN t0.c0 THEN t0.c40 ELSE t0.c0 END, ((0.6534414298670475)>>(t0.c40)))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c2 IN (v0.c2))))<=(('')))) ORDER BY ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)+(CASE 0.45038047225704747  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN 0xffffffffb282af36 WHEN NULL THEN v0.c2 END))  NULLS LAST, (0.01965183070397647 IN (v0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 IN (v0.c2))))<=(('')))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)+(CASE 0.45038047225704747  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN 0xffffffffb282af36 WHEN NULL THEN v0.c2 END))  NULLS LAST, (0.01965183070397647 IN (v0.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((((v0.c2 IN (v0.c2))))<=(('')))) ORDER BY ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)+(CASE 0.45038047225704747  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN 0xffffffffb282af36 WHEN NULL THEN v0.c2 END))  NULLS LAST, (0.01965183070397647 IN (v0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 IN (v0.c2))))<=(('')))) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)+(CASE 0.45038047225704747  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN 0xffffffffb282af36 WHEN NULL THEN v0.c2 END))  NULLS LAST, (0.01965183070397647 IN (v0.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((((v0.c2 IN (v0.c2))))<=(('')))) ORDER BY ((CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)+(CASE 0.45038047225704747  WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN 0xffffffffb282af36 WHEN NULL THEN v0.c2 END))  NULLS LAST, (0.01965183070397647 IN (v0.c2)) COLLATE RTRIM;
SELECT * FROM v0, t0 WHERE (((((((v0.c2)IS NOT(t0.c64)))AND((v0.c1 IN ()))))OR(TRIM(v0.c0, t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)IS NOT(t0.c64)))AND((v0.c1 IN ()))))OR(TRIM(v0.c0, t0.c64)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((v0.c2)IS NOT(t0.c64)))AND((v0.c1 IN ()))))OR(TRIM(v0.c0, t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)IS NOT(t0.c64)))AND((v0.c1 IN ()))))OR(TRIM(v0.c0, t0.c64)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((v0.c2)IS NOT(t0.c64)))AND((v0.c1 IN ()))))OR(TRIM(v0.c0, t0.c64))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON CAST(CAST(t0.c40 AS BLOB) AS INTEGER) WHERE ((~ ((NOT (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c40))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST(CAST(t0.c40 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON CAST(CAST(t0.c40 AS BLOB) AS INTEGER) WHERE ((~ ((NOT (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (t0.c40))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CAST(CAST(t0.c40 AS BLOB) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON CAST(CAST(t0.c40 AS BLOB) AS INTEGER) WHERE ((~ ((NOT (t0.c40)))));
SELECT * FROM t0, v0 WHERE (((v0.c0)/(CASE WHEN v0.c2 THEN v0.c0 WHEN t0.c40 THEN t0.c64 WHEN t0.c40 THEN t0.c76 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)/(CASE WHEN v0.c2 THEN v0.c0 WHEN t0.c40 THEN t0.c64 WHEN t0.c40 THEN t0.c76 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((v0.c0)/(CASE WHEN v0.c2 THEN v0.c0 WHEN t0.c40 THEN t0.c64 WHEN t0.c40 THEN t0.c76 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)/(CASE WHEN v0.c2 THEN v0.c0 WHEN t0.c40 THEN t0.c64 WHEN t0.c40 THEN t0.c76 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((v0.c0)/(CASE WHEN v0.c2 THEN v0.c0 WHEN t0.c40 THEN t0.c64 WHEN t0.c40 THEN t0.c76 END)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((CAST(NULL AS INTEGER))OR(((t0.c40)>(v0.c1)))))AND(((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) ORDER BY ((CAST(t0.c76 AS NUMERIC)) BETWEEN (HEX(v0.c0)) AND (((t0.c76)*(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS INTEGER))OR(((t0.c40)>(v0.c1)))))AND(((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(t0.c76 AS NUMERIC)) BETWEEN (HEX(v0.c0)) AND (((t0.c76)*(v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((CAST(NULL AS INTEGER))OR(((t0.c40)>(v0.c1)))))AND(((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) ORDER BY ((CAST(t0.c76 AS NUMERIC)) BETWEEN (HEX(v0.c0)) AND (((t0.c76)*(v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS INTEGER))OR(((t0.c40)>(v0.c1)))))AND(((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(t0.c76 AS NUMERIC)) BETWEEN (HEX(v0.c0)) AND (((t0.c76)*(v0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((CAST(NULL AS INTEGER))OR(((t0.c40)>(v0.c1)))))AND(((((((((v0.c1)AND(v0.c1)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) ORDER BY ((CAST(t0.c76 AS NUMERIC)) BETWEEN (HEX(v0.c0)) AND (((t0.c76)*(v0.c2)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((CAST(x'' AS INTEGER)) BETWEEN (CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN t0.c76 THEN NULL WHEN t0.c64 THEN t0.c40 END) AND (t0.c76))) ORDER BY t0.c64 ASC  NULLS FIRST, CAST((NOT (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) BETWEEN (CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN t0.c76 THEN NULL WHEN t0.c64 THEN t0.c40 END) AND (t0.c76))) IS TRUE)  as count FROM t0 ORDER BY t0.c64 ASC  NULLS FIRST, CAST((NOT (t0.c76)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(x'' AS INTEGER)) BETWEEN (CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN t0.c76 THEN NULL WHEN t0.c64 THEN t0.c40 END) AND (t0.c76))) ORDER BY t0.c64 ASC  NULLS FIRST, CAST((NOT (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS INTEGER)) BETWEEN (CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN t0.c76 THEN NULL WHEN t0.c64 THEN t0.c40 END) AND (t0.c76))) IS TRUE)  as count FROM t0 ORDER BY t0.c64 ASC  NULLS FIRST, CAST((NOT (t0.c76)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CAST(x'' AS INTEGER)) BETWEEN (CASE t0.c76  WHEN t0.c76 THEN t0.c76 WHEN t0.c76 THEN NULL WHEN t0.c64 THEN t0.c40 END) AND (t0.c76))) ORDER BY t0.c64 ASC  NULLS FIRST, CAST((NOT (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((v0.c2))=((v0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2))==((v0.c2))) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((v0.c2))=((v0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c2))==((v0.c2))) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'' AS INTEGER)) ORDER BY (((v0.c2))=((v0.c2))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((~ (LTRIM(v0.c0, v0.c0)))) ORDER BY ((((v0.c0, t0.c76, v0.c1, t0.c40, v0.c0)) BETWEEN ((t0.c76, v0.c0, v0.c2, t0.c0, t0.c0)) AND ((t0.c64, v0.c0, t0.c40, v0.c1, t0.c64))) IN ())  NULLS LAST, x'' ASC  NULLS LAST, TRIM(DISTINCT t0.c76, v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0, t0.c76, v0.c1, t0.c40, v0.c0)) BETWEEN ((t0.c76, v0.c0, v0.c2, t0.c0, t0.c0)) AND ((t0.c64, v0.c0, t0.c40, v0.c1, t0.c64))) IN ())  NULLS LAST, x'' ASC  NULLS LAST, TRIM(DISTINCT t0.c76, v0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((~ (LTRIM(v0.c0, v0.c0)))) ORDER BY ((((v0.c0, t0.c76, v0.c1, t0.c40, v0.c0)) BETWEEN ((t0.c76, v0.c0, v0.c2, t0.c0, t0.c0)) AND ((t0.c64, v0.c0, t0.c40, v0.c1, t0.c64))) IN ())  NULLS LAST, x'' ASC  NULLS LAST, TRIM(DISTINCT t0.c76, v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0, t0.c76, v0.c1, t0.c40, v0.c0)) BETWEEN ((t0.c76, v0.c0, v0.c2, t0.c0, t0.c0)) AND ((t0.c64, v0.c0, t0.c40, v0.c1, t0.c64))) IN ())  NULLS LAST, x'' ASC  NULLS LAST, TRIM(DISTINCT t0.c76, v0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((~ (LTRIM(v0.c0, v0.c0)))) ORDER BY ((((v0.c0, t0.c76, v0.c1, t0.c40, v0.c0)) BETWEEN ((t0.c76, v0.c0, v0.c2, t0.c0, t0.c0)) AND ((t0.c64, v0.c0, t0.c40, v0.c1, t0.c64))) IN ())  NULLS LAST, x'' ASC  NULLS LAST, TRIM(DISTINCT t0.c76, v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76)&(t0.c40)) IN ())) ORDER BY (('')!=((t0.c64 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c76)&(t0.c40)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('')!=((t0.c64 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76)&(t0.c40)) IN ())) ORDER BY (('')!=((t0.c64 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c76)&(t0.c40)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (('')!=((t0.c64 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76)&(t0.c40)) IN ())) ORDER BY (('')!=((t0.c64 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 INDEXED BY i23 WHERE ((((- (v0.c2))) BETWEEN (t0.c40 COLLATE RTRIM) AND (HEX(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2))) BETWEEN (t0.c40 COLLATE RTRIM) AND (HEX(t0.c76)))) IS TRUE)  as count FROM v0, t0 INDEXED BY i23);
SELECT ALL COUNT(*) FROM v0, t0 INDEXED BY i23 WHERE ((((- (v0.c2))) BETWEEN (t0.c40 COLLATE RTRIM) AND (HEX(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c2))) BETWEEN (t0.c40 COLLATE RTRIM) AND (HEX(t0.c76)))) IS TRUE)  as count FROM v0, t0 INDEXED BY i23);
SELECT ALL COUNT(*) FROM v0, t0 INDEXED BY i23 WHERE ((((- (v0.c2))) BETWEEN (t0.c40 COLLATE RTRIM) AND (HEX(t0.c76))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))OR(((((v0.c2)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))OR(((((v0.c2)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))OR(((((v0.c2)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))OR(((((v0.c2)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))OR(((((v0.c2)AND(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((((v0.c0, t0.c76, v0.c1, v0.c0, t0.c0)) BETWEEN ((t0.c64, '', t0.c0, v0.c1, v0.c0)) AND ((t0.c64, '', v0.c0, v0.c1, v0.c1)))))) ORDER BY CAST(t0.c76 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, (CAST(0.716763171308109 AS REAL) IN (((t0.c64) NOT NULL), CASE WHEN t0.c64 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, t0.c76, v0.c1, v0.c0, t0.c0)) BETWEEN ((t0.c64, '', t0.c0, v0.c1, v0.c0)) AND ((t0.c64, '', v0.c0, v0.c1, v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c76 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, (CAST(0.716763171308109 AS REAL) IN (((t0.c64) NOT NULL), CASE WHEN t0.c64 THEN t0.c0 END)));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((((v0.c0, t0.c76, v0.c1, v0.c0, t0.c0)) BETWEEN ((t0.c64, '', t0.c0, v0.c1, v0.c0)) AND ((t0.c64, '', v0.c0, v0.c1, v0.c1)))))) ORDER BY CAST(t0.c76 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, (CAST(0.716763171308109 AS REAL) IN (((t0.c64) NOT NULL), CASE WHEN t0.c64 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c0, t0.c76, v0.c1, v0.c0, t0.c0)) BETWEEN ((t0.c64, '', t0.c0, v0.c1, v0.c0)) AND ((t0.c64, '', v0.c0, v0.c1, v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c76 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, (CAST(0.716763171308109 AS REAL) IN (((t0.c64) NOT NULL), CASE WHEN t0.c64 THEN t0.c0 END)));
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT ((((v0.c0, t0.c76, v0.c1, v0.c0, t0.c0)) BETWEEN ((t0.c64, '', t0.c0, v0.c1, v0.c0)) AND ((t0.c64, '', v0.c0, v0.c1, v0.c1)))))) ORDER BY CAST(t0.c76 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST, (CAST(0.716763171308109 AS REAL) IN (((t0.c64) NOT NULL), CASE WHEN t0.c64 THEN t0.c0 END));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c76)AND(t0.c0)))AND(t0.c40)))IS(CAST(t0.c76 AS TEXT)))) ORDER BY UPPER(DISTINCT CASE WHEN t0.c64 THEN t0.c76 WHEN t0.c76 THEN t0.c64 WHEN NULL THEN '552146391' ELSE t0.c40 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c76)AND(t0.c0)))AND(t0.c40)))IS(CAST(t0.c76 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT CASE WHEN t0.c64 THEN t0.c76 WHEN t0.c76 THEN t0.c64 WHEN NULL THEN '552146391' ELSE t0.c40 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c76)AND(t0.c0)))AND(t0.c40)))IS(CAST(t0.c76 AS TEXT)))) ORDER BY UPPER(DISTINCT CASE WHEN t0.c64 THEN t0.c76 WHEN t0.c76 THEN t0.c64 WHEN NULL THEN '552146391' ELSE t0.c40 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c76)AND(t0.c0)))AND(t0.c40)))IS(CAST(t0.c76 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY UPPER(DISTINCT CASE WHEN t0.c64 THEN t0.c76 WHEN t0.c76 THEN t0.c64 WHEN NULL THEN '552146391' ELSE t0.c40 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c76)AND(t0.c0)))AND(t0.c40)))IS(CAST(t0.c76 AS TEXT)))) ORDER BY UPPER(DISTINCT CASE WHEN t0.c64 THEN t0.c76 WHEN t0.c76 THEN t0.c64 WHEN NULL THEN '552146391' ELSE t0.c40 END) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c2)<=(t0.c76))) NOT BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) ORDER BY (((((t0.c40 IN ()))AND(((((((((v0.c1)AND(t0.c76)))AND(v0.c1)))AND(v0.c2)))OR(t0.c76)))))OR(((t0.c76) NOT BETWEEN ('-1116114751') AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<=(t0.c76))) NOT BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c40 IN ()))AND(((((((((v0.c1)AND(t0.c76)))AND(v0.c1)))AND(v0.c2)))OR(t0.c76)))))OR(((t0.c76) NOT BETWEEN ('-1116114751') AND (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c2)<=(t0.c76))) NOT BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) ORDER BY (((((t0.c40 IN ()))AND(((((((((v0.c1)AND(t0.c76)))AND(v0.c1)))AND(v0.c2)))OR(t0.c76)))))OR(((t0.c76) NOT BETWEEN ('-1116114751') AND (v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<=(t0.c76))) NOT BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c40 IN ()))AND(((((((((v0.c1)AND(t0.c76)))AND(v0.c1)))AND(v0.c2)))OR(t0.c76)))))OR(((t0.c76) NOT BETWEEN ('-1116114751') AND (v0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((v0.c2)<=(t0.c76))) NOT BETWEEN (TYPEOF(DISTINCT v0.c0)) AND ((v0.c0 IN ())))) ORDER BY (((((t0.c40 IN ()))AND(((((((((v0.c1)AND(t0.c76)))AND(v0.c1)))AND(v0.c2)))OR(t0.c76)))))OR(((t0.c76) NOT BETWEEN ('-1116114751') AND (v0.c2)))) ASC;
SELECT ALL * FROM t0 WHERE (json_array_length(((t0.c40)||(t0.c76)), ((t0.c64)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c40)||(t0.c76)), ((t0.c64)!=(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_array_length(((t0.c40)||(t0.c76)), ((t0.c64)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c40)||(t0.c76)), ((t0.c64)!=(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (t0.c76);
SELECT COUNT(*) FROM t0 WHERE (t0.c40) ORDER BY (((((t0.c64)) BETWEEN ((0.30921125037323305)) AND ((t0.c0)))) BETWEEN ((- ('1093969000'))) AND (t0.c40 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c64)) BETWEEN ((0.30921125037323305)) AND ((t0.c0)))) BETWEEN ((- ('1093969000'))) AND (t0.c40 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM t0 WHERE (t0.c40) ORDER BY (((((t0.c64)) BETWEEN ((0.30921125037323305)) AND ((t0.c0)))) BETWEEN ((- ('1093969000'))) AND (t0.c40 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c64)) BETWEEN ((0.30921125037323305)) AND ((t0.c0)))) BETWEEN ((- ('1093969000'))) AND (t0.c40 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM t0 WHERE (t0.c40) ORDER BY (((((t0.c64)) BETWEEN ((0.30921125037323305)) AND ((t0.c0)))) BETWEEN ((- ('1093969000'))) AND (t0.c40 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1)))|(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(0.8192896839340293)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN (v0.c1)))|(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(0.8192896839340293))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1)))|(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(0.8192896839340293)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN (v0.c1)))|(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(0.8192896839340293))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1 IN (v0.c1)))|(((((((((v0.c1)OR(v0.c2)))OR(v0.c0)))AND(v0.c2)))AND(0.8192896839340293)))));
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (((('273873682' IN ())) BETWEEN (0.20175944346155283) AND (CASE WHEN t0.c76 THEN v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((('273873682' IN ())) BETWEEN (0.20175944346155283) AND (CASE WHEN t0.c76 THEN v0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (((('273873682' IN ())) BETWEEN (0.20175944346155283) AND (CASE WHEN t0.c76 THEN v0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((('273873682' IN ())) BETWEEN (0.20175944346155283) AND (CASE WHEN t0.c76 THEN v0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (((('273873682' IN ())) BETWEEN (0.20175944346155283) AND (CASE WHEN t0.c76 THEN v0.c2 END)));
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ()));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (('0.4349562571427008')*(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c64 THEN t0.c76 WHEN v0.c1 THEN NULL ELSE v0.c0 END)) WHERE (LENGTH(((t0.c64)<(v0.c2)))) ORDER BY ((((((((NULL)AND(t0.c0)))AND(t0.c40)))OR(CAST(t0.c64 AS BLOB))))AND(t0.c40)) DESC  NULLS LAST, t0.c40 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c64)<(v0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (('0.4349562571427008')*(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c64 THEN t0.c76 WHEN v0.c1 THEN NULL ELSE v0.c0 END)) ORDER BY ((((((((NULL)AND(t0.c0)))AND(t0.c40)))OR(CAST(t0.c64 AS BLOB))))AND(t0.c40)) DESC  NULLS LAST, t0.c40 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (('0.4349562571427008')*(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c64 THEN t0.c76 WHEN v0.c1 THEN NULL ELSE v0.c0 END)) WHERE (LENGTH(((t0.c64)<(v0.c2)))) ORDER BY ((((((((NULL)AND(t0.c0)))AND(t0.c40)))OR(CAST(t0.c64 AS BLOB))))AND(t0.c40)) DESC  NULLS LAST, t0.c40 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c64)<(v0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (('0.4349562571427008')*(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c64 THEN t0.c76 WHEN v0.c1 THEN NULL ELSE v0.c0 END)) ORDER BY ((((((((NULL)AND(t0.c0)))AND(t0.c40)))OR(CAST(t0.c64 AS BLOB))))AND(t0.c40)) DESC  NULLS LAST, t0.c40 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (('0.4349562571427008')*(CASE NULL  WHEN NULL THEN t0.c0 WHEN t0.c64 THEN t0.c76 WHEN v0.c1 THEN NULL ELSE v0.c0 END)) WHERE (LENGTH(((t0.c64)<(v0.c2)))) ORDER BY ((((((((NULL)AND(t0.c0)))AND(t0.c40)))OR(CAST(t0.c64 AS BLOB))))AND(t0.c40)) DESC  NULLS LAST, t0.c40 DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (CAST(t0.c40 AS INTEGER)))) ORDER BY CASE (t0.c64 IN ())  WHEN (((t0.c40, t0.c0, t0.c76))<=((t0.c0, t0.c0, t0.c40))) THEN (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c64))) WHEN CAST(t0.c76 AS INTEGER) THEN (t0.c64 IN ()) WHEN CASE t0.c64  WHEN t0.c64 THEN t0.c64 END THEN ((t0.c64)=(t0.c40)) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (CAST(t0.c40 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c64 IN ())  WHEN (((t0.c40, t0.c0, t0.c76))<=((t0.c0, t0.c0, t0.c40))) THEN (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c64))) WHEN CAST(t0.c76 AS INTEGER) THEN (t0.c64 IN ()) WHEN CASE t0.c64  WHEN t0.c64 THEN t0.c64 END THEN ((t0.c64)=(t0.c40)) END);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (CAST(t0.c40 AS INTEGER)))) ORDER BY CASE (t0.c64 IN ())  WHEN (((t0.c40, t0.c0, t0.c76))<=((t0.c0, t0.c0, t0.c40))) THEN (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c64))) WHEN CAST(t0.c76 AS INTEGER) THEN (t0.c64 IN ()) WHEN CASE t0.c64  WHEN t0.c64 THEN t0.c64 END THEN ((t0.c64)=(t0.c40)) END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (CAST(t0.c40 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c64 IN ())  WHEN (((t0.c40, t0.c0, t0.c76))<=((t0.c0, t0.c0, t0.c40))) THEN (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c64))) WHEN CAST(t0.c76 AS INTEGER) THEN (t0.c64 IN ()) WHEN CASE t0.c64  WHEN t0.c64 THEN t0.c64 END THEN ((t0.c64)=(t0.c40)) END);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (CAST(t0.c40 AS INTEGER)))) ORDER BY CASE (t0.c64 IN ())  WHEN (((t0.c40, t0.c0, t0.c76))<=((t0.c0, t0.c0, t0.c40))) THEN (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c64))) WHEN CAST(t0.c76 AS INTEGER) THEN (t0.c64 IN ()) WHEN CASE t0.c64  WHEN t0.c64 THEN t0.c64 END THEN ((t0.c64)=(t0.c40)) END;
SELECT * FROM t0, v0 WHERE (CAST(CAST(t0.c40 AS NUMERIC) AS BLOB)) ORDER BY ((((v0.c1) IS TRUE)) BETWEEN (NULL) AND (((v0.c2) BETWEEN (t0.c40) AND (v0.c0)))) ASC  NULLS LAST, LIKELIHOOD(((v0.c0)IS(v0.c0)), 0.9181418461160229)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c40 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c1) IS TRUE)) BETWEEN (NULL) AND (((v0.c2) BETWEEN (t0.c40) AND (v0.c0)))) ASC  NULLS LAST, LIKELIHOOD(((v0.c0)IS(v0.c0)), 0.9181418461160229)  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(CAST(t0.c40 AS NUMERIC) AS BLOB)) ORDER BY ((((v0.c1) IS TRUE)) BETWEEN (NULL) AND (((v0.c2) BETWEEN (t0.c40) AND (v0.c0)))) ASC  NULLS LAST, LIKELIHOOD(((v0.c0)IS(v0.c0)), 0.9181418461160229)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c40 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c1) IS TRUE)) BETWEEN (NULL) AND (((v0.c2) BETWEEN (t0.c40) AND (v0.c0)))) ASC  NULLS LAST, LIKELIHOOD(((v0.c0)IS(v0.c0)), 0.9181418461160229)  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(CAST(t0.c40 AS NUMERIC) AS BLOB)) ORDER BY ((((v0.c1) IS TRUE)) BETWEEN (NULL) AND (((v0.c2) BETWEEN (t0.c40) AND (v0.c0)))) ASC  NULLS LAST, LIKELIHOOD(((v0.c0)IS(v0.c0)), 0.9181418461160229)  NULLS LAST;
SELECT * FROM t0 WHERE (LOWER(((t0.c0)>>(t0.c64)))) ORDER BY ((((((t0.c40)AND(t0.c64)))OR(t0.c76)))*((NOT (t0.c76)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0)>>(t0.c64)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c40)AND(t0.c64)))OR(t0.c76)))*((NOT (t0.c76)))) DESC);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)>>(t0.c64)))) ORDER BY ((((((t0.c40)AND(t0.c64)))OR(t0.c76)))*((NOT (t0.c76)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t0.c0)>>(t0.c64)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c40)AND(t0.c64)))OR(t0.c76)))*((NOT (t0.c76)))) DESC);
SELECT * FROM t0 WHERE (LOWER(((t0.c0)>>(t0.c64)))) ORDER BY ((((((t0.c40)AND(t0.c64)))OR(t0.c76)))*((NOT (t0.c76)))) DESC;
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (CAST(((t0.c76) BETWEEN (x'5f9c') AND (v0.c0)) AS REAL)) ORDER BY ((UPPER(t0.c76)) IS TRUE)  NULLS LAST, (((((((((t0.c40)OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))OR(t0.c76)) IN ()) DESC, v0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76) BETWEEN (x'5f9c') AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((UPPER(t0.c76)) IS TRUE)  NULLS LAST, (((((((((t0.c40)OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))OR(t0.c76)) IN ()) DESC, v0.c2 ASC);
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (CAST(((t0.c76) BETWEEN (x'5f9c') AND (v0.c0)) AS REAL)) ORDER BY ((UPPER(t0.c76)) IS TRUE)  NULLS LAST, (((((((((t0.c40)OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))OR(t0.c76)) IN ()) DESC, v0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76) BETWEEN (x'5f9c') AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((UPPER(t0.c76)) IS TRUE)  NULLS LAST, (((((((((t0.c40)OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))OR(t0.c76)) IN ()) DESC, v0.c2 ASC);
SELECT ALL * FROM t0, v0 NOT INDEXED WHERE (CAST(((t0.c76) BETWEEN (x'5f9c') AND (v0.c0)) AS REAL)) ORDER BY ((UPPER(t0.c76)) IS TRUE)  NULLS LAST, (((((((((t0.c40)OR(v0.c1)))AND(v0.c2)))AND(v0.c0)))OR(t0.c76)) IN ()) DESC, v0.c2 ASC;
SELECT ALL * FROM t0, v0 WHERE (((((t0.c64)<<(t0.c76)))||((+ (v0.c1))))) ORDER BY COALESCE(v0.c0, (((t0.c40, t0.c40, t0.c76)) NOT BETWEEN ((v0.c1, t0.c40, v0.c1)) AND ((t0.c40, t0.c64, t0.c40)))) ASC  NULLS LAST, CASE ((t0.c40)<<(v0.c2))  WHEN ABS(DISTINCT t0.c0) THEN (((('')OR(t0.c64)))AND(v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c64)<<(t0.c76)))||((+ (v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY COALESCE(v0.c0, (((t0.c40, t0.c40, t0.c76)) NOT BETWEEN ((v0.c1, t0.c40, v0.c1)) AND ((t0.c40, t0.c64, t0.c40)))) ASC  NULLS LAST, CASE ((t0.c40)<<(v0.c2))  WHEN ABS(DISTINCT t0.c0) THEN (((('')OR(t0.c64)))AND(v0.c1)) END ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c64)<<(t0.c76)))||((+ (v0.c1))))) ORDER BY COALESCE(v0.c0, (((t0.c40, t0.c40, t0.c76)) NOT BETWEEN ((v0.c1, t0.c40, v0.c1)) AND ((t0.c40, t0.c64, t0.c40)))) ASC  NULLS LAST, CASE ((t0.c40)<<(v0.c2))  WHEN ABS(DISTINCT t0.c0) THEN (((('')OR(t0.c64)))AND(v0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c64)<<(t0.c76)))||((+ (v0.c1))))) IS TRUE)  as count FROM t0, v0 ORDER BY COALESCE(v0.c0, (((t0.c40, t0.c40, t0.c76)) NOT BETWEEN ((v0.c1, t0.c40, v0.c1)) AND ((t0.c40, t0.c64, t0.c40)))) ASC  NULLS LAST, CASE ((t0.c40)<<(v0.c2))  WHEN ABS(DISTINCT t0.c0) THEN (((('')OR(t0.c64)))AND(v0.c1)) END ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c64)<<(t0.c76)))||((+ (v0.c1))))) ORDER BY COALESCE(v0.c0, (((t0.c40, t0.c40, t0.c76)) NOT BETWEEN ((v0.c1, t0.c40, v0.c1)) AND ((t0.c40, t0.c64, t0.c40)))) ASC  NULLS LAST, CASE ((t0.c40)<<(v0.c2))  WHEN ABS(DISTINCT t0.c0) THEN (((('')OR(t0.c64)))AND(v0.c1)) END ASC;
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c2)) BETWEEN (v0.c0) AND (((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c2)) BETWEEN (v0.c0) AND (((v0.c1) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c2)) BETWEEN (v0.c0) AND (((v0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c2)) BETWEEN (v0.c0) AND (((v0.c1) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((UNLIKELY(v0.c2)) BETWEEN (v0.c0) AND (((v0.c1) IS FALSE))));
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c40)*(v0.c2)) IN (INSTR(x'a605', '1'), (t0.c76 IN ())))) ORDER BY (~ ((t0.c0 IN (t0.c76))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)*(v0.c2)) IN (INSTR(x'a605', '1'), (t0.c76 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((t0.c0 IN (t0.c76))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c40)*(v0.c2)) IN (INSTR(x'a605', '1'), (t0.c76 IN ())))) ORDER BY (~ ((t0.c0 IN (t0.c76))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)*(v0.c2)) IN (INSTR(x'a605', '1'), (t0.c76 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((t0.c0 IN (t0.c76))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c40)*(v0.c2)) IN (INSTR(x'a605', '1'), (t0.c76 IN ())))) ORDER BY (~ ((t0.c0 IN (t0.c76))))  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (v0.c2) AND ('\y쒾}'))))) ORDER BY ((t0.c64) NOT NULL) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((UPPER(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT BETWEEN (v0.c2) AND ('\y쒾}'))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c64) NOT NULL) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((UPPER(NULL))))  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (v0.c2) AND ('\y쒾}'))))) ORDER BY ((t0.c64) NOT NULL) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((UPPER(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOT BETWEEN (v0.c2) AND ('\y쒾}'))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c64) NOT NULL) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((UPPER(NULL))))  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE ((NOT (((t0.c0) NOT BETWEEN (v0.c2) AND ('\y쒾}'))))) ORDER BY ((t0.c64) NOT NULL) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((UPPER(NULL))))  NULLS LAST;
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (t0.c64 IN ()) COLLATE RTRIM WHERE ((((0.2768600572750668)) NOT BETWEEN ((v0.c2)) AND ((((t0.c40) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2768600572750668)) NOT BETWEEN ((v0.c2)) AND ((((t0.c40) NOT NULL))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (t0.c64 IN ()) COLLATE RTRIM);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (t0.c64 IN ()) COLLATE RTRIM WHERE ((((0.2768600572750668)) NOT BETWEEN ((v0.c2)) AND ((((t0.c40) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2768600572750668)) NOT BETWEEN ((v0.c2)) AND ((((t0.c40) NOT NULL))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (t0.c64 IN ()) COLLATE RTRIM);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (t0.c64 IN ()) COLLATE RTRIM WHERE ((((0.2768600572750668)) NOT BETWEEN ((v0.c2)) AND ((((t0.c40) NOT NULL)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)AND(t0.c76)))OR(t0.c64)))>=(((t0.c64)>=(t0.c40)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c40)AND(t0.c76)))OR(t0.c64)))>=(((t0.c64)>=(t0.c40))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)AND(t0.c76)))OR(t0.c64)))>=(((t0.c64)>=(t0.c40)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c40)AND(t0.c76)))OR(t0.c64)))>=(((t0.c64)>=(t0.c40))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)AND(t0.c76)))OR(t0.c64)))>=(((t0.c64)>=(t0.c40)))));
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((NULL, t0.c76, v0.c2)) NOT BETWEEN ((t0.c64, t0.c0, t0.c0)) AND ((v0.c1, 0Xffffffffdc7d29bb, t0.c0))) COLLATE NOCASE COLLATE NOCASE WHERE (((v0.c0) BETWEEN (t0.c64) AND (t0.c64)) COLLATE BINARY) ORDER BY (((((v0.c2)OR(v0.c2)))AND(v0.c2)) IN (SUBSTR(t0.c64, v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t0.c64) AND (t0.c64)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((NULL, t0.c76, v0.c2)) NOT BETWEEN ((t0.c64, t0.c0, t0.c0)) AND ((v0.c1, 0xffffffffdc7d29bb, t0.c0))) COLLATE NOCASE COLLATE NOCASE ORDER BY (((((v0.c2)OR(v0.c2)))AND(v0.c2)) IN (SUBSTR(t0.c64, v0.c1))) ASC);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((NULL, t0.c76, v0.c2)) NOT BETWEEN ((t0.c64, t0.c0, t0.c0)) AND ((v0.c1, 0Xffffffffdc7d29bb, t0.c0))) COLLATE NOCASE COLLATE NOCASE WHERE (((v0.c0) BETWEEN (t0.c64) AND (t0.c64)) COLLATE BINARY) ORDER BY (((((v0.c2)OR(v0.c2)))AND(v0.c2)) IN (SUBSTR(t0.c64, v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (t0.c64) AND (t0.c64)) COLLATE BINARY) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((NULL, t0.c76, v0.c2)) NOT BETWEEN ((t0.c64, t0.c0, t0.c0)) AND ((v0.c1, 0xffffffffdc7d29bb, t0.c0))) COLLATE NOCASE COLLATE NOCASE ORDER BY (((((v0.c2)OR(v0.c2)))AND(v0.c2)) IN (SUBSTR(t0.c64, v0.c1))) ASC);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON (((NULL, t0.c76, v0.c2)) NOT BETWEEN ((t0.c64, t0.c0, t0.c0)) AND ((v0.c1, 0Xffffffffdc7d29bb, t0.c0))) COLLATE NOCASE COLLATE NOCASE WHERE (((v0.c0) BETWEEN (t0.c64) AND (t0.c64)) COLLATE BINARY) ORDER BY (((((v0.c2)OR(v0.c2)))AND(v0.c2)) IN (SUBSTR(t0.c64, v0.c1))) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE ((CASE WHEN x'c146' THEN v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'c146' THEN v0.c2 END IN ())) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((CASE WHEN x'c146' THEN v0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'c146' THEN v0.c2 END IN ())) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((CASE WHEN x'c146' THEN v0.c2 END IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE (0.9063151974251185) ORDER BY ((t0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0.9063151974251185) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c0) IS FALSE));
SELECT COUNT(*) FROM t0, v0 WHERE (0.9063151974251185) ORDER BY ((t0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((0.9063151974251185) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c0) IS FALSE));
SELECT COUNT(*) FROM t0, v0 WHERE (0.9063151974251185) ORDER BY ((t0.c0) IS FALSE);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (NOT (ABS(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (NOT (ABS(v0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (NOT (ABS(v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY (NOT (ABS(v0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY (NOT (ABS(v0.c1))) ASC;
SELECT * FROM t0, v0 WHERE (t0.c76) ORDER BY ((0.3241554207168992) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0, v0 ORDER BY ((0.3241554207168992) IS TRUE)  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (t0.c76) ORDER BY ((0.3241554207168992) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0, v0 ORDER BY ((0.3241554207168992) IS TRUE)  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (t0.c76) ORDER BY ((0.3241554207168992) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c2))==(('-710494641'))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2))==(('-710494641'))) AS TEXT)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c2))==(('-710494641'))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c2))==(('-710494641'))) AS TEXT)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST((((v0.c2))==(('-710494641'))) AS TEXT));
SELECT * FROM v0, t0 WHERE (((((t0.c76)>=(t0.c0)))AND(((((t0.c76)OR(t0.c76)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)>=(t0.c0)))AND(((((t0.c76)OR(t0.c76)))OR(x''))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c76)>=(t0.c0)))AND(((((t0.c76)OR(t0.c76)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)>=(t0.c0)))AND(((((t0.c76)OR(t0.c76)))OR(x''))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c76)>=(t0.c0)))AND(((((t0.c76)OR(t0.c76)))OR(x'')))));
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((0.8696054723889145)&(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((0.8696054723889145)&(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((0.8696054723889145)&(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((0.8696054723889145)&(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT ((0.8696054723889145)&(v0.c2))));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c76)==(((501464390)!=(v0.c1))))) ORDER BY GLOB((('-1517941332') BETWEEN (t0.c76) AND (v0.c2)), (((t0.c0)) BETWEEN ((x'')) AND ((t0.c76)))) ASC, ((LIKELY(v0.c1))-((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76)=(((501464390)!=(v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY GLOB((('-1517941332') BETWEEN (t0.c76) AND (v0.c2)), (((t0.c0)) BETWEEN ((x'')) AND ((t0.c76)))) ASC, ((LIKELY(v0.c1))-((NOT (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c76)==(((501464390)!=(v0.c1))))) ORDER BY GLOB((('-1517941332') BETWEEN (t0.c76) AND (v0.c2)), (((t0.c0)) BETWEEN ((x'')) AND ((t0.c76)))) ASC, ((LIKELY(v0.c1))-((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c76)=(((501464390)!=(v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY GLOB((('-1517941332') BETWEEN (t0.c76) AND (v0.c2)), (((t0.c0)) BETWEEN ((x'')) AND ((t0.c76)))) ASC, ((LIKELY(v0.c1))-((NOT (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c76)==(((501464390)!=(v0.c1))))) ORDER BY GLOB((('-1517941332') BETWEEN (t0.c76) AND (v0.c2)), (((t0.c0)) BETWEEN ((x'')) AND ((t0.c76)))) ASC, ((LIKELY(v0.c1))-((NOT (t0.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((('') NOT BETWEEN (((((NULL)OR(v0.c2)))OR(0.4624933374450829))) AND (((v0.c1)<>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((NULL)OR(v0.c2)))OR(0.4624933374450829))) AND (((v0.c1)!=(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('') NOT BETWEEN (((((NULL)OR(v0.c2)))OR(0.4624933374450829))) AND (((v0.c1)<>(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT BETWEEN (((((NULL)OR(v0.c2)))OR(0.4624933374450829))) AND (((v0.c1)!=(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((('') NOT BETWEEN (((((NULL)OR(v0.c2)))OR(0.4624933374450829))) AND (((v0.c1)<>(v0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c76)) NOT NULL)) ORDER BY (((((0.41556607157638514)|(t0.c76))))<((CASE t0.c76  WHEN x'1b244e2e' THEN t0.c0 END)))  NULLS LAST, (- (t0.c64)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c76)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((0.41556607157638514)|(t0.c76))))<((CASE t0.c76  WHEN x'1b244e2e' THEN t0.c0 END)))  NULLS LAST, (- (t0.c64)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c76)) NOT NULL)) ORDER BY (((((0.41556607157638514)|(t0.c76))))<((CASE t0.c76  WHEN x'1b244e2e' THEN t0.c0 END)))  NULLS LAST, (- (t0.c64)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t0.c76)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((((0.41556607157638514)|(t0.c76))))<((CASE t0.c76  WHEN x'1b244e2e' THEN t0.c0 END)))  NULLS LAST, (- (t0.c64)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKELY(DISTINCT t0.c76)) NOT NULL)) ORDER BY (((((0.41556607157638514)|(t0.c76))))<((CASE t0.c76  WHEN x'1b244e2e' THEN t0.c0 END)))  NULLS LAST, (- (t0.c64)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST((((t0.c64))>((t0.c40))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c64))>((t0.c40))) AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST((((t0.c64))>((t0.c40))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c64))>((t0.c40))) AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST((((t0.c64))>((t0.c40))) AS INTEGER));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(0.7818473751922067 AS TEXT) AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(0.7818473751922067 AS TEXT) AS INTEGER));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(0.7818473751922067 AS TEXT) AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(0.7818473751922067 AS TEXT) AS INTEGER));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(0.7818473751922067 AS TEXT) AS INTEGER) WHERE (NULL);
SELECT ALL * FROM v0 WHERE (2078941785) ORDER BY '1603987063' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((2078941785) IS TRUE)  as count FROM v0 ORDER BY '1603987063' COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (2078941785) ORDER BY '1603987063' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((2078941785) IS TRUE)  as count FROM v0 ORDER BY '1603987063' COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (2078941785) ORDER BY '1603987063' COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c76 IN ())) ORDER BY t0.c64, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c76 IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c64, x'' ASC);
SELECT ALL * FROM t0 WHERE ((t0.c76 IN ())) ORDER BY t0.c64, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c76 IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c64, x'' ASC);
SELECT ALL * FROM t0 WHERE ((t0.c76 IN ())) ORDER BY t0.c64, x'' ASC;
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c64 COLLATE NOCASE, CAST(t0.c76 AS INTEGER), ((t0.c76)<=(t0.c40))))<((((v0.c2) IS FALSE), v0.c1, HEX(DISTINCT v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c2))) ISNULL)  NULLS LAST, t0.c40 DESC, t0.c76 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c64 COLLATE NOCASE, CAST(t0.c76 AS INTEGER), ((t0.c76)<=(t0.c40))))<((((v0.c2) IS FALSE), v0.c1, HEX(DISTINCT v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)GLOB(v0.c2))) ISNULL)  NULLS LAST, t0.c40 DESC, t0.c76 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c64 COLLATE NOCASE, CAST(t0.c76 AS INTEGER), ((t0.c76)<=(t0.c40))))<((((v0.c2) IS FALSE), v0.c1, HEX(DISTINCT v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c2))) ISNULL)  NULLS LAST, t0.c40 DESC, t0.c76 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c64 COLLATE NOCASE, CAST(t0.c76 AS INTEGER), ((t0.c76)<=(t0.c40))))<((((v0.c2) IS FALSE), v0.c1, HEX(DISTINCT v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0)GLOB(v0.c2))) ISNULL)  NULLS LAST, t0.c40 DESC, t0.c76 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c64 COLLATE NOCASE, CAST(t0.c76 AS INTEGER), ((t0.c76)<=(t0.c40))))<((((v0.c2) IS FALSE), v0.c1, HEX(DISTINCT v0.c0))))) ORDER BY ((((v0.c0)GLOB(v0.c2))) ISNULL)  NULLS LAST, t0.c40 DESC, t0.c76 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>(v0.c0)))IS NOT(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>(v0.c0)))IS NOT(LIKELY(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>(v0.c0)))IS NOT(LIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>(v0.c0)))IS NOT(LIKELY(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)>(v0.c0)))IS NOT(LIKELY(v0.c0))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))+(((v0.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))+(((v0.c1)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))+(((v0.c1)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))+(((v0.c1)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))+(((v0.c1)*(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0)) BETWEEN ((v0.c2)) AND (('1752140925'))) IN ((+ (t0.c76))))) ORDER BY (+ ('-582595314'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) BETWEEN ((v0.c2)) AND (('1752140925'))) IN ((+ (t0.c76))))) IS TRUE)  as count FROM v0, t0 ORDER BY (+ ('-582595314'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0)) BETWEEN ((v0.c2)) AND (('1752140925'))) IN ((+ (t0.c76))))) ORDER BY (+ ('-582595314'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) BETWEEN ((v0.c2)) AND (('1752140925'))) IN ((+ (t0.c76))))) IS TRUE)  as count FROM v0, t0 ORDER BY (+ ('-582595314'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0)) BETWEEN ((v0.c2)) AND (('1752140925'))) IN ((+ (t0.c76))))) ORDER BY (+ ('-582595314'))  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2);
SELECT ALL * FROM t0, v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2);
SELECT ALL * FROM t0, v0 WHERE (CAST(v0.c0 AS BLOB)) ORDER BY v0.c2;
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c64) AND (v0.c2))) BETWEEN (v0.c2) AND (CAST(t0.c40 AS REAL)))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c64) AND (v0.c2))) BETWEEN (v0.c2) AND (CAST(t0.c40 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 ORDER BY v0.c0 ASC);
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c64) AND (v0.c2))) BETWEEN (v0.c2) AND (CAST(t0.c40 AS REAL)))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c64) AND (v0.c2))) BETWEEN (v0.c2) AND (CAST(t0.c40 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c0 ORDER BY v0.c0 ASC);
SELECT * FROM t0 FULL OUTER JOIN v0 ON t0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c64) AND (v0.c2))) BETWEEN (v0.c2) AND (CAST(t0.c40 AS REAL)))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))));
SELECT * FROM t0, v0 WHERE ((~ (((v0.c0) NOT BETWEEN (t0.c40) AND (v0.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c0)AND(t0.c64)))AND(t0.c40)), 0.40165777956169113) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT BETWEEN (t0.c40) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKELIHOOD(DISTINCT ((((t0.c0)AND(t0.c64)))AND(t0.c40)), 0.40165777956169113) DESC);
SELECT * FROM t0, v0 WHERE ((~ (((v0.c0) NOT BETWEEN (t0.c40) AND (v0.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c0)AND(t0.c64)))AND(t0.c40)), 0.40165777956169113) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT BETWEEN (t0.c40) AND (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKELIHOOD(DISTINCT ((((t0.c0)AND(t0.c64)))AND(t0.c40)), 0.40165777956169113) DESC);
SELECT * FROM t0, v0 WHERE ((~ (((v0.c0) NOT BETWEEN (t0.c40) AND (v0.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((((t0.c0)AND(t0.c64)))AND(t0.c40)), 0.40165777956169113) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)) BETWEEN ((((t0.c40)AND(t0.c64)))) AND ((((t0.c0)>=(t0.c40)))))) ORDER BY ABS(DISTINCT (((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)) BETWEEN ((((t0.c40)AND(t0.c64)))) AND ((((t0.c0)>=(t0.c40)))))) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT (((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)) BETWEEN ((((t0.c40)AND(t0.c64)))) AND ((((t0.c0)>=(t0.c40)))))) ORDER BY ABS(DISTINCT (((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c40)) BETWEEN ((((t0.c40)AND(t0.c64)))) AND ((((t0.c0)>=(t0.c40)))))) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT (((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)) BETWEEN ((((t0.c40)AND(t0.c64)))) AND ((((t0.c0)>=(t0.c40)))))) ORDER BY ABS(DISTINCT (((t0.c64)) BETWEEN ((t0.c64)) AND ((t0.c76)))) ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ((t0.c40) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (t0.c40);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c1))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (v0.c1)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c40 AS BLOB)  WHEN ((t0.c40) ISNULL) THEN CAST(t0.c0 AS REAL) WHEN ((1.7976931348623157E308)*(t0.c40)) THEN ((t0.c64) IS FALSE) WHEN CASE WHEN t0.c76 THEN t0.c0 WHEN t0.c40 THEN t0.c40 WHEN t0.c76 THEN t0.c64 END THEN t0.c40 ELSE ((t0.c40) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c40 AS BLOB)  WHEN ((t0.c40) ISNULL) THEN CAST(t0.c0 AS REAL) WHEN ((1.7976931348623157E308)*(t0.c40)) THEN ((t0.c64) IS FALSE) WHEN CASE WHEN t0.c76 THEN t0.c0 WHEN t0.c40 THEN t0.c40 WHEN t0.c76 THEN t0.c64 END THEN t0.c40 ELSE ((t0.c40) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c40 AS BLOB)  WHEN ((t0.c40) ISNULL) THEN CAST(t0.c0 AS REAL) WHEN ((1.7976931348623157E308)*(t0.c40)) THEN ((t0.c64) IS FALSE) WHEN CASE WHEN t0.c76 THEN t0.c0 WHEN t0.c40 THEN t0.c40 WHEN t0.c76 THEN t0.c64 END THEN t0.c40 ELSE ((t0.c40) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c40 AS BLOB)  WHEN ((t0.c40) ISNULL) THEN CAST(t0.c0 AS REAL) WHEN ((1.7976931348623157E308)*(t0.c40)) THEN ((t0.c64) IS FALSE) WHEN CASE WHEN t0.c76 THEN t0.c0 WHEN t0.c40 THEN t0.c40 WHEN t0.c76 THEN t0.c64 END THEN t0.c40 ELSE ((t0.c40) ISNULL) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE CAST(t0.c40 AS BLOB)  WHEN ((t0.c40) ISNULL) THEN CAST(t0.c0 AS REAL) WHEN ((1.7976931348623157E308)*(t0.c40)) THEN ((t0.c64) IS FALSE) WHEN CASE WHEN t0.c76 THEN t0.c0 WHEN t0.c40 THEN t0.c40 WHEN t0.c76 THEN t0.c64 END THEN t0.c40 ELSE ((t0.c40) ISNULL) END);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (((((((((((t0.c76)AND(t0.c76)))AND(t0.c64)))AND(t0.c76)))OR(t0.c0)))>>(CASE t0.c40  WHEN t0.c64 THEN t0.c64 END))) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)AND(t0.c76)))AND(t0.c64)))AND(t0.c76)))OR(t0.c0)))>>(CASE t0.c40  WHEN t0.c64 THEN t0.c64 END))) IS TRUE)  as count FROM t0 INDEXED BY i73 ORDER BY t0.c40 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (((((((((((t0.c76)AND(t0.c76)))AND(t0.c64)))AND(t0.c76)))OR(t0.c0)))>>(CASE t0.c40  WHEN t0.c64 THEN t0.c64 END))) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)AND(t0.c76)))AND(t0.c64)))AND(t0.c76)))OR(t0.c0)))>>(CASE t0.c40  WHEN t0.c64 THEN t0.c64 END))) IS TRUE)  as count FROM t0 INDEXED BY i73 ORDER BY t0.c40 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (((((((((((t0.c76)AND(t0.c76)))AND(t0.c64)))AND(t0.c76)))OR(t0.c0)))>>(CASE t0.c40  WHEN t0.c64 THEN t0.c64 END))) ORDER BY t0.c40 ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE ('0.07050128961566549');
SELECT SUM(count) FROM (SELECT (('0.07050128961566549') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('0.07050128961566549');
SELECT SUM(count) FROM (SELECT (('0.07050128961566549') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('0.07050128961566549');
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE BINARY)AND(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c1 DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)AND(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END))) ORDER BY v0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c64)>('-1111854242')) COLLATE RTRIM) ORDER BY CASE (t0.c64 IN ())  WHEN (t0.c0 IN (t0.c64)) THEN ((t0.c64) BETWEEN (t0.c40) AND (v0.c0)) WHEN v0.c0 THEN ((t0.c76) BETWEEN (t0.c40) AND ('145382555')) WHEN t0.c76 COLLATE RTRIM THEN ((t0.c40) NOT NULL) WHEN CASE t0.c64  WHEN v0.c2 THEN t0.c40 WHEN 0xfffffffffe818d3c THEN t0.c40 WHEN v0.c1 THEN 'U㡉' ELSE v0.c1 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c1)AND(t0.c0)))OR(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c64)>('-1111854242')) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (t0.c64 IN ())  WHEN (t0.c0 IN (t0.c64)) THEN ((t0.c64) BETWEEN (t0.c40) AND (v0.c0)) WHEN v0.c0 THEN ((t0.c76) BETWEEN (t0.c40) AND ('145382555')) WHEN t0.c76 COLLATE RTRIM THEN ((t0.c40) NOT NULL) WHEN CASE t0.c64  WHEN v0.c2 THEN t0.c40 WHEN 0Xfffffffffe818d3c THEN t0.c40 WHEN v0.c1 THEN 'U㡉' ELSE v0.c1 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c1)AND(t0.c0)))OR(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c64)>('-1111854242')) COLLATE RTRIM) ORDER BY CASE (t0.c64 IN ())  WHEN (t0.c0 IN (t0.c64)) THEN ((t0.c64) BETWEEN (t0.c40) AND (v0.c0)) WHEN v0.c0 THEN ((t0.c76) BETWEEN (t0.c40) AND ('145382555')) WHEN t0.c76 COLLATE RTRIM THEN ((t0.c40) NOT NULL) WHEN CASE t0.c64  WHEN v0.c2 THEN t0.c40 WHEN 0xfffffffffe818d3c THEN t0.c40 WHEN v0.c1 THEN 'U㡉' ELSE v0.c1 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c1)AND(t0.c0)))OR(v0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c64)>('-1111854242')) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (t0.c64 IN ())  WHEN (t0.c0 IN (t0.c64)) THEN ((t0.c64) BETWEEN (t0.c40) AND (v0.c0)) WHEN v0.c0 THEN ((t0.c76) BETWEEN (t0.c40) AND ('145382555')) WHEN t0.c76 COLLATE RTRIM THEN ((t0.c40) NOT NULL) WHEN CASE t0.c64  WHEN v0.c2 THEN t0.c40 WHEN 0Xfffffffffe818d3c THEN t0.c40 WHEN v0.c1 THEN 'U㡉' ELSE v0.c1 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c1)AND(t0.c0)))OR(v0.c2)) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c64)>('-1111854242')) COLLATE RTRIM) ORDER BY CASE (t0.c64 IN ())  WHEN (t0.c0 IN (t0.c64)) THEN ((t0.c64) BETWEEN (t0.c40) AND (v0.c0)) WHEN v0.c0 THEN ((t0.c76) BETWEEN (t0.c40) AND ('145382555')) WHEN t0.c76 COLLATE RTRIM THEN ((t0.c40) NOT NULL) WHEN CASE t0.c64  WHEN v0.c2 THEN t0.c40 WHEN 0xfffffffffe818d3c THEN t0.c40 WHEN v0.c1 THEN 'U㡉' ELSE v0.c1 END THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN v0.c0 COLLATE RTRIM THEN ((((v0.c1)AND(t0.c0)))OR(v0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c2 COLLATE RTRIM IN (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE RTRIM IN (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c2 COLLATE RTRIM IN (CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE RTRIM IN (CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((v0.c2 COLLATE RTRIM IN (CAST(v0.c1 AS TEXT))));
SELECT ALL * FROM v0 WHERE (CASE WHEN '-932795089' THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c1))) ELSE ((v0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-932795089' THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c1))) ELSE ((v0.c2) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN '-932795089' THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c1))) ELSE ((v0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-932795089' THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c1))) ELSE ((v0.c2) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN '-932795089' THEN (((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c1))) ELSE ((v0.c2) NOTNULL) END);
SELECT * FROM v0 WHERE (CASE WHEN (('/')<(v0.c2)) THEN UNLIKELY(v0.c2) END) ORDER BY '0.5850439754768652'  NULLS FIRST, (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(v0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('/')<(v0.c2)) THEN UNLIKELY(v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY '0.5850439754768652'  NULLS FIRST, (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(v0.c0)));
SELECT * FROM v0 WHERE (CASE WHEN (('/')<(v0.c2)) THEN UNLIKELY(v0.c2) END) ORDER BY '0.5850439754768652'  NULLS FIRST, (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(v0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('/')<(v0.c2)) THEN UNLIKELY(v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY '0.5850439754768652'  NULLS FIRST, (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(v0.c0)));
SELECT * FROM v0 WHERE (CASE WHEN (('/')<(v0.c2)) THEN UNLIKELY(v0.c2) END) ORDER BY '0.5850439754768652'  NULLS FIRST, (((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))))-(v0.c0));
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c0))=((t0.c76)))) ORDER BY CASE WHEN (t0.c64 IN ()) THEN t0.c64 ELSE CAST(t0.c76 AS BLOB) END ASC  NULLS FIRST, x'f1ae' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))=((t0.c76)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN (t0.c64 IN ()) THEN t0.c64 ELSE CAST(t0.c76 AS BLOB) END ASC  NULLS FIRST, x'f1ae' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c0))=((t0.c76)))) ORDER BY CASE WHEN (t0.c64 IN ()) THEN t0.c64 ELSE CAST(t0.c76 AS BLOB) END ASC  NULLS FIRST, x'f1ae' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))=((t0.c76)))) IS TRUE)  as count FROM t0, v0 ORDER BY CASE WHEN (t0.c64 IN ()) THEN t0.c64 ELSE CAST(t0.c76 AS BLOB) END ASC  NULLS FIRST, x'f1ae' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((v0.c0))=((t0.c76)))) ORDER BY CASE WHEN (t0.c64 IN ()) THEN t0.c64 ELSE CAST(t0.c76 AS BLOB) END ASC  NULLS FIRST, x'f1ae' COLLATE NOCASE  NULLS LAST;
SELECT * FROM v0 NOT INDEXED, t0 WHERE (CASE x'0eef'  WHEN CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c1 WHEN t0.c64 THEN v0.c0 ELSE v0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c76 END END) ORDER BY ((((t0.c76)AND(t0.c0)))AND((((t0.c0, t0.c40, t0.c40))==((t0.c64, t0.c0, t0.c64))))) ASC  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE x'0eef'  WHEN CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c1 WHEN t0.c64 THEN v0.c0 ELSE v0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c76 END END) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c76)AND(t0.c0)))AND((((t0.c0, t0.c40, t0.c40))=((t0.c64, t0.c0, t0.c64))))) ASC  NULLS LAST, NULL ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (CASE x'0eef'  WHEN CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c1 WHEN t0.c64 THEN v0.c0 ELSE v0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c76 END END) ORDER BY ((((t0.c76)AND(t0.c0)))AND((((t0.c0, t0.c40, t0.c40))==((t0.c64, t0.c0, t0.c64))))) ASC  NULLS LAST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE x'0eef'  WHEN CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c1 WHEN t0.c64 THEN v0.c0 ELSE v0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c76 END END) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c76)AND(t0.c0)))AND((((t0.c0, t0.c40, t0.c40))=((t0.c64, t0.c0, t0.c64))))) ASC  NULLS LAST, NULL ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (CASE x'0eef'  WHEN CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c1 WHEN t0.c64 THEN v0.c0 ELSE v0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c76 END END) ORDER BY ((((t0.c76)AND(t0.c0)))AND((((t0.c0, t0.c40, t0.c40))==((t0.c64, t0.c0, t0.c64))))) ASC  NULLS LAST, NULL ASC  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((((t0.c64) NOT NULL))!=(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) WHERE (((((((((((v0.c2)|(v0.c2)))AND(TIME(t0.c0, v0.c2, t0.c40, v0.c1, v0.c0))))AND((- (v0.c1)))))AND(t0.c76)))AND(v0.c1))) ORDER BY 0.6938500434438069;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)|(v0.c2)))AND(TIME(t0.c0, v0.c2, t0.c40, v0.c1, v0.c0))))AND((- (v0.c1)))))AND(t0.c76)))AND(v0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((t0.c64) NOT NULL))!=(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) ORDER BY 0.6938500434438069);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((((t0.c64) NOT NULL))!=(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) WHERE (((((((((((v0.c2)|(v0.c2)))AND(TIME(t0.c0, v0.c2, t0.c40, v0.c1, v0.c0))))AND((- (v0.c1)))))AND(t0.c76)))AND(v0.c1))) ORDER BY 0.6938500434438069;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c2)|(v0.c2)))AND(TIME(t0.c0, v0.c2, t0.c40, v0.c1, v0.c0))))AND((- (v0.c1)))))AND(t0.c76)))AND(v0.c1))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((t0.c64) NOT NULL))!=(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) ORDER BY 0.6938500434438069);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((((t0.c64) NOT NULL))!=(((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))) WHERE (((((((((((v0.c2)|(v0.c2)))AND(TIME(t0.c0, v0.c2, t0.c40, v0.c1, v0.c0))))AND((- (v0.c1)))))AND(t0.c76)))AND(v0.c1))) ORDER BY 0.6938500434438069;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE))|(json_insert(v0.c2, v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE))|(json_insert(v0.c2, v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) IS FALSE))|(json_insert(v0.c2, v0.c0, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS FALSE))|(json_insert(v0.c2, v0.c0, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c40)OR(t0.c0)))AND(t0.c64))  WHEN json_valid(t0.c76) THEN ((((t0.c76)OR(t0.c40)))OR(t0.c40)) END) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c76) AND (t0.c0))  WHEN (t0.c40 IN ()) THEN (('')<<(t0.c40)) WHEN (('2064295930')||(0.8354798697408751)) THEN 'k<pO9N&	' WHEN ((((t0.c0)OR(t0.c40)))AND(t0.c64)) THEN ((t0.c40) BETWEEN (t0.c0) AND (t0.c40)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c40)OR(t0.c0)))AND(t0.c64))  WHEN json_valid(t0.c76) THEN ((((t0.c76)OR(t0.c40)))OR(t0.c40)) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c76) AND (t0.c0))  WHEN (t0.c40 IN ()) THEN (('')<<(t0.c40)) WHEN (('2064295930')||(0.8354798697408751)) THEN 'k<pO9N&	' WHEN ((((t0.c0)OR(t0.c40)))AND(t0.c64)) THEN ((t0.c40) BETWEEN (t0.c0) AND (t0.c40)) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c40)OR(t0.c0)))AND(t0.c64))  WHEN json_valid(t0.c76) THEN ((((t0.c76)OR(t0.c40)))OR(t0.c40)) END) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c76) AND (t0.c0))  WHEN (t0.c40 IN ()) THEN (('')<<(t0.c40)) WHEN (('2064295930')||(0.8354798697408751)) THEN 'k<pO9N&	' WHEN ((((t0.c0)OR(t0.c40)))AND(t0.c64)) THEN ((t0.c40) BETWEEN (t0.c0) AND (t0.c40)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c40)OR(t0.c0)))AND(t0.c64))  WHEN json_valid(t0.c76) THEN ((((t0.c76)OR(t0.c40)))OR(t0.c40)) END) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c76) AND (t0.c0))  WHEN (t0.c40 IN ()) THEN (('')<<(t0.c40)) WHEN (('2064295930')||(0.8354798697408751)) THEN 'k<pO9N&	' WHEN ((((t0.c0)OR(t0.c40)))AND(t0.c64)) THEN ((t0.c40) BETWEEN (t0.c0) AND (t0.c40)) END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE ((((t0.c40)OR(t0.c0)))AND(t0.c64))  WHEN json_valid(t0.c76) THEN ((((t0.c76)OR(t0.c40)))OR(t0.c40)) END) ORDER BY CASE ((t0.c0) NOT BETWEEN (t0.c76) AND (t0.c0))  WHEN (t0.c40 IN ()) THEN (('')<<(t0.c40)) WHEN (('2064295930')||(0.8354798697408751)) THEN 'k<pO9N&	' WHEN ((((t0.c0)OR(t0.c40)))AND(t0.c64)) THEN ((t0.c40) BETWEEN (t0.c0) AND (t0.c40)) END  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE (v0.c1 IN (t0.c0))  WHEN x'' THEN LIKELY(DISTINCT t0.c76) ELSE ((t0.c40)||(v0.c2)) END WHERE ((((0.36246895542099355, t0.c40, t0.c40)) NOT BETWEEN ((CASE t0.c64  WHEN t0.c76 THEN v0.c2 WHEN t0.c64 THEN t0.c0 WHEN t0.c40 THEN v0.c1 END, '', ((((((((t0.c40)OR(t0.c76)))AND('')))AND(t0.c64)))AND(t0.c40)))) AND (((((v0.c1))!=((t0.c64))), (((t0.c76, t0.c0, v0.c2)) NOT BETWEEN ((v0.c2, 0xffffffff81b1629c, t0.c40)) AND ((v0.c0, v0.c1, ''))), (('') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.36246895542099355, t0.c40, t0.c40)) NOT BETWEEN ((CASE t0.c64  WHEN t0.c76 THEN v0.c2 WHEN t0.c64 THEN t0.c0 WHEN t0.c40 THEN v0.c1 END, '', ((((((((t0.c40)OR(t0.c76)))AND('')))AND(t0.c64)))AND(t0.c40)))) AND (((((v0.c1))!=((t0.c64))), (((t0.c76, t0.c0, v0.c2)) NOT BETWEEN ((v0.c2, 0Xffffffff81b1629c, t0.c40)) AND ((v0.c0, v0.c1, ''))), (('') NOT NULL))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE (v0.c1 IN (t0.c0))  WHEN x'' THEN LIKELY(DISTINCT t0.c76) ELSE ((t0.c40)||(v0.c2)) END);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE (v0.c1 IN (t0.c0))  WHEN x'' THEN LIKELY(DISTINCT t0.c76) ELSE ((t0.c40)||(v0.c2)) END WHERE ((((0.36246895542099355, t0.c40, t0.c40)) NOT BETWEEN ((CASE t0.c64  WHEN t0.c76 THEN v0.c2 WHEN t0.c64 THEN t0.c0 WHEN t0.c40 THEN v0.c1 END, '', ((((((((t0.c40)OR(t0.c76)))AND('')))AND(t0.c64)))AND(t0.c40)))) AND (((((v0.c1))!=((t0.c64))), (((t0.c76, t0.c0, v0.c2)) NOT BETWEEN ((v0.c2, 0xffffffff81b1629c, t0.c40)) AND ((v0.c0, v0.c1, ''))), (('') NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((0.36246895542099355, t0.c40, t0.c40)) NOT BETWEEN ((CASE t0.c64  WHEN t0.c76 THEN v0.c2 WHEN t0.c64 THEN t0.c0 WHEN t0.c40 THEN v0.c1 END, '', ((((((((t0.c40)OR(t0.c76)))AND('')))AND(t0.c64)))AND(t0.c40)))) AND (((((v0.c1))!=((t0.c64))), (((t0.c76, t0.c0, v0.c2)) NOT BETWEEN ((v0.c2, 0Xffffffff81b1629c, t0.c40)) AND ((v0.c0, v0.c1, ''))), (('') NOT NULL))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE (v0.c1 IN (t0.c0))  WHEN x'' THEN LIKELY(DISTINCT t0.c76) ELSE ((t0.c40)||(v0.c2)) END);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE (v0.c1 IN (t0.c0))  WHEN x'' THEN LIKELY(DISTINCT t0.c76) ELSE ((t0.c40)||(v0.c2)) END WHERE ((((0.36246895542099355, t0.c40, t0.c40)) NOT BETWEEN ((CASE t0.c64  WHEN t0.c76 THEN v0.c2 WHEN t0.c64 THEN t0.c0 WHEN t0.c40 THEN v0.c1 END, '', ((((((((t0.c40)OR(t0.c76)))AND('')))AND(t0.c64)))AND(t0.c40)))) AND (((((v0.c1))!=((t0.c64))), (((t0.c76, t0.c0, v0.c2)) NOT BETWEEN ((v0.c2, 0xffffffff81b1629c, t0.c40)) AND ((v0.c0, v0.c1, ''))), (('') NOT NULL)))));
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c0)))OR(t0.c64)))OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END) AND ((((t0.c76)) BETWEEN ((0xffffffffc1067628)) AND ((-1054347896))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(t0.c0)))OR(t0.c64)))OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END) AND ((((t0.c76)) BETWEEN ((0xffffffffc1067628)) AND ((-1054347896)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c0)))OR(t0.c64)))OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END) AND ((((t0.c76)) BETWEEN ((0xffffffffc1067628)) AND ((-1054347896))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(t0.c0)))OR(t0.c64)))OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END) AND ((((t0.c76)) BETWEEN ((0xffffffffc1067628)) AND ((-1054347896)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((v0.c2)AND(t0.c0)))OR(t0.c64)))OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (CASE WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 END) AND ((((t0.c76)) BETWEEN ((0xffffffffc1067628)) AND ((-1054347896))))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL))*(((t0.c76)<<(t0.c64))))) ORDER BY ((((NULL)>>(t0.c76))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))*(((t0.c76)<<(t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)>>(t0.c76))) NOT NULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL))*(((t0.c76)<<(t0.c64))))) ORDER BY ((((NULL)>>(t0.c76))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))*(((t0.c76)<<(t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY ((((NULL)>>(t0.c76))) NOT NULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL))*(((t0.c76)<<(t0.c64))))) ORDER BY ((((NULL)>>(t0.c76))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0, v0 WHERE (NULL COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (NULL COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (NULL COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE CAST(v0.c1 AS REAL)  WHEN (~ (v0.c2)) THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c1 AS REAL)  WHEN (~ (v0.c2)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE CAST(v0.c1 AS REAL)  WHEN (~ (v0.c2)) THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c1 AS REAL)  WHEN (~ (v0.c2)) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (CASE CAST(v0.c1 AS REAL)  WHEN (~ (v0.c2)) THEN (t0.c0 IN ()) END);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ()));
SELECT * FROM t0, v0 WHERE ((((((v0.c2)AND(v0.c2)))OR(t0.c40)) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c76) AND (t0.c76))) BETWEEN ((~ (t0.c0))) AND ('錪'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)AND(v0.c2)))OR(t0.c40)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c76) AND (t0.c76))) BETWEEN ((~ (t0.c0))) AND ('錪'))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((((v0.c2)AND(v0.c2)))OR(t0.c40)) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c76) AND (t0.c76))) BETWEEN ((~ (t0.c0))) AND ('錪'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2)AND(v0.c2)))OR(t0.c40)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c76) AND (t0.c76))) BETWEEN ((~ (t0.c0))) AND ('錪'))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((((v0.c2)AND(v0.c2)))OR(t0.c40)) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c76) AND (t0.c76))) BETWEEN ((~ (t0.c0))) AND ('錪'))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)/(x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)/(x''))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)/(x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)/(x''))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c0)/(x''))) IS FALSE);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))>(v0.c1))) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) ASC, ((((((((((v0.c1)OR(x'148a')))OR(0.8477283636605343)))AND(v0.c2)))AND(v0.c1)))GLOB(CAST(v0.c2 AS TEXT))) DESC, CAST((NOT (v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))>(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) ASC, ((((((((((v0.c1)OR(x'148a')))OR(0.8477283636605343)))AND(v0.c2)))AND(v0.c1)))GLOB(CAST(v0.c2 AS TEXT))) DESC, CAST((NOT (v0.c0)) AS INTEGER) ASC);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))>(v0.c1))) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) ASC, ((((((((((v0.c1)OR(x'148a')))OR(0.8477283636605343)))AND(v0.c2)))AND(v0.c1)))GLOB(CAST(v0.c2 AS TEXT))) DESC, CAST((NOT (v0.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))>(v0.c1))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) ASC, ((((((((((v0.c1)OR(x'148a')))OR(0.8477283636605343)))AND(v0.c2)))AND(v0.c1)))GLOB(CAST(v0.c2 AS TEXT))) DESC, CAST((NOT (v0.c0)) AS INTEGER) ASC);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))>(v0.c1))) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) ASC, ((((((((((v0.c1)OR(x'148a')))OR(0.8477283636605343)))AND(v0.c2)))AND(v0.c1)))GLOB(CAST(v0.c2 AS TEXT))) DESC, CAST((NOT (v0.c0)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c1)>>(NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c1)>>(NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c1)>>(NULL)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c1)>>(NULL))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((v0.c1)>>(NULL)))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((NULL) NOT BETWEEN (((t0.c64) NOT NULL)) AND (('1629624095' IN ()))) WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY (((0x2b67dbff)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((NULL) NOT BETWEEN (((t0.c64) NOT NULL)) AND (('1629624095' IN ()))) ORDER BY (((0X2b67dbff)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((NULL) NOT BETWEEN (((t0.c64) NOT NULL)) AND (('1629624095' IN ()))) WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY (((0x2b67dbff)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((NULL) NOT BETWEEN (((t0.c64) NOT NULL)) AND (('1629624095' IN ()))) ORDER BY (((0X2b67dbff)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((NULL) NOT BETWEEN (((t0.c64) NOT NULL)) AND (('1629624095' IN ()))) WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY (((0x2b67dbff)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM) ORDER BY ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 END)AND(((v0.c2)||(v0.c0)))))AND(((((v0.c1)OR(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 END)AND(((v0.c2)||(v0.c0)))))AND(((((v0.c1)OR(v0.c1)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM) ORDER BY ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 END)AND(((v0.c2)||(v0.c0)))))AND(((((v0.c1)OR(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 END)AND(((v0.c2)||(v0.c0)))))AND(((((v0.c1)OR(v0.c1)))OR(v0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c2  WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM) ORDER BY ((((CASE v0.c2  WHEN v0.c2 THEN v0.c1 END)AND(((v0.c2)||(v0.c0)))))AND(((((v0.c1)OR(v0.c1)))OR(v0.c1))))  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((((t0.c40)) NOT BETWEEN ((((v0.c0)LIKE(t0.c76)))) AND ((((((NULL)OR(t0.c64)))AND(t0.c64))))));
SELECT SUM(count) FROM (SELECT (((((t0.c40)) NOT BETWEEN ((((v0.c0)LIKE(t0.c76)))) AND ((((((NULL)OR(t0.c64)))AND(t0.c64)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((t0.c40)) NOT BETWEEN ((((v0.c0)LIKE(t0.c76)))) AND ((((((NULL)OR(t0.c64)))AND(t0.c64))))));
SELECT SUM(count) FROM (SELECT (((((t0.c40)) NOT BETWEEN ((((v0.c0)LIKE(t0.c76)))) AND ((((((NULL)OR(t0.c64)))AND(t0.c64)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((t0.c40)) NOT BETWEEN ((((v0.c0)LIKE(t0.c76)))) AND ((((((NULL)OR(t0.c64)))AND(t0.c64))))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)LIKE(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)LIKE(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)LIKE(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)LIKE(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)LIKE(v0.c2)) IN ()));
SELECT * FROM t0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END))) WHERE ((- (((t0.c40)LIKE(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c40)LIKE(t0.c64))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END))));
SELECT * FROM t0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END))) WHERE ((- (((t0.c40)LIKE(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c40)LIKE(t0.c64))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END))));
SELECT * FROM t0 INNER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((- (v0.c0)))) AND ((CASE WHEN t0.c64 THEN t0.c64 ELSE t0.c64 END))) WHERE ((- (((t0.c40)LIKE(t0.c64)))));
SELECT * FROM t0 WHERE (0.3476857702187708);
SELECT SUM(count) FROM (SELECT ALL ((0.3476857702187708) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.3476857702187708);
SELECT SUM(count) FROM (SELECT ALL ((0.3476857702187708) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (0.3476857702187708);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((v0.c0 COLLATE NOCASE)<((NOT (v0.c0)))) WHERE ((((((((((((((((v0.c0)AND(t0.c76)))OR(v0.c1)))OR(t0.c0)))OR(0.3079038808912624)))OR(t0.c64)))AND(v0.c2)), ((t0.c0)>>(0.17358927998094997)), ((((t0.c40)AND(v0.c1)))AND(t0.c76))))<=((((t0.c64)>(t0.c0)), (v0.c2 IN (t0.c64, t0.c64)), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((v0.c0)AND(t0.c76)))OR(v0.c1)))OR(t0.c0)))OR(0.3079038808912624)))OR(t0.c64)))AND(v0.c2)), ((t0.c0)>>(0.17358927998094997)), ((((t0.c40)AND(v0.c1)))AND(t0.c76))))<=((((t0.c64)>(t0.c0)), (v0.c2 IN (t0.c64, t0.c64)), v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((v0.c0 COLLATE NOCASE)<((NOT (v0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((v0.c0 COLLATE NOCASE)<((NOT (v0.c0)))) WHERE ((((((((((((((((v0.c0)AND(t0.c76)))OR(v0.c1)))OR(t0.c0)))OR(0.3079038808912624)))OR(t0.c64)))AND(v0.c2)), ((t0.c0)>>(0.17358927998094997)), ((((t0.c40)AND(v0.c1)))AND(t0.c76))))<=((((t0.c64)>(t0.c0)), (v0.c2 IN (t0.c64, t0.c64)), v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((v0.c0)AND(t0.c76)))OR(v0.c1)))OR(t0.c0)))OR(0.3079038808912624)))OR(t0.c64)))AND(v0.c2)), ((t0.c0)>>(0.17358927998094997)), ((((t0.c40)AND(v0.c1)))AND(t0.c76))))<=((((t0.c64)>(t0.c0)), (v0.c2 IN (t0.c64, t0.c64)), v0.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((v0.c0 COLLATE NOCASE)<((NOT (v0.c0)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((v0.c0 COLLATE NOCASE)<((NOT (v0.c0)))) WHERE ((((((((((((((((v0.c0)AND(t0.c76)))OR(v0.c1)))OR(t0.c0)))OR(0.3079038808912624)))OR(t0.c64)))AND(v0.c2)), ((t0.c0)>>(0.17358927998094997)), ((((t0.c40)AND(v0.c1)))AND(t0.c76))))<=((((t0.c64)>(t0.c0)), (v0.c2 IN (t0.c64, t0.c64)), v0.c0))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END)*(CAST(t0.c40 AS NUMERIC)))) ORDER BY CASE (('?') BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c76)*(t0.c76)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c40) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END)*(CAST(t0.c40 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CASE (('?') BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c76)*(t0.c76)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c40) IS TRUE) END);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END)*(CAST(t0.c40 AS NUMERIC)))) ORDER BY CASE (('?') BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c76)*(t0.c76)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c40) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END)*(CAST(t0.c40 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CASE (('?') BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c76)*(t0.c76)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c40) IS TRUE) END);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END)*(CAST(t0.c40 AS NUMERIC)))) ORDER BY CASE (('?') BETWEEN (t0.c0) AND (t0.c0))  WHEN ((t0.c76)*(t0.c76)) THEN t0.c40 COLLATE NOCASE ELSE ((t0.c40) IS TRUE) END;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1 IN ())) NOT NULL));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY CAST(v0.c2 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(v0.c2 COLLATE NOCASE AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY CAST(v0.c2 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(v0.c2 COLLATE NOCASE AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY CAST(v0.c2 COLLATE NOCASE AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((('0.9060684430523225'))<=((t0.c40 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.9060684430523225'))<=((t0.c40 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('0.9060684430523225'))<=((t0.c40 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.9060684430523225'))<=((t0.c40 COLLATE RTRIM)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('0.9060684430523225'))<=((t0.c40 COLLATE RTRIM))));
SELECT * FROM v0 WHERE (LOWER(((v0.c0)&(v0.c1)))) ORDER BY CASE (((v0.c1, v0.c2, v0.c2, v0.c2, v0.c0))!=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c2)))  WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c2))>=(('x'))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((v0.c0)&(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c1, v0.c2, v0.c2, v0.c2, v0.c0))!=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c2)))  WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c2))>=(('x'))) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LOWER(((v0.c0)&(v0.c1)))) ORDER BY CASE (((v0.c1, v0.c2, v0.c2, v0.c2, v0.c0))!=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c2)))  WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c2))>=(('x'))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((v0.c0)&(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE (((v0.c1, v0.c2, v0.c2, v0.c2, v0.c0))!=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c2)))  WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c2))>=(('x'))) END ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LOWER(((v0.c0)&(v0.c1)))) ORDER BY CASE (((v0.c1, v0.c2, v0.c2, v0.c2, v0.c0))!=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c2)))  WHEN CAST(v0.c0 AS INTEGER) THEN (((v0.c2))>=(('x'))) END ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c76, t0.c76, t0.c40)) NOT BETWEEN ((t0.c76, t0.c0, t0.c76)) AND ((t0.c40, t0.c64, t0.c0))) IN ((((t0.c76, t0.c0, t0.c76))<((t0.c64, t0.c76, t0.c76))), ((((t0.c40)AND(t0.c0)))OR(t0.c64))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE ((t0.c64)+(t0.c40)) END  NULLS FIRST, t0.c64 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c76, t0.c76, t0.c40)) NOT BETWEEN ((t0.c76, t0.c0, t0.c76)) AND ((t0.c40, t0.c64, t0.c0))) IN ((((t0.c76, t0.c0, t0.c76))<((t0.c64, t0.c76, t0.c76))), ((((t0.c40)AND(t0.c0)))OR(t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE ((t0.c64)+(t0.c40)) END  NULLS FIRST, t0.c64 DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c76, t0.c76, t0.c40)) NOT BETWEEN ((t0.c76, t0.c0, t0.c76)) AND ((t0.c40, t0.c64, t0.c0))) IN ((((t0.c76, t0.c0, t0.c76))<((t0.c64, t0.c76, t0.c76))), ((((t0.c40)AND(t0.c0)))OR(t0.c64))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE ((t0.c64)+(t0.c40)) END  NULLS FIRST, t0.c64 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c76, t0.c76, t0.c40)) NOT BETWEEN ((t0.c76, t0.c0, t0.c76)) AND ((t0.c40, t0.c64, t0.c0))) IN ((((t0.c76, t0.c0, t0.c76))<((t0.c64, t0.c76, t0.c76))), ((((t0.c40)AND(t0.c0)))OR(t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE ((t0.c64)+(t0.c40)) END  NULLS FIRST, t0.c64 DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c76, t0.c76, t0.c40)) NOT BETWEEN ((t0.c76, t0.c0, t0.c76)) AND ((t0.c40, t0.c64, t0.c0))) IN ((((t0.c76, t0.c0, t0.c76))<((t0.c64, t0.c76, t0.c76))), ((((t0.c40)AND(t0.c0)))OR(t0.c64))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN NULL THEN t0.c0 COLLATE RTRIM ELSE ((t0.c64)+(t0.c40)) END  NULLS FIRST, t0.c64 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (+ (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (+ (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (+ (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (+ (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((NOT (x''))) ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((NOT (x''))) ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN v0 WHERE ((NOT (x''))) ORDER BY ((t0.c0 IN ()) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c40 COLLATE BINARY) ISNULL)) ORDER BY CAST(((NULL) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c40 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL) ISNULL) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c40 COLLATE BINARY) ISNULL)) ORDER BY CAST(((NULL) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c40 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(((NULL) ISNULL) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c40 COLLATE BINARY) ISNULL)) ORDER BY CAST(((NULL) ISNULL) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c64 THEN 'e駉AxE' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c64 THEN 'e駉AxE' END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c64 THEN 'e駉AxE' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c64 THEN 'e駉AxE' END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c64 THEN 'e駉AxE' END AS TEXT));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)||(t0.c76))) ISNULL) WHERE ((((v0.c2))>((v0.c1))) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((((NULL)AND(t0.c40)))AND(v0.c1)))|(((t0.c76)==(t0.c0))))  NULLS LAST, CHAR(((((v0.c1)OR(t0.c0)))AND(t0.c64))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2))>((v0.c1))) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)||(t0.c76))) ISNULL) ORDER BY ((((((NULL)AND(t0.c40)))AND(v0.c1)))|(((t0.c76)==(t0.c0))))  NULLS LAST, CHAR(((((v0.c1)OR(t0.c0)))AND(t0.c64))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)||(t0.c76))) ISNULL) WHERE ((((v0.c2))>((v0.c1))) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((((NULL)AND(t0.c40)))AND(v0.c1)))|(((t0.c76)==(t0.c0))))  NULLS LAST, CHAR(((((v0.c1)OR(t0.c0)))AND(t0.c64))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2))>((v0.c1))) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)||(t0.c76))) ISNULL) ORDER BY ((((((NULL)AND(t0.c40)))AND(v0.c1)))|(((t0.c76)==(t0.c0))))  NULLS LAST, CHAR(((((v0.c1)OR(t0.c0)))AND(t0.c64))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c0)||(t0.c76))) ISNULL) WHERE ((((v0.c2))>((v0.c1))) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((((NULL)AND(t0.c40)))AND(v0.c1)))|(((t0.c76)==(t0.c0))))  NULLS LAST, CHAR(((((v0.c1)OR(t0.c0)))AND(t0.c64))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 INDEXED BY i23 WHERE (CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL END ELSE (+ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL END ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM t0, v0 INDEXED BY i23);
SELECT ALL COUNT(*) FROM t0, v0 INDEXED BY i23 WHERE (CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL END ELSE (+ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)LIKE(v0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN NULL END ELSE (+ (v0.c0)) END) IS TRUE)  as count FROM t0, v0 INDEXED BY i23);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)IS(v0.c2))) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)IS(v0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ALL ((t0.c76) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c76);
SELECT * FROM t0, v0 WHERE ((((CAST(t0.c0 AS INTEGER)))>=((((v0.c2)-(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS INTEGER)))>=((((v0.c2)-(t0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((CAST(t0.c0 AS INTEGER)))>=((((v0.c2)-(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c0 AS INTEGER)))>=((((v0.c2)-(t0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((CAST(t0.c0 AS INTEGER)))>=((((v0.c2)-(t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c76)AND(t0.c40)))AND(x'')))OR(((0x3ede1ac4) NOT NULL))))OR(((t0.c0) NOT NULL)))) ORDER BY (((((+ (t0.c0)))AND(((t0.c40)IS NOT(t0.c0)))))AND(LIKELY(DISTINCT t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c76)AND(t0.c40)))AND(x'')))OR(((0x3ede1ac4) NOT NULL))))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((+ (t0.c0)))AND(((t0.c40)IS NOT(t0.c0)))))AND(LIKELY(DISTINCT t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c76)AND(t0.c40)))AND(x'')))OR(((0x3ede1ac4) NOT NULL))))OR(((t0.c0) NOT NULL)))) ORDER BY (((((+ (t0.c0)))AND(((t0.c40)IS NOT(t0.c0)))))AND(LIKELY(DISTINCT t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c76)AND(t0.c40)))AND(x'')))OR(((0x3ede1ac4) NOT NULL))))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((+ (t0.c0)))AND(((t0.c40)IS NOT(t0.c0)))))AND(LIKELY(DISTINCT t0.c0))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((t0.c76)AND(t0.c40)))AND(x'')))OR(((0x3ede1ac4) NOT NULL))))OR(((t0.c0) NOT NULL)))) ORDER BY (((((+ (t0.c0)))AND(((t0.c40)IS NOT(t0.c0)))))AND(LIKELY(DISTINCT t0.c0))) ASC;
SELECT ALL * FROM v0, t0 INDEXED BY i23 WHERE (((((v0.c1) BETWEEN ('') AND (t0.c0))) BETWEEN ((t0.c76 IN ())) AND (((t0.c76)>=(t0.c40)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN ('') AND (t0.c0))) BETWEEN ((t0.c76 IN ())) AND (((t0.c76)>=(t0.c40))))) IS TRUE)  as count FROM v0, t0 INDEXED BY i23);
SELECT ALL * FROM v0, t0 INDEXED BY i23 WHERE (((((v0.c1) BETWEEN ('') AND (t0.c0))) BETWEEN ((t0.c76 IN ())) AND (((t0.c76)>=(t0.c40)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) BETWEEN ('') AND (t0.c0))) BETWEEN ((t0.c76 IN ())) AND (((t0.c76)>=(t0.c40))))) IS TRUE)  as count FROM v0, t0 INDEXED BY i23);
SELECT ALL * FROM v0, t0 INDEXED BY i23 WHERE (((((v0.c1) BETWEEN ('') AND (t0.c0))) BETWEEN ((t0.c76 IN ())) AND (((t0.c76)>=(t0.c40)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE t0.c64 COLLATE RTRIM  WHEN t0.c0 COLLATE NOCASE THEN x'd557' COLLATE BINARY ELSE ((t0.c64) BETWEEN (t0.c40) AND (v0.c2)) END) ORDER BY ((TRIM(DISTINCT t0.c0)) BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c40 THEN v0.c1 WHEN t0.c64 THEN t0.c76 WHEN t0.c0 THEN x'19c9' WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c64 ELSE t0.c40 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c64 COLLATE RTRIM  WHEN t0.c0 COLLATE NOCASE THEN x'd557' COLLATE BINARY ELSE ((t0.c64) BETWEEN (t0.c40) AND (v0.c2)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((TRIM(DISTINCT t0.c0)) BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c40 THEN v0.c1 WHEN t0.c64 THEN t0.c76 WHEN t0.c0 THEN x'19c9' WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c64 ELSE t0.c40 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE t0.c64 COLLATE RTRIM  WHEN t0.c0 COLLATE NOCASE THEN x'd557' COLLATE BINARY ELSE ((t0.c64) BETWEEN (t0.c40) AND (v0.c2)) END) ORDER BY ((TRIM(DISTINCT t0.c0)) BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c40 THEN v0.c1 WHEN t0.c64 THEN t0.c76 WHEN t0.c0 THEN x'19c9' WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c64 ELSE t0.c40 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c64 COLLATE RTRIM  WHEN t0.c0 COLLATE NOCASE THEN x'd557' COLLATE BINARY ELSE ((t0.c64) BETWEEN (t0.c40) AND (v0.c2)) END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY ((TRIM(DISTINCT t0.c0)) BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c40 THEN v0.c1 WHEN t0.c64 THEN t0.c76 WHEN t0.c0 THEN x'19c9' WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c64 ELSE t0.c40 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (CASE t0.c64 COLLATE RTRIM  WHEN t0.c0 COLLATE NOCASE THEN x'd557' COLLATE BINARY ELSE ((t0.c64) BETWEEN (t0.c40) AND (v0.c2)) END) ORDER BY ((TRIM(DISTINCT t0.c0)) BETWEEN (x'') AND (CASE t0.c0  WHEN t0.c40 THEN v0.c1 WHEN t0.c64 THEN t0.c76 WHEN t0.c0 THEN x'19c9' WHEN v0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c64 ELSE t0.c40 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)>(v0.c1)) AS NUMERIC)) ORDER BY CAST((- (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)>(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((- (t0.c76)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)>(v0.c1)) AS NUMERIC)) ORDER BY CAST((- (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1)>(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((- (t0.c76)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((v0.c1)>(v0.c1)) AS NUMERIC)) ORDER BY CAST((- (t0.c76)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c1)))<(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((('-632781081')IS NOT(v0.c1)), ((v0.c1) IS TRUE), ((v0.c2)*(v0.c2)), (v0.c0 IN ()), '}VD1錪掚\n5'))=((v0.c1, (v0.c2 IN ()), (('-55303750')/(v0.c2)), ((v0.c1) BETWEEN ('196021224') AND (v0.c1)), 0Xffffffffaed74351)))  NULLS FIRST, CASE WHEN 'TU' THEN (+ (v0.c0)) ELSE (+ (v0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c1) AND (v0.c1)))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((('-632781081')IS NOT(v0.c1)), ((v0.c1) IS TRUE), ((v0.c2)*(v0.c2)), (v0.c0 IN ()), '}VD1錪掚\n5'))=((v0.c1, (v0.c2 IN ()), (('-55303750')/(v0.c2)), ((v0.c1) BETWEEN ('196021224') AND (v0.c1)), 0Xffffffffaed74351)))  NULLS FIRST, CASE WHEN 'TU' THEN (+ (v0.c0)) ELSE (+ (v0.c1)) END  NULLS FIRST);
SELECT * FROM v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c1)))<(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((('-632781081')IS NOT(v0.c1)), ((v0.c1) IS TRUE), ((v0.c2)*(v0.c2)), (v0.c0 IN ()), '}VD1錪掚\n5'))=((v0.c1, (v0.c2 IN ()), (('-55303750')/(v0.c2)), ((v0.c1) BETWEEN ('196021224') AND (v0.c1)), 0Xffffffffaed74351)))  NULLS FIRST, CASE WHEN 'TU' THEN (+ (v0.c0)) ELSE (+ (v0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (v0.c1) AND (v0.c1)))<(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((((('-632781081')IS NOT(v0.c1)), ((v0.c1) IS TRUE), ((v0.c2)*(v0.c2)), (v0.c0 IN ()), '}VD1錪掚\n5'))=((v0.c1, (v0.c2 IN ()), (('-55303750')/(v0.c2)), ((v0.c1) BETWEEN ('196021224') AND (v0.c1)), 0Xffffffffaed74351)))  NULLS FIRST, CASE WHEN 'TU' THEN (+ (v0.c0)) ELSE (+ (v0.c1)) END  NULLS FIRST);
SELECT * FROM v0 WHERE (((((NULL) BETWEEN (v0.c1) AND (v0.c1)))<(CAST(v0.c0 AS INTEGER)))) ORDER BY ((((('-632781081')IS NOT(v0.c1)), ((v0.c1) IS TRUE), ((v0.c2)*(v0.c2)), (v0.c0 IN ()), '}VD1錪掚\n5'))=((v0.c1, (v0.c2 IN ()), (('-55303750')/(v0.c2)), ((v0.c1) BETWEEN ('196021224') AND (v0.c1)), 0Xffffffffaed74351)))  NULLS FIRST, CASE WHEN 'TU' THEN (+ (v0.c0)) ELSE (+ (v0.c1)) END  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((x'')LIKE(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')LIKE(t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((x'')LIKE(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'')LIKE(t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((x'')LIKE(t0.c0)));
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(v0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(v0.c0 AS INTEGER)));
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c40) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c40) IS FALSE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c40) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c40) IS FALSE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((NOT (((t0.c40) IS FALSE))));
SELECT * FROM t0 WHERE ((((DATETIME(t0.c64, t0.c76, t0.c64)))>=((CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN t0.c64 WHEN t0.c76 THEN t0.c40 ELSE t0.c40 END)))) ORDER BY ((((((t0.c0)OR(NULL)))AND(t0.c40))) NOT BETWEEN ('1248075830') AND (((t0.c76) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((DATETIME(t0.c64, t0.c76, t0.c64)))>=((CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN t0.c64 WHEN t0.c76 THEN t0.c40 ELSE t0.c40 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(NULL)))AND(t0.c40))) NOT BETWEEN ('1248075830') AND (((t0.c76) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((DATETIME(t0.c64, t0.c76, t0.c64)))>=((CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN t0.c64 WHEN t0.c76 THEN t0.c40 ELSE t0.c40 END)))) ORDER BY ((((((t0.c0)OR(NULL)))AND(t0.c40))) NOT BETWEEN ('1248075830') AND (((t0.c76) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((DATETIME(t0.c64, t0.c76, t0.c64)))>=((CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN t0.c64 WHEN t0.c76 THEN t0.c40 ELSE t0.c40 END)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(NULL)))AND(t0.c40))) NOT BETWEEN ('1248075830') AND (((t0.c76) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((DATETIME(t0.c64, t0.c76, t0.c64)))>=((CASE WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN t0.c64 WHEN t0.c76 THEN t0.c40 ELSE t0.c40 END)))) ORDER BY ((((((t0.c0)OR(NULL)))AND(t0.c40))) NOT BETWEEN ('1248075830') AND (((t0.c76) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST((t0.c0 IN ()) AS INTEGER));
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((((t0.c76) IS TRUE))) AND ((t0.c40 COLLATE RTRIM)))) ORDER BY (UPPER(t0.c76) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76)) BETWEEN ((((t0.c76) IS TRUE))) AND ((t0.c40 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY (UPPER(t0.c76) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((((t0.c76) IS TRUE))) AND ((t0.c40 COLLATE RTRIM)))) ORDER BY (UPPER(t0.c76) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76)) BETWEEN ((((t0.c76) IS TRUE))) AND ((t0.c40 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 ORDER BY (UPPER(t0.c76) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c76)) BETWEEN ((((t0.c76) IS TRUE))) AND ((t0.c40 COLLATE RTRIM)))) ORDER BY (UPPER(t0.c76) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (- (CAST(t0.c76 AS TEXT))) WHERE (((((t0.c0)*('-758552080')))>>(CASE NULL  WHEN '_虿\.⼳!' THEN v0.c2 WHEN t0.c64 THEN x'' WHEN t0.c76 THEN t0.c76 END))) ORDER BY (((- (t0.c64))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*('-758552080')))>>(CASE NULL  WHEN '_虿\.⼳!' THEN v0.c2 WHEN t0.c64 THEN x'' WHEN t0.c76 THEN t0.c76 END))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (- (CAST(t0.c76 AS TEXT))) ORDER BY (((- (t0.c64))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (- (CAST(t0.c76 AS TEXT))) WHERE (((((t0.c0)*('-758552080')))>>(CASE NULL  WHEN '_虿\.⼳!' THEN v0.c2 WHEN t0.c64 THEN x'' WHEN t0.c76 THEN t0.c76 END))) ORDER BY (((- (t0.c64))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*('-758552080')))>>(CASE NULL  WHEN '_虿\.⼳!' THEN v0.c2 WHEN t0.c64 THEN x'' WHEN t0.c76 THEN t0.c76 END))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (- (CAST(t0.c76 AS TEXT))) ORDER BY (((- (t0.c64))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (- (CAST(t0.c76 AS TEXT))) WHERE (((((t0.c0)*('-758552080')))>>(CASE NULL  WHEN '_虿\.⼳!' THEN v0.c2 WHEN t0.c64 THEN x'' WHEN t0.c76 THEN t0.c76 END))) ORDER BY (((- (t0.c64))) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((~ (t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c76))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c76))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((~ (t0.c76))) NOTNULL));
SELECT * FROM v0 INNER JOIN t0 ON CASE ((NULL) BETWEEN (v0.c2) AND (t0.c76))  WHEN ((t0.c76)GLOB(t0.c64)) THEN t0.c0 ELSE (NOT (v0.c0)) END WHERE ((~ (LTRIM(t0.c64, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LTRIM(t0.c64, v0.c1)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE ((NULL) BETWEEN (v0.c2) AND (t0.c76))  WHEN ((t0.c76)GLOB(t0.c64)) THEN t0.c0 ELSE (NOT (v0.c0)) END);
SELECT * FROM v0 INNER JOIN t0 ON CASE ((NULL) BETWEEN (v0.c2) AND (t0.c76))  WHEN ((t0.c76)GLOB(t0.c64)) THEN t0.c0 ELSE (NOT (v0.c0)) END WHERE ((~ (LTRIM(t0.c64, v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (LTRIM(t0.c64, v0.c1)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE ((NULL) BETWEEN (v0.c2) AND (t0.c76))  WHEN ((t0.c76)GLOB(t0.c64)) THEN t0.c0 ELSE (NOT (v0.c0)) END);
SELECT * FROM v0 INNER JOIN t0 ON CASE ((NULL) BETWEEN (v0.c2) AND (t0.c76))  WHEN ((t0.c76)GLOB(t0.c64)) THEN t0.c0 ELSE (NOT (v0.c0)) END WHERE ((~ (LTRIM(t0.c64, v0.c1))));
SELECT ALL * FROM t0 WHERE ((((- (t0.c76))) BETWEEN ((- (x''))) AND (((t0.c40) BETWEEN ('-614765875') AND (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c76))) BETWEEN ((- (x''))) AND (((t0.c40) BETWEEN ('-614765875') AND (t0.c40))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c76))) BETWEEN ((- (x''))) AND (((t0.c40) BETWEEN ('-614765875') AND (t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c76))) BETWEEN ((- (x''))) AND (((t0.c40) BETWEEN ('-614765875') AND (t0.c40))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c76))) BETWEEN ((- (x''))) AND (((t0.c40) BETWEEN ('-614765875') AND (t0.c40)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((((((v0.c2)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c76 AS NUMERIC)) AND (((((((((0x2d41484c)OR(t0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))) WHERE (JULIANDAY(NULL, t0.c64, ((t0.c0)IS(t0.c64)), t0.c40 COLLATE NOCASE, ((t0.c64) ISNULL))) ORDER BY t0.c64 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(NULL, t0.c64, ((t0.c0)IS(t0.c64)), t0.c40 COLLATE NOCASE, ((t0.c64) ISNULL))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((((v0.c2)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c76 AS NUMERIC)) AND (((((((((0X2d41484c)OR(t0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))) ORDER BY t0.c64 COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((((((v0.c2)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c76 AS NUMERIC)) AND (((((((((0x2d41484c)OR(t0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))) WHERE (JULIANDAY(NULL, t0.c64, ((t0.c0)IS(t0.c64)), t0.c40 COLLATE NOCASE, ((t0.c64) ISNULL))) ORDER BY t0.c64 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(NULL, t0.c64, ((t0.c0)IS(t0.c64)), t0.c40 COLLATE NOCASE, ((t0.c64) ISNULL))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((((v0.c2)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c76 AS NUMERIC)) AND (((((((((0X2d41484c)OR(t0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))) ORDER BY t0.c64 COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON ((((((v0.c2)OR(t0.c0)))AND(t0.c0))) NOT BETWEEN (CAST(t0.c76 AS NUMERIC)) AND (((((((((0x2d41484c)OR(t0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))) WHERE (JULIANDAY(NULL, t0.c64, ((t0.c0)IS(t0.c64)), t0.c40 COLLATE NOCASE, ((t0.c64) ISNULL))) ORDER BY t0.c64 COLLATE RTRIM DESC;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c40)>(t0.c76)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c40)>(t0.c76)))+(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c40)>(t0.c76)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c40)>(t0.c76)))+(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c40)>(t0.c76)))+(t0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((t0.c76)) AND ((v0.c2)))  WHEN NULLIF(t0.c40, NULL) THEN ((x'') BETWEEN (t0.c64) AND (t0.c40)) WHEN v0.c0 COLLATE BINARY THEN (((t0.c40, t0.c40, v0.c0, t0.c0, v0.c1))<=((v0.c2, t0.c64, t0.c64, t0.c64, 0X127c1c51))) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)) THEN '-362409368' END WHERE (((0.3123723233939094) NOT BETWEEN (((v0.c1)<<(v0.c2))) AND ((t0.c64 IN ())))) ORDER BY ((((CAST(t0.c40 AS NUMERIC))OR(CAST(t0.c76 AS BLOB))))AND(t0.c76))  NULLS FIRST, (('-9223372036854775808')>=(t0.c0)) DESC  NULLS FIRST, TRIM(DISTINCT '-Infinityi', ((t0.c0)>=(x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.3123723233939094) NOT BETWEEN (((v0.c1)<<(v0.c2))) AND ((t0.c64 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((t0.c76)) AND ((v0.c2)))  WHEN NULLIF(t0.c40, NULL) THEN ((x'') BETWEEN (t0.c64) AND (t0.c40)) WHEN v0.c0 COLLATE BINARY THEN (((t0.c40, t0.c40, v0.c0, t0.c0, v0.c1))<=((v0.c2, t0.c64, t0.c64, t0.c64, 0x127c1c51))) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)) THEN '-362409368' END ORDER BY ((((CAST(t0.c40 AS NUMERIC))OR(CAST(t0.c76 AS BLOB))))AND(t0.c76))  NULLS FIRST, (('-9223372036854775808')>=(t0.c0)) DESC  NULLS FIRST, TRIM(DISTINCT '-Infinityi', ((t0.c0)>=(x''))) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((t0.c76)) AND ((v0.c2)))  WHEN NULLIF(t0.c40, NULL) THEN ((x'') BETWEEN (t0.c64) AND (t0.c40)) WHEN v0.c0 COLLATE BINARY THEN (((t0.c40, t0.c40, v0.c0, t0.c0, v0.c1))<=((v0.c2, t0.c64, t0.c64, t0.c64, 0X127c1c51))) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)) THEN '-362409368' END WHERE (((0.3123723233939094) NOT BETWEEN (((v0.c1)<<(v0.c2))) AND ((t0.c64 IN ())))) ORDER BY ((((CAST(t0.c40 AS NUMERIC))OR(CAST(t0.c76 AS BLOB))))AND(t0.c76))  NULLS FIRST, (('-9223372036854775808')>=(t0.c0)) DESC  NULLS FIRST, TRIM(DISTINCT '-Infinityi', ((t0.c0)>=(x''))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.3123723233939094) NOT BETWEEN (((v0.c1)<<(v0.c2))) AND ((t0.c64 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((t0.c76)) AND ((v0.c2)))  WHEN NULLIF(t0.c40, NULL) THEN ((x'') BETWEEN (t0.c64) AND (t0.c40)) WHEN v0.c0 COLLATE BINARY THEN (((t0.c40, t0.c40, v0.c0, t0.c0, v0.c1))<=((v0.c2, t0.c64, t0.c64, t0.c64, 0x127c1c51))) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)) THEN '-362409368' END ORDER BY ((((CAST(t0.c40 AS NUMERIC))OR(CAST(t0.c76 AS BLOB))))AND(t0.c76))  NULLS FIRST, (('-9223372036854775808')>=(t0.c0)) DESC  NULLS FIRST, TRIM(DISTINCT '-Infinityi', ((t0.c0)>=(x''))) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((t0.c76)) AND ((v0.c2)))  WHEN NULLIF(t0.c40, NULL) THEN ((x'') BETWEEN (t0.c64) AND (t0.c40)) WHEN v0.c0 COLLATE BINARY THEN (((t0.c40, t0.c40, v0.c0, t0.c0, v0.c1))<=((v0.c2, t0.c64, t0.c64, t0.c64, 0X127c1c51))) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)) THEN '-362409368' END WHERE (((0.3123723233939094) NOT BETWEEN (((v0.c1)<<(v0.c2))) AND ((t0.c64 IN ())))) ORDER BY ((((CAST(t0.c40 AS NUMERIC))OR(CAST(t0.c76 AS BLOB))))AND(t0.c76))  NULLS FIRST, (('-9223372036854775808')>=(t0.c0)) DESC  NULLS FIRST, TRIM(DISTINCT '-Infinityi', ((t0.c0)>=(x''))) ASC;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN ('HQꖋ<') AND (t0.c76))) BETWEEN ((((v0.c0, t0.c64, v0.c0))>=((t0.c40, NULL, t0.c64)))) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c76 THEN t0.c64 WHEN t0.c64 THEN t0.c40 WHEN v0.c0 THEN t0.c64 END ELSE CAST(v0.c2 AS TEXT) END DESC, v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN ('HQꖋ<') AND (t0.c76))) BETWEEN ((((v0.c0, t0.c64, v0.c0))>=((t0.c40, NULL, t0.c64)))) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c76 THEN t0.c64 WHEN t0.c64 THEN t0.c40 WHEN v0.c0 THEN t0.c64 END ELSE CAST(v0.c2 AS TEXT) END DESC, v0.c2);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN ('HQꖋ<') AND (t0.c76))) BETWEEN ((((v0.c0, t0.c64, v0.c0))>=((t0.c40, NULL, t0.c64)))) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c76 THEN t0.c64 WHEN t0.c64 THEN t0.c40 WHEN v0.c0 THEN t0.c64 END ELSE CAST(v0.c2 AS TEXT) END DESC, v0.c2;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN ('HQꖋ<') AND (t0.c76))) BETWEEN ((((v0.c0, t0.c64, v0.c0))>=((t0.c40, NULL, t0.c64)))) AND (v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c76 THEN t0.c64 WHEN t0.c64 THEN t0.c40 WHEN v0.c0 THEN t0.c64 END ELSE CAST(v0.c2 AS TEXT) END DESC, v0.c2);
SELECT ALL * FROM v0, t0 WHERE (((((v0.c0) NOT BETWEEN ('HQꖋ<') AND (t0.c76))) BETWEEN ((((v0.c0, t0.c64, v0.c0))>=((t0.c40, NULL, t0.c64)))) AND (v0.c2 COLLATE BINARY))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c76 THEN t0.c64 WHEN t0.c64 THEN t0.c40 WHEN v0.c0 THEN t0.c64 END ELSE CAST(v0.c2 AS TEXT) END DESC, v0.c2;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) IS TRUE))%(-974680179))) ORDER BY ((v0.c1 COLLATE RTRIM)<>((NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE))%(-974680179))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM)<>((NOT (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) IS TRUE))%(-974680179))) ORDER BY ((v0.c1 COLLATE RTRIM)<>((NOT (v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE))%(-974680179))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE RTRIM)<>((NOT (v0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) IS TRUE))%(-974680179))) ORDER BY ((v0.c1 COLLATE RTRIM)<>((NOT (v0.c2))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)>((((t0.c64)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64 COLLATE RTRIM)>((((t0.c64)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)>((((t0.c64)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64 COLLATE RTRIM)>((((t0.c64)) NOT BETWEEN ((t0.c76)) AND ((t0.c76)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)>((((t0.c64)) NOT BETWEEN ((t0.c76)) AND ((t0.c76))))));
SELECT * FROM v0, t0 WHERE (((((t0.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) IS FALSE)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) IS FALSE));
SELECT * FROM v0 WHERE (((((v0.c0)IS(v0.c2)))=(((v0.c0)||(v0.c0))))) ORDER BY ABS(DISTINCT ((v0.c2)%(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(v0.c2)))=(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ABS(DISTINCT ((v0.c2)%(v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)IS(v0.c2)))=(((v0.c0)||(v0.c0))))) ORDER BY ABS(DISTINCT ((v0.c2)%(v0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)IS(v0.c2)))=(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ABS(DISTINCT ((v0.c2)%(v0.c1))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0)IS(v0.c2)))=(((v0.c0)||(v0.c0))))) ORDER BY ABS(DISTINCT ((v0.c2)%(v0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INDEXED BY i73, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INDEXED BY i73, t0);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i73, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INDEXED BY i73, t0);
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (NULL);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (ABS(t0.c76)) ORDER BY json_insert(((v0.c2)-(t0.c76)), LIKE(t0.c76, v0.c0, '|'), ((((t0.c0)AND(v0.c0)))AND(v0.c0)), (t0.c0 IN ()), 0.18649989411290457), ((t0.c76) NOT BETWEEN (((v0.c1)<(v0.c0))) AND (((v0.c1)>=(t0.c76)))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c76)) IS TRUE)  as count FROM v0, t0 ORDER BY json_insert(((v0.c2)-(t0.c76)), LIKE(t0.c76, v0.c0, '|'), ((((t0.c0)AND(v0.c0)))AND(v0.c0)), (t0.c0 IN ()), 0.18649989411290457), ((t0.c76) NOT BETWEEN (((v0.c1)<(v0.c0))) AND (((v0.c1)>=(t0.c76)))) ASC);
SELECT * FROM v0 NOT INDEXED, t0 WHERE (ABS(t0.c76)) ORDER BY json_insert(((v0.c2)-(t0.c76)), LIKE(t0.c76, v0.c0, '|'), ((((t0.c0)AND(v0.c0)))AND(v0.c0)), (t0.c0 IN ()), 0.18649989411290457), ((t0.c76) NOT BETWEEN (((v0.c1)<(v0.c0))) AND (((v0.c1)>=(t0.c76)))) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(t0.c76)) IS TRUE)  as count FROM v0, t0 ORDER BY json_insert(((v0.c2)-(t0.c76)), LIKE(t0.c76, v0.c0, '|'), ((((t0.c0)AND(v0.c0)))AND(v0.c0)), (t0.c0 IN ()), 0.18649989411290457), ((t0.c76) NOT BETWEEN (((v0.c1)<(v0.c0))) AND (((v0.c1)>=(t0.c76)))) ASC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c40))))<=((v0.c1))) WHERE (t0.c64) ORDER BY ((((v0.c0)||(v0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c40))))<=((v0.c1))) ORDER BY ((((v0.c0)||(v0.c2))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c40))))<=((v0.c1))) WHERE (t0.c64) ORDER BY ((((v0.c0)||(v0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c40))))<=((v0.c1))) ORDER BY ((((v0.c0)||(v0.c2))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((- (t0.c40))))<=((v0.c1))) WHERE (t0.c64) ORDER BY ((((v0.c0)||(v0.c2))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((x'1b13' IN ())))=((((t0.c64) BETWEEN (t0.c64) AND (t0.c64))))));
SELECT SUM(count) FROM (SELECT ((((((x'1b13' IN ())))==((((t0.c64) BETWEEN (t0.c64) AND (t0.c64)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'1b13' IN ())))=((((t0.c64) BETWEEN (t0.c64) AND (t0.c64))))));
SELECT SUM(count) FROM (SELECT ((((((x'1b13' IN ())))==((((t0.c64) BETWEEN (t0.c64) AND (t0.c64)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'1b13' IN ())))=((((t0.c64) BETWEEN (t0.c64) AND (t0.c64))))));
SELECT * FROM t0, v0 WHERE ('1390678275');
SELECT SUM(count) FROM (SELECT ALL (('1390678275') IS TRUE)  as count FROM t0, v0 NOT INDEXED);
SELECT * FROM t0, v0 WHERE ('1390678275');
SELECT SUM(count) FROM (SELECT ALL (('1390678275') IS TRUE)  as count FROM t0, v0 NOT INDEXED);
SELECT * FROM t0, v0 WHERE ('1390678275');
SELECT * FROM t0, v0 WHERE (((((v0.c2)>(t0.c76)))==(((t0.c40)IS(v0.c2))))) ORDER BY ((v0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>(t0.c76)))==(((t0.c40)IS(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c0) IS TRUE));
SELECT * FROM t0, v0 WHERE (((((v0.c2)>(t0.c76)))==(((t0.c40)IS(v0.c2))))) ORDER BY ((v0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)>(t0.c76)))==(((t0.c40)IS(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c0) IS TRUE));
SELECT * FROM t0, v0 WHERE (((((v0.c2)>(t0.c76)))==(((t0.c40)IS(v0.c2))))) ORDER BY ((v0.c0) IS TRUE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((((t0.c76)<=(x'affb837a')))OR(CASE v0.c1  WHEN t0.c64 THEN NULL ELSE v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c2 END)) WHERE ('a|x떎El');
SELECT SUM(count) FROM (SELECT ALL (('a|x떎El') IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((((t0.c76)<=(x'affb837a')))OR(CASE v0.c1  WHEN t0.c64 THEN NULL ELSE v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c2 END)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((((t0.c76)<=(x'affb837a')))OR(CASE v0.c1  WHEN t0.c64 THEN NULL ELSE v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c2 END)) WHERE ('a|x떎El');
SELECT SUM(count) FROM (SELECT ALL (('a|x떎El') IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((((t0.c76)<=(x'affb837a')))OR(CASE v0.c1  WHEN t0.c64 THEN NULL ELSE v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c2 END)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((((t0.c76)<=(x'affb837a')))OR(CASE v0.c1  WHEN t0.c64 THEN NULL ELSE v0.c0 END)))OR(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c40 THEN t0.c40 WHEN t0.c0 THEN v0.c2 END)) WHERE ('a|x떎El');
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT ALL * FROM t0 WHERE (json_array((x'' IN ()), x'', QUOTE(t0.c0), ((t0.c0) IS TRUE), t0.c0, (((t0.c40))<((t0.c76))))) ORDER BY CASE NULL  WHEN (- (t0.c76)) THEN ((((((((t0.c76)OR(t0.c0)))AND(t0.c76)))AND(t0.c76)))OR(t0.c40)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array((x'' IN ()), x'', QUOTE(t0.c0), ((t0.c0) IS TRUE), t0.c0, (((t0.c40))<((t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY CASE NULL  WHEN (- (t0.c76)) THEN ((((((((t0.c76)OR(t0.c0)))AND(t0.c76)))AND(t0.c76)))OR(t0.c40)) END DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (json_array((x'' IN ()), x'', QUOTE(t0.c0), ((t0.c0) IS TRUE), t0.c0, (((t0.c40))<((t0.c76))))) ORDER BY CASE NULL  WHEN (- (t0.c76)) THEN ((((((((t0.c76)OR(t0.c0)))AND(t0.c76)))AND(t0.c76)))OR(t0.c40)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array((x'' IN ()), x'', QUOTE(t0.c0), ((t0.c0) IS TRUE), t0.c0, (((t0.c40))<((t0.c76))))) IS TRUE)  as count FROM t0 ORDER BY CASE NULL  WHEN (- (t0.c76)) THEN ((((((((t0.c76)OR(t0.c0)))AND(t0.c76)))AND(t0.c76)))OR(t0.c40)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c40)OR(t0.c40)))OR(t0.c64))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 ELSE t0.c40 END) AND (((t0.c40)<<(v0.c2)))) WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c40)OR(t0.c40)))OR(t0.c64))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 ELSE t0.c40 END) AND (((t0.c40)<<(v0.c2)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c40)OR(t0.c40)))OR(t0.c64))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 ELSE t0.c40 END) AND (((t0.c40)<<(v0.c2)))) WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c40)OR(t0.c40)))OR(t0.c64))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 ELSE t0.c40 END) AND (((t0.c40)<<(v0.c2)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON ((((((t0.c40)OR(t0.c40)))OR(t0.c64))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c1 ELSE t0.c40 END) AND (((t0.c40)<<(v0.c2)))) WHERE (CAST(v0.c0 AS BLOB));
SELECT ALL * FROM t0, v0 WHERE (LOWER(DISTINCT ((t0.c64) IS FALSE))) ORDER BY LIKE(t0.c76, (t0.c40 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t0.c64) IS FALSE))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKE(t0.c76, (t0.c40 IN ())));
SELECT ALL * FROM t0, v0 WHERE (LOWER(DISTINCT ((t0.c64) IS FALSE))) ORDER BY LIKE(t0.c76, (t0.c40 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((t0.c64) IS FALSE))) IS TRUE)  as count FROM t0, v0 ORDER BY LIKE(t0.c76, (t0.c40 IN ())));
SELECT ALL * FROM t0, v0 WHERE (LOWER(DISTINCT ((t0.c64) IS FALSE))) ORDER BY LIKE(t0.c76, (t0.c40 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT ('n''' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ('n''' IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT ('n''' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ('n''' IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX(DISTINCT ('n''' IN ())));
SELECT * FROM t0, v0 WHERE ((((v0.c2, t0.c64, t0.c76)) BETWEEN (((t0.c40 IN ()), TRIM(DISTINCT t0.c76), t0.c64)) AND ((CASE WHEN x'' THEN t0.c64 END, ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), JULIANDAY(t0.c76, v0.c2, v0.c1, v0.c1, t0.c40, t0.c76, t0.c0))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, t0.c64, t0.c76)) BETWEEN (((t0.c40 IN ()), TRIM(DISTINCT t0.c76), t0.c64)) AND ((CASE WHEN x'' THEN t0.c64 END, ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), JULIANDAY(t0.c76, v0.c2, v0.c1, v0.c1, t0.c40, t0.c76, t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2);
SELECT * FROM t0, v0 WHERE ((((v0.c2, t0.c64, t0.c76)) BETWEEN (((t0.c40 IN ()), TRIM(DISTINCT t0.c76), t0.c64)) AND ((CASE WHEN x'' THEN t0.c64 END, ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), JULIANDAY(t0.c76, v0.c2, v0.c1, v0.c1, t0.c40, t0.c76, t0.c0))))) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, t0.c64, t0.c76)) BETWEEN (((t0.c40 IN ()), TRIM(DISTINCT t0.c76), t0.c64)) AND ((CASE WHEN x'' THEN t0.c64 END, ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), JULIANDAY(t0.c76, v0.c2, v0.c1, v0.c1, t0.c40, t0.c76, t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c2);
SELECT * FROM t0, v0 WHERE ((((v0.c2, t0.c64, t0.c76)) BETWEEN (((t0.c40 IN ()), TRIM(DISTINCT t0.c76), t0.c64)) AND ((CASE WHEN x'' THEN t0.c64 END, ((v0.c0) BETWEEN (v0.c2) AND (v0.c2)), JULIANDAY(t0.c76, v0.c2, v0.c1, v0.c1, t0.c40, t0.c76, t0.c0))))) ORDER BY v0.c2;
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) BETWEEN (((((v0.c1)OR(v0.c1)))AND(v0.c0))) AND (((0X20b201fa) IS TRUE)))) ORDER BY ((LIKELY(DISTINCT v0.c0))IS NOT('')) DESC;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID()) BETWEEN (((((v0.c1)OR(v0.c1)))AND(v0.c0))) AND (((0X20b201fa) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(DISTINCT v0.c0))IS NOT('')) DESC);
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) BETWEEN (((((v0.c1)OR(v0.c1)))AND(v0.c0))) AND (((0X20b201fa) IS TRUE)))) ORDER BY ((LIKELY(DISTINCT v0.c0))IS NOT('')) DESC;
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID()) BETWEEN (((((v0.c1)OR(v0.c1)))AND(v0.c0))) AND (((0X20b201fa) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(DISTINCT v0.c0))IS NOT('')) DESC);
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) BETWEEN (((((v0.c1)OR(v0.c1)))AND(v0.c0))) AND (((0X20b201fa) IS TRUE)))) ORDER BY ((LIKELY(DISTINCT v0.c0))IS NOT('')) DESC;
SELECT * FROM t0 WHERE (((((t0.c64)>(t0.c76))) BETWEEN (((t0.c40) IS FALSE)) AND (CASE WHEN t0.c76 THEN t0.c40 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c64)>(t0.c76))) BETWEEN (((t0.c40) IS FALSE)) AND (CASE WHEN t0.c76 THEN t0.c40 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c64)>(t0.c76))) BETWEEN (((t0.c40) IS FALSE)) AND (CASE WHEN t0.c76 THEN t0.c40 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c64)>(t0.c76))) BETWEEN (((t0.c40) IS FALSE)) AND (CASE WHEN t0.c76 THEN t0.c40 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c64)>(t0.c76))) BETWEEN (((t0.c40) IS FALSE)) AND (CASE WHEN t0.c76 THEN t0.c40 END)));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c64 WHERE (((((v0.c1) ISNULL))+(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) ISNULL))+(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c64);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c64 WHERE (((((v0.c1) ISNULL))+(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) ISNULL))+(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON t0.c64);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON t0.c64 WHERE (((((v0.c1) ISNULL))+(((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM t0 WHERE (((t0.c76) ISNULL)) ORDER BY 0.5933800822815907 ASC, (NOT (CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c76) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY 0.5933800822815907 ASC, (NOT (CAST(t0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c76) ISNULL)) ORDER BY 0.5933800822815907 ASC, (NOT (CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c76) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY 0.5933800822815907 ASC, (NOT (CAST(t0.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c76) ISNULL)) ORDER BY 0.5933800822815907 ASC, (NOT (CAST(t0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) NOT BETWEEN (t0.c64) AND (t0.c0)))AND(((t0.c40) BETWEEN (v0.c1) AND (t0.c64)))))OR(((t0.c0) NOTNULL)))) ORDER BY (t0.c76 COLLATE BINARY IN ())  NULLS FIRST, 0.6494532602169868, ((JULIANDAY(v0.c1, t0.c0, t0.c64))<=((+ (t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) NOT BETWEEN (t0.c64) AND (t0.c0)))AND(((t0.c40) BETWEEN (v0.c1) AND (t0.c64)))))OR(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY (t0.c76 COLLATE BINARY IN ())  NULLS FIRST, 0.6494532602169868, ((JULIANDAY(v0.c1, t0.c0, t0.c64))<=((+ (t0.c64)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) NOT BETWEEN (t0.c64) AND (t0.c0)))AND(((t0.c40) BETWEEN (v0.c1) AND (t0.c64)))))OR(((t0.c0) NOTNULL)))) ORDER BY (t0.c76 COLLATE BINARY IN ())  NULLS FIRST, 0.6494532602169868, ((JULIANDAY(v0.c1, t0.c0, t0.c64))<=((+ (t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2) NOT BETWEEN (t0.c64) AND (t0.c0)))AND(((t0.c40) BETWEEN (v0.c1) AND (t0.c64)))))OR(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY (t0.c76 COLLATE BINARY IN ())  NULLS FIRST, 0.6494532602169868, ((JULIANDAY(v0.c1, t0.c0, t0.c64))<=((+ (t0.c64)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c2) NOT BETWEEN (t0.c64) AND (t0.c0)))AND(((t0.c40) BETWEEN (v0.c1) AND (t0.c64)))))OR(((t0.c0) NOTNULL)))) ORDER BY (t0.c76 COLLATE BINARY IN ())  NULLS FIRST, 0.6494532602169868, ((JULIANDAY(v0.c1, t0.c0, t0.c64))<=((+ (t0.c64))));
SELECT COUNT(*) FROM v0, t0 WHERE (0X2b67dbff) ORDER BY t0.c64 COLLATE BINARY, (+ (CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2b67dbff) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c64 COLLATE BINARY, (+ (CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (0X2b67dbff) ORDER BY t0.c64 COLLATE BINARY, (+ (CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x2b67dbff) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c64 COLLATE BINARY, (+ (CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (0X2b67dbff) ORDER BY t0.c64 COLLATE BINARY, (+ (CASE WHEN v0.c2 THEN v0.c0 END))  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (0.4508299719636162) ORDER BY (~ (t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((0.4508299719636162) IS TRUE)  as count FROM t0, v0 ORDER BY (~ (t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, v0 WHERE (0.4508299719636162) ORDER BY (~ (t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((0.4508299719636162) IS TRUE)  as count FROM t0, v0 ORDER BY (~ (t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, v0 WHERE (0.4508299719636162) ORDER BY (~ (t0.c0 COLLATE NOCASE));
SELECT * FROM t0 WHERE (((((((0X509846fa)OR(t0.c0)))AND(t0.c0)))<=(CASE WHEN t0.c40 THEN t0.c76 WHEN t0.c76 THEN t0.c0 WHEN t0.c76 THEN x'70f2' END))) ORDER BY t0.c64 ASC, ((CAST(t0.c64 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((0x509846fa)OR(t0.c0)))AND(t0.c0)))<=(CASE WHEN t0.c40 THEN t0.c76 WHEN t0.c76 THEN t0.c0 WHEN t0.c76 THEN x'70f2' END))) IS TRUE)  as count FROM t0 ORDER BY t0.c64 ASC, ((CAST(t0.c64 AS REAL)) IS TRUE));
SELECT * FROM t0 WHERE (((((((0X509846fa)OR(t0.c0)))AND(t0.c0)))<=(CASE WHEN t0.c40 THEN t0.c76 WHEN t0.c76 THEN t0.c0 WHEN t0.c76 THEN x'70f2' END))) ORDER BY t0.c64 ASC, ((CAST(t0.c64 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((((0x509846fa)OR(t0.c0)))AND(t0.c0)))<=(CASE WHEN t0.c40 THEN t0.c76 WHEN t0.c76 THEN t0.c0 WHEN t0.c76 THEN x'70f2' END))) IS TRUE)  as count FROM t0 ORDER BY t0.c64 ASC, ((CAST(t0.c64 AS REAL)) IS TRUE));
SELECT * FROM t0 WHERE (((((((0X509846fa)OR(t0.c0)))AND(t0.c0)))<=(CASE WHEN t0.c40 THEN t0.c76 WHEN t0.c76 THEN t0.c0 WHEN t0.c76 THEN x'70f2' END))) ORDER BY t0.c64 ASC, ((CAST(t0.c64 AS REAL)) IS TRUE);
SELECT ALL * FROM v0 WHERE (TRIM(((v0.c0)=(v0.c1)))) ORDER BY ((CASE WHEN v0.c0 THEN NULL ELSE 0.9373647400911879 END)<<((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)==(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN NULL ELSE 0.9373647400911879 END)<<((+ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (TRIM(((v0.c0)=(v0.c1)))) ORDER BY ((CASE WHEN v0.c0 THEN NULL ELSE 0.9373647400911879 END)<<((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)==(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN NULL ELSE 0.9373647400911879 END)<<((+ (v0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (TRIM(((v0.c0)=(v0.c1)))) ORDER BY ((CASE WHEN v0.c0 THEN NULL ELSE 0.9373647400911879 END)<<((+ (v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ((((v0.c1, v0.c1, v0.c2))<=((NULL, v0.c0, v0.c0))), ((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE RTRIM IN ((((v0.c1, v0.c1, v0.c2))<=((NULL, v0.c0, v0.c0))), ((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ((((v0.c1, v0.c1, v0.c2))<=((NULL, v0.c0, v0.c0))), ((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 COLLATE RTRIM IN ((((v0.c1, v0.c1, v0.c2))<=((NULL, v0.c0, v0.c0))), ((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ((((v0.c1, v0.c1, v0.c2))<=((NULL, v0.c0, v0.c0))), ((v0.c2) NOT NULL))));
SELECT * FROM t0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY CASE WHEN ((t0.c76)>(t0.c0)) THEN ((t0.c40) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c76)>(t0.c0)) THEN ((t0.c40) NOTNULL) END  NULLS LAST);
SELECT * FROM t0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY CASE WHEN ((t0.c76)>(t0.c0)) THEN ((t0.c40) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c76)>(t0.c0)) THEN ((t0.c40) NOTNULL) END  NULLS LAST);
SELECT * FROM t0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY CASE WHEN ((t0.c76)>(t0.c0)) THEN ((t0.c40) NOTNULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c64 IN (t0.c40, t0.c76)))>(((-1122127029)OR(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c64 IN (t0.c40, t0.c76)))>(((-1122127029)OR(t0.c64))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c64 IN (t0.c40, t0.c76)))>(((-1122127029)OR(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c64 IN (t0.c40, t0.c76)))>(((-1122127029)OR(t0.c64))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c64 IN (t0.c40, t0.c76)))>(((-1122127029)OR(t0.c64)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON t0.c40 WHERE ((((((v0.c2)) BETWEEN ((t0.c76)) AND ((t0.c64)))) IS FALSE)) ORDER BY ((((v0.c1)<=(v0.c0)))GLOB(CAST(t0.c76 AS TEXT))) DESC  NULLS LAST, (+ ('l烪'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((t0.c76)) AND ((t0.c64)))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON t0.c40 ORDER BY ((((v0.c1)<=(v0.c0)))GLOB(CAST(t0.c76 AS TEXT))) DESC  NULLS LAST, (+ ('l烪'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON t0.c40 WHERE ((((((v0.c2)) BETWEEN ((t0.c76)) AND ((t0.c64)))) IS FALSE)) ORDER BY ((((v0.c1)<=(v0.c0)))GLOB(CAST(t0.c76 AS TEXT))) DESC  NULLS LAST, (+ ('l烪'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2)) BETWEEN ((t0.c76)) AND ((t0.c64)))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON t0.c40 ORDER BY ((((v0.c1)<=(v0.c0)))GLOB(CAST(t0.c76 AS TEXT))) DESC  NULLS LAST, (+ ('l烪'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON t0.c40 WHERE ((((((v0.c2)) BETWEEN ((t0.c76)) AND ((t0.c64)))) IS FALSE)) ORDER BY ((((v0.c1)<=(v0.c0)))GLOB(CAST(t0.c76 AS TEXT))) DESC  NULLS LAST, (+ ('l烪'))  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN t0 WHERE (TYPEOF(((t0.c40)==(''))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c40)=('')))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (TYPEOF(((t0.c40)==(''))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c40)=('')))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT * FROM v0 NATURAL JOIN t0 WHERE (TYPEOF(((t0.c40)==(''))));
SELECT * FROM t0 WHERE (((((((t0.c64) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)AND(t0.c64)))AND(t0.c40)))OR(t0.c64)))AND(t0.c76)))))AND(((t0.c64)>>(t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c64) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)AND(t0.c64)))AND(t0.c40)))OR(t0.c64)))AND(t0.c76)))))AND(((t0.c64)>>(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c64) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)AND(t0.c64)))AND(t0.c40)))OR(t0.c64)))AND(t0.c76)))))AND(((t0.c64)>>(t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c64) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)AND(t0.c64)))AND(t0.c40)))OR(t0.c64)))AND(t0.c76)))))AND(((t0.c64)>>(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c64) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(((((((((t0.c0)AND(t0.c64)))AND(t0.c40)))OR(t0.c64)))AND(t0.c76)))))AND(((t0.c64)>>(t0.c76)))));
SELECT * FROM v0 INNER JOIN t0 ON ((v0.c0)>((t0.c76 IN ()))) WHERE (((((v0.c2)+(t0.c76))) NOT BETWEEN (((t0.c64)GLOB(v0.c2))) AND (v0.c1 COLLATE BINARY))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(t0.c76))) NOT BETWEEN (((t0.c64)GLOB(v0.c2))) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((v0.c0)>((t0.c76 IN ()))) ORDER BY v0.c1);
SELECT * FROM v0 INNER JOIN t0 ON ((v0.c0)>((t0.c76 IN ()))) WHERE (((((v0.c2)+(t0.c76))) NOT BETWEEN (((t0.c64)GLOB(v0.c2))) AND (v0.c1 COLLATE BINARY))) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)+(t0.c76))) NOT BETWEEN (((t0.c64)GLOB(v0.c2))) AND (v0.c1 COLLATE BINARY))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((v0.c0)>((t0.c76 IN ()))) ORDER BY v0.c1);
SELECT * FROM v0 INNER JOIN t0 ON ((v0.c0)>((t0.c76 IN ()))) WHERE (((((v0.c2)+(t0.c76))) NOT BETWEEN (((t0.c64)GLOB(v0.c2))) AND (v0.c1 COLLATE BINARY))) ORDER BY v0.c1;
SELECT ALL * FROM t0 WHERE (((t0.c64 COLLATE BINARY)>=(t0.c76))) ORDER BY 0.2247311395481696 COLLATE RTRIM  NULLS FIRST, 'FALSE'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE BINARY)>=(t0.c76))) IS TRUE)  as count FROM t0 ORDER BY 0.2247311395481696 COLLATE RTRIM  NULLS FIRST, 'FALSE'  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c64 COLLATE BINARY)>=(t0.c76))) ORDER BY 0.2247311395481696 COLLATE RTRIM  NULLS FIRST, 'FALSE'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE BINARY)>=(t0.c76))) IS TRUE)  as count FROM t0 ORDER BY 0.2247311395481696 COLLATE RTRIM  NULLS FIRST, 'FALSE'  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((t0.c64 COLLATE BINARY)>=(t0.c76))) ORDER BY 0.2247311395481696 COLLATE RTRIM  NULLS FIRST, 'FALSE'  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT * FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT * FROM t0 WHERE ((NULL IN ())) ORDER BY COALESCE(json_extract(t0.c0, t0.c0), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c76)))AND(t0.c0)), ((t0.c64) BETWEEN (t0.c40) AND (t0.c64)), 3.54846055E8) ASC  NULLS LAST, (((t0.c40) NOT BETWEEN (t0.c64) AND (t0.c76)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY COALESCE(json_extract(t0.c0, t0.c0), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c76)))AND(t0.c0)), ((t0.c64) BETWEEN (t0.c40) AND (t0.c64)), 3.54846055E8) ASC  NULLS LAST, (((t0.c40) NOT BETWEEN (t0.c64) AND (t0.c76)) IN ())  NULLS LAST);
SELECT * FROM t0 WHERE ((NULL IN ())) ORDER BY COALESCE(json_extract(t0.c0, t0.c0), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c76)))AND(t0.c0)), ((t0.c64) BETWEEN (t0.c40) AND (t0.c64)), 3.54846055E8) ASC  NULLS LAST, (((t0.c40) NOT BETWEEN (t0.c64) AND (t0.c76)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 ORDER BY COALESCE(json_extract(t0.c0, t0.c0), ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c76)))AND(t0.c0)), ((t0.c64) BETWEEN (t0.c40) AND (t0.c64)), 3.54846055E8) ASC  NULLS LAST, (((t0.c40) NOT BETWEEN (t0.c64) AND (t0.c76)) IN ())  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) ORDER BY ((((t0.c0)==(v0.c0))) BETWEEN (t0.c64 COLLATE BINARY) AND (((t0.c0) BETWEEN (t0.c64) AND (t0.c76)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)==(v0.c0))) BETWEEN (t0.c64 COLLATE BINARY) AND (((t0.c0) BETWEEN (t0.c64) AND (t0.c76)))) DESC);
SELECT * FROM t0, v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) ORDER BY ((((t0.c0)==(v0.c0))) BETWEEN (t0.c64 COLLATE BINARY) AND (((t0.c0) BETWEEN (t0.c64) AND (t0.c76)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c0)==(v0.c0))) BETWEEN (t0.c64 COLLATE BINARY) AND (((t0.c0) BETWEEN (t0.c64) AND (t0.c76)))) DESC);
SELECT * FROM t0, v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) ORDER BY ((((t0.c0)==(v0.c0))) BETWEEN (t0.c64 COLLATE BINARY) AND (((t0.c0) BETWEEN (t0.c64) AND (t0.c76)))) DESC;
SELECT * FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c64) AND (v0.c0))) NOT BETWEEN (0.5401958362498471) AND ((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (t0.c64) AND (v0.c0))) NOT BETWEEN (0.5401958362498471) AND ((NOT (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c64) AND (v0.c0))) NOT BETWEEN (0.5401958362498471) AND ((NOT (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (t0.c64) AND (v0.c0))) NOT BETWEEN (0.5401958362498471) AND ((NOT (v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (t0.c64) AND (v0.c0))) NOT BETWEEN (0.5401958362498471) AND ((NOT (v0.c2)))));
SELECT * FROM v0, t0 WHERE (((t0.c64 COLLATE NOCASE)GLOB(8.32890173E8)));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE NOCASE)GLOB(8.32890173E8))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c64 COLLATE NOCASE)GLOB(8.32890173E8)));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE NOCASE)GLOB(8.32890173E8))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c64 COLLATE NOCASE)GLOB(8.32890173E8)));
SELECT * FROM t0 WHERE (CASE ((t0.c40)>=(t0.c76))  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN CASE t0.c40  WHEN t0.c76 THEN t0.c64 WHEN 1.213928127E9 THEN t0.c64 WHEN t0.c76 THEN t0.c0 ELSE t0.c40 END WHEN ((('719454949', t0.c64, t0.c64)) NOT BETWEEN ((t0.c76, t0.c0, t0.c64)) AND ((t0.c64, t0.c0, t0.c40))) THEN (t0.c64 IN ()) ELSE t0.c76 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c40)>=(t0.c76))  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN CASE t0.c40  WHEN t0.c76 THEN t0.c64 WHEN 1.213928127E9 THEN t0.c64 WHEN t0.c76 THEN t0.c0 ELSE t0.c40 END WHEN ((('719454949', t0.c64, t0.c64)) NOT BETWEEN ((t0.c76, t0.c0, t0.c64)) AND ((t0.c64, t0.c0, t0.c40))) THEN (t0.c64 IN ()) ELSE t0.c76 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c40)>=(t0.c76))  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN CASE t0.c40  WHEN t0.c76 THEN t0.c64 WHEN 1.213928127E9 THEN t0.c64 WHEN t0.c76 THEN t0.c0 ELSE t0.c40 END WHEN ((('719454949', t0.c64, t0.c64)) NOT BETWEEN ((t0.c76, t0.c0, t0.c64)) AND ((t0.c64, t0.c0, t0.c40))) THEN (t0.c64 IN ()) ELSE t0.c76 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c40)>=(t0.c76))  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN CASE t0.c40  WHEN t0.c76 THEN t0.c64 WHEN 1.213928127E9 THEN t0.c64 WHEN t0.c76 THEN t0.c0 ELSE t0.c40 END WHEN ((('719454949', t0.c64, t0.c64)) NOT BETWEEN ((t0.c76, t0.c0, t0.c64)) AND ((t0.c64, t0.c0, t0.c40))) THEN (t0.c64 IN ()) ELSE t0.c76 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c40)>=(t0.c76))  WHEN t0.c0 THEN NULL WHEN t0.c0 THEN CASE t0.c40  WHEN t0.c76 THEN t0.c64 WHEN 1.213928127E9 THEN t0.c64 WHEN t0.c76 THEN t0.c0 ELSE t0.c40 END WHEN ((('719454949', t0.c64, t0.c64)) NOT BETWEEN ((t0.c76, t0.c0, t0.c64)) AND ((t0.c64, t0.c0, t0.c40))) THEN (t0.c64 IN ()) ELSE t0.c76 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST((- (t0.c0)) AS REAL) WHERE (((t0.c64)+(t0.c64)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)+(t0.c64)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST((- (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST((- (t0.c0)) AS REAL) WHERE (((t0.c64)+(t0.c64)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)+(t0.c64)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON CAST((- (t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON CAST((- (t0.c0)) AS REAL) WHERE (((t0.c64)+(t0.c64)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((- ((((v0.c2))>=((373179429))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c2))>=((373179429)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((((v0.c2))>=((373179429))))));
SELECT SUM(count) FROM (SELECT (((- ((((v0.c2))>=((373179429)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- ((((v0.c2))>=((373179429))))));
SELECT ALL * FROM t0 WHERE (((NULL) BETWEEN (((((t0.c40)OR(t0.c64)))OR(t0.c64))) AND (((t0.c76)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((t0.c40)OR(t0.c64)))OR(t0.c64))) AND (((t0.c76)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULL) BETWEEN (((((t0.c40)OR(t0.c64)))OR(t0.c64))) AND (((t0.c76)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((((t0.c40)OR(t0.c64)))OR(t0.c64))) AND (((t0.c76)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((NULL) BETWEEN (((((t0.c40)OR(t0.c64)))OR(t0.c64))) AND (((t0.c76)GLOB(t0.c0)))));
SELECT * FROM t0 INDEXED BY i23, v0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c40)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c40)) AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i23, v0);
SELECT * FROM t0 INDEXED BY i23, v0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c40)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c40)) AS TEXT)) IS TRUE)  as count FROM t0 INDEXED BY i23, v0);
SELECT * FROM t0 INDEXED BY i23, v0 WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c40)) AS TEXT));
SELECT * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((((t0.c0)AND(t0.c76)))OR(t0.c64))) NOTNULL) ASC, ((((t0.c64) ISNULL)) NOTNULL), ((CASE WHEN t0.c40 THEN ' ' END)IS NOT(IFNULL(t0.c40, t0.c40))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c76)))OR(t0.c64))) NOTNULL) ASC, ((((t0.c64) ISNULL)) NOTNULL), ((CASE WHEN t0.c40 THEN ' ' END)IS NOT(IFNULL(t0.c40, t0.c40))) ASC);
SELECT * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((((t0.c0)AND(t0.c76)))OR(t0.c64))) NOTNULL) ASC, ((((t0.c64) ISNULL)) NOTNULL), ((CASE WHEN t0.c40 THEN ' ' END)IS NOT(IFNULL(t0.c40, t0.c40))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c76)))OR(t0.c64))) NOTNULL) ASC, ((((t0.c64) ISNULL)) NOTNULL), ((CASE WHEN t0.c40 THEN ' ' END)IS NOT(IFNULL(t0.c40, t0.c40))) ASC);
SELECT * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((((t0.c0)AND(t0.c76)))OR(t0.c64))) NOTNULL) ASC, ((((t0.c64) ISNULL)) NOTNULL), ((CASE WHEN t0.c40 THEN ' ' END)IS NOT(IFNULL(t0.c40, t0.c40))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (json_array_length(''))));
SELECT SUM(count) FROM (SELECT (((+ (json_array_length('')))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (json_array_length(''))));
SELECT SUM(count) FROM (SELECT (((+ (json_array_length('')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)>(v0.c1)) IN ((+ (v0.c2))))) ORDER BY CASE WHEN ((t0.c40) NOTNULL) THEN STRFTIME(t0.c76, t0.c76, t0.c64) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c76  WHEN v0.c2 THEN t0.c76 ELSE v0.c2 END WHEN SQLITE_SOURCE_ID() THEN '[]' END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>(v0.c1)) IN ((+ (v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN ((t0.c40) NOTNULL) THEN STRFTIME(t0.c76, t0.c76, t0.c64) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c76  WHEN v0.c2 THEN t0.c76 ELSE v0.c2 END WHEN SQLITE_SOURCE_ID() THEN '[]' END);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)>(v0.c1)) IN ((+ (v0.c2))))) ORDER BY CASE WHEN ((t0.c40) NOTNULL) THEN STRFTIME(t0.c76, t0.c76, t0.c64) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c76  WHEN v0.c2 THEN t0.c76 ELSE v0.c2 END WHEN SQLITE_SOURCE_ID() THEN '[]' END;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)>(v0.c1)) IN ((+ (v0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN ((t0.c40) NOTNULL) THEN STRFTIME(t0.c76, t0.c76, t0.c64) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c76  WHEN v0.c2 THEN t0.c76 ELSE v0.c2 END WHEN SQLITE_SOURCE_ID() THEN '[]' END);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)>(v0.c1)) IN ((+ (v0.c2))))) ORDER BY CASE WHEN ((t0.c40) NOTNULL) THEN STRFTIME(t0.c76, t0.c76, t0.c64) WHEN ((t0.c0) NOTNULL) THEN CASE t0.c76  WHEN v0.c2 THEN t0.c76 ELSE v0.c2 END WHEN SQLITE_SOURCE_ID() THEN '[]' END;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((NOT (t0.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c40))) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((NOT (t0.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c40))) NOTNULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((NOT (t0.c40))) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END))) ORDER BY (~ (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END))) ORDER BY (~ (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END))) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (CASE WHEN t0.c40 THEN t0.c0 ELSE t0.c64 END))) ORDER BY (~ (t0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)%(((v0.c1)!=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)%(((v0.c1)<>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)%(((v0.c1)!=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)%(((v0.c1)<>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)%(((v0.c1)!=(v0.c1)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((v0.c0)IS(''))))) ORDER BY ((t0.c0 COLLATE RTRIM)-(0xfc01596))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)IS(''))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)-(0Xfc01596))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((v0.c0)IS(''))))) ORDER BY ((t0.c0 COLLATE RTRIM)-(0xfc01596))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)IS(''))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)-(0Xfc01596))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((+ (((v0.c0)IS(''))))) ORDER BY ((t0.c0 COLLATE RTRIM)-(0xfc01596))  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN CASE WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END ELSE ((v0.c2) IS TRUE) END WHERE ((((((-1897404798) NOTNULL), v0.c1, ((v0.c1) BETWEEN (t0.c0) AND (t0.c64))))<=((((v0.c0) BETWEEN (t0.c40) AND (t0.c76)), t0.c40, t0.c0 COLLATE BINARY)))) ORDER BY '1468533958'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-1897404798) NOTNULL), v0.c1, ((v0.c1) BETWEEN (t0.c0) AND (t0.c64))))<=((((v0.c0) BETWEEN (t0.c40) AND (t0.c76)), t0.c40, t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN CASE WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END ELSE ((v0.c2) IS TRUE) END ORDER BY '1468533958'  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN CASE WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END ELSE ((v0.c2) IS TRUE) END WHERE ((((((-1897404798) NOTNULL), v0.c1, ((v0.c1) BETWEEN (t0.c0) AND (t0.c64))))<=((((v0.c0) BETWEEN (t0.c40) AND (t0.c76)), t0.c40, t0.c0 COLLATE BINARY)))) ORDER BY '1468533958'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((-1897404798) NOTNULL), v0.c1, ((v0.c1) BETWEEN (t0.c0) AND (t0.c64))))<=((((v0.c0) BETWEEN (t0.c40) AND (t0.c76)), t0.c40, t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN CASE WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END ELSE ((v0.c2) IS TRUE) END ORDER BY '1468533958'  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN CASE WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END ELSE ((v0.c2) IS TRUE) END WHERE ((((((-1897404798) NOTNULL), v0.c1, ((v0.c1) BETWEEN (t0.c0) AND (t0.c64))))<=((((v0.c0) BETWEEN (t0.c40) AND (t0.c76)), t0.c40, t0.c0 COLLATE BINARY)))) ORDER BY '1468533958'  NULLS FIRST;
SELECT * FROM v0 FULL OUTER JOIN t0 ON 0Xffffffffb5219627 WHERE (0X31a4e53d) ORDER BY (((0.5773946181437559, CAST(v0.c1 AS REAL), t0.c40))<(((t0.c0 IN ()), (('') NOTNULL), (t0.c76 IN ()))));
SELECT SUM(count) FROM (SELECT ((0x31a4e53d) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON 0Xffffffffb5219627 ORDER BY (((0.5773946181437559, CAST(v0.c1 AS REAL), t0.c40))<(((t0.c0 IN ()), (('') NOTNULL), (t0.c76 IN ())))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON 0Xffffffffb5219627 WHERE (0X31a4e53d) ORDER BY (((0.5773946181437559, CAST(v0.c1 AS REAL), t0.c40))<(((t0.c0 IN ()), (('') NOTNULL), (t0.c76 IN ()))));
SELECT SUM(count) FROM (SELECT ((0x31a4e53d) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON 0Xffffffffb5219627 ORDER BY (((0.5773946181437559, CAST(v0.c1 AS REAL), t0.c40))<(((t0.c0 IN ()), (('') NOTNULL), (t0.c76 IN ())))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON 0Xffffffffb5219627 WHERE (0X31a4e53d) ORDER BY (((0.5773946181437559, CAST(v0.c1 AS REAL), t0.c40))<(((t0.c0 IN ()), (('') NOTNULL), (t0.c76 IN ()))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((NOT (t0.c0)))) AND ((0.46913160782952157))) WHERE (((((v0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((NOT (t0.c0)))) AND ((0.46913160782952157))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((NOT (t0.c0)))) AND ((0.46913160782952157))) WHERE (((((v0.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((NOT (t0.c0)))) AND ((0.46913160782952157))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN (((NOT (t0.c0)))) AND ((0.46913160782952157))) WHERE (((((v0.c1) NOT NULL)) ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))OR(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))OR(v0.c0))) NOT NULL));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((((((((((v0.c2)AND(v0.c2)))OR(t0.c40)))AND(t0.c76)))AND(v0.c0)))IS NOT(((t0.c64) BETWEEN (t0.c64) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(v0.c2)))OR(t0.c40)))AND(t0.c76)))AND(v0.c0)))IS NOT(((t0.c64) BETWEEN (t0.c64) AND (v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((((((((((v0.c2)AND(v0.c2)))OR(t0.c40)))AND(t0.c76)))AND(v0.c0)))IS NOT(((t0.c64) BETWEEN (t0.c64) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c2)AND(v0.c2)))OR(t0.c40)))AND(t0.c76)))AND(v0.c0)))IS NOT(((t0.c64) BETWEEN (t0.c64) AND (v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((((((((((v0.c2)AND(v0.c2)))OR(t0.c40)))AND(t0.c76)))AND(v0.c0)))IS NOT(((t0.c64) BETWEEN (t0.c64) AND (v0.c1)))));
SELECT ALL * FROM t0 WHERE ((- (LIKELIHOOD(t0.c40, 0.8658516317564885))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c40, 0.8658516317564885)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (LIKELIHOOD(t0.c40, 0.8658516317564885))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(t0.c40, 0.8658516317564885)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (LIKELIHOOD(t0.c40, 0.8658516317564885))));
SELECT ALL * FROM t0 WHERE ((NOT (CASE t0.c40  WHEN t0.c64 THEN 0.13607115803961445 WHEN t0.c40 THEN t0.c76 WHEN t0.c64 THEN t0.c76 ELSE t0.c64 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c40  WHEN t0.c64 THEN 0.13607115803961445 WHEN t0.c40 THEN t0.c76 WHEN t0.c64 THEN t0.c76 ELSE t0.c64 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CASE t0.c40  WHEN t0.c64 THEN 0.13607115803961445 WHEN t0.c40 THEN t0.c76 WHEN t0.c64 THEN t0.c76 ELSE t0.c64 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE t0.c40  WHEN t0.c64 THEN 0.13607115803961445 WHEN t0.c40 THEN t0.c76 WHEN t0.c64 THEN t0.c76 ELSE t0.c64 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CASE t0.c40  WHEN t0.c64 THEN 0.13607115803961445 WHEN t0.c40 THEN t0.c76 WHEN t0.c64 THEN t0.c76 ELSE t0.c64 END)));
SELECT COUNT(*) FROM v0, t0 WHERE (((CASE WHEN t0.c40 THEN t0.c76 ELSE t0.c0 END)&((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c40 THEN t0.c76 ELSE t0.c0 END)&((+ (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((CASE WHEN t0.c40 THEN t0.c76 ELSE t0.c0 END)&((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c40 THEN t0.c76 ELSE t0.c0 END)&((+ (v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((CASE WHEN t0.c40 THEN t0.c76 ELSE t0.c0 END)&((+ (v0.c0)))));
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS TEXT));
SELECT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c64) BETWEEN (v0.c2) AND (t0.c40)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((COALESCE(t0.c64, t0.c64))OR(CAST(v0.c0 AS TEXT))))AND(0xffffffff90f6314a)))AND((((t0.c64)) NOT BETWEEN ((t0.c40)) AND ((v0.c0))))))OR(CAST(-1033537607 AS REAL)))) ORDER BY ((x'c49b')/(CASE WHEN t0.c64 THEN t0.c76 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(t0.c64, t0.c64))OR(CAST(v0.c0 AS TEXT))))AND(0xffffffff90f6314a)))AND((((t0.c64)) NOT BETWEEN ((t0.c40)) AND ((v0.c0))))))OR(CAST(-1033537607 AS REAL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((t0.c64) BETWEEN (v0.c2) AND (t0.c40)) COLLATE NOCASE COLLATE NOCASE ORDER BY ((x'c49b')/(CASE WHEN t0.c64 THEN t0.c76 ELSE v0.c2 END)) ASC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c64) BETWEEN (v0.c2) AND (t0.c40)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((COALESCE(t0.c64, t0.c64))OR(CAST(v0.c0 AS TEXT))))AND(0xffffffff90f6314a)))AND((((t0.c64)) NOT BETWEEN ((t0.c40)) AND ((v0.c0))))))OR(CAST(-1033537607 AS REAL)))) ORDER BY ((x'c49b')/(CASE WHEN t0.c64 THEN t0.c76 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(t0.c64, t0.c64))OR(CAST(v0.c0 AS TEXT))))AND(0xffffffff90f6314a)))AND((((t0.c64)) NOT BETWEEN ((t0.c40)) AND ((v0.c0))))))OR(CAST(-1033537607 AS REAL)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((t0.c64) BETWEEN (v0.c2) AND (t0.c40)) COLLATE NOCASE COLLATE NOCASE ORDER BY ((x'c49b')/(CASE WHEN t0.c64 THEN t0.c76 ELSE v0.c2 END)) ASC  NULLS LAST);
SELECT * FROM v0 FULL OUTER JOIN t0 ON ((t0.c64) BETWEEN (v0.c2) AND (t0.c40)) COLLATE NOCASE COLLATE NOCASE WHERE (((((((((COALESCE(t0.c64, t0.c64))OR(CAST(v0.c0 AS TEXT))))AND(0xffffffff90f6314a)))AND((((t0.c64)) NOT BETWEEN ((t0.c40)) AND ((v0.c0))))))OR(CAST(-1033537607 AS REAL)))) ORDER BY ((x'c49b')/(CASE WHEN t0.c64 THEN t0.c76 ELSE v0.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76))==((x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c40 AS TEXT)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76))==((x''))) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76))==((x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c40 AS TEXT)))) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76))==((x''))) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76))==((x''))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST((v0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((v0.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST((v0.c1 IN ()) AS BLOB));
SELECT * FROM t0, v0 WHERE (CAST('280503221' AS INTEGER)) ORDER BY '0.5967136950716655';
SELECT SUM(count) FROM (SELECT ALL ((CAST('280503221' AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY '0.5967136950716655');
SELECT * FROM t0, v0 WHERE (CAST('280503221' AS INTEGER)) ORDER BY '0.5967136950716655';
SELECT SUM(count) FROM (SELECT ALL ((CAST('280503221' AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY '0.5967136950716655');
SELECT * FROM t0, v0 WHERE (CAST('280503221' AS INTEGER)) ORDER BY '0.5967136950716655';
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))OR(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))OR(v0.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c1)) COLLATE BINARY);
SELECT * FROM v0, t0 WHERE ((((((((((t0.c40)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR('')) IN ())) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((((t0.c0)+(t0.c40)))>(IFNULL(v0.c0, v0.c0)))  NULLS LAST, ((((t0.c40)IS(v0.c0)))-(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c40)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR('')) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((((t0.c0)+(t0.c40)))>(IFNULL(v0.c0, v0.c0)))  NULLS LAST, ((((t0.c40)IS(v0.c0)))-(CAST(v0.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((((((((t0.c40)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR('')) IN ())) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((((t0.c0)+(t0.c40)))>(IFNULL(v0.c0, v0.c0)))  NULLS LAST, ((((t0.c40)IS(v0.c0)))-(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c40)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR('')) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((((t0.c0)+(t0.c40)))>(IFNULL(v0.c0, v0.c0)))  NULLS LAST, ((((t0.c40)IS(v0.c0)))-(CAST(v0.c1 AS BLOB)))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE ((((((((((t0.c40)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR('')) IN ())) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS INTEGER)  NULLS FIRST, ((((t0.c0)+(t0.c40)))>(IFNULL(v0.c0, v0.c0)))  NULLS LAST, ((((t0.c40)IS(v0.c0)))-(CAST(v0.c1 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c64)AND(t0.c40)))AND(NULL)))IS(((v0.c0) ISNULL)))) ORDER BY ((((CAST(t0.c64 AS TEXT))OR(((((t0.c76)OR(v0.c1)))AND(t0.c64)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c2 COLLATE NOCASE)AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, (TRIM('-1042327890', t0.c76) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c64)AND(t0.c40)))AND(NULL)))IS(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CAST(t0.c64 AS TEXT))OR(((((t0.c76)OR(v0.c1)))AND(t0.c64)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c2 COLLATE NOCASE)AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, (TRIM('-1042327890', t0.c76) IN ()) DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c64)AND(t0.c40)))AND(NULL)))IS(((v0.c0) ISNULL)))) ORDER BY ((((CAST(t0.c64 AS TEXT))OR(((((t0.c76)OR(v0.c1)))AND(t0.c64)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c2 COLLATE NOCASE)AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, (TRIM('-1042327890', t0.c76) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c64)AND(t0.c40)))AND(NULL)))IS(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CAST(t0.c64 AS TEXT))OR(((((t0.c76)OR(v0.c1)))AND(t0.c64)))))AND((t0.c0 IN ()))) ASC  NULLS FIRST, ((v0.c2 COLLATE NOCASE)AND(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)))) ASC  NULLS FIRST, (TRIM('-1042327890', t0.c76) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0)) BETWEEN ((t0.c64)) AND ((x'')))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c64)) AND ((x'')))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0)) BETWEEN ((t0.c64)) AND ((x'')))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) BETWEEN ((t0.c64)) AND ((x'')))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0)) BETWEEN ((t0.c64)) AND ((x'')))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL) COLLATE BINARY) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (((v0.c2)IS(v0.c2))) AND (((v0.c2)<<(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (((v0.c2)IS(v0.c2))) AND (((v0.c2)<<(v0.c1)))));
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL) COLLATE BINARY) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (((v0.c2)IS(v0.c2))) AND (((v0.c2)<<(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (((v0.c2)IS(v0.c2))) AND (((v0.c2)<<(v0.c1)))));
SELECT * FROM v0 WHERE (((v0.c1) NOTNULL) COLLATE BINARY) ORDER BY ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) BETWEEN (((v0.c2)IS(v0.c2))) AND (((v0.c2)<<(v0.c1))));
SELECT COUNT(*) FROM v0, t0 INDEXED BY i73 WHERE (CAST(v0.c0 AS TEXT) COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INDEXED BY i73 ORDER BY x'');
SELECT COUNT(*) FROM v0, t0 INDEXED BY i73 WHERE (CAST(v0.c0 AS TEXT) COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 INDEXED BY i73 ORDER BY x'');
SELECT COUNT(*) FROM v0, t0 INDEXED BY i73 WHERE (CAST(v0.c0 AS TEXT) COLLATE RTRIM) ORDER BY x'';
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c76)))GLOB(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c76)))GLOB(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c76)))GLOB(CAST(t0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)LIKE(t0.c76)))GLOB(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)LIKE(t0.c76)))GLOB(CAST(t0.c0 AS NUMERIC))));
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))OR(t0.c0)))AND(v0.c0))) NOT BETWEEN ((t0.c76 IN (v0.c0))) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))OR(t0.c0)))AND(v0.c0))) NOT BETWEEN ((t0.c76 IN (v0.c0))) AND (v0.c1))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))OR(t0.c0)))AND(v0.c0))) NOT BETWEEN ((t0.c76 IN (v0.c0))) AND (v0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))OR(t0.c0)))AND(v0.c0))) NOT BETWEEN ((t0.c76 IN (v0.c0))) AND (v0.c1))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((((t0.c0)OR(v0.c0)))AND(v0.c2)))OR(t0.c0)))AND(v0.c0))) NOT BETWEEN ((t0.c76 IN (v0.c0))) AND (v0.c1)));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('沥f}h') AND (CASE WHEN v0.c1 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN ('沥f}h') AND (CASE WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('沥f}h') AND (CASE WHEN v0.c1 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN ('沥f}h') AND (CASE WHEN v0.c1 THEN v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN ('沥f}h') AND (CASE WHEN v0.c1 THEN v0.c1 END)));
SELECT * FROM v0, t0 WHERE (((((((t0.c40) NOTNULL))AND(((((t0.c64)OR(NULL)))AND(v0.c2)))))AND(IFNULL(t0.c76, t0.c40))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c40) NOTNULL))AND(((((t0.c64)OR(NULL)))AND(v0.c2)))))AND(IFNULL(t0.c76, t0.c40)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c40) NOTNULL))AND(((((t0.c64)OR(NULL)))AND(v0.c2)))))AND(IFNULL(t0.c76, t0.c40))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c40) NOTNULL))AND(((((t0.c64)OR(NULL)))AND(v0.c2)))))AND(IFNULL(t0.c76, t0.c40)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((t0.c40) NOTNULL))AND(((((t0.c64)OR(NULL)))AND(v0.c2)))))AND(IFNULL(t0.c76, t0.c40))));
SELECT * FROM v0, t0 WHERE (((t0.c40 COLLATE RTRIM) BETWEEN (MAX(v0.c0, t0.c64)) AND (CAST(v0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40 COLLATE RTRIM) BETWEEN (MAX(v0.c0, t0.c64)) AND (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c40 COLLATE RTRIM) BETWEEN (MAX(v0.c0, t0.c64)) AND (CAST(v0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c40 COLLATE RTRIM) BETWEEN (MAX(v0.c0, t0.c64)) AND (CAST(v0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c40 COLLATE RTRIM) BETWEEN (MAX(v0.c0, t0.c64)) AND (CAST(v0.c2 AS TEXT))));
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE -1235456430 END)))AND(NULL))) ORDER BY (~ (v0.c2 COLLATE NOCASE))  NULLS LAST, LIKELIHOOD(v0.c1 COLLATE BINARY, 0.6864980487223203) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE -1235456430 END)))AND(NULL))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2 COLLATE NOCASE))  NULLS LAST, LIKELIHOOD(v0.c1 COLLATE BINARY, 0.6864980487223203) DESC);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE -1235456430 END)))AND(NULL))) ORDER BY (~ (v0.c2 COLLATE NOCASE))  NULLS LAST, LIKELIHOOD(v0.c1 COLLATE BINARY, 0.6864980487223203) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE -1235456430 END)))AND(NULL))) IS TRUE)  as count FROM v0 ORDER BY (~ (v0.c2 COLLATE NOCASE))  NULLS LAST, LIKELIHOOD(v0.c1 COLLATE BINARY, 0.6864980487223203) DESC);
SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE -1235456430 END)))AND(NULL))) ORDER BY (~ (v0.c2 COLLATE NOCASE))  NULLS LAST, LIKELIHOOD(v0.c1 COLLATE BINARY, 0.6864980487223203) DESC;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c76)))<<((((t0.c40))>=((0.42458973565792013)))))) ORDER BY ((t0.c64 COLLATE BINARY)|(t0.c76 COLLATE BINARY))  NULLS LAST, (((((t0.c76)OR(t0.c64)))AND(t0.c40)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c76)))<<((((t0.c40))>=((0.42458973565792013)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c64 COLLATE BINARY)|(t0.c76 COLLATE BINARY))  NULLS LAST, (((((t0.c76)OR(t0.c64)))AND(t0.c40)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c76)))<<((((t0.c40))>=((0.42458973565792013)))))) ORDER BY ((t0.c64 COLLATE BINARY)|(t0.c76 COLLATE BINARY))  NULLS LAST, (((((t0.c76)OR(t0.c64)))AND(t0.c40)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c76)))<<((((t0.c40))>=((0.42458973565792013)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c64 COLLATE BINARY)|(t0.c76 COLLATE BINARY))  NULLS LAST, (((((t0.c76)OR(t0.c64)))AND(t0.c40)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c76)))<<((((t0.c40))>=((0.42458973565792013)))))) ORDER BY ((t0.c64 COLLATE BINARY)|(t0.c76 COLLATE BINARY))  NULLS LAST, (((((t0.c76)OR(t0.c64)))AND(t0.c40)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c2)) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c2) IS TRUE) WHEN (~ (v0.c1)) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) END) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((v0.c0)*(v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c2)) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c2) IS TRUE) WHEN (~ (v0.c1)) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((v0.c0)*(v0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c2)) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c2) IS TRUE) WHEN (~ (v0.c1)) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) END) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((v0.c0)*(v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c2)) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c2) IS TRUE) WHEN (~ (v0.c1)) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((v0.c0)*(v0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE NULL  WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c2)) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN ((v0.c2) IS TRUE) WHEN (~ (v0.c1)) THEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)) END) ORDER BY (((v0.c1)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))))) AND ((((v0.c0)*(v0.c1))))) DESC  NULLS LAST;
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((CAST(v0.c2 AS BLOB), x'', ((v0.c2)OR(v0.c0))))!=(((v0.c2 IN ()), (+ (v0.c0)), ((v0.c1)<(v0.c0)))))) ORDER BY (((v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, ((v0.c2)==('2136764225')), (~ (v0.c1)))) AND ((((v0.c2)OR(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))  NULLS LAST, ((v0.c2) NOT BETWEEN (((NULL)GLOB(v0.c0))) AND (((v0.c1)OR(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c2 AS BLOB), x'', ((v0.c2)OR(v0.c0))))!=(((v0.c2 IN ()), (+ (v0.c0)), ((v0.c1)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, ((v0.c2)=('2136764225')), (~ (v0.c1)))) AND ((((v0.c2)OR(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))  NULLS LAST, ((v0.c2) NOT BETWEEN (((NULL)GLOB(v0.c0))) AND (((v0.c1)OR(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((CAST(v0.c2 AS BLOB), x'', ((v0.c2)OR(v0.c0))))!=(((v0.c2 IN ()), (+ (v0.c0)), ((v0.c1)<(v0.c0)))))) ORDER BY (((v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, ((v0.c2)==('2136764225')), (~ (v0.c1)))) AND ((((v0.c2)OR(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))  NULLS LAST, ((v0.c2) NOT BETWEEN (((NULL)GLOB(v0.c0))) AND (((v0.c1)OR(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c2 AS BLOB), x'', ((v0.c2)OR(v0.c0))))!=(((v0.c2 IN ()), (+ (v0.c0)), ((v0.c1)<(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, ((v0.c2)=('2136764225')), (~ (v0.c1)))) AND ((((v0.c2)OR(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))  NULLS LAST, ((v0.c2) NOT BETWEEN (((NULL)GLOB(v0.c0))) AND (((v0.c1)OR(v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((CAST(v0.c2 AS BLOB), x'', ((v0.c2)OR(v0.c0))))!=(((v0.c2 IN ()), (+ (v0.c0)), ((v0.c1)<(v0.c0)))))) ORDER BY (((v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0 COLLATE RTRIM, ((v0.c2)==('2136764225')), (~ (v0.c1)))) AND ((((v0.c2)OR(v0.c0)), ((v0.c1) BETWEEN (v0.c0) AND (v0.c2)), v0.c1)))  NULLS LAST, ((v0.c2) NOT BETWEEN (((NULL)GLOB(v0.c0))) AND (((v0.c1)OR(v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0.8984720222461682) ORDER BY x'159b' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8984720222461682) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY x'159b' ASC);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0.8984720222461682) ORDER BY x'159b' ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8984720222461682) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY x'159b' ASC);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0.8984720222461682) ORDER BY x'159b' ASC;
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT ALL * FROM v0 WHERE ((((((((v0.c1)AND(v0.c0)))AND(v0.c1))))!=((v0.c0)))) ORDER BY (- (NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)AND(v0.c0)))AND(v0.c1))))<>((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- (NULL)) ASC);
SELECT ALL * FROM v0 WHERE ((((((((v0.c1)AND(v0.c0)))AND(v0.c1))))!=((v0.c0)))) ORDER BY (- (NULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c1)AND(v0.c0)))AND(v0.c1))))<>((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- (NULL)) ASC);
SELECT ALL * FROM v0 WHERE ((((((((v0.c1)AND(v0.c0)))AND(v0.c1))))!=((v0.c0)))) ORDER BY (- (NULL)) ASC;
SELECT * FROM v0 WHERE (RTRIM(CAST(v0.c1 AS INTEGER))) ORDER BY LOWER(((0.7245227799209195) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(v0.c1 AS INTEGER))) IS TRUE)  as count FROM v0 ORDER BY LOWER(((0.7245227799209195) ISNULL)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (RTRIM(CAST(v0.c1 AS INTEGER))) ORDER BY LOWER(((0.7245227799209195) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(CAST(v0.c1 AS INTEGER))) IS TRUE)  as count FROM v0 ORDER BY LOWER(((0.7245227799209195) ISNULL)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (RTRIM(CAST(v0.c1 AS INTEGER))) ORDER BY LOWER(((0.7245227799209195) ISNULL)) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((~ (TRIM(v0.c1)))) ORDER BY CASE v0.c0  WHEN ((v0.c2)<(v0.c1)) THEN ((v0.c1)%(v0.c0)) END, ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1))) BETWEEN (((NULL) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c0)IS(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN ((v0.c2)<(v0.c1)) THEN ((v0.c1)%(v0.c0)) END, ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1))) BETWEEN (((NULL) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c0)IS(v0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (TRIM(v0.c1)))) ORDER BY CASE v0.c0  WHEN ((v0.c2)<(v0.c1)) THEN ((v0.c1)%(v0.c0)) END, ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1))) BETWEEN (((NULL) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c0)IS(v0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (TRIM(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN ((v0.c2)<(v0.c1)) THEN ((v0.c1)%(v0.c0)) END, ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1))) BETWEEN (((NULL) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c0)IS(v0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (TRIM(v0.c1)))) ORDER BY CASE v0.c0  WHEN ((v0.c2)<(v0.c1)) THEN ((v0.c1)%(v0.c0)) END, ((((v0.c0) BETWEEN (v0.c1) AND (v0.c1))) BETWEEN (((NULL) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c0)IS(v0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64) BETWEEN (t0.c76) AND (t0.c0))  WHEN t0.c40 THEN 0.32590464545502507 WHEN CAST(t0.c0 AS BLOB) THEN t0.c76 COLLATE BINARY WHEN (t0.c76 IN ()) THEN '1473352316' ELSE ((((0.9109017287860789)OR(t0.c76)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c64) BETWEEN (t0.c76) AND (t0.c0))  WHEN t0.c40 THEN 0.32590464545502507 WHEN CAST(t0.c0 AS BLOB) THEN t0.c76 COLLATE BINARY WHEN (t0.c76 IN ()) THEN '1473352316' ELSE ((((0.9109017287860789)OR(t0.c76)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64) BETWEEN (t0.c76) AND (t0.c0))  WHEN t0.c40 THEN 0.32590464545502507 WHEN CAST(t0.c0 AS BLOB) THEN t0.c76 COLLATE BINARY WHEN (t0.c76 IN ()) THEN '1473352316' ELSE ((((0.9109017287860789)OR(t0.c76)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c64) BETWEEN (t0.c76) AND (t0.c0))  WHEN t0.c40 THEN 0.32590464545502507 WHEN CAST(t0.c0 AS BLOB) THEN t0.c76 COLLATE BINARY WHEN (t0.c76 IN ()) THEN '1473352316' ELSE ((((0.9109017287860789)OR(t0.c76)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c64) BETWEEN (t0.c76) AND (t0.c0))  WHEN t0.c40 THEN 0.32590464545502507 WHEN CAST(t0.c0 AS BLOB) THEN t0.c76 COLLATE BINARY WHEN (t0.c76 IN ()) THEN '1473352316' ELSE ((((0.9109017287860789)OR(t0.c76)))OR(t0.c0)) END);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c76, x'', v0.c2)) BETWEEN ((v0.c1, t0.c76, x'')) AND ((t0.c76, t0.c40, x'1b78'))) IN ())) ORDER BY ((((((t0.c76) NOT BETWEEN (v0.c0) AND (t0.c64)))AND(t0.c64)))AND(((v0.c1)||(t0.c0)))), 'c9_';
SELECT SUM(count) FROM (SELECT ((((((t0.c76, x'', v0.c2)) BETWEEN ((v0.c1, t0.c76, x'')) AND ((t0.c76, t0.c40, x'1b78'))) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((t0.c76) NOT BETWEEN (v0.c0) AND (t0.c64)))AND(t0.c64)))AND(((v0.c1)||(t0.c0)))), 'c9_');
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c76, x'', v0.c2)) BETWEEN ((v0.c1, t0.c76, x'')) AND ((t0.c76, t0.c40, x'1b78'))) IN ())) ORDER BY ((((((t0.c76) NOT BETWEEN (v0.c0) AND (t0.c64)))AND(t0.c64)))AND(((v0.c1)||(t0.c0)))), 'c9_';
SELECT SUM(count) FROM (SELECT ((((((t0.c76, x'', v0.c2)) BETWEEN ((v0.c1, t0.c76, x'')) AND ((t0.c76, t0.c40, x'1b78'))) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((t0.c76) NOT BETWEEN (v0.c0) AND (t0.c64)))AND(t0.c64)))AND(((v0.c1)||(t0.c0)))), 'c9_');
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c76, x'', v0.c2)) BETWEEN ((v0.c1, t0.c76, x'')) AND ((t0.c76, t0.c40, x'1b78'))) IN ())) ORDER BY ((((((t0.c76) NOT BETWEEN (v0.c0) AND (t0.c64)))AND(t0.c64)))AND(((v0.c1)||(t0.c0)))), 'c9_';
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))<(((((((((v0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))OR(v0.c0)))));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c0 COLLATE NOCASE)AND((~ (t0.c40)))))OR(v0.c1)) WHERE ((((v0.c1)) BETWEEN ((LIKELIHOOD(v0.c2, 0.9758671587549391))) AND ((t0.c76)))) ORDER BY CASE json_remove(v0.c2, t0.c76)  WHEN (t0.c40 IN ()) THEN (((t0.c0, v0.c1, NULL)) NOT BETWEEN ((v0.c1, t0.c64, t0.c64)) AND ((t0.c0, v0.c2, t0.c40))) WHEN TRIM(DISTINCT t0.c76, t0.c64) THEN DATE(t0.c76, t0.c0, t0.c0) WHEN NULL THEN (NOT (t0.c0)) WHEN ((NULL) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (t0.c0)) WHEN NULL THEN v0.c1 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((LIKELIHOOD(v0.c2, 0.9758671587549391))) AND ((t0.c76)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c0 COLLATE NOCASE)AND((~ (t0.c40)))))OR(v0.c1)) ORDER BY CASE json_remove(v0.c2, t0.c76)  WHEN (t0.c40 IN ()) THEN (((t0.c0, v0.c1, NULL)) NOT BETWEEN ((v0.c1, t0.c64, t0.c64)) AND ((t0.c0, v0.c2, t0.c40))) WHEN TRIM(DISTINCT t0.c76, t0.c64) THEN DATE(t0.c76, t0.c0, t0.c0) WHEN NULL THEN (NOT (t0.c0)) WHEN ((NULL) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (t0.c0)) WHEN NULL THEN v0.c1 COLLATE RTRIM END  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c0 COLLATE NOCASE)AND((~ (t0.c40)))))OR(v0.c1)) WHERE ((((v0.c1)) BETWEEN ((LIKELIHOOD(v0.c2, 0.9758671587549391))) AND ((t0.c76)))) ORDER BY CASE json_remove(v0.c2, t0.c76)  WHEN (t0.c40 IN ()) THEN (((t0.c0, v0.c1, NULL)) NOT BETWEEN ((v0.c1, t0.c64, t0.c64)) AND ((t0.c0, v0.c2, t0.c40))) WHEN TRIM(DISTINCT t0.c76, t0.c64) THEN DATE(t0.c76, t0.c0, t0.c0) WHEN NULL THEN (NOT (t0.c0)) WHEN ((NULL) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (t0.c0)) WHEN NULL THEN v0.c1 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c1)) BETWEEN ((LIKELIHOOD(v0.c2, 0.9758671587549391))) AND ((t0.c76)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c0 COLLATE NOCASE)AND((~ (t0.c40)))))OR(v0.c1)) ORDER BY CASE json_remove(v0.c2, t0.c76)  WHEN (t0.c40 IN ()) THEN (((t0.c0, v0.c1, NULL)) NOT BETWEEN ((v0.c1, t0.c64, t0.c64)) AND ((t0.c0, v0.c2, t0.c40))) WHEN TRIM(DISTINCT t0.c76, t0.c64) THEN DATE(t0.c76, t0.c0, t0.c0) WHEN NULL THEN (NOT (t0.c0)) WHEN ((NULL) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c1) AND (t0.c0)) WHEN NULL THEN v0.c1 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((CASE WHEN NULL THEN t0.c64 ELSE v0.c1 END)OR(v0.c0)))AND(CASE WHEN t0.c64 THEN t0.c40 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN t0.c64 ELSE v0.c1 END)OR(v0.c0)))AND(CASE WHEN t0.c64 THEN t0.c40 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((CASE WHEN NULL THEN t0.c64 ELSE v0.c1 END)OR(v0.c0)))AND(CASE WHEN t0.c64 THEN t0.c40 END)));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN NULL THEN t0.c64 ELSE v0.c1 END)OR(v0.c0)))AND(CASE WHEN t0.c64 THEN t0.c40 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((CASE WHEN NULL THEN t0.c64 ELSE v0.c1 END)OR(v0.c0)))AND(CASE WHEN t0.c64 THEN t0.c40 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c0)))LIKE(((v0.c2)>(v0.c0))))) ORDER BY (+ (((((v0.c1)AND(NULL)))AND(v0.c2))))  NULLS FIRST, (v0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))LIKE(((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c1)AND(NULL)))AND(v0.c2))))  NULLS FIRST, (v0.c1 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c0)))LIKE(((v0.c2)>(v0.c0))))) ORDER BY (+ (((((v0.c1)AND(NULL)))AND(v0.c2))))  NULLS FIRST, (v0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))AND(v0.c0)))LIKE(((v0.c2)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c1)AND(NULL)))AND(v0.c2))))  NULLS FIRST, (v0.c1 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c0)))LIKE(((v0.c2)>(v0.c0))))) ORDER BY (+ (((((v0.c1)AND(NULL)))AND(v0.c2))))  NULLS FIRST, (v0.c1 IN ());
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76) NOTNULL) IN (((t0.c40) BETWEEN (v0.c0) AND (t0.c76))))) ORDER BY json_quote((- (v0.c2))), (('')||(v0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76) NOTNULL) IN (((t0.c40) BETWEEN (v0.c0) AND (t0.c76))))) IS TRUE)  as count FROM t0, v0 ORDER BY json_quote((- (v0.c2))), (('')||(v0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76) NOTNULL) IN (((t0.c40) BETWEEN (v0.c0) AND (t0.c76))))) ORDER BY json_quote((- (v0.c2))), (('')||(v0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c76) NOTNULL) IN (((t0.c40) BETWEEN (v0.c0) AND (t0.c76))))) IS TRUE)  as count FROM t0, v0 ORDER BY json_quote((- (v0.c2))), (('')||(v0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c76) NOTNULL) IN (((t0.c40) BETWEEN (v0.c0) AND (t0.c76))))) ORDER BY json_quote((- (v0.c2))), (('')||(v0.c1)) COLLATE NOCASE;
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c76) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76) NOTNULL)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c76) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76) NOTNULL)) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c76) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c0);
SELECT ALL * FROM t0 INNER JOIN v0 ON (((v0.c0) NOT NULL) IN ((((v0.c0))>=((t0.c0))), ((t0.c76) IS TRUE))) WHERE (((t0.c0) BETWEEN (t0.c76) AND (0.14869466050358482)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c76) AND (0.14869466050358482)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0) NOT NULL) IN ((((v0.c0))>=((t0.c0))), ((t0.c76) IS TRUE))));
SELECT ALL * FROM t0 INNER JOIN v0 ON (((v0.c0) NOT NULL) IN ((((v0.c0))>=((t0.c0))), ((t0.c76) IS TRUE))) WHERE (((t0.c0) BETWEEN (t0.c76) AND (0.14869466050358482)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c76) AND (0.14869466050358482)) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((v0.c0) NOT NULL) IN ((((v0.c0))>=((t0.c0))), ((t0.c76) IS TRUE))));
SELECT ALL * FROM t0 INNER JOIN v0 ON (((v0.c0) NOT NULL) IN ((((v0.c0))>=((t0.c0))), ((t0.c76) IS TRUE))) WHERE (((t0.c0) BETWEEN (t0.c76) AND (0.14869466050358482)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c64 IN (t0.c64)), t0.c76, (+ (t0.c0)), (((t0.c0))>((t0.c64))), (((t0.c64)) BETWEEN ((t0.c40)) AND ((t0.c40)))))>=((((((((((t0.c76)OR(t0.c0)))OR(t0.c0)))AND(t0.c40)))OR(t0.c0)), (NOT (t0.c64)), ((x'e3c4')%(t0.c64)), 'BBRHCAf' COLLATE BINARY, t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((t0.c64 IN (t0.c64)), t0.c76, (+ (t0.c0)), (((t0.c0))>((t0.c64))), (((t0.c64)) BETWEEN ((t0.c40)) AND ((t0.c40)))))>=((((((((((t0.c76)OR(t0.c0)))OR(t0.c0)))AND(t0.c40)))OR(t0.c0)), (NOT (t0.c64)), ((x'e3c4')%(t0.c64)), 'BBRHCAf' COLLATE BINARY, t0.c64)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c64 IN (t0.c64)), t0.c76, (+ (t0.c0)), (((t0.c0))>((t0.c64))), (((t0.c64)) BETWEEN ((t0.c40)) AND ((t0.c40)))))>=((((((((((t0.c76)OR(t0.c0)))OR(t0.c0)))AND(t0.c40)))OR(t0.c0)), (NOT (t0.c64)), ((x'e3c4')%(t0.c64)), 'BBRHCAf' COLLATE BINARY, t0.c64))));
SELECT SUM(count) FROM (SELECT ((((((t0.c64 IN (t0.c64)), t0.c76, (+ (t0.c0)), (((t0.c0))>((t0.c64))), (((t0.c64)) BETWEEN ((t0.c40)) AND ((t0.c40)))))>=((((((((((t0.c76)OR(t0.c0)))OR(t0.c0)))AND(t0.c40)))OR(t0.c0)), (NOT (t0.c64)), ((x'e3c4')%(t0.c64)), 'BBRHCAf' COLLATE BINARY, t0.c64)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c64 IN (t0.c64)), t0.c76, (+ (t0.c0)), (((t0.c0))>((t0.c64))), (((t0.c64)) BETWEEN ((t0.c40)) AND ((t0.c40)))))>=((((((((((t0.c76)OR(t0.c0)))OR(t0.c0)))AND(t0.c40)))OR(t0.c0)), (NOT (t0.c64)), ((x'e3c4')%(t0.c64)), 'BBRHCAf' COLLATE BINARY, t0.c64))));
SELECT COUNT(*) FROM v0 INDEXED BY i73, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INDEXED BY i73, t0);
SELECT COUNT(*) FROM v0 INDEXED BY i73, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 INDEXED BY i73, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c64))>((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c64))>((t0.c0))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c64))>((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c64))>((t0.c0))) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((t0.c64))>((t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)>(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)>(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)>(v0.c1))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)>(v0.c1)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c0)))) AND ((((v0.c0)>(v0.c1))))));
SELECT * FROM t0 WHERE ((+ ((t0.c76 IN ())))) ORDER BY (((((x'') IS TRUE), NULL, ((t0.c40) ISNULL)))>(((t0.c0 IN ()), t0.c0, x''))), (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((-9.51185464E8) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((t0.c76 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((x'') IS TRUE), NULL, ((t0.c40) ISNULL)))>(((t0.c0 IN ()), t0.c0, x''))), (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((-9.51185464E8) IS FALSE))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((+ ((t0.c76 IN ())))) ORDER BY (((((x'') IS TRUE), NULL, ((t0.c40) ISNULL)))>(((t0.c0 IN ()), t0.c0, x''))), (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((-9.51185464E8) IS FALSE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((t0.c76 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((((x'') IS TRUE), NULL, ((t0.c40) ISNULL)))>(((t0.c0 IN ()), t0.c0, x''))), (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((-9.51185464E8) IS FALSE))))  NULLS FIRST);
SELECT * FROM t0 WHERE ((+ ((t0.c76 IN ())))) ORDER BY (((((x'') IS TRUE), NULL, ((t0.c40) ISNULL)))>(((t0.c0 IN ()), t0.c0, x''))), (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((-9.51185464E8) IS FALSE))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((((v0.c0))!=((t0.c76))))IS NOT(CASE WHEN t0.c64 THEN t0.c40 ELSE v0.c1 END))) ORDER BY (- (((t0.c76) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((t0.c76))))IS NOT(CASE WHEN t0.c64 THEN t0.c40 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (((t0.c76) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((v0.c0))!=((t0.c76))))IS NOT(CASE WHEN t0.c64 THEN t0.c40 ELSE v0.c1 END))) ORDER BY (- (((t0.c76) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((t0.c76))))IS NOT(CASE WHEN t0.c64 THEN t0.c40 ELSE v0.c1 END))) IS TRUE)  as count FROM v0, t0 ORDER BY (- (((t0.c76) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((((v0.c0))!=((t0.c76))))IS NOT(CASE WHEN t0.c64 THEN t0.c40 ELSE v0.c1 END))) ORDER BY (- (((t0.c76) NOTNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN v0.c2 THEN v0.c1 COLLATE BINARY ELSE (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((v0.c2) BETWEEN (NULL) AND (t0.c40)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN v0.c1 COLLATE BINARY ELSE (v0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c2) BETWEEN (NULL) AND (t0.c40)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN v0.c2 THEN v0.c1 COLLATE BINARY ELSE (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((v0.c2) BETWEEN (NULL) AND (t0.c40)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN v0.c1 COLLATE BINARY ELSE (v0.c1 IN (v0.c0)) END) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(((v0.c2) BETWEEN (NULL) AND (t0.c40)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN v0.c2 THEN v0.c1 COLLATE BINARY ELSE (v0.c1 IN (v0.c0)) END) ORDER BY CAST(((v0.c2) BETWEEN (NULL) AND (t0.c40)) AS NUMERIC);
SELECT * FROM t0 WHERE ((('1735372840')&((((t0.c64)) BETWEEN ((t0.c76)) AND ((t0.c40))))));
SELECT SUM(count) FROM (SELECT (((('1735372840')&((((t0.c64)) BETWEEN ((t0.c76)) AND ((t0.c40)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('1735372840')&((((t0.c64)) BETWEEN ((t0.c76)) AND ((t0.c40))))));
SELECT SUM(count) FROM (SELECT (((('1735372840')&((((t0.c64)) BETWEEN ((t0.c76)) AND ((t0.c40)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((('1735372840')&((((t0.c64)) BETWEEN ((t0.c76)) AND ((t0.c40))))));
SELECT * FROM t0 WHERE (((((x'')AND(((t0.c40)AND(t0.c0)))))AND(t0.c64 COLLATE RTRIM))) ORDER BY (- (((x'430dfdc3') NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(((t0.c40)AND(t0.c0)))))AND(t0.c64 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (- (((x'430dfdc3') NOTNULL))) DESC);
SELECT * FROM t0 WHERE (((((x'')AND(((t0.c40)AND(t0.c0)))))AND(t0.c64 COLLATE RTRIM))) ORDER BY (- (((x'430dfdc3') NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(((t0.c40)AND(t0.c0)))))AND(t0.c64 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY (- (((x'430dfdc3') NOTNULL))) DESC);
SELECT * FROM t0 WHERE (((((x'')AND(((t0.c40)AND(t0.c0)))))AND(t0.c64 COLLATE RTRIM))) ORDER BY (- (((x'430dfdc3') NOTNULL))) DESC;
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1)&(CASE v0.c2  WHEN v0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)&(CASE v0.c2  WHEN v0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1)&(CASE v0.c2  WHEN v0.c1 THEN x'' END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1)&(CASE v0.c2  WHEN v0.c1 THEN x'' END))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c1)&(CASE v0.c2  WHEN v0.c1 THEN x'' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN (t0.c0)) AS NUMERIC)) ORDER BY ((((t0.c76 COLLATE BINARY)OR(((t0.c64) NOTNULL))))AND(NULLIF(DISTINCT 'PL\', t0.c0))) DESC, (+ (CAST(t0.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c64 IN (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76 COLLATE BINARY)OR(((t0.c64) NOTNULL))))AND(NULLIF(DISTINCT 'PL\', t0.c0))) DESC, (+ (CAST(t0.c0 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN (t0.c0)) AS NUMERIC)) ORDER BY ((((t0.c76 COLLATE BINARY)OR(((t0.c64) NOTNULL))))AND(NULLIF(DISTINCT 'PL\', t0.c0))) DESC, (+ (CAST(t0.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c64 IN (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c76 COLLATE BINARY)OR(((t0.c64) NOTNULL))))AND(NULLIF(DISTINCT 'PL\', t0.c0))) DESC, (+ (CAST(t0.c0 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c64 IN (t0.c0)) AS NUMERIC)) ORDER BY ((((t0.c76 COLLATE BINARY)OR(((t0.c64) NOTNULL))))AND(NULLIF(DISTINCT 'PL\', t0.c0))) DESC, (+ (CAST(t0.c0 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t0 WHERE (t0.c0) ORDER BY JULIANDAY((((t0.c0))>((v0.c0))), NULL, ((v0.c0) BETWEEN (v0.c1) AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY JULIANDAY((((t0.c0))>((v0.c0))), NULL, ((v0.c0) BETWEEN (v0.c1) AND (t0.c0))) DESC);
SELECT ALL * FROM v0, t0 WHERE (t0.c0) ORDER BY JULIANDAY((((t0.c0))>((v0.c0))), NULL, ((v0.c0) BETWEEN (v0.c1) AND (t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY JULIANDAY((((t0.c0))>((v0.c0))), NULL, ((v0.c0) BETWEEN (v0.c1) AND (t0.c0))) DESC);
SELECT ALL * FROM v0, t0 WHERE (t0.c0) ORDER BY JULIANDAY((((t0.c0))>((v0.c0))), NULL, ((v0.c0) BETWEEN (v0.c1) AND (t0.c0))) DESC;
SELECT ALL * FROM t0 WHERE ((((- (t0.c40)))*((((NULL))>=((t0.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c40)))*((((NULL))>=((t0.c64)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c40)))*((((NULL))>=((t0.c64))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c40)))*((((NULL))>=((t0.c64)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((- (t0.c40)))*((((NULL))>=((t0.c64))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2) NOTNULL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (load_extension((- (v0.c1)), ((0.7319495530943549)/(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((- (v0.c1)), ((0.7319495530943549)/(t0.c76)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (load_extension((- (v0.c1)), ((0.7319495530943549)/(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((- (v0.c1)), ((0.7319495530943549)/(t0.c76)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)IS NOT(CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76 IN (NULL, t0.c40)))&((('')GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE RTRIM)IS NOT(CAST(t0.c40 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76 IN (NULL, t0.c40)))&((('')GLOB(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)IS NOT(CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76 IN (NULL, t0.c40)))&((('')GLOB(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE RTRIM)IS NOT(CAST(t0.c40 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76 IN (NULL, t0.c40)))&((('')GLOB(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64 COLLATE RTRIM)IS NOT(CAST(t0.c40 AS TEXT)))) ORDER BY (((t0.c76 IN (NULL, t0.c40)))&((('')GLOB(t0.c0))));
SELECT * FROM t0 WHERE (CASE (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c76)))  WHEN TYPEOF(DISTINCT t0.c76) THEN ((t0.c76) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c76)))  WHEN TYPEOF(DISTINCT t0.c76) THEN ((t0.c76) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c76)))  WHEN TYPEOF(DISTINCT t0.c76) THEN ((t0.c76) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c76)))  WHEN TYPEOF(DISTINCT t0.c76) THEN ((t0.c76) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c76)) BETWEEN ((t0.c0)) AND ((t0.c76)))  WHEN TYPEOF(DISTINCT t0.c76) THEN ((t0.c76) BETWEEN (t0.c0) AND (t0.c0)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ''  WHEN t0.c76 THEN t0.c76 WHEN t0.c64 THEN -1.62947485E8 WHEN t0.c64 THEN '' ELSE t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN t0.c76 THEN t0.c76 WHEN t0.c64 THEN -1.62947485E8 WHEN t0.c64 THEN '' ELSE t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ''  WHEN t0.c76 THEN t0.c76 WHEN t0.c64 THEN -1.62947485E8 WHEN t0.c64 THEN '' ELSE t0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN t0.c76 THEN t0.c76 WHEN t0.c64 THEN -1.62947485E8 WHEN t0.c64 THEN '' ELSE t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ''  WHEN t0.c76 THEN t0.c76 WHEN t0.c64 THEN -1.62947485E8 WHEN t0.c64 THEN '' ELSE t0.c0 END COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c40) NOT BETWEEN ('') AND (t0.c64))) NOT NULL)) ORDER BY CAST(t0.c76 COLLATE RTRIM AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c40) NOT BETWEEN ('') AND (t0.c64))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c76 COLLATE RTRIM AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c40) NOT BETWEEN ('') AND (t0.c64))) NOT NULL)) ORDER BY CAST(t0.c76 COLLATE RTRIM AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c40) NOT BETWEEN ('') AND (t0.c64))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c76 COLLATE RTRIM AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c40) NOT BETWEEN ('') AND (t0.c64))) NOT NULL)) ORDER BY CAST(t0.c76 COLLATE RTRIM AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (-1525010823);
SELECT SUM(count) FROM (SELECT ALL ((-1525010823) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (-1525010823);
SELECT SUM(count) FROM (SELECT ALL ((-1525010823) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (-1525010823);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((v0.c0))>=((t0.c76))))OR((((x'', v0.c1, x'', t0.c0, v0.c0))>=((t0.c40, v0.c0, t0.c40, v0.c0, t0.c0))))))AND(NULL))) ORDER BY ((t0.c76)>=(v0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0))>=((t0.c76))))OR((((x'', v0.c1, x'', t0.c0, v0.c0))>=((t0.c40, v0.c0, t0.c40, v0.c0, t0.c0))))))AND(NULL))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((t0.c76)>=(v0.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((v0.c0))>=((t0.c76))))OR((((x'', v0.c1, x'', t0.c0, v0.c0))>=((t0.c40, v0.c0, t0.c40, v0.c0, t0.c0))))))AND(NULL))) ORDER BY ((t0.c76)>=(v0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0))>=((t0.c76))))OR((((x'', v0.c1, x'', t0.c0, v0.c0))>=((t0.c40, v0.c0, t0.c40, v0.c0, t0.c0))))))AND(NULL))) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((t0.c76)>=(v0.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((v0.c0))>=((t0.c76))))OR((((x'', v0.c1, x'', t0.c0, v0.c0))>=((t0.c40, v0.c0, t0.c40, v0.c0, t0.c0))))))AND(NULL))) ORDER BY ((t0.c76)>=(v0.c2)) COLLATE RTRIM;
SELECT * FROM t0 FULL OUTER JOIN v0 ON (+ ((((v0.c1))<=((t0.c0))))) WHERE ((((t0.c0, t0.c40, t0.c0)) BETWEEN ((v0.c1, NULL, ((v0.c2) NOTNULL))) AND (((NOT (t0.c76)), ((v0.c1) BETWEEN (t0.c64) AND (t0.c76)), ((t0.c0) NOT BETWEEN (t0.c40) AND (t0.c64))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c40, t0.c0)) BETWEEN ((v0.c1, NULL, ((v0.c2) NOTNULL))) AND (((NOT (t0.c76)), ((v0.c1) BETWEEN (t0.c64) AND (t0.c76)), ((t0.c0) NOT BETWEEN (t0.c40) AND (t0.c64)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ ((((v0.c1))<=((t0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (+ ((((v0.c1))<=((t0.c0))))) WHERE ((((t0.c0, t0.c40, t0.c0)) BETWEEN ((v0.c1, NULL, ((v0.c2) NOTNULL))) AND (((NOT (t0.c76)), ((v0.c1) BETWEEN (t0.c64) AND (t0.c76)), ((t0.c0) NOT BETWEEN (t0.c40) AND (t0.c64))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c40, t0.c0)) BETWEEN ((v0.c1, NULL, ((v0.c2) NOTNULL))) AND (((NOT (t0.c76)), ((v0.c1) BETWEEN (t0.c64) AND (t0.c76)), ((t0.c0) NOT BETWEEN (t0.c40) AND (t0.c64)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ ((((v0.c1))<=((t0.c0))))));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (+ ((((v0.c1))<=((t0.c0))))) WHERE ((((t0.c0, t0.c40, t0.c0)) BETWEEN ((v0.c1, NULL, ((v0.c2) NOTNULL))) AND (((NOT (t0.c76)), ((v0.c1) BETWEEN (t0.c64) AND (t0.c76)), ((t0.c0) NOT BETWEEN (t0.c40) AND (t0.c64))))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c40 COLLATE BINARY) IS FALSE) WHERE ((0.762229105268542 IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (((((t0.c64)AND(v0.c0)))OR(v0.c2))) AND (((v0.c1) BETWEEN (t0.c0) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.762229105268542 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c40 COLLATE BINARY) IS FALSE) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (((((t0.c64)AND(v0.c0)))OR(v0.c2))) AND (((v0.c1) BETWEEN (t0.c0) AND (t0.c76)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c40 COLLATE BINARY) IS FALSE) WHERE ((0.762229105268542 IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (((((t0.c64)AND(v0.c0)))OR(v0.c2))) AND (((v0.c1) BETWEEN (t0.c0) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.762229105268542 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c40 COLLATE BINARY) IS FALSE) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (((((t0.c64)AND(v0.c0)))OR(v0.c2))) AND (((v0.c1) BETWEEN (t0.c0) AND (t0.c76)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c40 COLLATE BINARY) IS FALSE) WHERE ((0.762229105268542 IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0))) NOT BETWEEN (((((t0.c64)AND(v0.c0)))OR(v0.c2))) AND (((v0.c1) BETWEEN (t0.c0) AND (t0.c76)))) ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (((((((((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))OR(NULL)))OR(0X4ad6eba2)))AND(t0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND ('917482239'))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(t0.c40)))AND(t0.c40)))AND(v0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c76 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))OR(NULL)))OR(0x4ad6eba2)))AND(t0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND ('917482239'))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(t0.c40)))AND(t0.c40)))AND(v0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c76 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (((((((((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))OR(NULL)))OR(0X4ad6eba2)))AND(t0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND ('917482239'))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(t0.c40)))AND(t0.c40)))AND(v0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c76 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))OR(NULL)))OR(0x4ad6eba2)))AND(t0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND ('917482239'))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(t0.c40)))AND(t0.c40)))AND(v0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c76 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (((((((((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))OR(NULL)))OR(0X4ad6eba2)))AND(t0.c0)))OR(v0.c0))) NOT BETWEEN (v0.c1 COLLATE BINARY) AND ('917482239'))) ORDER BY ((((((((((v0.c0)OR(v0.c0)))OR(t0.c40)))AND(t0.c40)))AND(v0.c0))) BETWEEN ((v0.c1 IN ())) AND (CAST(t0.c76 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c76);
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c0) ISNULL)) ORDER BY json_array(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)), ((v0.c2)<=(t0.c64)), v0.c2 COLLATE BINARY, ((0.07050128961566549)LIKE(t0.c0)), NULLIF(v0.c2, t0.c64), ((t0.c40)+(t0.c76)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY json_array(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)), ((v0.c2)<=(t0.c64)), v0.c2 COLLATE BINARY, ((0.07050128961566549)LIKE(t0.c0)), NULLIF(v0.c2, t0.c64), ((t0.c40)+(t0.c76))));
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c0) ISNULL)) ORDER BY json_array(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)), ((v0.c2)<=(t0.c64)), v0.c2 COLLATE BINARY, ((0.07050128961566549)LIKE(t0.c0)), NULLIF(v0.c2, t0.c64), ((t0.c40)+(t0.c76)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY json_array(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)), ((v0.c2)<=(t0.c64)), v0.c2 COLLATE BINARY, ((0.07050128961566549)LIKE(t0.c0)), NULLIF(v0.c2, t0.c64), ((t0.c40)+(t0.c76))));
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c0) ISNULL)) ORDER BY json_array(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)), ((v0.c2)<=(t0.c64)), v0.c2 COLLATE BINARY, ((0.07050128961566549)LIKE(t0.c0)), NULLIF(v0.c2, t0.c64), ((t0.c40)+(t0.c76)));
SELECT ALL * FROM v0 WHERE (CASE WHEN 'vM' THEN LIKELY(v0.c0) ELSE (~ (v0.c1)) END) ORDER BY ((((v0.c1)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'vM' THEN LIKELY(v0.c0) ELSE (~ (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE (CASE WHEN 'vM' THEN LIKELY(v0.c0) ELSE (~ (v0.c1)) END) ORDER BY ((((v0.c1)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 'vM' THEN LIKELY(v0.c0) ELSE (~ (v0.c1)) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM v0 WHERE (CASE WHEN 'vM' THEN LIKELY(v0.c0) ELSE (~ (v0.c1)) END) ORDER BY ((((v0.c1)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT * FROM v0, t0 WHERE (NULLIF(((t0.c64)|(v0.c1)), CAST(t0.c64 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c64)|(v0.c1)), CAST(t0.c64 AS BLOB))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (NULLIF(((t0.c64)|(v0.c1)), CAST(t0.c64 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c64)|(v0.c1)), CAST(t0.c64 AS BLOB))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (NULLIF(((t0.c64)|(v0.c1)), CAST(t0.c64 AS BLOB)));
SELECT ALL * FROM v0 WHERE (1.93533792E9) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)|(((v0.c2)|(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.93533792E9) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)|(((v0.c2)|(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (1.93533792E9) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)|(((v0.c2)|(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((1.93533792E9) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)|(((v0.c2)|(v0.c1))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (1.93533792E9) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)|(((v0.c2)|(v0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (((t0.c64)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c76)>=(v0.c0))))) WHERE ((((('(_*')|(t0.c76)))>=(((t0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('(_*')|(t0.c76)))>=(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((t0.c64)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c76)>=(v0.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (((t0.c64)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c76)>=(v0.c0))))) WHERE ((((('(_*')|(t0.c76)))>=(((t0.c0)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('(_*')|(t0.c76)))>=(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((t0.c64)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c76)>=(v0.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (((t0.c64)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((((t0.c76)>=(v0.c0))))) WHERE ((((('(_*')|(t0.c76)))>=(((t0.c0)/(t0.c0)))));
SELECT * FROM v0 CROSS JOIN t0 ON (((-1257173217, v0.c1, t0.c76)) BETWEEN ((((((v0.c2)AND(t0.c0)))OR(v0.c2)), ((((v0.c0)OR(t0.c0)))AND(t0.c76)), ((((((((t0.c76)OR(v0.c0)))OR(t0.c40)))AND(v0.c1)))AND(v0.c0)))) AND ((((t0.c0)OR(t0.c76)), ((v0.c0)>(v0.c0)), (((t0.c0)) BETWEEN ((v0.c2)) AND ((t0.c76)))))) WHERE ((CASE t0.c76  WHEN t0.c76 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c64))) NOT BETWEEN (((t0.c76)|(v0.c0))) AND (t0.c40 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c76  WHEN t0.c76 THEN v0.c1 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((-1257173217, v0.c1, t0.c76)) BETWEEN ((((((v0.c2)AND(t0.c0)))OR(v0.c2)), ((((v0.c0)OR(t0.c0)))AND(t0.c76)), ((((((((t0.c76)OR(v0.c0)))OR(t0.c40)))AND(v0.c1)))AND(v0.c0)))) AND ((((t0.c0)OR(t0.c76)), ((v0.c0)>(v0.c0)), (((t0.c0)) BETWEEN ((v0.c2)) AND ((t0.c76)))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c64))) NOT BETWEEN (((t0.c76)|(v0.c0))) AND (t0.c40 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON (((-1257173217, v0.c1, t0.c76)) BETWEEN ((((((v0.c2)AND(t0.c0)))OR(v0.c2)), ((((v0.c0)OR(t0.c0)))AND(t0.c76)), ((((((((t0.c76)OR(v0.c0)))OR(t0.c40)))AND(v0.c1)))AND(v0.c0)))) AND ((((t0.c0)OR(t0.c76)), ((v0.c0)>(v0.c0)), (((t0.c0)) BETWEEN ((v0.c2)) AND ((t0.c76)))))) WHERE ((CASE t0.c76  WHEN t0.c76 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c64))) NOT BETWEEN (((t0.c76)|(v0.c0))) AND (t0.c40 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE t0.c76  WHEN t0.c76 THEN v0.c1 ELSE v0.c0 END IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((-1257173217, v0.c1, t0.c76)) BETWEEN ((((((v0.c2)AND(t0.c0)))OR(v0.c2)), ((((v0.c0)OR(t0.c0)))AND(t0.c76)), ((((((((t0.c76)OR(v0.c0)))OR(t0.c40)))AND(v0.c1)))AND(v0.c0)))) AND ((((t0.c0)OR(t0.c76)), ((v0.c0)>(v0.c0)), (((t0.c0)) BETWEEN ((v0.c2)) AND ((t0.c76)))))) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c64))) NOT BETWEEN (((t0.c76)|(v0.c0))) AND (t0.c40 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON (((-1257173217, v0.c1, t0.c76)) BETWEEN ((((((v0.c2)AND(t0.c0)))OR(v0.c2)), ((((v0.c0)OR(t0.c0)))AND(t0.c76)), ((((((((t0.c76)OR(v0.c0)))OR(t0.c40)))AND(v0.c1)))AND(v0.c0)))) AND ((((t0.c0)OR(t0.c76)), ((v0.c0)>(v0.c0)), (((t0.c0)) BETWEEN ((v0.c2)) AND ((t0.c76)))))) WHERE ((CASE t0.c76  WHEN t0.c76 THEN v0.c1 ELSE v0.c0 END IN ())) ORDER BY ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c64))) NOT BETWEEN (((t0.c76)|(v0.c0))) AND (t0.c40 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (rtreenode(((((t0.c0)AND(0.3400583351901172)))AND(t0.c64)), (((t0.c40)) NOT BETWEEN ((t0.c64)) AND ((t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((t0.c0)AND(0.3400583351901172)))AND(t0.c64)), (((t0.c40)) NOT BETWEEN ((t0.c64)) AND ((t0.c40))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (rtreenode(((((t0.c0)AND(0.3400583351901172)))AND(t0.c64)), (((t0.c40)) NOT BETWEEN ((t0.c64)) AND ((t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((((t0.c0)AND(0.3400583351901172)))AND(t0.c64)), (((t0.c40)) NOT BETWEEN ((t0.c64)) AND ((t0.c40))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (rtreenode(((((t0.c0)AND(0.3400583351901172)))AND(t0.c64)), (((t0.c40)) NOT BETWEEN ((t0.c64)) AND ((t0.c40)))));
SELECT * FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c2))) IS TRUE)) ORDER BY ((UNICODE(v0.c1))%(((v0.c1)>>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))AND(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((UNICODE(v0.c1))%(((v0.c1)>>(v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c2))) IS TRUE)) ORDER BY ((UNICODE(v0.c1))%(((v0.c1)>>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c2)OR(v0.c2)))AND(v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((UNICODE(v0.c1))%(((v0.c1)>>(v0.c0)))) DESC);
SELECT * FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c2))) IS TRUE)) ORDER BY ((UNICODE(v0.c1))%(((v0.c1)>>(v0.c0)))) DESC;
SELECT * FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c2 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM t0, v0 WHERE (((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE t0.c76 END)AND(((t0.c0) IS FALSE))))AND(((v0.c2)<(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE t0.c76 END)AND(((t0.c0) IS FALSE))))AND(((v0.c2)<(t0.c40))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE t0.c76 END)AND(((t0.c0) IS FALSE))))AND(((v0.c2)<(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE t0.c76 END)AND(((t0.c0) IS FALSE))))AND(((v0.c2)<(t0.c40))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE t0.c76 END)AND(((t0.c0) IS FALSE))))AND(((v0.c2)<(t0.c40)))));
SELECT COUNT(*) FROM v0 WHERE (json_array_length(v0.c1 COLLATE NOCASE)) ORDER BY UNLIKELY(((v0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((json_array_length(v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(((v0.c2) IS FALSE)));
SELECT COUNT(*) FROM v0 WHERE (json_array_length(v0.c1 COLLATE NOCASE)) ORDER BY UNLIKELY(((v0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((json_array_length(v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(((v0.c2) IS FALSE)));
SELECT COUNT(*) FROM v0 WHERE (json_array_length(v0.c1 COLLATE NOCASE)) ORDER BY UNLIKELY(((v0.c2) IS FALSE));
SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c1))) IS FALSE)) ORDER BY ((+ (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c2)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c1))) IS FALSE)) ORDER BY ((+ (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c2)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>>(v0.c1))) IS FALSE)) ORDER BY ((+ (v0.c2)) IN ()) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS REAL))IS NOT(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))IS NOT(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS REAL))IS NOT(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))IS NOT(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS REAL))IS NOT(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)));
SELECT * FROM t0, v0 WHERE (((-6.17864997E8) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((-6.17864997E8) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((-6.17864997E8) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((-6.17864997E8) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((-6.17864997E8) IS TRUE) COLLATE BINARY);
SELECT * FROM v0 INNER JOIN t0 ON (- (LOWER(DISTINCT t0.c0))) WHERE (0.2656506681756329) ORDER BY (((t0.c64 COLLATE RTRIM))>(('-632781081')));
SELECT SUM(count) FROM (SELECT ((0.2656506681756329) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (- (LOWER(DISTINCT t0.c0))) ORDER BY (((t0.c64 COLLATE RTRIM))>(('-632781081'))));
SELECT * FROM v0 INNER JOIN t0 ON (- (LOWER(DISTINCT t0.c0))) WHERE (0.2656506681756329) ORDER BY (((t0.c64 COLLATE RTRIM))>(('-632781081')));
SELECT SUM(count) FROM (SELECT ((0.2656506681756329) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (- (LOWER(DISTINCT t0.c0))) ORDER BY (((t0.c64 COLLATE RTRIM))>(('-632781081'))));
SELECT * FROM v0 INNER JOIN t0 ON (- (LOWER(DISTINCT t0.c0))) WHERE (0.2656506681756329) ORDER BY (((t0.c64 COLLATE RTRIM))>(('-632781081')));
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NOT (v0.c0))) NOTNULL));
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT));
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0 NOT INDEXED, t0 WHERE (CAST(v0.c1 COLLATE NOCASE AS REAL));
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS BLOB));
SELECT ALL * FROM v0 WHERE (((TRIM('y/mj*,'))*(((0xffffffff86de15d5) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('y/mj*,'))*(((0xffffffff86de15d5) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((TRIM('y/mj*,'))*(((0xffffffff86de15d5) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('y/mj*,'))*(((0xffffffff86de15d5) NOT BETWEEN (v0.c2) AND (v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((TRIM('y/mj*,'))*(((0xffffffff86de15d5) NOT BETWEEN (v0.c2) AND (v0.c2))))) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_SOURCE_ID() AS INTEGER)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(SQLITE_SOURCE_ID() AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c1))==((((NULL)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1))=((((NULL)|(v0.c1))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c1))==((((NULL)|(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1))=((((NULL)|(v0.c1))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c1))==((((NULL)|(v0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c64) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c64) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c64) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c64) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c64) NOTNULL) AS INTEGER));
SELECT * FROM t0, v0 WHERE (x'147f') ORDER BY (((t0.c76, t0.c40, t0.c64)) NOT BETWEEN ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), (t0.c64 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))))) AND ((((v0.c1) BETWEEN (t0.c0) AND (v0.c0)), CAST(t0.c76 AS INTEGER), (((t0.c0))<=((t0.c40)))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'147f') IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76, t0.c40, t0.c64)) NOT BETWEEN ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), (t0.c64 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))))) AND ((((v0.c1) BETWEEN (t0.c0) AND (v0.c0)), CAST(t0.c76 AS INTEGER), (((t0.c0))<=((t0.c40)))))) ASC);
SELECT * FROM t0, v0 WHERE (x'147f') ORDER BY (((t0.c76, t0.c40, t0.c64)) NOT BETWEEN ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), (t0.c64 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))))) AND ((((v0.c1) BETWEEN (t0.c0) AND (v0.c0)), CAST(t0.c76 AS INTEGER), (((t0.c0))<=((t0.c40)))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'147f') IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c76, t0.c40, t0.c64)) NOT BETWEEN ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), (t0.c64 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))))) AND ((((v0.c1) BETWEEN (t0.c0) AND (v0.c0)), CAST(t0.c76 AS INTEGER), (((t0.c0))<=((t0.c40)))))) ASC);
SELECT * FROM t0, v0 WHERE (x'147f') ORDER BY (((t0.c76, t0.c40, t0.c64)) NOT BETWEEN ((((((v0.c0)OR(v0.c1)))AND(v0.c2)), (t0.c64 IN ()), (((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))))) AND ((((v0.c1) BETWEEN (t0.c0) AND (v0.c0)), CAST(t0.c76 AS INTEGER), (((t0.c0))<=((t0.c40)))))) ASC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON UPPER(((0.1682330808482102) BETWEEN (t0.c0) AND (t0.c40))) WHERE (CASE WHEN CAST(v0.c1 AS TEXT) THEN ((t0.c40)>=(v0.c1)) END) ORDER BY (((CAST(v0.c0 AS INTEGER)))>((t0.c76 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS TEXT) THEN ((t0.c40)>=(v0.c1)) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON UPPER(((0.1682330808482102) BETWEEN (t0.c0) AND (t0.c40))) ORDER BY (((CAST(v0.c0 AS INTEGER)))>((t0.c76 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON UPPER(((0.1682330808482102) BETWEEN (t0.c0) AND (t0.c40))) WHERE (CASE WHEN CAST(v0.c1 AS TEXT) THEN ((t0.c40)>=(v0.c1)) END) ORDER BY (((CAST(v0.c0 AS INTEGER)))>((t0.c76 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(v0.c1 AS TEXT) THEN ((t0.c40)>=(v0.c1)) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON UPPER(((0.1682330808482102) BETWEEN (t0.c0) AND (t0.c40))) ORDER BY (((CAST(v0.c0 AS INTEGER)))>((t0.c76 COLLATE BINARY)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON UPPER(((0.1682330808482102) BETWEEN (t0.c0) AND (t0.c40))) WHERE (CASE WHEN CAST(v0.c1 AS TEXT) THEN ((t0.c40)>=(v0.c1)) END) ORDER BY (((CAST(v0.c0 AS INTEGER)))>((t0.c76 COLLATE BINARY)))  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)AND(t0.c76)))OR(t0.c0)))AND((((t0.c40))!=((v0.c2)))))) ORDER BY (((v0.c2) BETWEEN (t0.c76) AND (t0.c64)) IN ()), (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c76)))OR(t0.c0)))AND((((t0.c40))!=((v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2) BETWEEN (t0.c76) AND (t0.c64)) IN ()), (~ (NULL)) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)AND(t0.c76)))OR(t0.c0)))AND((((t0.c40))!=((v0.c2)))))) ORDER BY (((v0.c2) BETWEEN (t0.c76) AND (t0.c64)) IN ()), (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c76)))OR(t0.c0)))AND((((t0.c40))!=((v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2) BETWEEN (t0.c76) AND (t0.c64)) IN ()), (~ (NULL)) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((t0.c0)AND(t0.c76)))OR(t0.c0)))AND((((t0.c40))!=((v0.c2)))))) ORDER BY (((v0.c2) BETWEEN (t0.c76) AND (t0.c64)) IN ()), (~ (NULL)) ASC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c64);
SELECT * FROM v0 WHERE ((NOT ((((v0.c2))<=((v0.c0)))))) ORDER BY (((((+ (v0.c0)))AND(((v0.c0) NOTNULL))))OR((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c2))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((((+ (v0.c0)))AND(((v0.c0) NOTNULL))))OR((v0.c1 IN ()))));
SELECT * FROM v0 WHERE ((NOT ((((v0.c2))<=((v0.c0)))))) ORDER BY (((((+ (v0.c0)))AND(((v0.c0) NOTNULL))))OR((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT (((NOT ((((v0.c2))<=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((((+ (v0.c0)))AND(((v0.c0) NOTNULL))))OR((v0.c1 IN ()))));
SELECT * FROM v0 WHERE ((NOT ((((v0.c2))<=((v0.c0)))))) ORDER BY (((((+ (v0.c0)))AND(((v0.c0) NOTNULL))))OR((v0.c1 IN ())));
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((((((t0.c76)==(t0.c64)))AND(v0.c1)))OR(((NULL)%(t0.c0)))))OR(((t0.c40)LIKE(v0.c2)))))OR(((t0.c64) IS FALSE)))) ORDER BY (((((v0.c0)) NOT BETWEEN (('-1419022896')) AND ((v0.c0)))) NOT BETWEEN ('') AND (((t0.c40) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST, CASE WHEN ((v0.c1) BETWEEN (t0.c76) AND (t0.c76)) THEN ((((NULL)OR(t0.c76)))OR(v0.c2)) WHEN (NOT (v0.c1)) THEN ((((t0.c76)OR(t0.c40)))AND(v0.c1)) WHEN (((t0.c64)) NOT BETWEEN ((1.603987063E9)) AND ((v0.c0))) THEN CAST(v0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)=(t0.c64)))AND(v0.c1)))OR(((NULL)%(t0.c0)))))OR(((t0.c40)LIKE(v0.c2)))))OR(((t0.c64) IS FALSE)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((((v0.c0)) NOT BETWEEN (('-1419022896')) AND ((v0.c0)))) NOT BETWEEN ('') AND (((t0.c40) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST, CASE WHEN ((v0.c1) BETWEEN (t0.c76) AND (t0.c76)) THEN ((((NULL)OR(t0.c76)))OR(v0.c2)) WHEN (NOT (v0.c1)) THEN ((((t0.c76)OR(t0.c40)))AND(v0.c1)) WHEN (((t0.c64)) NOT BETWEEN ((1.603987063E9)) AND ((v0.c0))) THEN CAST(v0.c1 AS BLOB) END ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((((((t0.c76)==(t0.c64)))AND(v0.c1)))OR(((NULL)%(t0.c0)))))OR(((t0.c40)LIKE(v0.c2)))))OR(((t0.c64) IS FALSE)))) ORDER BY (((((v0.c0)) NOT BETWEEN (('-1419022896')) AND ((v0.c0)))) NOT BETWEEN ('') AND (((t0.c40) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST, CASE WHEN ((v0.c1) BETWEEN (t0.c76) AND (t0.c76)) THEN ((((NULL)OR(t0.c76)))OR(v0.c2)) WHEN (NOT (v0.c1)) THEN ((((t0.c76)OR(t0.c40)))AND(v0.c1)) WHEN (((t0.c64)) NOT BETWEEN ((1.603987063E9)) AND ((v0.c0))) THEN CAST(v0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c76)=(t0.c64)))AND(v0.c1)))OR(((NULL)%(t0.c0)))))OR(((t0.c40)LIKE(v0.c2)))))OR(((t0.c64) IS FALSE)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((((v0.c0)) NOT BETWEEN (('-1419022896')) AND ((v0.c0)))) NOT BETWEEN ('') AND (((t0.c40) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST, CASE WHEN ((v0.c1) BETWEEN (t0.c76) AND (t0.c76)) THEN ((((NULL)OR(t0.c76)))OR(v0.c2)) WHEN (NOT (v0.c1)) THEN ((((t0.c76)OR(t0.c40)))AND(v0.c1)) WHEN (((t0.c64)) NOT BETWEEN ((1.603987063E9)) AND ((v0.c0))) THEN CAST(v0.c1 AS BLOB) END ASC);
SELECT * FROM t0 NATURAL JOIN v0 WHERE (((((((((((t0.c76)==(t0.c64)))AND(v0.c1)))OR(((NULL)%(t0.c0)))))OR(((t0.c40)LIKE(v0.c2)))))OR(((t0.c64) IS FALSE)))) ORDER BY (((((v0.c0)) NOT BETWEEN (('-1419022896')) AND ((v0.c0)))) NOT BETWEEN ('') AND (((t0.c40) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST, CASE WHEN ((v0.c1) BETWEEN (t0.c76) AND (t0.c76)) THEN ((((NULL)OR(t0.c76)))OR(v0.c2)) WHEN (NOT (v0.c1)) THEN ((((t0.c76)OR(t0.c40)))AND(v0.c1)) WHEN (((t0.c64)) NOT BETWEEN ((1.603987063E9)) AND ((v0.c0))) THEN CAST(v0.c1 AS BLOB) END ASC;
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c64) IS FALSE)))) ORDER BY TYPEOF(CAST(NULL AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c64) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(CAST(NULL AS INTEGER)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c64) IS FALSE)))) ORDER BY TYPEOF(CAST(NULL AS INTEGER)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c64) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(CAST(NULL AS INTEGER)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c64) IS FALSE)))) ORDER BY TYPEOF(CAST(NULL AS INTEGER)) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (UNICODE(((v0.c0)*(v0.c1)))) ORDER BY ((v0.c2) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((v0.c0)*(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) ISNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (UNICODE(((v0.c0)*(v0.c1)))) ORDER BY ((v0.c2) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((v0.c0)*(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) ISNULL) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (UNICODE(((v0.c0)*(v0.c1)))) ORDER BY ((v0.c2) ISNULL) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t0.c40 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t0.c40 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40 IN ())) IS TRUE));
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CASE WHEN t0.c64 THEN v0.c1 WHEN x'' THEN 0.4798971784194015 WHEN v0.c2 THEN '1382693458' WHEN v0.c2 THEN v0.c1 WHEN x'' THEN t0.c76 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN t0.c64 THEN v0.c1 WHEN x'' THEN 0.4798971784194015 WHEN v0.c2 THEN '1382693458' WHEN v0.c2 THEN v0.c1 WHEN x'' THEN t0.c76 END)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CASE WHEN t0.c64 THEN v0.c1 WHEN x'' THEN 0.4798971784194015 WHEN v0.c2 THEN '1382693458' WHEN v0.c2 THEN v0.c1 WHEN x'' THEN t0.c76 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN t0.c64 THEN v0.c1 WHEN x'' THEN 0.4798971784194015 WHEN v0.c2 THEN '1382693458' WHEN v0.c2 THEN v0.c1 WHEN x'' THEN t0.c76 END)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CASE WHEN t0.c64 THEN v0.c1 WHEN x'' THEN 0.4798971784194015 WHEN v0.c2 THEN '1382693458' WHEN v0.c2 THEN v0.c1 WHEN x'' THEN t0.c76 END));
SELECT * FROM v0, t0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY CAST(t0.c0 AS BLOB)  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN NULL THEN t0.c0 ELSE '1215662989' END)) AND ((0.17055238994216249 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c0 AS BLOB)  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN NULL THEN t0.c0 ELSE '1215662989' END)) AND ((0.17055238994216249 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY CAST(t0.c0 AS BLOB)  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN NULL THEN t0.c0 ELSE '1215662989' END)) AND ((0.17055238994216249 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c0 AS BLOB)  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN NULL THEN t0.c0 ELSE '1215662989' END)) AND ((0.17055238994216249 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((+ (((v0.c0) NOTNULL)))) ORDER BY CAST(t0.c0 AS BLOB)  NULLS LAST, (((t0.c0)) NOT BETWEEN ((CASE v0.c2  WHEN NULL THEN t0.c0 ELSE '1215662989' END)) AND ((0.17055238994216249 COLLATE BINARY)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1))>=((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c1))>=((v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1))>=((v0.c0))));
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c1) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT v0.c1) COLLATE RTRIM);
SELECT * FROM v0 WHERE ('') ORDER BY ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST);
SELECT * FROM v0 WHERE ('') ORDER BY ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST);
SELECT * FROM v0 WHERE ('') ORDER BY ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64)/(t0.c76)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)/(t0.c76)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64)/(t0.c76)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)/(t0.c76)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c64)/(t0.c76)) COLLATE NOCASE);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c76 THEN 0.6969425002712165 WHEN NULL THEN t0.c0 WHEN t0.c40 THEN t0.c40 END)||((((t0.c64))<((t0.c40))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c76 THEN 0.6969425002712165 WHEN NULL THEN t0.c0 WHEN t0.c40 THEN t0.c40 END)||((((t0.c64))<((t0.c40)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c76 THEN 0.6969425002712165 WHEN NULL THEN t0.c0 WHEN t0.c40 THEN t0.c40 END)||((((t0.c64))<((t0.c40))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c76 THEN 0.6969425002712165 WHEN NULL THEN t0.c0 WHEN t0.c40 THEN t0.c40 END)||((((t0.c64))<((t0.c40)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c76 THEN 0.6969425002712165 WHEN NULL THEN t0.c0 WHEN t0.c40 THEN t0.c40 END)||((((t0.c64))<((t0.c40))))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (v0.c1 IN ())  WHEN (~ (v0.c0)) THEN x'' WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c2 AS INTEGER) WHEN v0.c0 THEN v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c1 IN ())  WHEN (~ (v0.c0)) THEN x'' WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c2 AS INTEGER) WHEN v0.c0 THEN v0.c2 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (v0.c1 IN ())  WHEN (~ (v0.c0)) THEN x'' WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c2 AS INTEGER) WHEN v0.c0 THEN v0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE (v0.c1 IN ())  WHEN (~ (v0.c0)) THEN x'' WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c2 AS INTEGER) WHEN v0.c0 THEN v0.c2 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE (v0.c1 IN ())  WHEN (~ (v0.c0)) THEN x'' WHEN ((v0.c0) NOTNULL) THEN CAST(v0.c2 AS INTEGER) WHEN v0.c0 THEN v0.c2 END);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c1)OR(v0.c1)))AND(v0.c1)) IN ((v0.c0 IN (v0.c2, v0.c0))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c2 ELSE -7.9243309E8 END) BETWEEN (((v0.c0)|(v0.c1))) AND (GLOB(v0.c1, NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)OR(v0.c1)))AND(v0.c1)) IN ((v0.c0 IN (v0.c2, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c2 THEN v0.c2 ELSE -7.9243309E8 END) BETWEEN (((v0.c0)|(v0.c1))) AND (GLOB(v0.c1, NULL))) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c1)OR(v0.c1)))AND(v0.c1)) IN ((v0.c0 IN (v0.c2, v0.c0))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c2 ELSE -7.9243309E8 END) BETWEEN (((v0.c0)|(v0.c1))) AND (GLOB(v0.c1, NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)OR(v0.c1)))AND(v0.c1)) IN ((v0.c0 IN (v0.c2, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c2 THEN v0.c2 ELSE -7.9243309E8 END) BETWEEN (((v0.c0)|(v0.c1))) AND (GLOB(v0.c1, NULL))) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE ((((((v0.c1)OR(v0.c1)))AND(v0.c1)) IN ((v0.c0 IN (v0.c2, v0.c0))))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c2 ELSE -7.9243309E8 END) BETWEEN (((v0.c0)|(v0.c1))) AND (GLOB(v0.c1, NULL))) DESC;
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((((((((v0.c1)OR('0.06720633318091407')))AND(t0.c40)))OR(NULL)))AND(CAST(t0.c0 AS NUMERIC))))OR((t0.c76 IN ()))))AND(((t0.c0)OR(t0.c0)))) WHERE (((CAST(t0.c40 AS REAL)) BETWEEN (t0.c64 COLLATE RTRIM) AND (((v0.c2) NOTNULL)))) ORDER BY ((((v0.c2) ISNULL)) NOT BETWEEN ((- (t0.c40))) AND ((((t0.c64, '1411606991', v0.c2))<>((v0.c2, v0.c2, v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c40 AS REAL)) BETWEEN (t0.c64 COLLATE RTRIM) AND (((v0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((((((((v0.c1)OR('0.06720633318091407')))AND(t0.c40)))OR(NULL)))AND(CAST(t0.c0 AS NUMERIC))))OR((t0.c76 IN ()))))AND(((t0.c0)OR(t0.c0)))) ORDER BY ((((v0.c2) ISNULL)) NOT BETWEEN ((- (t0.c40))) AND ((((t0.c64, '1411606991', v0.c2))!=((v0.c2, v0.c2, v0.c1))))) DESC);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((((((((v0.c1)OR('0.06720633318091407')))AND(t0.c40)))OR(NULL)))AND(CAST(t0.c0 AS NUMERIC))))OR((t0.c76 IN ()))))AND(((t0.c0)OR(t0.c0)))) WHERE (((CAST(t0.c40 AS REAL)) BETWEEN (t0.c64 COLLATE RTRIM) AND (((v0.c2) NOTNULL)))) ORDER BY ((((v0.c2) ISNULL)) NOT BETWEEN ((- (t0.c40))) AND ((((t0.c64, '1411606991', v0.c2))<>((v0.c2, v0.c2, v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c40 AS REAL)) BETWEEN (t0.c64 COLLATE RTRIM) AND (((v0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((((((((v0.c1)OR('0.06720633318091407')))AND(t0.c40)))OR(NULL)))AND(CAST(t0.c0 AS NUMERIC))))OR((t0.c76 IN ()))))AND(((t0.c0)OR(t0.c0)))) ORDER BY ((((v0.c2) ISNULL)) NOT BETWEEN ((- (t0.c40))) AND ((((t0.c64, '1411606991', v0.c2))!=((v0.c2, v0.c2, v0.c1))))) DESC);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((((((((v0.c1)OR('0.06720633318091407')))AND(t0.c40)))OR(NULL)))AND(CAST(t0.c0 AS NUMERIC))))OR((t0.c76 IN ()))))AND(((t0.c0)OR(t0.c0)))) WHERE (((CAST(t0.c40 AS REAL)) BETWEEN (t0.c64 COLLATE RTRIM) AND (((v0.c2) NOTNULL)))) ORDER BY ((((v0.c2) ISNULL)) NOT BETWEEN ((- (t0.c40))) AND ((((t0.c64, '1411606991', v0.c2))<>((v0.c2, v0.c2, v0.c1))))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c64))=((t0.c64)))))) ORDER BY ((t0.c76 COLLATE NOCASE) NOT BETWEEN (((t0.c76) BETWEEN (t0.c76) AND (t0.c64))) AND (((((t0.c0)AND(x'c5746fc2')))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c64))=((t0.c64)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 COLLATE NOCASE) NOT BETWEEN (((t0.c76) BETWEEN (t0.c76) AND (t0.c64))) AND (((((t0.c0)AND(x'c5746fc2')))OR(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c64))=((t0.c64)))))) ORDER BY ((t0.c76 COLLATE NOCASE) NOT BETWEEN (((t0.c76) BETWEEN (t0.c76) AND (t0.c64))) AND (((((t0.c0)AND(x'c5746fc2')))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c64))=((t0.c64)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 COLLATE NOCASE) NOT BETWEEN (((t0.c76) BETWEEN (t0.c76) AND (t0.c64))) AND (((((t0.c0)AND(x'c5746fc2')))OR(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((- ((((t0.c64))=((t0.c64)))))) ORDER BY ((t0.c76 COLLATE NOCASE) NOT BETWEEN (((t0.c76) BETWEEN (t0.c76) AND (t0.c64))) AND (((((t0.c0)AND(x'c5746fc2')))OR(t0.c0)))) ASC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((((t0.c64)AND(t0.c0)))AND(t0.c64))))<(((((t0.c64, t0.c40, v0.c1))<((t0.c40, 'RoW噉', NULL)))))) WHERE (x'3587') ORDER BY (- (((t0.c76)LIKE(t0.c40))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3587') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((((t0.c64)AND(t0.c0)))AND(t0.c64))))<(((((t0.c64, t0.c40, v0.c1))<((t0.c40, 'RoW噉', NULL)))))) ORDER BY (- (((t0.c76)LIKE(t0.c40))))  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((((t0.c64)AND(t0.c0)))AND(t0.c64))))<(((((t0.c64, t0.c40, v0.c1))<((t0.c40, 'RoW噉', NULL)))))) WHERE (x'3587') ORDER BY (- (((t0.c76)LIKE(t0.c40))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3587') IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((((((t0.c64)AND(t0.c0)))AND(t0.c64))))<(((((t0.c64, t0.c40, v0.c1))<((t0.c40, 'RoW噉', NULL)))))) ORDER BY (- (((t0.c76)LIKE(t0.c40))))  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((((((t0.c64)AND(t0.c0)))AND(t0.c64))))<(((((t0.c64, t0.c40, v0.c1))<((t0.c40, 'RoW噉', NULL)))))) WHERE (x'3587') ORDER BY (- (((t0.c76)LIKE(t0.c40))))  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((~ (TYPEOF(DISTINCT t0.c76))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT t0.c76)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((~ (TYPEOF(DISTINCT t0.c76))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT t0.c76)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((~ (TYPEOF(DISTINCT t0.c76))));
SELECT * FROM t0 WHERE (((((((t0.c0)AND('')))AND(t0.c64))) BETWEEN (((t0.c64)!=(t0.c40))) AND ((NOT (t0.c64))))) ORDER BY ((CAST(-8.7162138E7 AS TEXT))||(((((t0.c40)AND(t0.c76)))AND(t0.c40)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND('')))AND(t0.c64))) BETWEEN (((t0.c64)!=(t0.c40))) AND ((NOT (t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(-8.7162138E7 AS TEXT))||(((((t0.c40)AND(t0.c76)))AND(t0.c40)))) ASC);
SELECT * FROM t0 WHERE (((((((t0.c0)AND('')))AND(t0.c64))) BETWEEN (((t0.c64)!=(t0.c40))) AND ((NOT (t0.c64))))) ORDER BY ((CAST(-8.7162138E7 AS TEXT))||(((((t0.c40)AND(t0.c76)))AND(t0.c40)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND('')))AND(t0.c64))) BETWEEN (((t0.c64)!=(t0.c40))) AND ((NOT (t0.c64))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(-8.7162138E7 AS TEXT))||(((((t0.c40)AND(t0.c76)))AND(t0.c40)))) ASC);
SELECT * FROM t0 WHERE (((((((t0.c0)AND('')))AND(t0.c64))) BETWEEN (((t0.c64)!=(t0.c40))) AND ((NOT (t0.c64))))) ORDER BY ((CAST(-8.7162138E7 AS TEXT))||(((((t0.c40)AND(t0.c76)))AND(t0.c40)))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (((t0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOTNULL))<>((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))<>((~ (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOTNULL))<>((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))<>((~ (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOTNULL))<>((~ (t0.c0)))));
SELECT ALL * FROM t0, v0 WHERE (CAST(((t0.c76)>>(t0.c76)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76)>>(t0.c76)) AS BLOB)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(((t0.c76)>>(t0.c76)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c76)>>(t0.c76)) AS BLOB)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(((t0.c76)>>(t0.c76)) AS BLOB));
SELECT COUNT(*) FROM t0, v0 WHERE (CHAR(CAST(v0.c1 AS REAL))) ORDER BY (NOT (((t0.c0) NOT NULL)))  NULLS LAST, ((UNLIKELY(t0.c40))>(LIKELY(DISTINCT v0.c2))), ((CASE t0.c40  WHEN t0.c40 THEN v0.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CHAR(CAST(v0.c1 AS REAL))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((t0.c0) NOT NULL)))  NULLS LAST, ((UNLIKELY(t0.c40))>(LIKELY(DISTINCT v0.c2))), ((CASE t0.c40  WHEN t0.c40 THEN v0.c1 END) IS FALSE));
SELECT COUNT(*) FROM t0, v0 WHERE (CHAR(CAST(v0.c1 AS REAL))) ORDER BY (NOT (((t0.c0) NOT NULL)))  NULLS LAST, ((UNLIKELY(t0.c40))>(LIKELY(DISTINCT v0.c2))), ((CASE t0.c40  WHEN t0.c40 THEN v0.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CHAR(CAST(v0.c1 AS REAL))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((t0.c0) NOT NULL)))  NULLS LAST, ((UNLIKELY(t0.c40))>(LIKELY(DISTINCT v0.c2))), ((CASE t0.c40  WHEN t0.c40 THEN v0.c1 END) IS FALSE));
SELECT COUNT(*) FROM t0, v0 WHERE (CHAR(CAST(v0.c1 AS REAL))) ORDER BY (NOT (((t0.c0) NOT NULL)))  NULLS LAST, ((UNLIKELY(t0.c40))>(LIKELY(DISTINCT v0.c2))), ((CASE t0.c40  WHEN t0.c40 THEN v0.c1 END) IS FALSE);
SELECT ALL * FROM t0 WHERE (LIKELY(DISTINCT TRIM(t0.c40, '?uct')));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT TRIM(t0.c40, '?uct'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELY(DISTINCT TRIM(t0.c40, '?uct')));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT TRIM(t0.c40, '?uct'))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (LIKELY(DISTINCT TRIM(t0.c40, '?uct')));
SELECT COUNT(*) FROM v0 WHERE (((SUBSTR('', v0.c2))IS(json_patch(v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((SUBSTR('', v0.c2))IS(json_patch(v0.c2, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((SUBSTR('', v0.c2))IS(json_patch(v0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((SUBSTR('', v0.c2))IS(json_patch(v0.c2, v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((SUBSTR('', v0.c2))IS(json_patch(v0.c2, v0.c1))));
SELECT ALL * FROM t0 WHERE (HEX((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((- (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((- (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (HEX((- (t0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0) ORDER BY '-338604907' ASC, ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY '-338604907' ASC, ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0) ORDER BY '-338604907' ASC, ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY '-338604907' ASC, ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0) ORDER BY '-338604907' ASC, ((CAST(v0.c1 AS TEXT)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN ((t0.c0)GLOB(v0.c1)) ELSE CASE t0.c40  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t0.c76 WHEN t0.c64 THEN t0.c0 WHEN v0.c2 THEN t0.c64 END END) ORDER BY (((t0.c0 IN (t0.c76)))IS NOT(((t0.c64) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t0.c0)GLOB(v0.c1)) ELSE CASE t0.c40  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t0.c76 WHEN t0.c64 THEN t0.c0 WHEN v0.c2 THEN t0.c64 END END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((t0.c0 IN (t0.c76)))IS NOT(((t0.c64) IS TRUE))));
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN ((t0.c0)GLOB(v0.c1)) ELSE CASE t0.c40  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t0.c76 WHEN t0.c64 THEN t0.c0 WHEN v0.c2 THEN t0.c64 END END) ORDER BY (((t0.c0 IN (t0.c76)))IS NOT(((t0.c64) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((t0.c0)GLOB(v0.c1)) ELSE CASE t0.c40  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t0.c76 WHEN t0.c64 THEN t0.c0 WHEN v0.c2 THEN t0.c64 END END) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (((t0.c0 IN (t0.c76)))IS NOT(((t0.c64) IS TRUE))));
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN NULL THEN ((t0.c0)GLOB(v0.c1)) ELSE CASE t0.c40  WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN t0.c76 WHEN t0.c64 THEN t0.c0 WHEN v0.c2 THEN t0.c64 END END) ORDER BY (((t0.c0 IN (t0.c76)))IS NOT(((t0.c64) IS TRUE)));
SELECT COUNT(*) FROM t0 WHERE ('354846055' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('354846055' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('354846055' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('354846055' COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('354846055' COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c76)%(t0.c76)))OR((- (t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)%(t0.c76)))OR((- (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c76)%(t0.c76)))OR((- (t0.c76)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c76)%(t0.c76)))OR((- (t0.c76))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c76)%(t0.c76)))OR((- (t0.c76)))));
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2) NOT BETWEEN (v0.c2) AND (t0.c0)) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c0, 0.14909864186435173, v0.c0))) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c0, 0.14909864186435173, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY '');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c0, 0.14909864186435173, v0.c0))) COLLATE RTRIM) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c0, 0.14909864186435173, v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY '');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((v0.c1, v0.c1, v0.c1)) AND ((v0.c0, 0.14909864186435173, v0.c0))) COLLATE RTRIM) ORDER BY '';
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)) BETWEEN ((NULL)) AND ((t0.c64))), ((v0.c2)-(t0.c40)), load_extension(t0.c0, v0.c0)))<((t0.c76 COLLATE BINARY, ((v0.c1) ISNULL), ((((t0.c76)AND(v0.c1)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c40)) BETWEEN ((NULL)) AND ((t0.c64))), ((v0.c2)-(t0.c40)), load_extension(t0.c0, v0.c0)))<((t0.c76 COLLATE BINARY, ((v0.c1) ISNULL), ((((t0.c76)AND(v0.c1)))OR(NULL)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)) BETWEEN ((NULL)) AND ((t0.c64))), ((v0.c2)-(t0.c40)), load_extension(t0.c0, v0.c0)))<((t0.c76 COLLATE BINARY, ((v0.c1) ISNULL), ((((t0.c76)AND(v0.c1)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c40)) BETWEEN ((NULL)) AND ((t0.c64))), ((v0.c2)-(t0.c40)), load_extension(t0.c0, v0.c0)))<((t0.c76 COLLATE BINARY, ((v0.c1) ISNULL), ((((t0.c76)AND(v0.c1)))OR(NULL)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c40)) BETWEEN ((NULL)) AND ((t0.c64))), ((v0.c2)-(t0.c40)), load_extension(t0.c0, v0.c0)))<((t0.c76 COLLATE BINARY, ((v0.c1) ISNULL), ((((t0.c76)AND(v0.c1)))OR(NULL))))));
SELECT * FROM t0 WHERE (((t0.c64 COLLATE NOCASE)-((+ (t0.c64)))));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE NOCASE)-((+ (t0.c64))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c64 COLLATE NOCASE)-((+ (t0.c64)))));
SELECT SUM(count) FROM (SELECT ((((t0.c64 COLLATE NOCASE)-((+ (t0.c64))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c64 COLLATE NOCASE)-((+ (t0.c64)))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))|(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))|(v0.c1))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))|(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))|(v0.c1))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))|(v0.c1)));
SELECT * FROM v0 WHERE ((~ (((v0.c1)IS NOT(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((v0.c1)IS NOT(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c1)IS NOT(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((~ (((v0.c1)IS NOT(v0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((~ (t0.c76))))<=((IFNULL(v0.c0, t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c76))))<=((IFNULL(v0.c0, t0.c40))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((~ (t0.c76))))<=((IFNULL(v0.c0, t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c76))))<=((IFNULL(v0.c0, t0.c40))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((~ (t0.c76))))<=((IFNULL(v0.c0, t0.c40)))));
SELECT ALL * FROM t0 INDEXED BY i23, v0 WHERE ((((v0.c2))=((v0.c2))) COLLATE BINARY) ORDER BY (((v0.c0))>=((t0.c40))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2))=((v0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i23, v0 ORDER BY (((v0.c0))>=((t0.c40))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i23, v0 WHERE ((((v0.c2))=((v0.c2))) COLLATE BINARY) ORDER BY (((v0.c0))>=((t0.c40))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2))=((v0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0 INDEXED BY i23, v0 ORDER BY (((v0.c0))>=((t0.c40))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM t0 INDEXED BY i23, v0 WHERE ((((v0.c2))=((v0.c2))) COLLATE BINARY) ORDER BY (((v0.c0))>=((t0.c40))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0Xfffffffffbc6cc68);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffbc6cc68) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0Xfffffffffbc6cc68);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffbc6cc68) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (0Xfffffffffbc6cc68);
SELECT ALL * FROM t0 WHERE (((((t0.c64) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c0) BETWEEN (t0.c64) AND (t0.c0)))/(((((0Xfffffffffd0cb445)AND(t0.c64)))OR(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c64) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c64) AND (t0.c0)))/(((((0xfffffffffd0cb445)AND(t0.c64)))OR(x'')))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c64) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c0) BETWEEN (t0.c64) AND (t0.c0)))/(((((0Xfffffffffd0cb445)AND(t0.c64)))OR(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c64) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c64) AND (t0.c0)))/(((((0xfffffffffd0cb445)AND(t0.c64)))OR(x'')))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c64) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c0) BETWEEN (t0.c64) AND (t0.c0)))/(((((0Xfffffffffd0cb445)AND(t0.c64)))OR(x'')))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76))!=((t0.c64))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c76))<>((t0.c64))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76))!=((t0.c64))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c76))<>((t0.c64))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c76))!=((t0.c64))) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE ((((CASE v0.c1  WHEN v0.c2 THEN '-1873379478' WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c0)<(v0.c2)), v0.c0))>=((v0.c1 COLLATE NOCASE, CASE WHEN v0.c0 THEN '832890173' END, ((v0.c2)!=(v0.c2)))))) ORDER BY CASE 0x7311f35c  WHEN ((v0.c0) ISNULL) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND (('0.012945965099699475'))) ELSE v0.c2 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c1  WHEN v0.c2 THEN '-1873379478' WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c0)<(v0.c2)), v0.c0))>=((v0.c1 COLLATE NOCASE, CASE WHEN v0.c0 THEN '832890173' END, ((v0.c2)<>(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY CASE 0x7311f35c  WHEN ((v0.c0) ISNULL) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND (('0.012945965099699475'))) ELSE v0.c2 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((CASE v0.c1  WHEN v0.c2 THEN '-1873379478' WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c0)<(v0.c2)), v0.c0))>=((v0.c1 COLLATE NOCASE, CASE WHEN v0.c0 THEN '832890173' END, ((v0.c2)!=(v0.c2)))))) ORDER BY CASE 0x7311f35c  WHEN ((v0.c0) ISNULL) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND (('0.012945965099699475'))) ELSE v0.c2 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE v0.c1  WHEN v0.c2 THEN '-1873379478' WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c0)<(v0.c2)), v0.c0))>=((v0.c1 COLLATE NOCASE, CASE WHEN v0.c0 THEN '832890173' END, ((v0.c2)<>(v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY CASE 0x7311f35c  WHEN ((v0.c0) ISNULL) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND (('0.012945965099699475'))) ELSE v0.c2 COLLATE BINARY END ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((CASE v0.c1  WHEN v0.c2 THEN '-1873379478' WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c0)<(v0.c2)), v0.c0))>=((v0.c1 COLLATE NOCASE, CASE WHEN v0.c0 THEN '832890173' END, ((v0.c2)!=(v0.c2)))))) ORDER BY CASE 0x7311f35c  WHEN ((v0.c0) ISNULL) THEN (((v0.c2)) BETWEEN ((v0.c2)) AND (('0.012945965099699475'))) ELSE v0.c2 COLLATE BINARY END ASC  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((NULL)|(((((t0.c0)OR(t0.c76)))AND(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(((((t0.c0)OR(t0.c76)))AND(t0.c64))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((NULL)|(((((t0.c0)OR(t0.c76)))AND(t0.c64)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(((((t0.c0)OR(t0.c76)))AND(t0.c64))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((NULL)|(((((t0.c0)OR(t0.c76)))AND(t0.c64)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c40 COLLATE NOCASE) ISNULL) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c40 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c40 COLLATE NOCASE) ISNULL) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c40 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ((t0.c40 COLLATE NOCASE) ISNULL) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c40) BETWEEN (t0.c40) AND (t0.c0)) THEN ((t0.c76)>(t0.c40)) ELSE JULIANDAY(t0.c76, t0.c40, t0.c64) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c40) BETWEEN (t0.c40) AND (t0.c0)) THEN ((t0.c76)>(t0.c40)) ELSE JULIANDAY(t0.c76, t0.c40, t0.c64) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c40) BETWEEN (t0.c40) AND (t0.c0)) THEN ((t0.c76)>(t0.c40)) ELSE JULIANDAY(t0.c76, t0.c40, t0.c64) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c40) BETWEEN (t0.c40) AND (t0.c0)) THEN ((t0.c76)>(t0.c40)) ELSE JULIANDAY(t0.c76, t0.c40, t0.c64) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c40) BETWEEN (t0.c40) AND (t0.c0)) THEN ((t0.c76)>(t0.c40)) ELSE JULIANDAY(t0.c76, t0.c40, t0.c64) END);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)!=(t0.c76)) IN (((t0.c76) NOT BETWEEN (t0.c40) AND (NULL)), CAST(t0.c40 AS INTEGER)))) ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)<>(t0.c76)) IN (((t0.c76) NOT BETWEEN (t0.c40) AND (NULL)), CAST(t0.c40 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)!=(t0.c76)) IN (((t0.c76) NOT BETWEEN (t0.c40) AND (NULL)), CAST(t0.c40 AS INTEGER)))) ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c40)<>(t0.c76)) IN (((t0.c76) NOT BETWEEN (t0.c40) AND (NULL)), CAST(t0.c40 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40)!=(t0.c76)) IN (((t0.c76) NOT BETWEEN (t0.c40) AND (NULL)), CAST(t0.c40 AS INTEGER)))) ORDER BY (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST('-1361624239' AS TEXT))AND((t0.c64 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1361624239' AS TEXT))AND((t0.c64 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST('-1361624239' AS TEXT))AND((t0.c64 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1361624239' AS TEXT))AND((t0.c64 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST('-1361624239' AS TEXT))AND((t0.c64 IN ()))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((NULL)<(((((t0.c64)OR(t0.c40)))OR(v0.c0)))) WHERE (((load_extension(v0.c1, t0.c0))%(((v0.c1)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c1, t0.c0))%(((v0.c1)IS NOT(v0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((NULL)<(((((t0.c64)OR(t0.c40)))OR(v0.c0)))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((NULL)<(((((t0.c64)OR(t0.c40)))OR(v0.c0)))) WHERE (((load_extension(v0.c1, t0.c0))%(((v0.c1)IS NOT(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(v0.c1, t0.c0))%(((v0.c1)IS NOT(v0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((NULL)<(((((t0.c64)OR(t0.c40)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN (NOT (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 COLLATE RTRIM THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN (NOT (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 COLLATE RTRIM THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c2 COLLATE RTRIM THEN (NOT (v0.c2)) END);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))|(CAST(v0.c1 AS TEXT)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ('seMpfg' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))|(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (NULL) AND ('seMpfg' COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))|(CAST(v0.c1 AS TEXT)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ('seMpfg' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))|(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY ((NULL) NOT BETWEEN (NULL) AND ('seMpfg' COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))|(CAST(v0.c1 AS TEXT)))) ORDER BY ((NULL) NOT BETWEEN (NULL) AND ('seMpfg' COLLATE NOCASE));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (v0.c2)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 NOT INDEXED RIGHT OUTER JOIN t0 ON (~ (v0.c2)));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (v0.c2)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 NOT INDEXED RIGHT OUTER JOIN t0 ON (~ (v0.c2)));
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON (~ (v0.c2)) WHERE (NULL);
SELECT * FROM v0, t0 WHERE (((LIKELY(v0.c2)) IS TRUE)) ORDER BY (~ (((v0.c0)GLOB(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c2)) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY (~ (((v0.c0)GLOB(v0.c1)))));
SELECT * FROM v0, t0 WHERE (((LIKELY(v0.c2)) IS TRUE)) ORDER BY (~ (((v0.c0)GLOB(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(v0.c2)) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY (~ (((v0.c0)GLOB(v0.c1)))));
SELECT * FROM v0, t0 WHERE (((LIKELY(v0.c2)) IS TRUE)) ORDER BY (~ (((v0.c0)GLOB(v0.c1))));
SELECT * FROM v0 WHERE (((((v0.c2)==(v0.c0))) NOT BETWEEN (NULL) AND (((v0.c2)<(v0.c1))))) ORDER BY CASE v0.c2  WHEN v0.c2 THEN x'' ELSE NULL END COLLATE RTRIM, (((((v0.c1)OR(NULL))))>((v0.c0))), (((v0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)=(v0.c0))) NOT BETWEEN (NULL) AND (((v0.c2)<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN v0.c2 THEN x'' ELSE NULL END COLLATE RTRIM, (((((v0.c1)OR(NULL))))>((v0.c0))), (((v0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c2)==(v0.c0))) NOT BETWEEN (NULL) AND (((v0.c2)<(v0.c1))))) ORDER BY CASE v0.c2  WHEN v0.c2 THEN x'' ELSE NULL END COLLATE RTRIM, (((((v0.c1)OR(NULL))))>((v0.c0))), (((v0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2)=(v0.c0))) NOT BETWEEN (NULL) AND (((v0.c2)<(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c2  WHEN v0.c2 THEN x'' ELSE NULL END COLLATE RTRIM, (((((v0.c1)OR(NULL))))>((v0.c0))), (((v0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c2)==(v0.c0))) NOT BETWEEN (NULL) AND (((v0.c2)<(v0.c1))))) ORDER BY CASE v0.c2  WHEN v0.c2 THEN x'' ELSE NULL END COLLATE RTRIM, (((((v0.c1)OR(NULL))))>((v0.c0))), (((v0.c1)) BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c76);
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY CASE ((t0.c64) NOTNULL)  WHEN t0.c40 THEN (~ (t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((t0.c64) NOTNULL)  WHEN t0.c40 THEN (~ (t0.c40)) END  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY CASE ((t0.c64) NOTNULL)  WHEN t0.c40 THEN (~ (t0.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((t0.c64) NOTNULL)  WHEN t0.c40 THEN (~ (t0.c40)) END  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY CASE ((t0.c64) NOTNULL)  WHEN t0.c40 THEN (~ (t0.c40)) END  NULLS LAST;
SELECT * FROM v0, t0 WHERE (t0.c64) ORDER BY (((v0.c2, (t0.c40 IN ()), ((((((((t0.c76)OR(t0.c40)))AND(t0.c0)))AND(t0.c64)))OR(t0.c76))))<=((json_quote(v0.c1), ((((t0.c40)OR(t0.c40)))AND(v0.c0)), ((v0.c1)+(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2, (t0.c40 IN ()), ((((((((t0.c76)OR(t0.c40)))AND(t0.c0)))AND(t0.c64)))OR(t0.c76))))<=((json_quote(v0.c1), ((((t0.c40)OR(t0.c40)))AND(v0.c0)), ((v0.c1)+(v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE (t0.c64) ORDER BY (((v0.c2, (t0.c40 IN ()), ((((((((t0.c76)OR(t0.c40)))AND(t0.c0)))AND(t0.c64)))OR(t0.c76))))<=((json_quote(v0.c1), ((((t0.c40)OR(t0.c40)))AND(v0.c0)), ((v0.c1)+(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c64) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2, (t0.c40 IN ()), ((((((((t0.c76)OR(t0.c40)))AND(t0.c0)))AND(t0.c64)))OR(t0.c76))))<=((json_quote(v0.c1), ((((t0.c40)OR(t0.c40)))AND(v0.c0)), ((v0.c1)+(v0.c0))))) DESC);
SELECT * FROM v0, t0 WHERE (t0.c64) ORDER BY (((v0.c2, (t0.c40 IN ()), ((((((((t0.c76)OR(t0.c40)))AND(t0.c0)))AND(t0.c64)))OR(t0.c76))))<=((json_quote(v0.c1), ((((t0.c40)OR(t0.c40)))AND(v0.c0)), ((v0.c1)+(v0.c0))))) DESC;
SELECT * FROM t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR((t0.c40 IN ()))))OR((~ (v0.c0))))) ORDER BY ((((v0.c0) NOTNULL))<(((((t0.c0)AND(t0.c40)))OR(x''))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR((t0.c40 IN ()))))OR((~ (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOTNULL))<(((((t0.c0)AND(t0.c40)))OR(x'')))));
SELECT * FROM t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR((t0.c40 IN ()))))OR((~ (v0.c0))))) ORDER BY ((((v0.c0) NOTNULL))<(((((t0.c0)AND(t0.c40)))OR(x''))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR((t0.c40 IN ()))))OR((~ (v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOTNULL))<(((((t0.c0)AND(t0.c40)))OR(x'')))));
SELECT * FROM t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)OR((t0.c40 IN ()))))OR((~ (v0.c0))))) ORDER BY ((((v0.c0) NOTNULL))<(((((t0.c0)AND(t0.c40)))OR(x''))));
SELECT ALL * FROM v0 WHERE ('MZoL') ORDER BY ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))<=(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('MZoL') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))<=(x'' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('MZoL') ORDER BY ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))<=(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('MZoL') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))<=(x'' COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('MZoL') ORDER BY ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))<=(x'' COLLATE BINARY)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) AS BLOB));
SELECT * FROM v0, t0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((t0.c40) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c40);
SELECT SUM(count) FROM (SELECT ALL ((t0.c40) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c40);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c76)IS NOT(t0.c0))))) ORDER BY (((+ (t0.c64))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c76)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c64))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c76)IS NOT(t0.c0))))) ORDER BY (((+ (t0.c64))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c76)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((+ (t0.c64))) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c76)IS NOT(t0.c0))))) ORDER BY (((+ (t0.c64))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 LEFT OUTER JOIN v0 ON ((((((((v0.c1)OR(TYPEOF(t0.c40))))OR(v0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c76))))AND((v0.c1 IN (v0.c1)))) WHERE (CASE WHEN (((t0.c76)) NOT BETWEEN ((0xfffffffff0a882d4)) AND ((v0.c2))) THEN t0.c64 COLLATE BINARY WHEN (~ (v0.c0)) THEN t0.c64 WHEN CASE WHEN t0.c0 THEN v0.c2 ELSE t0.c76 END THEN x'' COLLATE NOCASE END) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c76)) NOT BETWEEN ((0Xfffffffff0a882d4)) AND ((v0.c2))) THEN t0.c64 COLLATE BINARY WHEN (~ (v0.c0)) THEN t0.c64 WHEN CASE WHEN t0.c0 THEN v0.c2 ELSE t0.c76 END THEN x'' COLLATE NOCASE END) IS TRUE)  as count FROM t0 INDEXED BY i73 LEFT OUTER JOIN v0 ON ((((((((v0.c1)OR(TYPEOF(t0.c40))))OR(v0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c76))))AND((v0.c1 IN (v0.c1)))) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 LEFT OUTER JOIN v0 ON ((((((((v0.c1)OR(TYPEOF(t0.c40))))OR(v0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c76))))AND((v0.c1 IN (v0.c1)))) WHERE (CASE WHEN (((t0.c76)) NOT BETWEEN ((0xfffffffff0a882d4)) AND ((v0.c2))) THEN t0.c64 COLLATE BINARY WHEN (~ (v0.c0)) THEN t0.c64 WHEN CASE WHEN t0.c0 THEN v0.c2 ELSE t0.c76 END THEN x'' COLLATE NOCASE END) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c76)) NOT BETWEEN ((0Xfffffffff0a882d4)) AND ((v0.c2))) THEN t0.c64 COLLATE BINARY WHEN (~ (v0.c0)) THEN t0.c64 WHEN CASE WHEN t0.c0 THEN v0.c2 ELSE t0.c76 END THEN x'' COLLATE NOCASE END) IS TRUE)  as count FROM t0 INDEXED BY i73 LEFT OUTER JOIN v0 ON ((((((((v0.c1)OR(TYPEOF(t0.c40))))OR(v0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c76))))AND((v0.c1 IN (v0.c1)))) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 LEFT OUTER JOIN v0 ON ((((((((v0.c1)OR(TYPEOF(t0.c40))))OR(v0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c76))))AND((v0.c1 IN (v0.c1)))) WHERE (CASE WHEN (((t0.c76)) NOT BETWEEN ((0xfffffffff0a882d4)) AND ((v0.c2))) THEN t0.c64 COLLATE BINARY WHEN (~ (v0.c0)) THEN t0.c64 WHEN CASE WHEN t0.c0 THEN v0.c2 ELSE t0.c76 END THEN x'' COLLATE NOCASE END) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((t0.c0)OR(t0.c0)))AND(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c0)OR(t0.c0)))AND(t0.c76)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((t0.c0)OR(t0.c0)))AND(t0.c76))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c0)OR(t0.c0)))AND(t0.c76)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(((((t0.c0)OR(t0.c0)))AND(t0.c76))));
SELECT COUNT(*) FROM v0, t0 WHERE (HEX(((t0.c0)GLOB(v0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0)GLOB(v0.c1)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (HEX(((t0.c0)GLOB(v0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((t0.c0)GLOB(v0.c1)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (HEX(((t0.c0)GLOB(v0.c1))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (v0.c1 COLLATE NOCASE IN (TRIM(v0.c1, v0.c1), ((v0.c0)>=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 COLLATE NOCASE IN (TRIM(v0.c1, v0.c1), ((v0.c0)>=(v0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (v0.c1 COLLATE NOCASE IN (TRIM(v0.c1, v0.c1), ((v0.c0)>=(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (v0.c1 COLLATE NOCASE IN (TRIM(v0.c1, v0.c1), ((v0.c0)>=(v0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) NOTNULL)) ORDER BY (v0.c1 COLLATE NOCASE IN (TRIM(v0.c1, v0.c1), ((v0.c0)>=(v0.c1))));
SELECT ALL * FROM t0, v0 WHERE (('' IN ())) ORDER BY ((((v0.c1)<<(NULL))) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c76 THEN t0.c40 WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END) AND (((t0.c40)!=(t0.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c1)<<(NULL))) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c76 THEN t0.c40 WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END) AND (((t0.c40)<>(t0.c40)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (('' IN ())) ORDER BY ((((v0.c1)<<(NULL))) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c76 THEN t0.c40 WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END) AND (((t0.c40)!=(t0.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c1)<<(NULL))) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c76 THEN t0.c40 WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END) AND (((t0.c40)<>(t0.c40)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (('' IN ())) ORDER BY ((((v0.c1)<<(NULL))) NOT BETWEEN (CASE v0.c2  WHEN v0.c0 THEN v0.c0 WHEN t0.c76 THEN t0.c40 WHEN t0.c76 THEN t0.c76 ELSE t0.c76 END) AND (((t0.c40)!=(t0.c40)))) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST(0.7131437431386246 AS REAL)) ORDER BY '_c' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.7131437431386246 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY '_c' ASC);
SELECT ALL * FROM v0 WHERE (CAST(0.7131437431386246 AS REAL)) ORDER BY '_c' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(0.7131437431386246 AS REAL)) IS TRUE)  as count FROM v0 ORDER BY '_c' ASC);
SELECT ALL * FROM v0 WHERE (CAST(0.7131437431386246 AS REAL)) ORDER BY '_c' ASC;
SELECT * FROM t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CAST(((v0.c0) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c0)<<(t0.c76))  WHEN (t0.c76 IN ()) THEN (((v0.c2))>=((t0.c64))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<<(t0.c76))  WHEN (t0.c76 IN ()) THEN (((v0.c2))>=((t0.c64))) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c0)<<(t0.c76))  WHEN (t0.c76 IN ()) THEN (((v0.c2))>=((t0.c64))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)<<(t0.c76))  WHEN (t0.c76 IN ()) THEN (((v0.c2))>=((t0.c64))) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c0)<<(t0.c76))  WHEN (t0.c76 IN ()) THEN (((v0.c2))>=((t0.c64))) END);
SELECT * FROM t0, v0 WHERE (v0.c0) ORDER BY IFNULL(DISTINCT t0.c0, 0Xffffffffc127ed88) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY IFNULL(DISTINCT t0.c0, 0Xffffffffc127ed88) ASC);
SELECT * FROM t0, v0 WHERE (v0.c0) ORDER BY IFNULL(DISTINCT t0.c0, 0Xffffffffc127ed88) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY IFNULL(DISTINCT t0.c0, 0Xffffffffc127ed88) ASC);
SELECT * FROM t0, v0 WHERE (v0.c0) ORDER BY IFNULL(DISTINCT t0.c0, 0Xffffffffc127ed88) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '-1443497272' THEN t0.c64 COLLATE NOCASE WHEN t0.c40 THEN (((t0.c0))>((t0.c40))) WHEN ((t0.c76)=(0.3816536729567739)) THEN CASE WHEN t0.c64 THEN -1349969475 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1443497272' THEN t0.c64 COLLATE NOCASE WHEN t0.c40 THEN (((t0.c0))>((t0.c40))) WHEN ((t0.c76)=(0.3816536729567739)) THEN CASE WHEN t0.c64 THEN -1349969475 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '-1443497272' THEN t0.c64 COLLATE NOCASE WHEN t0.c40 THEN (((t0.c0))>((t0.c40))) WHEN ((t0.c76)=(0.3816536729567739)) THEN CASE WHEN t0.c64 THEN -1349969475 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1443497272' THEN t0.c64 COLLATE NOCASE WHEN t0.c40 THEN (((t0.c0))>((t0.c40))) WHEN ((t0.c76)=(0.3816536729567739)) THEN CASE WHEN t0.c64 THEN -1349969475 END END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN '-1443497272' THEN t0.c64 COLLATE NOCASE WHEN t0.c40 THEN (((t0.c0))>((t0.c40))) WHEN ((t0.c76)=(0.3816536729567739)) THEN CASE WHEN t0.c64 THEN -1349969475 END END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((v0.c1)&(v0.c1))) NOT NULL) WHERE (json_type(0.3229234889075725)) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (TYPEOF(t0.c40)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(0.3229234889075725)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((v0.c1)&(v0.c1))) NOT NULL) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (TYPEOF(t0.c40))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((v0.c1)&(v0.c1))) NOT NULL) WHERE (json_type(0.3229234889075725)) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (TYPEOF(t0.c40)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(0.3229234889075725)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((v0.c1)&(v0.c1))) NOT NULL) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (TYPEOF(t0.c40))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((((v0.c1)&(v0.c1))) NOT NULL) WHERE (json_type(0.3229234889075725)) ORDER BY ((((v0.c0) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND (TYPEOF(t0.c40)));
SELECT * FROM t0 WHERE ((((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c0))))IS(((((t0.c76)AND(t0.c0)))OR(t0.c76)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c0))))IS(((((t0.c76)AND(t0.c0)))OR(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c0))))IS(((((t0.c76)AND(t0.c0)))OR(t0.c76)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c0))))IS(((((t0.c76)AND(t0.c0)))OR(t0.c76))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c76)) NOT BETWEEN ((t0.c76)) AND ((t0.c0))))IS(((((t0.c76)AND(t0.c0)))OR(t0.c76)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((v0.c1) NOT BETWEEN (t0.c40) AND (t0.c64)))<=((~ (v0.c0)))) WHERE (CAST((v0.c0 IN (t0.c64)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (t0.c64)) AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((v0.c1) NOT BETWEEN (t0.c40) AND (t0.c64)))<=((~ (v0.c0)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((v0.c1) NOT BETWEEN (t0.c40) AND (t0.c64)))<=((~ (v0.c0)))) WHERE (CAST((v0.c0 IN (t0.c64)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN (t0.c64)) AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((v0.c1) NOT BETWEEN (t0.c40) AND (t0.c64)))<=((~ (v0.c0)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((v0.c1) NOT BETWEEN (t0.c40) AND (t0.c64)))<=((~ (v0.c0)))) WHERE (CAST((v0.c0 IN (t0.c64)) AS REAL));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) BETWEEN (v0.c2) AND (v0.c2))  WHEN ((v0.c2) BETWEEN (v0.c1) AND ('')) THEN '1213928127' WHEN ('J' IN (v0.c0)) THEN x'' WHEN 0X39d328b6 THEN UPPER(DISTINCT v0.c0) WHEN ((v0.c1) NOTNULL) THEN (~ (v0.c0)) WHEN v0.c1 THEN 0.6780296027440165 ELSE CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) BETWEEN (v0.c2) AND (v0.c2))  WHEN ((v0.c2) BETWEEN (v0.c1) AND ('')) THEN '1213928127' WHEN ('J' IN (v0.c0)) THEN x'' WHEN 0X39d328b6 THEN UPPER(DISTINCT v0.c0) WHEN ((v0.c1) NOTNULL) THEN (~ (v0.c0)) WHEN v0.c1 THEN 0.6780296027440165 ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) BETWEEN (v0.c2) AND (v0.c2))  WHEN ((v0.c2) BETWEEN (v0.c1) AND ('')) THEN '1213928127' WHEN ('J' IN (v0.c0)) THEN x'' WHEN 0X39d328b6 THEN UPPER(DISTINCT v0.c0) WHEN ((v0.c1) NOTNULL) THEN (~ (v0.c0)) WHEN v0.c1 THEN 0.6780296027440165 ELSE CAST(v0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c1) BETWEEN (v0.c2) AND (v0.c2))  WHEN ((v0.c2) BETWEEN (v0.c1) AND ('')) THEN '1213928127' WHEN ('J' IN (v0.c0)) THEN x'' WHEN 0X39d328b6 THEN UPPER(DISTINCT v0.c0) WHEN ((v0.c1) NOTNULL) THEN (~ (v0.c0)) WHEN v0.c1 THEN 0.6780296027440165 ELSE CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c1) BETWEEN (v0.c2) AND (v0.c2))  WHEN ((v0.c2) BETWEEN (v0.c1) AND ('')) THEN '1213928127' WHEN ('J' IN (v0.c0)) THEN x'' WHEN 0X39d328b6 THEN UPPER(DISTINCT v0.c0) WHEN ((v0.c1) NOTNULL) THEN (~ (v0.c0)) WHEN v0.c1 THEN 0.6780296027440165 ELSE CAST(v0.c0 AS TEXT) END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((t0.c64)<<(v0.c0)) WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))) THEN ((t0.c64) NOTNULL) WHEN (t0.c64 IN ()) THEN ((t0.c40)<(t0.c0)) END WHERE (LOWER(DISTINCT (v0.c0 IN (t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (v0.c0 IN (t0.c0, t0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((t0.c64)<<(v0.c0)) WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))) THEN ((t0.c64) NOTNULL) WHEN (t0.c64 IN ()) THEN ((t0.c40)<(t0.c0)) END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((t0.c64)<<(v0.c0)) WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))) THEN ((t0.c64) NOTNULL) WHEN (t0.c64 IN ()) THEN ((t0.c40)<(t0.c0)) END WHERE (LOWER(DISTINCT (v0.c0 IN (t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (v0.c0 IN (t0.c0, t0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((t0.c64)<<(v0.c0)) WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))) THEN ((t0.c64) NOTNULL) WHEN (t0.c64 IN ()) THEN ((t0.c40)<(t0.c0)) END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN ((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) THEN ((t0.c64)<<(v0.c0)) WHEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((t0.c40))) THEN ((t0.c64) NOTNULL) WHEN (t0.c64 IN ()) THEN ((t0.c40)<(t0.c0)) END WHERE (LOWER(DISTINCT (v0.c0 IN (t0.c0, t0.c0))));
SELECT * FROM v0 WHERE (((((v0.c1)>>(v0.c1))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>(v0.c1))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1)>>(v0.c1))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)>>(v0.c1))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c1)>>(v0.c1))) BETWEEN (CAST(v0.c0 AS INTEGER)) AND (v0.c0)));
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN ((t0.c76) ISNULL) THEN CASE t0.c64  WHEN '+T' THEN t0.c76 ELSE t0.c0 END WHEN (NOT (t0.c76)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c76)|(t0.c76)) THEN json_patch(t0.c64, t0.c76) END) ORDER BY ((x'')IS(((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))AND(t0.c40)))OR(t0.c40))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN ((t0.c76) ISNULL) THEN CASE t0.c64  WHEN '+T' THEN t0.c76 ELSE t0.c0 END WHEN (NOT (t0.c76)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c76)|(t0.c76)) THEN json_patch(t0.c64, t0.c76) END) IS TRUE)  as count FROM t0 ORDER BY ((x'')IS(((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))AND(t0.c40)))OR(t0.c40)))));
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN ((t0.c76) ISNULL) THEN CASE t0.c64  WHEN '+T' THEN t0.c76 ELSE t0.c0 END WHEN (NOT (t0.c76)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c76)|(t0.c76)) THEN json_patch(t0.c64, t0.c76) END) ORDER BY ((x'')IS(((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))AND(t0.c40)))OR(t0.c40))));
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN ((t0.c76) ISNULL) THEN CASE t0.c64  WHEN '+T' THEN t0.c76 ELSE t0.c0 END WHEN (NOT (t0.c76)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c76)|(t0.c76)) THEN json_patch(t0.c64, t0.c76) END) IS TRUE)  as count FROM t0 ORDER BY ((x'')IS(((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))AND(t0.c40)))OR(t0.c40)))));
SELECT ALL * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN ((t0.c76) ISNULL) THEN CASE t0.c64  WHEN '+T' THEN t0.c76 ELSE t0.c0 END WHEN (NOT (t0.c76)) THEN t0.c0 COLLATE BINARY WHEN ((t0.c76)|(t0.c76)) THEN json_patch(t0.c64, t0.c76) END) ORDER BY ((x'')IS(((((((((t0.c0)OR(t0.c64)))AND(t0.c0)))AND(t0.c40)))OR(t0.c40))));
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((v0.c1 IN (v0.c2, NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c1 IN (v0.c2, NULL))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((v0.c1 IN (v0.c2, NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT ((v0.c1 IN (v0.c2, NULL))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((NOT ((v0.c1 IN (v0.c2, NULL)))));
SELECT * FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ('~F(TDs', CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ('~F(TDs', CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ('~F(TDs', CAST(v0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) IS TRUE) IN ('~F(TDs', CAST(v0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((v0.c2) IS TRUE) IN ('~F(TDs', CAST(v0.c1 AS INTEGER))));
SELECT * FROM t0, v0 WHERE ((('541381381')AND(CASE t0.c76  WHEN t0.c40 THEN t0.c40 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT (((('541381381')AND(CASE t0.c76  WHEN t0.c40 THEN t0.c40 ELSE v0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('541381381')AND(CASE t0.c76  WHEN t0.c40 THEN t0.c40 ELSE v0.c2 END)));
SELECT SUM(count) FROM (SELECT (((('541381381')AND(CASE t0.c76  WHEN t0.c40 THEN t0.c40 ELSE v0.c2 END))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((('541381381')AND(CASE t0.c76  WHEN t0.c40 THEN t0.c40 ELSE v0.c2 END)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((+ (t0.c0)))|(((t0.c76)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))|(((t0.c76)GLOB(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((+ (t0.c0)))|(((t0.c76)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0)))|(((t0.c76)GLOB(t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((+ (t0.c0)))|(((t0.c76)GLOB(t0.c0)))));
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c64, v0.c2, v0.c2)) NOT BETWEEN ((v0.c0, t0.c64, v0.c2)) AND ((t0.c40, v0.c1, v0.c0))))>(((v0.c2)>>(t0.c40))))) ORDER BY CAST((((t0.c64)) NOT BETWEEN ((t0.c0)) AND ((t0.c76))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c64, v0.c2, v0.c2)) NOT BETWEEN ((v0.c0, t0.c64, v0.c2)) AND ((t0.c40, v0.c1, v0.c0))))>(((v0.c2)>>(t0.c40))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((((t0.c64)) NOT BETWEEN ((t0.c0)) AND ((t0.c76))) AS BLOB));
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c64, v0.c2, v0.c2)) NOT BETWEEN ((v0.c0, t0.c64, v0.c2)) AND ((t0.c40, v0.c1, v0.c0))))>(((v0.c2)>>(t0.c40))))) ORDER BY CAST((((t0.c64)) NOT BETWEEN ((t0.c0)) AND ((t0.c76))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c64, v0.c2, v0.c2)) NOT BETWEEN ((v0.c0, t0.c64, v0.c2)) AND ((t0.c40, v0.c1, v0.c0))))>(((v0.c2)>>(t0.c40))))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST((((t0.c64)) NOT BETWEEN ((t0.c0)) AND ((t0.c76))) AS BLOB));
SELECT ALL * FROM t0, v0 WHERE ((((((t0.c64, v0.c2, v0.c2)) NOT BETWEEN ((v0.c0, t0.c64, v0.c2)) AND ((t0.c40, v0.c1, v0.c0))))>(((v0.c2)>>(t0.c40))))) ORDER BY CAST((((t0.c64)) NOT BETWEEN ((t0.c0)) AND ((t0.c76))) AS BLOB);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN LTRIM(v0.c1, v0.c2) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) END) ORDER BY ((((((((((v0.c1)OR(v0.c0)))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(UPPER(v0.c1))))OR(v0.c2)))AND('%!')) ASC  NULLS LAST, (((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(v0.c2))))>=((((((((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN LTRIM(v0.c1, v0.c2) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c0)))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(UPPER(v0.c1))))OR(v0.c2)))AND('%!')) ASC  NULLS LAST, (((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(v0.c2))))>=((((((((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN LTRIM(v0.c1, v0.c2) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) END) ORDER BY ((((((((((v0.c1)OR(v0.c0)))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(UPPER(v0.c1))))OR(v0.c2)))AND('%!')) ASC  NULLS LAST, (((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(v0.c2))))>=((((((((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1  WHEN LTRIM(v0.c1, v0.c2) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c1)OR(v0.c0)))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(UPPER(v0.c1))))OR(v0.c2)))AND('%!')) ASC  NULLS LAST, (((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(v0.c2))))>=((((((((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c1  WHEN LTRIM(v0.c1, v0.c2) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)) END) ORDER BY ((((((((((v0.c1)OR(v0.c0)))AND((((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c2))))))AND(UPPER(v0.c1))))OR(v0.c2)))AND('%!')) ASC  NULLS LAST, (((((((((((v0.c1)AND(v0.c2)))OR(v0.c0)))OR(v0.c2)))AND(v0.c2))))>=((((((((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((('e|+䛺፴{i#h')<=(t0.c40)) COLLATE BINARY) ORDER BY ((t0.c76 IN ()) IN (((t0.c0)-(t0.c0)), ((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('e|+䛺፴{i#h')<=(t0.c40)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 IN ()) IN (((t0.c0)-(t0.c0)), ((t0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((('e|+䛺፴{i#h')<=(t0.c40)) COLLATE BINARY) ORDER BY ((t0.c76 IN ()) IN (((t0.c0)-(t0.c0)), ((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('e|+䛺፴{i#h')<=(t0.c40)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c76 IN ()) IN (((t0.c0)-(t0.c0)), ((t0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((('e|+䛺፴{i#h')<=(t0.c40)) COLLATE BINARY) ORDER BY ((t0.c76 IN ()) IN (((t0.c0)-(t0.c0)), ((t0.c0) NOT NULL))) ASC;
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c1);
SELECT COUNT(*) FROM t0 WHERE (CHAR(t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CHAR(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CHAR(t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CHAR(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CHAR(t0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((CASE WHEN t0.c64 THEN t0.c64 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((CASE WHEN t0.c64 THEN t0.c64 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((CASE WHEN t0.c64 THEN t0.c64 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((CASE WHEN t0.c64 THEN t0.c64 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)>>(v0.c1)))) AND ((CASE WHEN t0.c64 THEN t0.c64 END))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40) BETWEEN (t0.c76) AND (t0.c64)) IN ())) ORDER BY ((json_extract(t0.c40, t0.c0)) NOTNULL)  NULLS FIRST, ((0.5463232782258526)|(((t0.c76) BETWEEN (t0.c76) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c40) BETWEEN (t0.c76) AND (t0.c64)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_extract(t0.c40, t0.c0)) NOTNULL)  NULLS FIRST, ((0.5463232782258526)|(((t0.c76) BETWEEN (t0.c76) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c40) BETWEEN (t0.c76) AND (t0.c64)) IN ())) ORDER BY ((json_extract(t0.c40, t0.c0)) NOTNULL)  NULLS FIRST, ((0.5463232782258526)|(((t0.c76) BETWEEN (t0.c76) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c40) BETWEEN (t0.c76) AND (t0.c64)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((json_extract(t0.c40, t0.c0)) NOTNULL)  NULLS FIRST, ((0.5463232782258526)|(((t0.c76) BETWEEN (t0.c76) AND (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (((0.8523357363757134) NOT BETWEEN ((((NULL, t0.c0, v0.c0))<((v0.c1, t0.c0, t0.c40)))) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8523357363757134) NOT BETWEEN ((((NULL, t0.c0, v0.c0))<((v0.c1, t0.c0, t0.c40)))) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((0.8523357363757134) NOT BETWEEN ((((NULL, t0.c0, v0.c0))<((v0.c1, t0.c0, t0.c40)))) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.8523357363757134) NOT BETWEEN ((((NULL, t0.c0, v0.c0))<((v0.c1, t0.c0, t0.c40)))) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((0.8523357363757134) NOT BETWEEN ((((NULL, t0.c0, v0.c0))<((v0.c1, t0.c0, t0.c40)))) AND (((((t0.c76)OR(t0.c64)))OR(t0.c40)))));
SELECT ALL * FROM t0, v0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((t0.c64)&(v0.c1)) END) ORDER BY ((v0.c1 IN (v0.c2)) IN (CASE WHEN '1249879735' THEN v0.c2 END))  NULLS LAST, CAST(CASE v0.c2  WHEN v0.c1 THEN t0.c64 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOTNULL)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((t0.c64)&(v0.c1)) END) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c1 IN (v0.c2)) IN (CASE WHEN '1249879735' THEN v0.c2 END))  NULLS LAST, CAST(CASE v0.c2  WHEN v0.c1 THEN t0.c64 END AS NUMERIC));
SELECT ALL * FROM t0, v0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((t0.c64)&(v0.c1)) END) ORDER BY ((v0.c1 IN (v0.c2)) IN (CASE WHEN '1249879735' THEN v0.c2 END))  NULLS LAST, CAST(CASE v0.c2  WHEN v0.c1 THEN t0.c64 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOTNULL)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((t0.c64)&(v0.c1)) END) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c1 IN (v0.c2)) IN (CASE WHEN '1249879735' THEN v0.c2 END))  NULLS LAST, CAST(CASE v0.c2  WHEN v0.c1 THEN t0.c64 END AS NUMERIC));
SELECT ALL * FROM t0, v0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN ((v0.c2) BETWEEN (v0.c2) AND (v0.c2)) THEN ((t0.c64)&(v0.c1)) END) ORDER BY ((v0.c1 IN (v0.c2)) IN (CASE WHEN '1249879735' THEN v0.c2 END))  NULLS LAST, CAST(CASE v0.c2  WHEN v0.c1 THEN t0.c64 END AS NUMERIC);
SELECT ALL * FROM t0, v0 WHERE (v0.c1) ORDER BY ((- (v0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY ((- (v0.c2)) IN ()) ASC);
SELECT ALL * FROM t0, v0 WHERE (v0.c1) ORDER BY ((- (v0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0 NOT INDEXED, v0 ORDER BY ((- (v0.c2)) IN ()) ASC);
SELECT ALL * FROM t0, v0 WHERE (v0.c1) ORDER BY ((- (v0.c2)) IN ()) ASC;
SELECT COUNT(*) FROM v0 WHERE ('-1223694658');
SELECT SUM(count) FROM (SELECT ALL (('-1223694658') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-1223694658');
SELECT SUM(count) FROM (SELECT ALL (('-1223694658') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('-1223694658');
SELECT ALL COUNT(*) FROM v0 WHERE (((1283123899) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((1283123899) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((1283123899) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((1283123899) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((1283123899) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c76 AS NUMERIC)) ORDER BY ((((((t0.c64)&(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c76)))))AND(((((t0.c40)OR(t0.c64)))AND(t0.c0))))  NULLS FIRST, ('e' IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c76 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c64)&(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c76)))))AND(((((t0.c40)OR(t0.c64)))AND(t0.c0))))  NULLS FIRST, ('e' IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c76 AS NUMERIC)) ORDER BY ((((((t0.c64)&(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c76)))))AND(((((t0.c40)OR(t0.c64)))AND(t0.c0))))  NULLS FIRST, ('e' IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c76 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c64)&(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c76)))))AND(((((t0.c40)OR(t0.c64)))AND(t0.c0))))  NULLS FIRST, ('e' IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c76 AS NUMERIC)) ORDER BY ((((((t0.c64)&(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c76)))))AND(((((t0.c40)OR(t0.c64)))AND(t0.c0))))  NULLS FIRST, ('e' IN ()) COLLATE NOCASE;
SELECT * FROM v0 WHERE (CASE (v0.c2 IN (v0.c2))  WHEN ((v0.c2) NOTNULL) THEN ABS(DISTINCT 926623886) ELSE CAST(v0.c2 AS TEXT) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)=(((v0.c2)<>(NULL)))), NULLIF(((v0.c0)-(v0.c0)), ((v0.c0)=(v0.c2))) DESC, v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN (v0.c2))  WHEN ((v0.c2) NOTNULL) THEN ABS(DISTINCT 926623886) ELSE CAST(v0.c2 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)=(((v0.c2)!=(NULL)))), NULLIF(((v0.c0)-(v0.c0)), ((v0.c0)==(v0.c2))) DESC, v0.c2 ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE (v0.c2 IN (v0.c2))  WHEN ((v0.c2) NOTNULL) THEN ABS(DISTINCT 926623886) ELSE CAST(v0.c2 AS TEXT) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)=(((v0.c2)<>(NULL)))), NULLIF(((v0.c0)-(v0.c0)), ((v0.c0)=(v0.c2))) DESC, v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c2 IN (v0.c2))  WHEN ((v0.c2) NOTNULL) THEN ABS(DISTINCT 926623886) ELSE CAST(v0.c2 AS TEXT) END) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)=(((v0.c2)!=(NULL)))), NULLIF(((v0.c0)-(v0.c0)), ((v0.c0)==(v0.c2))) DESC, v0.c2 ASC  NULLS LAST);
SELECT * FROM v0 WHERE (CASE (v0.c2 IN (v0.c2))  WHEN ((v0.c2) NOTNULL) THEN ABS(DISTINCT 926623886) ELSE CAST(v0.c2 AS TEXT) END) ORDER BY ((CASE WHEN v0.c1 THEN v0.c0 END)=(((v0.c2)<>(NULL)))), NULLIF(((v0.c0)-(v0.c0)), ((v0.c0)=(v0.c2))) DESC, v0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 INDEXED BY i23 INNER JOIN v0 ON (((((t0.c76))=((x''))))*(((t0.c76)>=(t0.c76)))) WHERE (CASE NULLIF(t0.c40, v0.c2)  WHEN v0.c2 THEN ((t0.c0)==(1695843991)) WHEN (~ (v0.c2)) THEN ((((((((t0.c40)OR(NULL)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) WHEN CASE t0.c64  WHEN t0.c40 THEN t0.c40 WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN v0.c1 ELSE t0.c76 END THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN t0.c76 THEN 'ri' WHEN ((t0.c40)>>(v0.c0)) THEN ((t0.c64)|(v0.c0)) END) ORDER BY '' ASC  NULLS LAST, ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN t0.c0 END)>>(((t0.c40)+(t0.c64))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(t0.c40, v0.c2)  WHEN v0.c2 THEN ((t0.c0)=(1695843991)) WHEN (~ (v0.c2)) THEN ((((((((t0.c40)OR(NULL)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) WHEN CASE t0.c64  WHEN t0.c40 THEN t0.c40 WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN v0.c1 ELSE t0.c76 END THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN t0.c76 THEN 'ri' WHEN ((t0.c40)>>(v0.c0)) THEN ((t0.c64)|(v0.c0)) END) IS TRUE)  as count FROM t0 INDEXED BY i23 INNER JOIN v0 ON (((((t0.c76))==((x''))))*(((t0.c76)>=(t0.c76)))) ORDER BY '' ASC  NULLS LAST, ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN t0.c0 END)>>(((t0.c40)+(t0.c64))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i23 INNER JOIN v0 ON (((((t0.c76))=((x''))))*(((t0.c76)>=(t0.c76)))) WHERE (CASE NULLIF(t0.c40, v0.c2)  WHEN v0.c2 THEN ((t0.c0)==(1695843991)) WHEN (~ (v0.c2)) THEN ((((((((t0.c40)OR(NULL)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) WHEN CASE t0.c64  WHEN t0.c40 THEN t0.c40 WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN v0.c1 ELSE t0.c76 END THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN t0.c76 THEN 'ri' WHEN ((t0.c40)>>(v0.c0)) THEN ((t0.c64)|(v0.c0)) END) ORDER BY '' ASC  NULLS LAST, ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN t0.c0 END)>>(((t0.c40)+(t0.c64))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(t0.c40, v0.c2)  WHEN v0.c2 THEN ((t0.c0)=(1695843991)) WHEN (~ (v0.c2)) THEN ((((((((t0.c40)OR(NULL)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) WHEN CASE t0.c64  WHEN t0.c40 THEN t0.c40 WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN v0.c1 ELSE t0.c76 END THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN t0.c76 THEN 'ri' WHEN ((t0.c40)>>(v0.c0)) THEN ((t0.c64)|(v0.c0)) END) IS TRUE)  as count FROM t0 INDEXED BY i23 INNER JOIN v0 ON (((((t0.c76))==((x''))))*(((t0.c76)>=(t0.c76)))) ORDER BY '' ASC  NULLS LAST, ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN t0.c0 END)>>(((t0.c40)+(t0.c64))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i23 INNER JOIN v0 ON (((((t0.c76))=((x''))))*(((t0.c76)>=(t0.c76)))) WHERE (CASE NULLIF(t0.c40, v0.c2)  WHEN v0.c2 THEN ((t0.c0)==(1695843991)) WHEN (~ (v0.c2)) THEN ((((((((t0.c40)OR(NULL)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) WHEN CASE t0.c64  WHEN t0.c40 THEN t0.c40 WHEN t0.c64 THEN t0.c64 WHEN t0.c64 THEN v0.c1 ELSE t0.c76 END THEN ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) WHEN t0.c76 THEN 'ri' WHEN ((t0.c40)>>(v0.c0)) THEN ((t0.c64)|(v0.c0)) END) ORDER BY '' ASC  NULLS LAST, ((CASE WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN t0.c0 END)>>(((t0.c40)+(t0.c64))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c76)) NOT BETWEEN ((((t0.c76)IS NOT(t0.c40)))) AND (((((t0.c40))>((t0.c76)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c76)) NOT BETWEEN ((((t0.c76)IS NOT(t0.c40)))) AND (((((t0.c40))>((t0.c76))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c76)) NOT BETWEEN ((((t0.c76)IS NOT(t0.c40)))) AND (((((t0.c40))>((t0.c76)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c76)) NOT BETWEEN ((((t0.c76)IS NOT(t0.c40)))) AND (((((t0.c40))>((t0.c76))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c76)) NOT BETWEEN ((((t0.c76)IS NOT(t0.c40)))) AND (((((t0.c40))>((t0.c76)))))));
SELECT ALL * FROM v0, t0 WHERE ((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))OR(t0.c76)))OR(v0.c2)))OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))OR(t0.c76)))OR(v0.c2)))OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))OR(t0.c76)))OR(v0.c2)))OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))OR(t0.c76)))OR(v0.c2)))OR(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((((((((((((t0.c0)AND(v0.c1)))OR(t0.c0)))OR(t0.c76)))OR(v0.c2)))OR(v0.c0)))AND(v0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE (UNLIKELY(CAST(t0.c0 AS BLOB))) ORDER BY CASE WHEN ((t0.c0)*(t0.c0)) THEN (~ (t0.c40)) ELSE CASE t0.c64  WHEN '105443818' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c40 THEN t0.c76 ELSE t0.c76 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)*(t0.c0)) THEN (~ (t0.c40)) ELSE CASE t0.c64  WHEN '105443818' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c40 THEN t0.c76 ELSE t0.c76 END END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UNLIKELY(CAST(t0.c0 AS BLOB))) ORDER BY CASE WHEN ((t0.c0)*(t0.c0)) THEN (~ (t0.c40)) ELSE CASE t0.c64  WHEN '105443818' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c40 THEN t0.c76 ELSE t0.c76 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)*(t0.c0)) THEN (~ (t0.c40)) ELSE CASE t0.c64  WHEN '105443818' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c40 THEN t0.c76 ELSE t0.c76 END END  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (UNLIKELY(CAST(t0.c0 AS BLOB))) ORDER BY CASE WHEN ((t0.c0)*(t0.c0)) THEN (~ (t0.c40)) ELSE CASE t0.c64  WHEN '105443818' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c40 THEN t0.c76 ELSE t0.c76 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY t0.c76;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c76);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY t0.c76;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY t0.c76);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER) COLLATE NOCASE) ORDER BY t0.c76;
SELECT COUNT(*) FROM t0 WHERE (((t0.c64)AND((((t0.c40, t0.c40, t0.c76, t0.c40, t0.c76))<((t0.c64, t0.c76, t0.c64, t0.c40, t0.c64)))))) ORDER BY NULLIF((((t0.c76))<=((t0.c76))), ((t0.c0) BETWEEN (t0.c76) AND (t0.c76))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)AND((((t0.c40, t0.c40, t0.c76, t0.c40, t0.c76))<((t0.c64, t0.c76, t0.c64, t0.c40, t0.c64)))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF((((t0.c76))<=((t0.c76))), ((t0.c0) BETWEEN (t0.c76) AND (t0.c76))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c64)AND((((t0.c40, t0.c40, t0.c76, t0.c40, t0.c76))<((t0.c64, t0.c76, t0.c64, t0.c40, t0.c64)))))) ORDER BY NULLIF((((t0.c76))<=((t0.c76))), ((t0.c0) BETWEEN (t0.c76) AND (t0.c76))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c64)AND((((t0.c40, t0.c40, t0.c76, t0.c40, t0.c76))<((t0.c64, t0.c76, t0.c64, t0.c40, t0.c64)))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF((((t0.c76))<=((t0.c76))), ((t0.c0) BETWEEN (t0.c76) AND (t0.c76))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c64)AND((((t0.c40, t0.c40, t0.c76, t0.c40, t0.c76))<((t0.c64, t0.c76, t0.c64, t0.c40, t0.c64)))))) ORDER BY NULLIF((((t0.c76))<=((t0.c76))), ((t0.c0) BETWEEN (t0.c76) AND (t0.c76))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((x'3ec91945') NOT BETWEEN (((v0.c2)AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS TEXT)) ISNULL)  NULLS FIRST, (((v0.c2, v0.c0, NULL)) BETWEEN ((CAST(v0.c0 AS REAL), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c0))==((v0.c0))))) AND ((UPPER(DISTINCT v0.c0), (((v0.c2, v0.c0, 0.9659082470483505))<((v0.c0, 0.6876709163557713, v0.c0))), (~ (v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'3ec91945') NOT BETWEEN (((v0.c2)AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS TEXT)) ISNULL)  NULLS FIRST, (((v0.c2, v0.c0, NULL)) BETWEEN ((CAST(v0.c0 AS REAL), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c0))==((v0.c0))))) AND ((UPPER(DISTINCT v0.c0), (((v0.c2, v0.c0, 0.9659082470483505))<((v0.c0, 0.6876709163557713, v0.c0))), (~ (v0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'3ec91945') NOT BETWEEN (((v0.c2)AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS TEXT)) ISNULL)  NULLS FIRST, (((v0.c2, v0.c0, NULL)) BETWEEN ((CAST(v0.c0 AS REAL), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c0))==((v0.c0))))) AND ((UPPER(DISTINCT v0.c0), (((v0.c2, v0.c0, 0.9659082470483505))<((v0.c0, 0.6876709163557713, v0.c0))), (~ (v0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((x'3ec91945') NOT BETWEEN (((v0.c2)AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS TEXT)) ISNULL)  NULLS FIRST, (((v0.c2, v0.c0, NULL)) BETWEEN ((CAST(v0.c0 AS REAL), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c0))==((v0.c0))))) AND ((UPPER(DISTINCT v0.c0), (((v0.c2, v0.c0, 0.9659082470483505))<((v0.c0, 0.6876709163557713, v0.c0))), (~ (v0.c1))))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'3ec91945') NOT BETWEEN (((v0.c2)AND(v0.c0))) AND (CAST(v0.c1 AS REAL)))) ORDER BY ((CAST(v0.c2 AS TEXT)) ISNULL)  NULLS FIRST, (((v0.c2, v0.c0, NULL)) BETWEEN ((CAST(v0.c0 AS REAL), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)), (((v0.c0))==((v0.c0))))) AND ((UPPER(DISTINCT v0.c0), (((v0.c2, v0.c0, 0.9659082470483505))<((v0.c0, 0.6876709163557713, v0.c0))), (~ (v0.c1))))) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE ((v0.c0)LIKE(0X1b7b0f6f))  WHEN CAST(v0.c0 AS NUMERIC) THEN json_type(v0.c2) WHEN 0.898187056285172 THEN (~ (t0.c0)) WHEN ((((t0.c64)OR(t0.c40)))OR(v0.c2)) THEN v0.c0 ELSE (v0.c0 IN ()) END WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE ((v0.c0)LIKE(0X1b7b0f6f))  WHEN CAST(v0.c0 AS NUMERIC) THEN json_type(v0.c2) WHEN 0.898187056285172 THEN (~ (t0.c0)) WHEN ((((t0.c64)OR(t0.c40)))OR(v0.c2)) THEN v0.c0 ELSE (v0.c0 IN ()) END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE ((v0.c0)LIKE(0X1b7b0f6f))  WHEN CAST(v0.c0 AS NUMERIC) THEN json_type(v0.c2) WHEN 0.898187056285172 THEN (~ (t0.c0)) WHEN ((((t0.c64)OR(t0.c40)))OR(v0.c2)) THEN v0.c0 ELSE (v0.c0 IN ()) END WHERE (t0.c76);
SELECT SUM(count) FROM (SELECT ((t0.c76) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE ((v0.c0)LIKE(0X1b7b0f6f))  WHEN CAST(v0.c0 AS NUMERIC) THEN json_type(v0.c2) WHEN 0.898187056285172 THEN (~ (t0.c0)) WHEN ((((t0.c64)OR(t0.c40)))OR(v0.c2)) THEN v0.c0 ELSE (v0.c0 IN ()) END);
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE ((v0.c0)LIKE(0X1b7b0f6f))  WHEN CAST(v0.c0 AS NUMERIC) THEN json_type(v0.c2) WHEN 0.898187056285172 THEN (~ (t0.c0)) WHEN ((((t0.c64)OR(t0.c40)))OR(v0.c2)) THEN v0.c0 ELSE (v0.c0 IN ()) END WHERE (t0.c76);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE '0.12829705742536546'  WHEN x'' THEN t0.c76 END) NOT BETWEEN (((v0.c1)||(v0.c2))) AND (((v0.c1)GLOB(t0.c64))))) ORDER BY ((((t0.c0)||(t0.c64)))<(CASE t0.c40  WHEN v0.c0 THEN t0.c76 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '0.12829705742536546'  WHEN x'' THEN t0.c76 END) NOT BETWEEN (((v0.c1)||(v0.c2))) AND (((v0.c1)GLOB(t0.c64))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c0)||(t0.c64)))<(CASE t0.c40  WHEN v0.c0 THEN t0.c76 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE '0.12829705742536546'  WHEN x'' THEN t0.c76 END) NOT BETWEEN (((v0.c1)||(v0.c2))) AND (((v0.c1)GLOB(t0.c64))))) ORDER BY ((((t0.c0)||(t0.c64)))<(CASE t0.c40  WHEN v0.c0 THEN t0.c76 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE '0.12829705742536546'  WHEN x'' THEN t0.c76 END) NOT BETWEEN (((v0.c1)||(v0.c2))) AND (((v0.c1)GLOB(t0.c64))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c0)||(t0.c64)))<(CASE t0.c40  WHEN v0.c0 THEN t0.c76 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE '0.12829705742536546'  WHEN x'' THEN t0.c76 END) NOT BETWEEN (((v0.c1)||(v0.c2))) AND (((v0.c1)GLOB(t0.c64))))) ORDER BY ((((t0.c0)||(t0.c64)))<(CASE t0.c40  WHEN v0.c0 THEN t0.c76 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ('1248075830') ORDER BY (((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))) COLLATE RTRIM, ((((((((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)OR(((v0.c0) IS FALSE))))AND(((v0.c2) ISNULL))))OR(NULL COLLATE BINARY)))AND(((v0.c2)|('373179429')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1248075830') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))) COLLATE RTRIM, ((((((((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)OR(((v0.c0) IS FALSE))))AND(((v0.c2) ISNULL))))OR(NULL COLLATE BINARY)))AND(((v0.c2)|('373179429')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('1248075830') ORDER BY (((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))) COLLATE RTRIM, ((((((((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)OR(((v0.c0) IS FALSE))))AND(((v0.c2) ISNULL))))OR(NULL COLLATE BINARY)))AND(((v0.c2)|('373179429')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1248075830') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))) COLLATE RTRIM, ((((((((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)OR(((v0.c0) IS FALSE))))AND(((v0.c2) ISNULL))))OR(NULL COLLATE BINARY)))AND(((v0.c2)|('373179429')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ('1248075830') ORDER BY (((v0.c0, v0.c1, v0.c0)) NOT BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c1, v0.c1))) COLLATE RTRIM, ((((((((CASE WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END)OR(((v0.c0) IS FALSE))))AND(((v0.c2) ISNULL))))OR(NULL COLLATE BINARY)))AND(((v0.c2)|('373179429')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c40)<=(t0.c0)))OR(TRIM(t0.c64))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CASE WHEN t0.c40 THEN t0.c64 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((t0.c40)<=(t0.c0)))OR(TRIM(t0.c64))))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c40 THEN t0.c64 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c40)<=(t0.c0)))OR(TRIM(t0.c64))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CASE WHEN t0.c40 THEN t0.c64 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((t0.c40)<=(t0.c0)))OR(TRIM(t0.c64))))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c40 THEN t0.c64 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c40)<=(t0.c0)))OR(TRIM(t0.c64))))OR(CAST(t0.c0 AS TEXT)))) ORDER BY CASE WHEN t0.c40 THEN t0.c64 END COLLATE NOCASE;
SELECT * FROM t0 WHERE ((t0.c40 IN ())) ORDER BY (((t0.c76))<=((UPPER(t0.c76))))  NULLS LAST, ((t0.c0)||(NULL)) COLLATE NOCASE, '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c40 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76))<=((UPPER(t0.c76))))  NULLS LAST, ((t0.c0)||(NULL)) COLLATE NOCASE, '' ASC);
SELECT * FROM t0 WHERE ((t0.c40 IN ())) ORDER BY (((t0.c76))<=((UPPER(t0.c76))))  NULLS LAST, ((t0.c0)||(NULL)) COLLATE NOCASE, '' ASC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c40 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c76))<=((UPPER(t0.c76))))  NULLS LAST, ((t0.c0)||(NULL)) COLLATE NOCASE, '' ASC);
SELECT * FROM t0 WHERE ((t0.c40 IN ())) ORDER BY (((t0.c76))<=((UPPER(t0.c76))))  NULLS LAST, ((t0.c0)||(NULL)) COLLATE NOCASE, '' ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c0)=(v0.c1)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c1)))*(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)=(v0.c1)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)=(v0.c1)))*(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)=(v0.c1)))*(v0.c0)));
SELECT * FROM v0 WHERE ('1080629343') ORDER BY (CASE WHEN v0.c1 THEN v0.c1 END IN (((v0.c1)/(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1080629343') IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c1 THEN v0.c1 END IN (((v0.c1)/(v0.c1)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ('1080629343') ORDER BY (CASE WHEN v0.c1 THEN v0.c1 END IN (((v0.c1)/(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1080629343') IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c1 THEN v0.c1 END IN (((v0.c1)/(v0.c1)))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ('1080629343') ORDER BY (CASE WHEN v0.c1 THEN v0.c1 END IN (((v0.c1)/(v0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)+(v0.c1)))) AND (((((v0.c1, t0.c0, t0.c40)) NOT BETWEEN ((t0.c40, t0.c76, v0.c1)) AND ((v0.c2, t0.c76, t0.c40))))))) ORDER BY TRIM(((v0.c0)||(-1675361865)), ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)))  NULLS LAST, ((((t0.c76) NOTNULL)) NOT NULL) DESC, (- (((v0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)+(v0.c1)))) AND (((((v0.c1, t0.c0, t0.c40)) NOT BETWEEN ((t0.c40, t0.c76, v0.c1)) AND ((v0.c2, t0.c76, t0.c40))))))) IS TRUE)  as count FROM v0, t0 ORDER BY TRIM(((v0.c0)||(-1675361865)), ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)))  NULLS LAST, ((((t0.c76) NOTNULL)) NOT NULL) DESC, (- (((v0.c1) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)+(v0.c1)))) AND (((((v0.c1, t0.c0, t0.c40)) NOT BETWEEN ((t0.c40, t0.c76, v0.c1)) AND ((v0.c2, t0.c76, t0.c40))))))) ORDER BY TRIM(((v0.c0)||(-1675361865)), ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)))  NULLS LAST, ((((t0.c76) NOTNULL)) NOT NULL) DESC, (- (((v0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((((t0.c0)+(v0.c1)))) AND (((((v0.c1, t0.c0, t0.c40)) NOT BETWEEN ((t0.c40, t0.c76, v0.c1)) AND ((v0.c2, t0.c76, t0.c40))))))) IS TRUE)  as count FROM v0, t0 ORDER BY TRIM(((v0.c0)||(-1675361865)), ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)))  NULLS LAST, ((((t0.c76) NOTNULL)) NOT NULL) DESC, (- (((v0.c1) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((((t0.c0)+(v0.c1)))) AND (((((v0.c1, t0.c0, t0.c40)) NOT BETWEEN ((t0.c40, t0.c76, v0.c1)) AND ((v0.c2, t0.c76, t0.c40))))))) ORDER BY TRIM(((v0.c0)||(-1675361865)), ((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c64)))  NULLS LAST, ((((t0.c76) NOTNULL)) NOT NULL) DESC, (- (((v0.c1) NOT NULL))) ASC;
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT ALL * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t0.c0 ELSE 0X73d1fc06 END)||(CASE t0.c40  WHEN t0.c40 THEN t0.c64 WHEN t0.c76 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN '-162947485' WHEN t0.c0 THEN '-706307639' END))) ORDER BY ((((t0.c40)-(t0.c64))) NOT BETWEEN (((t0.c40) BETWEEN (v0.c2) AND (v0.c1))) AND (((t0.c0)=(t0.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN t0.c0 ELSE 0X73d1fc06 END)||(CASE t0.c40  WHEN t0.c40 THEN t0.c64 WHEN t0.c76 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN '-162947485' WHEN t0.c0 THEN '-706307639' END))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)-(t0.c64))) NOT BETWEEN (((t0.c40) BETWEEN (v0.c2) AND (v0.c1))) AND (((t0.c0)==(t0.c40)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t0.c0 ELSE 0X73d1fc06 END)||(CASE t0.c40  WHEN t0.c40 THEN t0.c64 WHEN t0.c76 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN '-162947485' WHEN t0.c0 THEN '-706307639' END))) ORDER BY ((((t0.c40)-(t0.c64))) NOT BETWEEN (((t0.c40) BETWEEN (v0.c2) AND (v0.c1))) AND (((t0.c0)=(t0.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN t0.c0 ELSE 0X73d1fc06 END)||(CASE t0.c40  WHEN t0.c40 THEN t0.c64 WHEN t0.c76 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN '-162947485' WHEN t0.c0 THEN '-706307639' END))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c40)-(t0.c64))) NOT BETWEEN (((t0.c40) BETWEEN (v0.c2) AND (v0.c1))) AND (((t0.c0)==(t0.c40)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t0.c0 ELSE 0X73d1fc06 END)||(CASE t0.c40  WHEN t0.c40 THEN t0.c64 WHEN t0.c76 THEN v0.c0 WHEN t0.c0 THEN v0.c2 WHEN v0.c2 THEN '-162947485' WHEN t0.c0 THEN '-706307639' END))) ORDER BY ((((t0.c40)-(t0.c64))) NOT BETWEEN (((t0.c40) BETWEEN (v0.c2) AND (v0.c1))) AND (((t0.c0)=(t0.c40)))) DESC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((((~ (x'26860702'))))<=((((t0.c76)==(t0.c64))))));
SELECT SUM(count) FROM (SELECT ((((((~ (x'26860702'))))<=((((t0.c76)=(t0.c64)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((~ (x'26860702'))))<=((((t0.c76)==(t0.c64))))));
SELECT SUM(count) FROM (SELECT ((((((~ (x'26860702'))))<=((((t0.c76)=(t0.c64)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((~ (x'26860702'))))<=((((t0.c76)==(t0.c64))))));
SELECT * FROM t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c64);
SELECT SUM(count) FROM (SELECT ALL ((t0.c64) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c64);
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c40)OR(x'')))AND(t0.c64)) AS NUMERIC)) ORDER BY MIN(((v0.c0) ISNULL), ((((t0.c76)OR(t0.c64)))OR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c40)OR(x'')))AND(t0.c64)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY MIN(((v0.c0) ISNULL), ((((t0.c76)OR(t0.c64)))OR(v0.c0)))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c40)OR(x'')))AND(t0.c64)) AS NUMERIC)) ORDER BY MIN(((v0.c0) ISNULL), ((((t0.c76)OR(t0.c64)))OR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c40)OR(x'')))AND(t0.c64)) AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY MIN(((v0.c0) ISNULL), ((((t0.c76)OR(t0.c64)))OR(v0.c0)))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE (CAST(((((t0.c40)OR(x'')))AND(t0.c64)) AS NUMERIC)) ORDER BY MIN(((v0.c0) ISNULL), ((((t0.c76)OR(t0.c64)))OR(v0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((('-842447305' IN ()))IS(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((('-842447305' IN ()))IS(v0.c2))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-842447305' IN ()))IS(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((('-842447305' IN ()))IS(v0.c2))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((('-842447305' IN ()))IS(v0.c2)));
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c2))==(CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(v0.c2))=(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c2))==(CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(v0.c2))=(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((UPPER(v0.c2))==(CAST(v0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.6856716703227402);
SELECT SUM(count) FROM (SELECT ALL ((0.6856716703227402) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.6856716703227402);
SELECT SUM(count) FROM (SELECT ALL ((0.6856716703227402) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.6856716703227402);
SELECT ALL * FROM t0 INDEXED BY i23 CROSS JOIN v0 ON ((((t0.c0)*(v0.c2))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9482164221731623)) AND ((NOT (t0.c40)))) WHERE (CASE WHEN 0.36319370337346824 COLLATE RTRIM THEN ((t0.c0) BETWEEN (v0.c2) AND (t0.c0)) ELSE ((t0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.36319370337346824 COLLATE RTRIM THEN ((t0.c0) BETWEEN (v0.c2) AND (t0.c0)) ELSE ((t0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)) END) IS TRUE)  as count FROM t0 INDEXED BY i23 CROSS JOIN v0 ON ((((t0.c0)*(v0.c2))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9482164221731623)) AND ((NOT (t0.c40)))));
SELECT ALL * FROM t0 INDEXED BY i23 CROSS JOIN v0 ON ((((t0.c0)*(v0.c2))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9482164221731623)) AND ((NOT (t0.c40)))) WHERE (CASE WHEN 0.36319370337346824 COLLATE RTRIM THEN ((t0.c0) BETWEEN (v0.c2) AND (t0.c0)) ELSE ((t0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.36319370337346824 COLLATE RTRIM THEN ((t0.c0) BETWEEN (v0.c2) AND (t0.c0)) ELSE ((t0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)) END) IS TRUE)  as count FROM t0 INDEXED BY i23 CROSS JOIN v0 ON ((((t0.c0)*(v0.c2))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9482164221731623)) AND ((NOT (t0.c40)))));
SELECT ALL * FROM t0 INDEXED BY i23 CROSS JOIN v0 ON ((((t0.c0)*(v0.c2))) NOT BETWEEN (LIKELIHOOD(DISTINCT v0.c2, 0.9482164221731623)) AND ((NOT (t0.c40)))) WHERE (CASE WHEN 0.36319370337346824 COLLATE RTRIM THEN ((t0.c0) BETWEEN (v0.c2) AND (t0.c0)) ELSE ((t0.c0) NOT BETWEEN (v0.c2) AND (t0.c76)) END);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((~ (v0.c0 COLLATE RTRIM)));
