-- Time: 2024/06/09 18:43:12
-- Database: database25
-- Database version: 3.40.0
-- seed value: 1934451925
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2 UNINDEXED); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0Xffffffffa32e2762); -- 4ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 0ms;
ANALYZE sqlite_master; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
PRAGMA main.stats; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('', NULL, 0.11019573152121387), (-1.55725635E9, 0.23403748514428957, x''), (NULL, '-48139234', 0.582061678463653), (x'dcde', 0x29360c4, x'c895'), (x'', -1982482566, 0.6133621167512433); -- 7ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 6ms;
ANALYZE vt0; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0.23403748514428957, x'9b47b94a'), (x'', ''), (x'f80f', x''); -- 0ms;
UPDATE vt0 SET (c0, c1)=(0.9793598244325831, NULL) WHERE ((CAST(vt0.c1 AS REAL)) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('pYNx'); -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (0xfffffffff6c39771); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=(0Xffffffff81012ad8, 0.2815062358833379) WHERE CAST(((vt0.c1) NOTNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('43212996', NULL); -- 1ms;
ANALYZE temp; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL), ('495992739'), (NULL); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (NULL), (NULL), (4.95992739E8), (0xffffffffc88e3a5d), ('-930203043'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c2) VALUES ('-2130629928'); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0, c2) VALUES (NULL, 0.047152454109875785); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='43212996'; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIEW v0(c0) AS SELECT LAG(x'fb30', ((x'')<<(((vt0.c1) IS TRUE))), (vt0.c2 COLLATE BINARY IN ())) OVER ( ORDER BY UPPER(vt0.c1) COLLATE BINARY) FROM vt0 WHERE (NULLIF(DISTINCT 'j8~', x'') COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1, c0) VALUES ('DwbCWh', 0.8962219495052062, 'Zd'), ('86AY', 'ｰ㩝/MỿIdP6', ''), (NULL, '2011399474', '503345915'), ('', x'2e8d', 0.3490727269601084), (x'', '', '-1132882276'); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 834124351); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (0.014933812213947961), (-40022989), (NULL); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=('86AY', 0.5596095560386839) WHERE ((LIKELY(DISTINCT vt0.c2))<<(vt0.c0 COLLATE BINARY)); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES ('-1982482566', x'0781'), (0.6044732886777577, 'PYNX'), (0.7884884768231143, 0.7012878552347409); -- 4ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY SUBSTR(NULL, ((vt0.c2)>=(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(NULL, ((vt0.c2)>=(vt0.c2))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY SUBSTR(NULL, ((vt0.c2)>=(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(NULL, ((vt0.c2)>=(vt0.c2))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY SUBSTR(NULL, ((vt0.c2)>=(vt0.c2))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND ((+ (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c1))) NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND ((+ (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c1))) NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND ((+ (vt0.c0))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 COLLATE RTRIM THEN x'446a' END) ORDER BY (('')GLOB(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c2 COLLATE RTRIM THEN x'446a' END) IS TRUE)  as count FROM vt0 ORDER BY (('')GLOB(vt0.c1)) DESC);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 COLLATE RTRIM THEN x'446a' END) ORDER BY (('')GLOB(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c2 COLLATE RTRIM THEN x'446a' END) IS TRUE)  as count FROM vt0 ORDER BY (('')GLOB(vt0.c1)) DESC);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c2 COLLATE RTRIM THEN x'446a' END) ORDER BY (('')GLOB(vt0.c1)) DESC;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<(vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<(vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)<(vt0.c1))))) ORDER BY vt0.c1 DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>>((+ (vt0.c0))))) ORDER BY CAST(((vt0.c0)==(vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)=(vt0.c1)) AS INTEGER));
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>>((+ (vt0.c0))))) ORDER BY CAST(((vt0.c0)==(vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)=(vt0.c1)) AS INTEGER));
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>>((+ (vt0.c0))))) ORDER BY CAST(((vt0.c0)==(vt0.c1)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END  NULLS LAST, CAST(((((((((vt0.c1)AND(vt0.c2)))OR('zd')))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)  NULLS LAST, (((vt0.c2 COLLATE BINARY))=((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END  NULLS LAST, CAST(((((((((vt0.c1)AND(vt0.c2)))OR('zd')))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)  NULLS LAST, (((vt0.c2 COLLATE BINARY))=((vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END  NULLS LAST, CAST(((((((((vt0.c1)AND(vt0.c2)))OR('zd')))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)  NULLS LAST, (((vt0.c2 COLLATE BINARY))=((vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END  NULLS LAST, CAST(((((((((vt0.c1)AND(vt0.c2)))OR('zd')))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)  NULLS LAST, (((vt0.c2 COLLATE BINARY))=((vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'')/(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY CASE WHEN CAST(vt0.c1 AS TEXT) THEN x'' END  NULLS LAST, CAST(((((((((vt0.c1)AND(vt0.c2)))OR('zd')))AND(vt0.c0)))OR(vt0.c0)) AS NUMERIC)  NULLS LAST, (((vt0.c2 COLLATE BINARY))=((vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((+ (((vt0.c2) IS TRUE)))) ORDER BY ABS(DISTINCT vt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c1) DESC);
SELECT * FROM vt0 WHERE ((+ (((vt0.c2) IS TRUE)))) ORDER BY ABS(DISTINCT vt0.c1) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c1) DESC);
SELECT * FROM vt0 WHERE ((+ (((vt0.c2) IS TRUE)))) ORDER BY ABS(DISTINCT vt0.c1) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) NOT BETWEEN ('-688972033') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) NOT BETWEEN ('-688972033') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) NOT BETWEEN ('-688972033') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) NOT BETWEEN ('-688972033') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN NULL END) NOT BETWEEN ('-688972033') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND ((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND ((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ((- (vt0.c1))) AND ((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (NULL)))AND(CASE '-1132882276'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((+ (vt0.c1)) IN (((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (NULL)))AND(CASE '-1132882276'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (NULL)))AND(CASE '-1132882276'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((+ (vt0.c1)) IN (((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (NULL)))AND(CASE '-1132882276'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN (NULL)))AND(CASE '-1132882276'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))OR(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((+ (vt0.c1)) IN (((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((((0.7621031945747232))>=((((vt0.c1) NOT NULL))))) ORDER BY (~ (CHAR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((0.7621031945747232))>=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CHAR(vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((0.7621031945747232))>=((((vt0.c1) NOT NULL))))) ORDER BY (~ (CHAR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((0.7621031945747232))>=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CHAR(vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((0.7621031945747232))>=((((vt0.c1) NOT NULL))))) ORDER BY (~ (CHAR(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'98db');
SELECT SUM(count) FROM (SELECT ((x'98db') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'98db');
SELECT SUM(count) FROM (SELECT ((x'98db') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'98db');
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ('-903122234');
SELECT SUM(count) FROM (SELECT (('-903122234') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-903122234');
SELECT SUM(count) FROM (SELECT (('-903122234') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-903122234');
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)<>(vt0.c0)), LOWER(vt0.c2))) AND ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)), ((vt0.c1)==(vt0.c2)), (vt0.c1 IN ()))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS FALSE) ELSE ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)<>(vt0.c0)), LOWER(vt0.c2))) AND ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)), ((vt0.c1)=(vt0.c2)), (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS FALSE) ELSE ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)) END ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)<>(vt0.c0)), LOWER(vt0.c2))) AND ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)), ((vt0.c1)==(vt0.c2)), (vt0.c1 IN ()))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS FALSE) ELSE ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)<>(vt0.c0)), LOWER(vt0.c2))) AND ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)), ((vt0.c1)=(vt0.c2)), (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS FALSE) ELSE ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)) END ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)<>(vt0.c0)), LOWER(vt0.c2))) AND ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)), ((vt0.c1)==(vt0.c2)), (vt0.c1 IN ()))))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS FALSE) ELSE ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)) END ASC;
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) NOTNULL) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c2 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) DESC, (NULL IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2) IS FALSE))) ASC  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) DESC, (NULL IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2) IS FALSE))) ASC  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c2 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) DESC, (NULL IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2) IS FALSE))) ASC  NULLS LAST, vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) DESC, (NULL IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2) IS FALSE))) ASC  NULLS LAST, vt0.c1 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((vt0.c2 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS INTEGER) DESC, (NULL IN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2) IS FALSE))) ASC  NULLS LAST, vt0.c1 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(json_remove(vt0.c2, vt0.c1))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(json_remove(vt0.c2, vt0.c1))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(json_remove(vt0.c2, vt0.c1))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)OR(json_remove(vt0.c2, vt0.c1))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c1, vt0.c2))AND((- (vt0.c2)))))AND(((((((((vt0.c2)OR(vt0.c2)))OR(-688972033)))OR(vt0.c1)))AND(vt0.c1)))))OR('0.6044732886777577')))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(vt0.c1, vt0.c2))AND((- (vt0.c2)))))AND(((((((((vt0.c2)OR(vt0.c2)))OR(-688972033)))OR(vt0.c1)))AND(vt0.c1)))))OR('0.6044732886777577')))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c1, vt0.c2))AND((- (vt0.c2)))))AND(((((((((vt0.c2)OR(vt0.c2)))OR(-688972033)))OR(vt0.c1)))AND(vt0.c1)))))OR('0.6044732886777577')))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(vt0.c1, vt0.c2))AND((- (vt0.c2)))))AND(((((((((vt0.c2)OR(vt0.c2)))OR(-688972033)))OR(vt0.c1)))AND(vt0.c1)))))OR('0.6044732886777577')))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c1, vt0.c2))AND((- (vt0.c2)))))AND(((((((((vt0.c2)OR(vt0.c2)))OR(-688972033)))OR(vt0.c1)))AND(vt0.c1)))))OR('0.6044732886777577')))AND(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '-581414612' ELSE vt0.c1 END))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN (0x329add24) AND ('-1634351498')) ASC  NULLS LAST, CASE CAST(0.5657874586863035 AS BLOB)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '-581414612' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN (0X329add24) AND ('-1634351498')) ASC  NULLS LAST, CASE CAST(0.5657874586863035 AS BLOB)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '-581414612' ELSE vt0.c1 END))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN (0x329add24) AND ('-1634351498')) ASC  NULLS LAST, CASE CAST(0.5657874586863035 AS BLOB)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '-581414612' ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN (0X329add24) AND ('-1634351498')) ASC  NULLS LAST, CASE CAST(0.5657874586863035 AS BLOB)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END);
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN '-581414612' ELSE vt0.c1 END))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) BETWEEN (0x329add24) AND ('-1634351498')) ASC  NULLS LAST, CASE CAST(0.5657874586863035 AS BLOB)  WHEN vt0.c1 COLLATE NOCASE THEN vt0.c0 END;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0)))<(((vt0.c0)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2, vt0.c0)))<(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0)))<(((vt0.c0)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2, vt0.c0)))<(((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0)))<(((vt0.c0)%(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c2)%(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE (vt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c2)%(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE (vt0.c1 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c2)%(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE (vt0.c1 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c2)%(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE (vt0.c1 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c0)%(vt0.c0))) AND (((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN ((vt0.c2)%(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE (vt0.c1 IN ()) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)==(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c1)<=(vt0.c0)), ((vt0.c2)&(vt0.c2)), LIKE(vt0.c1, vt0.c2, '0')))<(('<蔲Q8[<VW5', CAST(vt0.c0 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ASC, (~ ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)==(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)<=(vt0.c0)), ((vt0.c2)&(vt0.c2)), LIKE(vt0.c1, vt0.c2, '0')))<(('<蔲Q8[<VW5', CAST(vt0.c0 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ASC, (~ ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)==(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c1)<=(vt0.c0)), ((vt0.c2)&(vt0.c2)), LIKE(vt0.c1, vt0.c2, '0')))<(('<蔲Q8[<VW5', CAST(vt0.c0 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ASC, (~ ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)==(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)<=(vt0.c0)), ((vt0.c2)&(vt0.c2)), LIKE(vt0.c1, vt0.c2, '0')))<(('<蔲Q8[<VW5', CAST(vt0.c0 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ASC, (~ ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END)==(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c1)<=(vt0.c0)), ((vt0.c2)&(vt0.c2)), LIKE(vt0.c1, vt0.c2, '0')))<(('<蔲Q8[<VW5', CAST(vt0.c0 AS TEXT), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) ASC, (~ ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((((((NULL)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1)*(vt0.c1)) THEN '' WHEN CAST(x'0d427d1b' AS BLOB) THEN ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((((((NULL)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1)*(vt0.c1)) THEN '' WHEN CAST(x'0d427d1b' AS BLOB) THEN ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((((((NULL)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1)*(vt0.c1)) THEN '' WHEN CAST(x'0d427d1b' AS BLOB) THEN ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((((((NULL)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1)*(vt0.c1)) THEN '' WHEN CAST(x'0d427d1b' AS BLOB) THEN ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((((((((((NULL)AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))))) ORDER BY CASE CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END  WHEN ((vt0.c1)*(vt0.c1)) THEN '' WHEN CAST(x'0d427d1b' AS BLOB) THEN ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)) WHEN (((vt0.c0))>((vt0.c0))) THEN ((NULL) NOT BETWEEN (vt0.c2) AND (vt0.c1)) ELSE vt0.c1 COLLATE NOCASE END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))-((((vt0.c0))==((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))-((((vt0.c0))==((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))-((((vt0.c0))==((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))-((((vt0.c0))==((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))-((((vt0.c0))==((vt0.c2))))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(NULL)))AND(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(NULL)))AND(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(NULL)))AND(vt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(NULL)))AND(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))OR(NULL)))AND(vt0.c1)) COLLATE BINARY;
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS REAL))<((~ (NULL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<((~ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS REAL))<((~ (NULL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<((~ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS REAL))<((~ (NULL))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('462391272');
SELECT SUM(count) FROM (SELECT ALL (('462391272') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('462391272');
SELECT SUM(count) FROM (SELECT ALL (('462391272') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('462391272');
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))=((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL))=((- (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))=((- (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL))=((- (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))=((- (vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)LIKE(vt0.c0)))AND(ROUND(vt0.c0, '-1445502508'))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c2)/(vt0.c2)))))OR(UPPER(vt0.c2))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)LIKE(vt0.c0)))AND(ROUND(vt0.c0, '-1445502508'))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c2)/(vt0.c2)))))OR(UPPER(vt0.c2))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)LIKE(vt0.c0)))AND(ROUND(vt0.c0, '-1445502508'))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c2)/(vt0.c2)))))OR(UPPER(vt0.c2))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0)LIKE(vt0.c0)))AND(ROUND(vt0.c0, '-1445502508'))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c2)/(vt0.c2)))))OR(UPPER(vt0.c2))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c0)LIKE(vt0.c0)))AND(ROUND(vt0.c0, '-1445502508'))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c1 COLLATE RTRIM)))OR(((vt0.c2)/(vt0.c2)))))OR(UPPER(vt0.c2))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9201242486957015)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.9201242486957015)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9201242486957015)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.9201242486957015)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.9201242486957015)) IS TRUE));
SELECT * FROM vt0 WHERE ((((vt0.c2))<=(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2))<=(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c2))<=(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2))<=(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c2))<=(((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x''))))AND((vt0.c0 IN (vt0.c1, vt0.c2)))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN -1e500 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c0) NOTNULL))) DESC  NULLS LAST, (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2) NOT BETWEEN (0Xffffffffc88e3a5d) AND (vt0.c1)))))AND(('' IN (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x''))))AND((vt0.c0 IN (vt0.c1, vt0.c2)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN -1e500 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c0) NOTNULL))) DESC  NULLS LAST, (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2) NOT BETWEEN (0xffffffffc88e3a5d) AND (vt0.c1)))))AND(('' IN (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x''))))AND((vt0.c0 IN (vt0.c1, vt0.c2)))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN -1e500 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c0) NOTNULL))) DESC  NULLS LAST, (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2) NOT BETWEEN (0Xffffffffc88e3a5d) AND (vt0.c1)))))AND(('' IN (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x''))))AND((vt0.c0 IN (vt0.c1, vt0.c2)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN -1e500 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c0) NOTNULL))) DESC  NULLS LAST, (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2) NOT BETWEEN (0xffffffffc88e3a5d) AND (vt0.c1)))))AND(('' IN (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x''))))AND((vt0.c0 IN (vt0.c1, vt0.c2)))))OR(vt0.c0))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN -1e500 THEN vt0.c0 END) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c0) NOTNULL))) DESC  NULLS LAST, (((((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))OR(((vt0.c2) NOT BETWEEN (0Xffffffffc88e3a5d) AND (vt0.c1)))))AND(('' IN (vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)=(CAST(vt0.c2 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)==(CAST(vt0.c2 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)=(CAST(vt0.c2 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)==(CAST(vt0.c2 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))) ISNULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)=(CAST(vt0.c2 AS INTEGER)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)GLOB('.|/'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB('.|/'))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)GLOB('.|/'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)GLOB('.|/'))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)GLOB('.|/'))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2130629928') ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-2130629928') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2130629928') ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-2130629928') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-2130629928') ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2))>=((vt0.c0)))) NOT BETWEEN (x'6527') AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))>=((vt0.c0)))) NOT BETWEEN (x'6527') AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2))>=((vt0.c0)))) NOT BETWEEN (x'6527') AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2))>=((vt0.c0)))) NOT BETWEEN (x'6527') AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2))>=((vt0.c0)))) NOT BETWEEN (x'6527') AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c0)+(vt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c0)+(vt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)+(vt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c0)+(vt0.c1)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ())) ORDER BY (((((vt0.c2 IN (-1365074218)))OR((- (vt0.c2)))))AND(HEX(vt0.c0))), LTRIM(((vt0.c0)IS NOT(vt0.c2)), (vt0.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN (-1365074218)))OR((- (vt0.c2)))))AND(HEX(vt0.c0))), LTRIM(((vt0.c0)IS NOT(vt0.c2)), (vt0.c2 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ())) ORDER BY (((((vt0.c2 IN (-1365074218)))OR((- (vt0.c2)))))AND(HEX(vt0.c0))), LTRIM(((vt0.c0)IS NOT(vt0.c2)), (vt0.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN (-1365074218)))OR((- (vt0.c2)))))AND(HEX(vt0.c0))), LTRIM(((vt0.c0)IS NOT(vt0.c2)), (vt0.c2 IN ()))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)>>(vt0.c0)) IN ())) ORDER BY (((((vt0.c2 IN (-1365074218)))OR((- (vt0.c2)))))AND(HEX(vt0.c0))), LTRIM(((vt0.c0)IS NOT(vt0.c2)), (vt0.c2 IN ()))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) NOTNULL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (((json_array_length(vt0.c1))>=(''))) ORDER BY (+ (((vt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c1))>=(''))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((json_array_length(vt0.c1))>=(''))) ORDER BY (+ (((vt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(vt0.c1))>=(''))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c1)OR(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT * FROM vt0 WHERE ((- (((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2))<=((vt0.c2)))) BETWEEN (LIKELIHOOD(vt0.c1, 0.7682317632880322)) AND ((vt0.c0 IN ())))) ORDER BY ((NULL COLLATE BINARY)-(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<=((vt0.c2)))) BETWEEN (LIKELIHOOD(vt0.c1, 0.7682317632880322)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE BINARY)-(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2))<=((vt0.c2)))) BETWEEN (LIKELIHOOD(vt0.c1, 0.7682317632880322)) AND ((vt0.c0 IN ())))) ORDER BY ((NULL COLLATE BINARY)-(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))<=((vt0.c2)))) BETWEEN (LIKELIHOOD(vt0.c1, 0.7682317632880322)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL COLLATE BINARY)-(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2))<=((vt0.c2)))) BETWEEN (LIKELIHOOD(vt0.c1, 0.7682317632880322)) AND ((vt0.c0 IN ())))) ORDER BY ((NULL COLLATE BINARY)-(((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.9734440676138463))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c2) IS TRUE)) BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.9734440676138463))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS TRUE)) BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.9734440676138463))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c2) IS TRUE)) BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.9734440676138463))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS TRUE)) BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.9734440676138463))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY ((((vt0.c2) IS TRUE)) BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)<=((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)<=((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)<=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)<=((~ (vt0.c0))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))LIKE(vt0.c2))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC))LIKE(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))LIKE(vt0.c2))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC))LIKE(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))LIKE(vt0.c2))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)AND(vt0.c0))) AND ((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c2 COLLATE NOCASE)AND(((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), vt0.c2, (vt0.c2 IN ())))=((((vt0.c1)<=(0.6452185535112426)), (('9223372036854775807')*(vt0.c0)), ((vt0.c0)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), vt0.c2, (vt0.c2 IN ())))=((((vt0.c1)<=(0.6452185535112426)), (('9223372036854775807')*(vt0.c0)), ((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), vt0.c2, (vt0.c2 IN ())))=((((vt0.c1)<=(0.6452185535112426)), (('9223372036854775807')*(vt0.c0)), ((vt0.c0)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), vt0.c2, (vt0.c2 IN ())))=((((vt0.c1)<=(0.6452185535112426)), (('9223372036854775807')*(vt0.c0)), ((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)), vt0.c2, (vt0.c2 IN ())))=((((vt0.c1)<=(0.6452185535112426)), (('9223372036854775807')*(vt0.c0)), ((vt0.c0)||(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)/(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)/(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)/(vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)/(vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)/(vt0.c1))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((NULL, vt0.c0, -1.634351498E9)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2))), 0.6553663356012653));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((NULL, vt0.c0, -1.634351498E9)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2))), 0.6553663356012653)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((NULL, vt0.c0, -1.634351498E9)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2))), 0.6553663356012653));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((NULL, vt0.c0, -1.634351498E9)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2))), 0.6553663356012653)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD((((NULL, vt0.c0, -1.634351498E9)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2)) AND ((vt0.c2, vt0.c2, vt0.c2))), 0.6553663356012653));
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT * FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY vt0.c1  NULLS FIRST;
SELECT * FROM vt0 WHERE ((('-154953871') ISNULL) COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))/((~ ('-1281791367')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-154953871') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))/((~ ('-1281791367')))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-154953871') ISNULL) COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))/((~ ('-1281791367')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-154953871') ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS INTEGER))/((~ ('-1281791367')))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-154953871') ISNULL) COLLATE BINARY) ORDER BY ((CAST(vt0.c1 AS INTEGER))/((~ ('-1281791367')))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(ABS(vt0.c1)))) ORDER BY CASE ((vt0.c0)||(x''))  WHEN ((vt0.c2) BETWEEN (x'') AND (vt0.c1)) THEN (+ (vt0.c1)) ELSE ((vt0.c0)+(0.1376451414628359)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)||(x''))  WHEN ((vt0.c2) BETWEEN (x'') AND (vt0.c1)) THEN (+ (vt0.c1)) ELSE ((vt0.c0)+(0.1376451414628359)) END ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(ABS(vt0.c1)))) ORDER BY CASE ((vt0.c0)||(x''))  WHEN ((vt0.c2) BETWEEN (x'') AND (vt0.c1)) THEN (+ (vt0.c1)) ELSE ((vt0.c0)+(0.1376451414628359)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(ABS(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)||(x''))  WHEN ((vt0.c2) BETWEEN (x'') AND (vt0.c1)) THEN (+ (vt0.c1)) ELSE ((vt0.c0)+(0.1376451414628359)) END ASC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(ABS(vt0.c1)))) ORDER BY CASE ((vt0.c0)||(x''))  WHEN ((vt0.c2) BETWEEN (x'') AND (vt0.c1)) THEN (+ (vt0.c1)) ELSE ((vt0.c0)+(0.1376451414628359)) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c0)))OR(CAST(vt0.c2 AS BLOB))) DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)>(vt0.c0)))OR(CAST(vt0.c2 AS BLOB))) DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c0)))OR(CAST(vt0.c2 AS BLOB))) DESC, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)>(vt0.c0)))OR(CAST(vt0.c2 AS BLOB))) DESC, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE ((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c0)))OR(CAST(vt0.c2 AS BLOB))) DESC, vt0.c1  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c2)>(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c2)>(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)) IN ())) ORDER BY ((vt0.c2)>(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (ABS(DISTINCT vt0.c1)) AND ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY HEX((vt0.c1 IN (vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (ABS(DISTINCT vt0.c1)) AND ((vt0.c2 IN (vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY HEX((vt0.c1 IN (vt0.c2))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (ABS(DISTINCT vt0.c1)) AND ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY HEX((vt0.c1 IN (vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (ABS(DISTINCT vt0.c1)) AND ((vt0.c2 IN (vt0.c1, vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY HEX((vt0.c1 IN (vt0.c2))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (ABS(DISTINCT vt0.c1)) AND ((vt0.c2 IN (vt0.c1, vt0.c2))))) ORDER BY HEX((vt0.c1 IN (vt0.c2))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(CASE WHEN '' THEN vt0.c0 END, 0.8219257218848959));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN '' THEN vt0.c0 END, 0.8219257218848959)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(CASE WHEN '' THEN vt0.c0 END, 0.8219257218848959));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN '' THEN vt0.c0 END, 0.8219257218848959)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELIHOOD(CASE WHEN '' THEN vt0.c0 END, 0.8219257218848959));
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c2 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((NULL) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(((vt0.c2)<=(vt0.c1)))))AND(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c2 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((NULL) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(((vt0.c2)<=(vt0.c1)))))AND(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c2 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((NULL) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(((vt0.c2)<=(vt0.c1)))))AND(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c2 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((NULL) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(((vt0.c2)<=(vt0.c1)))))AND(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c2 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((NULL) NOTNULL))))AND(vt0.c1 COLLATE NOCASE)))AND(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(((vt0.c2)<=(vt0.c1)))))AND(((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL, vt0.c1, -9.03122234E8)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))<>(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, vt0.c1, -9.03122234E8)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))<>(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL, vt0.c1, -9.03122234E8)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))<>(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, vt0.c1, -9.03122234E8)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))<>(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL, vt0.c1, -9.03122234E8)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c1, vt0.c2, vt0.c2))))<>(CAST(vt0.c1 AS NUMERIC)))) ORDER BY CAST(((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)) AS TEXT) ASC;
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)<(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0))!=((vt0.c1))))))AND(((vt0.c1)<=(vt0.c1)))))AND(TYPEOF(vt0.c1)))) ORDER BY CAST(((vt0.c2)GLOB(vt0.c2)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0))!=((vt0.c1))))))AND(((vt0.c1)<=(vt0.c1)))))AND(TYPEOF(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)GLOB(vt0.c2)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0))!=((vt0.c1))))))AND(((vt0.c1)<=(vt0.c1)))))AND(TYPEOF(vt0.c1)))) ORDER BY CAST(((vt0.c2)GLOB(vt0.c2)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0))!=((vt0.c1))))))AND(((vt0.c1)<=(vt0.c1)))))AND(TYPEOF(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)GLOB(vt0.c2)) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)AND(vt0.c2 COLLATE RTRIM)))OR((((vt0.c0))!=((vt0.c1))))))AND(((vt0.c1)<=(vt0.c1)))))AND(TYPEOF(vt0.c1)))) ORDER BY CAST(((vt0.c2)GLOB(vt0.c2)) AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(0.1046868831486002)))AND(vt0.c1)) THEN ((vt0.c2)&(vt0.c1)) ELSE ((vt0.c1) ISNULL) END) ORDER BY (((- (vt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(0.1046868831486002)))AND(vt0.c1)) THEN ((vt0.c2)&(vt0.c1)) ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(0.1046868831486002)))AND(vt0.c1)) THEN ((vt0.c2)&(vt0.c1)) ELSE ((vt0.c1) ISNULL) END) ORDER BY (((- (vt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(0.1046868831486002)))AND(vt0.c1)) THEN ((vt0.c2)&(vt0.c1)) ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c2))) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((((((((vt0.c1)AND(vt0.c2)))AND(vt0.c0)))AND(0.1046868831486002)))AND(vt0.c1)) THEN ((vt0.c2)&(vt0.c1)) ELSE ((vt0.c1) ISNULL) END) ORDER BY (((- (vt0.c2))) ISNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE vt0.c2  WHEN (+ (vt0.c0)) THEN vt0.c1 ELSE -1875656065 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN (+ (vt0.c0)) THEN vt0.c1 ELSE -1875656065 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE vt0.c2  WHEN (+ (vt0.c0)) THEN vt0.c1 ELSE -1875656065 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN (+ (vt0.c0)) THEN vt0.c1 ELSE -1875656065 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE vt0.c2  WHEN (+ (vt0.c0)) THEN vt0.c1 ELSE -1875656065 END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(CHAR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((ABS(CHAR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(CHAR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((ABS(CHAR(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(CHAR(vt0.c2)));
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE RTRIM)) ORDER BY ((((vt0.c2) IS FALSE))!=(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS FALSE))<>(CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE RTRIM)) ORDER BY ((((vt0.c2) IS FALSE))!=(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS FALSE))<>(CAST(vt0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT vt0.c0 COLLATE RTRIM)) ORDER BY ((((vt0.c2) IS FALSE))!=(CAST(vt0.c1 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))==(((vt0.c2)<(vt0.c2))))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))==(((vt0.c2)<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))==(((vt0.c2)<(vt0.c2))))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))==(((vt0.c2)<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))==(((vt0.c2)<(vt0.c2))))) ORDER BY (NOT (SQLITE_COMPILEOPTION_USED(vt0.c1)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((('-1634351498')&(vt0.c0)) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)>>(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1634351498')&(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)>>(((vt0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((('-1634351498')&(vt0.c0)) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)>>(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-1634351498')&(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)>>(((vt0.c1) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST((('-1634351498')&(vt0.c0)) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 END)>>(((vt0.c1) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))!=((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<>((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))!=((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<>((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))!=((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))));
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY (~ (CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(0Xfffffffff966f91f))) AND ((0.47298627750912536 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(0Xfffffffff966f91f))) AND ((0.47298627750912536 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(0Xfffffffff966f91f))) AND ((0.47298627750912536 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(0Xfffffffff966f91f))) AND ((0.47298627750912536 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)))AND(0Xfffffffff966f91f))) AND ((0.47298627750912536 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((vt0.c0)-(vt0.c1)))) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0)-(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((vt0.c0)-(vt0.c1)))) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0)-(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(((vt0.c0)-(vt0.c1)))) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) AS REAL) ASC;
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((vt0.c2) IS TRUE)  WHEN vt0.c1 THEN vt0.c2 WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c1)) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c2) IS TRUE)  WHEN vt0.c1 THEN vt0.c2 WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c1)) THEN (vt0.c0 IN ()) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((vt0.c2) IS TRUE)  WHEN vt0.c1 THEN vt0.c2 WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c1)) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))IS(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c2) IS TRUE)  WHEN vt0.c1 THEN vt0.c2 WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c1)) THEN (vt0.c0 IN ()) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))IS(vt0.c0 COLLATE BINARY))) ORDER BY CASE ((vt0.c2) IS TRUE)  WHEN vt0.c1 THEN vt0.c2 WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c0)) WHEN ((vt0.c0)LIKE(vt0.c1)) THEN (vt0.c0 IN ()) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))AND(((('[?')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))AND(((('[?')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))AND(((('[?')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))AND(((('[?')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) IS FALSE))AND(((('[?')) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ORDER BY (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))*(CASE vt0.c2  WHEN vt0.c0 THEN '-2130629928' END))) ORDER BY json_remove('495992739', (- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))*(CASE vt0.c2  WHEN vt0.c0 THEN '-2130629928' END))) IS TRUE)  as count FROM vt0 ORDER BY json_remove('495992739', (- (vt0.c0))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))*(CASE vt0.c2  WHEN vt0.c0 THEN '-2130629928' END))) ORDER BY json_remove('495992739', (- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))*(CASE vt0.c2  WHEN vt0.c0 THEN '-2130629928' END))) IS TRUE)  as count FROM vt0 ORDER BY json_remove('495992739', (- (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((vt0.c2)>=((NOT (vt0.c2)))), CAST(vt0.c2 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>=((NOT (vt0.c2)))), CAST(vt0.c2 COLLATE RTRIM AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((vt0.c2)>=((NOT (vt0.c2)))), CAST(vt0.c2 COLLATE RTRIM AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)>=((NOT (vt0.c2)))), CAST(vt0.c2 COLLATE RTRIM AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL)) ORDER BY ((vt0.c2)>=((NOT (vt0.c2)))), CAST(vt0.c2 COLLATE RTRIM AS TEXT) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER), vt0.c1)) AND ((vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC, CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER), vt0.c1)) AND ((vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC, CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER), vt0.c1)) AND ((vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC, CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER), vt0.c1)) AND ((vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC, CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER), vt0.c1)) AND ((vt0.c1, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, ((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM DESC, CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))==(0.6452185535112426)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))=(0.6452185535112426))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))==(0.6452185535112426)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))=(0.6452185535112426))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))==(0.6452185535112426)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>(vt0.c1))) NOT BETWEEN (vt0.c2 COLLATE NOCASE) AND ((((vt0.c0))>=((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c0 END COLLATE RTRIM) ORDER BY (+ (vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c2)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c0 END COLLATE RTRIM) ORDER BY (+ (vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c2)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c0 END COLLATE RTRIM) ORDER BY (+ (vt0.c2)) ASC;
SELECT ALL * FROM vt0 WHERE (((0Xffffffffd5d7e3f4)|(vt0.c0))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN ((vt0.c1) NOTNULL) THEN (+ (vt0.c2)) WHEN ((vt0.c2)>=(vt0.c2)) THEN ((vt0.c1) NOTNULL) WHEN (~ (vt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffd5d7e3f4)|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN ((vt0.c1) NOTNULL) THEN (+ (vt0.c2)) WHEN ((vt0.c2)>=(vt0.c2)) THEN ((vt0.c1) NOTNULL) WHEN (~ (vt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((0Xffffffffd5d7e3f4)|(vt0.c0))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN ((vt0.c1) NOTNULL) THEN (+ (vt0.c2)) WHEN ((vt0.c2)>=(vt0.c2)) THEN ((vt0.c1) NOTNULL) WHEN (~ (vt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffd5d7e3f4)|(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN ((vt0.c1) NOTNULL) THEN (+ (vt0.c2)) WHEN ((vt0.c2)>=(vt0.c2)) THEN ((vt0.c1) NOTNULL) WHEN (~ (vt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((0Xffffffffd5d7e3f4)|(vt0.c0))) ORDER BY SQLITE_SOURCE_ID() DESC, CASE WHEN ((vt0.c1) NOTNULL) THEN (+ (vt0.c2)) WHEN ((vt0.c2)>=(vt0.c2)) THEN ((vt0.c1) NOTNULL) WHEN (~ (vt0.c2)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1)))||(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c1)))||(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1)))||(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c1)))||(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((x'' IN (vt0.c1)))||(vt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (CASE x''  WHEN vt0.c1 THEN COALESCE(DISTINCT vt0.c1, vt0.c0) WHEN ((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)>(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c2)%(vt0.c2)) WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((0.9115722782885963)<(vt0.c2)) ELSE json_remove(x'', 0.4190054572143367, vt0.c0, vt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN vt0.c1 THEN COALESCE(DISTINCT vt0.c1, vt0.c0) WHEN ((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)>(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c2)%(vt0.c2)) WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((0.9115722782885963)<(vt0.c2)) ELSE json_remove(x'', 0.4190054572143367, vt0.c0, vt0.c2) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE x''  WHEN vt0.c1 THEN COALESCE(DISTINCT vt0.c1, vt0.c0) WHEN ((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)>(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c2)%(vt0.c2)) WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((0.9115722782885963)<(vt0.c2)) ELSE json_remove(x'', 0.4190054572143367, vt0.c0, vt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN vt0.c1 THEN COALESCE(DISTINCT vt0.c1, vt0.c0) WHEN ((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)>(vt0.c0)) WHEN TRIM(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c2)%(vt0.c2)) WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((0.9115722782885963)<(vt0.c2)) ELSE json_remove(x'', 0.4190054572143367, vt0.c0, vt0.c2) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY LOWER(DISTINCT CAST(vt0.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT CAST(vt0.c2 AS TEXT)) DESC);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY LOWER(DISTINCT CAST(vt0.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LOWER(DISTINCT CAST(vt0.c2 AS TEXT)) DESC);
SELECT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY) ORDER BY LOWER(DISTINCT CAST(vt0.c2 AS TEXT)) DESC;
SELECT ALL * FROM vt0 WHERE (QUOTE(((vt0.c1)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (QUOTE(((vt0.c1)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((QUOTE(((vt0.c1)>(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (QUOTE(((vt0.c1)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT (vt0.c1 IN ()))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT (vt0.c1 IN ()))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT (vt0.c1 IN ()))) ORDER BY vt0.c2 DESC;
SELECT * FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN '0.6044732886777577' ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN '0.6044732886777577' ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN '0.6044732886777577' ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN '0.6044732886777577' ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN '0.6044732886777577' ELSE ((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) END);
SELECT * FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(((vt0.c2)>=(vt0.c1))))) ORDER BY (NOT ((((vt0.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c2, vt0.c2))))) DESC, (((vt0.c2)) NOT BETWEEN ((((NULL) ISNULL))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)+(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(((vt0.c2)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c2, vt0.c2))))) DESC, (((vt0.c2)) NOT BETWEEN ((((NULL) ISNULL))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(((vt0.c2)>=(vt0.c1))))) ORDER BY (NOT ((((vt0.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c2, vt0.c2))))) DESC, (((vt0.c2)) NOT BETWEEN ((((NULL) ISNULL))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)+(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(((vt0.c2)>=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c2, vt0.c2))))) DESC, (((vt0.c2)) NOT BETWEEN ((((NULL) ISNULL))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)+(vt0.c0)))AND(CAST(vt0.c2 AS TEXT))))AND(((vt0.c2)>=(vt0.c1))))) ORDER BY (NOT ((((vt0.c0, vt0.c1, vt0.c2))!=((vt0.c0, vt0.c2, vt0.c2))))) DESC, (((vt0.c2)) NOT BETWEEN ((((NULL) ISNULL))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)+(vt0.c1))) AND (COALESCE(vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) ORDER BY (((vt0.c2)&('黖*_S')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)+(vt0.c1))) AND (COALESCE(vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)&('黖*_S')) IN ()));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)+(vt0.c1))) AND (COALESCE(vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) ORDER BY (((vt0.c2)&('黖*_S')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)+(vt0.c1))) AND (COALESCE(vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)&('黖*_S')) IN ()));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (((vt0.c1)+(vt0.c1))) AND (COALESCE(vt0.c1, vt0.c0, vt0.c2, vt0.c2)))) ORDER BY (((vt0.c2)&('黖*_S')) IN ());
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((('_*mpgl\nVA')<<(vt0.c2))))) ORDER BY ((((vt0.c2)LIKE(vt0.c2)))-(LENGTH(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((('_*mpgl\nVA')<<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)LIKE(vt0.c2)))-(LENGTH(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((('_*mpgl\nVA')<<(vt0.c2))))) ORDER BY ((((vt0.c2)LIKE(vt0.c2)))-(LENGTH(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((('_*mpgl\nVA')<<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)LIKE(vt0.c2)))-(LENGTH(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) AND ((('_*mpgl\nVA')<<(vt0.c2))))) ORDER BY ((((vt0.c2)LIKE(vt0.c2)))-(LENGTH(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c2  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ABS(NULL) WHEN (((vt0.c2))=((vt0.c1))) THEN (vt0.c2 IN ()) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((vt0.c1)OR(NULL)))OR(vt0.c2)) END) ORDER BY ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN ABS(NULL) WHEN (((vt0.c2))==((vt0.c1))) THEN (vt0.c2 IN ()) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((vt0.c1)OR(NULL)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) DESC, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ABS(NULL) WHEN (((vt0.c2))=((vt0.c1))) THEN (vt0.c2 IN ()) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((vt0.c1)OR(NULL)))OR(vt0.c2)) END) ORDER BY ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN ABS(NULL) WHEN (((vt0.c2))==((vt0.c1))) THEN (vt0.c2 IN ()) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((vt0.c1)OR(NULL)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) DESC, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN ABS(NULL) WHEN (((vt0.c2))=((vt0.c1))) THEN (vt0.c2 IN ()) WHEN NULL THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((vt0.c1)OR(NULL)))OR(vt0.c2)) END) ORDER BY ((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))) AND (CAST(vt0.c0 AS INTEGER))) DESC, vt0.c0 DESC;
SELECT ALL * FROM vt0 WHERE (x'b158');
SELECT SUM(count) FROM (SELECT ALL ((x'b158') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'b158');
SELECT SUM(count) FROM (SELECT ALL ((x'b158') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'b158');
SELECT ALL * FROM vt0 WHERE (((((0.8123122634817563)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) IS FALSE)))) ORDER BY (((CAST(vt0.c2 AS NUMERIC)))<=((x'9119')));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8123122634817563)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c2 AS NUMERIC)))<=((x'9119'))));
SELECT ALL * FROM vt0 WHERE (((((0.8123122634817563)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) IS FALSE)))) ORDER BY (((CAST(vt0.c2 AS NUMERIC)))<=((x'9119')));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8123122634817563)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c2 AS NUMERIC)))<=((x'9119'))));
SELECT ALL * FROM vt0 WHERE (((((0.8123122634817563)OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))))AND(((vt0.c1) IS FALSE)))) ORDER BY (((CAST(vt0.c2 AS NUMERIC)))<=((x'9119')));
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((0Xffffffffc88e3a5d)GLOB((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffffc88e3a5d)GLOB((vt0.c1 IN ()))));
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((0Xffffffffc88e3a5d)GLOB((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((0Xffffffffc88e3a5d)GLOB((vt0.c1 IN ()))));
SELECT * FROM vt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((0Xffffffffc88e3a5d)GLOB((vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (CHAR(vt0.c1) COLLATE RTRIM) ORDER BY ((((vt0.c2) NOT BETWEEN ('0.014933812213947961') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (0.4344562007654371)))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOT BETWEEN ('0.014933812213947961') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (0.4344562007654371)))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CHAR(vt0.c1) COLLATE RTRIM) ORDER BY ((((vt0.c2) NOT BETWEEN ('0.014933812213947961') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (0.4344562007654371)))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CHAR(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOT BETWEEN ('0.014933812213947961') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (0.4344562007654371)))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CHAR(vt0.c1) COLLATE RTRIM) ORDER BY ((((vt0.c2) NOT BETWEEN ('0.014933812213947961') AND (vt0.c0)))*(((vt0.c0) BETWEEN (vt0.c0) AND (0.4344562007654371)))) ASC  NULLS FIRST, ((CAST(vt0.c1 AS NUMERIC)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))/(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))/(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))/(((vt0.c0) IS FALSE))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((('-212784784'))<((vt0.c1))))) AND (((('462391272')|(NULL)))))) ORDER BY (~ (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((('-212784784'))<((vt0.c1))))) AND (((('462391272')|(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((('-212784784'))<((vt0.c1))))) AND (((('462391272')|(NULL)))))) ORDER BY (~ (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((('-212784784'))<((vt0.c1))))) AND (((('462391272')|(NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1)) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((('-212784784'))<((vt0.c1))))) AND (((('462391272')|(NULL)))))) ORDER BY (~ (vt0.c1)) DESC;
SELECT ALL * FROM vt0 WHERE (((((((((((((x'cf95')OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(NULL, '-1952687508');
SELECT SUM(count) FROM (SELECT ((((((((((((((x'cf95')OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(NULL, '-1952687508'));
SELECT ALL * FROM vt0 WHERE (((((((((((((x'cf95')OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(NULL, '-1952687508');
SELECT SUM(count) FROM (SELECT ((((((((((((((x'cf95')OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(NULL, '-1952687508'));
SELECT ALL * FROM vt0 WHERE (((((((((((((x'cf95')OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(NULL, '-1952687508');
SELECT ALL * FROM vt0 WHERE (((0.4190054572143367 IN (vt0.c0)) IN ())) ORDER BY (((vt0.c1)<<(vt0.c1)) IN ((NOT (vt0.c2)), 0.7826246729592009)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4190054572143367 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<<(vt0.c1)) IN ((NOT (vt0.c2)), 0.7826246729592009)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.4190054572143367 IN (vt0.c0)) IN ())) ORDER BY (((vt0.c1)<<(vt0.c1)) IN ((NOT (vt0.c2)), 0.7826246729592009)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4190054572143367 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)<<(vt0.c1)) IN ((NOT (vt0.c2)), 0.7826246729592009)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.4190054572143367 IN (vt0.c0)) IN ())) ORDER BY (((vt0.c1)<<(vt0.c1)) IN ((NOT (vt0.c2)), 0.7826246729592009)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL), ((vt0.c1) ISNULL)))<((((vt0.c0)+(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c1)|(vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL), ((vt0.c1) ISNULL)))<((((vt0.c0)+(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c1)|(vt0.c2)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL), ((vt0.c1) ISNULL)))<((((vt0.c0)+(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c1)|(vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL), ((vt0.c1) ISNULL)))<((((vt0.c0)+(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c1)|(vt0.c2)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((NULL) NOTNULL), ((vt0.c1) ISNULL)))<((((vt0.c0)+(vt0.c1)), (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))), ((vt0.c1)|(vt0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)>=(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)>=(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)>=(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)>=(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE '' END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)>=(vt0.c0)))AND((vt0.c0 IN ()))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE '' END)));
SELECT * FROM vt0 WHERE (CASE WHEN TIME(vt0.c2, -9.03122234E8, vt0.c1, vt0.c1, vt0.c2) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOTNULL)  NULLS FIRST, CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1498509681')) THEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END ELSE (+ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TIME(vt0.c2, -9.03122234E8, vt0.c1, vt0.c1, vt0.c2) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOTNULL)  NULLS FIRST, CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1498509681')) THEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END ELSE (+ (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (CASE WHEN TIME(vt0.c2, -9.03122234E8, vt0.c1, vt0.c1, vt0.c2) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOTNULL)  NULLS FIRST, CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1498509681')) THEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END ELSE (+ (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TIME(vt0.c2, -9.03122234E8, vt0.c1, vt0.c1, vt0.c2) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOTNULL)  NULLS FIRST, CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1498509681')) THEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END ELSE (+ (vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (CASE WHEN TIME(vt0.c2, -9.03122234E8, vt0.c1, vt0.c1, vt0.c2) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c2 COLLATE BINARY END) ORDER BY ((((vt0.c1)IS NOT(vt0.c0))) NOTNULL)  NULLS FIRST, CASE vt0.c0 COLLATE RTRIM  WHEN ((((vt0.c0)AND(vt0.c1)))OR('1498509681')) THEN CASE WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END ELSE (+ (vt0.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((SQLITE_COMPILEOPTION_USED(vt0.c2))IS((vt0.c1 IN ()))) DESC, ((((0x38522dc7) IS TRUE)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((SQLITE_COMPILEOPTION_USED(vt0.c2))IS((vt0.c1 IN ()))) DESC, ((((0X38522dc7) IS TRUE)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((SQLITE_COMPILEOPTION_USED(vt0.c2))IS((vt0.c1 IN ()))) DESC, ((((0x38522dc7) IS TRUE)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((SQLITE_COMPILEOPTION_USED(vt0.c2))IS((vt0.c1 IN ()))) DESC, ((((0X38522dc7) IS TRUE)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c1 IN ()))OR(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)) ASC, ((SQLITE_COMPILEOPTION_USED(vt0.c2))IS((vt0.c1 IN ()))) DESC, ((((0x38522dc7) IS TRUE)) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(0X3205e733)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(vt0.c1)))AND(0x3205e733)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(0X3205e733)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(vt0.c1)))AND(0x3205e733)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(0X3205e733)))OR(vt0.c1)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(0.8997519348012022)))AND(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(0.8997519348012022)))AND(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(0.8997519348012022)))AND(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(0.8997519348012022)))AND(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(0.8997519348012022)))AND(vt0.c2))) NOTNULL));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE)))) ORDER BY '';
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0)))>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0)))>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (x'')))AND(NULL)))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (x'') AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 8.49009956E8 WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (x'')))AND(NULL)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (x'') AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 8.49009956E8 WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (x'')))AND(NULL)))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (x'') AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 8.49009956E8 WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NOT (x'')))AND(NULL)))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (x'') AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 8.49009956E8 WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (x'')))AND(NULL)))AND(((vt0.c0) ISNULL)))) ORDER BY ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (x'') AND (CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN 8.49009956E8 WHEN vt0.c1 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) IS FALSE));
SELECT * FROM vt0 WHERE ((- (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), 0.8997519348012022)) AND ((((vt0.c1)IS NOT(vt0.c1)), ((vt0.c0)IS(vt0.c1)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), 0.8997519348012022)) AND ((((vt0.c1)IS NOT(vt0.c1)), ((vt0.c0)IS(vt0.c1)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), 0.8997519348012022)) AND ((((vt0.c1)IS NOT(vt0.c1)), ((vt0.c0)IS(vt0.c1)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), 0.8997519348012022)) AND ((((vt0.c1)IS NOT(vt0.c1)), ((vt0.c0)IS(vt0.c1)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)), 0.8997519348012022)) AND ((((vt0.c1)IS NOT(vt0.c1)), ((vt0.c0)IS(vt0.c1)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY CAST(x'4ba1' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'4ba1' AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY CAST(x'4ba1' AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'4ba1' AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM) ORDER BY CAST(x'4ba1' AS BLOB) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOT NULL), (NOT (vt0.c0)), ((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOT NULL), (NOT (vt0.c0)), ((vt0.c1) NOT NULL)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOT NULL), (NOT (vt0.c0)), ((vt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOT NULL), (NOT (vt0.c0)), ((vt0.c1) NOT NULL)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY COALESCE(DISTINCT CAST(vt0.c1 AS INTEGER), ((vt0.c0) NOT NULL), (NOT (vt0.c0)), ((vt0.c1) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN '-1132882276' THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN '-1132882276' THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN '-1132882276' THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN '-1132882276' THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN '-1132882276' THEN vt0.c2 END)));
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT vt0.c1)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT vt0.c1));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c1)LIKE(vt0.c0)))-((((vt0.c0))!=((vt0.c2)))))  NULLS LAST, (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0)))-((((vt0.c0))<>((vt0.c2)))))  NULLS LAST, (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c1)LIKE(vt0.c0)))-((((vt0.c0))!=((vt0.c2)))))  NULLS LAST, (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0)))-((((vt0.c0))<>((vt0.c2)))))  NULLS LAST, (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY ((((vt0.c1)LIKE(vt0.c0)))-((((vt0.c0))!=((vt0.c2)))))  NULLS LAST, (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)) IN ()) DESC;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.9835784795018812)) ORDER BY ABS(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.9835784795018812)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.9835784795018812)) ORDER BY ABS(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT 0.9835784795018812)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT 0.9835784795018812)) ORDER BY ABS(DISTINCT CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('	)nL}0(I') AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ('	)nL}0(I') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('	)nL}0(I') AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ('	)nL}0(I') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('	)nL}0(I') AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((0.6599894593273095)) AND ((((vt0.c2)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((0.6599894593273095)) AND ((((vt0.c2)*(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((0.6599894593273095)) AND ((((vt0.c2)*(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((0.6599894593273095)) AND ((((vt0.c2)*(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((0.6599894593273095)) AND ((((vt0.c2)*(vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ''  WHEN CAST(vt0.c2 AS TEXT) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN CAST(vt0.c2 AS TEXT) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ''  WHEN CAST(vt0.c2 AS TEXT) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN CAST(vt0.c2 AS TEXT) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ''  WHEN CAST(vt0.c2 AS TEXT) THEN vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2)&(vt0.c1))))=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)&(vt0.c1))))=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2)&(vt0.c1))))=(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)&(vt0.c1))))=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c2)&(vt0.c1))))=(((+ (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY HEX(DISTINCT CHANGES())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT CHANGES())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY HEX(DISTINCT CHANGES())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT CHANGES())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY HEX(DISTINCT CHANGES())  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c2))) ISNULL)) ORDER BY vt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, vt0.c1)) ORDER BY (+ (CAST(vt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0 COLLATE BINARY, vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, vt0.c1)) ORDER BY (+ (CAST(vt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR(vt0.c0 COLLATE BINARY, vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c1 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (INSTR(vt0.c0 COLLATE BINARY, vt0.c1)) ORDER BY (+ (CAST(vt0.c1 AS REAL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN x'd8c8' THEN vt0.c2 ELSE vt0.c2 END, vt0.c2 COLLATE BINARY, (((vt0.c1))>=((vt0.c1))))) AND (((+ (NULL)), vt0.c2, (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN x'd8c8' THEN vt0.c2 ELSE vt0.c2 END, vt0.c2 COLLATE BINARY, (((vt0.c1))>=((vt0.c1))))) AND (((+ (NULL)), vt0.c2, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN x'd8c8' THEN vt0.c2 ELSE vt0.c2 END, vt0.c2 COLLATE BINARY, (((vt0.c1))>=((vt0.c1))))) AND (((+ (NULL)), vt0.c2, (vt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN x'd8c8' THEN vt0.c2 ELSE vt0.c2 END, vt0.c2 COLLATE BINARY, (((vt0.c1))>=((vt0.c1))))) AND (((+ (NULL)), vt0.c2, (vt0.c1 IN ()))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN x'd8c8' THEN vt0.c2 ELSE vt0.c2 END, vt0.c2 COLLATE BINARY, (((vt0.c1))>=((vt0.c1))))) AND (((+ (NULL)), vt0.c2, (vt0.c1 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END ELSE ((vt0.c0) ISNULL) END) ORDER BY (+ ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (+ ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END ELSE ((vt0.c0) ISNULL) END) ORDER BY (+ ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END ELSE ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (+ ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)>>(vt0.c1)) THEN COALESCE(vt0.c0, vt0.c0) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END ELSE ((vt0.c0) ISNULL) END) ORDER BY (+ ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CAST(((vt0.c2)*(vt0.c0)) AS NUMERIC), (((CAST(vt0.c2 AS REAL), ((x'')*(vt0.c1)), ((((vt0.c1)AND('47725095')))OR(vt0.c1))))<=((((vt0.c2)<>(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN 0X5613a90f ELSE vt0.c0 END, (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)*(vt0.c0)) AS NUMERIC), (((CAST(vt0.c2 AS REAL), ((x'')*(vt0.c1)), ((((vt0.c1)AND('47725095')))OR(vt0.c1))))<=((((vt0.c2)!=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN 0x5613a90f ELSE vt0.c0 END, (~ (vt0.c0))))));
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CAST(((vt0.c2)*(vt0.c0)) AS NUMERIC), (((CAST(vt0.c2 AS REAL), ((x'')*(vt0.c1)), ((((vt0.c1)AND('47725095')))OR(vt0.c1))))<=((((vt0.c2)<>(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN 0X5613a90f ELSE vt0.c0 END, (~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)*(vt0.c0)) AS NUMERIC), (((CAST(vt0.c2 AS REAL), ((x'')*(vt0.c1)), ((((vt0.c1)AND('47725095')))OR(vt0.c1))))<=((((vt0.c2)!=(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN 0x5613a90f ELSE vt0.c0 END, (~ (vt0.c0))))));
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY CAST(((vt0.c2)*(vt0.c0)) AS NUMERIC), (((CAST(vt0.c2 AS REAL), ((x'')*(vt0.c1)), ((((vt0.c1)AND('47725095')))OR(vt0.c1))))<=((((vt0.c2)<>(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN 0X5613a90f ELSE vt0.c0 END, (~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)-(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()) DESC  NULLS LAST, CAST(((vt0.c0)!=('-1144681404')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)-(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()) DESC  NULLS LAST, CAST(((vt0.c0)!=('-1144681404')) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)-(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()) DESC  NULLS LAST, CAST(((vt0.c0)!=('-1144681404')) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)-(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()) DESC  NULLS LAST, CAST(((vt0.c0)!=('-1144681404')) AS BLOB) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)-(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)) IN ()) DESC  NULLS LAST, CAST(((vt0.c0)!=('-1144681404')) AS BLOB) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<=(vt0.c1)))));
SELECT * FROM vt0 WHERE (NULLIF((+ (vt0.c1)), ((vt0.c0)&(-1548827514)))) ORDER BY CAST(0.3271329087055638 AS BLOB) DESC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((+ (vt0.c1)), ((vt0.c0)&(-1548827514)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.3271329087055638 AS BLOB) DESC, vt0.c1 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULLIF((+ (vt0.c1)), ((vt0.c0)&(-1548827514)))) ORDER BY CAST(0.3271329087055638 AS BLOB) DESC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((+ (vt0.c1)), ((vt0.c0)&(-1548827514)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.3271329087055638 AS BLOB) DESC, vt0.c1 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (NULLIF((+ (vt0.c1)), ((vt0.c0)&(-1548827514)))) ORDER BY CAST(0.3271329087055638 AS BLOB) DESC, vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)) IN ())) ORDER BY CAST(RTRIM(vt0.c2) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(RTRIM(vt0.c2) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)) IN ())) ORDER BY CAST(RTRIM(vt0.c2) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(RTRIM(vt0.c2) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c1, vt0.c1, vt0.c0)) IN ())) ORDER BY CAST(RTRIM(vt0.c2) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- ((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- ((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (- ((vt0.c1 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((x'', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((x'', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((x'', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((x'', vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(NULL))) BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(NULL))) BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(NULL))) BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)OR(vt0.c1)))AND(NULL))) BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(NULL))) BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (vt0.c2)));
SELECT COUNT(*) FROM vt0 WHERE (JULIANDAY(vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (JULIANDAY(vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (JULIANDAY(vt0.c0, vt0.c2, vt0.c2, vt0.c2, vt0.c0) COLLATE NOCASE) ORDER BY vt0.c2;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c2 AS BLOB))OR(CAST(vt0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c2 AS BLOB))OR(CAST(vt0.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c2 AS BLOB))OR(CAST(vt0.c1 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c2 AS BLOB))OR(CAST(vt0.c1 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 COLLATE BINARY ASC  NULLS LAST, ((CAST(vt0.c2 AS BLOB))OR(CAST(vt0.c1 AS BLOB)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c2))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE (+ (vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c2))) NOT BETWEEN (((vt0.c2)>=(0.19153541998033052))) AND (0.717564342863695))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c2))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE (+ (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)>(vt0.c2))) NOT BETWEEN (((vt0.c2)>=(0.19153541998033052))) AND (0.717564342863695))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c2))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE (+ (vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c2))) NOT BETWEEN (((vt0.c2)>=(0.19153541998033052))) AND (0.717564342863695))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c2))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE (+ (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)>(vt0.c2))) NOT BETWEEN (((vt0.c2)>=(0.19153541998033052))) AND (0.717564342863695))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (+ (vt0.c2))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END ELSE (+ (vt0.c2)) END) ORDER BY ((((vt0.c2)>(vt0.c2))) NOT BETWEEN (((vt0.c2)>=(0.19153541998033052))) AND (0.717564342863695))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((~ (vt0.c1))) AND ((((vt0.c1)) NOT BETWEEN ((2011399474)) AND (('-501221153'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT NULL)) NOT BETWEEN ((~ (vt0.c1))) AND ((((vt0.c1)) NOT BETWEEN ((2011399474)) AND (('-501221153')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((~ (vt0.c1))) AND ((((vt0.c1)) NOT BETWEEN ((2011399474)) AND (('-501221153'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOT NULL)) NOT BETWEEN ((~ (vt0.c1))) AND ((((vt0.c1)) NOT BETWEEN ((2011399474)) AND (('-501221153')))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOT NULL)) NOT BETWEEN ((~ (vt0.c1))) AND ((((vt0.c1)) NOT BETWEEN ((2011399474)) AND (('-501221153'))))));
SELECT * FROM vt0 WHERE ('') ORDER BY (NOT ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))));
SELECT * FROM vt0 WHERE ('') ORDER BY (NOT ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY (NOT ((- (vt0.c0)))));
SELECT * FROM vt0 WHERE ('') ORDER BY (NOT ((- (vt0.c0))));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)&(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT * FROM vt0 WHERE (0.7826246729592009);
SELECT SUM(count) FROM (SELECT ((0.7826246729592009) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.7826246729592009);
SELECT SUM(count) FROM (SELECT ((0.7826246729592009) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.7826246729592009);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)>(x'')));
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN (((x'', vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, 0.44772325890783693, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)) ELSE ((vt0.c0)<=(vt0.c1)) END) ORDER BY CAST((vt0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((vt0.c0)OR(json_object(vt0.c2, vt0.c2))))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, (((vt0.c0 IN ()))OR(((vt0.c2)>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (((x'', vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, 0.44772325890783693, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)) ELSE ((vt0.c0)<=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((vt0.c0)OR(json_object(vt0.c2, vt0.c2))))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, (((vt0.c0 IN ()))OR(((vt0.c2)>(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN (((x'', vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, 0.44772325890783693, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)) ELSE ((vt0.c0)<=(vt0.c1)) END) ORDER BY CAST((vt0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((vt0.c0)OR(json_object(vt0.c2, vt0.c2))))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, (((vt0.c0 IN ()))OR(((vt0.c2)>(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN (((x'', vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, 0.44772325890783693, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c2))) THEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)) ELSE ((vt0.c0)<=(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN (vt0.c0)) AS NUMERIC)  NULLS FIRST, ((((vt0.c0)OR(json_object(vt0.c2, vt0.c2))))AND(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST, (((vt0.c0 IN ()))OR(((vt0.c2)>(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c1)))OR(((vt0.c1)==(vt0.c0)))))AND(vt0.c2 COLLATE RTRIM))) ORDER BY (((~ (vt0.c1))) IS FALSE)  NULLS LAST, (NOT (-1.281791367E9 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS(vt0.c1)))OR(((vt0.c1)=(vt0.c0)))))AND(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) IS FALSE)  NULLS LAST, (NOT (-1.281791367E9 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c1)))OR(((vt0.c1)==(vt0.c0)))))AND(vt0.c2 COLLATE RTRIM))) ORDER BY (((~ (vt0.c1))) IS FALSE)  NULLS LAST, (NOT (-1.281791367E9 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)IS(vt0.c1)))OR(((vt0.c1)=(vt0.c0)))))AND(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) IS FALSE)  NULLS LAST, (NOT (-1.281791367E9 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)IS(vt0.c1)))OR(((vt0.c1)==(vt0.c0)))))AND(vt0.c2 COLLATE RTRIM))) ORDER BY (((~ (vt0.c1))) IS FALSE)  NULLS LAST, (NOT (-1.281791367E9 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))>((vt0.c2))), ((vt0.c0) ISNULL), ((vt0.c2)||(vt0.c2)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))>((vt0.c2))), ((vt0.c0) ISNULL), ((vt0.c2)||(vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))>((vt0.c2))), ((vt0.c0) ISNULL), ((vt0.c2)||(vt0.c2)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))>((vt0.c2))), ((vt0.c0) ISNULL), ((vt0.c2)||(vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) AND (((((vt0.c0))>((vt0.c2))), ((vt0.c0) ISNULL), ((vt0.c2)||(vt0.c2)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END)AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9835784795018812);
SELECT SUM(count) FROM (SELECT ALL ((0.9835784795018812) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9835784795018812);
SELECT SUM(count) FROM (SELECT ALL ((0.9835784795018812) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.9835784795018812);
SELECT * FROM vt0 WHERE (((-4.0022989E7)=('0.9793598244325831')));
SELECT SUM(count) FROM (SELECT ((((-4.0022989E7)==('0.9793598244325831'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((-4.0022989E7)=('0.9793598244325831')));
SELECT SUM(count) FROM (SELECT ((((-4.0022989E7)==('0.9793598244325831'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((-4.0022989E7)=('0.9793598244325831')));
SELECT * FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS FALSE)) ORDER BY PRINTF(CAST(x'4fdc' AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(CAST(x'4fdc' AS BLOB)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS FALSE)) ORDER BY PRINTF(CAST(x'4fdc' AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(CAST(x'4fdc' AS BLOB)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS FALSE)) ORDER BY PRINTF(CAST(x'4fdc' AS BLOB)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c1)-(vt0.c2)))<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c2)))<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c1)-(vt0.c2)))<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)+(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c2)))<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)+(vt0.c2)) COLLATE RTRIM) ORDER BY ((((vt0.c1)-(vt0.c2)))<(CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT (- (vt0.c2)))) ORDER BY (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT (- (vt0.c2)))) ORDER BY (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (- (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT (- (vt0.c2)))) ORDER BY (((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)) IN ()) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c2)) THEN ((vt0.c0) IS TRUE) WHEN -9.03122234E8 THEN (((vt0.c0))>((vt0.c2))) WHEN (vt0.c2 IN ()) THEN '-1132882276' WHEN (+ (vt0.c1)) THEN (- (vt0.c2)) WHEN (~ (vt0.c2)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c2)) THEN ((vt0.c0) IS TRUE) WHEN -9.03122234E8 THEN (((vt0.c0))>((vt0.c2))) WHEN (vt0.c2 IN ()) THEN '-1132882276' WHEN (+ (vt0.c1)) THEN (- (vt0.c2)) WHEN (~ (vt0.c2)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c2)) THEN ((vt0.c0) IS TRUE) WHEN -9.03122234E8 THEN (((vt0.c0))>((vt0.c2))) WHEN (vt0.c2 IN ()) THEN '-1132882276' WHEN (+ (vt0.c1)) THEN (- (vt0.c2)) WHEN (~ (vt0.c2)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c2)) THEN ((vt0.c0) IS TRUE) WHEN -9.03122234E8 THEN (((vt0.c0))>((vt0.c2))) WHEN (vt0.c2 IN ()) THEN '-1132882276' WHEN (+ (vt0.c1)) THEN (- (vt0.c2)) WHEN (~ (vt0.c2)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c2)) THEN ((vt0.c0) IS TRUE) WHEN -9.03122234E8 THEN (((vt0.c0))>((vt0.c2))) WHEN (vt0.c2 IN ()) THEN '-1132882276' WHEN (+ (vt0.c1)) THEN (- (vt0.c2)) WHEN (~ (vt0.c2)) THEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c2 COLLATE BINARY))) ORDER BY vt0.c2, (+ (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, (+ (vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c2 COLLATE BINARY))) ORDER BY vt0.c2, (+ (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, (+ (vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c2 COLLATE BINARY))) ORDER BY vt0.c2, (+ (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((')r3Mp''I,쉿') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((')r3Mp''I,쉿') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((')r3Mp''I,쉿') IS TRUE));
SELECT SUM(count) FROM (SELECT ((((')r3Mp''I,쉿') IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((')r3Mp''I,쉿') IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c2)<(-4.8139234E7)))%(HEX(x'5c83')))  NULLS LAST, CAST('-0.0' AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<(-4.8139234E7)))%(HEX(x'5c83')))  NULLS LAST, CAST('-0.0' AS INTEGER) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c2)<(-4.8139234E7)))%(HEX(x'5c83')))  NULLS LAST, CAST('-0.0' AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<(-4.8139234E7)))%(HEX(x'5c83')))  NULLS LAST, CAST('-0.0' AS INTEGER) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE BINARY) ORDER BY ((((vt0.c2)<(-4.8139234E7)))%(HEX(x'5c83')))  NULLS LAST, CAST('-0.0' AS INTEGER) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE ((((('()')LIKE(vt0.c0)))<((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('()')LIKE(vt0.c0)))<((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('()')LIKE(vt0.c0)))<((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((('()')LIKE(vt0.c0)))<((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((('()')LIKE(vt0.c0)))<((~ (vt0.c1)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c2)&(vt0.c1)) COLLATE RTRIM DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)&(vt0.c1)) COLLATE RTRIM DESC, vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c2)&(vt0.c1)) COLLATE RTRIM DESC, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)&(vt0.c1)) COLLATE RTRIM DESC, vt0.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOTNULL)) ORDER BY ((vt0.c2)&(vt0.c1)) COLLATE RTRIM DESC, vt0.c0;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2)))<(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)IS(vt0.c2))  WHEN vt0.c0 THEN ((vt0.c2) IS FALSE) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)IS(vt0.c2))  WHEN vt0.c0 THEN ((vt0.c2) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) IS TRUE) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)IS(vt0.c2))  WHEN vt0.c0 THEN ((vt0.c2) IS FALSE) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)IS(vt0.c2))  WHEN vt0.c0 THEN ((vt0.c2) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN NULL THEN ((vt0.c0) IS TRUE) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1)IS(vt0.c2))  WHEN vt0.c0 THEN ((vt0.c2) IS FALSE) END) ORDER BY CASE WHEN NULL THEN ((vt0.c0) IS TRUE) END ASC;
SELECT * FROM vt0 WHERE ((((((((x'')AND(vt0.c0)))AND(vt0.c2))))>=(((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')AND(vt0.c0)))AND(vt0.c2))))>=(((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((x'')AND(vt0.c0)))AND(vt0.c2))))>=(((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')AND(vt0.c0)))AND(vt0.c2))))>=(((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((x'')AND(vt0.c0)))AND(vt0.c2))))>=(((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT * FROM vt0 WHERE ((NOT (x''))) ORDER BY (((vt0.c2 IN ()))||(((NULL) BETWEEN (0.5113515206117561) AND (vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN ()))||(((NULL) BETWEEN (0.5113515206117561) AND (vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (x''))) ORDER BY (((vt0.c2 IN ()))||(((NULL) BETWEEN (0.5113515206117561) AND (vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN ()))||(((NULL) BETWEEN (0.5113515206117561) AND (vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (x''))) ORDER BY (((vt0.c2 IN ()))||(((NULL) BETWEEN (0.5113515206117561) AND (vt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2) ISNULL) IN (vt0.c0, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN (vt0.c0, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2) ISNULL) IN (vt0.c0, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN (vt0.c0, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2) ISNULL) IN (vt0.c0, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST((vt0.c2 IN ()) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN NULL END)))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((vt0.c2 IN ()) IN ())  NULLS LAST, CASE WHEN ((vt0.c2) NOT NULL) THEN ((x'')GLOB(vt0.c2)) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c2, vt0.c1, vt0.c0) THEN (NOT (NULL)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN NULL END)))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 IN ()) IN ())  NULLS LAST, CASE WHEN ((vt0.c2) NOT NULL) THEN ((x'')GLOB(vt0.c2)) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c2, vt0.c1, vt0.c0) THEN (NOT (NULL)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN NULL END)))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((vt0.c2 IN ()) IN ())  NULLS LAST, CASE WHEN ((vt0.c2) NOT NULL) THEN ((x'')GLOB(vt0.c2)) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c2, vt0.c1, vt0.c0) THEN (NOT (NULL)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN NULL END)))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 IN ()) IN ())  NULLS LAST, CASE WHEN ((vt0.c2) NOT NULL) THEN ((x'')GLOB(vt0.c2)) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c2, vt0.c1, vt0.c0) THEN (NOT (NULL)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(CASE vt0.c0  WHEN vt0.c1 THEN NULL END)))AND(CAST(vt0.c1 AS BLOB)))) ORDER BY ((vt0.c2 IN ()) IN ())  NULLS LAST, CASE WHEN ((vt0.c2) NOT NULL) THEN ((x'')GLOB(vt0.c2)) WHEN DATETIME(vt0.c1, vt0.c0, vt0.c2, vt0.c1, vt0.c0) THEN (NOT (NULL)) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)) AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)) AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CAST(((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c1)) COLLATE RTRIM) ORDER BY '988108723', ((CAST(vt0.c1 AS INTEGER))&((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)&(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY '988108723', ((CAST(vt0.c1 AS INTEGER))&((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c1)) COLLATE RTRIM) ORDER BY '988108723', ((CAST(vt0.c1 AS INTEGER))&((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)&(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY '988108723', ((CAST(vt0.c1 AS INTEGER))&((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)&(vt0.c1)) COLLATE RTRIM) ORDER BY '988108723', ((CAST(vt0.c1 AS INTEGER))&((vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((UPPER(0.686804964798414))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<>((UPPER(0.686804964798414))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c2 AS REAL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((UPPER(0.686804964798414))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c2 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<>((UPPER(0.686804964798414))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c2 AS REAL))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((UPPER(0.686804964798414))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))GLOB(CAST(vt0.c2 AS REAL))) DESC;
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c2)) IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c2)) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)/(vt0.c2)) END, ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((x'46ca')AND(vt0.c1)))AND(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c2)) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)/(vt0.c2)) END, ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((x'46ca')AND(vt0.c1)))AND(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c2)) IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c2)) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)/(vt0.c2)) END, ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((x'46ca')AND(vt0.c1)))AND(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c2)) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)/(vt0.c2)) END, ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((x'46ca')AND(vt0.c1)))AND(vt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c2)) IN ())) ORDER BY CASE WHEN (NOT (vt0.c1)) THEN ((vt0.c0) NOT NULL) WHEN (NOT (vt0.c2)) THEN (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) WHEN (- (vt0.c0)) THEN vt0.c0 ELSE ((vt0.c1)/(vt0.c2)) END, ((((vt0.c0)LIKE(vt0.c1))) BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((x'46ca')AND(vt0.c1)))AND(vt0.c2)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((x'')AND(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1 COLLATE BINARY))) ORDER BY CASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)LIKE(0Xfffffffffd9d4c33))) AND (((vt0.c1)%(vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST, CASE WHEN ((vt0.c0)*(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, (CAST(vt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)LIKE(0xfffffffffd9d4c33))) AND (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC  NULLS LAST, CASE WHEN ((vt0.c0)*(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, (CAST(vt0.c2 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)LIKE(0Xfffffffffd9d4c33))) AND (((vt0.c1)%(vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST, CASE WHEN ((vt0.c0)*(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, (CAST(vt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)LIKE(0xfffffffffd9d4c33))) AND (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC  NULLS LAST, CASE WHEN ((vt0.c0)*(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, (CAST(vt0.c2 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2) ISNULL)) BETWEEN (((vt0.c1)LIKE(0Xfffffffffd9d4c33))) AND (((vt0.c1)%(vt0.c0))))) ORDER BY vt0.c2 ASC  NULLS LAST, CASE WHEN ((vt0.c0)*(vt0.c2)) THEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)) END, (CAST(vt0.c2 AS REAL) IN ());
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)/(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 END)/(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)/(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 END)/(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END)/(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY (((((('tlV&A')AND(x'e875')))AND(vt0.c0)))IS(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))) DESC  NULLS FIRST, ABS(DISTINCT ((vt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((((('tlV&A')AND(x'e875')))AND(vt0.c0)))IS(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))) DESC  NULLS FIRST, ABS(DISTINCT ((vt0.c1) NOTNULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY (((((('tlV&A')AND(x'e875')))AND(vt0.c0)))IS(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))) DESC  NULLS FIRST, ABS(DISTINCT ((vt0.c1) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY (((((('tlV&A')AND(x'e875')))AND(vt0.c0)))IS(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))) DESC  NULLS FIRST, ABS(DISTINCT ((vt0.c1) NOTNULL)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) ORDER BY (((((('tlV&A')AND(x'e875')))AND(vt0.c0)))IS(((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)))) DESC  NULLS FIRST, ABS(DISTINCT ((vt0.c1) NOTNULL)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c2) ISNULL))>(((vt0.c2)OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) ISNULL))>(((vt0.c2)OR(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c2) ISNULL))>(((vt0.c2)OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) ISNULL))>(((vt0.c2)OR(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c2) ISNULL))>(((vt0.c2)OR(vt0.c2))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)<((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)<((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)<((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM)<((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)<((vt0.c2 IN ())))) ORDER BY vt0.c1;
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(((vt0.c2)>=(vt0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)>=(vt0.c2)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(((vt0.c2)>=(vt0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)>=(vt0.c2)) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(((vt0.c2)>=(vt0.c2)) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (+ (SQLITE_COMPILEOPTION_GET(vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (+ (SQLITE_COMPILEOPTION_GET(vt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (+ (SQLITE_COMPILEOPTION_GET(vt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (+ (SQLITE_COMPILEOPTION_GET(vt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (+ (SQLITE_COMPILEOPTION_GET(vt0.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE 0.4569408612561119  WHEN (vt0.c2 IN (vt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS FIRST, ((((((((CAST(vt0.c1 AS INTEGER))OR(((0.3435337623996162)%(vt0.c0)))))OR(((vt0.c2)%(vt0.c2)))))AND(((((vt0.c2)AND(vt0.c1)))AND('')))))OR(SQLITE_SOURCE_ID())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.4569408612561119  WHEN (vt0.c2 IN (vt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS FIRST, ((((((((CAST(vt0.c1 AS INTEGER))OR(((0.3435337623996162)%(vt0.c0)))))OR(((vt0.c2)%(vt0.c2)))))AND(((((vt0.c2)AND(vt0.c1)))AND('')))))OR(SQLITE_SOURCE_ID())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE 0.4569408612561119  WHEN (vt0.c2 IN (vt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS FIRST, ((((((((CAST(vt0.c1 AS INTEGER))OR(((0.3435337623996162)%(vt0.c0)))))OR(((vt0.c2)%(vt0.c2)))))AND(((((vt0.c2)AND(vt0.c1)))AND('')))))OR(SQLITE_SOURCE_ID())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE 0.4569408612561119  WHEN (vt0.c2 IN (vt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS FIRST, ((((((((CAST(vt0.c1 AS INTEGER))OR(((0.3435337623996162)%(vt0.c0)))))OR(((vt0.c2)%(vt0.c2)))))AND(((((vt0.c2)AND(vt0.c1)))AND('')))))OR(SQLITE_SOURCE_ID())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY CASE 0.4569408612561119  WHEN (vt0.c2 IN (vt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END  NULLS FIRST, ((((((((CAST(vt0.c1 AS INTEGER))OR(((0.3435337623996162)%(vt0.c0)))))OR(((vt0.c2)%(vt0.c2)))))AND(((((vt0.c2)AND(vt0.c1)))AND('')))))OR(SQLITE_SOURCE_ID())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))=(CAST(vt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)&(vt0.c0)))OR(x'')))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((x'' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))=(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)&(vt0.c0)))OR(x'')))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((x'' IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))=(CAST(vt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)&(vt0.c0)))OR(x'')))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((x'' IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ()))=(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)&(vt0.c0)))OR(x'')))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((x'' IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2 IN ()))=(CAST(vt0.c2 AS REAL)))) ORDER BY ((((((((((vt0.c0)&(vt0.c0)))OR(x'')))AND(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)))))OR((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((x'' IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)||(vt0.c1)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(HEX(vt0.c2)))) ORDER BY CAST((('')||(NULL)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)||(vt0.c1)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(HEX(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((('')||(NULL)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)||(vt0.c1)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(HEX(vt0.c2)))) ORDER BY CAST((('')||(NULL)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)||(vt0.c1)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(HEX(vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((('')||(NULL)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)||(vt0.c1)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST(vt0.c1 AS BLOB))))OR(HEX(vt0.c2)))) ORDER BY CAST((('')||(NULL)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(NULL AS TEXT)))<((vt0.c0)))) ORDER BY ((((vt0.c2) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS TEXT)))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(NULL AS TEXT)))<((vt0.c0)))) ORDER BY ((((vt0.c2) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(NULL AS TEXT)))<((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(NULL AS TEXT)))<((vt0.c0)))) ORDER BY ((((vt0.c2) ISNULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c1)) DESC;
SELECT ALL * FROM vt0 WHERE ((((('-1132882276')AND(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND ('0.9793598244325831'))) ORDER BY ((((x'') ISNULL))OR(CAST('-1365074218' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((('-1132882276')AND(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND ('0.9793598244325831'))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'') ISNULL))OR(CAST('-1365074218' AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((('-1132882276')AND(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND ('0.9793598244325831'))) ORDER BY ((((x'') ISNULL))OR(CAST('-1365074218' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((('-1132882276')AND(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND ('0.9793598244325831'))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'') ISNULL))OR(CAST('-1365074218' AS TEXT))));
SELECT ALL * FROM vt0 WHERE ((((('-1132882276')AND(vt0.c2))) BETWEEN ((vt0.c0 IN ())) AND ('0.9793598244325831'))) ORDER BY ((((x'') ISNULL))OR(CAST('-1365074218' AS TEXT)));
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN 'CO' THEN (((vt0.c0))<>((vt0.c1))) WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)) THEN (- ('')) WHEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) THEN ((-1379945042)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN 'CO' THEN (((vt0.c0))<>((vt0.c1))) WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)) THEN (- ('')) WHEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) THEN ((-1379945042)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN 'CO' THEN (((vt0.c0))<>((vt0.c1))) WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)) THEN (- ('')) WHEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) THEN ((-1379945042)IS(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN 'CO' THEN (((vt0.c0))<>((vt0.c1))) WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)) THEN (- ('')) WHEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) THEN ((-1379945042)IS(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN 'CO' THEN (((vt0.c0))<>((vt0.c1))) WHEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)) THEN (- ('')) WHEN ((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) THEN ((-1379945042)IS(vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE (((x'' COLLATE RTRIM) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0)OR(vt0.c1)), x'', (vt0.c1 IN ()), ((vt0.c2) BETWEEN (0.3980744477167585) AND (vt0.c2))))<>((((0Xffffffffdd58512c)IS(vt0.c2)), ((vt0.c1)-(vt0.c2)), (((vt0.c2, vt0.c0, '1592567418')) BETWEEN ((vt0.c2, x'20c6', vt0.c0)) AND ((vt0.c1, vt0.c0, NULL))), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0)OR(vt0.c1)), x'', (vt0.c1 IN ()), ((vt0.c2) BETWEEN (0.3980744477167585) AND (vt0.c2))))<>((((0Xffffffffdd58512c)IS(vt0.c2)), ((vt0.c1)-(vt0.c2)), (((vt0.c2, vt0.c0, '1592567418')) BETWEEN ((vt0.c2, x'20c6', vt0.c0)) AND ((vt0.c1, vt0.c0, NULL))), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(vt0.c2 AS INTEGER)))));
SELECT * FROM vt0 WHERE (((x'' COLLATE RTRIM) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0)OR(vt0.c1)), x'', (vt0.c1 IN ()), ((vt0.c2) BETWEEN (0.3980744477167585) AND (vt0.c2))))<>((((0Xffffffffdd58512c)IS(vt0.c2)), ((vt0.c1)-(vt0.c2)), (((vt0.c2, vt0.c0, '1592567418')) BETWEEN ((vt0.c2, x'20c6', vt0.c0)) AND ((vt0.c1, vt0.c0, NULL))), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0)OR(vt0.c1)), x'', (vt0.c1 IN ()), ((vt0.c2) BETWEEN (0.3980744477167585) AND (vt0.c2))))<>((((0Xffffffffdd58512c)IS(vt0.c2)), ((vt0.c1)-(vt0.c2)), (((vt0.c2, vt0.c0, '1592567418')) BETWEEN ((vt0.c2, x'20c6', vt0.c0)) AND ((vt0.c1, vt0.c0, NULL))), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(vt0.c2 AS INTEGER)))));
SELECT * FROM vt0 WHERE (((x'' COLLATE RTRIM) IS FALSE)) ORDER BY (((CAST(vt0.c0 AS INTEGER), ((vt0.c0)OR(vt0.c1)), x'', (vt0.c1 IN ()), ((vt0.c2) BETWEEN (0.3980744477167585) AND (vt0.c2))))<>((((0Xffffffffdd58512c)IS(vt0.c2)), ((vt0.c1)-(vt0.c2)), (((vt0.c2, vt0.c0, '1592567418')) BETWEEN ((vt0.c2, x'20c6', vt0.c0)) AND ((vt0.c1, vt0.c0, NULL))), ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c2)), CAST(vt0.c2 AS INTEGER))));
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c2  WHEN '-209073836' THEN x'' ELSE vt0.c2 END THEN LOWER(vt0.c0) ELSE '-110692065' END) ORDER BY vt0.c2, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)>(NULL)), (((vt0.c2)) BETWEEN ((((vt0.c2) IS TRUE))) AND (((NOT (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c2  WHEN '-209073836' THEN x'' ELSE vt0.c2 END THEN LOWER(vt0.c0) ELSE '-110692065' END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)>(NULL)), (((vt0.c2)) BETWEEN ((((vt0.c2) IS TRUE))) AND (((NOT (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c2  WHEN '-209073836' THEN x'' ELSE vt0.c2 END THEN LOWER(vt0.c0) ELSE '-110692065' END) ORDER BY vt0.c2, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)>(NULL)), (((vt0.c2)) BETWEEN ((((vt0.c2) IS TRUE))) AND (((NOT (vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c2  WHEN '-209073836' THEN x'' ELSE vt0.c2 END THEN LOWER(vt0.c0) ELSE '-110692065' END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)>(NULL)), (((vt0.c2)) BETWEEN ((((vt0.c2) IS TRUE))) AND (((NOT (vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CASE vt0.c2  WHEN '-209073836' THEN x'' ELSE vt0.c2 END THEN LOWER(vt0.c0) ELSE '-110692065' END) ORDER BY vt0.c2, ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)>(NULL)), (((vt0.c2)) BETWEEN ((((vt0.c2) IS TRUE))) AND (((NOT (vt0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (UNLIKELY(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END));
SELECT ALL * FROM vt0 WHERE ((((~ (0.8710620009797608))) BETWEEN (vt0.c2) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((((((vt0.c0)!=(vt0.c2)))AND(826022836)))AND(NULL))  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.8710620009797608))) BETWEEN (vt0.c2) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c2)))AND(826022836)))AND(NULL))  NULLS FIRST, vt0.c2);
SELECT ALL * FROM vt0 WHERE ((((~ (0.8710620009797608))) BETWEEN (vt0.c2) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((((((vt0.c0)!=(vt0.c2)))AND(826022836)))AND(NULL))  NULLS FIRST, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0.8710620009797608))) BETWEEN (vt0.c2) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c2)))AND(826022836)))AND(NULL))  NULLS FIRST, vt0.c2);
SELECT ALL * FROM vt0 WHERE ((((~ (0.8710620009797608))) BETWEEN (vt0.c2) AND (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY ((((((vt0.c0)!=(vt0.c2)))AND(826022836)))AND(NULL))  NULLS FIRST, vt0.c2;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c2) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST, vt0.c1 ASC, (((vt0.c1)LIKE(vt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST, vt0.c1 ASC, (((vt0.c1)LIKE(vt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c2) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST, vt0.c1 ASC, (((vt0.c1)LIKE(vt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST, vt0.c1 ASC, (((vt0.c1)LIKE(vt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS REAL)) ORDER BY ((vt0.c2) BETWEEN (x'') AND (vt0.c0)) COLLATE NOCASE  NULLS FIRST, CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST, vt0.c1 ASC, (((vt0.c1)LIKE(vt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT * FROM vt0 WHERE ((- (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (TRIM(vt0.c0))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (json_extract(vt0.c2, vt0.c2)) AND (CASE WHEN vt0.c1 THEN '839247667' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CASE vt0.c1  WHEN '?懔s' THEN vt0.c2 ELSE 'X2' END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) NOT BETWEEN (json_extract(vt0.c2, vt0.c2)) AND (CASE WHEN vt0.c1 THEN '839247667' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN '?懔s' THEN vt0.c2 ELSE 'X2' END COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c1))) NOT BETWEEN (json_extract(vt0.c2, vt0.c2)) AND (CASE WHEN vt0.c1 THEN '839247667' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CASE vt0.c1  WHEN '?懔s' THEN vt0.c2 ELSE 'X2' END COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c1))) NOT BETWEEN (json_extract(vt0.c2, vt0.c2)) AND (CASE WHEN vt0.c1 THEN '839247667' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN '?懔s' THEN vt0.c2 ELSE 'X2' END COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c2 AS REAL))AND((+ (vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c2 AS REAL))AND((+ (vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c2 AS REAL))AND((+ (vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c2 AS REAL))AND((+ (vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c2 AS REAL))AND((+ (vt0.c1)))))AND(CAST(vt0.c2 AS NUMERIC))))OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END)>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((('I9Er垳A')AND(vt0.c1)))AND(vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'' COLLATE BINARY)) AND ((vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END, NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((('I9Er垳A')AND(vt0.c1)))AND(vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'' COLLATE BINARY)) AND ((vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END, NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((('I9Er垳A')AND(vt0.c1)))AND(vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'' COLLATE BINARY)) AND ((vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END, NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((('I9Er垳A')AND(vt0.c1)))AND(vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'' COLLATE BINARY)) AND ((vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END, NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((((('I9Er垳A')AND(vt0.c1)))AND(vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, x'' COLLATE BINARY)) AND ((vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END, NULL))));
SELECT * FROM vt0 WHERE (((vt0.c0)&((~ (vt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)&((~ (vt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)&((~ (vt0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (COALESCE(vt0.c2, vt0.c2, NULL, x'')))) ORDER BY CAST((~ ('<蔲q8[<vw5')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (COALESCE(vt0.c2, vt0.c2, NULL, x'')))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ ('<蔲q8[<vw5')) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (COALESCE(vt0.c2, vt0.c2, NULL, x'')))) ORDER BY CAST((~ ('<蔲q8[<vw5')) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (COALESCE(vt0.c2, vt0.c2, NULL, x'')))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ ('<蔲q8[<vw5')) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (((vt0.c0) IS TRUE)) AND (COALESCE(vt0.c2, vt0.c2, NULL, x'')))) ORDER BY CAST((~ ('<蔲q8[<vw5')) AS TEXT);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2 COLLATE RTRIM))  NULLS LAST, ((((+ (-2.09073836E8))))!=((((vt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2 COLLATE RTRIM))  NULLS LAST, ((((+ (-2.09073836E8))))!=((((vt0.c0) NOTNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2 COLLATE RTRIM))  NULLS LAST, ((((+ (-2.09073836E8))))!=((((vt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2 COLLATE RTRIM))  NULLS LAST, ((((+ (-2.09073836E8))))!=((((vt0.c0) NOTNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END) NOT NULL)) ORDER BY ((((vt0.c0)AND(vt0.c1)))AND(vt0.c2 COLLATE RTRIM))  NULLS LAST, ((((+ (-2.09073836E8))))!=((((vt0.c0) NOTNULL)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (HEX((((vt0.c1))==((NULL))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c1))==((NULL))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (HEX((((vt0.c1))==((NULL))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c1))==((NULL))))) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (HEX((((vt0.c1))==((NULL))))) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'17b7') ORDER BY CAST(((vt0.c1) ISNULL) AS BLOB) DESC, (((((vt0.c1)|(vt0.c0))))<(((~ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'17b7') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS BLOB) DESC, (((((vt0.c1)|(vt0.c0))))<(((~ (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'17b7') ORDER BY CAST(((vt0.c1) ISNULL) AS BLOB) DESC, (((((vt0.c1)|(vt0.c0))))<(((~ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'17b7') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) ISNULL) AS BLOB) DESC, (((((vt0.c1)|(vt0.c0))))<(((~ (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'17b7') ORDER BY CAST(((vt0.c1) ISNULL) AS BLOB) DESC, (((((vt0.c1)|(vt0.c0))))<(((~ (vt0.c0))))) ASC;
SELECT * FROM vt0 WHERE (((0X1dd577f6)|(vt0.c0)) COLLATE BINARY) ORDER BY ((x'')LIKE(((NULL)>=(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X1dd577f6)|(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((x'')LIKE(((NULL)>=(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((0X1dd577f6)|(vt0.c0)) COLLATE BINARY) ORDER BY ((x'')LIKE(((NULL)>=(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0X1dd577f6)|(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((x'')LIKE(((NULL)>=(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((0X1dd577f6)|(vt0.c0)) COLLATE BINARY) ORDER BY ((x'')LIKE(((NULL)>=(vt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((+ ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ORDER BY LIKELIHOOD(DISTINCT '-2024273997', 0.9827925647116391) ASC  NULLS FIRST, ((((((vt0.c1)AND(-1.379945042E9)))OR(vt0.c2))) BETWEEN (TYPEOF(vt0.c0)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST, CASE LIKELY(DISTINCT vt0.c2)  WHEN CAST(vt0.c1 AS REAL) THEN 'j8{' END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT '-2024273997', 0.9827925647116391) ASC  NULLS FIRST, ((((((vt0.c1)AND(-1.379945042E9)))OR(vt0.c2))) BETWEEN (TYPEOF(vt0.c0)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST, CASE LIKELY(DISTINCT vt0.c2)  WHEN CAST(vt0.c1 AS REAL) THEN 'j8{' END);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ORDER BY LIKELIHOOD(DISTINCT '-2024273997', 0.9827925647116391) ASC  NULLS FIRST, ((((((vt0.c1)AND(-1.379945042E9)))OR(vt0.c2))) BETWEEN (TYPEOF(vt0.c0)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST, CASE LIKELY(DISTINCT vt0.c2)  WHEN CAST(vt0.c1 AS REAL) THEN 'j8{' END;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(DISTINCT '-2024273997', 0.9827925647116391) ASC  NULLS FIRST, ((((((vt0.c1)AND(-1.379945042E9)))OR(vt0.c2))) BETWEEN (TYPEOF(vt0.c0)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST, CASE LIKELY(DISTINCT vt0.c2)  WHEN CAST(vt0.c1 AS REAL) THEN 'j8{' END);
SELECT * FROM vt0 WHERE ((+ ((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))))) ORDER BY LIKELIHOOD(DISTINCT '-2024273997', 0.9827925647116391) ASC  NULLS FIRST, ((((((vt0.c1)AND(-1.379945042E9)))OR(vt0.c2))) BETWEEN (TYPEOF(vt0.c0)) AND (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))  NULLS FIRST, CASE LIKELY(DISTINCT vt0.c2)  WHEN CAST(vt0.c1 AS REAL) THEN 'j8{' END;
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c1)AND((((vt0.c2))!=((vt0.c2))))))OR((vt0.c1 IN ()))))OR('0.11019573152121387')))AND(((vt0.c1)IS(352942758)))))AND(UNLIKELY(vt0.c0))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY (+ ((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND((((vt0.c2))!=((vt0.c2))))))OR((vt0.c1 IN ()))))OR('0.11019573152121387')))AND(((vt0.c1)IS(352942758)))))AND(UNLIKELY(vt0.c0))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c1)AND((((vt0.c2))!=((vt0.c2))))))OR((vt0.c1 IN ()))))OR('0.11019573152121387')))AND(((vt0.c1)IS(352942758)))))AND(UNLIKELY(vt0.c0))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY (+ ((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c1)AND((((vt0.c2))!=((vt0.c2))))))OR((vt0.c1 IN ()))))OR('0.11019573152121387')))AND(((vt0.c1)IS(352942758)))))AND(UNLIKELY(vt0.c0))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c1)AND((((vt0.c2))!=((vt0.c2))))))OR((vt0.c1 IN ()))))OR('0.11019573152121387')))AND(((vt0.c1)IS(352942758)))))AND(UNLIKELY(vt0.c0))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))) ORDER BY (+ ((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c1)) IN ())) ORDER BY (((((((((vt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ());
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) NOT NULL))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) NOT NULL))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((vt0.c1) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) NOT NULL))) ORDER BY ((vt0.c0 COLLATE NOCASE) ISNULL);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY IFNULL(((vt0.c1)IS(vt0.c2)), CAST(vt0.c2 AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1)IS(vt0.c2)), CAST(vt0.c2 AS TEXT)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY IFNULL(((vt0.c1)IS(vt0.c2)), CAST(vt0.c2 AS TEXT)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(((vt0.c1)IS(vt0.c2)), CAST(vt0.c2 AS TEXT)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY IFNULL(((vt0.c1)IS(vt0.c2)), CAST(vt0.c2 AS TEXT)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0))<=((vt0.c2))) IN ()) ASC, '-1416822928' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c2))) IN ()) ASC, '-1416822928' DESC);
SELECT * FROM vt0 WHERE ((- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0))<=((vt0.c2))) IN ()) ASC, '-1416822928' DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c2))) IN ()) ASC, '-1416822928' DESC);
SELECT * FROM vt0 WHERE ((- (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY ((((vt0.c0))<=((vt0.c2))) IN ()) ASC, '-1416822928' DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((NULL)/(vt0.c1)))OR('HQᥦ')))OR((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, '&?', vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c2))))))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)/(vt0.c1)))OR('HQᥦ')))OR((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, '&?', vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c2))))))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((NULL)/(vt0.c1)))OR('HQᥦ')))OR((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, '&?', vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c2))))))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)/(vt0.c1)))OR('HQᥦ')))OR((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, '&?', vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c2))))))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((NULL)/(vt0.c1)))OR('HQᥦ')))OR((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c2, '&?', vt0.c1)) AND ((vt0.c2, vt0.c1, vt0.c2))))))AND(vt0.c2 COLLATE NOCASE)))OR((vt0.c1 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||((vt0.c2 IN (NULL))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)+(((vt0.c1)!=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0)))||((vt0.c2 IN (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)+(((vt0.c1)!=(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||((vt0.c2 IN (NULL))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)+(((vt0.c1)!=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0)))||((vt0.c2 IN (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)+(((vt0.c1)!=(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))||((vt0.c2 IN (NULL))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)+(((vt0.c1)!=(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL))))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (((vt0.c0 IN (vt0.c2, vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c2, vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (((vt0.c0 IN (vt0.c2, vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c2, vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (((vt0.c0 IN (vt0.c2, vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (0.2590427948877102);
SELECT SUM(count) FROM (SELECT ALL ((0.2590427948877102) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.2590427948877102);
SELECT SUM(count) FROM (SELECT ALL ((0.2590427948877102) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.2590427948877102);
SELECT COUNT(*) FROM vt0 WHERE ('^噚');
SELECT SUM(count) FROM (SELECT ALL (('^噚') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('^噚');
SELECT SUM(count) FROM (SELECT ALL (('^噚') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('^噚');
SELECT * FROM vt0 WHERE (670727037) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(x'' COLLATE NOCASE)))AND(((vt0.c2)AND(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((670727037) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(x'' COLLATE NOCASE)))AND(((vt0.c2)AND(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (670727037) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(x'' COLLATE NOCASE)))AND(((vt0.c2)AND(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((670727037) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(x'' COLLATE NOCASE)))AND(((vt0.c2)AND(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (670727037) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(x'' COLLATE NOCASE)))AND(((vt0.c2)AND(vt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c2 AS BLOB)) AND (LIKE(vt0.c1, vt0.c0, '0'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c2 AS BLOB)) AND (LIKE(vt0.c1, vt0.c0, '0')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c2 AS BLOB)) AND (LIKE(vt0.c1, vt0.c0, '0'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c2 AS BLOB)) AND (LIKE(vt0.c1, vt0.c0, '0')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (CAST(vt0.c2 AS BLOB)) AND (LIKE(vt0.c1, vt0.c0, '0'))));
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))*(json_quote('Q琞MF')))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))*(json_quote('Q琞MF')))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))*(json_quote('Q琞MF')))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))*(json_quote('Q琞MF')))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE) DESC);
SELECT ALL * FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))*(json_quote('Q琞MF')))) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE) DESC;
SELECT * FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((x'') BETWEEN (vt0.c0) AND (vt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c1)<<(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<(vt0.c1))) IS TRUE) ASC);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c1)<<(vt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<(vt0.c1))) IS TRUE) ASC);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c1)<<(vt0.c1))) IS TRUE) ASC;
SELECT * FROM vt0 WHERE ((((((0.1376451414628359, vt0.c0, vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.1376451414628359, vt0.c0, vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.1376451414628359, vt0.c0, vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.1376451414628359, vt0.c0, vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.1376451414628359, vt0.c0, vt0.c0, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1)))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT vt0.c1) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LIKELY(DISTINCT vt0.c1) AS TEXT));
SELECT * FROM vt0 WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)<=(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY ((+ (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY ((+ (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ())) ORDER BY ((+ (vt0.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((vt0.c2 IN (vt0.c1, vt0.c1))))) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c1 END)>=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/((vt0.c2 IN (vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c1 END)>=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((vt0.c2 IN (vt0.c1, vt0.c1))))) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c1 END)>=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)/((vt0.c2 IN (vt0.c1, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c1 END)>=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((vt0.c2 IN (vt0.c1, vt0.c1))))) ORDER BY ((CASE WHEN vt0.c2 THEN vt0.c1 END)>=((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))<=((vt0.c2 IN ())))) ORDER BY ((CASE NULL  WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c2)))<=((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))<=((vt0.c2 IN ())))) ORDER BY ((CASE NULL  WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c2)))<=((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))<=((vt0.c2 IN ())))) ORDER BY ((CASE NULL  WHEN vt0.c1 THEN vt0.c1 END) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE '489100545'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((((vt0.c2)-(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '489100545'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)-(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE '489100545'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((((vt0.c2)-(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '489100545'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)-(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE '489100545'  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS TEXT)) ORDER BY ((((vt0.c2)-(vt0.c0))) IS FALSE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)AND(0xffffffff96fb3cb8)))OR(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c2)AND(0Xffffffff96fb3cb8)))OR(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)AND(0xffffffff96fb3cb8)))OR(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c2)AND(0Xffffffff96fb3cb8)))OR(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)AND(0xffffffff96fb3cb8)))OR(vt0.c0)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE ((((0x258f49ac IN ())) NOT BETWEEN ((((NULL, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2)))) AND ((NOT (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)|(x'f6b5')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0X258f49ac IN ())) NOT BETWEEN ((((NULL, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2)))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)|(x'f6b5')))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0x258f49ac IN ())) NOT BETWEEN ((((NULL, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2)))) AND ((NOT (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)|(x'f6b5')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0X258f49ac IN ())) NOT BETWEEN ((((NULL, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2)))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)|(x'f6b5')))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0x258f49ac IN ())) NOT BETWEEN ((((NULL, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2)))) AND ((NOT (vt0.c1))))) ORDER BY ((vt0.c0 COLLATE RTRIM)IS(((vt0.c1)|(x'f6b5')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)), (((vt0.c1))<=((vt0.c2))), '%옾'))>=(((((vt0.c0))>((vt0.c0))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, (NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(vt0.c0)), (((vt0.c1))<=((vt0.c2))), '%옾'))>=(((((vt0.c0))>((vt0.c0))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)), (((vt0.c1))<=((vt0.c2))), '%옾'))>=(((((vt0.c0))>((vt0.c0))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, (NOT (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(vt0.c0)), (((vt0.c1))<=((vt0.c2))), '%옾'))>=(((((vt0.c0))>((vt0.c0))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)|(vt0.c0)), (((vt0.c1))<=((vt0.c2))), '%옾'))>=(((((vt0.c0))>((vt0.c0))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, (NOT (vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (-1.144681404E9) ORDER BY ((vt0.c1)LIKE((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((-1.144681404E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE((+ (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (-1.144681404E9) ORDER BY ((vt0.c1)LIKE((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((-1.144681404E9) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)LIKE((+ (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (-1.144681404E9) ORDER BY ((vt0.c1)LIKE((+ (vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL)) NOT BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((vt0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL)) NOT BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((vt0.c0)OR(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL)) NOT BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((vt0.c0)OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) ISNULL)) NOT BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((vt0.c0)OR(x''))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c2) ISNULL)) NOT BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) AND (((vt0.c0)OR(x'')))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))<=(MIN(vt0.c1, vt0.c1)))) ORDER BY (- (CAST(vt0.c2 AS TEXT))) ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)OR(json_object(vt0.c1, NULL))) DESC  NULLS LAST, COALESCE(DISTINCT ((vt0.c2) NOTNULL), CAST(vt0.c2 AS REAL), CAST(vt0.c2 AS TEXT), vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))<=(MIN(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c2 AS TEXT))) ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)OR(json_object(vt0.c1, NULL))) DESC  NULLS LAST, COALESCE(DISTINCT ((vt0.c2) NOTNULL), CAST(vt0.c2 AS REAL), CAST(vt0.c2 AS TEXT), vt0.c0) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))<=(MIN(vt0.c1, vt0.c1)))) ORDER BY (- (CAST(vt0.c2 AS TEXT))) ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)OR(json_object(vt0.c1, NULL))) DESC  NULLS LAST, COALESCE(DISTINCT ((vt0.c2) NOTNULL), CAST(vt0.c2 AS REAL), CAST(vt0.c2 AS TEXT), vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))<=(MIN(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c2 AS TEXT))) ASC  NULLS LAST, ((vt0.c1 COLLATE BINARY)OR(json_object(vt0.c1, NULL))) DESC  NULLS LAST, COALESCE(DISTINCT ((vt0.c2) NOTNULL), CAST(vt0.c2 AS REAL), CAST(vt0.c2 AS TEXT), vt0.c0) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((vt0.c0)||(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) IS TRUE));
SELECT * FROM vt0 WHERE ((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c2)%(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c2)%(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c2)%(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c2)%(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c2)%(vt0.c1))))));
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))>=(vt0.c1 COLLATE NOCASE))) ORDER BY CHANGES() ASC, (NOT (0xffffffffb3996a79)) DESC, ((vt0.c0)<(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))>=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() ASC, (NOT (0xffffffffb3996a79)) DESC, ((vt0.c0)<(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))>=(vt0.c1 COLLATE NOCASE))) ORDER BY CHANGES() ASC, (NOT (0xffffffffb3996a79)) DESC, ((vt0.c0)<(vt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))>=(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() ASC, (NOT (0xffffffffb3996a79)) DESC, ((vt0.c0)<(vt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))>=(vt0.c1 COLLATE NOCASE))) ORDER BY CHANGES() ASC, (NOT (0xffffffffb3996a79)) DESC, ((vt0.c0)<(vt0.c2)) COLLATE RTRIM;
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL))IS(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))IS(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL))IS(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))IS(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) ISNULL))IS(vt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE ((NULL IN (((vt0.c2)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt0.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NULL IN (((vt0.c2)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NULL IN (((vt0.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NULL IN (((vt0.c2)%(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0, (((vt0.c2)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))) AND ((((vt0.c2)LIKE(vt0.c1))))) ASC, (+ (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c2)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))) AND ((((vt0.c2)LIKE(vt0.c1))))) ASC, (+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0, (((vt0.c2)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))) AND ((((vt0.c2)LIKE(vt0.c1))))) ASC, (+ (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c2)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))) AND ((((vt0.c2)LIKE(vt0.c1))))) ASC, (+ (vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY vt0.c0, (((vt0.c2)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))) AND ((((vt0.c2)LIKE(vt0.c1))))) ASC, (+ (vt0.c1)) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE ((~ ('0.5657874586863035'))) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR('')))OR(((vt0.c0)>=(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ ('0.5657874586863035'))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR('')))OR(((vt0.c0)>=(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2)&(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ ('0.5657874586863035'))) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR('')))OR(((vt0.c0)>=(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ ('0.5657874586863035'))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR('')))OR(((vt0.c0)>=(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2)&(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ ('0.5657874586863035'))) ORDER BY ((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR('')))OR(((vt0.c0)>=(vt0.c1)))))OR(vt0.c0 COLLATE NOCASE)))AND(((vt0.c2)&(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))==(('-1952687508'))))=(((0.9018358430387051) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=(('-1952687508'))))=(((0.9018358430387051) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))==(('-1952687508'))))=(((0.9018358430387051) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))=(('-1952687508'))))=(((0.9018358430387051) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))==(('-1952687508'))))=(((0.9018358430387051) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))  WHEN (((vt0.c2))>((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ABS(DISTINCT vt0.c2) THEN ((vt0.c0)<<(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (- (((vt0.c2)>>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))  WHEN (((vt0.c2))>((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ABS(DISTINCT vt0.c2) THEN ((vt0.c0)<<(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c2)>>(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))  WHEN (((vt0.c2))>((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ABS(DISTINCT vt0.c2) THEN ((vt0.c0)<<(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (- (((vt0.c2)>>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))  WHEN (((vt0.c2))>((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ABS(DISTINCT vt0.c2) THEN ((vt0.c0)<<(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c2)>>(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))  WHEN (((vt0.c2))>((vt0.c0))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN ABS(DISTINCT vt0.c2) THEN ((vt0.c0)<<(vt0.c2)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (- (((vt0.c2)>>(vt0.c2))));
SELECT * FROM vt0 WHERE ((((NOT (''))) NOT BETWEEN (((vt0.c2)!=(vt0.c2))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((NOT (''))) NOT BETWEEN (((vt0.c2)!=(vt0.c2))) AND (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((NOT (''))) NOT BETWEEN (((vt0.c2)!=(vt0.c2))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((NOT (''))) NOT BETWEEN (((vt0.c2)!=(vt0.c2))) AND (vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((NOT (''))) NOT BETWEEN (((vt0.c2)!=(vt0.c2))) AND (vt0.c2 COLLATE NOCASE))) ORDER BY CAST(vt0.c1 AS BLOB) COLLATE NOCASE;
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c2, vt0.c2, NULL, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c2, vt0.c2, NULL, vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c2, vt0.c2, NULL, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c2, vt0.c2, NULL, vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c2, vt0.c2, NULL, vt0.c1)) IS FALSE)) ORDER BY ((vt0.c0)IS NOT(vt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.421067724722353)))OR(vt0.c0)))IS(((vt0.c1) NOTNULL)))) ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (0.9588513616649694) AND ((NOT (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ())) ISNULL) DESC  NULLS FIRST, CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.421067724722353)))OR(vt0.c0)))IS(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (0.9588513616649694) AND ((NOT (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ())) ISNULL) DESC  NULLS FIRST, CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.421067724722353)))OR(vt0.c0)))IS(((vt0.c1) NOTNULL)))) ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (0.9588513616649694) AND ((NOT (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ())) ISNULL) DESC  NULLS FIRST, CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(0.421067724722353)))OR(vt0.c0)))IS(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (0.9588513616649694) AND ((NOT (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ())) ISNULL) DESC  NULLS FIRST, CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(0.421067724722353)))OR(vt0.c0)))IS(((vt0.c1) NOTNULL)))) ORDER BY ((((vt0.c2)<=(vt0.c0))) NOT BETWEEN (0.9588513616649694) AND ((NOT (vt0.c1))))  NULLS LAST, (((vt0.c1 IN ())) ISNULL) DESC  NULLS FIRST, CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC;
SELECT * FROM vt0 WHERE ((~ ((('a⵮.*Q')IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('a⵮.*Q')IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((('a⵮.*Q')IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('a⵮.*Q')IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((('a⵮.*Q')IS(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY (((~ (vt0.c1)))=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE)) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1)))==(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY (((~ (vt0.c1)))=(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS TRUE)) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1)))==(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS TRUE)) NOT BETWEEN (vt0.c2) AND (CAST(vt0.c1 AS TEXT)))) ORDER BY (((~ (vt0.c1)))=(vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c0)<(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC  NULLS FIRST, ((COALESCE(DISTINCT vt0.c2, x'59a37442', NULL, vt0.c1, vt0.c2, vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC  NULLS FIRST, ((COALESCE(DISTINCT vt0.c2, x'59a37442', NULL, vt0.c1, vt0.c2, vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC  NULLS FIRST, ((COALESCE(DISTINCT vt0.c2, x'59a37442', NULL, vt0.c1, vt0.c2, vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC  NULLS FIRST, ((COALESCE(DISTINCT vt0.c2, x'59a37442', NULL, vt0.c1, vt0.c2, vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (+ (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) ASC  NULLS FIRST, ((COALESCE(DISTINCT vt0.c2, x'59a37442', NULL, vt0.c1, vt0.c2, vt0.c1))LIKE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND ((CASE WHEN '[?' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 0Xffffffffca632ece END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND ((CASE WHEN '[?' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 0Xffffffffca632ece END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND ((CASE WHEN '[?' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 0Xffffffffca632ece END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND ((CASE WHEN '[?' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 0Xffffffffca632ece END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND ((CASE WHEN '[?' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 0Xffffffffca632ece END))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c0)))IS NOT(((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ('0.717564342863695') ORDER BY ((((vt0.c0)-('-1482707548'))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c2)>>(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('0.717564342863695') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-('-1482707548'))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c2)>>(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE ('0.717564342863695') ORDER BY ((((vt0.c0)-('-1482707548'))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c2)>>(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (('0.717564342863695') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)-('-1482707548'))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c2)>>(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE ('0.717564342863695') ORDER BY ((((vt0.c0)-('-1482707548'))) BETWEEN ((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c2)>>(vt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((('-1557256350')) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-1557256350')) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((('-1557256350')) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-1557256350')) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((('-1557256350')) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '0.2815062358833379' WHEN vt0.c1 THEN vt0.c1 END) NOTNULL)) ORDER BY (- ('恐떮8>lcM')) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '0.2815062358833379' WHEN vt0.c1 THEN vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ('恐떮8>lcM')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '0.2815062358833379' WHEN vt0.c1 THEN vt0.c1 END) NOTNULL)) ORDER BY (- ('恐떮8>lcM')) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '0.2815062358833379' WHEN vt0.c1 THEN vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ('恐떮8>lcM')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN '0.2815062358833379' WHEN vt0.c1 THEN vt0.c1 END) NOTNULL)) ORDER BY (- ('恐떮8>lcM')) ASC;
SELECT ALL * FROM vt0 WHERE (LIKELY('') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY('') COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELY('') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LIKELY('') COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LIKELY('') COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)IS(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)IS(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)IS(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)IS(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2) ORDER BY (((vt0.c1)IS(vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)) DESC;
SELECT * FROM vt0 WHERE ('-1148284129') ORDER BY NULLIF(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), ((((((((vt0.c1)AND(-1751516356)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (('-1148284129') IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), ((((((((vt0.c1)AND(-1751516356)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))));
SELECT * FROM vt0 WHERE ('-1148284129') ORDER BY NULLIF(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), ((((((((vt0.c1)AND(-1751516356)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (('-1148284129') IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), ((((((((vt0.c1)AND(-1751516356)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2))));
SELECT * FROM vt0 WHERE ('-1148284129') ORDER BY NULLIF(DISTINCT ((vt0.c0)IS NOT(vt0.c0)), ((((((((vt0.c1)AND(-1751516356)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c2, (x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c2, (x'' IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c2, (x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c2, (x'' IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c2, (x'' IN ())));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (x'bc5e') ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)))  NULLS LAST, CAST((NOT (vt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((x'bc5e') IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)))  NULLS LAST, CAST((NOT (vt0.c2)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (x'bc5e') ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)))  NULLS LAST, CAST((NOT (vt0.c2)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((x'bc5e') IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)))  NULLS LAST, CAST((NOT (vt0.c2)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (x'bc5e') ORDER BY TRIM(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0)))  NULLS LAST, CAST((NOT (vt0.c2)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c2 AS NUMERIC)) BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('BO')), 0.1195094846788044  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS NUMERIC)) BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('BO')), 0.1195094846788044  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c2 AS NUMERIC)) BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('BO')), 0.1195094846788044  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS NUMERIC)) BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('BO')), 0.1195094846788044  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c2 AS NUMERIC)) BETWEEN (((vt0.c1)>=(vt0.c0))) AND ('BO')), 0.1195094846788044  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (json_remove(((vt0.c2)>=(vt0.c1)), ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), ((vt0.c2)!=(vt0.c2)), ((vt0.c1)>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c2)>=(vt0.c1)), ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), ((vt0.c2)<>(vt0.c2)), ((vt0.c1)>(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_remove(((vt0.c2)>=(vt0.c1)), ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), ((vt0.c2)!=(vt0.c2)), ((vt0.c1)>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((vt0.c2)>=(vt0.c1)), ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), ((vt0.c2)<>(vt0.c2)), ((vt0.c1)>(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_remove(((vt0.c2)>=(vt0.c1)), ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), ((vt0.c2)!=(vt0.c2)), ((vt0.c1)>(vt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<<(((vt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<<(((vt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<<(((vt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<<(((vt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<<(((vt0.c2)IS(vt0.c0)))));
SELECT * FROM vt0 WHERE (CASE 0.8377965573269353  WHEN UNLIKELY(DISTINCT vt0.c2) THEN (('Ox') NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c2)==(-2144375057)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.8377965573269353  WHEN UNLIKELY(DISTINCT vt0.c2) THEN (('Ox') NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c2)==(-2144375057)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0.8377965573269353  WHEN UNLIKELY(DISTINCT vt0.c2) THEN (('Ox') NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c2)==(-2144375057)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.8377965573269353  WHEN UNLIKELY(DISTINCT vt0.c2) THEN (('Ox') NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c2)==(-2144375057)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 0.8377965573269353  WHEN UNLIKELY(DISTINCT vt0.c2) THEN (('Ox') NOT BETWEEN (vt0.c0) AND (vt0.c2)) ELSE ((vt0.c2)==(-2144375057)) END);
SELECT * FROM vt0 WHERE (((UPPER(vt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c2)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UPPER(vt0.c2)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c2)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UPPER(vt0.c2)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c2 AS REAL)))) ORDER BY vt0.c1 ASC, vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, vt0.c2  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c2 AS REAL)))) ORDER BY vt0.c1 ASC, vt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC, vt0.c2  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c2 AS REAL)))) ORDER BY vt0.c1 ASC, vt0.c2  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY LIKELY(vt0.c1) COLLATE NOCASE DESC, ((((vt0.c2 IN ()), ((vt0.c0) IS FALSE), (vt0.c2 IN (vt0.c1))))>(((- (vt0.c1)), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c2, vt0.c0, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(vt0.c1) COLLATE NOCASE DESC, ((((vt0.c2 IN ()), ((vt0.c0) IS FALSE), (vt0.c2 IN (vt0.c1))))>(((- (vt0.c1)), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c2, vt0.c0, vt0.c0)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY LIKELY(vt0.c1) COLLATE NOCASE DESC, ((((vt0.c2 IN ()), ((vt0.c0) IS FALSE), (vt0.c2 IN (vt0.c1))))>(((- (vt0.c1)), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c2, vt0.c0, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(vt0.c1) COLLATE NOCASE DESC, ((((vt0.c2 IN ()), ((vt0.c0) IS FALSE), (vt0.c2 IN (vt0.c1))))>(((- (vt0.c1)), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c2, vt0.c0, vt0.c0)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY LIKELY(vt0.c1) COLLATE NOCASE DESC, ((((vt0.c2 IN ()), ((vt0.c0) IS FALSE), (vt0.c2 IN (vt0.c1))))>(((- (vt0.c1)), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)), (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c2, vt0.c0, vt0.c0)))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((('恐떮8>lcm' IN (vt0.c1)))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((('恐떮8>lcm' IN (vt0.c1)))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('恐떮8>lcm' IN (vt0.c1)))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((('恐떮8>lcm' IN (vt0.c1)))==(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('恐떮8>lcm' IN (vt0.c1)))=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (('rUF{' IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('rUF{' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (('rUF{' IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('rUF{' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (('rUF{' IN ()) COLLATE RTRIM) ORDER BY (((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((('462391272') BETWEEN (vt0.c1) AND (vt0.c1)))LIKE((vt0.c1 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=('0.0'))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((('462391272') BETWEEN (vt0.c1) AND (vt0.c1)))LIKE((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=('0.0'))) AND (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE ((((('462391272') BETWEEN (vt0.c1) AND (vt0.c1)))LIKE((vt0.c1 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=('0.0'))) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((('462391272') BETWEEN (vt0.c1) AND (vt0.c1)))LIKE((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=('0.0'))) AND (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE ((((('462391272') BETWEEN (vt0.c1) AND (vt0.c1)))LIKE((vt0.c1 IN ())))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN (((vt0.c0)>=('0.0'))) AND (vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7012878552347409);
SELECT SUM(count) FROM (SELECT ((0.7012878552347409) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7012878552347409);
SELECT SUM(count) FROM (SELECT ((0.7012878552347409) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7012878552347409);
SELECT * FROM vt0 WHERE (NULLIF((vt0.c2 IN ()), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF((vt0.c2 IN ()), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF((vt0.c2 IN ()), (vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF((vt0.c2 IN ()), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF((vt0.c2 IN ()), (vt0.c1 IN ())));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))-(((vt0.c0)&(vt0.c2))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))-(((vt0.c0)&(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))-(((vt0.c0)&(vt0.c2))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))-(((vt0.c0)&(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))-(((vt0.c0)&(vt0.c2))))) ORDER BY (((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c2) IS FALSE)) ISNULL)) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE (((((vt0.c2) IS FALSE)) ISNULL)) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) AS REAL));
SELECT * FROM vt0 WHERE (((((vt0.c2) IS FALSE)) ISNULL)) ORDER BY CAST(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)) AS REAL);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN -402199981 THEN vt0.c1 ELSE vt0.c2 END THEN (vt0.c2 IN ()) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN ((('b'))>((vt0.c2))) THEN vt0.c0 COLLATE BINARY WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)) THEN (- (vt0.c2)) WHEN CAST(vt0.c2 AS REAL) THEN (+ ('-501221153')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN -402199981 THEN vt0.c1 ELSE vt0.c2 END THEN (vt0.c2 IN ()) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN ((('b'))>((vt0.c2))) THEN vt0.c0 COLLATE BINARY WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)) THEN (- (vt0.c2)) WHEN CAST(vt0.c2 AS REAL) THEN (+ ('-501221153')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN -402199981 THEN vt0.c1 ELSE vt0.c2 END THEN (vt0.c2 IN ()) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN ((('b'))>((vt0.c2))) THEN vt0.c0 COLLATE BINARY WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)) THEN (- (vt0.c2)) WHEN CAST(vt0.c2 AS REAL) THEN (+ ('-501221153')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN -402199981 THEN vt0.c1 ELSE vt0.c2 END THEN (vt0.c2 IN ()) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN ((('b'))>((vt0.c2))) THEN vt0.c0 COLLATE BINARY WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)) THEN (- (vt0.c2)) WHEN CAST(vt0.c2 AS REAL) THEN (+ ('-501221153')) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN -402199981 THEN vt0.c1 ELSE vt0.c2 END THEN (vt0.c2 IN ()) WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c2)=(vt0.c1)) WHEN ((('b'))>((vt0.c2))) THEN vt0.c0 COLLATE BINARY WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c0)) THEN (- (vt0.c2)) WHEN CAST(vt0.c2 AS REAL) THEN (+ ('-501221153')) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(DISTINCT vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(ABS(DISTINCT vt0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN (((vt0.c0) NOT NULL)))) ORDER BY TYPEOF(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))), CASE WHEN x'' THEN (~ (vt0.c2)) ELSE ((vt0.c2)>>(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))), CASE WHEN x'' THEN (~ (vt0.c2)) ELSE ((vt0.c2)>>(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN (((vt0.c0) NOT NULL)))) ORDER BY TYPEOF(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))), CASE WHEN x'' THEN (~ (vt0.c2)) ELSE ((vt0.c2)>>(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))), CASE WHEN x'' THEN (~ (vt0.c2)) ELSE ((vt0.c2)>>(vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS REAL) IN (((vt0.c0) NOT NULL)))) ORDER BY TYPEOF(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0))), CASE WHEN x'' THEN (~ (vt0.c2)) ELSE ((vt0.c2)>>(vt0.c0)) END  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)==(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)==(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)==(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)==(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)==(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))));
SELECT * FROM vt0 WHERE ((NOT (0.254505307343882)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.254505307343882))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (0.254505307343882)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.254505307343882))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (0.254505307343882)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((NULL) BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, '' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((NULL) BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, '' DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((NULL) BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) ASC, '' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (1772622528);
SELECT SUM(count) FROM (SELECT ALL ((1772622528) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (1772622528);
SELECT SUM(count) FROM (SELECT ALL ((1772622528) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (1772622528);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(((((vt0.c2)AND(0.8476656687277072)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(((((vt0.c2)AND(0.8476656687277072)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(((((vt0.c2)AND(0.8476656687277072)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>=(((((vt0.c2)AND(0.8476656687277072)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)>=(((((vt0.c2)AND(0.8476656687277072)))OR(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2)))) ORDER BY SQLITE_COMPILEOPTION_GET(LOWER(DISTINCT vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(LOWER(DISTINCT vt0.c1))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2)))) ORDER BY SQLITE_COMPILEOPTION_GET(LOWER(DISTINCT vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(LOWER(DISTINCT vt0.c1))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c2)))) ORDER BY SQLITE_COMPILEOPTION_GET(LOWER(DISTINCT vt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY 0.5990087069491619  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS NUMERIC) IN (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY 0.5990087069491619  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY 0.5990087069491619  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS NUMERIC) IN (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY 0.5990087069491619  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c2 AS NUMERIC) IN (CAST(vt0.c1 AS INTEGER)))) ORDER BY 0.5990087069491619  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)||(vt0.c1)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)|(vt0.c0)))>(((vt0.c1)OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c0)))>(((vt0.c1)OR(vt0.c1)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)|(vt0.c0)))>(((vt0.c1)OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c0)))>(((vt0.c1)OR(vt0.c1)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<<((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)|(vt0.c0)))>(((vt0.c1)OR(vt0.c1))));
SELECT * FROM vt0 WHERE (TRIM(CASE NULL  WHEN NULL THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE NULL  WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CASE NULL  WHEN NULL THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE NULL  WHEN NULL THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CASE NULL  WHEN NULL THEN vt0.c0 END));
SELECT COUNT(*) FROM vt0 WHERE (2066968716) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((2066968716) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (2066968716) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((2066968716) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (2066968716) ORDER BY (((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1) IS FALSE)))) ORDER BY (vt0.c2 IN ()), ((NULL)IS(((vt0.c2) IS FALSE))) ASC, ((((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c2, vt0.c2, vt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 IN ()), ((NULL)IS(((vt0.c2) IS FALSE))) ASC, ((((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c2, vt0.c2, vt0.c2))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1) IS FALSE)))) ORDER BY (vt0.c2 IN ()), ((NULL)IS(((vt0.c2) IS FALSE))) ASC, ((((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c2, vt0.c2, vt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 IN ()), ((NULL)IS(((vt0.c2) IS FALSE))) ASC, ((((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c2, vt0.c2, vt0.c2))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((vt0.c1) IS FALSE)))) ORDER BY (vt0.c2 IN ()), ((NULL)IS(((vt0.c2) IS FALSE))) ASC, ((((vt0.c0, vt0.c1, vt0.c2))<=((vt0.c2, vt0.c2, vt0.c2))) IN ());
SELECT * FROM vt0 WHERE ((STRFTIME(vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c1) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c2)));
SELECT SUM(count) FROM (SELECT (((STRFTIME(vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c1) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((STRFTIME(vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c1) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c2)));
SELECT SUM(count) FROM (SELECT (((STRFTIME(vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c1) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((STRFTIME(vt0.c2, vt0.c0, vt0.c2, vt0.c0, vt0.c1) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)), vt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0)<(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0)<(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c0) NOTNULL)))) ORDER BY ((vt0.c0)<(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c1)AND(vt0.c1)))&(((vt0.c1)-(vt0.c2)))) DESC  NULLS LAST, (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) ASC  NULLS FIRST, (((((vt0.c0))<=((NULL)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c1)))&(((vt0.c1)-(vt0.c2)))) DESC  NULLS LAST, (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) ASC  NULLS FIRST, (((((vt0.c0))<=((NULL)))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c1)AND(vt0.c1)))&(((vt0.c1)-(vt0.c2)))) DESC  NULLS LAST, (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) ASC  NULLS FIRST, (((((vt0.c0))<=((NULL)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c1)))&(((vt0.c1)-(vt0.c2)))) DESC  NULLS LAST, (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) ASC  NULLS FIRST, (((((vt0.c0))<=((NULL)))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((((vt0.c1)AND(vt0.c1)))&(((vt0.c1)-(vt0.c2)))) DESC  NULLS LAST, (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) ASC  NULLS FIRST, (((((vt0.c0))<=((NULL)))) IS FALSE);
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'4dbb' THEN ((vt0.c2)>(vt0.c0)) WHEN vt0.c2 COLLATE RTRIM THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN ((vt0.c1)%(vt0.c1)) THEN ((vt0.c2)OR(vt0.c1)) ELSE CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END END) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1362210031' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'4dbb' THEN ((vt0.c2)>(vt0.c0)) WHEN vt0.c2 COLLATE RTRIM THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN ((vt0.c1)%(vt0.c1)) THEN ((vt0.c2)OR(vt0.c1)) ELSE CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1362210031' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'4dbb' THEN ((vt0.c2)>(vt0.c0)) WHEN vt0.c2 COLLATE RTRIM THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN ((vt0.c1)%(vt0.c1)) THEN ((vt0.c2)OR(vt0.c1)) ELSE CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END END) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1362210031' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'4dbb' THEN ((vt0.c2)>(vt0.c0)) WHEN vt0.c2 COLLATE RTRIM THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN ((vt0.c1)%(vt0.c1)) THEN ((vt0.c2)OR(vt0.c1)) ELSE CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1362210031' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'4dbb' THEN ((vt0.c2)>(vt0.c0)) WHEN vt0.c2 COLLATE RTRIM THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))) WHEN ((vt0.c1)%(vt0.c1)) THEN ((vt0.c2)OR(vt0.c1)) ELSE CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END END) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN '1362210031' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)|(vt0.c2)))!=(ABS(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)|(vt0.c2)))!=(ABS(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)|(vt0.c2)))!=(ABS(DISTINCT vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)|(vt0.c2)))!=(ABS(DISTINCT vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL)) ORDER BY ((((vt0.c0)|(vt0.c2)))!=(ABS(DISTINCT vt0.c1)));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))>('E(Y橹')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))>('E(Y橹'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))>('E(Y橹')));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))>('E(Y橹'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))>('E(Y橹')));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOTNULL))OR((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c2, vt0.c1, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((0Xffffffffaea29ed6)<=(vt0.c1)))AND(((((vt0.c2)AND('I/Q')))AND('%옾')))))AND(0.686804964798414))) ORDER BY COALESCE(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), vt0.c2 COLLATE RTRIM, ((NULL) NOTNULL), ((((vt0.c1)OR(vt0.c2)))OR('-800000730')));
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffffaea29ed6)<=(vt0.c1)))AND(((((vt0.c2)AND('I/Q')))AND('%옾')))))AND(0.686804964798414))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), vt0.c2 COLLATE RTRIM, ((NULL) NOTNULL), ((((vt0.c1)OR(vt0.c2)))OR('-800000730'))));
SELECT * FROM vt0 WHERE (((((((0Xffffffffaea29ed6)<=(vt0.c1)))AND(((((vt0.c2)AND('I/Q')))AND('%옾')))))AND(0.686804964798414))) ORDER BY COALESCE(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), vt0.c2 COLLATE RTRIM, ((NULL) NOTNULL), ((((vt0.c1)OR(vt0.c2)))OR('-800000730')));
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffffaea29ed6)<=(vt0.c1)))AND(((((vt0.c2)AND('I/Q')))AND('%옾')))))AND(0.686804964798414))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), vt0.c2 COLLATE RTRIM, ((NULL) NOTNULL), ((((vt0.c1)OR(vt0.c2)))OR('-800000730'))));
SELECT * FROM vt0 WHERE (((((((0Xffffffffaea29ed6)<=(vt0.c1)))AND(((((vt0.c2)AND('I/Q')))AND('%옾')))))AND(0.686804964798414))) ORDER BY COALESCE(((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)), vt0.c2 COLLATE RTRIM, ((NULL) NOTNULL), ((((vt0.c1)OR(vt0.c2)))OR('-800000730')));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((vt0.c1)!=(x'')) THEN (- (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN IFNULL(vt0.c2, vt0.c2) END) ORDER BY ABS(vt0.c1) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((vt0.c1)<>(x'')) THEN (- (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN IFNULL(vt0.c2, vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY ABS(vt0.c1) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((vt0.c1)!=(x'')) THEN (- (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN IFNULL(vt0.c2, vt0.c2) END) ORDER BY ABS(vt0.c1) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((vt0.c1)<>(x'')) THEN (- (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN IFNULL(vt0.c2, vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY ABS(vt0.c1) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END  WHEN ((vt0.c1)!=(x'')) THEN (- (vt0.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END WHEN (vt0.c1 IN ()) THEN IFNULL(vt0.c2, vt0.c2) END) ORDER BY ABS(vt0.c1) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, 0.0437176900048043, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1, 0.9322457594541005, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '988108723')))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, 0.0437176900048043, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1, 0.9322457594541005, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '988108723')))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, 0.0437176900048043, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1, 0.9322457594541005, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '988108723')))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, 0.0437176900048043, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1, 0.9322457594541005, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '988108723')))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c1, vt0.c1, 0.0437176900048043, vt0.c0, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1, 0.9322457594541005, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, '988108723')))) IS TRUE)) ORDER BY ((((((vt0.c0)OR(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (vt0.c1 COLLATE RTRIM)) DESC;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)|(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND ((vt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)|(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND ((vt0.c2 IN ()))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)|(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND ((vt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)|(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND ((vt0.c2 IN ()))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)|(((vt0.c2) IS TRUE)))) ORDER BY (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c2, vt0.c0, vt0.c0)))) BETWEEN ((((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) AND ((vt0.c2 IN ()))) DESC;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ ((vt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND (('_\')))) AND (((vt0.c1)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND (('_\')))) AND (((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND (('_\')))) AND (((vt0.c1)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND (('_\')))) AND (((vt0.c1)%(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND (('_\')))) AND (((vt0.c1)%(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((-1.445502508E9) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((-1.445502508E9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1.445502508E9) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((-1.445502508E9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((-1.445502508E9) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c2)))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0)GLOB(CAST(vt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c2)))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(CAST(vt0.c2 AS BLOB))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c2)))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0)GLOB(CAST(vt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c2)))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)GLOB(CAST(vt0.c2 AS BLOB))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c2)))IS(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((vt0.c0)GLOB(CAST(vt0.c2 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))) AND (ABS(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>(UNLIKELY('-1889903078')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))) AND (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>(UNLIKELY('-1889903078'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))) AND (ABS(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>(UNLIKELY('-1889903078')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))) AND (ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>(UNLIKELY('-1889903078'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((NULL)))) AND (ABS(DISTINCT vt0.c0)))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))>>(UNLIKELY('-1889903078')));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOTNULL))>>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))>>(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOTNULL))>>(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL))>>(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) NOTNULL))>>(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ('-1516287582');
SELECT SUM(count) FROM (SELECT (('-1516287582') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1516287582');
SELECT SUM(count) FROM (SELECT (('-1516287582') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1516287582');
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c1) NOTNULL), INSTR(vt0.c0, vt0.c1), CASE ''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) ISNULL), (((vt0.c2, 0Xffffffffa3cd9f99, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((x'', vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))), ''))), vt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOTNULL), INSTR(vt0.c0, vt0.c1), CASE ''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) ISNULL), (((vt0.c2, 0Xffffffffa3cd9f99, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((x'', vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))), ''))), vt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c1) NOTNULL), INSTR(vt0.c0, vt0.c1), CASE ''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) ISNULL), (((vt0.c2, 0Xffffffffa3cd9f99, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((x'', vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))), ''))), vt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) NOTNULL), INSTR(vt0.c0, vt0.c1), CASE ''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) ISNULL), (((vt0.c2, 0Xffffffffa3cd9f99, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((x'', vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))), ''))), vt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY (((((vt0.c1) NOTNULL), INSTR(vt0.c0, vt0.c1), CASE ''  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) ISNULL), (((vt0.c2, 0Xffffffffa3cd9f99, vt0.c0, vt0.c0, vt0.c2)) BETWEEN ((x'', vt0.c1, vt0.c2, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))), ''))), vt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '-1495016841';
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '-1495016841');
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '-1495016841';
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '-1495016841');
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '-1495016841';
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>=(vt0.c2)))||((vt0.c0 IN ())))) ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>=(vt0.c2)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>=(vt0.c2)))||((vt0.c0 IN ())))) ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>=(vt0.c2)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)>=(vt0.c2)))||((vt0.c0 IN ())))) ORDER BY CAST((vt0.c0 IN (vt0.c1)) AS INTEGER) DESC;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c2)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c2)<<(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c2)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c2)<<(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS BLOB)))) ORDER BY (((vt0.c0 IN (vt0.c1)))-(((vt0.c2)<<(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.31668145373046763)) AND (SUBSTR(vt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.31668145373046763)) AND (SUBSTR(vt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.31668145373046763)) AND (SUBSTR(vt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.31668145373046763)) AND (SUBSTR(vt0.c2, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (LIKELIHOOD(vt0.c2, 0.31668145373046763)) AND (SUBSTR(vt0.c2, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END)))OR(vt0.c2 COLLATE NOCASE))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c2 AS REAL) THEN ((vt0.c1) IS TRUE) END, ((MAX(vt0.c2, vt0.c1, vt0.c0, vt0.c1))OR(((vt0.c1)OR('0.0')))) DESC  NULLS FIRST, (- (((vt0.c2)&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END)))OR(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c2 AS REAL) THEN ((vt0.c1) IS TRUE) END, ((MAX(vt0.c2, vt0.c1, vt0.c0, vt0.c1))OR(((vt0.c1)OR('0.0')))) DESC  NULLS FIRST, (- (((vt0.c2)&(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END)))OR(vt0.c2 COLLATE NOCASE))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c2 AS REAL) THEN ((vt0.c1) IS TRUE) END, ((MAX(vt0.c2, vt0.c1, vt0.c0, vt0.c1))OR(((vt0.c1)OR('0.0')))) DESC  NULLS FIRST, (- (((vt0.c2)&(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END)))OR(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c2 AS REAL) THEN ((vt0.c1) IS TRUE) END, ((MAX(vt0.c2, vt0.c1, vt0.c0, vt0.c1))OR(((vt0.c1)OR('0.0')))) DESC  NULLS FIRST, (- (((vt0.c2)&(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN '' THEN vt0.c2 ELSE vt0.c1 END)))OR(vt0.c2 COLLATE NOCASE))) ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN CAST(vt0.c2 AS REAL) THEN ((vt0.c1) IS TRUE) END, ((MAX(vt0.c2, vt0.c1, vt0.c0, vt0.c1))OR(((vt0.c1)OR('0.0')))) DESC  NULLS FIRST, (- (((vt0.c2)&(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))<=((4.7725095E7))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<=((4.7725095E7))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))<=((4.7725095E7))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<=((4.7725095E7))) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1))<=((4.7725095E7))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND ((((vt0.c1))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND ((((vt0.c1))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND ((((vt0.c1))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND ((((vt0.c1))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND ((((vt0.c1))>=((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) IN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))) NOT NULL)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) IS FALSE)) ORDER BY NULLIF(vt0.c2 COLLATE RTRIM, NULL) DESC, ((((((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((- (vt0.c2)))))AND(vt0.c1)))AND((vt0.c1 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c2 COLLATE RTRIM, NULL) DESC, ((((((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((- (vt0.c2)))))AND(vt0.c1)))AND((vt0.c1 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) IS FALSE)) ORDER BY NULLIF(vt0.c2 COLLATE RTRIM, NULL) DESC, ((((((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((- (vt0.c2)))))AND(vt0.c1)))AND((vt0.c1 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c2 COLLATE RTRIM, NULL) DESC, ((((((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((- (vt0.c2)))))AND(vt0.c1)))AND((vt0.c1 IN (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) IS FALSE)) ORDER BY NULLIF(vt0.c2 COLLATE RTRIM, NULL) DESC, ((((((((((vt0.c0)LIKE(vt0.c1)))AND((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR((- (vt0.c2)))))AND(vt0.c1)))AND((vt0.c1 IN (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0))<((vt0.c2)))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0))<((vt0.c2)))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0))<((vt0.c2)))) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0))<((vt0.c2)))) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(DISTINCT vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0))<((vt0.c2)))) AND (((vt0.c0) IS TRUE))));
SELECT * FROM vt0 WHERE (((CASE -1533560260  WHEN vt0.c0 THEN 1419760572 ELSE vt0.c2 END) IS TRUE)) ORDER BY (((vt0.c1 IN ())) BETWEEN ((vt0.c1 IN ())) AND (vt0.c1 COLLATE NOCASE)) DESC, vt0.c1  NULLS LAST, ((json_extract(vt0.c2, vt0.c0))<<(vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE -1533560260  WHEN vt0.c0 THEN 1419760572 ELSE vt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN ((vt0.c1 IN ())) AND (vt0.c1 COLLATE NOCASE)) DESC, vt0.c1  NULLS LAST, ((json_extract(vt0.c2, vt0.c0))<<(vt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM vt0 WHERE (((CASE -1533560260  WHEN vt0.c0 THEN 1419760572 ELSE vt0.c2 END) IS TRUE)) ORDER BY (((vt0.c1 IN ())) BETWEEN ((vt0.c1 IN ())) AND (vt0.c1 COLLATE NOCASE)) DESC, vt0.c1  NULLS LAST, ((json_extract(vt0.c2, vt0.c0))<<(vt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE -1533560260  WHEN vt0.c0 THEN 1419760572 ELSE vt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN ((vt0.c1 IN ())) AND (vt0.c1 COLLATE NOCASE)) DESC, vt0.c1  NULLS LAST, ((json_extract(vt0.c2, vt0.c0))<<(vt0.c1 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c2 THEN vt0.c2 END COLLATE RTRIM) ORDER BY vt0.c2  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN NULL ELSE vt0.c2 END WHEN x'' COLLATE RTRIM THEN (~ (vt0.c1)) WHEN load_extension(vt0.c2) THEN vt0.c1 ELSE load_extension(vt0.c2, vt0.c0) END) ORDER BY CAST(vt0.c1 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN NULL ELSE vt0.c2 END WHEN x'' COLLATE RTRIM THEN (~ (vt0.c1)) WHEN load_extension(vt0.c2) THEN vt0.c1 ELSE load_extension(vt0.c2, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN NULL ELSE vt0.c2 END WHEN x'' COLLATE RTRIM THEN (~ (vt0.c1)) WHEN load_extension(vt0.c2) THEN vt0.c1 ELSE load_extension(vt0.c2, vt0.c0) END) ORDER BY CAST(vt0.c1 AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN NULL ELSE vt0.c2 END WHEN x'' COLLATE RTRIM THEN (~ (vt0.c1)) WHEN load_extension(vt0.c2) THEN vt0.c1 ELSE load_extension(vt0.c2, vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<(vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)<(vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<(vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)<(vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c2)<(vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT (NOT (vt0.c0)), vt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (NOT (vt0.c0)), vt0.c0 COLLATE RTRIM) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT (NOT (vt0.c0)), vt0.c0 COLLATE RTRIM) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (NOT (vt0.c0)), vt0.c0 COLLATE RTRIM) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT (NOT (vt0.c0)), vt0.c0 COLLATE RTRIM) DESC;
SELECT * FROM vt0 WHERE ((NOT ((vt0.c2 IN (vt0.c0, 0.4190054572143367)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c2 IN (vt0.c0, 0.4190054572143367))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c2 IN (vt0.c0, 0.4190054572143367)))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c2 IN (vt0.c0, 0.4190054572143367))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ((vt0.c2 IN (vt0.c0, 0.4190054572143367)))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)=(vt0.c1)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c2)<>(vt0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c2)!=(vt0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c2)<>(vt0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR(((vt0.c2)!=(vt0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR(((vt0.c2)<>(vt0.c2)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))+(CAST(vt0.c2 AS REAL)))) ORDER BY ((CAST(vt0.c2 AS REAL))*(TRIM(DISTINCT vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c2)))+(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CAST(vt0.c2 AS REAL))*(TRIM(DISTINCT vt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))+(CAST(vt0.c2 AS REAL)))) ORDER BY ((CAST(vt0.c2 AS REAL))*(TRIM(DISTINCT vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c2)))+(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CAST(vt0.c2 AS REAL))*(TRIM(DISTINCT vt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c2)))+(CAST(vt0.c2 AS REAL)))) ORDER BY ((CAST(vt0.c2 AS REAL))*(TRIM(DISTINCT vt0.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c2) IN ())) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((('v|g#1') ISNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((LENGTH(vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((('v|g#1') ISNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c2) IN ())) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((('v|g#1') ISNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((LENGTH(vt0.c2) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((('v|g#1') ISNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((LENGTH(vt0.c2) IN ())) ORDER BY ((((vt0.c1) ISNULL)) BETWEEN ((('v|g#1') ISNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS LAST, (- (vt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS TRUE)) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN TRIM(vt0.c0) WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) THEN ((vt0.c2)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN TRIM(vt0.c0) WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) THEN ((vt0.c2)IS NOT(vt0.c1)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS TRUE)) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN TRIM(vt0.c0) WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) THEN ((vt0.c2)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN TRIM(vt0.c0) WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) THEN ((vt0.c2)IS NOT(vt0.c1)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c2))) IS TRUE)) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN TRIM(vt0.c0) WHEN UNLIKELY(DISTINCT vt0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)) WHEN ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)) THEN ((vt0.c2)IS NOT(vt0.c1)) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((DATE(vt0.c1, '-1187178138', vt0.c2)) NOT BETWEEN (((vt0.c2)*(vt0.c1))) AND ((((vt0.c2, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (- (((0.0889770733013796)IS NOT(vt0.c1)))) DESC, ((((vt0.c2 COLLATE NOCASE)OR((- (vt0.c2)))))OR(((NULL)LIKE(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(vt0.c1, '-1187178138', vt0.c2)) NOT BETWEEN (((vt0.c2)*(vt0.c1))) AND ((((vt0.c2, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((0.0889770733013796)IS NOT(vt0.c1)))) DESC, ((((vt0.c2 COLLATE NOCASE)OR((- (vt0.c2)))))OR(((NULL)LIKE(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((DATE(vt0.c1, '-1187178138', vt0.c2)) NOT BETWEEN (((vt0.c2)*(vt0.c1))) AND ((((vt0.c2, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (- (((0.0889770733013796)IS NOT(vt0.c1)))) DESC, ((((vt0.c2 COLLATE NOCASE)OR((- (vt0.c2)))))OR(((NULL)LIKE(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(vt0.c1, '-1187178138', vt0.c2)) NOT BETWEEN (((vt0.c2)*(vt0.c1))) AND ((((vt0.c2, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((0.0889770733013796)IS NOT(vt0.c1)))) DESC, ((((vt0.c2 COLLATE NOCASE)OR((- (vt0.c2)))))OR(((NULL)LIKE(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((DATE(vt0.c1, '-1187178138', vt0.c2)) NOT BETWEEN (((vt0.c2)*(vt0.c1))) AND ((((vt0.c2, vt0.c1, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY (- (((0.0889770733013796)IS NOT(vt0.c1)))) DESC, ((((vt0.c2 COLLATE NOCASE)OR((- (vt0.c2)))))OR(((NULL)LIKE(vt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c2))>>((~ (vt0.c0))))) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c2))>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c2))>>((~ (vt0.c0))))) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c2))>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c2))>>((~ (vt0.c0))))) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) AS BLOB)  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((0.04720661975950047)OR(vt0.c2 COLLATE RTRIM)))AND((vt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((0.04720661975950047)OR(vt0.c2 COLLATE RTRIM)))AND((vt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((((0.04720661975950047)OR(vt0.c2 COLLATE RTRIM)))AND((vt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((0.04720661975950047)OR(vt0.c2 COLLATE RTRIM)))AND((vt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY (vt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY (vt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)) AS TEXT)) ORDER BY (vt0.c2 IN ()) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((('-1821544802') ISNULL)) ORDER BY SQLITE_SOURCE_ID(), ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)AND(((((((((x'a46f')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-1821544802') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID(), ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)AND(((((((((x'a46f')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-1821544802') ISNULL)) ORDER BY SQLITE_SOURCE_ID(), ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)AND(((((((((x'a46f')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-1821544802') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_SOURCE_ID(), ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)AND(((((((((x'a46f')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((('-1821544802') ISNULL)) ORDER BY SQLITE_SOURCE_ID(), ((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)AND(((((((((x'a46f')OR(vt0.c1)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c1)))))AND(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c2)AND(0.1376451414628359)))OR(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c2)AND(0.1376451414628359)))OR(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c2)AND(0.1376451414628359)))OR(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c2)AND(0.1376451414628359)))OR(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c1)) COLLATE NOCASE) ORDER BY ((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c2)AND(0.1376451414628359)))OR(vt0.c1))) AND (CAST(vt0.c1 AS TEXT)))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2, '1498509681'))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2, '1498509681'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2, '1498509681'))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c2, '1498509681'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c2, '1498509681'))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)|(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)|(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)|(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)|(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2)|(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c2 IN ()), 0.3067126703111286)) ORDER BY (((((vt0.c2) NOTNULL)))<((CASE WHEN vt0.c0 THEN vt0.c0 END))), ABS(vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (vt0.c2 IN ()), 0.3067126703111286)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) NOTNULL)))<((CASE WHEN vt0.c0 THEN vt0.c0 END))), ABS(vt0.c0) ASC);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c2 IN ()), 0.3067126703111286)) ORDER BY (((((vt0.c2) NOTNULL)))<((CASE WHEN vt0.c0 THEN vt0.c0 END))), ABS(vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (vt0.c2 IN ()), 0.3067126703111286)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) NOTNULL)))<((CASE WHEN vt0.c0 THEN vt0.c0 END))), ABS(vt0.c0) ASC);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT (vt0.c2 IN ()), 0.3067126703111286)) ORDER BY (((((vt0.c2) NOTNULL)))<((CASE WHEN vt0.c0 THEN vt0.c0 END))), ABS(vt0.c0) ASC;
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END))) ORDER BY ((((((vt0.c1)-(vt0.c1)))AND(((vt0.c1)+('-304591069')))))OR(((vt0.c2)<<(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)-(vt0.c1)))AND(((vt0.c1)+('-304591069')))))OR(((vt0.c2)<<(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END))) ORDER BY ((((((vt0.c1)-(vt0.c1)))AND(((vt0.c1)+('-304591069')))))OR(((vt0.c2)<<(vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)-(vt0.c1)))AND(((vt0.c1)+('-304591069')))))OR(((vt0.c2)<<(vt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c2 THEN NULL WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN NULL END))) ORDER BY ((((((vt0.c1)-(vt0.c1)))AND(((vt0.c1)+('-304591069')))))OR(((vt0.c2)<<(vt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1896516583)IS((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((0X6faaf1ee)==(vt0.c1)))<(UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((-1896516583)IS((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0x6faaf1ee)==(vt0.c1)))<(UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1896516583)IS((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((0X6faaf1ee)==(vt0.c1)))<(UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((-1896516583)IS((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((0x6faaf1ee)==(vt0.c1)))<(UNLIKELY(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((-1896516583)IS((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((((0X6faaf1ee)==(vt0.c1)))<(UNLIKELY(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c2)<=(vt0.c0))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)<=(vt0.c0))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c2)<=(vt0.c0))) ORDER BY CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)) ELSE CAST(vt0.c2 AS NUMERIC) END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ())) ORDER BY vt0.c2, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ())) ORDER BY vt0.c2, vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2, vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ())) ORDER BY vt0.c2, vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)) AS NUMERIC)) ORDER BY ''  NULLS FIRST, ('' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS FIRST, ('' IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)) AS NUMERIC)) ORDER BY ''  NULLS FIRST, ('' IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS FIRST, ('' IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))AND(vt0.c1)) AS NUMERIC)) ORDER BY ''  NULLS FIRST, ('' IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((UNLIKELY(vt0.c1)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, (((((((((((''))<=((vt0.c1))))AND((0.014933812213947961 IN (vt0.c0)))))OR(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))OR(0.7884884768231143)))OR(vt0.c1)))))OR(((vt0.c1)+('1452878526')))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC  NULLS FIRST, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c1)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, (((((((((((''))<=((vt0.c1))))AND((0.014933812213947961 IN (vt0.c0)))))OR(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))OR(0.7884884768231143)))OR(vt0.c1)))))OR(((vt0.c1)+('1452878526')))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC  NULLS FIRST, '' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((UNLIKELY(vt0.c1)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, (((((((((((''))<=((vt0.c1))))AND((0.014933812213947961 IN (vt0.c0)))))OR(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))OR(0.7884884768231143)))OR(vt0.c1)))))OR(((vt0.c1)+('1452878526')))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC  NULLS FIRST, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((UNLIKELY(vt0.c1)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, (((((((((((''))<=((vt0.c1))))AND((0.014933812213947961 IN (vt0.c0)))))OR(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))OR(0.7884884768231143)))OR(vt0.c1)))))OR(((vt0.c1)+('1452878526')))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC  NULLS FIRST, '' DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((UNLIKELY(vt0.c1)) NOT BETWEEN (vt0.c1) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS FIRST, (((((((((((''))<=((vt0.c1))))AND((0.014933812213947961 IN (vt0.c0)))))OR(((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)))OR(0.7884884768231143)))OR(vt0.c1)))))OR(((vt0.c1)+('1452878526')))))AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 END)) ASC  NULLS FIRST, '' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.5990087069491619');
SELECT SUM(count) FROM (SELECT (('0.5990087069491619') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.5990087069491619');
SELECT SUM(count) FROM (SELECT (('0.5990087069491619') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.5990087069491619');
SELECT * FROM vt0 WHERE (0.0889770733013796) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0889770733013796) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.0889770733013796) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0889770733013796) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.0889770733013796) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((((((NOT (vt0.c2)))OR(vt0.c2)))AND(((vt0.c2)IS(vt0.c0)))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))))AND(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(vt0.c1 COLLATE BINARY))) ORDER BY (((((vt0.c2 IN (vt0.c1, -4.8139234E7)))OR(((vt0.c0)=(vt0.c2)))))OR((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NOT (vt0.c2)))OR(vt0.c2)))AND(((vt0.c2)IS(vt0.c0)))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))))AND(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN (vt0.c1, -4.8139234E7)))OR(((vt0.c0)=(vt0.c2)))))OR((vt0.c1 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((((((NOT (vt0.c2)))OR(vt0.c2)))AND(((vt0.c2)IS(vt0.c0)))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))))AND(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(vt0.c1 COLLATE BINARY))) ORDER BY (((((vt0.c2 IN (vt0.c1, -4.8139234E7)))OR(((vt0.c0)=(vt0.c2)))))OR((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((NOT (vt0.c2)))OR(vt0.c2)))AND(((vt0.c2)IS(vt0.c0)))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))))AND(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN (vt0.c1, -4.8139234E7)))OR(((vt0.c0)=(vt0.c2)))))OR((vt0.c1 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE ((((((((((((((NOT (vt0.c2)))OR(vt0.c2)))AND(((vt0.c2)IS(vt0.c0)))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))))AND(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))))AND(vt0.c1 COLLATE BINARY))) ORDER BY (((((vt0.c2 IN (vt0.c1, -4.8139234E7)))OR(((vt0.c0)=(vt0.c2)))))OR((vt0.c1 IN ()))) ASC;
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))!=((vt0.c2))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))!=((vt0.c2))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))!=((vt0.c2))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))!=((vt0.c2))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))!=((vt0.c2))) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) ORDER BY ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((x'53da') NOTNULL) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(((vt0.c1)LIKE(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((x'53da') NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(((vt0.c1)LIKE(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (CAST(((x'53da') NOTNULL) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(((vt0.c1)LIKE(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(((x'53da') NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(((vt0.c1)LIKE(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (CAST(((x'53da') NOTNULL) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(((vt0.c1)LIKE(vt0.c2))));
SELECT * FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), ((((NULL)AND(vt0.c2)))AND(vt0.c2))))<=((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), x'')))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), ((((NULL)AND(vt0.c2)))AND(vt0.c2))))<=((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), x'')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), ((((NULL)AND(vt0.c2)))AND(vt0.c2))))<=((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), x'')))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), ((((NULL)AND(vt0.c2)))AND(vt0.c2))))<=((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), x'')))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0) IS TRUE), ((((NULL)AND(vt0.c2)))AND(vt0.c2))))<=((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)), (vt0.c0 IN ()), x'')))) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END AS INTEGER);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN ((2107537944 IN (vt0.c1))) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN ((2107537944 IN (vt0.c1))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN ((2107537944 IN (vt0.c1))) AND (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN ((2107537944 IN (vt0.c1))) AND (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))>((vt0.c1)))) NOT BETWEEN ((2107537944 IN (vt0.c1))) AND (((vt0.c2) NOTNULL))));
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN NULL THEN (NOT (vt0.c0)) ELSE (((vt0.c1))>=((vt0.c2))) END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN NULL THEN (NOT (vt0.c0)) ELSE (((vt0.c1))>=((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN NULL THEN (NOT (vt0.c0)) ELSE (((vt0.c1))>=((vt0.c2))) END) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN NULL THEN (NOT (vt0.c0)) ELSE (((vt0.c1))>=((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ''  WHEN NULL THEN (NOT (vt0.c0)) ELSE (((vt0.c1))>=((vt0.c2))) END) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))=(((vt0.c1)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))=(((vt0.c1)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))=(((vt0.c1)<=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))=(((vt0.c1)<=(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))=(((vt0.c1)<=(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (0xffffffffdacc2009);
SELECT SUM(count) FROM (SELECT ((0Xffffffffdacc2009) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0xffffffffdacc2009);
SELECT SUM(count) FROM (SELECT ((0Xffffffffdacc2009) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0xffffffffdacc2009);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c2)AND(x'')))AND(vt0.c2)))) AND ((CASE vt0.c2  WHEN '-1281791367' THEN vt0.c1 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((((vt0.c2)AND(x'')))AND(vt0.c2)))) AND ((CASE vt0.c2  WHEN '-1281791367' THEN vt0.c1 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c2)AND(x'')))AND(vt0.c2)))) AND ((CASE vt0.c2  WHEN '-1281791367' THEN vt0.c1 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((((vt0.c2)AND(x'')))AND(vt0.c2)))) AND ((CASE vt0.c2  WHEN '-1281791367' THEN vt0.c1 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c2)AND(x'')))AND(vt0.c2)))) AND ((CASE vt0.c2  WHEN '-1281791367' THEN vt0.c1 ELSE vt0.c2 END))));
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c1) IS FALSE))) ORDER BY (((((('(D', vt0.c2, vt0.c0))<=(('503345915', vt0.c0, vt0.c2)))))<((vt0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY (((((('(D', vt0.c2, vt0.c0))<=(('503345915', vt0.c0, vt0.c2)))))<((vt0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c1) IS FALSE))) ORDER BY (((((('(D', vt0.c2, vt0.c0))<=(('503345915', vt0.c0, vt0.c2)))))<((vt0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0 ORDER BY (((((('(D', vt0.c2, vt0.c0))<=(('503345915', vt0.c0, vt0.c2)))))<((vt0.c1 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c1) IS FALSE))) ORDER BY (((((('(D', vt0.c2, vt0.c0))<=(('503345915', vt0.c0, vt0.c2)))))<((vt0.c1 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c1)))|(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c1)))|(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c1)))|(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c1)))|(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c1)))|(((vt0.c2) IS FALSE))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)+(vt0.c0)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)+(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)+(vt0.c0)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)+(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)+(vt0.c0)) AS BLOB)) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((UPPER(vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT NULL)) ORDER BY CASE ((((vt0.c0)OR(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c2)||(vt0.c2)) THEN ((vt0.c2)-(vt0.c0)) ELSE ((vt0.c2)<=(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c2)||(vt0.c2)) THEN ((vt0.c2)-(vt0.c0)) ELSE ((vt0.c2)<=(vt0.c1)) END DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT NULL)) ORDER BY CASE ((((vt0.c0)OR(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c2)||(vt0.c2)) THEN ((vt0.c2)-(vt0.c0)) ELSE ((vt0.c2)<=(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c2)||(vt0.c2)) THEN ((vt0.c2)-(vt0.c0)) ELSE ((vt0.c2)<=(vt0.c1)) END DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2))) NOT NULL)) ORDER BY CASE ((((vt0.c0)OR(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c2)||(vt0.c2)) THEN ((vt0.c2)-(vt0.c0)) ELSE ((vt0.c2)<=(vt0.c1)) END DESC;
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))<('1764209036')));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<('1764209036'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))<('1764209036')));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<('1764209036'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))<('1764209036')));
SELECT ALL * FROM vt0 WHERE (((NULL)*((NOT (vt0.c1))))) ORDER BY vt0.c1 COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((NULL)*((NOT (vt0.c1))))) ORDER BY vt0.c1 COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE (((NULL)*((NOT (vt0.c1))))) ORDER BY vt0.c1 COLLATE BINARY COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (+ ((((x'c893'))>((vt0.c1)))))  NULLS LAST, TRIM(DISTINCT ((vt0.c2) ISNULL), (vt0.c2 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((x'c893'))>((vt0.c1)))))  NULLS LAST, TRIM(DISTINCT ((vt0.c2) ISNULL), (vt0.c2 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (+ ((((x'c893'))>((vt0.c1)))))  NULLS LAST, TRIM(DISTINCT ((vt0.c2) ISNULL), (vt0.c2 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (+ ((((x'c893'))>((vt0.c1)))))  NULLS LAST, TRIM(DISTINCT ((vt0.c2) ISNULL), (vt0.c2 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) ORDER BY (+ ((((x'c893'))>((vt0.c1)))))  NULLS LAST, TRIM(DISTINCT ((vt0.c2) ISNULL), (vt0.c2 IN ())) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<>((vt0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<>((vt0.c2))) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<>((vt0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST((((vt0.c0))<>((vt0.c2))) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CAST((((vt0.c0))<>((vt0.c2))) AS BLOB)  NULLS LAST;
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS INTEGER)) ORDER BY ((((ABS(DISTINCT vt0.c2))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY))  NULLS FIRST, (((((+ (vt0.c2)))OR(((((vt0.c0)OR(vt0.c0)))OR(0X549fd3bc)))))OR(((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((ABS(DISTINCT vt0.c2))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY))  NULLS FIRST, (((((+ (vt0.c2)))OR(((((vt0.c0)OR(vt0.c0)))OR(0X549fd3bc)))))OR(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS INTEGER)) ORDER BY ((((ABS(DISTINCT vt0.c2))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY))  NULLS FIRST, (((((+ (vt0.c2)))OR(((((vt0.c0)OR(vt0.c0)))OR(0X549fd3bc)))))OR(((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((ABS(DISTINCT vt0.c2))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY))  NULLS FIRST, (((((+ (vt0.c2)))OR(((((vt0.c0)OR(vt0.c0)))OR(0X549fd3bc)))))OR(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS INTEGER)) ORDER BY ((((ABS(DISTINCT vt0.c2))AND(vt0.c1 COLLATE RTRIM)))OR(vt0.c2 COLLATE BINARY))  NULLS FIRST, (((((+ (vt0.c2)))OR(((((vt0.c0)OR(vt0.c0)))OR(0X549fd3bc)))))OR(((vt0.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (0.5004751911267488)))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (0.5004751911267488)))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (0.5004751911267488)))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (0.5004751911267488)))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (0.5004751911267488)))) AND ((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE))/(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))/(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE))/(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))/(vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE))/(vt0.c0)) ASC;
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS((~ (vt0.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(TRIM(vt0.c2, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(TRIM(vt0.c2, vt0.c1)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS((~ (vt0.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(TRIM(vt0.c2, vt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(TRIM(vt0.c2, vt0.c1)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS((~ (vt0.c1))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))>>(TRIM(vt0.c2, vt0.c1)))  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN x'c744' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((((((((0.5113515206117561)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'c744' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((((((((0.5113515206117561)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN x'c744' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((((((((0.5113515206117561)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'c744' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((((((((0.5113515206117561)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN x'c744' THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) END) ORDER BY (((vt0.c2)) NOT BETWEEN (((vt0.c2 IN ()))) AND ((((((((((0.5113515206117561)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 END)OR((NOT ('489100545')))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c2 END)OR((NOT ('489100545')))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 END)OR((NOT ('489100545')))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c2 END)OR((NOT ('489100545')))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 END)OR((NOT ('489100545')))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ())) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0 IN ())) ISNULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, '462391272')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((NULL, 0x4c21a9a1, vt0.c2)))) NOT BETWEEN (((0.6603700329083132) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((vt0.c1)>>(''))))) ORDER BY ((((('-1365074218') NOTNULL), vt0.c1, TRIM(vt0.c0, vt0.c1)))<>((vt0.c1, vt0.c2, vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, '462391272')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((NULL, 0x4c21a9a1, vt0.c2)))) NOT BETWEEN (((0.6603700329083132) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((vt0.c1)>>(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((('-1365074218') NOTNULL), vt0.c1, TRIM(vt0.c0, vt0.c1)))!=((vt0.c1, vt0.c2, vt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, '462391272')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((NULL, 0x4c21a9a1, vt0.c2)))) NOT BETWEEN (((0.6603700329083132) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((vt0.c1)>>(''))))) ORDER BY ((((('-1365074218') NOTNULL), vt0.c1, TRIM(vt0.c0, vt0.c1)))<>((vt0.c1, vt0.c2, vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c1, '462391272')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((NULL, 0x4c21a9a1, vt0.c2)))) NOT BETWEEN (((0.6603700329083132) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((vt0.c1)>>(''))))) IS TRUE)  as count FROM vt0 ORDER BY ((((('-1365074218') NOTNULL), vt0.c1, TRIM(vt0.c0, vt0.c1)))!=((vt0.c1, vt0.c2, vt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c1, '462391272')) BETWEEN ((vt0.c2, vt0.c2, vt0.c2)) AND ((NULL, 0x4c21a9a1, vt0.c2)))) NOT BETWEEN (((0.6603700329083132) BETWEEN (vt0.c2) AND (vt0.c1))) AND (((vt0.c1)>>(''))))) ORDER BY ((((('-1365074218') NOTNULL), vt0.c1, TRIM(vt0.c0, vt0.c1)))<>((vt0.c1, vt0.c2, vt0.c2))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)>=('-712912262')))) AND (('-1889903078'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1)>=('-712912262')))) AND (('-1889903078')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)>=('-712912262')))) AND (('-1889903078'))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1)>=('-712912262')))) AND (('-1889903078')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)>=('-712912262')))) AND (('-1889903078'))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE));
SELECT * FROM vt0 WHERE (x'') ORDER BY ((vt0.c1)>=(((((vt0.c2)OR(NULL)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>=(((((vt0.c2)OR(NULL)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((vt0.c1)>=(((((vt0.c2)OR(NULL)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)>=(((((vt0.c2)OR(NULL)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((vt0.c1)>=(((((vt0.c2)OR(NULL)))OR(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN ()));
SELECT ALL * FROM vt0 WHERE (((json_extract(vt0.c0, vt0.c2))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt0.c0, vt0.c2))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((json_extract(vt0.c0, vt0.c2))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(vt0.c0, vt0.c2))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(x'')))OR(vt0.c2)))AND((((vt0.c2))!=((vt0.c1))))))AND(x'3924'))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (('') ISNULL) WHEN CAST(vt0.c2 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(x'')))OR(vt0.c2)))AND((((vt0.c2))!=((vt0.c1))))))AND(x'3924'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (('') ISNULL) WHEN CAST(vt0.c2 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(x'')))OR(vt0.c2)))AND((((vt0.c2))!=((vt0.c1))))))AND(x'3924'))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (('') ISNULL) WHEN CAST(vt0.c2 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(x'')))OR(vt0.c2)))AND((((vt0.c2))!=((vt0.c1))))))AND(x'3924'))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (('') ISNULL) WHEN CAST(vt0.c2 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(x'')))OR(vt0.c2)))AND((((vt0.c2))!=((vt0.c1))))))AND(x'3924'))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0)>>(vt0.c0)) WHEN (NOT (vt0.c1)) THEN (('') ISNULL) WHEN CAST(vt0.c2 AS BLOB) THEN CAST(vt0.c1 AS INTEGER) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((NULL) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c2  NULLS FIRST, (+ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((NULL) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST, (+ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((NULL) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c2  NULLS FIRST, (+ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((NULL) BETWEEN (vt0.c2) AND (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST, (+ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)<(vt0.c1)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((NULL) BETWEEN (vt0.c2) AND (vt0.c2))))) ORDER BY vt0.c2  NULLS FIRST, (+ (((((vt0.c2)AND(vt0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (CASE WHEN 'aj' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (CASE WHEN 'aj' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (CASE WHEN 'aj' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (CASE WHEN 'aj' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (CASE WHEN 'aj' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((- (TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (TRIM(vt0.c0, vt0.c1))));
SELECT * FROM vt0 WHERE ((NOT (vt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c2)));
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY vt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY vt0.c2  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE 'I_|t'  WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'I_|t'  WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 'I_|t'  WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'I_|t'  WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE 'I_|t'  WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL * FROM vt0 WHERE (CASE ((0.335583999395187)>(vt0.c0))  WHEN 0.5131410725148321 THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) ORDER BY CAST((NOT (vt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.335583999395187)>(vt0.c0))  WHEN 0.5131410725148321 THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c1)) AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((0.335583999395187)>(vt0.c0))  WHEN 0.5131410725148321 THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) ORDER BY CAST((NOT (vt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.335583999395187)>(vt0.c0))  WHEN 0.5131410725148321 THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT (vt0.c1)) AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((0.335583999395187)>(vt0.c0))  WHEN 0.5131410725148321 THEN vt0.c2 ELSE CAST(vt0.c2 AS INTEGER) END) ORDER BY CAST((NOT (vt0.c1)) AS REAL) ASC;
SELECT * FROM vt0 WHERE (((((- (vt0.c0))))==((((vt0.c2) BETWEEN ('-393622761') AND ('1452878526')))))) ORDER BY (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (+ (vt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))) AND (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))), LIKE(x'', x'', '-'), CASE vt0.c2  WHEN vt0.c1 THEN 'x壜[*w[>C' ELSE vt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))==((((vt0.c2) BETWEEN ('-393622761') AND ('1452878526')))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (+ (vt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))) AND (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))), LIKE(x'', x'', '-'), CASE vt0.c2  WHEN vt0.c1 THEN 'x壜[*w[>C' ELSE vt0.c2 END))) DESC);
SELECT * FROM vt0 WHERE (((((- (vt0.c0))))==((((vt0.c2) BETWEEN ('-393622761') AND ('1452878526')))))) ORDER BY (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (+ (vt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))) AND (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))), LIKE(x'', x'', '-'), CASE vt0.c2  WHEN vt0.c1 THEN 'x壜[*w[>C' ELSE vt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))==((((vt0.c2) BETWEEN ('-393622761') AND ('1452878526')))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (+ (vt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))) AND (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))), LIKE(x'', x'', '-'), CASE vt0.c2  WHEN vt0.c1 THEN 'x壜[*w[>C' ELSE vt0.c2 END))) DESC);
SELECT * FROM vt0 WHERE (((((- (vt0.c0))))==((((vt0.c2) BETWEEN ('-393622761') AND ('1452878526')))))) ORDER BY (((vt0.c0, vt0.c2, vt0.c0)) BETWEEN ((CAST(vt0.c0 AS INTEGER), (+ (vt0.c2)), ((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))) AND (((((vt0.c0, vt0.c1, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c0))), LIKE(x'', x'', '-'), CASE vt0.c2  WHEN vt0.c1 THEN 'x壜[*w[>C' ELSE vt0.c2 END))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN NULLIF(DISTINCT vt0.c1, vt0.c2) ELSE PRINTF(vt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END THEN ((vt0.c0)<>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN NULLIF(DISTINCT vt0.c1, vt0.c2) ELSE PRINTF(vt0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN NULLIF(DISTINCT vt0.c1, vt0.c2) ELSE PRINTF(vt0.c2) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END THEN ((vt0.c0)<>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN NULLIF(DISTINCT vt0.c1, vt0.c2) ELSE PRINTF(vt0.c2) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN NULLIF(DISTINCT vt0.c1, vt0.c2) ELSE PRINTF(vt0.c2) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND (((~ (vt0.c1)))))) ORDER BY ((((vt0.c0)+(vt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND (((~ (vt0.c1)))))) ORDER BY ((((vt0.c0)+(vt0.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND (((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<=((vt0.c2))))) AND (((~ (vt0.c1)))))) ORDER BY ((((vt0.c0)+(vt0.c2))) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)&(vt0.c0)))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(vt0.c0)))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)&(vt0.c0)))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)&(vt0.c0)))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)&(vt0.c0)))%(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ('0.5113515206117561');
SELECT SUM(count) FROM (SELECT ALL (('0.5113515206117561') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.5113515206117561');
SELECT SUM(count) FROM (SELECT ALL (('0.5113515206117561') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.5113515206117561');
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(ABS(NULL))))OR(LOWER(vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)>(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(ABS(NULL))))OR(LOWER(vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(ABS(NULL))))OR(LOWER(vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)>(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(ABS(NULL))))OR(LOWER(vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)>(vt0.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))AND(ABS(NULL))))OR(LOWER(vt0.c0))))OR(vt0.c1 COLLATE BINARY)))OR(LOWER(DISTINCT vt0.c0)))) ORDER BY (((vt0.c0)>(vt0.c1)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('455224414') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (~ (vt0.c0)) WHEN x'' THEN vt0.c1 WHEN CAST(vt0.c1 AS BLOB) THEN NULLIF(DISTINCT vt0.c2, vt0.c2) WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END WHEN ((vt0.c2) NOTNULL) THEN CAST(0.16009138315673122 AS REAL) ELSE CAST(vt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('455224414') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (~ (vt0.c0)) WHEN x'' THEN vt0.c1 WHEN CAST(vt0.c1 AS BLOB) THEN NULLIF(DISTINCT vt0.c2, vt0.c2) WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END WHEN ((vt0.c2) NOTNULL) THEN CAST(0.16009138315673122 AS REAL) ELSE CAST(vt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('455224414') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (~ (vt0.c0)) WHEN x'' THEN vt0.c1 WHEN CAST(vt0.c1 AS BLOB) THEN NULLIF(DISTINCT vt0.c2, vt0.c2) WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END WHEN ((vt0.c2) NOTNULL) THEN CAST(0.16009138315673122 AS REAL) ELSE CAST(vt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('455224414') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (~ (vt0.c0)) WHEN x'' THEN vt0.c1 WHEN CAST(vt0.c1 AS BLOB) THEN NULLIF(DISTINCT vt0.c2, vt0.c2) WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END WHEN ((vt0.c2) NOTNULL) THEN CAST(0.16009138315673122 AS REAL) ELSE CAST(vt0.c2 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (('455224414') BETWEEN (vt0.c2) AND (vt0.c1)) THEN (~ (vt0.c0)) WHEN x'' THEN vt0.c1 WHEN CAST(vt0.c1 AS BLOB) THEN NULLIF(DISTINCT vt0.c2, vt0.c2) WHEN (vt0.c2 IN ()) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END WHEN ((vt0.c2) NOTNULL) THEN CAST(0.16009138315673122 AS REAL) ELSE CAST(vt0.c2 AS BLOB) END);
SELECT * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c2)) IN (((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(vt0.c2)) IN (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c2)) IN (((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)AND(vt0.c2)) IN (((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)AND(vt0.c2)) IN (((vt0.c1)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('');
SELECT ALL * FROM vt0 WHERE (x'e62e') ORDER BY ((vt0.c2 IN ()) IN ((~ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((x'e62e') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 IN ()) IN ((~ (vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (x'e62e') ORDER BY ((vt0.c2 IN ()) IN ((~ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((x'e62e') IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 IN ()) IN ((~ (vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (x'e62e') ORDER BY ((vt0.c2 IN ()) IN ((~ (vt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((((((NULL)AND(NULL)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((((((NULL)AND(NULL)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((((((NULL)AND(NULL)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((((((NULL)AND(NULL)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((((((((((((NULL)AND(NULL)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (vt0.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>=(((vt0.c2) ISNULL)))) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>=(((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>=(((vt0.c2) ISNULL)))) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>=(((vt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>=(((vt0.c2) ISNULL)))) ORDER BY vt0.c2 ASC;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2)))LIKE((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c2)))LIKE((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2)))LIKE((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)%(vt0.c2)))LIKE((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)%(vt0.c2)))LIKE((vt0.c1 IN (vt0.c0, vt0.c0, vt0.c0)))));
SELECT * FROM vt0 WHERE (((((('e~s 1\r', vt0.c1, NULL))>=((vt0.c1, vt0.c2, vt0.c2))))<=(LIKELY(vt0.c0)))) ORDER BY CASE (+ (vt0.c1))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS TRUE) WHEN NULL THEN (((vt0.c0, vt0.c2, vt0.c0))<((vt0.c0, vt0.c1, '2067763771'))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('e~s 1\r', vt0.c1, NULL))>=((vt0.c1, vt0.c2, vt0.c2))))<=(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c1))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS TRUE) WHEN NULL THEN (((vt0.c0, vt0.c2, vt0.c0))<((vt0.c0, vt0.c1, '2067763771'))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((('e~s 1\r', vt0.c1, NULL))>=((vt0.c1, vt0.c2, vt0.c2))))<=(LIKELY(vt0.c0)))) ORDER BY CASE (+ (vt0.c1))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS TRUE) WHEN NULL THEN (((vt0.c0, vt0.c2, vt0.c0))<((vt0.c0, vt0.c1, '2067763771'))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('e~s 1\r', vt0.c1, NULL))>=((vt0.c1, vt0.c2, vt0.c2))))<=(LIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c1))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS TRUE) WHEN NULL THEN (((vt0.c0, vt0.c2, vt0.c0))<((vt0.c0, vt0.c1, '2067763771'))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((((('e~s 1\r', vt0.c1, NULL))>=((vt0.c1, vt0.c2, vt0.c2))))<=(LIKELY(vt0.c0)))) ORDER BY CASE (+ (vt0.c1))  WHEN (vt0.c2 IN ()) THEN ((vt0.c1) IS TRUE) WHEN NULL THEN (((vt0.c0, vt0.c2, vt0.c0))<((vt0.c0, vt0.c1, '2067763771'))) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOT NULL) END  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))&(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)%(vt0.c1)))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)%(vt0.c1)))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)%(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE ((HEX(DISTINCT vt0.c0) IN (CAST(vt0.c2 AS TEXT), CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c2) IS TRUE))||(((vt0.c0)AND(vt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT vt0.c0) IN (CAST(vt0.c2 AS TEXT), CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS TRUE))||(((vt0.c0)AND(vt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((HEX(DISTINCT vt0.c0) IN (CAST(vt0.c2 AS TEXT), CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c2) IS TRUE))||(((vt0.c0)AND(vt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((HEX(DISTINCT vt0.c0) IN (CAST(vt0.c2 AS TEXT), CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) IS TRUE))||(((vt0.c0)AND(vt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((HEX(DISTINCT vt0.c0) IN (CAST(vt0.c2 AS TEXT), CAST(NULL AS INTEGER)))) ORDER BY ((((vt0.c2) IS TRUE))||(((vt0.c0)AND(vt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)OR(vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN 183256903 THEN ((vt0.c1) NOTNULL) WHEN '' THEN x'' WHEN ((vt0.c0)GLOB(vt0.c1)) THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)OR(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN 183256903 THEN ((vt0.c1) NOTNULL) WHEN '' THEN x'' WHEN ((vt0.c0)GLOB(vt0.c1)) THEN x'' END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)OR(vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN 183256903 THEN ((vt0.c1) NOTNULL) WHEN '' THEN x'' WHEN ((vt0.c0)GLOB(vt0.c1)) THEN x'' END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)OR(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN 183256903 THEN ((vt0.c1) NOTNULL) WHEN '' THEN x'' WHEN ((vt0.c0)GLOB(vt0.c1)) THEN x'' END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)OR(vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN 183256903 THEN ((vt0.c1) NOTNULL) WHEN '' THEN x'' WHEN ((vt0.c0)GLOB(vt0.c1)) THEN x'' END;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))>=(((vt0.c0)LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))>=(((vt0.c0)LIKE(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))>=(((vt0.c0)LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))>=(((vt0.c0)LIKE(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))>=(((vt0.c0)LIKE(vt0.c2)))));
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS REAL)) ORDER BY (((((vt0.c2 IN ()))OR(((-1982482566)>=(vt0.c2)))))OR(UNLIKELY(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR(((-1982482566)>=(vt0.c2)))))OR(UNLIKELY(vt0.c2))));
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS REAL)) ORDER BY (((((vt0.c2 IN ()))OR(((-1982482566)>=(vt0.c2)))))OR(UNLIKELY(vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2 IN ()))OR(((-1982482566)>=(vt0.c2)))))OR(UNLIKELY(vt0.c2))));
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END AS REAL)) ORDER BY (((((vt0.c2 IN ()))OR(((-1982482566)>=(vt0.c2)))))OR(UNLIKELY(vt0.c2)));
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)<(vt0.c0)) IN ())) ORDER BY (('(X')>=(x''));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('(X')>=(x'')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)<(vt0.c0)) IN ())) ORDER BY (('(X')>=(x''));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('(X')>=(x'')));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)<(vt0.c0)) IN ())) ORDER BY (('(X')>=(x''));
SELECT * FROM vt0 WHERE ((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))IS(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))IS(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))IS(((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))IS(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))IS(((vt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (((vt0.c2, x'', vt0.c2, vt0.c0, 0.8994192829053409))<>((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))), (((vt0.c2, vt0.c0, 0.36071396725720317))<((vt0.c2, -581414612, vt0.c2))))) AND ((x'', ((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (((vt0.c2, x'', vt0.c2, vt0.c0, 0.8994192829053409))<>((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))), (((vt0.c2, vt0.c0, 0.36071396725720317))<((vt0.c2, -581414612, vt0.c2))))) AND ((x'', ((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (((vt0.c2, x'', vt0.c2, vt0.c0, 0.8994192829053409))<>((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))), (((vt0.c2, vt0.c0, 0.36071396725720317))<((vt0.c2, -581414612, vt0.c2))))) AND ((x'', ((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (((vt0.c2, x'', vt0.c2, vt0.c0, 0.8994192829053409))<>((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))), (((vt0.c2, vt0.c0, 0.36071396725720317))<((vt0.c2, -581414612, vt0.c2))))) AND ((x'', ((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)), (((vt0.c2, x'', vt0.c2, vt0.c0, 0.8994192829053409))<>((vt0.c2, vt0.c2, vt0.c1, vt0.c0, vt0.c2))), (((vt0.c2, vt0.c0, 0.36071396725720317))<((vt0.c2, -581414612, vt0.c2))))) AND ((x'', ((vt0.c0) NOTNULL), ((vt0.c0)OR(vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c2)))>=(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c2)))>=(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c2)))>=(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt0.c2)))>=(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)&(vt0.c2)))>=(x'' COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(x'')) THEN (((vt0.c1, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c1) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS NUMERIC) THEN (((vt0.c2))<>((vt0.c2))) END) ORDER BY 0.030892204393321854 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(x'')) THEN (((vt0.c1, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c1) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS NUMERIC) THEN (((vt0.c2))<>((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY 0.030892204393321854 DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(x'')) THEN (((vt0.c1, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c1) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS NUMERIC) THEN (((vt0.c2))<>((vt0.c2))) END) ORDER BY 0.030892204393321854 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(x'')) THEN (((vt0.c1, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c1) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS NUMERIC) THEN (((vt0.c2))<>((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY 0.030892204393321854 DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS(vt0.c0))  WHEN ((((vt0.c0)OR(vt0.c0)))OR(x'')) THEN (((vt0.c1, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c1) NOTNULL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END WHEN CAST(vt0.c1 AS NUMERIC) THEN (((vt0.c2))<>((vt0.c2))) END) ORDER BY 0.030892204393321854 DESC;
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1)|(vt0.c2))) BETWEEN ('!w-G') AND ((+ (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c2))) BETWEEN ('!w-G') AND ((+ (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1)|(vt0.c2))) BETWEEN ('!w-G') AND ((+ (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)|(vt0.c2))) BETWEEN ('!w-G') AND ((+ (vt0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1)|(vt0.c2))) BETWEEN ('!w-G') AND ((+ (vt0.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (LIKELIHOOD(CHANGES(), 0.24426977356693658)) ORDER BY (+ (((vt0.c0)OR(vt0.c0)))) DESC  NULLS FIRST, CASE '839247667'  WHEN ((vt0.c1)AND(vt0.c1)) THEN INSTR(vt0.c1, NULL) END DESC, (((CASE 2141671936  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END, CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT)))>((LIKELIHOOD(0.8071186410597175, 0.2540730592659791), CAST(vt0.c1 AS INTEGER), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CHANGES(), 0.24426977356693658)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)OR(vt0.c0)))) DESC  NULLS FIRST, CASE '839247667'  WHEN ((vt0.c1)AND(vt0.c1)) THEN INSTR(vt0.c1, NULL) END DESC, (((CASE 2141671936  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END, CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT)))>((LIKELIHOOD(0.8071186410597175, 0.2540730592659791), CAST(vt0.c1 AS INTEGER), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(CHANGES(), 0.24426977356693658)) ORDER BY (+ (((vt0.c0)OR(vt0.c0)))) DESC  NULLS FIRST, CASE '839247667'  WHEN ((vt0.c1)AND(vt0.c1)) THEN INSTR(vt0.c1, NULL) END DESC, (((CASE 2141671936  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END, CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT)))>((LIKELIHOOD(0.8071186410597175, 0.2540730592659791), CAST(vt0.c1 AS INTEGER), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CHANGES(), 0.24426977356693658)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)OR(vt0.c0)))) DESC  NULLS FIRST, CASE '839247667'  WHEN ((vt0.c1)AND(vt0.c1)) THEN INSTR(vt0.c1, NULL) END DESC, (((CASE 2141671936  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END, CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT)))>((LIKELIHOOD(0.8071186410597175, 0.2540730592659791), CAST(vt0.c1 AS INTEGER), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(CHANGES(), 0.24426977356693658)) ORDER BY (+ (((vt0.c0)OR(vt0.c0)))) DESC  NULLS FIRST, CASE '839247667'  WHEN ((vt0.c1)AND(vt0.c1)) THEN INSTR(vt0.c1, NULL) END DESC, (((CASE 2141671936  WHEN vt0.c2 THEN NULL ELSE vt0.c1 END, CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END, CAST(vt0.c1 AS TEXT)))>((LIKELIHOOD(0.8071186410597175, 0.2540730592659791), CAST(vt0.c1 AS INTEGER), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (TRIM((vt0.c1 IN (vt0.c1)))) ORDER BY (+ (CASE WHEN vt0.c1 THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c1 THEN vt0.c2 END)));
SELECT * FROM vt0 WHERE (TRIM((vt0.c1 IN (vt0.c1)))) ORDER BY (+ (CASE WHEN vt0.c1 THEN vt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CASE WHEN vt0.c1 THEN vt0.c2 END)));
SELECT * FROM vt0 WHERE (TRIM((vt0.c1 IN (vt0.c1)))) ORDER BY (+ (CASE WHEN vt0.c1 THEN vt0.c2 END));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c2)GLOB(vt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)GLOB(vt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c2)GLOB(vt0.c2)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)GLOB(vt0.c2)) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c2)GLOB(vt0.c2)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT NULL))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT NULL))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt0.c1)));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN '0.3980744477167585' ELSE vt0.c2 END)<(vt0.c0))) ORDER BY ((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), ((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c2 THEN '0.3980744477167585' ELSE vt0.c2 END)<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), ((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN '0.3980744477167585' ELSE vt0.c2 END)<(vt0.c0))) ORDER BY ((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), ((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c2 THEN '0.3980744477167585' ELSE vt0.c2 END)<(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), ((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN '0.3980744477167585' ELSE vt0.c2 END)<(vt0.c0))) ORDER BY ((((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))>((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))), ((vt0.c0) BETWEEN (((vt0.c0) IS TRUE)) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((CAST(vt0.c2 AS NUMERIC))AND(CASE WHEN -1516287582 THEN vt0.c2 ELSE vt0.c2 END)))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c2 AS NUMERIC))AND(CASE WHEN -1516287582 THEN vt0.c2 ELSE vt0.c2 END)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c2 AS NUMERIC))AND(CASE WHEN -1516287582 THEN vt0.c2 ELSE vt0.c2 END)))AND((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c2 AS NUMERIC))AND(CASE WHEN -1516287582 THEN vt0.c2 ELSE vt0.c2 END)))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c2 AS NUMERIC))AND(CASE WHEN -1516287582 THEN vt0.c2 ELSE vt0.c2 END)))AND((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT ('Z<^'))))) ORDER BY vt0.c0 DESC, ((((vt0.c0)>(vt0.c2)))!=((vt0.c1 IN (vt0.c1)))) DESC, CASE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))  WHEN (((vt0.c0, vt0.c1, vt0.c0))<(('''Z', vt0.c2, vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT ('Z<^'))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, ((((vt0.c0)>(vt0.c2)))!=((vt0.c1 IN (vt0.c1)))) DESC, CASE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))  WHEN (((vt0.c0, vt0.c1, vt0.c0))<(('''Z', vt0.c2, vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c2 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT ('Z<^'))))) ORDER BY vt0.c0 DESC, ((((vt0.c0)>(vt0.c2)))!=((vt0.c1 IN (vt0.c1)))) DESC, CASE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))  WHEN (((vt0.c0, vt0.c1, vt0.c0))<(('''Z', vt0.c2, vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT ('Z<^'))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, ((((vt0.c0)>(vt0.c2)))!=((vt0.c1 IN (vt0.c1)))) DESC, CASE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))  WHEN (((vt0.c0, vt0.c1, vt0.c0))<(('''Z', vt0.c2, vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c2 COLLATE RTRIM END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c2, vt0.c1, vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0, vt0.c2, vt0.c0)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((NOT ('Z<^'))))) ORDER BY vt0.c0 DESC, ((((vt0.c0)>(vt0.c2)))!=((vt0.c1 IN (vt0.c1)))) DESC, CASE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c1))  WHEN (((vt0.c0, vt0.c1, vt0.c0))<(('''Z', vt0.c2, vt0.c0))) THEN (vt0.c1 IN ()) ELSE vt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY TRIM(GLOB(NULL, vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(GLOB(NULL, vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY TRIM(GLOB(NULL, vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(GLOB(NULL, vt0.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c1))) ORDER BY TRIM(GLOB(NULL, vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c2)))OR((NOT (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN 0.5398333210187153 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c2)))OR((NOT (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN 0.5398333210187153 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c2)))OR((NOT (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN 0.5398333210187153 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(vt0.c2)))OR((NOT (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN 0.5398333210187153 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c2)))OR((NOT (vt0.c2)))))OR(CASE vt0.c1  WHEN vt0.c2 THEN 0.5398333210187153 END)));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<=(vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<=(vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<=(vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL)) ORDER BY ((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL)) ORDER BY ((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) NOTNULL)) ORDER BY ((((vt0.c1) NOT NULL))LIKE(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) IN ());
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN (vt0.c2))) NOT BETWEEN (((vt0.c2)==(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN 992011105 WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c2))) NOT BETWEEN (((vt0.c2)=(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN 992011105 WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN (vt0.c2))) NOT BETWEEN (((vt0.c2)==(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN 992011105 WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c2))) NOT BETWEEN (((vt0.c2)=(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN 992011105 WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN (vt0.c2))) NOT BETWEEN (((vt0.c2)==(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN 992011105 WHEN vt0.c1 THEN '-48139234' ELSE vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((vt0.c2 IN ()), (+ (vt0.c1)), (vt0.c0 IN ())))=((((vt0.c1) NOT NULL), (vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) IS TRUE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2 IN ()), (+ (vt0.c1)), (vt0.c0 IN ())))=((((vt0.c1) NOT NULL), (vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) IS TRUE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2 IN ()), (+ (vt0.c1)), (vt0.c0 IN ())))=((((vt0.c1) NOT NULL), (vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) IS TRUE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2 IN ()), (+ (vt0.c1)), (vt0.c0 IN ())))=((((vt0.c1) NOT NULL), (vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) IS TRUE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c2 IN ()), (+ (vt0.c1)), (vt0.c0 IN ())))=((((vt0.c1) NOT NULL), (vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))) IS TRUE)  NULLS FIRST, CAST(UPPER(vt0.c1) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c2)))) AND ((((432013743)LIKE(vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c2)))) AND ((((432013743)LIKE(vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c2)))) AND ((((432013743)LIKE(vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c2)))) AND ((((432013743)LIKE(vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)>(vt0.c2)))) AND ((((432013743)LIKE(vt0.c2))))));
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(((vt0.c2)=(vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(((vt0.c2)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(((vt0.c2)=(vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(((vt0.c2)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0)) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))<(((vt0.c2)=(vt0.c0))))) ORDER BY ((TRIM(vt0.c0)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))&('-633886431'))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c2)<<(vt0.c2))))  NULLS FIRST, ((((((vt0.c0) ISNULL))OR(IFNULL(vt0.c0, vt0.c2))))OR((- (vt0.c2)))) ASC  NULLS FIRST, ((vt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))&('-633886431'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c2)<<(vt0.c2))))  NULLS FIRST, ((((((vt0.c0) ISNULL))OR(IFNULL(vt0.c0, vt0.c2))))OR((- (vt0.c2)))) ASC  NULLS FIRST, ((vt0.c2) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))&('-633886431'))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c2)<<(vt0.c2))))  NULLS FIRST, ((((((vt0.c0) ISNULL))OR(IFNULL(vt0.c0, vt0.c2))))OR((- (vt0.c2)))) ASC  NULLS FIRST, ((vt0.c2) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)=(vt0.c0)))&('-633886431'))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c2)<<(vt0.c2))))  NULLS FIRST, ((((((vt0.c0) ISNULL))OR(IFNULL(vt0.c0, vt0.c2))))OR((- (vt0.c2)))) ASC  NULLS FIRST, ((vt0.c2) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)==(vt0.c0)))&('-633886431'))) ORDER BY ((((vt0.c0 COLLATE RTRIM)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((vt0.c2)<<(vt0.c2))))  NULLS FIRST, ((((((vt0.c0) ISNULL))OR(IFNULL(vt0.c0, vt0.c2))))OR((- (vt0.c2)))) ASC  NULLS FIRST, ((vt0.c2) NOTNULL);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c1) IS TRUE) AS INTEGER)) ORDER BY '-393622761' ASC, TRIM(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST, (((vt0.c1)%(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '-393622761' ASC, TRIM(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST, (((vt0.c1)%(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c1) IS TRUE) AS INTEGER)) ORDER BY '-393622761' ASC, TRIM(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST, (((vt0.c1)%(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY '-393622761' ASC, TRIM(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST, (((vt0.c1)%(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (CAST(((vt0.c1) IS TRUE) AS INTEGER)) ORDER BY '-393622761' ASC, TRIM(DISTINCT ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST, (((vt0.c1)%(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (0.9463509681409331) ORDER BY (~ (((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9463509681409331) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.9463509681409331) ORDER BY (~ (((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9463509681409331) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0.9463509681409331) ORDER BY (~ (((((((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) ISNULL)) ORDER BY ((((vt0.c1)<<('*\r6B'))) NOT BETWEEN ('9>R_sq') AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<('*\r6B'))) NOT BETWEEN ('9>R_sq') AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) ISNULL)) ORDER BY ((((vt0.c1)<<('*\r6B'))) NOT BETWEEN ('9>R_sq') AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<<('*\r6B'))) NOT BETWEEN ('9>R_sq') AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) ISNULL)) ORDER BY ((((vt0.c1)<<('*\r6B'))) NOT BETWEEN ('9>R_sq') AND (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL))<((vt0.c2)))) NOT NULL)) ORDER BY ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)/(vt0.c2))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL))<((vt0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)/(vt0.c2))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL))<((vt0.c2)))) NOT NULL)) ORDER BY ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)/(vt0.c2))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL))<((vt0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)/(vt0.c2))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NULL))<((vt0.c2)))) NOT NULL)) ORDER BY ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c1)/(vt0.c2))) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c2 AS REAL))));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (UNLIKELY(DISTINCT '' COLLATE RTRIM)) ORDER BY ((((((vt0.c2)+(0.4344562007654371)))OR(((vt0.c1)LIKE(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT '' COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)+(0.4344562007654371)))OR(((vt0.c1)LIKE(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (UNLIKELY(DISTINCT '' COLLATE RTRIM)) ORDER BY ((((((vt0.c2)+(0.4344562007654371)))OR(((vt0.c1)LIKE(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT '' COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)+(0.4344562007654371)))OR(((vt0.c1)LIKE(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (UNLIKELY(DISTINCT '' COLLATE RTRIM)) ORDER BY ((((((vt0.c2)+(0.4344562007654371)))OR(((vt0.c1)LIKE(vt0.c1)))))AND(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (x'') ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END));
SELECT * FROM vt0 WHERE (x'') ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END));
SELECT * FROM vt0 WHERE (x'') ORDER BY RTRIM(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c2 AS NUMERIC)))>((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c2 AS NUMERIC)))>((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))!=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c2 AS NUMERIC)))>((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c2 AS NUMERIC)))>((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)!=(vt0.c0)))!=(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c2 AS NUMERIC)))>((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 END)))) ORDER BY ((((vt0.c0)<>(vt0.c0)))<>(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((x'')AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (('-21618696')<<(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (('-21618696')<<(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT * FROM vt0 WHERE (((((x'')AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (('-21618696')<<(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (('-21618696')<<(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))));
SELECT * FROM vt0 WHERE (((((x'')AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY (('-21618696')<<(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))OR(CAST(vt0.c2 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))OR(CAST(vt0.c2 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))OR(CAST(vt0.c2 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))OR(CAST(vt0.c2 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))OR(CAST(vt0.c2 AS INTEGER))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))*(((vt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))*(((vt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))*(((vt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))*(((vt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))*(((vt0.c2)IS(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (0Xffffffff82e6c827) ORDER BY vt0.c0  NULLS LAST, (vt0.c2 IN (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff82e6c827) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (vt0.c2 IN (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0Xffffffff82e6c827) ORDER BY vt0.c0  NULLS LAST, (vt0.c2 IN (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff82e6c827) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST, (vt0.c2 IN (CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (0Xffffffff82e6c827) ORDER BY vt0.c0  NULLS LAST, (vt0.c2 IN (CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'')OR(vt0.c2)))AND(vt0.c2)) AS REAL)) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')OR(vt0.c2)))AND(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'')OR(vt0.c2)))AND(vt0.c2)) AS REAL)) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((x'')OR(vt0.c2)))AND(vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))<(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((x'')OR(vt0.c2)))AND(vt0.c2)) AS REAL)) ORDER BY (((vt0.c0 IN ()))<(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))) ASC;
