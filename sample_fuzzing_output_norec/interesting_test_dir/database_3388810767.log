-- Time: 2024/06/09 13:18:01
-- Database: database67
-- Database version: 3.40.0
-- seed value: 3388810767
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, c2); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA journal_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES ('', ''), (NULL, ''), (NULL, 'nY'); -- 1ms;
DELETE FROM vt0 WHERE vt0.c2; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET (c0, c2)=('-948993290', '苶6NC') WHERE vt0.c2; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-948993290,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c2, c2)=('', 0.6249241077198807, 0.6249241077198807); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0, c1) VALUES (NULL, 'x䤧FO0t#6l', '-290925168'), ('a)', x'3b13', '-1272210804'), ('-1272210804', x'', 0.3708140960687465); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED, languageid="lid"); -- 1ms;
PRAGMA main.locking_mode; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT OR REPLACE INTO vt0(c2) VALUES ('''܌O\r䤧㧦'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL x'' FROM vt0, vt1; -- 1ms;
UPDATE OR REPLACE vt1 SET (lid)=(x'b3f7'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.23035023601644578 WHERE ((IFNULL(DISTINCT vt0.c0, vt0.c0))IS NOT(((vt0.c2) NOT NULL))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c2) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('900086246') WHERE (((vt1.c2))>=((vt1.c2))) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL), (0.23035023601644578), (x''), ('1470515495'), (((x'' COLLATE RTRIM) BETWEEN (CAST('验U p\r1' AS TEXT)) AND (CASE x''  WHEN NULL THEN 9.00086246E8 WHEN x'' THEN 'nY' WHEN x'' THEN -1324875538 ELSE '-1' END))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (607544208, x'', NULL, '-0.0'); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('0.6249241077198807', '-948993290'), (NULL, x''), ('F', NULL); -- 0ms;
PRAGMA journal_mode = PERSIST; -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c2) VALUES (NULL, '-290925168'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt0 SET (c2)=(x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.6249241077198807', 0.13151751613822205, 0.6861298836770214); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES ('&p', '', 0.010250359380636676, 0.622022057019578); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.23035023601644578); -- 1ms;
END; -- 0ms;
UPDATE vt0 SET c1=0.9980390067507889, c0='607544208'; -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
END; -- 0ms;
INSERT OR ROLLBACK INTO vt1(lid, c0) VALUES (x'', '874660862'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1066656856,15');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (x'', 0.6911131927141512); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1819'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 953434679); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (x'', x''), (x'', '<C'), (NULL, x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1868931765); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '65047'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=87193842,7');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
VACUUM; -- 1ms;
DROP VIEW v0; -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (x'', x''), (0xffffffff8bc7083d, NULL), ('	9܌yꚢL\b', NULL); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-283771360 unordered noskipscan'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1212917091);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE temp; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('-1324875538'); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(vt0.c2)))AND(vt1.c2)) COLLATE BINARY) ORDER BY (NOT (((vt0.c2)/(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt0.c2)))AND(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c2)/(vt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(vt0.c2)))AND(vt1.c2)) COLLATE BINARY) ORDER BY (NOT (((vt0.c2)/(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)OR(vt0.c2)))AND(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c2)/(vt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(vt0.c2)))AND(vt1.c2)) COLLATE BINARY) ORDER BY (NOT (((vt0.c2)/(vt0.c2)))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((1626450238) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(0.3708140960687465 COLLATE RTRIM)))OR((+ (vt1.lid)))))AND(((0.26325013609768955) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(((1626450238) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(0.3708140960687465 COLLATE RTRIM)))OR((+ (vt1.lid)))))AND(((0.26325013609768955) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((1626450238) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(0.3708140960687465 COLLATE RTRIM)))OR((+ (vt1.lid)))))AND(((0.26325013609768955) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(((1626450238) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(0.3708140960687465 COLLATE RTRIM)))OR((+ (vt1.lid)))))AND(((0.26325013609768955) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((1626450238) NOT BETWEEN (vt0.c1) AND (vt1.c1)))))AND(0.3708140960687465 COLLATE RTRIM)))OR((+ (vt1.lid)))))AND(((0.26325013609768955) IS FALSE))));
SELECT * FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN (+ ('c\n''')) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE vt0.c1  WHEN 0.5990094656263146 THEN 0.16440376392385914 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) IS TRUE)  WHEN (+ ('c\n''')) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN 0.5990094656263146 THEN 0.16440376392385914 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN (+ ('c\n''')) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE vt0.c1  WHEN 0.5990094656263146 THEN 0.16440376392385914 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) IS TRUE)  WHEN (+ ('c\n''')) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN 0.5990094656263146 THEN 0.16440376392385914 END COLLATE NOCASE DESC);
SELECT * FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN (+ ('c\n''')) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY CASE vt0.c1  WHEN 0.5990094656263146 THEN 0.16440376392385914 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE) ORDER BY UNLIKELY(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE) ORDER BY UNLIKELY(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY UNLIKELY(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL) NOT BETWEEN (vt1.lid) AND (vt1.c0)) COLLATE NOCASE) ORDER BY UNLIKELY(DISTINCT (((vt0.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))));
SELECT * FROM vt0 WHERE ((('-1283628027' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((('-1283628027' IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('-1283628027' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((('-1283628027' IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('-1283628027' IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE '0.6861298836770214' COLLATE BINARY  WHEN vt1.c0 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '0.6861298836770214' COLLATE BINARY  WHEN vt1.c0 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE '0.6861298836770214' COLLATE BINARY  WHEN vt1.c0 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '0.6861298836770214' COLLATE BINARY  WHEN vt1.c0 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE '0.6861298836770214' COLLATE BINARY  WHEN vt1.c0 THEN (((vt1.c2)) BETWEEN ((vt1.c2)) AND ((vt1.c0))) END);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt1.c0))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt1.lid ELSE vt1.c1 END))) WHERE (((0.6354834781970659) NOT BETWEEN (CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid END) AND (vt0.c0))) ORDER BY ((((vt0.c1) NOT BETWEEN ('骜W') AND (x'')))LIKE(CAST(x'b9c7' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.6354834781970659) NOT BETWEEN (CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt1.c0))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt1.lid ELSE vt1.c1 END))) ORDER BY ((((vt0.c1) NOT BETWEEN ('骜W') AND (x'')))LIKE(CAST(x'b9c7' AS TEXT))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt1.c0))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt1.lid ELSE vt1.c1 END))) WHERE (((0.6354834781970659) NOT BETWEEN (CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid END) AND (vt0.c0))) ORDER BY ((((vt0.c1) NOT BETWEEN ('骜W') AND (x'')))LIKE(CAST(x'b9c7' AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.6354834781970659) NOT BETWEEN (CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt1.c0))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt1.lid ELSE vt1.c1 END))) ORDER BY ((((vt0.c1) NOT BETWEEN ('骜W') AND (x'')))LIKE(CAST(x'b9c7' AS TEXT))) DESC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((NULLIF(vt0.c0, vt1.c0))) AND ((CASE vt0.c0  WHEN vt0.c2 THEN vt1.lid ELSE vt1.c1 END))) WHERE (((0.6354834781970659) NOT BETWEEN (CASE vt1.lid  WHEN vt1.c1 THEN vt1.lid END) AND (vt0.c0))) ORDER BY ((((vt0.c1) NOT BETWEEN ('骜W') AND (x'')))LIKE(CAST(x'b9c7' AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt1.lid))) NOT BETWEEN ((vt0.c1 IN ())) AND (ABS(vt0.c2)))) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.lid))) NOT BETWEEN ((vt0.c1 IN ())) AND (ABS(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt1.lid))) NOT BETWEEN ((vt0.c1 IN ())) AND (ABS(vt0.c2)))) ORDER BY vt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.lid))) NOT BETWEEN ((vt0.c1 IN ())) AND (ABS(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)OR(vt1.lid))) NOT BETWEEN ((vt0.c1 IN ())) AND (ABS(vt0.c2)))) ORDER BY vt0.c2 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c2)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((+ (vt1.c2)) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1582588991') ORDER BY (((((vt0.c0, vt0.c2, vt1.c0))<((vt0.c1, vt1.c1, vt0.c0)))) ISNULL), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c2))) NOT BETWEEN (vt1.c2) AND ((vt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1582588991') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0, vt0.c2, vt1.c0))<((vt0.c1, vt1.c1, vt0.c0)))) ISNULL), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c2))) NOT BETWEEN (vt1.c2) AND ((vt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1582588991') ORDER BY (((((vt0.c0, vt0.c2, vt1.c0))<((vt0.c1, vt1.c1, vt0.c0)))) ISNULL), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c2))) NOT BETWEEN (vt1.c2) AND ((vt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1582588991') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0, vt0.c2, vt1.c0))<((vt0.c1, vt1.c1, vt0.c0)))) ISNULL), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c2))) NOT BETWEEN (vt1.c2) AND ((vt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('-1582588991') ORDER BY (((((vt0.c0, vt0.c2, vt1.c0))<((vt0.c1, vt1.c1, vt0.c0)))) ISNULL), ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c2))) NOT BETWEEN (vt1.c2) AND ((vt1.c2 IN ()))) DESC;
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (((vt1.c2, vt0.c1, vt1.c0))=((vt0.c2, vt1.c2, vt0.c1))))) ORDER BY (((- (vt1.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt1.c2, vt0.c1, vt1.c0))==((vt0.c2, vt1.c2, vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt1.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (((vt1.c2, vt0.c1, vt1.c0))=((vt0.c2, vt1.c2, vt0.c1))))) ORDER BY (((- (vt1.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (((vt1.c2, vt0.c1, vt1.c0))==((vt0.c2, vt1.c2, vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt1.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (((vt1.c2, vt0.c1, vt1.c0))=((vt0.c2, vt1.c2, vt0.c1))))) ORDER BY (((- (vt1.c2))) NOT NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.lid);
SELECT ALL * FROM vt0, vt1 WHERE ('-1949890499');
SELECT SUM(count) FROM (SELECT ALL (('-1949890499') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('-1949890499');
SELECT SUM(count) FROM (SELECT ALL (('-1949890499') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ('-1949890499');
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY (((vt0.c2, vt0.c0, vt1.c0)) BETWEEN ((TRIM(vt0.c0), ((((vt0.c0)AND(vt1.c2)))AND(vt1.c0)), CASE WHEN vt0.c1 THEN NULL END)) AND ((((vt0.c2)>=(vt0.c1)), UPPER(vt1.c2), UPPER('''܌O\r䤧㧦'))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c2, vt0.c0, vt1.c0)) BETWEEN ((TRIM(vt0.c0), ((((vt0.c0)AND(vt1.c2)))AND(vt1.c0)), CASE WHEN vt0.c1 THEN NULL END)) AND ((((vt0.c2)>=(vt0.c1)), UPPER(vt1.c2), UPPER('''܌O\r䤧㧦')))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY (((vt0.c2, vt0.c0, vt1.c0)) BETWEEN ((TRIM(vt0.c0), ((((vt0.c0)AND(vt1.c2)))AND(vt1.c0)), CASE WHEN vt0.c1 THEN NULL END)) AND ((((vt0.c2)>=(vt0.c1)), UPPER(vt1.c2), UPPER('''܌O\r䤧㧦'))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c2, vt0.c0, vt1.c0)) BETWEEN ((TRIM(vt0.c0), ((((vt0.c0)AND(vt1.c2)))AND(vt1.c0)), CASE WHEN vt0.c1 THEN NULL END)) AND ((((vt0.c2)>=(vt0.c1)), UPPER(vt1.c2), UPPER('''܌O\r䤧㧦')))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (x'') ORDER BY (((vt0.c2, vt0.c0, vt1.c0)) BETWEEN ((TRIM(vt0.c0), ((((vt0.c0)AND(vt1.c2)))AND(vt1.c0)), CASE WHEN vt0.c1 THEN NULL END)) AND ((((vt0.c2)>=(vt0.c1)), UPPER(vt1.c2), UPPER('''܌O\r䤧㧦'))));
SELECT ALL * FROM vt1 WHERE ('1212917091') ORDER BY (((+ (vt1.c0)))<<((- (vt1.lid)))) ASC, ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (('1212917091') IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0)))<<((- (vt1.lid)))) ASC, ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL));
SELECT ALL * FROM vt1 WHERE ('1212917091') ORDER BY (((+ (vt1.c0)))<<((- (vt1.lid)))) ASC, ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (('1212917091') IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0)))<<((- (vt1.lid)))) ASC, ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL));
SELECT ALL * FROM vt1 WHERE ('1212917091') ORDER BY (((+ (vt1.c0)))<<((- (vt1.lid)))) ASC, ((((vt1.c2) NOT BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(((((NULL)OR(vt0.c0)))OR(vt1.c0)))) ORDER BY (((vt1.lid, 'C,(Fa6㧦[', vt1.c2)) BETWEEN ((CASE vt0.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, '-1324875538', vt0.c1)) AND ((x'', ((vt0.c1)>>(vt1.c2)), ((0Xffffffffa6cad7a9)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((NULL)OR(vt0.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.lid, 'C,(Fa6㧦[', vt1.c2)) BETWEEN ((CASE vt0.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, '-1324875538', vt0.c1)) AND ((x'', ((vt0.c1)>>(vt1.c2)), ((0Xffffffffa6cad7a9)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(((((NULL)OR(vt0.c0)))OR(vt1.c0)))) ORDER BY (((vt1.lid, 'C,(Fa6㧦[', vt1.c2)) BETWEEN ((CASE vt0.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, '-1324875538', vt0.c1)) AND ((x'', ((vt0.c1)>>(vt1.c2)), ((0Xffffffffa6cad7a9)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((NULL)OR(vt0.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.lid, 'C,(Fa6㧦[', vt1.c2)) BETWEEN ((CASE vt0.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, '-1324875538', vt0.c1)) AND ((x'', ((vt0.c1)>>(vt1.c2)), ((0Xffffffffa6cad7a9)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(((((NULL)OR(vt0.c0)))OR(vt1.c0)))) ORDER BY (((vt1.lid, 'C,(Fa6㧦[', vt1.c2)) BETWEEN ((CASE vt0.c2  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, '-1324875538', vt0.c1)) AND ((x'', ((vt0.c1)>>(vt1.c2)), ((0Xffffffffa6cad7a9)LIKE(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(((vt0.c0) IS TRUE))))OR(ABS(0.4369710950206437))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(vt0.c2)))AND(((vt0.c0) IS TRUE))))OR(ABS(0.4369710950206437)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(((vt0.c0) IS TRUE))))OR(ABS(0.4369710950206437))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)AND(vt0.c2)))AND(((vt0.c0) IS TRUE))))OR(ABS(0.4369710950206437)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((vt0.c2)AND(vt0.c2)))AND(((vt0.c0) IS TRUE))))OR(ABS(0.4369710950206437))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS TEXT));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY x'9324' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY x'9324' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY x'9324' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY x'9324' DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY x'9324' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE (CAST((+ (vt0.c0)) AS TEXT));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY LENGTH(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN 0.35761750783205815 WHEN vt1.c1 THEN vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY LENGTH(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN 0.35761750783205815 WHEN vt1.c1 THEN vt1.c0 END) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY LENGTH(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN 0.35761750783205815 WHEN vt1.c1 THEN vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY LENGTH(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN 0.35761750783205815 WHEN vt1.c1 THEN vt1.c0 END) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT NULL)) ORDER BY LENGTH(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.lid THEN 0.35761750783205815 WHEN vt1.c1 THEN vt1.c0 END) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)  NULLS FIRST, (NOT (0.3382230413352987))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)  NULLS FIRST, (NOT (0.3382230413352987))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)  NULLS FIRST, (NOT (0.3382230413352987))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)  NULLS FIRST, (NOT (0.3382230413352987))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c0) IS TRUE)))) ORDER BY CAST(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)  NULLS FIRST, (NOT (0.3382230413352987))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c1)GLOB(vt1.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)GLOB(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)GLOB(vt1.lid))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)GLOB(vt1.lid))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)GLOB(vt1.lid))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(vt0.c0)) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(vt0.c0)) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT);
SELECT SUM(count) FROM (SELECT ((((TYPEOF(vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((TYPEOF(vt0.c0)) NOTNULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)OR(vt0.c1)) IN ())) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)OR(vt0.c1)) IN ())) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)OR(vt0.c1)) IN ())) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))OR(((vt1.c1)||(vt1.lid)))))OR(((x'baac')|(vt1.c2)))))AND(-135488403)))AND(vt1.c1 COLLATE BINARY)))AND(vt1.c1)))OR(0.6120470052356936))) ORDER BY CASE ((vt1.c2)LIKE(vt1.c0))  WHEN ((vt1.c2)%(NULL)) THEN CASE vt1.c2  WHEN NULL THEN vt1.c0 ELSE vt1.lid END WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) WHEN LIKE(vt1.c1, vt1.c1) THEN ((vt1.c2)*(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))OR(((vt1.c1)||(vt1.lid)))))OR(((x'baac')|(vt1.c2)))))AND(-135488403)))AND(vt1.c1 COLLATE BINARY)))AND(vt1.c1)))OR(0.6120470052356936))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c2)LIKE(vt1.c0))  WHEN ((vt1.c2)%(NULL)) THEN CASE vt1.c2  WHEN NULL THEN vt1.c0 ELSE vt1.lid END WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) WHEN LIKE(vt1.c1, vt1.c1) THEN ((vt1.c2)*(vt1.c0)) END DESC);
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))OR(((vt1.c1)||(vt1.lid)))))OR(((x'baac')|(vt1.c2)))))AND(-135488403)))AND(vt1.c1 COLLATE BINARY)))AND(vt1.c1)))OR(0.6120470052356936))) ORDER BY CASE ((vt1.c2)LIKE(vt1.c0))  WHEN ((vt1.c2)%(NULL)) THEN CASE vt1.c2  WHEN NULL THEN vt1.c0 ELSE vt1.lid END WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) WHEN LIKE(vt1.c1, vt1.c1) THEN ((vt1.c2)*(vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))OR(((vt1.c1)||(vt1.lid)))))OR(((x'baac')|(vt1.c2)))))AND(-135488403)))AND(vt1.c1 COLLATE BINARY)))AND(vt1.c1)))OR(0.6120470052356936))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c2)LIKE(vt1.c0))  WHEN ((vt1.c2)%(NULL)) THEN CASE vt1.c2  WHEN NULL THEN vt1.c0 ELSE vt1.lid END WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) WHEN LIKE(vt1.c1, vt1.c1) THEN ((vt1.c2)*(vt1.c0)) END DESC);
SELECT * FROM vt1 WHERE (((((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))OR(((vt1.c1)||(vt1.lid)))))OR(((x'baac')|(vt1.c2)))))AND(-135488403)))AND(vt1.c1 COLLATE BINARY)))AND(vt1.c1)))OR(0.6120470052356936))) ORDER BY CASE ((vt1.c2)LIKE(vt1.c0))  WHEN ((vt1.c2)%(NULL)) THEN CASE vt1.c2  WHEN NULL THEN vt1.c0 ELSE vt1.lid END WHEN (((vt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)) WHEN LIKE(vt1.c1, vt1.c1) THEN ((vt1.c2)*(vt1.c0)) END DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (~ (((((NULL)AND(vt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((((NULL)AND(vt1.c2)))AND(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (~ (((((NULL)AND(vt1.c2)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (((((NULL)AND(vt1.c2)))AND(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOT NULL)) ORDER BY (~ (((((NULL)AND(vt1.c2)))AND(vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt1.c0) NOTNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (' ''') ORDER BY (+ (CAST(vt1.lid AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ''') IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CAST(vt1.lid AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (' ''') ORDER BY (+ (CAST(vt1.lid AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((' ''') IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (CAST(vt1.lid AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (' ''') ORDER BY (+ (CAST(vt1.lid AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c2 AS TEXT) THEN vt0.c2 COLLATE BINARY WHEN ((vt0.c2)>(vt0.c2)) THEN (vt1.c0 IN (vt0.c2)) WHEN CASE vt1.lid  WHEN vt1.c2 THEN vt1.lid ELSE vt1.lid END THEN vt1.c0 COLLATE RTRIM END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c2 AS TEXT) THEN vt0.c2 COLLATE BINARY WHEN ((vt0.c2)>(vt0.c2)) THEN (vt1.c0 IN (vt0.c2)) WHEN CASE vt1.lid  WHEN vt1.c2 THEN vt1.lid ELSE vt1.lid END THEN vt1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c2 AS TEXT) THEN vt0.c2 COLLATE BINARY WHEN ((vt0.c2)>(vt0.c2)) THEN (vt1.c0 IN (vt0.c2)) WHEN CASE vt1.lid  WHEN vt1.c2 THEN vt1.lid ELSE vt1.lid END THEN vt1.c0 COLLATE RTRIM END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c2 AS TEXT) THEN vt0.c2 COLLATE BINARY WHEN ((vt0.c2)>(vt0.c2)) THEN (vt1.c0 IN (vt0.c2)) WHEN CASE vt1.lid  WHEN vt1.c2 THEN vt1.lid ELSE vt1.lid END THEN vt1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN CAST(vt1.c2 AS TEXT) THEN vt0.c2 COLLATE BINARY WHEN ((vt0.c2)>(vt0.c2)) THEN (vt1.c0 IN (vt0.c2)) WHEN CASE vt1.lid  WHEN vt1.c2 THEN vt1.lid ELSE vt1.lid END THEN vt1.c0 COLLATE RTRIM END WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(0.3382230413352987 AS NUMERIC))>=(vt1.c2 COLLATE RTRIM))) ORDER BY (((('-948993290') NOT BETWEEN (vt1.c2) AND (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.3382230413352987 AS NUMERIC))>=(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('-948993290') NOT BETWEEN (vt1.c2) AND (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(0.3382230413352987 AS NUMERIC))>=(vt1.c2 COLLATE RTRIM))) ORDER BY (((('-948993290') NOT BETWEEN (vt1.c2) AND (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(0.3382230413352987 AS NUMERIC))>=(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((('-948993290') NOT BETWEEN (vt1.c2) AND (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(0.3382230413352987 AS NUMERIC))>=(vt1.c2 COLLATE RTRIM))) ORDER BY (((('-948993290') NOT BETWEEN (vt1.c2) AND (vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt1.c1) BETWEEN (vt1.c1) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))>>(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END WHEN (vt0.c0 IN ()) THEN vt0.c2 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt0.c0)=(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c2)))>>(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END WHEN (vt0.c0 IN ()) THEN vt0.c2 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt0.c0)==(vt0.c2)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))>>(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END WHEN (vt0.c0 IN ()) THEN vt0.c2 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt0.c0)=(vt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c2)))>>(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END WHEN (vt0.c0 IN ()) THEN vt0.c2 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt0.c0)==(vt0.c2)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)||(vt0.c2)))>>(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c2)IS NOT(vt0.c0)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END WHEN (vt0.c0 IN ()) THEN vt0.c2 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt0.c0)=(vt0.c2)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2);
SELECT * FROM vt1 WHERE ((((TRIM(DISTINCT vt1.lid, vt1.lid), vt1.c0 COLLATE BINARY, 0X7097b44b))<=((rtreenode(vt1.c0, vt1.c1), ((vt1.c2)%(vt1.c2)), x'ca8a')))) ORDER BY (((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt1.lid, vt1.lid), vt1.c0 COLLATE BINARY, 0X7097b44b))<=((rtreenode(vt1.c0, vt1.c1), ((vt1.c2)%(vt1.c2)), x'ca8a')))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)) IN ()));
SELECT * FROM vt1 WHERE ((((TRIM(DISTINCT vt1.lid, vt1.lid), vt1.c0 COLLATE BINARY, 0X7097b44b))<=((rtreenode(vt1.c0, vt1.c1), ((vt1.c2)%(vt1.c2)), x'ca8a')))) ORDER BY (((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(DISTINCT vt1.lid, vt1.lid), vt1.c0 COLLATE BINARY, 0X7097b44b))<=((rtreenode(vt1.c0, vt1.c1), ((vt1.c2)%(vt1.c2)), x'ca8a')))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)) IN ()));
SELECT * FROM vt1 WHERE ((((TRIM(DISTINCT vt1.lid, vt1.lid), vt1.c0 COLLATE BINARY, 0X7097b44b))<=((rtreenode(vt1.c0, vt1.c1), ((vt1.c2)%(vt1.c2)), x'ca8a')))) ORDER BY (((((vt1.c2)AND(vt1.c1)))AND(vt1.c1)) IN ());
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (- ((vt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ((vt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (- ((vt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- ((vt0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (- ((vt0.c2 IN ()))) ASC;
SELECT * FROM vt0, vt1 WHERE (((x'4c0f') NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt0.c2))) AND (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((x'4c0f') NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt0.c2))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((x'4c0f') NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt0.c2))) AND (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((x'4c0f') NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt0.c2))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((x'4c0f') NOT BETWEEN (((((vt1.lid)AND(vt1.c1)))AND(vt0.c2))) AND (vt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.lid)<=(vt1.c2))))) ORDER BY (((0.9980390067507889))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.lid)<=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((0.9980390067507889))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.lid)<=(vt1.c2))))) ORDER BY (((0.9980390067507889))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.lid)<=(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY (((0.9980390067507889))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, x'' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.lid)<=(vt1.c2))))) ORDER BY (((0.9980390067507889))>=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ASC  NULLS FIRST, x'' DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ('') ORDER BY ((6.07544208E8 COLLATE BINARY) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((6.07544208E8 COLLATE BINARY) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ('') ORDER BY ((6.07544208E8 COLLATE BINARY) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((6.07544208E8 COLLATE BINARY) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ('') ORDER BY ((6.07544208E8 COLLATE BINARY) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON COALESCE(DISTINCT (('270872482') BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1 COLLATE RTRIM, ((((vt1.c2)OR(vt1.lid)))AND(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END) WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND('-1255212196')))AND(vt0.c1)))OR(vt1.lid)))GLOB(CASE vt1.c2  WHEN vt1.lid THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND('-1255212196')))AND(vt0.c1)))OR(vt1.lid)))GLOB(CASE vt1.c2  WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON COALESCE(DISTINCT (('270872482') BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1 COLLATE RTRIM, ((((vt1.c2)OR(vt1.lid)))AND(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON COALESCE(DISTINCT (('270872482') BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1 COLLATE RTRIM, ((((vt1.c2)OR(vt1.lid)))AND(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END) WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND('-1255212196')))AND(vt0.c1)))OR(vt1.lid)))GLOB(CASE vt1.c2  WHEN vt1.lid THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c0)))AND('-1255212196')))AND(vt0.c1)))OR(vt1.lid)))GLOB(CASE vt1.c2  WHEN vt1.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON COALESCE(DISTINCT (('270872482') BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1 COLLATE RTRIM, ((((vt1.c2)OR(vt1.lid)))AND(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON COALESCE(DISTINCT (('270872482') BETWEEN (vt0.c2) AND (vt0.c1)), vt0.c1 COLLATE RTRIM, ((((vt1.c2)OR(vt1.lid)))AND(vt1.lid)), CASE vt1.lid  WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END) WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND('-1255212196')))AND(vt0.c1)))OR(vt1.lid)))GLOB(CASE vt1.c2  WHEN vt1.lid THEN vt1.c0 END)));
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN x'5d8cfd2b' ELSE ((vt0.c2)>(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN x'5d8cfd2b' ELSE ((vt0.c2)>(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN x'5d8cfd2b' ELSE ((vt0.c2)>(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN x'5d8cfd2b' ELSE ((vt0.c2)>(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (~ (vt0.c1))  WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN x'5d8cfd2b' ELSE ((vt0.c2)>(vt0.c2)) END);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))||(((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL))||(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))||(((vt0.c0)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL))||(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))||(((vt0.c0)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT 1316705250)) ORDER BY ((((((((-1.496655959E9 COLLATE RTRIM)AND(((vt1.lid)+(vt0.c2)))))OR(vt0.c1)))OR((vt1.c0 IN ()))))OR((((vt0.c2))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT 1316705250)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((-1.496655959E9 COLLATE RTRIM)AND(((vt1.lid)+(vt0.c2)))))OR(vt0.c1)))OR((vt1.c0 IN ()))))OR((((vt0.c2))<=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT 1316705250)) ORDER BY ((((((((-1.496655959E9 COLLATE RTRIM)AND(((vt1.lid)+(vt0.c2)))))OR(vt0.c1)))OR((vt1.c0 IN ()))))OR((((vt0.c2))<=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT 1316705250)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((-1.496655959E9 COLLATE RTRIM)AND(((vt1.lid)+(vt0.c2)))))OR(vt0.c1)))OR((vt1.c0 IN ()))))OR((((vt0.c2))<=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (ABS(DISTINCT 1316705250)) ORDER BY ((((((((-1.496655959E9 COLLATE RTRIM)AND(((vt1.lid)+(vt0.c2)))))OR(vt0.c1)))OR((vt1.c0 IN ()))))OR((((vt0.c2))<=((vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))AND(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.lid)))) WHERE (((vt0.c2)/(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.lid)<(vt0.c2))))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)/(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))AND(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.lid)))) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.lid)<(vt0.c2))))) DESC, NULL ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))AND(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.lid)))) WHERE (((vt0.c2)/(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.lid)<(vt0.c2))))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)/(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))AND(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.lid)))) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.lid)<(vt0.c2))))) DESC, NULL ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))AND(((vt1.c2) NOT BETWEEN (vt0.c2) AND (vt1.lid)))) WHERE (((vt0.c2)/(vt1.c0)) COLLATE RTRIM) ORDER BY (((vt1.lid)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.lid)<(vt0.c2))))) DESC, NULL ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c0)LIKE(vt0.c1)) IN ((((vt0.c2))<>((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)LIKE(vt0.c1)) IN ((((vt0.c2))<>((vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c0)LIKE(vt0.c1)) IN ((((vt0.c2))<>((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)LIKE(vt0.c1)) IN ((((vt0.c2))<>((vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY (((vt1.c0)LIKE(vt0.c1)) IN ((((vt0.c2))<>((vt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) IS TRUE) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c2) IS TRUE) AS BLOB));
SELECT * FROM vt1 WHERE ((- (vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (vt1.c2)));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))<=((vt0.c0)))  WHEN vt0.c2 THEN ((((((((vt0.c1)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 END) ORDER BY CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)&(0.5016150903869575)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))<=((vt0.c0)))  WHEN vt0.c2 THEN ((((((((vt0.c1)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)&(0.5016150903869575)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))<=((vt0.c0)))  WHEN vt0.c2 THEN ((((((((vt0.c1)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 END) ORDER BY CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)&(0.5016150903869575)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1))<=((vt0.c0)))  WHEN vt0.c2 THEN ((((((((vt0.c1)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)&(0.5016150903869575)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c1))<=((vt0.c0)))  WHEN vt0.c2 THEN ((((((((vt0.c1)OR(NULL)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) WHEN vt0.c0 THEN vt0.c1 COLLATE NOCASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE vt0.c1 END) ORDER BY CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((vt0.c0)&(0.5016150903869575)) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c2))))));
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS TEXT) COLLATE BINARY WHERE (((((NULL)AND((NOT (vt1.lid)))))AND((((vt1.lid))>=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((NOT (vt1.lid)))))AND((((vt1.lid))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS TEXT) COLLATE BINARY);
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS TEXT) COLLATE BINARY WHERE (((((NULL)AND((NOT (vt1.lid)))))AND((((vt1.lid))>=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((NOT (vt1.lid)))))AND((((vt1.lid))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS TEXT) COLLATE BINARY);
SELECT * FROM vt1 INNER JOIN vt0 ON CAST(vt0.c1 AS TEXT) COLLATE BINARY WHERE (((((NULL)AND((NOT (vt1.lid)))))AND((((vt1.lid))>=((vt1.c1))))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))%(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))%(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))%(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))%(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))%(CAST(vt0.c1 AS INTEGER))));
SELECT * FROM vt0, vt1 WHERE ((((LOWER(vt0.c1), ((vt0.c1)+(vt0.c1)), CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN '-2007934968' WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c1) NOT NULL), ((vt1.c1)<<(vt0.c0)), CAST(vt1.c1 AS TEXT))))) ORDER BY ((vt1.c1) IS FALSE) ASC  NULLS FIRST, ((((vt1.c1)>>(vt1.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c2)<(vt1.c2)))) DESC, ((vt1.c2) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.lid AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c1), ((vt0.c1)+(vt0.c1)), CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN '-2007934968' WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c1) NOT NULL), ((vt1.c1)<<(vt0.c0)), CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c1) IS FALSE) ASC  NULLS FIRST, ((((vt1.c1)>>(vt1.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c2)<(vt1.c2)))) DESC, ((vt1.c2) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.lid AS BLOB))));
SELECT * FROM vt0, vt1 WHERE ((((LOWER(vt0.c1), ((vt0.c1)+(vt0.c1)), CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN '-2007934968' WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c1) NOT NULL), ((vt1.c1)<<(vt0.c0)), CAST(vt1.c1 AS TEXT))))) ORDER BY ((vt1.c1) IS FALSE) ASC  NULLS FIRST, ((((vt1.c1)>>(vt1.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c2)<(vt1.c2)))) DESC, ((vt1.c2) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.lid AS BLOB)));
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c1), ((vt0.c1)+(vt0.c1)), CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN '-2007934968' WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c1) NOT NULL), ((vt1.c1)<<(vt0.c0)), CAST(vt1.c1 AS TEXT))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c1) IS FALSE) ASC  NULLS FIRST, ((((vt1.c1)>>(vt1.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c2)<(vt1.c2)))) DESC, ((vt1.c2) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.lid AS BLOB))));
SELECT * FROM vt0, vt1 WHERE ((((LOWER(vt0.c1), ((vt0.c1)+(vt0.c1)), CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN '-2007934968' WHEN vt1.lid THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c1) NOT NULL), ((vt1.c1)<<(vt0.c0)), CAST(vt1.c1 AS TEXT))))) ORDER BY ((vt1.c1) IS FALSE) ASC  NULLS FIRST, ((((vt1.c1)>>(vt1.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c2)<(vt1.c2)))) DESC, ((vt1.c2) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.lid AS BLOB)));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON 'C,(Fa6㧦[' WHERE (CAST((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 'C,(Fa6㧦[' ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON 'C,(Fa6㧦[' WHERE (CAST((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON 'C,(Fa6㧦[' ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON 'C,(Fa6㧦[' WHERE (CAST((((vt1.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (LTRIM(((0.5295352205635618) NOT NULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) ORDER BY ((vt1.lid COLLATE BINARY)>=(0.027578505825018085)) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(((0.5295352205635618) NOT NULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid COLLATE BINARY)>=(0.027578505825018085)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (LTRIM(((0.5295352205635618) NOT NULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) ORDER BY ((vt1.lid COLLATE BINARY)>=(0.027578505825018085)) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(((0.5295352205635618) NOT NULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid COLLATE BINARY)>=(0.027578505825018085)) DESC);
SELECT ALL * FROM vt1, vt0 WHERE (LTRIM(((0.5295352205635618) NOT NULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))) ORDER BY ((vt1.lid COLLATE BINARY)>=(0.027578505825018085)) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.lid)||(vt1.c0))) IS FALSE) ASC, IFNULL((vt1.c2 IN ()), CAST(vt0.c2 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))*(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.lid)||(vt1.c0))) IS FALSE) ASC, IFNULL((vt1.c2 IN ()), CAST(vt0.c2 AS TEXT))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.lid)||(vt1.c0))) IS FALSE) ASC, IFNULL((vt1.c2 IN ()), CAST(vt0.c2 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))*(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.lid)||(vt1.c0))) IS FALSE) ASC, IFNULL((vt1.c2 IN ()), CAST(vt0.c2 AS TEXT))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.lid)||(vt1.c0))) IS FALSE) ASC, IFNULL((vt1.c2 IN ()), CAST(vt0.c2 AS TEXT))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('v,\') BETWEEN (vt0.c2) AND (vt0.c2)))>>(json_quote(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((('v,\') BETWEEN (vt0.c2) AND (vt0.c2)))>>(json_quote(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('v,\') BETWEEN (vt0.c2) AND (vt0.c2)))>>(json_quote(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((('v,\') BETWEEN (vt0.c2) AND (vt0.c2)))>>(json_quote(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL COLLATE NOCASE) ORDER BY ABS(vt1.lid) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ABS(vt1.lid) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL COLLATE NOCASE) ORDER BY ABS(vt1.lid) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ABS(vt1.lid) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL COLLATE NOCASE) ORDER BY ABS(vt1.lid) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((vt0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c2) NOT NULL) AS NUMERIC));
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c2 END  WHEN UPPER(DISTINCT vt1.c1) THEN (((vt1.c0))=((vt1.c1))) ELSE (vt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c2 END  WHEN UPPER(DISTINCT vt1.c1) THEN (((vt1.c0))=((vt1.c1))) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c2 END  WHEN UPPER(DISTINCT vt1.c1) THEN (((vt1.c0))=((vt1.c1))) ELSE (vt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c2 END  WHEN UPPER(DISTINCT vt1.c1) THEN (((vt1.c0))=((vt1.c1))) ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.lid  WHEN vt1.lid THEN vt1.c0 ELSE vt1.c2 END  WHEN UPPER(DISTINCT vt1.c1) THEN (((vt1.c0))=((vt1.c1))) ELSE (vt1.c1 IN ()) END);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c1)))&(vt0.c2))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt1.c1)))&(vt0.c2))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c1)))&(vt0.c2))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt1.c1)))&(vt0.c2))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>>(vt1.c1)))&(vt0.c2))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.lid END THEN vt1.c2 WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END ELSE ((0Xffffffffea463deb) NOT BETWEEN (vt1.lid) AND (vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.lid END THEN vt1.c2 WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END ELSE ((0Xffffffffea463deb) NOT BETWEEN (vt1.lid) AND (vt1.c2)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.lid END THEN vt1.c2 WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END ELSE ((0Xffffffffea463deb) NOT BETWEEN (vt1.lid) AND (vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c2 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.lid END THEN vt1.c2 WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END ELSE ((0Xffffffffea463deb) NOT BETWEEN (vt1.lid) AND (vt1.c2)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 ELSE vt1.lid END THEN vt1.c2 WHEN vt1.c2 COLLATE NOCASE THEN CASE WHEN vt1.lid THEN vt1.c2 ELSE vt1.c2 END ELSE ((0Xffffffffea463deb) NOT BETWEEN (vt1.lid) AND (vt1.c2)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(UNLIKELY(vt0.c2))))AND(((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c2))))) ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(UNLIKELY(vt0.c2))))AND(((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(UNLIKELY(vt0.c2))))AND(((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c2))))) ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(UNLIKELY(vt0.c2))))AND(((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(UNLIKELY(vt0.c2))))AND(((((((((((((vt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c2))))) ORDER BY CAST(((vt1.c0)OR(vt1.c0)) AS INTEGER) DESC;
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((CAST(vt1.lid AS BLOB)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB)) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((CAST(vt1.lid AS BLOB)) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB)) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((CAST(vt1.lid AS BLOB)) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((TOTAL_CHANGES()))>=(((- (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN vt0.c0 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))>=(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN vt0.c0 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM  NULLS LAST, NULL);
SELECT ALL * FROM vt0 WHERE ((((TOTAL_CHANGES()))>=(((- (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN vt0.c0 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))>=(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN vt0.c0 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM  NULLS LAST, NULL);
SELECT ALL * FROM vt0 WHERE ((((TOTAL_CHANGES()))>=(((- (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2)) THEN vt0.c0 END, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE RTRIM  NULLS LAST, NULL;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.00426278253012824 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 END)>(((vt1.c1)>=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.00426278253012824 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 END)>(((vt1.c1)>=(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.00426278253012824 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 END)>(((vt1.c1)>=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.00426278253012824 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 END)>(((vt1.c1)>=(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN 0.00426278253012824 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c1 END)>(((vt1.c1)>=(vt1.c2)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.lid)IS(vt1.lid))) IS FALSE) WHERE (CAST((0.6911131927141512 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.6911131927141512 IN ()) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.lid)IS(vt1.lid))) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.lid)IS(vt1.lid))) IS FALSE) WHERE (CAST((0.6911131927141512 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.6911131927141512 IN ()) AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.lid)IS(vt1.lid))) IS FALSE));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.lid)IS(vt1.lid))) IS FALSE) WHERE (CAST((0.6911131927141512 IN ()) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB(vt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT ('')) THEN ((vt0.c0)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT ('')) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT ('')) THEN ((vt0.c0)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT ('')) THEN ((vt0.c0)IS(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (NOT ('')) THEN ((vt0.c0)IS(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN CAST(vt1.lid AS BLOB) END) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(vt1.lid AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN CAST(vt1.lid AS BLOB) END) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(vt1.lid AS BLOB) END) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c2)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN x'' THEN CAST(vt1.lid AS BLOB) END) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c2)  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c1) BETWEEN (NULL) AND (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE (',&');
SELECT SUM(count) FROM (SELECT ALL ((',&') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (',&');
SELECT SUM(count) FROM (SELECT ALL ((',&') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (',&');
SELECT ALL * FROM vt1 WHERE (CAST(x'8176' AS BLOB)) ORDER BY (((((((vt1.c2))<((vt1.lid))))OR((+ (vt1.c0)))))OR(((vt1.lid) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(x'8176' AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c2))<((vt1.lid))))OR((+ (vt1.c0)))))OR(((vt1.lid) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (CAST(x'8176' AS BLOB)) ORDER BY (((((((vt1.c2))<((vt1.lid))))OR((+ (vt1.c0)))))OR(((vt1.lid) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(x'8176' AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c2))<((vt1.lid))))OR((+ (vt1.c0)))))OR(((vt1.lid) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (CAST(x'8176' AS BLOB)) ORDER BY (((((((vt1.c2))<((vt1.lid))))OR((+ (vt1.c0)))))OR(((vt1.lid) NOTNULL)));
SELECT * FROM vt0, vt1 WHERE (CASE 'gbia搅''5'  WHEN ((((vt1.c2)AND(vt0.c0)))OR(vt0.c1)) THEN NULL ELSE vt0.c0 END) ORDER BY (NOT (((vt0.c2)IS NOT(vt1.lid)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'gbia搅''5'  WHEN ((((vt1.c2)AND(vt0.c0)))OR(vt0.c1)) THEN NULL ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c2)IS NOT(vt1.lid)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE 'gbia搅''5'  WHEN ((((vt1.c2)AND(vt0.c0)))OR(vt0.c1)) THEN NULL ELSE vt0.c0 END) ORDER BY (NOT (((vt0.c2)IS NOT(vt1.lid)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'gbia搅''5'  WHEN ((((vt1.c2)AND(vt0.c0)))OR(vt0.c1)) THEN NULL ELSE vt0.c0 END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c2)IS NOT(vt1.lid)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (CASE 'gbia搅''5'  WHEN ((((vt1.c2)AND(vt0.c0)))OR(vt0.c1)) THEN NULL ELSE vt0.c0 END) ORDER BY (NOT (((vt0.c2)IS NOT(vt1.lid)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '1212917091' WHERE ((~ (((x'') IS FALSE)))) ORDER BY (((((((((vt0.c0)AND(vt1.c2)))AND(vt1.lid)))OR(vt1.lid)))OR(vt0.c1)) IN (((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'') IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '1212917091' ORDER BY (((((((((vt0.c0)AND(vt1.c2)))AND(vt1.lid)))OR(vt1.lid)))OR(vt0.c1)) IN (((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c2)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '1212917091' WHERE ((~ (((x'') IS FALSE)))) ORDER BY (((((((((vt0.c0)AND(vt1.c2)))AND(vt1.lid)))OR(vt1.lid)))OR(vt0.c1)) IN (((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((x'') IS FALSE)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON '1212917091' ORDER BY (((((((((vt0.c0)AND(vt1.c2)))AND(vt1.lid)))OR(vt1.lid)))OR(vt0.c1)) IN (((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c2)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON '1212917091' WHERE ((~ (((x'') IS FALSE)))) ORDER BY (((((((((vt0.c0)AND(vt1.c2)))AND(vt1.lid)))OR(vt1.lid)))OR(vt0.c1)) IN (((vt0.c2) BETWEEN (vt0.c2) AND (vt1.c2))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))=((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c1 THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8374443778350062) WHEN vt0.c0 THEN (vt0.c2 IN ()) END  NULLS LAST, ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))==((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c1 THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8374443778350062) WHEN vt0.c0 THEN (vt0.c2 IN ()) END  NULLS LAST, ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))=((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c1 THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8374443778350062) WHEN vt0.c0 THEN (vt0.c2 IN ()) END  NULLS LAST, ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))==((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c1 THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8374443778350062) WHEN vt0.c0 THEN (vt0.c2 IN ()) END  NULLS LAST, ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))=((((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN vt0.c1 THEN LIKELIHOOD(DISTINCT vt0.c1, 0.8374443778350062) WHEN vt0.c0 THEN (vt0.c2 IN ()) END  NULLS LAST, ((NOT (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LENGTH(NULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LENGTH(NULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(LENGTH(NULL) AS BLOB));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UPPER('>磲4.\r')) BETWEEN ((- (vt0.c0))) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('>磲4.\r')) BETWEEN ((- (vt0.c0))) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UPPER('>磲4.\r')) BETWEEN ((- (vt0.c0))) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER('>磲4.\r')) BETWEEN ((- (vt0.c0))) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((UPPER('>磲4.\r')) BETWEEN ((- (vt0.c0))) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c1 END)));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c2)/(vt0.c2)), 0.007187590393541443)) ORDER BY (IFNULL(vt0.c0, vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c2)/(vt0.c2)), 0.007187590393541443)) IS TRUE)  as count FROM vt0 ORDER BY (IFNULL(vt0.c0, vt0.c1) IN ()));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c2)/(vt0.c2)), 0.007187590393541443)) ORDER BY (IFNULL(vt0.c0, vt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c2)/(vt0.c2)), 0.007187590393541443)) IS TRUE)  as count FROM vt0 ORDER BY (IFNULL(vt0.c0, vt0.c1) IN ()));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c2)/(vt0.c2)), 0.007187590393541443)) ORDER BY (IFNULL(vt0.c0, vt0.c1) IN ());
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c0)AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)AND(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c0)AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)AND(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(((vt0.c0)AND(vt0.c2))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON x'' WHERE (CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c2)) WHEN ((vt1.c2)<(vt1.c0)) THEN (((vt0.c1))<=((vt1.c2))) WHEN vt1.c2 THEN CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c2)) WHEN ((vt1.c2)<(vt1.c0)) THEN (((vt0.c1))<=((vt1.c2))) WHEN vt1.c2 THEN CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON x'' WHERE (CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c2)) WHEN ((vt1.c2)<(vt1.c0)) THEN (((vt0.c1))<=((vt1.c2))) WHEN vt1.c2 THEN CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c2)) WHEN ((vt1.c2)<(vt1.c0)) THEN (((vt0.c1))<=((vt1.c2))) WHEN vt1.c2 THEN CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON x'' WHERE (CASE (NOT (vt0.c1))  WHEN vt0.c1 THEN ((((vt0.c0)OR(vt1.c2)))AND(vt1.c2)) WHEN ((vt1.c2)<(vt1.c0)) THEN (((vt0.c1))<=((vt1.c2))) WHEN vt1.c2 THEN CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 ELSE vt0.c1 END END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c2)>=(vt0.c2)) IN ()) WHERE (((((vt0.c0)OR(((vt1.c1)AND(vt1.c2)))))OR(((vt1.c0) IS FALSE)))) ORDER BY ((json_insert(vt1.c0, vt0.c2, vt0.c1, vt1.c0, vt1.c2)) IS TRUE)  NULLS FIRST, ROUND((vt0.c2 IN (0x4b9c90a5, vt0.c2)), LIKELY(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt1.c1)AND(vt1.c2)))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c2)>=(vt0.c2)) IN ()) ORDER BY ((json_insert(vt1.c0, vt0.c2, vt0.c1, vt1.c0, vt1.c2)) IS TRUE)  NULLS FIRST, ROUND((vt0.c2 IN (0X4b9c90a5, vt0.c2)), LIKELY(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c2)>=(vt0.c2)) IN ()) WHERE (((((vt0.c0)OR(((vt1.c1)AND(vt1.c2)))))OR(((vt1.c0) IS FALSE)))) ORDER BY ((json_insert(vt1.c0, vt0.c2, vt0.c1, vt1.c0, vt1.c2)) IS TRUE)  NULLS FIRST, ROUND((vt0.c2 IN (0x4b9c90a5, vt0.c2)), LIKELY(vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt1.c1)AND(vt1.c2)))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c2)>=(vt0.c2)) IN ()) ORDER BY ((json_insert(vt1.c0, vt0.c2, vt0.c1, vt1.c0, vt1.c2)) IS TRUE)  NULLS FIRST, ROUND((vt0.c2 IN (0X4b9c90a5, vt0.c2)), LIKELY(vt1.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c2)>=(vt0.c2)) IN ()) WHERE (((((vt0.c0)OR(((vt1.c1)AND(vt1.c2)))))OR(((vt1.c0) IS FALSE)))) ORDER BY ((json_insert(vt1.c0, vt0.c2, vt0.c1, vt1.c0, vt1.c2)) IS TRUE)  NULLS FIRST, ROUND((vt0.c2 IN (0x4b9c90a5, vt0.c2)), LIKELY(vt1.c0)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 AS REAL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS REAL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 AS REAL) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 AS REAL) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 AS REAL) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) AND (UNLIKELY(vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) AND (UNLIKELY(vt1.lid)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) AND (UNLIKELY(vt1.lid))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) AND (UNLIKELY(vt1.lid)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN ())) BETWEEN (((vt1.c0) BETWEEN (vt1.c2) AND (vt1.c0))) AND (UNLIKELY(vt1.lid))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ((((vt0.c0, vt0.c2, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN ((((vt0.c0, vt0.c2, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ((((vt0.c0, vt0.c2, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE RTRIM IN ((((vt0.c0, vt0.c2, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ((((vt0.c0, vt0.c2, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.c2 IN (vt1.lid, vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c2 IN (vt1.lid, vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.c2 IN (vt1.lid, vt1.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((vt1.c2 IN (vt1.lid, vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((vt1.c2 IN (vt1.lid, vt1.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt1, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2)), ((vt1.c2)&(''))))=(((0.084433492130079 IN ()), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c2 THEN vt0.c0 END, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2)), ((vt1.c2)&(''))))==(((0.084433492130079 IN ()), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c2 THEN vt0.c0 END, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2)), ((vt1.c2)&(''))))=(((0.084433492130079 IN ()), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c2 THEN vt0.c0 END, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2)), ((vt1.c2)&(''))))==(((0.084433492130079 IN ()), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c2 THEN vt0.c0 END, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)), ((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c2)), ((vt1.c2)&(''))))=(((0.084433492130079 IN ()), CASE vt1.lid  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c2 THEN vt1.c0 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c2 THEN vt0.c0 END, vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((NULL)OR(vt1.c2)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(vt1.c2)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((NULL)OR(vt1.c2)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(vt1.c2)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((((NULL)OR(vt1.c2)))AND(vt1.c0)) AS REAL));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CASE (vt0.c2 IN (vt1.lid))  WHEN CAST(x'2313' AS NUMERIC) THEN '-135488403' END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (vt0.c2 IN (vt1.lid))  WHEN CAST(x'2313' AS NUMERIC) THEN '-135488403' END);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CASE (vt0.c2 IN (vt1.lid))  WHEN CAST(x'2313' AS NUMERIC) THEN '-135488403' END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (vt0.c2 IN (vt1.lid))  WHEN CAST(x'2313' AS NUMERIC) THEN '-135488403' END);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c2 COLLATE BINARY) IS FALSE)) ORDER BY CASE (vt0.c2 IN (vt1.lid))  WHEN CAST(x'2313' AS NUMERIC) THEN '-135488403' END;
SELECT * FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c2 AS NUMERIC));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)>(vt1.c0)) AS INTEGER) WHERE (((((vt1.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)>(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)>(vt1.c0)) AS INTEGER) WHERE (((((vt1.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)>(vt1.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)>(vt1.c0)) AS INTEGER) WHERE (((((vt1.c0) IS TRUE)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (UPPER(DISTINCT vt1.c0))));
SELECT * FROM vt1 WHERE (((((((((((((((((((((NULL)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c2)))OR(((vt1.c2)>(vt1.c0)))))AND(CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 END)))OR((((vt1.lid))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((NULL)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c2)))OR(((vt1.c2)>(vt1.c0)))))AND(CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 END)))OR((((vt1.lid))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((((((((NULL)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c2)))OR(((vt1.c2)>(vt1.c0)))))AND(CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 END)))OR((((vt1.lid))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((NULL)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c2)))OR(((vt1.c2)>(vt1.c0)))))AND(CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 END)))OR((((vt1.lid))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((((((((NULL)AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.lid)))AND(vt1.c2)))OR(((vt1.c2)>(vt1.c0)))))AND(CASE vt1.c1  WHEN vt1.c2 THEN vt1.c2 END)))OR((((vt1.lid))>((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.lid)))<<(vt0.c2))) ORDER BY (+ (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.lid)))<<(vt0.c2))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.lid)))<<(vt0.c2))) ORDER BY (+ (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.lid)))<<(vt0.c2))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.lid)))<<(vt0.c2))) ORDER BY (+ (vt1.c0)) ASC;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (NOT (vt0.c1)) COLLATE BINARY WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((vt1.lid)>>('b\'))) AND ((vt0.c0 IN (vt1.lid))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) BETWEEN (((vt1.lid)>>('b\'))) AND ((vt0.c0 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (NOT (vt0.c1)) COLLATE BINARY ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (NOT (vt0.c1)) COLLATE BINARY WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((vt1.lid)>>('b\'))) AND ((vt0.c0 IN (vt1.lid))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) BETWEEN (((vt1.lid)>>('b\'))) AND ((vt0.c0 IN (vt1.lid))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (NOT (vt0.c1)) COLLATE BINARY ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (NOT (vt0.c1)) COLLATE BINARY WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((vt1.lid)>>('b\'))) AND ((vt0.c0 IN (vt1.lid))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (((-1654474731, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0Xffffffffef15fe20, vt0.c0)))  WHEN (('1268551845') BETWEEN (vt0.c1) AND (vt0.c2)) THEN LIKELY(vt0.c1) ELSE vt0.c0 END  NULLS FIRST, ((LIKELY(0.9515133417747891)) IS FALSE)  NULLS FIRST, '1522938629' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (((-1654474731, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0Xffffffffef15fe20, vt0.c0)))  WHEN (('1268551845') BETWEEN (vt0.c1) AND (vt0.c2)) THEN LIKELY(vt0.c1) ELSE vt0.c0 END  NULLS FIRST, ((LIKELY(0.9515133417747891)) IS FALSE)  NULLS FIRST, '1522938629' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (((-1654474731, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0Xffffffffef15fe20, vt0.c0)))  WHEN (('1268551845') BETWEEN (vt0.c1) AND (vt0.c2)) THEN LIKELY(vt0.c1) ELSE vt0.c0 END  NULLS FIRST, ((LIKELY(0.9515133417747891)) IS FALSE)  NULLS FIRST, '1522938629' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (((-1654474731, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0Xffffffffef15fe20, vt0.c0)))  WHEN (('1268551845') BETWEEN (vt0.c1) AND (vt0.c2)) THEN LIKELY(vt0.c1) ELSE vt0.c0 END  NULLS FIRST, ((LIKELY(0.9515133417747891)) IS FALSE)  NULLS FIRST, '1522938629' DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)) COLLATE RTRIM) ORDER BY CASE (((-1654474731, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, 0Xffffffffef15fe20, vt0.c0)))  WHEN (('1268551845') BETWEEN (vt0.c1) AND (vt0.c2)) THEN LIKELY(vt0.c1) ELSE vt0.c0 END  NULLS FIRST, ((LIKELY(0.9515133417747891)) IS FALSE)  NULLS FIRST, '1522938629' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'706b') ISNULL))!=(CAST(vt1.c0 AS TEXT)))) ORDER BY (('1658936956') BETWEEN (json_insert(vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'706b') ISNULL))!=(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (('1658936956') BETWEEN (json_insert(vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'706b') ISNULL))!=(CAST(vt1.c0 AS TEXT)))) ORDER BY (('1658936956') BETWEEN (json_insert(vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((x'706b') ISNULL))!=(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (('1658936956') BETWEEN (json_insert(vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((x'706b') ISNULL))!=(CAST(vt1.c0 AS TEXT)))) ORDER BY (('1658936956') BETWEEN (json_insert(vt1.c0, vt1.c2, vt1.c2)) AND ((vt1.c1 IN ()))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)||(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(vt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)||(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)||(vt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY) ORDER BY ((('-283771360', ((vt0.c2)AND(vt1.c1)), vt0.c1))>((NULLIF(vt1.c1, vt1.c2), ((vt1.c0) IS TRUE), ((x'')OR(vt1.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((('-283771360', ((vt0.c2)AND(vt1.c1)), vt0.c1))>((NULLIF(vt1.c1, vt1.c2), ((vt1.c0) IS TRUE), ((x'')OR(vt1.lid)))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY) ORDER BY ((('-283771360', ((vt0.c2)AND(vt1.c1)), vt0.c1))>((NULLIF(vt1.c1, vt1.c2), ((vt1.c0) IS TRUE), ((x'')OR(vt1.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((('-283771360', ((vt0.c2)AND(vt1.c1)), vt0.c1))>((NULLIF(vt1.c1, vt1.c2), ((vt1.c0) IS TRUE), ((x'')OR(vt1.lid)))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY) ORDER BY ((('-283771360', ((vt0.c2)AND(vt1.c1)), vt0.c1))>((NULLIF(vt1.c1, vt1.c2), ((vt1.c0) IS TRUE), ((x'')OR(vt1.lid)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2) IS TRUE))%(((vt1.c1)/(vt1.lid))))) ORDER BY ((((((((vt1.c2 COLLATE RTRIM)AND(CAST(1.31670525E9 AS TEXT))))AND(CAST(vt1.lid AS INTEGER))))AND(((vt1.c1)||(vt0.c1)))))OR(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) IS TRUE))%(((vt1.c1)/(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt1.c2 COLLATE RTRIM)AND(CAST(1.31670525E9 AS TEXT))))AND(CAST(vt1.lid AS INTEGER))))AND(((vt1.c1)||(vt0.c1)))))OR(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2) IS TRUE))%(((vt1.c1)/(vt1.lid))))) ORDER BY ((((((((vt1.c2 COLLATE RTRIM)AND(CAST(1.31670525E9 AS TEXT))))AND(CAST(vt1.lid AS INTEGER))))AND(((vt1.c1)||(vt0.c1)))))OR(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) IS TRUE))%(((vt1.c1)/(vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt1.c2 COLLATE RTRIM)AND(CAST(1.31670525E9 AS TEXT))))AND(CAST(vt1.lid AS INTEGER))))AND(((vt1.c1)||(vt0.c1)))))OR(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2) IS TRUE))%(((vt1.c1)/(vt1.lid))))) ORDER BY ((((((((vt1.c2 COLLATE RTRIM)AND(CAST(1.31670525E9 AS TEXT))))AND(CAST(vt1.lid AS INTEGER))))AND(((vt1.c1)||(vt0.c1)))))OR(((vt0.c1) IS FALSE)));
SELECT COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.25058388814085564)) ISNULL)) ORDER BY (((((((((((vt1.c0))<>((0.6911131927141512))))AND(STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid))))AND(0.9482555767135094)))OR(((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))))OR(((vt1.c1)-(vt1.c0)))), (CASE 'zbb'  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt1.c0, 0.25058388814085564)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0))<>((0.6911131927141512))))AND(STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid))))AND(0.9482555767135094)))OR(((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))))OR(((vt1.c1)-(vt1.c0)))), (CASE 'zbb'  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.25058388814085564)) ISNULL)) ORDER BY (((((((((((vt1.c0))<>((0.6911131927141512))))AND(STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid))))AND(0.9482555767135094)))OR(((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))))OR(((vt1.c1)-(vt1.c0)))), (CASE 'zbb'  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt1.c0, 0.25058388814085564)) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0))<>((0.6911131927141512))))AND(STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid))))AND(0.9482555767135094)))OR(((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))))OR(((vt1.c1)-(vt1.c0)))), (CASE 'zbb'  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.25058388814085564)) ISNULL)) ORDER BY (((((((((((vt1.c0))<>((0.6911131927141512))))AND(STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.lid, vt1.lid))))AND(0.9482555767135094)))OR(((((vt1.c1)OR(vt1.lid)))OR(vt1.lid)))))OR(((vt1.c1)-(vt1.c0)))), (CASE 'zbb'  WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c2 END IN ()) DESC;
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c2)AND(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c2)AND(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c2)AND(vt1.lid)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c2)AND(vt1.lid)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((((vt1.c2)AND(vt1.lid)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) WHERE (UNLIKELY(((vt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) WHERE (UNLIKELY(((vt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c2)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) WHERE (UNLIKELY(((vt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt0.c2)))AND(((vt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c2) ISNULL) IN ()));
SELECT * FROM vt0 WHERE ('') ORDER BY ''  NULLS LAST, ((((vt0.c2)==(vt0.c0))) NOT NULL) ASC  NULLS FIRST, ((CAST(vt0.c1 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST, ((((vt0.c2)=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, ((CAST(vt0.c1 AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY ''  NULLS LAST, ((((vt0.c2)==(vt0.c0))) NOT NULL) ASC  NULLS FIRST, ((CAST(vt0.c1 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST, ((((vt0.c2)=(vt0.c0))) NOT NULL) ASC  NULLS FIRST, ((CAST(vt0.c1 AS TEXT)) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY ''  NULLS LAST, ((((vt0.c2)==(vt0.c0))) NOT NULL) ASC  NULLS FIRST, ((CAST(vt0.c1 AS TEXT)) NOTNULL)  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.lid)))/(0.5050732629662621))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.lid)))/(0.5050732629662621))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.lid)))/(0.5050732629662621))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.lid)))/(0.5050732629662621))  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (vt1.c2) ORDER BY ((((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.lid)))/(0.5050732629662621))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) ORDER BY HEX((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (((vt0.c0 IN ()))IS('\?'));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY HEX((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (((vt0.c0 IN ()))IS('\?')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) ORDER BY HEX((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (((vt0.c0 IN ()))IS('\?'));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY HEX((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (((vt0.c0 IN ()))IS('\?')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) ORDER BY HEX((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))), (((vt0.c0 IN ()))IS('\?'));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0, 0.5423516653825509, x'')) BETWEEN ((vt1.c1, vt1.c2, vt1.lid)) AND ((vt1.c2, vt1.c1, vt0.c1))))&((vt0.c1 IN ()))) WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c2)AND(vt1.c1)))OR(vt0.c1)))) AND (((vt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt1.c2)AND(vt1.c1)))OR(vt0.c1)))) AND (((vt1.c2 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0, 0.5423516653825509, x'')) BETWEEN ((vt1.c1, vt1.c2, vt1.lid)) AND ((vt1.c2, vt1.c1, vt0.c1))))&((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0, 0.5423516653825509, x'')) BETWEEN ((vt1.c1, vt1.c2, vt1.lid)) AND ((vt1.c2, vt1.c1, vt0.c1))))&((vt0.c1 IN ()))) WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c2)AND(vt1.c1)))OR(vt0.c1)))) AND (((vt1.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt1.c2)AND(vt1.c1)))OR(vt0.c1)))) AND (((vt1.c2 IN ()))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0, 0.5423516653825509, x'')) BETWEEN ((vt1.c1, vt1.c2, vt1.lid)) AND ((vt1.c2, vt1.c1, vt0.c1))))&((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0, 0.5423516653825509, x'')) BETWEEN ((vt1.c1, vt1.c2, vt1.lid)) AND ((vt1.c2, vt1.c1, vt0.c1))))&((vt0.c1 IN ()))) WHERE ((((vt1.c0)) BETWEEN ((((((vt1.c2)AND(vt1.c1)))OR(vt0.c1)))) AND (((vt1.c2 IN ())))));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c1) AND ('B5'))  WHEN -1282892311 THEN ((vt1.c0)-(vt1.c1)) END) ORDER BY (((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) BETWEEN (vt1.c1) AND ('B5'))  WHEN -1282892311 THEN ((vt1.c0)-(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c1) AND ('B5'))  WHEN -1282892311 THEN ((vt1.c0)-(vt1.c1)) END) ORDER BY (((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1) BETWEEN (vt1.c1) AND ('B5'))  WHEN -1282892311 THEN ((vt1.c0)-(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1) BETWEEN (vt1.c1) AND ('B5'))  WHEN -1282892311 THEN ((vt1.c0)-(vt1.c1)) END) ORDER BY (((((vt1.c0)OR(vt1.c2)))AND(vt1.c0)) IN ());
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c1 AS REAL))AND(((vt1.c1) NOT NULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS REAL))AND(((vt1.c1) NOT NULL))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c1 AS REAL))AND(((vt1.c1) NOT NULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c1 AS REAL))AND(((vt1.c1) NOT NULL))))OR(vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (((((CAST(vt1.c1 AS REAL))AND(((vt1.c1) NOT NULL))))OR(vt1.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('-1611392757')AND(TRIM(DISTINCT vt0.c2))) WHERE (((NOT (vt0.c2)) IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (('-1611392757')AND(TRIM(DISTINCT vt0.c2))) ORDER BY '' DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('-1611392757')AND(TRIM(DISTINCT vt0.c2))) WHERE (((NOT (vt0.c2)) IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (('-1611392757')AND(TRIM(DISTINCT vt0.c2))) ORDER BY '' DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (('-1611392757')AND(TRIM(DISTINCT vt0.c2))) WHERE (((NOT (vt0.c2)) IN ())) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1))>=((vt1.c2))) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.lid)IS(vt1.lid)) WHEN vt1.lid THEN (~ (vt1.c2)) ELSE CASE vt1.c1  WHEN vt1.lid THEN 0.04649848457201666 ELSE 0.5440539924433521 END END) ORDER BY vt1.lid DESC, CAST((+ (vt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1))>=((vt1.c2))) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.lid)IS(vt1.lid)) WHEN vt1.lid THEN (~ (vt1.c2)) ELSE CASE vt1.c1  WHEN vt1.lid THEN 0.04649848457201666 ELSE 0.5440539924433521 END END) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid DESC, CAST((+ (vt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1))>=((vt1.c2))) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.lid)IS(vt1.lid)) WHEN vt1.lid THEN (~ (vt1.c2)) ELSE CASE vt1.c1  WHEN vt1.lid THEN 0.04649848457201666 ELSE 0.5440539924433521 END END) ORDER BY vt1.lid DESC, CAST((+ (vt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1))>=((vt1.c2))) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.lid)IS(vt1.lid)) WHEN vt1.lid THEN (~ (vt1.c2)) ELSE CASE vt1.c1  WHEN vt1.lid THEN 0.04649848457201666 ELSE 0.5440539924433521 END END) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid DESC, CAST((+ (vt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1))>=((vt1.c2))) THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.lid)IS(vt1.lid)) WHEN vt1.lid THEN (~ (vt1.c2)) ELSE CASE vt1.c1  WHEN vt1.lid THEN 0.04649848457201666 ELSE 0.5440539924433521 END END) ORDER BY vt1.lid DESC, CAST((+ (vt1.c1)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)||(vt1.c2)) THEN (('HZZx!') BETWEEN (vt1.c1) AND (vt1.c1)) ELSE vt0.c0 END WHERE (((((vt1.lid)AND(NULL)))AND(COALESCE(vt1.lid, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)AND(NULL)))AND(COALESCE(vt1.lid, vt1.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)||(vt1.c2)) THEN (('HZZx!') BETWEEN (vt1.c1) AND (vt1.c1)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)||(vt1.c2)) THEN (('HZZx!') BETWEEN (vt1.c1) AND (vt1.c1)) ELSE vt0.c0 END WHERE (((((vt1.lid)AND(NULL)))AND(COALESCE(vt1.lid, vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)AND(NULL)))AND(COALESCE(vt1.lid, vt1.c2)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)||(vt1.c2)) THEN (('HZZx!') BETWEEN (vt1.c1) AND (vt1.c1)) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS TEXT)  WHEN ((NULL)||(vt1.c2)) THEN (('HZZx!') BETWEEN (vt1.c1) AND (vt1.c1)) ELSE vt0.c0 END WHERE (((((vt1.lid)AND(NULL)))AND(COALESCE(vt1.lid, vt1.c2))));
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)) COLLATE BINARY, (((vt1.c2 IN ())) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((x'')))) AND (UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)) COLLATE BINARY, (((vt1.c2 IN ())) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((x'')))) AND (UNLIKELY(vt1.c0))));
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)) COLLATE BINARY, (((vt1.c2 IN ())) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((x'')))) AND (UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)) COLLATE BINARY, (((vt1.c2 IN ())) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((x'')))) AND (UNLIKELY(vt1.c0))));
SELECT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)) COLLATE BINARY, (((vt1.c2 IN ())) BETWEEN ((((vt1.c1)) BETWEEN ((vt1.c2)) AND ((x'')))) AND (UNLIKELY(vt1.c0)));
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c2)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)) IN ())) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c2)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c2)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)) IN ())) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c2)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c2)))OR(vt1.lid)))AND(vt1.c0)))OR(vt1.lid)) IN ())) ORDER BY vt1.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c2 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c2 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt1.c2 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) ISNULL) WHERE ((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 END IN ())) ORDER BY ((((vt0.c2)AND(vt1.c2)))AND(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) ISNULL) ORDER BY ((((vt0.c2)AND(vt1.c2)))AND(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) ISNULL) WHERE ((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 END IN ())) ORDER BY ((((vt0.c2)AND(vt1.c2)))AND(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) ISNULL) ORDER BY ((((vt0.c2)AND(vt1.c2)))AND(vt0.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0) ISNULL) WHERE ((CASE vt1.c0  WHEN vt1.lid THEN vt1.c0 END IN ())) ORDER BY ((((vt0.c2)AND(vt1.c2)))AND(vt0.c1)) COLLATE BINARY COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))<=(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))<=(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))<=(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))<=(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))<=(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c2)/(vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c2)/(vt1.c2)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c2)/(vt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c2)/(vt1.c2)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c2)) THEN (+ (vt0.c0)) ELSE ((vt0.c2)/(vt1.c2)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(((('499148051', vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c2))) AS NUMERIC) ASC, TRIM(DISTINCT vt0.c2) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((('499148051', vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c2))) AS NUMERIC) ASC, TRIM(DISTINCT vt0.c2) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(((('499148051', vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c2))) AS NUMERIC) ASC, TRIM(DISTINCT vt0.c2) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST(((('499148051', vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c2))) AS NUMERIC) ASC, TRIM(DISTINCT vt0.c2) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) IS FALSE) COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(((('499148051', vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c2))) AS NUMERIC) ASC, TRIM(DISTINCT vt0.c2) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt0.c1)))-(((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt0.c1)))-(((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt0.c1)))-(((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)!=(vt0.c1)))-(((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt0.c1)))-(((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) AS REAL)) ORDER BY '-1496655959';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1496655959');
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) AS REAL)) ORDER BY '-1496655959';
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '-1496655959');
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c2) AND (vt1.c0)) AS REAL)) ORDER BY '-1496655959';
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c2)IS(vt1.lid))  WHEN (~ (vt1.c1)) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)IS(vt1.lid))  WHEN (~ (vt1.c1)) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c2)IS(vt1.lid))  WHEN (~ (vt1.c1)) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c2)IS(vt1.lid))  WHEN (~ (vt1.c1)) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE ((vt0.c2)IS(vt1.lid))  WHEN (~ (vt1.c1)) THEN CASE vt1.lid  WHEN vt1.c1 THEN vt1.c1 END END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c1)))) AND ((0.01280231283001132)))) ORDER BY CASE WHEN ((vt1.c0)IS NOT(vt1.lid)) THEN NULL WHEN ((vt1.c1)|(vt1.lid)) THEN LOWER(vt1.lid) WHEN vt1.c2 THEN ((vt1.lid)IS NOT(vt1.c2)) ELSE ((vt1.lid)AND(vt1.lid)) END DESC  NULLS FIRST, highlight((+ (vt1.lid)), (((vt1.c0))>=((vt1.lid))), CAST(vt1.c2 AS REAL), ((vt1.lid) NOTNULL)), ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))AND((((vt1.lid, vt1.c0, vt1.c1))!=((vt1.c2, 0.18283594385972568, vt1.c0))))))OR(((((vt1.c0)OR(vt1.c2)))OR(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((NOT (vt1.c1)))) AND ((0.01280231283001132)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)IS NOT(vt1.lid)) THEN NULL WHEN ((vt1.c1)|(vt1.lid)) THEN LOWER(vt1.lid) WHEN vt1.c2 THEN ((vt1.lid)IS NOT(vt1.c2)) ELSE ((vt1.lid)AND(vt1.lid)) END DESC  NULLS FIRST, highlight((+ (vt1.lid)), (((vt1.c0))>=((vt1.lid))), CAST(vt1.c2 AS REAL), ((vt1.lid) NOTNULL)), ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))AND((((vt1.lid, vt1.c0, vt1.c1))<>((vt1.c2, 0.18283594385972568, vt1.c0))))))OR(((((vt1.c0)OR(vt1.c2)))OR(vt1.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c1)))) AND ((0.01280231283001132)))) ORDER BY CASE WHEN ((vt1.c0)IS NOT(vt1.lid)) THEN NULL WHEN ((vt1.c1)|(vt1.lid)) THEN LOWER(vt1.lid) WHEN vt1.c2 THEN ((vt1.lid)IS NOT(vt1.c2)) ELSE ((vt1.lid)AND(vt1.lid)) END DESC  NULLS FIRST, highlight((+ (vt1.lid)), (((vt1.c0))>=((vt1.lid))), CAST(vt1.c2 AS REAL), ((vt1.lid) NOTNULL)), ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))AND((((vt1.lid, vt1.c0, vt1.c1))!=((vt1.c2, 0.18283594385972568, vt1.c0))))))OR(((((vt1.c0)OR(vt1.c2)))OR(vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((NOT (vt1.c1)))) AND ((0.01280231283001132)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)IS NOT(vt1.lid)) THEN NULL WHEN ((vt1.c1)|(vt1.lid)) THEN LOWER(vt1.lid) WHEN vt1.c2 THEN ((vt1.lid)IS NOT(vt1.c2)) ELSE ((vt1.lid)AND(vt1.lid)) END DESC  NULLS FIRST, highlight((+ (vt1.lid)), (((vt1.c0))>=((vt1.lid))), CAST(vt1.c2 AS REAL), ((vt1.lid) NOTNULL)), ((((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid)))AND((((vt1.lid, vt1.c0, vt1.c1))<>((vt1.c2, 0.18283594385972568, vt1.c0))))))OR(((((vt1.c0)OR(vt1.c2)))OR(vt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((('0.3708140960687465'))<>((vt0.c0))))-(CASE vt0.c1  WHEN x'cbbe' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c2)IS(vt0.c1))) BETWEEN (((vt0.c0) BETWEEN ('R){*') AND (vt0.c2))) AND (('rCn' IN (vt0.c2)))), ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('0.3708140960687465'))!=((vt0.c0))))-(CASE vt0.c1  WHEN x'cbbe' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)IS(vt0.c1))) BETWEEN (((vt0.c0) BETWEEN ('R){*') AND (vt0.c2))) AND (('rCn' IN (vt0.c2)))), ((vt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((('0.3708140960687465'))<>((vt0.c0))))-(CASE vt0.c1  WHEN x'cbbe' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c2)IS(vt0.c1))) BETWEEN (((vt0.c0) BETWEEN ('R){*') AND (vt0.c2))) AND (('rCn' IN (vt0.c2)))), ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('0.3708140960687465'))!=((vt0.c0))))-(CASE vt0.c1  WHEN x'cbbe' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)IS(vt0.c1))) BETWEEN (((vt0.c0) BETWEEN ('R){*') AND (vt0.c2))) AND (('rCn' IN (vt0.c2)))), ((vt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((('0.3708140960687465'))<>((vt0.c0))))-(CASE vt0.c1  WHEN x'cbbe' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((vt0.c2)IS(vt0.c1))) BETWEEN (((vt0.c0) BETWEEN ('R){*') AND (vt0.c2))) AND (('rCn' IN (vt0.c2)))), ((vt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((')''WTa' IN ()))%(json_array(vt0.c0, vt0.c2, vt0.c1, vt0.c1, 0.9273482341521486, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY (((+ (vt0.c2))) BETWEEN ((- (vt0.c0))) AND ((vt0.c2 IN (vt0.c1)))) DESC, SQLITE_COMPILEOPTION_GET(CASE WHEN 1522938629 THEN vt0.c2 ELSE vt0.c0 END)  NULLS LAST, -1187636046;
SELECT SUM(count) FROM (SELECT ALL (((((')''WTa' IN ()))%(json_array(vt0.c0, vt0.c2, vt0.c1, vt0.c1, 0.9273482341521486, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c2))) BETWEEN ((- (vt0.c0))) AND ((vt0.c2 IN (vt0.c1)))) DESC, SQLITE_COMPILEOPTION_GET(CASE WHEN 1522938629 THEN vt0.c2 ELSE vt0.c0 END)  NULLS LAST, -1187636046);
SELECT ALL * FROM vt0 WHERE ((((')''WTa' IN ()))%(json_array(vt0.c0, vt0.c2, vt0.c1, vt0.c1, 0.9273482341521486, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY (((+ (vt0.c2))) BETWEEN ((- (vt0.c0))) AND ((vt0.c2 IN (vt0.c1)))) DESC, SQLITE_COMPILEOPTION_GET(CASE WHEN 1522938629 THEN vt0.c2 ELSE vt0.c0 END)  NULLS LAST, -1187636046;
SELECT SUM(count) FROM (SELECT ALL (((((')''WTa' IN ()))%(json_array(vt0.c0, vt0.c2, vt0.c1, vt0.c1, 0.9273482341521486, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c2))) BETWEEN ((- (vt0.c0))) AND ((vt0.c2 IN (vt0.c1)))) DESC, SQLITE_COMPILEOPTION_GET(CASE WHEN 1522938629 THEN vt0.c2 ELSE vt0.c0 END)  NULLS LAST, -1187636046);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c2 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE ('-98615479') ORDER BY ((((vt1.c2) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-98615479') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2) NOTNULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-98615479') ORDER BY ((((vt1.c2) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-98615479') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c2) NOTNULL)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('-98615479') ORDER BY ((((vt1.c2) NOTNULL)) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (0.6249241077198807);
SELECT SUM(count) FROM (SELECT ((0.6249241077198807) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.6249241077198807);
SELECT SUM(count) FROM (SELECT ((0.6249241077198807) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.6249241077198807);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE ((~ ((x'' IN ())))) ORDER BY ((((((((vt1.c2)OR(vt1.c0)))AND(vt1.lid)))AND((+ (vt1.c2)))))AND(((x'') BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((x'' IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) ORDER BY ((((((((vt1.c2)OR(vt1.c0)))AND(vt1.lid)))AND((+ (vt1.c2)))))AND(((x'') BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE ((~ ((x'' IN ())))) ORDER BY ((((((((vt1.c2)OR(vt1.c0)))AND(vt1.lid)))AND((+ (vt1.c2)))))AND(((x'') BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((x'' IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) ORDER BY ((((((((vt1.c2)OR(vt1.c0)))AND(vt1.lid)))AND((+ (vt1.c2)))))AND(((x'') BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE ((~ ((x'' IN ())))) ORDER BY ((((((((vt1.c2)OR(vt1.c0)))AND(vt1.lid)))AND((+ (vt1.c2)))))AND(((x'') BETWEEN (vt1.c0) AND (vt1.lid)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (load_extension(CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (load_extension(CAST(vt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(vt1.c2 AS REAL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)IS NOT(vt1.c2)))LIKE((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c2)))LIKE((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)IS NOT(vt1.c2)))LIKE((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c2)))LIKE((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)IS NOT(vt1.c2)))LIKE((vt1.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY vt0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE)>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)>(vt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((x'', vt1.lid, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c1))))LIKE(json_array_length(vt1.c0)))) ORDER BY CASE WHEN NULL THEN vt1.lid COLLATE BINARY WHEN (- (vt1.lid)) THEN vt0.c2 COLLATE RTRIM WHEN '-673891816' THEN CAST(vt0.c2 AS TEXT) WHEN (NOT (vt1.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', vt1.lid, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c1))))LIKE(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN NULL THEN vt1.lid COLLATE BINARY WHEN (- (vt1.lid)) THEN vt0.c2 COLLATE RTRIM WHEN '-673891816' THEN CAST(vt0.c2 AS TEXT) WHEN (NOT (vt1.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((x'', vt1.lid, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c1))))LIKE(json_array_length(vt1.c0)))) ORDER BY CASE WHEN NULL THEN vt1.lid COLLATE BINARY WHEN (- (vt1.lid)) THEN vt0.c2 COLLATE RTRIM WHEN '-673891816' THEN CAST(vt0.c2 AS TEXT) WHEN (NOT (vt1.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', vt1.lid, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c1))))LIKE(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN NULL THEN vt1.lid COLLATE BINARY WHEN (- (vt1.lid)) THEN vt0.c2 COLLATE RTRIM WHEN '-673891816' THEN CAST(vt0.c2 AS TEXT) WHEN (NOT (vt1.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((x'', vt1.lid, vt1.c2)) NOT BETWEEN ((vt1.c2, vt1.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c1))))LIKE(json_array_length(vt1.c0)))) ORDER BY CASE WHEN NULL THEN vt1.lid COLLATE BINARY WHEN (- (vt1.lid)) THEN vt0.c2 COLLATE RTRIM WHEN '-673891816' THEN CAST(vt0.c2 AS TEXT) WHEN (NOT (vt1.c0)) THEN ((vt1.lid) ISNULL) WHEN ((vt1.c0) ISNULL) THEN ((vt1.c0) NOT NULL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNLIKELY(((vt0.c0) BETWEEN (vt1.c2) AND (vt0.c2))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt1.c0)))>=(TRIM(vt1.c0, vt0.c0))) WHERE ((((((vt1.c1))!=((vt0.c2)))) BETWEEN (((vt0.c0)<<(1437619510))) AND (CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))!=((vt0.c2)))) BETWEEN (((vt0.c0)<<(1437619510))) AND (CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt1.c0)))>=(TRIM(vt1.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt1.c0)))>=(TRIM(vt1.c0, vt0.c0))) WHERE ((((((vt1.c1))!=((vt0.c2)))) BETWEEN (((vt0.c0)<<(1437619510))) AND (CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))!=((vt0.c2)))) BETWEEN (((vt0.c0)<<(1437619510))) AND (CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt1.c0)))>=(TRIM(vt1.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)OR(vt1.c0)))>=(TRIM(vt1.c0, vt0.c0))) WHERE ((((((vt1.c1))!=((vt0.c2)))) BETWEEN (((vt0.c0)<<(1437619510))) AND (CASE vt0.c2  WHEN vt0.c2 THEN x'' ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NOT (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c2)||(vt1.c1)))AND(vt1.c2)))OR(((vt1.lid)<>(vt1.c0)))))OR(((vt1.lid)IS(0Xffffffffa9ba06ca)))))OR(vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c2)||(vt1.c1)))AND(vt1.c2)))OR(((vt1.lid)!=(vt1.c0)))))OR(((vt1.lid)IS(0xffffffffa9ba06ca)))))OR(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c2)||(vt1.c1)))AND(vt1.c2)))OR(((vt1.lid)<>(vt1.c0)))))OR(((vt1.lid)IS(0Xffffffffa9ba06ca)))))OR(vt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c2)||(vt1.c1)))AND(vt1.c2)))OR(((vt1.lid)!=(vt1.c0)))))OR(((vt1.lid)IS(0xffffffffa9ba06ca)))))OR(vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c2)||(vt1.c1)))AND(vt1.c2)))OR(((vt1.lid)<>(vt1.c0)))))OR(((vt1.lid)IS(0Xffffffffa9ba06ca)))))OR(vt1.c2)));
SELECT * FROM vt0 WHERE (((json_valid(vt0.c1))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((json_valid(vt0.c1))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((json_valid(vt0.c1))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((json_valid(vt0.c1))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((json_valid(vt0.c1))AND(vt0.c0)));
SELECT ALL * FROM vt1, vt0 WHERE ((((x'' IN (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND ('841881665'))) ORDER BY ((vt1.lid) ISNULL) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND ('841881665'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid) ISNULL) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((x'' IN (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND ('841881665'))) ORDER BY ((vt1.lid) ISNULL) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND ('841881665'))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.lid) ISNULL) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((x'' IN (vt1.c2))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 END) AND ('841881665'))) ORDER BY ((vt1.lid) ISNULL) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))*((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1)))*((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))*((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c1)))*((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))*((~ (vt0.c1)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1 IN ())) AND (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1 IN ())) AND (CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1 IN ())) AND (CAST(NULL AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1 IN ())) AND (CAST(NULL AS REAL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c2)) NOT BETWEEN ((vt0.c1 IN ())) AND (CAST(NULL AS REAL))));
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.lid)==(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.lid)==(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.lid)==(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.lid)==(vt1.lid))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.lid)==(vt1.lid)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((0Xffffffffa440a6a2)AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))) WHERE ((((((((((('')OR(vt1.c1)))AND(vt1.lid)))OR(vt0.c1)))OR(vt1.lid))) BETWEEN (CHANGES()) AND (CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((('')OR(vt1.c1)))AND(vt1.lid)))OR(vt0.c1)))OR(vt1.lid))) BETWEEN (CHANGES()) AND (CASE WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((0xffffffffa440a6a2)AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((0Xffffffffa440a6a2)AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))) WHERE ((((((((((('')OR(vt1.c1)))AND(vt1.lid)))OR(vt0.c1)))OR(vt1.lid))) BETWEEN (CHANGES()) AND (CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((('')OR(vt1.c1)))AND(vt1.lid)))OR(vt0.c1)))OR(vt1.lid))) BETWEEN (CHANGES()) AND (CASE WHEN vt1.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((0xffffffffa440a6a2)AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((0Xffffffffa440a6a2)AND(vt1.c0 COLLATE NOCASE)))OR((vt1.c2 IN ()))) WHERE ((((((((((('')OR(vt1.c1)))AND(vt1.lid)))OR(vt0.c1)))OR(vt1.lid))) BETWEEN (CHANGES()) AND (CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(((vt1.c0)AND(vt1.c0)))))OR(((vt1.lid)<<(vt1.c2)))))AND(((((vt1.c1)AND(vt1.lid)))OR(vt1.c1)))))AND(((vt1.c1)>>(vt1.c0))))) ORDER BY (vt1.lid IN ()) COLLATE BINARY, CAST(((vt1.lid)>(vt1.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(((vt1.c0)AND(vt1.c0)))))OR(((vt1.lid)<<(vt1.c2)))))AND(((((vt1.c1)AND(vt1.lid)))OR(vt1.c1)))))AND(((vt1.c1)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.lid IN ()) COLLATE BINARY, CAST(((vt1.lid)>(vt1.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(((vt1.c0)AND(vt1.c0)))))OR(((vt1.lid)<<(vt1.c2)))))AND(((((vt1.c1)AND(vt1.lid)))OR(vt1.c1)))))AND(((vt1.c1)>>(vt1.c0))))) ORDER BY (vt1.lid IN ()) COLLATE BINARY, CAST(((vt1.lid)>(vt1.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(((vt1.c0)AND(vt1.c0)))))OR(((vt1.lid)<<(vt1.c2)))))AND(((((vt1.c1)AND(vt1.lid)))OR(vt1.c1)))))AND(((vt1.c1)>>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.lid IN ()) COLLATE BINARY, CAST(((vt1.lid)>(vt1.c2)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((((NULL)AND(((vt1.c0)AND(vt1.c0)))))OR(((vt1.lid)<<(vt1.c2)))))AND(((((vt1.c1)AND(vt1.lid)))OR(vt1.c1)))))AND(((vt1.c1)>>(vt1.c0))))) ORDER BY (vt1.lid IN ()) COLLATE BINARY, CAST(((vt1.lid)>(vt1.c2)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS BLOB) WHERE (((x'aeae')>>(((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'aeae')>>(((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS BLOB) WHERE (((x'aeae')>>(((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'aeae')>>(((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON CAST(((vt0.c1) NOTNULL) AS BLOB) WHERE (((x'aeae')>>(((vt1.lid) BETWEEN (vt1.c1) AND (vt1.lid)))));
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (NOT (vt0.c0)) THEN 0.04649848457201666 ELSE LIKELIHOOD(vt0.c2, 0.4069903546026509) END ASC  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (NOT (vt0.c0)) THEN 0.04649848457201666 ELSE LIKELIHOOD(vt0.c2, 0.4069903546026509) END ASC  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (NOT (vt0.c0)) THEN 0.04649848457201666 ELSE LIKELIHOOD(vt0.c2, 0.4069903546026509) END ASC  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (NOT (vt0.c0)) THEN 0.04649848457201666 ELSE LIKELIHOOD(vt0.c2, 0.4069903546026509) END ASC  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))>=(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS BLOB)  WHEN (NOT (vt0.c0)) THEN 0.04649848457201666 ELSE LIKELIHOOD(vt0.c2, 0.4069903546026509) END ASC  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((CHANGES() IN ())) ORDER BY CHANGES();
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM vt1 ORDER BY CHANGES());
SELECT * FROM vt1 WHERE ((CHANGES() IN ())) ORDER BY CHANGES();
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM vt1 ORDER BY CHANGES());
SELECT * FROM vt1 WHERE ((CHANGES() IN ())) ORDER BY CHANGES();
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c2)IS(vt0.c2)) IN ()) WHERE ((((NOT (vt1.c2)))IS(COALESCE(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c2)))IS(COALESCE(NULL, vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c2)IS(vt0.c2)) IN ()));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c2)IS(vt0.c2)) IN ()) WHERE ((((NOT (vt1.c2)))IS(COALESCE(NULL, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c2)))IS(COALESCE(NULL, vt1.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt1.c2)IS(vt0.c2)) IN ()));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt1.c2)IS(vt0.c2)) IN ()) WHERE ((((NOT (vt1.c2)))IS(COALESCE(NULL, vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR((~ (vt0.c0)))))OR(((vt0.c2)IS(vt0.c2))))) ORDER BY ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c2) ISNULL))))AND(((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR((~ (vt0.c0)))))OR(((vt0.c2)IS(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c2) ISNULL))))AND(((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR((~ (vt0.c0)))))OR(((vt0.c2)IS(vt0.c2))))) ORDER BY ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c2) ISNULL))))AND(((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c0)))OR((~ (vt0.c0)))))OR(((vt0.c2)IS(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c2) ISNULL))))AND(((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NOT (vt0.c0)))OR((~ (vt0.c0)))))OR(((vt0.c2)IS(vt0.c2))))) ORDER BY ((((CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c2) ISNULL))))AND(((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((0.8882654190907416 IN ()))||(x'' COLLATE BINARY))) ORDER BY MAX(((vt1.lid)GLOB(vt1.c2)), (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8882654190907416 IN ()))||(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY MAX(((vt1.lid)GLOB(vt1.c2)), (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((0.8882654190907416 IN ()))||(x'' COLLATE BINARY))) ORDER BY MAX(((vt1.lid)GLOB(vt1.c2)), (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.8882654190907416 IN ()))||(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY MAX(((vt1.lid)GLOB(vt1.c2)), (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((0.8882654190907416 IN ()))||(x'' COLLATE BINARY))) ORDER BY MAX(((vt1.lid)GLOB(vt1.c2)), (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN ((vt1.lid)>(vt1.lid)) ELSE ((vt1.c0)==(-698998727)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) ISNULL) THEN ((vt1.lid)>(vt1.lid)) ELSE ((vt1.c0)=(-698998727)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN ((vt1.lid)>(vt1.lid)) ELSE ((vt1.c0)==(-698998727)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) ISNULL) THEN ((vt1.lid)>(vt1.lid)) ELSE ((vt1.c0)=(-698998727)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN ((vt1.lid)>(vt1.lid)) ELSE ((vt1.c0)==(-698998727)) END);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (x'') ORDER BY ((((((vt1.c2)AND(vt1.c0)))AND(vt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt1.c2)AND(vt1.c0)))AND(vt1.c2))) NOTNULL));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (x'') ORDER BY ((((((vt1.c2)AND(vt1.c0)))AND(vt1.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((((vt1.c2)AND(vt1.c0)))AND(vt1.c2))) NOTNULL));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (x'') ORDER BY ((((((vt1.c2)AND(vt1.c0)))AND(vt1.c2))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE BINARY))) ORDER BY ((CAST(vt0.c2 AS NUMERIC))%(vt1.c2))  NULLS FIRST, ((UNLIKELY(vt0.c1)) BETWEEN (NULL) AND (((vt1.lid)<<(vt1.lid)))) ASC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c2 AS NUMERIC))%(vt1.c2))  NULLS FIRST, ((UNLIKELY(vt0.c1)) BETWEEN (NULL) AND (((vt1.lid)<<(vt1.lid)))) ASC, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE BINARY))) ORDER BY ((CAST(vt0.c2 AS NUMERIC))%(vt1.c2))  NULLS FIRST, ((UNLIKELY(vt0.c1)) BETWEEN (NULL) AND (((vt1.lid)<<(vt1.lid)))) ASC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt0.c2 AS NUMERIC))%(vt1.c2))  NULLS FIRST, ((UNLIKELY(vt0.c1)) BETWEEN (NULL) AND (((vt1.lid)<<(vt1.lid)))) ASC, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c2))))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)))AND(vt0.c1 COLLATE BINARY))) ORDER BY ((CAST(vt0.c2 AS NUMERIC))%(vt1.c2))  NULLS FIRST, ((UNLIKELY(vt0.c1)) BETWEEN (NULL) AND (((vt1.lid)<<(vt1.lid)))) ASC, x''  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)AND(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)AND(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)AND(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)AND(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)AND(vt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((HEX(DISTINCT vt0.c1))IS NOT(((vt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c1))IS NOT(((vt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((HEX(DISTINCT vt0.c1))IS NOT(((vt0.c2)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c1))IS NOT(((vt0.c2)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((HEX(DISTINCT vt0.c1))IS NOT(((vt0.c2)LIKE(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((('1470515495')/(vt1.c0)))/((~ (vt1.c0)))) WHERE ('0.9980390067507889');
SELECT SUM(count) FROM (SELECT ALL (('0.9980390067507889') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((('1470515495')/(vt1.c0)))/((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((('1470515495')/(vt1.c0)))/((~ (vt1.c0)))) WHERE ('0.9980390067507889');
SELECT SUM(count) FROM (SELECT ALL (('0.9980390067507889') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((('1470515495')/(vt1.c0)))/((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((('1470515495')/(vt1.c0)))/((~ (vt1.c0)))) WHERE ('0.9980390067507889');
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)>=(((((((((((((vt1.lid)AND(vt1.lid)))OR(NULL)))AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND('RE'))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)>=(((((((((((((vt1.lid)AND(vt1.lid)))OR(NULL)))AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND('RE')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)>=(((((((((((((vt1.lid)AND(vt1.lid)))OR(NULL)))AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND('RE'))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)>=(((((((((((((vt1.lid)AND(vt1.lid)))OR(NULL)))AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND('RE')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.lid THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 AS TEXT) COLLATE BINARY, ((CASE WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c0 END)>=(((((((((((((vt1.lid)AND(vt1.lid)))OR(NULL)))AND(vt1.c2)))AND(vt1.c1)))OR(vt1.c1)))AND('RE'))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CASE vt0.c0  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.lid)GLOB(0Xffffffffc06c1ba8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt0.c0  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.lid)GLOB(0Xffffffffc06c1ba8)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CASE vt0.c0  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.lid)GLOB(0Xffffffffc06c1ba8)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE vt0.c0  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.lid)GLOB(0Xffffffffc06c1ba8)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY CASE vt0.c0  WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.lid)GLOB(0Xffffffffc06c1ba8)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(CASE WHEN vt1.c1 THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))*(CASE WHEN vt1.c1 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(CASE WHEN vt1.c1 THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))*(CASE WHEN vt1.c1 THEN vt1.c2 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))*(CASE WHEN vt1.c1 THEN vt1.c2 END)));
SELECT ALL * FROM vt1, vt0 WHERE (((('x\n')IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('x\n')IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((('x\n')IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('x\n')IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((('x\n')IS NOT(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_object(vt0.c1, vt0.c2, vt0.c0, vt0.c1)) NOTNULL)) ORDER BY (CAST('-1314628545' AS INTEGER) IN ()) ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((json_object(vt0.c1, vt0.c2, vt0.c0, vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST('-1314628545' AS INTEGER) IN ()) ASC, vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_object(vt0.c1, vt0.c2, vt0.c0, vt0.c1)) NOTNULL)) ORDER BY (CAST('-1314628545' AS INTEGER) IN ()) ASC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((json_object(vt0.c1, vt0.c2, vt0.c0, vt0.c1)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (CAST('-1314628545' AS INTEGER) IN ()) ASC, vt0.c0 ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))))OR(((vt1.c0)IS(vt1.c1))))) ORDER BY 0.39271852098215887;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))))OR(((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY 0.39271852098215887);
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))))OR(((vt1.c0)IS(vt1.c1))))) ORDER BY 0.39271852098215887;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))))OR(((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY 0.39271852098215887);
SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)AND(((((vt1.c2)AND(vt1.c0)))OR(vt1.c1)))))OR(((vt1.c0)IS(vt1.c1))))) ORDER BY 0.39271852098215887;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT * FROM vt0 WHERE ((json_extract(vt0.c0, vt0.c1) IN ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt0.c0, vt0.c1) IN ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((json_extract(vt0.c0, vt0.c1) IN ((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt0.c0, vt0.c1) IN ((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOTNULL) COLLATE BINARY) ORDER BY (~ (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))  NULLS LAST, (((- (vt0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))  NULLS LAST, (((- (vt0.c2))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOTNULL) COLLATE BINARY) ORDER BY (~ (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))  NULLS LAST, (((- (vt0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))  NULLS LAST, (((- (vt0.c2))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOTNULL) COLLATE BINARY) ORDER BY (~ (CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END))  NULLS LAST, (((- (vt0.c2))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)>=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)>=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)>=(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)>=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)>=(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1)>(-1.324875538E9))))<((CAST(vt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)>(-1.324875538E9))))<((CAST(vt0.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1)>(-1.324875538E9))))<((CAST(vt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)>(-1.324875538E9))))<((CAST(vt0.c2 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1)>(-1.324875538E9))))<((CAST(vt0.c2 AS INTEGER)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((((((vt0.c2)OR(vt1.c2)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c1)||(vt1.c0))) BETWEEN (((vt0.c2)GLOB(vt1.c1))) AND (CAST(0Xffffffffd6562039 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c2)OR(vt1.c2)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)||(vt1.c0))) BETWEEN (((vt0.c2)GLOB(vt1.c1))) AND (CAST(0Xffffffffd6562039 AS INTEGER))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((((((vt0.c2)OR(vt1.c2)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c1)||(vt1.c0))) BETWEEN (((vt0.c2)GLOB(vt1.c1))) AND (CAST(0Xffffffffd6562039 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c2)OR(vt1.c2)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c1)||(vt1.c0))) BETWEEN (((vt0.c2)GLOB(vt1.c1))) AND (CAST(0Xffffffffd6562039 AS INTEGER))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((((((((vt0.c2)OR(vt1.c2)))OR(vt1.lid)))OR(vt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY ((((vt0.c1)||(vt1.c0))) BETWEEN (((vt0.c2)GLOB(vt1.c1))) AND (CAST(0Xffffffffd6562039 AS INTEGER)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)||((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)||((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)||((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE)||((+ (vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE)||((+ (vt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(TRIM(DISTINCT vt0.c2))))AND(((vt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(TRIM(DISTINCT vt0.c2))))AND(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(TRIM(DISTINCT vt0.c2))))AND(((vt0.c1)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(TRIM(DISTINCT vt0.c2))))AND(((vt0.c1)-(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)))AND(TRIM(DISTINCT vt0.c2))))AND(((vt0.c1)-(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c2)OR(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY (((vt0.c1)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c2) IS FALSE)))) ASC  NULLS LAST, x'dadf2ec6'  NULLS LAST, ((vt0.c1)||(((vt0.c2)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c2)OR(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c2) IS FALSE)))) ASC  NULLS LAST, x'dadf2ec6'  NULLS LAST, ((vt0.c1)||(((vt0.c2)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c2)OR(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY (((vt0.c1)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c2) IS FALSE)))) ASC  NULLS LAST, x'dadf2ec6'  NULLS LAST, ((vt0.c1)||(((vt0.c2)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c2)OR(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c2) IS FALSE)))) ASC  NULLS LAST, x'dadf2ec6'  NULLS LAST, ((vt0.c1)||(((vt0.c2)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c2)OR(vt0.c0)))))OR(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) ORDER BY (((vt0.c1)) BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((vt0.c2) IS FALSE)))) ASC  NULLS LAST, x'dadf2ec6'  NULLS LAST, ((vt0.c1)||(((vt0.c2)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN ()))>>(x'')));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))>>(x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN ()))>>(x'')));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))>>(x''))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1 IN ()))>>(x'')));
SELECT ALL * FROM vt0 WHERE ((NOT (json_insert(0.5233641158723864, vt0.c0, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY vt0.c1 ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (json_insert(0.5233641158723864, vt0.c0, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE ((NOT (json_insert(0.5233641158723864, vt0.c0, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY vt0.c1 ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (json_insert(0.5233641158723864, vt0.c0, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, vt0.c0 DESC);
SELECT * FROM vt1, vt0 WHERE (CAST(LIKELY(0.5491435710591567) AS INTEGER)) ORDER BY ((CAST(vt1.lid AS BLOB))%(((((((((vt1.c2)AND(vt1.lid)))OR(NULL)))OR(vt0.c1)))AND(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(0.5491435710591567) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB))%(((((((((vt1.c2)AND(vt1.lid)))OR(NULL)))OR(vt0.c1)))AND(vt1.c2)))));
SELECT * FROM vt1, vt0 WHERE (CAST(LIKELY(0.5491435710591567) AS INTEGER)) ORDER BY ((CAST(vt1.lid AS BLOB))%(((((((((vt1.c2)AND(vt1.lid)))OR(NULL)))OR(vt0.c1)))AND(vt1.c2))));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(0.5491435710591567) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.lid AS BLOB))%(((((((((vt1.c2)AND(vt1.lid)))OR(NULL)))OR(vt0.c1)))AND(vt1.c2)))));
SELECT * FROM vt1, vt0 WHERE (CAST(LIKELY(0.5491435710591567) AS INTEGER)) ORDER BY ((CAST(vt1.lid AS BLOB))%(((((((((vt1.c2)AND(vt1.lid)))OR(NULL)))OR(vt0.c1)))AND(vt1.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((0xffffffffa42829c4)AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN '161630171' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)))AND((vt0.c2 IN ()))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.9583559258544027))))AND(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xffffffffa42829c4)AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN '161630171' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)))AND((vt0.c2 IN ()))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.9583559258544027))))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0xffffffffa42829c4)AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN '161630171' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)))AND((vt0.c2 IN ()))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.9583559258544027))))AND(((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xffffffffa42829c4)AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN '161630171' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)))AND((vt0.c2 IN ()))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.9583559258544027))))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0xffffffffa42829c4)AND(CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN '161630171' THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END)))AND((vt0.c2 IN ()))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.9583559258544027))))AND(((vt0.c0)<=(vt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((x'')IS NOT((((vt1.c2, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((x'')IS NOT((((vt1.c2, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((x'')IS NOT((((vt1.c2, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((x'')IS NOT((((vt1.c2, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((x'')IS NOT((((vt1.c2, vt1.c2, vt0.c1)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))) WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (HEX(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (HEX(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (HEX(vt0.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((NOT (HEX(vt0.c1))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1)AND(vt1.c2)))AND(vt1.c1)) IN ()));
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt1.c2))>=(((vt1.c2) IS FALSE)))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c2))>=(((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt1.c2))>=(((vt1.c2) IS FALSE)))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c2))>=(((vt1.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt1.c2))>=(((vt1.c2) IS FALSE)))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.lid)AND('dMym')))OR(vt0.c1))) NOTNULL)) ORDER BY PRINTF((- (vt1.lid)))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.lid)AND('dMym')))OR(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF((- (vt1.lid)))  NULLS LAST, vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.lid)AND('dMym')))OR(vt0.c1))) NOTNULL)) ORDER BY PRINTF((- (vt1.lid)))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.lid)AND('dMym')))OR(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY PRINTF((- (vt1.lid)))  NULLS LAST, vt0.c0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.lid)AND('dMym')))OR(vt0.c1))) NOTNULL)) ORDER BY PRINTF((- (vt1.lid)))  NULLS LAST, vt0.c0;
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))OR(((vt1.c1)<=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c1)))OR(((vt1.c1)<=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))OR(((vt1.c1)<=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c1)))OR(((vt1.c1)<=(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1)))OR(((vt1.c1)<=(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c2)))AND(vt1.lid))))) ORDER BY ((((vt1.lid) NOTNULL))<(CAST(vt1.lid AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c2)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) NOTNULL))<(CAST(vt1.lid AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c2)))AND(vt1.lid))))) ORDER BY ((((vt1.lid) NOTNULL))<(CAST(vt1.lid AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c2)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.lid) NOTNULL))<(CAST(vt1.lid AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (((((vt1.c0)OR(vt1.c2)))AND(vt1.lid))))) ORDER BY ((((vt1.lid) NOTNULL))<(CAST(vt1.lid AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1)&('*&')) COLLATE BINARY) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN '-1743770036' ELSE vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&('*&')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN '-1743770036' ELSE vt0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)&('*&')) COLLATE BINARY) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN '-1743770036' ELSE vt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)&('*&')) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN '-1743770036' ELSE vt0.c1 END IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)&('*&')) COLLATE BINARY) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN '-1743770036' ELSE vt0.c1 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)>(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)>(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)>(vt1.c1)) IN ()));
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c1)))<<(((((((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt1.lid)))OR(0.49897653542902376)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c1)))<<(((((((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt1.lid)))OR(0.49897653542902376)))) DESC);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c1)))<<(((((((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt1.lid)))OR(0.49897653542902376)))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c1)))<<(((((((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt1.lid)))OR(0.49897653542902376)))) DESC);
SELECT * FROM vt0, vt1 WHERE (NULL) ORDER BY ((((vt1.c1) BETWEEN (vt1.lid) AND (vt0.c1)))<<(((((((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))OR(vt1.lid)))OR(0.49897653542902376)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((vt1.c1)/(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt1.c1)/(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((vt1.c1)/(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt1.c1)/(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (IFNULL(DISTINCT ((vt1.c1)/(vt1.c1)), CASE WHEN vt1.c0 THEN vt1.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)) ORDER BY (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((LIKE(vt0.c2, vt1.lid, 'f') IN ())) ORDER BY json_remove(((vt0.c1) IS TRUE), (- (vt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKE(vt0.c2, vt1.lid, 'f') IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_remove(((vt0.c1) IS TRUE), (- (vt1.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((LIKE(vt0.c2, vt1.lid, 'f') IN ())) ORDER BY json_remove(((vt0.c1) IS TRUE), (- (vt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKE(vt0.c2, vt1.lid, 'f') IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_remove(((vt0.c1) IS TRUE), (- (vt1.c2))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((LIKE(vt0.c2, vt1.lid, 'f') IN ())) ORDER BY json_remove(((vt0.c1) IS TRUE), (- (vt1.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2) ORDER BY ((vt1.c1 COLLATE NOCASE)*(CASE WHEN vt1.lid THEN vt0.c2 WHEN vt0.c2 THEN vt1.c1 WHEN vt1.lid THEN vt1.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt1.lid END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1 COLLATE NOCASE)*(CASE WHEN vt1.lid THEN vt0.c2 WHEN vt0.c2 THEN vt1.c1 WHEN vt1.lid THEN vt1.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt1.lid END)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2) ORDER BY ((vt1.c1 COLLATE NOCASE)*(CASE WHEN vt1.lid THEN vt0.c2 WHEN vt0.c2 THEN vt1.c1 WHEN vt1.lid THEN vt1.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt1.lid END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1 COLLATE NOCASE)*(CASE WHEN vt1.lid THEN vt0.c2 WHEN vt0.c2 THEN vt1.c1 WHEN vt1.lid THEN vt1.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt1.lid END)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2) ORDER BY ((vt1.c1 COLLATE NOCASE)*(CASE WHEN vt1.lid THEN vt0.c2 WHEN vt0.c2 THEN vt1.c1 WHEN vt1.lid THEN vt1.c2 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c1 THEN vt0.c1 ELSE vt1.lid END)) ASC;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN ((vt0.c1 IN ())) AND (vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.lid)AND(vt1.c2)))AND(vt1.c2)) THEN (NOT (vt1.c0)) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.lid)AND(vt1.c2)))AND(vt1.c2)) THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.lid)AND(vt1.c2)))AND(vt1.c2)) THEN (NOT (vt1.c0)) END) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.lid)AND(vt1.c2)))AND(vt1.c2)) THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (CASE WHEN ((((vt1.lid)AND(vt1.c2)))AND(vt1.c2)) THEN (NOT (vt1.c0)) END) ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE (0.7014519836866278);
SELECT SUM(count) FROM (SELECT ((0.7014519836866278) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7014519836866278);
SELECT SUM(count) FROM (SELECT ((0.7014519836866278) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7014519836866278);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c2)-(vt0.c0)))*(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)-(vt0.c0)))*(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c2)-(vt0.c0)))*(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)-(vt0.c0)))*(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL)) ORDER BY ((((vt0.c2)-(vt0.c0)))*(vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)IS(CASE vt0.c0  WHEN vt0.c1 THEN 0.014489056589458316 WHEN vt0.c0 THEN '-1187636046' WHEN vt0.c1 THEN '-n{' ELSE vt0.c2 END))) ORDER BY (~ (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)IS(CASE vt0.c0  WHEN vt0.c1 THEN 0.014489056589458316 WHEN vt0.c0 THEN '-1187636046' WHEN vt0.c1 THEN '-n{' ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)IS(CASE vt0.c0  WHEN vt0.c1 THEN 0.014489056589458316 WHEN vt0.c0 THEN '-1187636046' WHEN vt0.c1 THEN '-n{' ELSE vt0.c2 END))) ORDER BY (~ (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)IS(CASE vt0.c0  WHEN vt0.c1 THEN 0.014489056589458316 WHEN vt0.c0 THEN '-1187636046' WHEN vt0.c1 THEN '-n{' ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END)IS(CASE vt0.c0  WHEN vt0.c1 THEN 0.014489056589458316 WHEN vt0.c0 THEN '-1187636046' WHEN vt0.c1 THEN '-n{' ELSE vt0.c2 END))) ORDER BY (~ (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((('0.9273482341521486')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((('0.9273482341521486')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((('0.9273482341521486')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((('0.9273482341521486')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((('0.9273482341521486')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c2 END) ISNULL)) ORDER BY ((((vt0.c2)%(vt0.c2))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt1.c2 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)%(vt0.c2))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c2 END) ISNULL)) ORDER BY ((((vt0.c2)%(vt0.c2))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt1.c2 END) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)%(vt0.c2))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt1.c2 END) ISNULL)) ORDER BY ((((vt0.c2)%(vt0.c2))) NOT BETWEEN (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(vt0.c1 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((CAST(vt0.c2 AS INTEGER) IN ()));
SELECT * FROM vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN ((((('356963161')AND(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) BETWEEN ((((('356963161')AND(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN ((((('356963161')AND(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE) BETWEEN ((((('356963161')AND(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL COLLATE NOCASE) BETWEEN ((((('356963161')AND(vt0.c1)))AND(vt0.c1))) AND (CAST(vt0.c0 AS BLOB)))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c2) IS TRUE)) AND (((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE BINARY, vt0.c0  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((vt1.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((vt1.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 IN ()) IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.lid) ORDER BY ((vt1.c2 IN ()) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (LIKE(NULL, ((vt0.c1)=(vt0.c1)))) ORDER BY CAST((NOT ('1835687438')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, ((vt0.c1)=(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT ('1835687438')) AS NUMERIC));
SELECT * FROM vt0 WHERE (LIKE(NULL, ((vt0.c1)=(vt0.c1)))) ORDER BY CAST((NOT ('1835687438')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((LIKE(NULL, ((vt0.c1)=(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((NOT ('1835687438')) AS NUMERIC));
SELECT * FROM vt0 WHERE (LIKE(NULL, ((vt0.c1)=(vt0.c1)))) ORDER BY CAST((NOT ('1835687438')) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(NULL AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(NULL AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY CAST(NULL AS NUMERIC) ASC;
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c2)OR(vt1.c1)))AND(vt0.c1)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)OR(vt1.c1)))AND(vt0.c1)) IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c2)OR(vt1.c1)))AND(vt0.c1)) IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c2)OR(vt1.c1)))AND(vt0.c1)) IN (vt1.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((((vt1.c2)OR(vt1.c1)))AND(vt0.c1)) IN (vt1.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))==(((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT))=(((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))==(((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS TEXT))=(((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))==(((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c2)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)) ORDER BY ((((0.020568248046304527)OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.020568248046304527)OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)) ORDER BY ((((0.020568248046304527)OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((0.020568248046304527)OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)) AS REAL)) ORDER BY ((((0.020568248046304527)OR(vt0.c0 COLLATE RTRIM)))AND(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT * FROM vt1 WHERE (((LIKE(vt1.lid, vt1.c0))-(CASE vt1.c2  WHEN '-673915117' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.lid END)));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.lid, vt1.c0))-(CASE vt1.c2  WHEN '-673915117' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.lid END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKE(vt1.lid, vt1.c0))-(CASE vt1.c2  WHEN '-673915117' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.lid END)));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.lid, vt1.c0))-(CASE vt1.c2  WHEN '-673915117' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.lid END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((LIKE(vt1.lid, vt1.c0))-(CASE vt1.c2  WHEN '-673915117' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c2 THEN vt1.c1 ELSE vt1.lid END)));
SELECT * FROM vt0 WHERE (((~ (0.10960539781851186)) IN ())) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN 0.6314718815461604 THEN vt0.c1 END))>((CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (0.10960539781851186)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN 0.6314718815461604 THEN vt0.c1 END))>((CAST(vt0.c2 AS INTEGER)))));
SELECT * FROM vt0 WHERE (((~ (0.10960539781851186)) IN ())) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN 0.6314718815461604 THEN vt0.c1 END))>((CAST(vt0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (0.10960539781851186)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN 0.6314718815461604 THEN vt0.c1 END))>((CAST(vt0.c2 AS INTEGER)))));
SELECT * FROM vt0 WHERE (((~ (0.10960539781851186)) IN ())) ORDER BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN NULL WHEN 0.6314718815461604 THEN vt0.c1 END))>((CAST(vt0.c2 AS INTEGER))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1 IN ())))==((LIKELY(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN ())))==((LIKELY(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1 IN ())))==((LIKELY(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1 IN ())))==((LIKELY(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c1 IN ())))==((LIKELY(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (1.238817392E9);
SELECT SUM(count) FROM (SELECT ALL ((1.238817392E9) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (1.238817392E9);
SELECT SUM(count) FROM (SELECT ALL ((1.238817392E9) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (1.238817392E9);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid IN (vt0.c1)) IN ())) ORDER BY (((vt1.c2)) NOT BETWEEN ((x'')) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))))  NULLS LAST, ((vt1.c1 COLLATE BINARY) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2)) NOT BETWEEN ((x'')) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))))  NULLS LAST, ((vt1.c1 COLLATE BINARY) ISNULL) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid IN (vt0.c1)) IN ())) ORDER BY (((vt1.c2)) NOT BETWEEN ((x'')) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))))  NULLS LAST, ((vt1.c1 COLLATE BINARY) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.lid IN (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2)) NOT BETWEEN ((x'')) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))))  NULLS LAST, ((vt1.c1 COLLATE BINARY) ISNULL) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.lid IN (vt0.c1)) IN ())) ORDER BY (((vt1.c2)) NOT BETWEEN ((x'')) AND ((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))))  NULLS LAST, ((vt1.c1 COLLATE BINARY) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c2)/(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c2)/(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c2)/(vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c2)/(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c2)/(vt0.c2)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c2) BETWEEN ('876218124') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2) BETWEEN ('876218124') AND (vt0.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c2) BETWEEN ('876218124') AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c2) BETWEEN ('876218124') AND (vt0.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt0.c2) BETWEEN ('876218124') AND (vt0.c2)))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)) AS REAL)) ORDER BY ((CAST(0.8266417682298187 AS TEXT))>(((1998517682)|(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(0.8266417682298187 AS TEXT))>(((1998517682)|(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)) AS REAL)) ORDER BY ((CAST(0.8266417682298187 AS TEXT))>(((1998517682)|(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(0.8266417682298187 AS TEXT))>(((1998517682)|(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)) AS REAL)) ORDER BY ((CAST(0.8266417682298187 AS TEXT))>(((1998517682)|(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE NOCASE) NOTNULL));
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((0x484ba563) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((0x484ba563) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1) IS TRUE))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((0x484ba563) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((0x484ba563) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1) IS TRUE))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) ORDER BY (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((0x484ba563) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR(((vt0.c1) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c1)))IS(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c1)))IS(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c1)))IS(vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt1.c1)))IS(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)|(vt1.c1)))IS(vt1.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c2)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid)) WHERE (((((vt1.c0)&(vt1.lid)))=(((vt0.c0)<(vt1.c2))))) ORDER BY CASE ((-698998727) BETWEEN (0Xffffffffa1ab9bc1) AND (vt0.c0))  WHEN (+ (vt0.c2)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.lid)))==(((vt0.c0)<(vt1.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c2)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid)) ORDER BY CASE ((-698998727) BETWEEN (0xffffffffa1ab9bc1) AND (vt0.c0))  WHEN (+ (vt0.c2)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c2)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid)) WHERE (((((vt1.c0)&(vt1.lid)))=(((vt0.c0)<(vt1.c2))))) ORDER BY CASE ((-698998727) BETWEEN (0Xffffffffa1ab9bc1) AND (vt0.c0))  WHEN (+ (vt0.c2)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)&(vt1.lid)))==(((vt0.c0)<(vt1.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt1.c2)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid)) ORDER BY CASE ((-698998727) BETWEEN (0xffffffffa1ab9bc1) AND (vt0.c0))  WHEN (+ (vt0.c2)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt1.c2)|(vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt1.lid)) WHERE (((((vt1.c0)&(vt1.lid)))=(((vt0.c0)<(vt1.c2))))) ORDER BY CASE ((-698998727) BETWEEN (0Xffffffffa1ab9bc1) AND (vt0.c0))  WHEN (+ (vt0.c2)) THEN ((vt0.c1) IS TRUE) ELSE vt0.c0 END;
SELECT ALL * FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((vt1.c0)>(vt1.c2)))<=(((vt1.c1)=(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c2)))<=(((vt1.c1)=(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((vt1.c0)>(vt1.c2)))<=(((vt1.c1)=(NULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c2)))<=(((vt1.c1)=(NULL)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c1)))AND(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((vt1.c0)>(vt1.c2)))<=(((vt1.c1)=(NULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt1.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c2 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST((vt1.c2 IN ()) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((((vt0.c0))>=((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((((vt0.c0))>=((vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((((vt0.c0))>=((vt1.lid))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((((vt0.c0))>=((vt1.lid)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOT BETWEEN (NULL) AND ((((vt0.c0))>=((vt1.lid))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2) ORDER BY json_extract(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY, vt0.c2 COLLATE RTRIM, ((vt1.c2)<(vt1.c1)))  NULLS FIRST, (NOT ((((vt1.lid, vt0.c2, vt0.c1))<=((vt1.c2, vt1.c2, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY, vt0.c2 COLLATE RTRIM, ((vt1.c2)<(vt1.c1)))  NULLS FIRST, (NOT ((((vt1.lid, vt0.c2, vt0.c1))<=((vt1.c2, vt1.c2, vt0.c2))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c2) ORDER BY json_extract(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY, vt0.c2 COLLATE RTRIM, ((vt1.c2)<(vt1.c1)))  NULLS FIRST, (NOT ((((vt1.lid, vt0.c2, vt0.c1))<=((vt1.c2, vt1.c2, vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt1, vt0 ORDER BY json_extract(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, vt0.c1 COLLATE BINARY, vt0.c2 COLLATE RTRIM, ((vt1.c2)<(vt1.c1)))  NULLS FIRST, (NOT ((((vt1.lid, vt0.c2, vt0.c1))<=((vt1.c2, vt1.c2, vt0.c2))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))OR(((vt0.c1) NOT NULL))))AND(((vt0.c1)<(vt1.lid)))))OR(vt1.lid)))OR(((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY (((- (vt0.c2)))+(CAST(vt1.c1 AS INTEGER))) ASC, SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c2)))OR(((vt0.c1) NOT NULL))))AND(((vt0.c1)<(vt1.lid)))))OR(vt1.lid)))OR(((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt0.c2)))+(CAST(vt1.c1 AS INTEGER))) ASC, SQLITE_SOURCE_ID() ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))OR(((vt0.c1) NOT NULL))))AND(((vt0.c1)<(vt1.lid)))))OR(vt1.lid)))OR(((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY (((- (vt0.c2)))+(CAST(vt1.c1 AS INTEGER))) ASC, SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c2)))OR(((vt0.c1) NOT NULL))))AND(((vt0.c1)<(vt1.lid)))))OR(vt1.lid)))OR(((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((- (vt0.c2)))+(CAST(vt1.c1 AS INTEGER))) ASC, SQLITE_SOURCE_ID() ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c2)))OR(((vt0.c1) NOT NULL))))AND(((vt0.c1)<(vt1.lid)))))OR(vt1.lid)))OR(((vt1.c1) BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY (((- (vt0.c2)))+(CAST(vt1.c1 AS INTEGER))) ASC, SQLITE_SOURCE_ID() ASC;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((-1.272210804E9 COLLATE NOCASE) IS FALSE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((((((((((vt1.c2)AND(CASE vt1.lid  WHEN vt1.lid THEN vt0.c2 ELSE vt1.c1 END)))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((vt1.c2) NOT NULL))))OR((((vt1.lid))>((vt1.c2))))))OR(LIKELIHOOD(DISTINCT vt0.c2, 0.7013289462055843)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN vt0 ON ((-1.272210804E9 COLLATE NOCASE) IS FALSE) ORDER BY ((((((((((((vt1.c2)AND(CASE vt1.lid  WHEN vt1.lid THEN vt0.c2 ELSE vt1.c1 END)))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((vt1.c2) NOT NULL))))OR((((vt1.lid))>((vt1.c2))))))OR(LIKELIHOOD(DISTINCT vt0.c2, 0.7013289462055843)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((-1.272210804E9 COLLATE NOCASE) IS FALSE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((((((((((vt1.c2)AND(CASE vt1.lid  WHEN vt1.lid THEN vt0.c2 ELSE vt1.c1 END)))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((vt1.c2) NOT NULL))))OR((((vt1.lid))>((vt1.c2))))))OR(LIKELIHOOD(DISTINCT vt0.c2, 0.7013289462055843)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 NOT INDEXED CROSS JOIN vt0 ON ((-1.272210804E9 COLLATE NOCASE) IS FALSE) ORDER BY ((((((((((((vt1.c2)AND(CASE vt1.lid  WHEN vt1.lid THEN vt0.c2 ELSE vt1.c1 END)))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((vt1.c2) NOT NULL))))OR((((vt1.lid))>((vt1.c2))))))OR(LIKELIHOOD(DISTINCT vt0.c2, 0.7013289462055843)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((-1.272210804E9 COLLATE NOCASE) IS FALSE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((((((((((((vt1.c2)AND(CASE vt1.lid  WHEN vt1.lid THEN vt0.c2 ELSE vt1.c1 END)))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt1.lid THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c2 END)))AND(((vt1.c2) NOT NULL))))OR((((vt1.lid))>((vt1.c2))))))OR(LIKELIHOOD(DISTINCT vt0.c2, 0.7013289462055843)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT NULL) WHERE (((0.011688828581279731)-((((vt1.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.011688828581279731)-((((vt1.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT NULL));
SELECT COUNT(*) FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT NULL) WHERE (((0.011688828581279731)-((((vt1.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.011688828581279731)-((((vt1.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT NULL));
SELECT COUNT(*) FROM vt1 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE x'' END) NOT NULL) WHERE (((0.011688828581279731)-((((vt1.c0))<((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c2 AS REAL))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS REAL))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c2 AS REAL))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c2 AS REAL))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((CAST(vt1.c2 AS REAL))>>(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT ((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c1))<((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT ((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((vt1.c1))<((vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c2 AS INTEGER) COLLATE RTRIM) ORDER BY (NOT ((((vt1.c1))<((vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c2, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))OR(373759648)), (vt0.c1 IN (vt0.c0)), HEX(vt1.c1))) AND ((vt0.c2 COLLATE NOCASE, UPPER(x'4248c5af'), CASE WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c2, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))OR(373759648)), (vt0.c1 IN (vt0.c0)), HEX(vt1.c1))) AND ((vt0.c2 COLLATE NOCASE, UPPER(x'4248c5af'), CASE WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c2, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))OR(373759648)), (vt0.c1 IN (vt0.c0)), HEX(vt1.c1))) AND ((vt0.c2 COLLATE NOCASE, UPPER(x'4248c5af'), CASE WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c2, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))OR(373759648)), (vt0.c1 IN (vt0.c0)), HEX(vt1.c1))) AND ((vt0.c2 COLLATE NOCASE, UPPER(x'4248c5af'), CASE WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c2, vt1.lid)) NOT BETWEEN ((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c0)))AND(vt1.lid)))OR(373759648)), (vt0.c1 IN (vt0.c0)), HEX(vt1.c1))) AND ((vt0.c2 COLLATE NOCASE, UPPER(x'4248c5af'), CASE WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)||(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)||(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 IN ()) IN ())) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ASC  NULLS LAST, (NOT ((~ (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ASC  NULLS LAST, (NOT ((~ (vt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 IN ()) IN ())) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ASC  NULLS LAST, (NOT ((~ (vt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c2 IN ()) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ASC  NULLS LAST, (NOT ((~ (vt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c2 IN ()) IN ())) ORDER BY CAST(((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL) ASC  NULLS LAST, (NOT ((~ (vt1.c2))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.lid)))AND(vt1.lid))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c2)OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.lid)))AND(vt1.lid))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c2)OR(vt1.lid)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()) ASC);
SELECT ALL * FROM vt1 WHERE ((~ (((((vt1.c2)OR(vt1.lid)))AND(vt1.lid))))) ORDER BY ((vt1.c0 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid))>((vt0.c1)))) NOT BETWEEN (((vt0.c2)<=(vt1.c0))) AND (NULL)) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))+(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END))) ORDER BY 0.7875850106554185 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))+(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid))>((vt0.c1)))) NOT BETWEEN (((vt0.c2)<=(vt1.c0))) AND (NULL)) ORDER BY 0.7875850106554185 DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid))>((vt0.c1)))) NOT BETWEEN (((vt0.c2)<=(vt1.c0))) AND (NULL)) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))+(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END))) ORDER BY 0.7875850106554185 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))+(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid))>((vt0.c1)))) NOT BETWEEN (((vt0.c2)<=(vt1.c0))) AND (NULL)) ORDER BY 0.7875850106554185 DESC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((vt1.lid))>((vt0.c1)))) NOT BETWEEN (((vt0.c2)<=(vt1.c0))) AND (NULL)) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.lid)))+(CASE WHEN vt1.c1 THEN vt1.lid ELSE vt0.c0 END))) ORDER BY 0.7875850106554185 DESC;
SELECT COUNT(*) FROM vt1 WHERE (MAX(((vt1.c0)||(vt1.c0)), 0.18283594385972568)) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((MAX(((vt1.c0)||(vt1.c0)), 0.18283594385972568)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (MAX(((vt1.c0)||(vt1.c0)), 0.18283594385972568)) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((MAX(((vt1.c0)||(vt1.c0)), 0.18283594385972568)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (MAX(((vt1.c0)||(vt1.c0)), 0.18283594385972568)) ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL);
SELECT * FROM vt0, vt1 WHERE (HEX((vt0.c1 IN ('4Pzg', vt1.lid))));
SELECT SUM(count) FROM (SELECT ((HEX((vt0.c1 IN ('4Pzg', vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (HEX((vt0.c1 IN ('4Pzg', vt1.lid))));
SELECT SUM(count) FROM (SELECT ((HEX((vt0.c1 IN ('4Pzg', vt1.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (HEX((vt0.c1 IN ('4Pzg', vt1.lid))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)>(vt1.c1))) IS FALSE)) ORDER BY CASE (NOT (vt1.c0))  WHEN NULLIF(DISTINCT vt1.c1, vt1.lid) THEN CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END END ASC, (vt1.lid IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)>(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE (NOT (vt1.c0))  WHEN NULLIF(DISTINCT vt1.c1, vt1.lid) THEN CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END END ASC, (vt1.lid IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)>(vt1.c1))) IS FALSE)) ORDER BY CASE (NOT (vt1.c0))  WHEN NULLIF(DISTINCT vt1.c1, vt1.lid) THEN CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END END ASC, (vt1.lid IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)>(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CASE (NOT (vt1.c0))  WHEN NULLIF(DISTINCT vt1.c1, vt1.lid) THEN CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END END ASC, (vt1.lid IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)>(vt1.c1))) IS FALSE)) ORDER BY CASE (NOT (vt1.c0))  WHEN NULLIF(DISTINCT vt1.c1, vt1.lid) THEN CASE vt1.c2  WHEN vt1.c0 THEN vt1.c2 END END ASC, (vt1.lid IN ()) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c2)OR(vt1.c1)))OR(vt1.c2)))OR(CASE vt0.c0  WHEN 1454988810 THEN '-1324875538' END)))AND(CAST(vt1.c2 AS NUMERIC)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(vt1.c1)))OR(vt1.c2)))OR(CASE vt0.c0  WHEN 1454988810 THEN '-1324875538' END)))AND(CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c2)OR(vt1.c1)))OR(vt1.c2)))OR(CASE vt0.c0  WHEN 1454988810 THEN '-1324875538' END)))AND(CAST(vt1.c2 AS NUMERIC)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c2)OR(vt1.c1)))OR(vt1.c2)))OR(CASE vt0.c0  WHEN 1454988810 THEN '-1324875538' END)))AND(CAST(vt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL);
SELECT * FROM vt1, vt0 WHERE (((((((((vt0.c2)OR(vt1.c1)))OR(vt1.c2)))OR(CASE vt0.c0  WHEN 1454988810 THEN '-1324875538' END)))AND(CAST(vt1.c2 AS NUMERIC)))) ORDER BY NULL;
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (ABS(((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(json_type(vt1.lid) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS REAL))%(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(vt1.lid) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))%(x'')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(json_type(vt1.lid) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS REAL))%(x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(vt1.lid) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))%(x'')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(json_type(vt1.lid) AS TEXT)) ORDER BY ((CAST(vt1.c0 AS REAL))%(x'')) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((((0x16471ea0)OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN x'' THEN 0.014489056589458316 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN LIKELIHOOD(vt0.c0, 0.9798595541824793) THEN CAST(vt0.c2 AS BLOB) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c1)) ELSE ((vt0.c2)OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((0x16471ea0)OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN x'' THEN 0.014489056589458316 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN LIKELIHOOD(vt0.c0, 0.9798595541824793) THEN CAST(vt0.c2 AS BLOB) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c1)) ELSE ((vt0.c2)OR(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0x16471ea0)OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN x'' THEN 0.014489056589458316 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN LIKELIHOOD(vt0.c0, 0.9798595541824793) THEN CAST(vt0.c2 AS BLOB) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c1)) ELSE ((vt0.c2)OR(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((0x16471ea0)OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN x'' THEN 0.014489056589458316 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN LIKELIHOOD(vt0.c0, 0.9798595541824793) THEN CAST(vt0.c2 AS BLOB) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c1)) ELSE ((vt0.c2)OR(vt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((0x16471ea0)OR(vt0.c1)))AND(vt0.c1)))AND(NULL)))OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN x'' THEN 0.014489056589458316 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CASE WHEN vt0.c0 COLLATE RTRIM THEN (~ (vt0.c1)) WHEN LIKELIHOOD(vt0.c0, 0.9798595541824793) THEN CAST(vt0.c2 AS BLOB) WHEN (vt0.c0 IN ()) THEN (+ (vt0.c1)) ELSE ((vt0.c2)OR(vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON NULL WHERE (CASE WHEN NULL THEN ((0.8667762839879911) NOT BETWEEN (vt1.c0) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((0.8667762839879911) NOT BETWEEN (vt1.c0) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON NULL);
SELECT * FROM vt0 INNER JOIN vt1 ON NULL WHERE (CASE WHEN NULL THEN ((0.8667762839879911) NOT BETWEEN (vt1.c0) AND (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((0.8667762839879911) NOT BETWEEN (vt1.c0) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON NULL);
SELECT * FROM vt0 INNER JOIN vt1 ON NULL WHERE (CASE WHEN NULL THEN ((0.8667762839879911) NOT BETWEEN (vt1.c0) AND (vt0.c2)) END);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c2)>>(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)>>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c2)>>(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2)>>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c2)>>(vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.lid, vt1.lid, vt1.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt1.c1 COLLATE NOCASE, ((((vt1.c1)AND(NULL)))OR(vt1.c0)), (((vt0.c2, vt0.c1, vt1.lid))>=((vt0.c1, vt0.c2, vt1.c0))), (((vt1.lid))==((vt1.c1))))) AND ((((vt0.c1)<=('')), (vt1.c1 IN ()), CASE vt1.c2  WHEN 'Tun!!ip' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c2)%(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))))) WHERE ((((~ (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (CASE vt0.c0  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.lid WHEN vt0.c2 THEN vt0.c0 ELSE vt1.lid END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (CASE vt0.c0  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.lid WHEN vt0.c2 THEN vt0.c0 ELSE vt1.lid END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.lid, vt1.lid, vt1.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt1.c1 COLLATE NOCASE, ((((vt1.c1)AND(NULL)))OR(vt1.c0)), (((vt0.c2, vt0.c1, vt1.lid))>=((vt0.c1, vt0.c2, vt1.c0))), (((vt1.lid))=((vt1.c1))))) AND ((((vt0.c1)<=('')), (vt1.c1 IN ()), CASE vt1.c2  WHEN 'Tun!!ip' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c2)%(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.lid, vt1.lid, vt1.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt1.c1 COLLATE NOCASE, ((((vt1.c1)AND(NULL)))OR(vt1.c0)), (((vt0.c2, vt0.c1, vt1.lid))>=((vt0.c1, vt0.c2, vt1.c0))), (((vt1.lid))==((vt1.c1))))) AND ((((vt0.c1)<=('')), (vt1.c1 IN ()), CASE vt1.c2  WHEN 'Tun!!ip' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c2)%(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))))) WHERE ((((~ (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (CASE vt0.c0  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.lid WHEN vt0.c2 THEN vt0.c0 ELSE vt1.lid END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (CASE vt0.c0  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.lid WHEN vt0.c2 THEN vt0.c0 ELSE vt1.lid END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.lid, vt1.lid, vt1.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt1.c1 COLLATE NOCASE, ((((vt1.c1)AND(NULL)))OR(vt1.c0)), (((vt0.c2, vt0.c1, vt1.lid))>=((vt0.c1, vt0.c2, vt1.c0))), (((vt1.lid))=((vt1.c1))))) AND ((((vt0.c1)<=('')), (vt1.c1 IN ()), CASE vt1.c2  WHEN 'Tun!!ip' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c2)%(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.lid, vt1.lid, vt1.lid, vt0.c0, vt0.c0)) NOT BETWEEN ((NULL, vt1.c1 COLLATE NOCASE, ((((vt1.c1)AND(NULL)))OR(vt1.c0)), (((vt0.c2, vt0.c1, vt1.lid))>=((vt0.c1, vt0.c2, vt1.c0))), (((vt1.lid))==((vt1.c1))))) AND ((((vt0.c1)<=('')), (vt1.c1 IN ()), CASE vt1.c2  WHEN 'Tun!!ip' THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c2)%(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))))) WHERE ((((~ (vt1.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid))) AND (CASE vt0.c0  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.lid WHEN vt0.c2 THEN vt0.c0 ELSE vt1.lid END)));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '鶹2' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)|((((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, '-1', vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '鶹2' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)|((((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, '-1', vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '鶹2' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)|((((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, '-1', vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '鶹2' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)|((((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, '-1', vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '鶹2' WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)|((((vt0.c1, vt0.c0, vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c2, '-1', vt0.c1))))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '-1066656856' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1066656856' DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '-1066656856' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1066656856' DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY '-1066656856' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c1 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0))))) ORDER BY NULLIF((((NULL, vt0.c1, vt0.c1))!=((vt0.c2, vt0.c0, vt0.c2))), ((vt0.c2)&(x'b11a')));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((NULL, vt0.c1, vt0.c1))!=((vt0.c2, vt0.c0, vt0.c2))), ((vt0.c2)&(x'b11a'))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0))))) ORDER BY NULLIF((((NULL, vt0.c1, vt0.c1))!=((vt0.c2, vt0.c0, vt0.c2))), ((vt0.c2)&(x'b11a')));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((((NULL, vt0.c1, vt0.c1))!=((vt0.c2, vt0.c0, vt0.c2))), ((vt0.c2)&(x'b11a'))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((~ (vt0.c0))))) ORDER BY NULLIF((((NULL, vt0.c1, vt0.c1))!=((vt0.c2, vt0.c0, vt0.c2))), ((vt0.c2)&(x'b11a')));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) AS REAL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c1 END) AND (CAST('4[' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c1 END) AND (CAST('4[' AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) AS REAL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c1 END) AND (CAST('4[' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c1 END) AND (CAST('4[' AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.lid)) AS REAL) WHERE ((((vt0.c2 IN ())) NOT BETWEEN (CASE WHEN vt1.lid THEN vt0.c1 END) AND (CAST('4[' AS INTEGER))));
SELECT * FROM vt0 WHERE ((((((vt0.c2, NULL, 0Xffffffff9b7e47ae)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c2, vt0.c2))))<<(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, NULL, 0Xffffffff9b7e47ae)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c2, vt0.c2))))<<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c2, NULL, 0Xffffffff9b7e47ae)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c2, vt0.c2))))<<(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, NULL, 0Xffffffff9b7e47ae)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c2, vt0.c2))))<<(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c2, NULL, 0Xffffffff9b7e47ae)) NOT BETWEEN ((vt0.c1, vt0.c1, x'')) AND ((vt0.c0, vt0.c2, vt0.c2))))<<(LOWER(vt0.c0))));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)IS(vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS(vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)IS(vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS(vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c1)IS(vt1.c2)) IN ()));
SELECT ALL * FROM vt1 WHERE (((NULL) BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) BETWEEN ((+ (vt1.lid))) AND (CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c2 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt1.lid, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.lid, vt1.c2, vt0.c0)) AND ((vt0.c1, '876218124', vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.lid, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.lid, vt1.c2, vt0.c0)) AND ((vt0.c1, '876218124', vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt1.lid, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.lid, vt1.c2, vt0.c0)) AND ((vt0.c1, '876218124', vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.lid, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.lid, vt1.c2, vt0.c0)) AND ((vt0.c1, '876218124', vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT ((((vt1.lid, vt1.c2, vt0.c1)) NOT BETWEEN ((vt1.lid, vt1.c2, vt0.c0)) AND ((vt0.c1, '876218124', vt1.c0))))));
SELECT * FROM vt1 WHERE ((((+ (vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (CAST(vt1.c0 AS INTEGER) IN (NULL)) WHERE ((CASE vt1.c2  WHEN vt1.c1 THEN x'8159' ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c2)))LIKE(((vt1.c1)>(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c2  WHEN vt1.c1 THEN x'8159' ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (CAST(vt1.c0 AS INTEGER) IN (NULL)) ORDER BY ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c2)))LIKE(((vt1.c1)>(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (CAST(vt1.c0 AS INTEGER) IN (NULL)) WHERE ((CASE vt1.c2  WHEN vt1.c1 THEN x'8159' ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c2)))LIKE(((vt1.c1)>(vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c2  WHEN vt1.c1 THEN x'8159' ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (CAST(vt1.c0 AS INTEGER) IN (NULL)) ORDER BY ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c2)))LIKE(((vt1.c1)>(vt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (CAST(vt1.c0 AS INTEGER) IN (NULL)) WHERE ((CASE vt1.c2  WHEN vt1.c1 THEN x'8159' ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c2)))LIKE(((vt1.c1)>(vt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((+ (vt1.c2)) IN ()));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((-2115383624)|(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((-2115383624)|(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((-2115383624)|(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((-2115383624)|(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((-2115383624)|(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT (((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt1, vt0 WHERE (STRFTIME((+ (vt0.c0)), (((vt0.c2))>=((vt0.c2))), ((vt0.c1)>(vt1.c1)))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c2, 0.2800252346164397) THEN vt1.c2 WHEN (vt1.c1 IN (vt1.c0)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (x'')) END ASC, CASE WHEN (vt1.c1 IN ()) THEN (((vt0.c2, vt0.c2, vt1.c2))<(('-1949890499', vt1.c1, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((+ (vt0.c0)), (((vt0.c2))>=((vt0.c2))), ((vt0.c1)>(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c2, 0.2800252346164397) THEN vt1.c2 WHEN (vt1.c1 IN (vt1.c0)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (x'')) END ASC, CASE WHEN (vt1.c1 IN ()) THEN (((vt0.c2, vt0.c2, vt1.c2))<(('-1949890499', vt1.c1, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (STRFTIME((+ (vt0.c0)), (((vt0.c2))>=((vt0.c2))), ((vt0.c1)>(vt1.c1)))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c2, 0.2800252346164397) THEN vt1.c2 WHEN (vt1.c1 IN (vt1.c0)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (x'')) END ASC, CASE WHEN (vt1.c1 IN ()) THEN (((vt0.c2, vt0.c2, vt1.c2))<(('-1949890499', vt1.c1, vt1.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((+ (vt0.c0)), (((vt0.c2))>=((vt0.c2))), ((vt0.c1)>(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN LIKELIHOOD(vt0.c2, 0.2800252346164397) THEN vt1.c2 WHEN (vt1.c1 IN (vt1.c0)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (x'')) END ASC, CASE WHEN (vt1.c1 IN ()) THEN (((vt0.c2, vt0.c2, vt1.c2))<(('-1949890499', vt1.c1, vt1.c0))) END  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (STRFTIME((+ (vt0.c0)), (((vt0.c2))>=((vt0.c2))), ((vt0.c1)>(vt1.c1)))) ORDER BY CASE WHEN LIKELIHOOD(vt0.c2, 0.2800252346164397) THEN vt1.c2 WHEN (vt1.c1 IN (vt1.c0)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt1.c2) AND (vt0.c0)) THEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (x'')) END ASC, CASE WHEN (vt1.c1 IN ()) THEN (((vt0.c2, vt0.c2, vt1.c2))<(('-1949890499', vt1.c1, vt1.c0))) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS REAL)) ORDER BY 0.6372512081220548;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.6372512081220548);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS REAL)) ORDER BY 0.6372512081220548;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY 0.6372512081220548);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c2) IS FALSE) AS REAL)) ORDER BY 0.6372512081220548;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST(vt0.c2 AS TEXT)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c0)AND('653045516')))AND(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c0)AND('653045516')))AND(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST(vt0.c2 AS TEXT)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c0)AND('653045516')))AND(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c0)AND('653045516')))AND(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))AND(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END)))AND(CAST(vt0.c2 AS TEXT)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c0)AND('653045516')))AND(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()) WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()) WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 IN ()) IN ()) WHERE ((~ (vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))>=(0X1e114b80)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))>=(0X1e114b80))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))>=(0X1e114b80)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))>=(0X1e114b80))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ()))>=(0X1e114b80)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(((vt0.c1) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.lid)GLOB(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY (~ ((((vt0.c2)) BETWEEN ((vt1.lid)) AND ((x'8147'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid)GLOB(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(((vt0.c1) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)) ORDER BY (~ ((((vt0.c2)) BETWEEN ((vt1.lid)) AND ((x'8147'))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(((vt0.c1) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.lid)GLOB(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY (~ ((((vt0.c2)) BETWEEN ((vt1.lid)) AND ((x'8147'))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.lid)GLOB(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(((vt0.c1) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)) ORDER BY (~ ((((vt0.c2)) BETWEEN ((vt1.lid)) AND ((x'8147'))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0 IN ()))AND(((vt0.c1) NOT NULL))))AND(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.lid)GLOB(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c1 END))) ORDER BY (~ ((((vt0.c2)) BETWEEN ((vt1.lid)) AND ((x'8147'))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN (((vt1.lid IN ()), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ()))) AND ((((vt1.c1)>>(vt0.c0)), (- (vt0.c2)), (+ (vt1.c1))))) WHERE ((SQLITE_COMPILEOPTION_GET(vt1.lid) IN (CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(vt1.lid) IN (CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN (((vt1.lid IN ()), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ()))) AND ((((vt1.c1)>>(vt0.c0)), (- (vt0.c2)), (+ (vt1.c1))))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN (((vt1.lid IN ()), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ()))) AND ((((vt1.c1)>>(vt0.c0)), (- (vt0.c2)), (+ (vt1.c1))))) WHERE ((SQLITE_COMPILEOPTION_GET(vt1.lid) IN (CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(vt1.lid) IN (CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c2 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN (((vt1.lid IN ()), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ()))) AND ((((vt1.c1)>>(vt0.c0)), (- (vt0.c2)), (+ (vt1.c1))))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN (((vt1.lid IN ()), vt1.c1 COLLATE RTRIM, (vt1.c1 IN ()))) AND ((((vt1.c1)>>(vt0.c0)), (- (vt0.c2)), (+ (vt1.c1))))) WHERE ((SQLITE_COMPILEOPTION_GET(vt1.lid) IN (CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c2 END)));
SELECT ALL * FROM vt1 WHERE (CAST(json_type(vt1.c0) AS NUMERIC)) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(json_type(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(json_type(vt1.c0) AS NUMERIC)) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(json_type(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(json_type(vt1.c0) AS NUMERIC)) ORDER BY vt1.c1 ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)<=(ABS(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(ABS(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)<=(ABS(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(ABS(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)<=(ABS(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1) NOTNULL)) BETWEEN (((vt1.lid)|('-1415914818'))) AND (((vt0.c1)>=(vt1.c0)))) WHERE (UNLIKELY(((((vt0.c0)OR(vt1.c2)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((((vt0.c0)OR(vt1.c2)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1) NOTNULL)) BETWEEN (((vt1.lid)|('-1415914818'))) AND (((vt0.c1)>=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1) NOTNULL)) BETWEEN (((vt1.lid)|('-1415914818'))) AND (((vt0.c1)>=(vt1.c0)))) WHERE (UNLIKELY(((((vt0.c0)OR(vt1.c2)))OR(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((((vt0.c0)OR(vt1.c2)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1) NOTNULL)) BETWEEN (((vt1.lid)|('-1415914818'))) AND (((vt0.c1)>=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1) NOTNULL)) BETWEEN (((vt1.lid)|('-1415914818'))) AND (((vt0.c1)>=(vt1.c0)))) WHERE (UNLIKELY(((((vt0.c0)OR(vt1.c2)))OR(vt1.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)GLOB(vt0.c2)))))OR(((vt0.c2)>=(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c2))))AND(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2 IN ()))AND(((vt0.c2)GLOB(vt0.c2)))))OR(((vt0.c2)>=(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c2))))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)GLOB(vt0.c2)))))OR(((vt0.c2)>=(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c2))))AND(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2 IN ()))AND(((vt0.c2)GLOB(vt0.c2)))))OR(((vt0.c2)>=(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c2))))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c2 IN ()))AND(((vt0.c2)GLOB(vt0.c2)))))OR(((vt0.c2)>=(vt0.c0)))))AND(NULLIF(vt0.c0, vt0.c2))))AND(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((((((((((((x'')OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c1)==(vt1.c0)))))AND(CAST(vt1.lid AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c1)==(vt1.c0)))))AND(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((x'')OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c1)==(vt1.c0)))))AND(CAST(vt1.lid AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'')OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c1)==(vt1.c0)))))AND(CAST(vt1.lid AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((((((x'')OR(vt1.c2)))AND(vt1.c2)))AND(vt1.c0)))AND(vt1.c1)))OR(((vt1.c1)==(vt1.c0)))))AND(CAST(vt1.lid AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (- (vt0.c2)) ELSE (+ (vt0.c1)) END) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (- (vt0.c2)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (- (vt0.c2)) ELSE (+ (vt0.c1)) END) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (- (vt0.c2)) ELSE (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c2 COLLATE NOCASE  WHEN (vt0.c0 IN ()) THEN (- (vt0.c2)) ELSE (+ (vt0.c1)) END) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END IN ()) DESC;
SELECT ALL * FROM vt1 WHERE ((- (-2.90925168E8)));
SELECT SUM(count) FROM (SELECT ALL (((- (-2.90925168E8))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (-2.90925168E8)));
SELECT SUM(count) FROM (SELECT ALL (((- (-2.90925168E8))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- (-2.90925168E8)));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 END AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 END AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c0 THEN vt1.c2 END AS BLOB));
SELECT * FROM vt1, vt0 WHERE (0x73cbcc93);
SELECT SUM(count) FROM (SELECT ALL ((0x73cbcc93) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0x73cbcc93);
SELECT SUM(count) FROM (SELECT ALL ((0x73cbcc93) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0x73cbcc93);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.lid)))OR(356963161)))OR(vt1.c2)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN (((vt0.c0, vt0.c2, vt1.lid))>((vt0.c0, vt0.c0, vt0.c1))) THEN (((0.4639261421756218)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(vt1.c2 AS NUMERIC) WHEN CASE WHEN vt1.lid THEN vt0.c2 END THEN ((vt1.c2) NOTNULL) WHEN (((vt0.c0))=((vt0.c1))) THEN ((vt0.c1)+(vt1.c1)) ELSE 1911876457 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.lid)))OR(356963161)))OR(vt1.c2)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN (((vt0.c0, vt0.c2, vt1.lid))>((vt0.c0, vt0.c0, vt0.c1))) THEN (((0.4639261421756218)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(vt1.c2 AS NUMERIC) WHEN CASE WHEN vt1.lid THEN vt0.c2 END THEN ((vt1.c2) NOTNULL) WHEN (((vt0.c0))==((vt0.c1))) THEN ((vt0.c1)+(vt1.c1)) ELSE 1911876457 END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.lid)))OR(356963161)))OR(vt1.c2)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN (((vt0.c0, vt0.c2, vt1.lid))>((vt0.c0, vt0.c0, vt0.c1))) THEN (((0.4639261421756218)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(vt1.c2 AS NUMERIC) WHEN CASE WHEN vt1.lid THEN vt0.c2 END THEN ((vt1.c2) NOTNULL) WHEN (((vt0.c0))=((vt0.c1))) THEN ((vt0.c1)+(vt1.c1)) ELSE 1911876457 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.lid)))OR(356963161)))OR(vt1.c2)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN (((vt0.c0, vt0.c2, vt1.lid))>((vt0.c0, vt0.c0, vt0.c1))) THEN (((0.4639261421756218)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(vt1.c2 AS NUMERIC) WHEN CASE WHEN vt1.lid THEN vt0.c2 END THEN ((vt1.c2) NOTNULL) WHEN (((vt0.c0))==((vt0.c1))) THEN ((vt0.c1)+(vt1.c1)) ELSE 1911876457 END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((((((((vt0.c1)AND(vt1.c1)))OR(vt1.lid)))OR(356963161)))OR(vt1.c2)) THEN ((vt1.c2) NOT BETWEEN (vt1.c2) AND (vt1.c2)) WHEN (((vt0.c0, vt0.c2, vt1.lid))>((vt0.c0, vt0.c0, vt0.c1))) THEN (((0.4639261421756218)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(vt1.c2 AS NUMERIC) WHEN CASE WHEN vt1.lid THEN vt0.c2 END THEN ((vt1.c2) NOTNULL) WHEN (((vt0.c0))=((vt0.c1))) THEN ((vt0.c1)+(vt1.c1)) ELSE 1911876457 END);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c2, vt0.c0) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)) END) ORDER BY (vt0.c2 COLLATE BINARY IN ((~ (vt0.c1)), (~ (vt0.c2)))) DESC, CASE WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) WHEN ((vt0.c1)/(vt0.c2)) THEN ((vt0.c2)>(0.5313020340426617)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c2)%(vt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN 0.1966274661025199 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(DISTINCT vt0.c2, vt0.c0) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 COLLATE BINARY IN ((~ (vt0.c1)), (~ (vt0.c2)))) DESC, CASE WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) WHEN ((vt0.c1)/(vt0.c2)) THEN ((vt0.c2)>(0.5313020340426617)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c2)%(vt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN 0.1966274661025199 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c2, vt0.c0) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)) END) ORDER BY (vt0.c2 COLLATE BINARY IN ((~ (vt0.c1)), (~ (vt0.c2)))) DESC, CASE WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) WHEN ((vt0.c1)/(vt0.c2)) THEN ((vt0.c2)>(0.5313020340426617)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c2)%(vt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN 0.1966274661025199 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(DISTINCT vt0.c2, vt0.c0) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c2 COLLATE BINARY IN ((~ (vt0.c1)), (~ (vt0.c2)))) DESC, CASE WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) WHEN ((vt0.c1)/(vt0.c2)) THEN ((vt0.c2)>(0.5313020340426617)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c2)%(vt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN 0.1966274661025199 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN NULLIF(DISTINCT vt0.c2, vt0.c0) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)) END) ORDER BY (vt0.c2 COLLATE BINARY IN ((~ (vt0.c1)), (~ (vt0.c2)))) DESC, CASE WHEN ((vt0.c0) BETWEEN (x'') AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) WHEN ((vt0.c1)/(vt0.c2)) THEN ((vt0.c2)>(0.5313020340426617)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c2)%(vt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN 0.1966274661025199 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE x'' END END DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (0.577605348862539);
SELECT SUM(count) FROM (SELECT ALL ((0.577605348862539) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.577605348862539);
SELECT SUM(count) FROM (SELECT ALL ((0.577605348862539) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.577605348862539);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))&((vt0.c2 IN ())))) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c2)))&((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))&((vt0.c2 IN ())))) ORDER BY vt0.c2;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c2)))&((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)|(vt0.c2)))&((vt0.c2 IN ())))) ORDER BY vt0.c2;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c2) NOT NULL) COLLATE BINARY) ORDER BY (((('Pc>f')%(vt1.lid))) BETWEEN (vt1.c1) AND ((((vt1.c2))>((vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('Pc>f')%(vt1.lid))) BETWEEN (vt1.c1) AND ((((vt1.c2))>((vt1.c1))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c2) NOT NULL) COLLATE BINARY) ORDER BY (((('Pc>f')%(vt1.lid))) BETWEEN (vt1.c1) AND ((((vt1.c2))>((vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((('Pc>f')%(vt1.lid))) BETWEEN (vt1.c1) AND ((((vt1.c2))>((vt1.c1))))) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c2) NOT NULL) COLLATE BINARY) ORDER BY (((('Pc>f')%(vt1.lid))) BETWEEN (vt1.c1) AND ((((vt1.c2))>((vt1.c1))))) DESC;
SELECT ALL * FROM vt1 WHERE (((0.5290404580739756) NOT BETWEEN (vt1.c2) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (LOWER(vt1.c2) IN ()) ASC, LOWER(vt1.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5290404580739756) NOT BETWEEN (vt1.c2) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (LOWER(vt1.c2) IN ()) ASC, LOWER(vt1.c0) COLLATE BINARY DESC);
SELECT ALL * FROM vt1 WHERE (((0.5290404580739756) NOT BETWEEN (vt1.c2) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (LOWER(vt1.c2) IN ()) ASC, LOWER(vt1.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.5290404580739756) NOT BETWEEN (vt1.c2) AND (vt1.lid)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (LOWER(vt1.c2) IN ()) ASC, LOWER(vt1.c0) COLLATE BINARY DESC);
SELECT ALL * FROM vt1 WHERE (((0.5290404580739756) NOT BETWEEN (vt1.c2) AND (vt1.lid)) COLLATE RTRIM) ORDER BY (LOWER(vt1.c2) IN ()) ASC, LOWER(vt1.c0) COLLATE BINARY DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN ((((vt1.c2))<=((vt1.lid)))) AND (LIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN ((((vt1.c2))<=((vt1.lid)))) AND (LIKELY(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN ((((vt1.c2))<=((vt1.lid)))) AND (LIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN ((((vt1.c2))<=((vt1.lid)))) AND (LIKELY(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.lid))) NOT BETWEEN ((((vt1.c2))<=((vt1.lid)))) AND (LIKELY(vt1.c1))));
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c2 THEN ((vt1.lid)%(vt1.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN '978136408' WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c2)<<(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN ((vt1.lid)%(vt1.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN '978136408' WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c2)<<(vt0.c2)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c2 THEN ((vt1.lid)%(vt1.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN '978136408' WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c2)<<(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c2 THEN ((vt1.lid)%(vt1.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN '978136408' WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c2)<<(vt0.c2)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE (CASE WHEN vt0.c2 THEN ((vt1.lid)%(vt1.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN '978136408' WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.c2)<<(vt0.c2)) END);
SELECT COUNT(*) FROM vt1 WHERE (((((x'')AND(((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))))AND(vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))))AND(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((x'')AND(((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))))AND(vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))))AND(vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((x'')AND(((((vt1.c2)AND(vt1.c2)))AND(vt1.c1)))))AND(vt1.c2 COLLATE RTRIM)));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid)*(vt1.lid)) THEN '666135168' END) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.lid)*(vt1.lid)) THEN '666135168' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c2 DESC);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid)*(vt1.lid)) THEN '666135168' END) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.lid)*(vt1.lid)) THEN '666135168' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c2 DESC);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid)*(vt1.lid)) THEN '666135168' END) ORDER BY vt0.c2 DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.lid WHERE (CASE 1296460116 COLLATE BINARY  WHEN vt1.c1 THEN CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.lid THEN vt1.c2 END WHEN ((vt1.c1) NOT BETWEEN ('') AND (vt0.c2)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((NULL)<<(vt1.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 1296460116 COLLATE BINARY  WHEN vt1.c1 THEN CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.lid THEN vt1.c2 END WHEN ((vt1.c1) NOT BETWEEN ('') AND (vt0.c2)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.lid ORDER BY CAST(((NULL)<<(vt1.c1)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.lid WHERE (CASE 1296460116 COLLATE BINARY  WHEN vt1.c1 THEN CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.lid THEN vt1.c2 END WHEN ((vt1.c1) NOT BETWEEN ('') AND (vt0.c2)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((NULL)<<(vt1.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 1296460116 COLLATE BINARY  WHEN vt1.c1 THEN CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.lid THEN vt1.c2 END WHEN ((vt1.c1) NOT BETWEEN ('') AND (vt0.c2)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON vt1.lid ORDER BY CAST(((NULL)<<(vt1.c1)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON vt1.lid WHERE (CASE 1296460116 COLLATE BINARY  WHEN vt1.c1 THEN CASE WHEN vt1.c2 THEN vt0.c0 WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c2 WHEN vt1.lid THEN vt1.c2 END WHEN ((vt1.c1) NOT BETWEEN ('') AND (vt0.c2)) THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt1.c1)) THEN ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(((NULL)<<(vt1.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS BLOB) AS NUMERIC)) ORDER BY (((vt1.lid IN ()))<=(((vt1.lid)OR(vt1.lid)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE)IS(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))<=(((vt1.lid)OR(vt1.lid)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE)IS(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS BLOB) AS NUMERIC)) ORDER BY (((vt1.lid IN ()))<=(((vt1.lid)OR(vt1.lid)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE)IS(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c2 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))<=(((vt1.lid)OR(vt1.lid)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE)IS(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c2 AS BLOB) AS NUMERIC)) ORDER BY (((vt1.lid IN ()))<=(((vt1.lid)OR(vt1.lid)))) ASC  NULLS LAST, ((vt1.c0 COLLATE NOCASE)IS(vt1.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c2 COLLATE NOCASE)OR(((vt1.c2)=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE)OR(((vt1.c2)==(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c2 COLLATE NOCASE)OR(((vt1.c2)=(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE NOCASE)OR(((vt1.c2)==(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c2 COLLATE NOCASE)OR(((vt1.c2)=(vt1.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) NOT NULL) COLLATE BINARY);
SELECT * FROM vt1 INNER JOIN vt0 ON NULL WHERE ((vt1.c0 IN ())) ORDER BY '1154200928', NULL  NULLS FIRST, ((vt0.c1)OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON NULL ORDER BY '1154200928', NULL  NULLS FIRST, ((vt0.c1)OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON NULL WHERE ((vt1.c0 IN ())) ORDER BY '1154200928', NULL  NULLS FIRST, ((vt0.c1)OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON NULL ORDER BY '1154200928', NULL  NULLS FIRST, ((vt0.c1)OR((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN vt0 ON NULL WHERE ((vt1.c0 IN ())) ORDER BY '1154200928', NULL  NULLS FIRST, ((vt0.c1)OR((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((HEX(vt1.c0))!=(CAST(vt1.lid AS REAL)))) ORDER BY vt1.c1 ASC  NULLS FIRST, (- (vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.c0))<>(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST, (- (vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1))) ISNULL) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((HEX(vt1.c0))!=(CAST(vt1.lid AS REAL)))) ORDER BY vt1.c1 ASC  NULLS FIRST, (- (vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt1.c0))<>(CAST(vt1.lid AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 ASC  NULLS FIRST, (- (vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1))) ISNULL) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((HEX(vt1.c0))!=(CAST(vt1.lid AS REAL)))) ORDER BY vt1.c1 ASC  NULLS FIRST, (- (vt1.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c1)))OR(vt0.c0)))AND(vt0.c1))) ISNULL) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((- (0.20263485610200127))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (0.20263485610200127))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((- (0.20263485610200127))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (0.20263485610200127))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((- (0.20263485610200127))) ORDER BY NULL COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.7882024159954861)*(((((((((x'62e4')AND(vt1.lid)))OR(x'')))AND(vt1.c0)))AND(vt1.lid)))) WHERE (((vt1.lid COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (3.73759648E8)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (3.73759648E8))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.7882024159954861)*(((((((((x'62e4')AND(vt1.lid)))OR(x'')))AND(vt1.c0)))AND(vt1.lid)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.7882024159954861)*(((((((((x'62e4')AND(vt1.lid)))OR(x'')))AND(vt1.c0)))AND(vt1.lid)))) WHERE (((vt1.lid COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (3.73759648E8)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (3.73759648E8))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((0.7882024159954861)*(((((((((x'62e4')AND(vt1.lid)))OR(x'')))AND(vt1.c0)))AND(vt1.lid)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((0.7882024159954861)*(((((((((x'62e4')AND(vt1.lid)))OR(x'')))AND(vt1.c0)))AND(vt1.lid)))) WHERE (((vt1.lid COLLATE BINARY) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (3.73759648E8)));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c2)<(((vt0.c1)<<(vt1.c2))))) ORDER BY vt0.c0 ASC  NULLS LAST, TRIM(json_valid(vt1.c0), ((NULL)>(vt0.c2)))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.lid END))>(((vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<(((vt0.c1)<<(vt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 ASC  NULLS LAST, TRIM(json_valid(vt1.c0), ((NULL)>(vt0.c2)))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.lid END))>(((vt0.c1 IN ())))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c2)<(((vt0.c1)<<(vt1.c2))))) ORDER BY vt0.c0 ASC  NULLS LAST, TRIM(json_valid(vt1.c0), ((NULL)>(vt0.c2)))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.lid END))>(((vt0.c1 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<(((vt0.c1)<<(vt1.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY vt0.c0 ASC  NULLS LAST, TRIM(json_valid(vt1.c0), ((NULL)>(vt0.c2)))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.lid END))>(((vt0.c1 IN ())))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c2)<(((vt0.c1)<<(vt1.c2))))) ORDER BY vt0.c0 ASC  NULLS LAST, TRIM(json_valid(vt1.c0), ((NULL)>(vt0.c2)))  NULLS FIRST, (((CASE WHEN vt1.c0 THEN vt1.lid END))>(((vt0.c1 IN ())))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((x'9a11')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) IN ()) WHERE ((((vt1.c0 IN ()))-(CASE WHEN vt1.c2 THEN vt1.lid END))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))-(CASE WHEN vt1.c2 THEN vt1.lid END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((x'9a11')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) IN ()) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((x'9a11')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) IN ()) WHERE ((((vt1.c0 IN ()))-(CASE WHEN vt1.c2 THEN vt1.lid END))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))-(CASE WHEN vt1.c2 THEN vt1.lid END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((x'9a11')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) IN ()) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((x'9a11')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) IN ()) WHERE ((((vt1.c0 IN ()))-(CASE WHEN vt1.c2 THEN vt1.lid END))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))) NOT BETWEEN (((0.4576127347724941)!=(vt0.c0))) AND ((~ (vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))) NOT BETWEEN (((0.4576127347724941)!=(vt0.c0))) AND ((~ (vt1.lid)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))) NOT BETWEEN (((0.4576127347724941)!=(vt0.c0))) AND ((~ (vt1.lid)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))) NOT BETWEEN (((0.4576127347724941)!=(vt0.c0))) AND ((~ (vt1.lid)))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))) NOT BETWEEN (((0.4576127347724941)!=(vt0.c0))) AND ((~ (vt1.lid)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c2)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c2)|(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c2)|(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c2)|(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c2)|(vt0.c1))));
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1)IS NOT(vt1.lid)), vt1.c1, (vt0.c2 IN ()), ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), ((((vt1.c1)AND(vt1.c0)))OR(vt0.c2))))>((1.238817392E9, ((0xffffffffaa044c3e) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (vt1.c0 IN ()), (- (vt1.c2)), SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)IS NOT(vt1.lid)), vt1.c1, (vt0.c2 IN ()), ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), ((((vt1.c1)AND(vt1.c0)))OR(vt0.c2))))>((1.238817392E9, ((0xffffffffaa044c3e) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (vt1.c0 IN ()), (- (vt1.c2)), SQLITE_VERSION())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1)IS NOT(vt1.lid)), vt1.c1, (vt0.c2 IN ()), ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), ((((vt1.c1)AND(vt1.c0)))OR(vt0.c2))))>((1.238817392E9, ((0xffffffffaa044c3e) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (vt1.c0 IN ()), (- (vt1.c2)), SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)IS NOT(vt1.lid)), vt1.c1, (vt0.c2 IN ()), ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), ((((vt1.c1)AND(vt1.c0)))OR(vt0.c2))))>((1.238817392E9, ((0xffffffffaa044c3e) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (vt1.c0 IN ()), (- (vt1.c2)), SQLITE_VERSION())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1)IS NOT(vt1.lid)), vt1.c1, (vt0.c2 IN ()), ((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)), ((((vt1.c1)AND(vt1.c0)))OR(vt0.c2))))>((1.238817392E9, ((0xffffffffaa044c3e) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (vt1.c0 IN ()), (- (vt1.c2)), SQLITE_VERSION()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2)||(vt0.c2)))AND((((vt0.c2))<>((vt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)||(vt0.c2)))AND((((vt0.c2))!=((vt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2)||(vt0.c2)))AND((((vt0.c2))<>((vt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)||(vt0.c2)))AND((((vt0.c2))!=((vt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c2)||(vt0.c2)))AND((((vt0.c2))<>((vt0.c0))))))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY ((((NULL)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL))IS((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY ((((NULL)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL))IS((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1) NOT NULL))IS((((vt1.c2)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) ORDER BY ((((NULL)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY;
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c2)))OR(vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt1.c2)))OR(vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c2)))OR(vt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt1.c2)))OR(vt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c2)))OR(vt1.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)OR(CAST(vt1.c0 AS TEXT))))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)OR(CAST(vt1.c0 AS TEXT))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)OR(CAST(vt1.c0 AS TEXT))))OR(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)OR(CAST(vt1.c0 AS TEXT))))OR(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)OR(CAST(vt1.c0 AS TEXT))))OR(((vt0.c1) NOTNULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))>>(CASE vt1.lid  WHEN x'3de7' THEN vt1.lid WHEN vt1.c1 THEN vt0.c2 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1105649490' ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))>>(CASE vt1.lid  WHEN x'3de7' THEN vt1.lid WHEN vt1.c1 THEN vt0.c2 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1105649490' ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))>>(CASE vt1.lid  WHEN x'3de7' THEN vt1.lid WHEN vt1.c1 THEN vt0.c2 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1105649490' ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))>>(CASE vt1.lid  WHEN x'3de7' THEN vt1.lid WHEN vt1.c1 THEN vt0.c2 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1105649490' ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c2) BETWEEN (vt0.c0) AND (vt0.c1)))>>(CASE vt1.lid  WHEN x'3de7' THEN vt1.lid WHEN vt1.c1 THEN vt0.c2 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '-1105649490' ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((((((((('\rg0촶kH3\r')AND(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY CASE (((vt1.c2)) BETWEEN ((NULL)) AND ((vt1.c0)))  WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN ((vt0.c1)*(vt1.c1)) WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.lid) IS FALSE) WHEN ((vt1.lid) BETWEEN (vt0.c2) AND (vt1.c2)) THEN vt0.c2 WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt1.c2) IS FALSE) END  NULLS FIRST, (- (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN '687664442' THEN vt0.c1 END AS BLOB)  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (8.76218124E8))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('\rg0촶kH3\r')AND(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.c2)) BETWEEN ((NULL)) AND ((vt1.c0)))  WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN ((vt0.c1)*(vt1.c1)) WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.lid) IS FALSE) WHEN ((vt1.lid) BETWEEN (vt0.c2) AND (vt1.c2)) THEN vt0.c2 WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt1.c2) IS FALSE) END  NULLS FIRST, (- (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN '687664442' THEN vt0.c1 END AS BLOB)  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (8.76218124E8))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((((((((('\rg0촶kH3\r')AND(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY CASE (((vt1.c2)) BETWEEN ((NULL)) AND ((vt1.c0)))  WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN ((vt0.c1)*(vt1.c1)) WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.lid) IS FALSE) WHEN ((vt1.lid) BETWEEN (vt0.c2) AND (vt1.c2)) THEN vt0.c2 WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt1.c2) IS FALSE) END  NULLS FIRST, (- (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN '687664442' THEN vt0.c1 END AS BLOB)  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (8.76218124E8))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('\rg0촶kH3\r')AND(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (((vt1.c2)) BETWEEN ((NULL)) AND ((vt1.c0)))  WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN ((vt0.c1)*(vt1.c1)) WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.lid) IS FALSE) WHEN ((vt1.lid) BETWEEN (vt0.c2) AND (vt1.c2)) THEN vt0.c2 WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt1.c2) IS FALSE) END  NULLS FIRST, (- (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN '687664442' THEN vt0.c1 END AS BLOB)  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (8.76218124E8))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((- ((((((((('\rg0촶kH3\r')AND(vt1.c0)))AND(vt0.c2)))AND(vt1.c0)))AND(vt0.c0))))) ORDER BY CASE (((vt1.c2)) BETWEEN ((NULL)) AND ((vt1.c0)))  WHEN ((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) THEN (vt1.c0 IN ()) WHEN vt1.c0 THEN ((vt0.c1)*(vt1.c1)) WHEN vt0.c2 COLLATE RTRIM THEN ((vt1.lid) IS FALSE) WHEN ((vt1.lid) BETWEEN (vt0.c2) AND (vt1.c2)) THEN vt0.c2 WHEN ((vt0.c1)LIKE(vt0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE ((vt1.c2) IS FALSE) END  NULLS FIRST, (- (vt1.c1)) COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN '687664442' THEN vt0.c1 END AS BLOB)  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (8.76218124E8))) ISNULL)  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c2)&(vt1.c0))  WHEN '1471336545' THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('gbia搅''5'))) END) ORDER BY ((TRIM(0.3306493512106491, vt0.c2))>(1.942736019E9));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c2)&(vt1.c0))  WHEN '1471336545' THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('gbia搅''5'))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(0.3306493512106491, vt0.c2))>(1.942736019E9)));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c2)&(vt1.c0))  WHEN '1471336545' THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('gbia搅''5'))) END) ORDER BY ((TRIM(0.3306493512106491, vt0.c2))>(1.942736019E9));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c2)&(vt1.c0))  WHEN '1471336545' THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('gbia搅''5'))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((TRIM(0.3306493512106491, vt0.c2))>(1.942736019E9)));
SELECT * FROM vt1, vt0 WHERE (CASE ((vt1.c2)&(vt1.c0))  WHEN '1471336545' THEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND (('gbia搅''5'))) END) ORDER BY ((TRIM(0.3306493512106491, vt0.c2))>(1.942736019E9));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY x'';
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS BLOB) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY CAST(vt1.c0 AS BLOB) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1686222930');
SELECT SUM(count) FROM (SELECT (('-1686222930') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1686222930');
SELECT SUM(count) FROM (SELECT (('-1686222930') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1686222930');
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(((vt0.c0) NOTNULL))) ORDER BY (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))LIKE(((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))LIKE(((vt1.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE(((vt1.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) ISNULL))LIKE(((vt1.c0)IS(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((((((((((((NULL)OR(vt1.lid)))AND(vt0.c1)))OR(0.7875850106554185)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))))) ASC, vt0.c2;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((((((((((((NULL)OR(vt1.lid)))AND(vt0.c1)))OR(0.7875850106554185)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))))) ASC, vt0.c2);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((((((((((((NULL)OR(vt1.lid)))AND(vt0.c1)))OR(0.7875850106554185)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))))) ASC, vt0.c2;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((((((((((((NULL)OR(vt1.lid)))AND(vt0.c1)))OR(0.7875850106554185)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))))) ASC, vt0.c2);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (CASE WHEN vt0.c0 THEN vt1.lid WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((NULL)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((((((((((((NULL)OR(vt1.lid)))AND(vt0.c1)))OR(0.7875850106554185)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c0))))) ASC, vt0.c2;
SELECT ALL * FROM vt1 WHERE (CAST(TRIM(DISTINCT vt1.lid, NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt1.lid, NULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(TRIM(DISTINCT vt1.lid, NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT vt1.lid, NULL) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(TRIM(DISTINCT vt1.lid, NULL) AS TEXT));
SELECT * FROM vt1, vt0 WHERE (CAST((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.lid))) AS TEXT)) ORDER BY (((vt1.c2)IS(vt0.c0)) IN ((- ('876218124'))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.lid))) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2)IS(vt0.c0)) IN ((- ('876218124')))));
SELECT * FROM vt1, vt0 WHERE (CAST((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.lid))) AS TEXT)) ORDER BY (((vt1.c2)IS(vt0.c0)) IN ((- ('876218124'))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.lid))) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c2)IS(vt0.c0)) IN ((- ('876218124')))));
SELECT * FROM vt1, vt0 WHERE (CAST((((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt1.lid))) AS TEXT)) ORDER BY (((vt1.c2)IS(vt0.c0)) IN ((- ('876218124'))));
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)<>(vt1.c0)))&((vt1.c1 IN (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)!=(vt1.c0)))&((vt1.c1 IN (NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)<>(vt1.c0)))&((vt1.c1 IN (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)!=(vt1.c0)))&((vt1.c1 IN (NULL)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c2) ORDER BY ((((vt1.c0)<>(vt1.c0)))&((vt1.c1 IN (NULL)))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((('1911215216') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1911215216') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((('1911215216') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1911215216') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((('1911215216') NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((0.8653899344384339)=(vt0.c0)) AS TEXT)) ORDER BY 0X7f618124 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((0.8653899344384339)==(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY 0x7f618124 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((0.8653899344384339)=(vt0.c0)) AS TEXT)) ORDER BY 0X7f618124 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((0.8653899344384339)==(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY 0x7f618124 DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((((vt1.lid)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY (((vt1.lid IN ()))*(CASE vt1.lid  WHEN '''܌O\r䤧㧦' THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((((vt1.lid)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))*(CASE vt1.lid  WHEN '''܌O\r䤧㧦' THEN vt1.c2 END)));
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((((vt1.lid)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY (((vt1.lid IN ()))*(CASE vt1.lid  WHEN '''܌O\r䤧㧦' THEN vt1.c2 END));
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) BETWEEN (((((vt1.lid)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.lid IN ()))*(CASE vt1.lid  WHEN '''܌O\r䤧㧦' THEN vt1.c2 END)));
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) BETWEEN (((((vt1.lid)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))) AND ((vt1.c0)))) ORDER BY (((vt1.lid IN ()))*(CASE vt1.lid  WHEN '''܌O\r䤧㧦' THEN vt1.c2 END));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt0.c0) AND (NULL)) AS INTEGER));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.lid)))<>(((((vt1.c2)OR(vt1.c1)))OR(vt1.c1))))) ORDER BY (((vt1.c2 IN ()))GLOB(((vt1.lid)!=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(vt1.lid)))!=(((((vt1.c2)OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN ()))GLOB(((vt1.lid)<>(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.lid)))<>(((((vt1.c2)OR(vt1.c1)))OR(vt1.c1))))) ORDER BY (((vt1.c2 IN ()))GLOB(((vt1.lid)!=(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(vt1.lid)))!=(((((vt1.c2)OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c2 IN ()))GLOB(((vt1.lid)<>(vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)OR(vt1.lid)))<>(((((vt1.c2)OR(vt1.c1)))OR(vt1.c1))))) ORDER BY (((vt1.c2 IN ()))GLOB(((vt1.lid)!=(vt1.c1))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((CAST(vt0.c1 AS INTEGER)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE '1548805831'  WHEN NULL THEN 0.48002508925315845 END THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE '1548805831'  WHEN NULL THEN 0.48002508925315845 END THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((CAST(vt0.c1 AS INTEGER)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((CAST(vt0.c1 AS INTEGER)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE '1548805831'  WHEN NULL THEN 0.48002508925315845 END THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN CASE '1548805831'  WHEN NULL THEN 0.48002508925315845 END THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((CAST(vt0.c1 AS INTEGER)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((CAST(vt0.c1 AS INTEGER)))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) WHERE (CASE (vt0.c0 IN ())  WHEN CASE '1548805831'  WHEN NULL THEN 0.48002508925315845 END THEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt1.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN ()))*(((vt0.c0)IS(NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))*(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN ()))*(((vt0.c0)IS(NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))*(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL IN ()))*(((vt0.c0)IS(NULL))))) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))||(CAST(vt0.c1 AS TEXT)));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN 0.24458941846598703 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.24458941846598703 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN 0.24458941846598703 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN 0.24458941846598703 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN 0.24458941846598703 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END IN ())) ORDER BY NULL DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((- ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- ((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- ((~ (vt1.c1)))));
SELECT * FROM vt1 WHERE ((- ((- (vt1.c0))))) ORDER BY CASE WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((- ((- (vt1.c0))))) ORDER BY CASE WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((- ((- (vt1.c0))))) ORDER BY CASE WHEN vt1.lid THEN x'' WHEN vt1.lid THEN vt1.lid WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c2 END COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((('*4\rVYz1') BETWEEN (CAST(vt1.c2 AS BLOB)) AND (vt1.c2)));
SELECT SUM(count) FROM (SELECT (((('*4\rVYz1') BETWEEN (CAST(vt1.c2 AS BLOB)) AND (vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('*4\rVYz1') BETWEEN (CAST(vt1.c2 AS BLOB)) AND (vt1.c2)));
SELECT SUM(count) FROM (SELECT (((('*4\rVYz1') BETWEEN (CAST(vt1.c2 AS BLOB)) AND (vt1.c2))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('*4\rVYz1') BETWEEN (CAST(vt1.c2 AS BLOB)) AND (vt1.c2)));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0)))<<(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (((ABS(vt1.c2))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt1.c2))|(NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((ABS(vt1.c2))|(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(vt1.c2))|(NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((ABS(vt1.c2))|(NULL)));
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(json_remove(vt0.c0, vt0.c2))))AND(TRIM(0X231ed011))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(json_remove(vt0.c0, vt0.c2))))AND(TRIM(0X231ed011)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)OR(json_remove(vt0.c0, vt0.c2))))AND(TRIM(0X231ed011))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(json_remove(vt0.c0, vt0.c2))))AND(TRIM(0X231ed011)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt1 WHERE (x'') ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE NOCASE DESC, CASE WHEN vt1.c2 COLLATE BINARY THEN NULLIF(DISTINCT vt1.c2, vt1.lid) ELSE vt1.c2 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE NOCASE DESC, CASE WHEN vt1.c2 COLLATE BINARY THEN NULLIF(DISTINCT vt1.c2, vt1.lid) ELSE vt1.c2 COLLATE RTRIM END DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (x'') ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE NOCASE DESC, CASE WHEN vt1.c2 COLLATE BINARY THEN NULLIF(DISTINCT vt1.c2, vt1.lid) ELSE vt1.c2 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE NOCASE DESC, CASE WHEN vt1.c2 COLLATE BINARY THEN NULLIF(DISTINCT vt1.c2, vt1.lid) ELSE vt1.c2 COLLATE RTRIM END DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (x'') ORDER BY ((vt1.c1)+(vt1.c1)) COLLATE NOCASE DESC, CASE WHEN vt1.c2 COLLATE BINARY THEN NULLIF(DISTINCT vt1.c2, vt1.lid) ELSE vt1.c2 COLLATE RTRIM END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) AND ((0Xffffffffa42829c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) AND ((0xffffffffa42829c4 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) AND ((0Xffffffffa42829c4 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) AND ((0xffffffffa42829c4 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END) AND ((0Xffffffffa42829c4 IN ()))));
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt0.c1))IS NOT(((vt0.c2)GLOB(vt0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c1))IS NOT(((vt0.c2)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt0.c1))IS NOT(((vt0.c2)GLOB(vt0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt0.c1))IS NOT(((vt0.c2)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt0.c1))IS NOT(((vt0.c2)GLOB(vt0.c1))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<=((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON 0.8701719905583651 WHERE (CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((x'') BETWEEN (vt1.c0) AND ('-1314628545')) END) ORDER BY CASE ((NULL)IS NOT(NULL))  WHEN ((vt0.c0) IS TRUE) THEN 0.6031505941292469 COLLATE NOCASE ELSE ((vt1.c2) NOT NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((x'') BETWEEN (vt1.c0) AND ('-1314628545')) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 0.8701719905583651 ORDER BY CASE ((NULL)IS NOT(NULL))  WHEN ((vt0.c0) IS TRUE) THEN 0.6031505941292469 COLLATE NOCASE ELSE ((vt1.c2) NOT NULL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON 0.8701719905583651 WHERE (CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((x'') BETWEEN (vt1.c0) AND ('-1314628545')) END) ORDER BY CASE ((NULL)IS NOT(NULL))  WHEN ((vt0.c0) IS TRUE) THEN 0.6031505941292469 COLLATE NOCASE ELSE ((vt1.c2) NOT NULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((x'') BETWEEN (vt1.c0) AND ('-1314628545')) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 0.8701719905583651 ORDER BY CASE ((NULL)IS NOT(NULL))  WHEN ((vt0.c0) IS TRUE) THEN 0.6031505941292469 COLLATE NOCASE ELSE ((vt1.c2) NOT NULL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON 0.8701719905583651 WHERE (CASE WHEN CAST(vt0.c2 AS BLOB) THEN ((x'') BETWEEN (vt1.c0) AND ('-1314628545')) END) ORDER BY CASE ((NULL)IS NOT(NULL))  WHEN ((vt0.c0) IS TRUE) THEN 0.6031505941292469 COLLATE NOCASE ELSE ((vt1.c2) NOT NULL) END ASC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON LOWER(CASE WHEN NULL THEN vt1.c1 END) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LOWER(CASE WHEN NULL THEN vt1.c1 END));
SELECT * FROM vt1 CROSS JOIN vt0 ON LOWER(CASE WHEN NULL THEN vt1.c1 END) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON LOWER(CASE WHEN NULL THEN vt1.c1 END));
SELECT * FROM vt1 CROSS JOIN vt0 ON LOWER(CASE WHEN NULL THEN vt1.c1 END) WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (vt1.c2 COLLATE NOCASE IN ()) ASC, ((vt1.c0) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 END)) ASC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c2 COLLATE NOCASE IN ()) ASC, ((vt1.c0) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 END)) ASC  NULLS FIRST, '' ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (vt1.c2 COLLATE NOCASE IN ()) ASC, ((vt1.c0) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 END)) ASC  NULLS FIRST, '' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c2 COLLATE NOCASE IN ()) ASC, ((vt1.c0) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 END)) ASC  NULLS FIRST, '' ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (vt1.c2 COLLATE NOCASE IN ()) ASC, ((vt1.c0) NOT BETWEEN (CAST(vt1.lid AS INTEGER)) AND (CASE WHEN vt1.lid THEN vt0.c0 WHEN vt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c2 END)) ASC  NULLS FIRST, '' ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))>((+ ('161630171')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) IS FALSE))>((+ ('161630171'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))>((+ ('161630171')))));
SELECT SUM(count) FROM (SELECT ((((((vt1.lid) IS FALSE))>((+ ('161630171'))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.lid) IS FALSE))>((+ ('161630171')))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))&(((((((((vt1.c2)OR(vt1.c2)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((vt1.lid)OR(vt1.c2)))OR(vt1.c2)))<=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))&(((((((((vt1.c2)OR(vt1.c2)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.lid)OR(vt1.c2)))OR(vt1.c2)))<=(vt1.c1)) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))&(((((((((vt1.c2)OR(vt1.c2)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((vt1.lid)OR(vt1.c2)))OR(vt1.c2)))<=(vt1.c1)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ()))&(((((((((vt1.c2)OR(vt1.c2)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.lid)OR(vt1.c2)))OR(vt1.c2)))<=(vt1.c1)) DESC);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))&(((((((((vt1.c2)OR(vt1.c2)))OR(NULL)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((vt1.lid)OR(vt1.c2)))OR(vt1.c2)))<=(vt1.c1)) DESC;
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c2))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, ((((x'')<<(vt0.c0)))LIKE(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, ((((x'')<<(vt0.c0)))LIKE(vt0.c1)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c2))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, ((((x'')<<(vt0.c0)))LIKE(vt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c2))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, ((((x'')<<(vt0.c0)))LIKE(vt0.c1)) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)IS(vt0.c2))) ORDER BY (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, ((((x'')<<(vt0.c0)))LIKE(vt0.c1)) DESC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN (+ (vt0.c2)) WHEN CASE WHEN vt1.c1 THEN x'b94d' ELSE vt0.c2 END THEN (0.586660011451102 IN ()) WHEN (~ (vt0.c2)) THEN ((vt1.lid) NOTNULL) END WHERE ((((~ (vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c2 END)/(CAST(vt1.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN (+ (vt0.c2)) WHEN CASE WHEN vt1.c1 THEN x'b94d' ELSE vt0.c2 END THEN (0.586660011451102 IN ()) WHEN (~ (vt0.c2)) THEN ((vt1.lid) NOTNULL) END ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c2 END)/(CAST(vt1.c2 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN (+ (vt0.c2)) WHEN CASE WHEN vt1.c1 THEN x'b94d' ELSE vt0.c2 END THEN (0.586660011451102 IN ()) WHEN (~ (vt0.c2)) THEN ((vt1.lid) NOTNULL) END WHERE ((((~ (vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c2 END)/(CAST(vt1.c2 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c2))) IS TRUE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN (+ (vt0.c2)) WHEN CASE WHEN vt1.c1 THEN x'b94d' ELSE vt0.c2 END THEN (0.586660011451102 IN ()) WHEN (~ (vt0.c2)) THEN ((vt1.lid) NOTNULL) END ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c2 END)/(CAST(vt1.c2 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN vt1.c1 THEN (+ (vt0.c2)) WHEN CASE WHEN vt1.c1 THEN x'b94d' ELSE vt0.c2 END THEN (0.586660011451102 IN ()) WHEN (~ (vt0.c2)) THEN ((vt1.lid) NOTNULL) END WHERE ((((~ (vt1.c2))) IS TRUE)) ORDER BY ((CASE WHEN vt1.c1 THEN vt1.c2 END)/(CAST(vt1.c2 AS REAL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1 COLLATE BINARY);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (TOTAL_CHANGES())));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (((((((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)))OR(0.137061034212833)))AND((vt1.lid IN ())))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt1.c2 ELSE '-1447426358' END  WHEN ((vt0.c2) IS TRUE) THEN TRIM('-1270967801', vt0.c2) WHEN (vt0.c0 IN (vt1.c2)) THEN CASE vt1.c0  WHEN vt1.lid THEN x'' END WHEN CAST(vt1.c2 AS TEXT) THEN ((((((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c1)))OR(vt0.c1)) ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)))OR(0.137061034212833)))AND((vt1.lid IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) ORDER BY CASE CASE WHEN vt0.c0 THEN vt1.c2 ELSE '-1447426358' END  WHEN ((vt0.c2) IS TRUE) THEN TRIM('-1270967801', vt0.c2) WHEN (vt0.c0 IN (vt1.c2)) THEN CASE vt1.c0  WHEN vt1.lid THEN x'' END WHEN CAST(vt1.c2 AS TEXT) THEN ((((((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c1)))OR(vt0.c1)) ELSE vt1.c0 END ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (((((((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)))OR(0.137061034212833)))AND((vt1.lid IN ())))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt1.c2 ELSE '-1447426358' END  WHEN ((vt0.c2) IS TRUE) THEN TRIM('-1270967801', vt0.c2) WHEN (vt0.c0 IN (vt1.c2)) THEN CASE vt1.c0  WHEN vt1.lid THEN x'' END WHEN CAST(vt1.c2 AS TEXT) THEN ((((((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c1)))OR(vt0.c1)) ELSE vt1.c0 END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)))OR(0.137061034212833)))AND((vt1.lid IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) ORDER BY CASE CASE WHEN vt0.c0 THEN vt1.c2 ELSE '-1447426358' END  WHEN ((vt0.c2) IS TRUE) THEN TRIM('-1270967801', vt0.c2) WHEN (vt0.c0 IN (vt1.c2)) THEN CASE vt1.c0  WHEN vt1.lid THEN x'' END WHEN CAST(vt1.c2 AS TEXT) THEN ((((((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c1)))OR(vt0.c1)) ELSE vt1.c0 END ASC);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CAST((vt0.c0 IN ()) AS INTEGER) WHERE (((((((((vt1.lid)AND(vt0.c0)))OR(vt1.c0)))OR(0.137061034212833)))AND((vt1.lid IN ())))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt1.c2 ELSE '-1447426358' END  WHEN ((vt0.c2) IS TRUE) THEN TRIM('-1270967801', vt0.c2) WHEN (vt0.c0 IN (vt1.c2)) THEN CASE vt1.c0  WHEN vt1.lid THEN x'' END WHEN CAST(vt1.c2 AS TEXT) THEN ((((((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)))OR(vt1.c1)))OR(vt0.c1)) ELSE vt1.c0 END ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0X327720ce) ORDER BY '܌Q';
SELECT SUM(count) FROM (SELECT ((0x327720ce) IS TRUE)  as count FROM vt1, vt0 ORDER BY '܌Q');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0X327720ce) ORDER BY '܌Q';
SELECT SUM(count) FROM (SELECT ((0x327720ce) IS TRUE)  as count FROM vt1, vt0 ORDER BY '܌Q');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (0X327720ce) ORDER BY '܌Q';
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE)) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c2)>(vt0.c1)) AS NUMERIC)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c2)>(vt0.c1)) AS NUMERIC)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c2)>(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END IN ()) ASC);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(((vt1.c2)>(vt0.c1)) AS NUMERIC)) ORDER BY (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END IN ()) ASC;
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.lid)GLOB(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)GLOB(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.lid)GLOB(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.lid)GLOB(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- (((vt1.lid)GLOB(vt1.lid)))));
SELECT ALL * FROM vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY x'');
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL)) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, (NOT (vt0.c2)), NULL)) ORDER BY (((~ (NULL)))>=((vt0.c0 IN ()))) ASC, ((CAST(vt1.c1 AS REAL))LIKE(((vt0.c1)<=(vt1.c2)))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN vt1.c1 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt1.c2 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, (NOT (vt0.c2)), NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (NULL)))>=((vt0.c0 IN ()))) ASC, ((CAST(vt1.c1 AS REAL))LIKE(((vt0.c1)<=(vt1.c2)))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN vt1.c1 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, (NOT (vt0.c2)), NULL)) ORDER BY (((~ (NULL)))>=((vt0.c0 IN ()))) ASC, ((CAST(vt1.c1 AS REAL))LIKE(((vt0.c1)<=(vt1.c2)))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN vt1.c1 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT vt1.c2 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, (NOT (vt0.c2)), NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((~ (NULL)))>=((vt0.c0 IN ()))) ASC, ((CAST(vt1.c1 AS REAL))LIKE(((vt0.c1)<=(vt1.c2)))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN vt1.c1 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (COALESCE(DISTINCT vt1.c2 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt1.c0 ELSE NULL END, (NOT (vt0.c2)), NULL)) ORDER BY (((~ (NULL)))>=((vt0.c0 IN ()))) ASC, ((CAST(vt1.c1 AS REAL))LIKE(((vt0.c1)<=(vt1.c2)))) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CASE WHEN vt1.c0 THEN vt1.c1 END))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1) THEN (~ (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1) THEN (~ (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1) THEN (~ (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN highlight(vt0.c1, vt0.c0, vt0.c1, vt0.c1) THEN (~ (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c2)IS(vt1.c1))  WHEN ((vt1.c2)GLOB(vt0.c2)) THEN ((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c2)) WHEN ((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN NULL WHEN CASE vt1.c2  WHEN vt0.c1 THEN x'' END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN x'9e6a' END ELSE (vt1.lid IN ()) END WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)), ((((vt1.lid)OR(vt0.c2)))AND(vt0.c2)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0))))<>((((vt1.lid)*(vt0.c0)), json_type(vt0.c1), 0.5497910273695723))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)), ((((vt1.lid)OR(vt0.c2)))AND(vt0.c2)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0))))!=((((vt1.lid)*(vt0.c0)), json_type(vt0.c1), 0.5497910273695723)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c2)IS(vt1.c1))  WHEN ((vt1.c2)GLOB(vt0.c2)) THEN ((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c2)) WHEN ((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN NULL WHEN CASE vt1.c2  WHEN vt0.c1 THEN x'' END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN x'9e6a' END ELSE (vt1.lid IN ()) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c2)IS(vt1.c1))  WHEN ((vt1.c2)GLOB(vt0.c2)) THEN ((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c2)) WHEN ((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN NULL WHEN CASE vt1.c2  WHEN vt0.c1 THEN x'' END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN x'9e6a' END ELSE (vt1.lid IN ()) END WHERE ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)), ((((vt1.lid)OR(vt0.c2)))AND(vt0.c2)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0))))<>((((vt1.lid)*(vt0.c0)), json_type(vt0.c1), 0.5497910273695723))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c2)), ((((vt1.lid)OR(vt0.c2)))AND(vt0.c2)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0))))!=((((vt1.lid)*(vt0.c0)), json_type(vt0.c1), 0.5497910273695723)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CASE ((vt0.c2)IS(vt1.c1))  WHEN ((vt1.c2)GLOB(vt0.c2)) THEN ((vt1.c1) BETWEEN (vt0.c1) AND (vt1.c2)) WHEN ((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c1)) THEN NULL WHEN CASE vt1.c2  WHEN vt0.c1 THEN x'' END THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN x'9e6a' END ELSE (vt1.lid IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c1)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN '' END))) ORDER BY UNLIKELY(vt0.c0) ASC, (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((((vt0.c1) BETWEEN (vt0.c2) AND (x''))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c1)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN '' END))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0) ASC, (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((((vt0.c1) BETWEEN (vt0.c2) AND (x''))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c1)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN '' END))) ORDER BY UNLIKELY(vt0.c0) ASC, (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((((vt0.c1) BETWEEN (vt0.c2) AND (x''))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)GLOB(vt0.c1)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN '' END))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(vt0.c0) ASC, (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((((vt0.c1) BETWEEN (vt0.c2) AND (x''))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c1)))GLOB(CASE vt0.c0  WHEN vt0.c0 THEN '' END))) ORDER BY UNLIKELY(vt0.c0) ASC, (((vt0.c2)IS NOT(vt0.c2)) IN ()), ((((vt0.c1) BETWEEN (vt0.c2) AND (x''))) NOT NULL) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2 COLLATE BINARY)AND(vt0.c2)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 COLLATE BINARY)AND(vt0.c2)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2 COLLATE BINARY)AND(vt0.c2)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 COLLATE BINARY)AND(vt0.c2)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c2 COLLATE BINARY)AND(vt0.c2)))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))));
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c1, vt0.c0, vt1.c1))>((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY CASE ((x'43b1')/(vt1.c2))  WHEN 0.7796860141863408 THEN ((((vt1.c2)AND(vt0.c2)))OR('㝨wFsS')) ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c1, vt0.c0, vt1.c1))>((vt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((x'43b1')/(vt1.c2))  WHEN 0.7796860141863408 THEN ((((vt1.c2)AND(vt0.c2)))OR('㝨wFsS')) ELSE x'' END ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c1, vt0.c0, vt1.c1))>((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY CASE ((x'43b1')/(vt1.c2))  WHEN 0.7796860141863408 THEN ((((vt1.c2)AND(vt0.c2)))OR('㝨wFsS')) ELSE x'' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c1))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c1, vt0.c0, vt1.c1))>((vt0.c2, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((x'43b1')/(vt1.c2))  WHEN 0.7796860141863408 THEN ((((vt1.c2)AND(vt0.c2)))OR('㝨wFsS')) ELSE x'' END ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((~ (vt1.c1))) BETWEEN (((vt0.c2) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c1, vt0.c0, vt1.c1))>((vt0.c2, vt0.c0, vt0.c0)))))) ORDER BY CASE ((x'43b1')/(vt1.c2))  WHEN 0.7796860141863408 THEN ((((vt1.c2)AND(vt0.c2)))OR('㝨wFsS')) ELSE x'' END ASC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.lid);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(HEX(vt1.lid) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt1.lid) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(HEX(vt1.lid) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(vt1.lid) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(HEX(vt1.lid) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE vt1.c1  WHEN vt0.c0 THEN vt1.lid END ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((((COALESCE(vt1.c1, NULL))AND(((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE vt1.c1  WHEN vt0.c0 THEN vt1.lid END ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((COALESCE(vt1.c1, NULL))AND(((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)))))AND((vt1.c0 IN ()))));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (~ (vt0.c0)) THEN CASE vt1.c1  WHEN vt0.c0 THEN vt1.lid END ELSE vt1.c0 COLLATE RTRIM END) ORDER BY ((((COALESCE(vt1.c1, NULL))AND(((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)))))AND((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN CASE vt1.c1  WHEN vt0.c0 THEN vt1.lid END ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((COALESCE(vt1.c1, NULL))AND(((((vt0.c0)OR(vt1.c2)))AND(vt1.c0)))))AND((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN ((- (vt0.c2))) AND ((vt0.c1 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN ((- (vt0.c2))) AND ((vt0.c1 IN (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN ((- (vt0.c2))) AND ((vt0.c1 IN (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN ((- (vt0.c2))) AND ((vt0.c1 IN (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0)))) NOT BETWEEN ((- (vt0.c2))) AND ((vt0.c1 IN (vt1.c2)))));
SELECT * FROM vt0, vt1 WHERE (((((((NULL)<<(vt0.c1)))OR('-114804234')))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<<(vt0.c1)))OR('-114804234')))OR(x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((NULL)<<(vt0.c1)))OR('-114804234')))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<<(vt0.c1)))OR('-114804234')))OR(x''))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((((NULL)<<(vt0.c1)))OR('-114804234')))OR(x'')));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)))OR((- (vt0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS BLOB))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)))OR((- (vt0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)))OR((- (vt0.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS BLOB))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)))OR((- (vt0.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt1.c0 AS BLOB))OR(x'')))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)))OR((- (vt0.c0)))))OR(NULL)));
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c1 IN (vt1.lid COLLATE RTRIM, (x'8fee' IN (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))) AND (((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN (vt1.lid COLLATE RTRIM, (x'8fee' IN (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c1 IN (vt1.lid COLLATE RTRIM, (x'8fee' IN (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.lid)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))) AND (((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN (vt1.lid COLLATE RTRIM, (x'8fee' IN (vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.lid)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c2)))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c1 IN (vt1.lid COLLATE RTRIM, (x'8fee' IN (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c2 WHEN vt0.c2 COLLATE BINARY THEN x'' WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN LIKELIHOOD(vt0.c0, 0.7686941986728131) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c2 WHEN vt0.c2 COLLATE BINARY THEN x'' WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN LIKELIHOOD(vt0.c0, 0.7686941986728131) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c2 WHEN vt0.c2 COLLATE BINARY THEN x'' WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN LIKELIHOOD(vt0.c0, 0.7686941986728131) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c2 WHEN vt0.c2 COLLATE BINARY THEN x'' WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN LIKELIHOOD(vt0.c0, 0.7686941986728131) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN (((vt0.c0, vt0.c1, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c2 WHEN vt0.c2 COLLATE BINARY THEN x'' WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN LIKELIHOOD(vt0.c0, 0.7686941986728131) END  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CAST(((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)) AS NUMERIC));
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(vt0.c0, (((vt0.c2))>=((vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c0, (((vt0.c2))>=((vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(vt0.c0, (((vt0.c2))>=((vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c0, (((vt0.c2))>=((vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY) ORDER BY NULLIF(vt0.c0, (((vt0.c2))>=((vt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY vt1.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY vt1.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((vt1.c1 COLLATE RTRIM)))) ORDER BY vt1.lid  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (vt1.lid) AND ('-174216568')))=(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c0 END)) WHERE (LAST_INSERT_ROWID()) ORDER BY ((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (vt1.lid) AND ('-174216568')))=(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c0 END)) ORDER BY ((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (vt1.lid) AND ('-174216568')))=(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c0 END)) WHERE (LAST_INSERT_ROWID()) ORDER BY ((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (vt1.lid) AND ('-174216568')))=(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c0 END)) ORDER BY ((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((((vt1.c2) BETWEEN (vt1.lid) AND ('-174216568')))=(CASE vt1.c2  WHEN vt0.c2 THEN vt0.c0 END)) WHERE (LAST_INSERT_ROWID()) ORDER BY ((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) IN ());
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN NULL WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt1.c0)=(vt1.lid)) WHEN ((NULL)<(vt1.lid)) THEN (((vt1.lid))<=((0.1966274661025199))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN NULL WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt1.c0)==(vt1.lid)) WHEN ((NULL)<(vt1.lid)) THEN (((vt1.lid))<=((0.1966274661025199))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN NULL WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt1.c0)=(vt1.lid)) WHEN ((NULL)<(vt1.lid)) THEN (((vt1.lid))<=((0.1966274661025199))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c1 THEN NULL WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt1.c0)==(vt1.lid)) WHEN ((NULL)<(vt1.lid)) THEN (((vt1.lid))<=((0.1966274661025199))) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c1 THEN NULL WHEN ((vt1.c1)/(vt1.c2)) THEN ((vt1.c0)=(vt1.lid)) WHEN ((NULL)<(vt1.lid)) THEN (((vt1.lid))<=((0.1966274661025199))) END);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1) ISNULL) IN (((vt0.c0)AND(vt1.c1)), vt1.c0))) ORDER BY CASE WHEN (- (1470515495)) THEN (('-1611392757') ISNULL) ELSE (((vt0.c1, vt0.c0, vt1.c1, vt1.c1, vt1.c1))==((vt0.c1, vt1.c2, x'627456a7', vt1.c1, NULL))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN (((vt0.c0)AND(vt1.c1)), vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (- (1470515495)) THEN (('-1611392757') ISNULL) ELSE (((vt0.c1, vt0.c0, vt1.c1, vt1.c1, vt1.c1))==((vt0.c1, vt1.c2, x'627456a7', vt1.c1, NULL))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1) ISNULL) IN (((vt0.c0)AND(vt1.c1)), vt1.c0))) ORDER BY CASE WHEN (- (1470515495)) THEN (('-1611392757') ISNULL) ELSE (((vt0.c1, vt0.c0, vt1.c1, vt1.c1, vt1.c1))==((vt0.c1, vt1.c2, x'627456a7', vt1.c1, NULL))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) ISNULL) IN (((vt0.c0)AND(vt1.c1)), vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (- (1470515495)) THEN (('-1611392757') ISNULL) ELSE (((vt0.c1, vt0.c0, vt1.c1, vt1.c1, vt1.c1))==((vt0.c1, vt1.c2, x'627456a7', vt1.c1, NULL))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1) ISNULL) IN (((vt0.c0)AND(vt1.c1)), vt1.c0))) ORDER BY CASE WHEN (- (1470515495)) THEN (('-1611392757') ISNULL) ELSE (((vt0.c1, vt0.c0, vt1.c1, vt1.c1, vt1.c1))==((vt0.c1, vt1.c2, x'627456a7', vt1.c1, NULL))) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY (- (1.470515495E9));
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (- (1.470515495E9)));
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY (- (1.470515495E9));
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY (- (1.470515495E9)));
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY (- (1.470515495E9));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((vt0.c2)&(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((vt0.c2)&(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((vt0.c2)&(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((vt0.c2)&(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN (((vt0.c2)&(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((~ (vt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((LIKELIHOOD(vt1.c2, 0.5801987821017575) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt1.c2, 0.5801987821017575) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((LIKELIHOOD(vt1.c2, 0.5801987821017575) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(vt1.c2, 0.5801987821017575) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((LIKELIHOOD(vt1.c2, 0.5801987821017575) IN ()));
SELECT * FROM vt1 WHERE (CASE CAST(vt1.lid AS NUMERIC)  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) THEN ((vt1.c1)*(vt1.lid)) ELSE ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c2)) END) ORDER BY ((((vt1.c1 IN (vt1.c1))))!=((vt1.lid))), (- (CASE WHEN vt1.lid THEN x'' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.lid END)) ASC, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(((x'c8b0')>=(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.lid AS NUMERIC)  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) THEN ((vt1.c1)*(vt1.lid)) ELSE ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1 IN (vt1.c1))))<>((vt1.lid))), (- (CASE WHEN vt1.lid THEN x'' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.lid END)) ASC, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(((x'c8b0')>=(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (CASE CAST(vt1.lid AS NUMERIC)  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) THEN ((vt1.c1)*(vt1.lid)) ELSE ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c2)) END) ORDER BY ((((vt1.c1 IN (vt1.c1))))!=((vt1.lid))), (- (CASE WHEN vt1.lid THEN x'' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.lid END)) ASC, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(((x'c8b0')>=(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.lid AS NUMERIC)  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) THEN ((vt1.c1)*(vt1.lid)) ELSE ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c2)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1 IN (vt1.c1))))<>((vt1.lid))), (- (CASE WHEN vt1.lid THEN x'' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.lid END)) ASC, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(((x'c8b0')>=(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (CASE CAST(vt1.lid AS NUMERIC)  WHEN ((vt1.c1) NOT BETWEEN (vt1.lid) AND (vt1.lid)) THEN ((vt1.c1)*(vt1.lid)) ELSE ((vt1.lid) BETWEEN (vt1.c0) AND (vt1.c2)) END) ORDER BY ((((vt1.c1 IN (vt1.c1))))!=((vt1.lid))), (- (CASE WHEN vt1.lid THEN x'' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c2 THEN vt1.lid END)) ASC, ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR((~ (vt1.c0)))))AND(((x'c8b0')>=(vt1.c1)))) ASC;
SELECT * FROM vt1 WHERE (((vt1.lid)-(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)-(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)-(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)-(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.lid)-(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))) IN (((vt0.c2)-(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))) IN (((vt0.c2)-(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))) IN (((vt0.c2)-(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))) IN (((vt0.c2)-(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c2))) IN (((vt0.c2)-(vt1.c2)))));
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))-((NOT (vt1.lid))))) ORDER BY ((0.028475919320894882) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))-((NOT (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((0.028475919320894882) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))-((NOT (vt1.lid))))) ORDER BY ((0.028475919320894882) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))-((NOT (vt1.lid))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((0.028475919320894882) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))-((NOT (vt1.lid))))) ORDER BY ((0.028475919320894882) IS FALSE)  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_type(vt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_type(vt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((json_type(vt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c0))>=((vt0.c0))))OR(((vt0.c1) NOT BETWEEN (0.09690881018357056) AND (vt1.c2)))))AND(vt1.lid)) WHERE (((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)/(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)/(vt1.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((((vt1.c0))>=((vt0.c0))))OR(((vt0.c1) NOT BETWEEN (0.09690881018357056) AND (vt1.c2)))))AND(vt1.lid)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c0))>=((vt0.c0))))OR(((vt0.c1) NOT BETWEEN (0.09690881018357056) AND (vt1.c2)))))AND(vt1.lid)) WHERE (((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)/(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)/(vt1.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((((vt1.c0))>=((vt0.c0))))OR(((vt0.c1) NOT BETWEEN (0.09690881018357056) AND (vt1.c2)))))AND(vt1.lid)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c0))>=((vt0.c0))))OR(((vt0.c1) NOT BETWEEN (0.09690881018357056) AND (vt1.c2)))))AND(vt1.lid)) WHERE (((((CAST(vt1.c0 AS INTEGER))AND(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)/(vt1.c2)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c2, vt1.c0)))<=((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c2, vt1.c0)))<=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c2, vt1.c0)))<=((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c2, vt1.c0)))<=((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c2, vt1.c0)))<=((vt1.c1 IN ()))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON RTRIM(((vt1.c0)>(vt1.c0))) WHERE (((CAST(vt0.c0 AS INTEGER))IS(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.lid END))) ORDER BY load_extension(NULL, (((vt0.c0, vt0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.lid END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON RTRIM(((vt1.c0)>(vt1.c0))) ORDER BY load_extension(NULL, (((vt0.c0, vt0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON RTRIM(((vt1.c0)>(vt1.c0))) WHERE (((CAST(vt0.c0 AS INTEGER))IS(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.lid END))) ORDER BY load_extension(NULL, (((vt0.c0, vt0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c2 WHEN vt0.c1 THEN vt1.lid END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON RTRIM(((vt1.c0)>(vt1.c0))) ORDER BY load_extension(NULL, (((vt0.c0, vt0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c2, vt0.c2, vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, '', vt1.c1)) BETWEEN ((vt1.lid, vt1.lid, vt1.c1)) AND ((vt1.lid, vt1.lid, vt1.lid))) IN ())) ORDER BY CAST(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.lid, '', vt1.c1)) BETWEEN ((vt1.lid, vt1.lid, vt1.c1)) AND ((vt1.lid, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT));
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, '', vt1.c1)) BETWEEN ((vt1.lid, vt1.lid, vt1.c1)) AND ((vt1.lid, vt1.lid, vt1.lid))) IN ())) ORDER BY CAST(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((vt1.lid, '', vt1.c1)) BETWEEN ((vt1.lid, vt1.lid, vt1.c1)) AND ((vt1.lid, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT));
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, '', vt1.c1)) BETWEEN ((vt1.lid, vt1.lid, vt1.c1)) AND ((vt1.lid, vt1.lid, vt1.lid))) IN ())) ORDER BY CAST(((vt1.c2) BETWEEN (vt1.c0) AND (vt1.c2)) AS TEXT);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE ((x'' IN ())) ORDER BY (((vt1.c1) IS TRUE) IN (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ORDER BY (((vt1.c1) IS TRUE) IN (CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE ((x'' IN ())) ORDER BY (((vt1.c1) IS TRUE) IN (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ORDER BY (((vt1.c1) IS TRUE) IN (CAST(vt0.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE ((x'' IN ())) ORDER BY (((vt1.c1) IS TRUE) IN (CAST(vt0.c1 AS NUMERIC))) DESC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c1)))&(CASE WHEN vt1.lid THEN vt1.c1 END)) WHERE ((((vt1.lid IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN ())) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c1)))&(CASE WHEN vt1.lid THEN vt1.c1 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c1)))&(CASE WHEN vt1.lid THEN vt1.c1 END)) WHERE ((((vt1.lid IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid IN ())) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c1)))&(CASE WHEN vt1.lid THEN vt1.c1 END)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt1.c1)))&(CASE WHEN vt1.lid THEN vt1.c1 END)) WHERE ((((vt1.lid IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.lid)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.lid)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.lid)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.lid)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN vt1.c2 COLLATE BINARY THEN (NOT (vt1.c0)) END) ORDER BY ((IFNULL(DISTINCT vt0.c0, vt1.lid)) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 END COLLATE RTRIM) ORDER BY TRIM(DISTINCT ((vt1.c1)AND(vt1.c0)))  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c1)AND(vt1.c0)))  NULLS LAST, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 END COLLATE RTRIM) ORDER BY TRIM(DISTINCT ((vt1.c1)AND(vt1.c0)))  NULLS LAST, vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((vt1.c1)AND(vt1.c0)))  NULLS LAST, vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE vt1.c2  WHEN vt1.c1 THEN vt1.c0 END COLLATE RTRIM) ORDER BY TRIM(DISTINCT ((vt1.c1)AND(vt1.c0)))  NULLS LAST, vt1.c1 ASC;
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN (vt1.lid, ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY ((((((((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))AND(vt1.lid)))AND(vt1.c1)))AND((vt1.lid IN (vt1.c1, vt1.lid)))))OR(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)))OR(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))) DESC, ((vt1.c1 COLLATE RTRIM) BETWEEN (((0.3174847071101151)LIKE(vt1.c2))) AND (vt1.c2 COLLATE RTRIM))  NULLS LAST, (('1911876457') BETWEEN (CAST(vt1.c2 AS REAL)) AND ((vt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (vt1.lid, ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))AND(vt1.lid)))AND(vt1.c1)))AND((vt1.lid IN (vt1.c1, vt1.lid)))))OR(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)))OR(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))) DESC, ((vt1.c1 COLLATE RTRIM) BETWEEN (((0.3174847071101151)LIKE(vt1.c2))) AND (vt1.c2 COLLATE RTRIM))  NULLS LAST, (('1911876457') BETWEEN (CAST(vt1.c2 AS REAL)) AND ((vt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN (vt1.lid, ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY ((((((((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))AND(vt1.lid)))AND(vt1.c1)))AND((vt1.lid IN (vt1.c1, vt1.lid)))))OR(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)))OR(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))) DESC, ((vt1.c1 COLLATE RTRIM) BETWEEN (((0.3174847071101151)LIKE(vt1.c2))) AND (vt1.c2 COLLATE RTRIM))  NULLS LAST, (('1911876457') BETWEEN (CAST(vt1.c2 AS REAL)) AND ((vt1.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (vt1.lid, ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))AND(vt1.lid)))AND(vt1.c1)))AND((vt1.lid IN (vt1.c1, vt1.lid)))))OR(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)))OR(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))) DESC, ((vt1.c1 COLLATE RTRIM) BETWEEN (((0.3174847071101151)LIKE(vt1.c2))) AND (vt1.c2 COLLATE RTRIM))  NULLS LAST, (('1911876457') BETWEEN (CAST(vt1.c2 AS REAL)) AND ((vt1.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c1 IN (vt1.lid, ((vt1.lid) NOT BETWEEN (vt1.lid) AND (vt1.c2))))) ORDER BY ((((((((((((((((vt1.lid)AND(vt1.lid)))OR(vt1.c1)))AND(vt1.lid)))AND(vt1.c1)))AND((vt1.lid IN (vt1.c1, vt1.lid)))))OR(vt1.c1)))OR(CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c2 END)))OR(((((((((vt1.c1)OR(vt1.c0)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.c1)))) DESC, ((vt1.c1 COLLATE RTRIM) BETWEEN (((0.3174847071101151)LIKE(vt1.c2))) AND (vt1.c2 COLLATE RTRIM))  NULLS LAST, (('1911876457') BETWEEN (CAST(vt1.c2 AS REAL)) AND ((vt1.c2 IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ('-1270967801' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ('-1270967801' IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ('-1270967801' IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY ('-1270967801' IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt1.lid ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ('-1270967801' IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NOT (vt0.c2)) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((vt1.c0)<(vt0.c1)))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) ASC, (((((vt0.c1))>=((vt1.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((vt1.c0)<(vt0.c1)))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) ASC, (((((vt0.c1))>=((vt1.c2)))) ISNULL));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((vt1.c0)<(vt0.c1)))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) ASC, (((((vt0.c1))>=((vt1.c2)))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((vt1.c0)<(vt0.c1)))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) ASC, (((((vt0.c1))>=((vt1.c2)))) ISNULL));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((vt1.c0)<(vt0.c1)))))AND(((((vt1.lid)AND(vt1.c0)))AND(vt0.c0)))) ASC, (((((vt0.c1))>=((vt1.c2)))) ISNULL);
SELECT * FROM vt0, vt1 WHERE ((- (((((((((vt0.c0)AND('1154200928')))AND(vt0.c2)))AND(vt0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c0)AND('1154200928')))AND(vt0.c2)))AND(vt0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((- (((((((((vt0.c0)AND('1154200928')))AND(vt0.c2)))AND(vt0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((vt0.c0)AND('1154200928')))AND(vt0.c2)))AND(vt0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((- (((((((((vt0.c0)AND('1154200928')))AND(vt0.c2)))AND(vt0.c0)))OR(vt1.c1)))));
SELECT * FROM vt1 WHERE (((NULLIF(vt1.c1, vt1.c2))&(vt1.c2 COLLATE BINARY))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c2))&(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT * FROM vt1 WHERE (((NULLIF(vt1.c1, vt1.c2))&(vt1.c2 COLLATE BINARY))) ORDER BY vt1.lid;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c1, vt1.c2))&(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1 ORDER BY vt1.lid);
SELECT * FROM vt1 WHERE (((NULLIF(vt1.c1, vt1.c2))&(vt1.c2 COLLATE BINARY))) ORDER BY vt1.lid;
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt1.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.lid COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR('1577899985')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR('1577899985')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR('1577899985')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR('1577899985')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c1)OR('')))OR(vt0.c0)))OR('1577899985')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN (((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1)>>(vt1.lid)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN ((vt0.c2)<>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)>>(vt1.lid)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN ((vt0.c2)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1)>>(vt1.lid)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN ((vt0.c2)<>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1)>>(vt1.lid)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN ((vt0.c2)!=(vt0.c1)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1)>>(vt1.lid)) THEN ((((vt0.c1)OR(vt1.c0)))AND(vt0.c2)) WHEN ((vt1.c2) BETWEEN (vt0.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END WHEN CASE WHEN vt0.c1 THEN vt1.c1 END THEN ((vt0.c2)<>(vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((('')<=(vt0.c1))))) ORDER BY ((((LIKELIHOOD(vt0.c2, 0.12856041422963638))OR(GLOB(vt0.c1, vt0.c0))))OR(vt0.c0 COLLATE NOCASE)), (+ (((vt0.c0)/(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((('')<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((LIKELIHOOD(vt0.c2, 0.12856041422963638))OR(GLOB(vt0.c1, vt0.c0))))OR(vt0.c0 COLLATE NOCASE)), (+ (((vt0.c0)/(vt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((('')<=(vt0.c1))))) ORDER BY ((((LIKELIHOOD(vt0.c2, 0.12856041422963638))OR(GLOB(vt0.c1, vt0.c0))))OR(vt0.c0 COLLATE NOCASE)), (+ (((vt0.c0)/(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((('')<=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((LIKELIHOOD(vt0.c2, 0.12856041422963638))OR(GLOB(vt0.c1, vt0.c0))))OR(vt0.c0 COLLATE NOCASE)), (+ (((vt0.c0)/(vt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((('')<=(vt0.c1))))) ORDER BY ((((LIKELIHOOD(vt0.c2, 0.12856041422963638))OR(GLOB(vt0.c1, vt0.c0))))OR(vt0.c0 COLLATE NOCASE)), (+ (((vt0.c0)/(vt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(vt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c2)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(vt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c2)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(vt0.c2));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((CAST(vt1.c2 AS TEXT))) AND ((CASE vt1.c2  WHEN vt0.c0 THEN vt1.lid WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END)))) ORDER BY MAX(vt0.c1 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((CAST(vt1.c2 AS TEXT))) AND ((CASE vt1.c2  WHEN vt0.c0 THEN vt1.lid WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY MAX(vt0.c1 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((CAST(vt1.c2 AS TEXT))) AND ((CASE vt1.c2  WHEN vt0.c0 THEN vt1.lid WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END)))) ORDER BY MAX(vt0.c1 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((CAST(vt1.c2 AS TEXT))) AND ((CASE vt1.c2  WHEN vt0.c0 THEN vt1.lid WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY MAX(vt0.c1 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((CAST(vt1.c2 AS TEXT))) AND ((CASE vt1.c2  WHEN vt0.c0 THEN vt1.lid WHEN vt1.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c2 END)))) ORDER BY MAX(vt0.c1 COLLATE BINARY, ((vt1.c0)LIKE(vt1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ('0.8266417682298187') ORDER BY vt1.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.8266417682298187') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('0.8266417682298187') ORDER BY vt1.lid  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.8266417682298187') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.lid  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ('0.8266417682298187') ORDER BY vt1.lid  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('1412453718')AND('')))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1412453718')AND('')))OR(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('1412453718')AND('')))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((('1412453718')AND('')))OR(((vt1.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((('1412453718')AND('')))OR(((vt1.c0)LIKE(vt0.c1)))));
SELECT ALL * FROM vt1 WHERE ((((x'51f6' IN (vt1.c2)))GLOB(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((x'51f6' IN (vt1.c2)))GLOB(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((x'51f6' IN (vt1.c2)))GLOB(((vt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((x'51f6' IN (vt1.c2)))GLOB(((vt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((x'51f6' IN (vt1.c2)))GLOB(((vt1.c2) NOTNULL))));
SELECT * FROM vt1 WHERE (CASE vt1.c2 COLLATE BINARY  WHEN ((vt1.c2)*(vt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE '' END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2 COLLATE BINARY  WHEN ((vt1.c2)*(vt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE '' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c2 COLLATE BINARY  WHEN ((vt1.c2)*(vt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE '' END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c2 COLLATE BINARY  WHEN ((vt1.c2)*(vt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE '' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE vt1.c2 COLLATE BINARY  WHEN ((vt1.c2)*(vt1.c1)) THEN vt1.c0 COLLATE RTRIM ELSE '' END);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)), 0.7489624705413843)) ORDER BY vt1.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)), 0.7489624705413843)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)), 0.7489624705413843)) ORDER BY vt1.lid  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)), 0.7489624705413843)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.lid  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (LIKELIHOOD(((vt1.c2) NOT BETWEEN (vt0.c1) AND (vt1.c2)), 0.7489624705413843)) ORDER BY vt1.lid  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((1522938629)OR(vt1.lid)))AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((1522938629)OR(vt1.lid)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((1522938629)OR(vt1.lid)))AND(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((1522938629)OR(vt1.lid)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((1522938629)OR(vt1.lid)))AND(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LIKE(vt1.lid, vt1.lid) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(vt1.lid, vt1.lid) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LIKE(vt1.lid, vt1.lid) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKE(vt1.lid, vt1.lid) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((LIKE(vt1.lid, vt1.lid) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))OR(vt0.c2)))OR((vt0.c1 IN ())))) ORDER BY (((vt0.c2)IS NOT(vt0.c0)) IN (0.2506683483455646)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))OR(vt0.c2)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)IS NOT(vt0.c0)) IN (0.2506683483455646)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))OR(vt0.c2)))OR((vt0.c1 IN ())))) ORDER BY (((vt0.c2)IS NOT(vt0.c0)) IN (0.2506683483455646)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))OR(vt0.c2)))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2)IS NOT(vt0.c0)) IN (0.2506683483455646)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))OR(vt0.c2)))OR((vt0.c1 IN ())))) ORDER BY (((vt0.c2)IS NOT(vt0.c0)) IN (0.2506683483455646)) DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))||(HEX(vt0.c0))) WHERE (((((vt1.c0 COLLATE RTRIM)AND((((vt0.c1))=((vt1.c2))))))OR((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))) ORDER BY ((((PRINTF(1483684062))OR(CAST(vt1.c0 AS REAL))))AND((NOT (vt0.c1)))), vt1.c2  NULLS FIRST, CASE ((((vt1.c2)OR(vt1.lid)))OR(vt1.lid))  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0)<=(vt1.c0)) ELSE (- (vt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND((((vt0.c1))=((vt1.c2))))))OR((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))||(HEX(vt0.c0))) ORDER BY ((((PRINTF(1483684062))OR(CAST(vt1.c0 AS REAL))))AND((NOT (vt0.c1)))), vt1.c2  NULLS FIRST, CASE ((((vt1.c2)OR(vt1.lid)))OR(vt1.lid))  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0)<=(vt1.c0)) ELSE (- (vt1.c2)) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))||(HEX(vt0.c0))) WHERE (((((vt1.c0 COLLATE RTRIM)AND((((vt0.c1))=((vt1.c2))))))OR((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))) ORDER BY ((((PRINTF(1483684062))OR(CAST(vt1.c0 AS REAL))))AND((NOT (vt0.c1)))), vt1.c2  NULLS FIRST, CASE ((((vt1.c2)OR(vt1.lid)))OR(vt1.lid))  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0)<=(vt1.c0)) ELSE (- (vt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND((((vt0.c1))=((vt1.c2))))))OR((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))||(HEX(vt0.c0))) ORDER BY ((((PRINTF(1483684062))OR(CAST(vt1.c0 AS REAL))))AND((NOT (vt0.c1)))), vt1.c2  NULLS FIRST, CASE ((((vt1.c2)OR(vt1.lid)))OR(vt1.lid))  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0)<=(vt1.c0)) ELSE (- (vt1.c2)) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) IS FALSE))||(HEX(vt0.c0))) WHERE (((((vt1.c0 COLLATE RTRIM)AND((((vt0.c1))=((vt1.c2))))))OR((((vt1.lid)) NOT BETWEEN ((vt1.c0)) AND ((vt1.lid)))))) ORDER BY ((((PRINTF(1483684062))OR(CAST(vt1.c0 AS REAL))))AND((NOT (vt0.c1)))), vt1.c2  NULLS FIRST, CASE ((((vt1.c2)OR(vt1.lid)))OR(vt1.lid))  WHEN ((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)) THEN ((vt0.c0)<=(vt1.c0)) ELSE (- (vt1.c2)) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c2)))) IS TRUE)) ORDER BY (+ (vt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c2)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c2)))) IS TRUE)) ORDER BY (+ (vt0.c2));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c2)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c1)) AND ((NULL, vt0.c1, vt0.c2)))) IS TRUE)) ORDER BY (+ (vt0.c2));
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.lid) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.lid) ORDER BY (((vt1.c0)) BETWEEN ((CAST(vt0.c1 AS TEXT))) AND ((CAST(vt1.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c2)AND(0.8404625601839063)))OR(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)AND(0.8404625601839063)))OR(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c2)AND(0.8404625601839063)))OR(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)AND(0.8404625601839063)))OR(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c2)AND(0.8404625601839063)))OR(vt1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF(CASE WHEN vt1.c1 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.lid THEN NULL WHEN vt1.lid THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END));
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))<((x'')))) ORDER BY ((NULLIF(DISTINCT '-1324875538', vt0.c1)) BETWEEN (0.46706918324552626) AND (((vt0.c2)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))<((x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(DISTINCT '-1324875538', vt0.c1)) BETWEEN (0.46706918324552626) AND (((vt0.c2)>>(vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))<((x'')))) ORDER BY ((NULLIF(DISTINCT '-1324875538', vt0.c1)) BETWEEN (0.46706918324552626) AND (((vt0.c2)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))<((x'')))) IS TRUE)  as count FROM vt0 ORDER BY ((NULLIF(DISTINCT '-1324875538', vt0.c1)) BETWEEN (0.46706918324552626) AND (((vt0.c2)>>(vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))<((x'')))) ORDER BY ((NULLIF(DISTINCT '-1324875538', vt0.c1)) BETWEEN (0.46706918324552626) AND (((vt0.c2)>>(vt0.c1))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.lid)<<(vt1.c2)) COLLATE RTRIM) ORDER BY (CASE WHEN vt0.c1 THEN vt1.lid END IN (vt1.c1)), ((vt1.c1 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)<<(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN vt0.c1 THEN vt1.lid END IN (vt1.c1)), ((vt1.c1 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.lid)<<(vt1.c2)) COLLATE RTRIM) ORDER BY (CASE WHEN vt0.c1 THEN vt1.lid END IN (vt1.c1)), ((vt1.c1 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.lid)<<(vt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (CASE WHEN vt0.c1 THEN vt1.lid END IN (vt1.c1)), ((vt1.c1 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, vt1 WHERE (((vt1.lid)<<(vt1.c2)) COLLATE RTRIM) ORDER BY (CASE WHEN vt0.c1 THEN vt1.lid END IN (vt1.c1)), ((vt1.c1 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c2 IN ()));
SELECT ALL * FROM vt0 WHERE (CASE '-1272210804'  WHEN LOWER(vt0.c1) THEN ((vt0.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_array(vt0.c0, vt0.c1, 0.1966274661025199, vt0.c2, '鶹2', vt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1272210804'  WHEN LOWER(vt0.c1) THEN ((vt0.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_array(vt0.c0, vt0.c1, 0.1966274661025199, vt0.c2, '鶹2', vt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE '-1272210804'  WHEN LOWER(vt0.c1) THEN ((vt0.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_array(vt0.c0, vt0.c1, 0.1966274661025199, vt0.c2, '鶹2', vt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE '-1272210804'  WHEN LOWER(vt0.c1) THEN ((vt0.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_array(vt0.c0, vt0.c1, 0.1966274661025199, vt0.c2, '鶹2', vt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE '-1272210804'  WHEN LOWER(vt0.c1) THEN ((vt0.c2) NOTNULL) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_array(vt0.c0, vt0.c1, 0.1966274661025199, vt0.c2, '鶹2', vt0.c2) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN (vt0.c1 IN (vt0.c0)) ELSE ((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt1.c1) NOT NULL)) WHERE (CASE vt0.c1  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt1.c1) NOT NULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt1.c1) NOT NULL)) WHERE (CASE vt0.c1  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt1.c1) NOT NULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(((vt1.c1) NOT NULL)) WHERE (CASE vt0.c1  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)IS(NULL)) COLLATE RTRIM) ORDER BY (((+ (vt0.c1)))>=(((((((((vt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c1)))>=(((((((((vt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)IS(NULL)) COLLATE RTRIM) ORDER BY (((+ (vt0.c1)))>=(((((((((vt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)IS(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((+ (vt0.c1)))>=(((((((((vt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1)IS(NULL)) COLLATE RTRIM) ORDER BY (((+ (vt0.c1)))>=(((((((((vt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (ABS(DISTINCT '*E')) ORDER BY (- (((vt0.c1)-(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT '*E')) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c1)-(vt1.c2)))));
SELECT * FROM vt1, vt0 WHERE (ABS(DISTINCT '*E')) ORDER BY (- (((vt0.c1)-(vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT '*E')) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (((vt0.c1)-(vt1.c2)))));
SELECT * FROM vt1, vt0 WHERE (ABS(DISTINCT '*E')) ORDER BY (- (((vt0.c1)-(vt1.c2))));
SELECT * FROM vt1 WHERE (x'4294');
SELECT SUM(count) FROM (SELECT ALL ((x'4294') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'4294');
SELECT SUM(count) FROM (SELECT ALL ((x'4294') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'4294');
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.lid)) BETWEEN ((vt1.c1 COLLATE BINARY, ((vt1.lid) IS FALSE), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (NULL)), ((((vt1.c1)AND(vt1.c1)))OR(0.7722113395492556)), ((vt1.c0)AND(vt1.c0)))))) ORDER BY 0.08838443929300377  NULLS LAST, (((- (vt1.c2)))IS NOT((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2, vt1.c2, vt1.lid)) BETWEEN ((vt1.c1 COLLATE BINARY, ((vt1.lid) IS FALSE), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (NULL)), ((((vt1.c1)AND(vt1.c1)))OR(0.7722113395492556)), ((vt1.c0)AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY 0.08838443929300377  NULLS LAST, (((- (vt1.c2)))IS NOT((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.lid)) BETWEEN ((vt1.c1 COLLATE BINARY, ((vt1.lid) IS FALSE), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (NULL)), ((((vt1.c1)AND(vt1.c1)))OR(0.7722113395492556)), ((vt1.c0)AND(vt1.c0)))))) ORDER BY 0.08838443929300377  NULLS LAST, (((- (vt1.c2)))IS NOT((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2, vt1.c2, vt1.lid)) BETWEEN ((vt1.c1 COLLATE BINARY, ((vt1.lid) IS FALSE), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (NULL)), ((((vt1.c1)AND(vt1.c1)))OR(0.7722113395492556)), ((vt1.c0)AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY 0.08838443929300377  NULLS LAST, (((- (vt1.c2)))IS NOT((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2, vt1.c2, vt1.lid)) BETWEEN ((vt1.c1 COLLATE BINARY, ((vt1.lid) IS FALSE), vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (NULL)), ((((vt1.c1)AND(vt1.c1)))OR(0.7722113395492556)), ((vt1.c0)AND(vt1.c0)))))) ORDER BY 0.08838443929300377  NULLS LAST, (((- (vt1.c2)))IS NOT((((vt1.c0)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, vt1.c2, vt1.c0))<((vt1.c2, vt1.lid, vt1.lid))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid, vt1.c2, vt1.c0))<((vt1.c2, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, vt1.c2, vt1.c0))<((vt1.c2, vt1.lid, vt1.lid))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid, vt1.c2, vt1.c0))<((vt1.c2, vt1.lid, vt1.lid))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.lid, vt1.c2, vt1.c0))<((vt1.c2, vt1.lid, vt1.lid))) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c2 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(vt1.c0, 0.9297119758221217) COLLATE NOCASE) ORDER BY vt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c0, 0.9297119758221217) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(vt1.c0, 0.9297119758221217) COLLATE NOCASE) ORDER BY vt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt1.c0, 0.9297119758221217) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(vt1.c0, 0.9297119758221217) COLLATE NOCASE) ORDER BY vt1.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.5163511855230565) BETWEEN (vt1.lid) AND (vt0.c0)))/(((vt0.c0)LIKE(vt1.c2))))) ORDER BY json_patch('-1914431151', (x'' IN (vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5163511855230565) BETWEEN (vt1.lid) AND (vt0.c0)))/(((vt0.c0)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_patch('-1914431151', (x'' IN (vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.5163511855230565) BETWEEN (vt1.lid) AND (vt0.c0)))/(((vt0.c0)LIKE(vt1.c2))))) ORDER BY json_patch('-1914431151', (x'' IN (vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5163511855230565) BETWEEN (vt1.lid) AND (vt0.c0)))/(((vt0.c0)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_patch('-1914431151', (x'' IN (vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((0.5163511855230565) BETWEEN (vt1.lid) AND (vt0.c0)))/(((vt0.c0)LIKE(vt1.c2))))) ORDER BY json_patch('-1914431151', (x'' IN (vt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2 IN (vt1.c2, vt1.c0))) IS FALSE) WHERE (((NULL) NOT BETWEEN (CAST(0.5233641158723864 AS NUMERIC)) AND ('0.6911131927141512' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(0.5233641158723864 AS NUMERIC)) AND ('0.6911131927141512' COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c2 IN (vt1.c2, vt1.c0))) IS FALSE));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2 IN (vt1.c2, vt1.c0))) IS FALSE) WHERE (((NULL) NOT BETWEEN (CAST(0.5233641158723864 AS NUMERIC)) AND ('0.6911131927141512' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(0.5233641158723864 AS NUMERIC)) AND ('0.6911131927141512' COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c2 IN (vt1.c2, vt1.c0))) IS FALSE));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2 IN (vt1.c2, vt1.c0))) IS FALSE) WHERE (((NULL) NOT BETWEEN (CAST(0.5233641158723864 AS NUMERIC)) AND ('0.6911131927141512' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE (- (vt1.lid))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) THEN (vt0.c2 IN (vt1.lid)) WHEN ((((vt1.lid)OR(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND ('܌Q')) END WHERE ((('fPJ-') NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c1)))AND(vt1.lid)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('fPJ-') NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE (- (vt1.lid))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) THEN (vt0.c2 IN (vt1.lid)) WHEN ((((vt1.lid)OR(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND ('܌Q')) END ORDER BY (((((vt0.c0)OR(vt1.c1)))AND(vt1.lid)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE (- (vt1.lid))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) THEN (vt0.c2 IN (vt1.lid)) WHEN ((((vt1.lid)OR(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND ('܌Q')) END WHERE ((('fPJ-') NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c1)))AND(vt1.lid)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('fPJ-') NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE (- (vt1.lid))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) THEN (vt0.c2 IN (vt1.lid)) WHEN ((((vt1.lid)OR(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND ('܌Q')) END ORDER BY (((((vt0.c0)OR(vt1.c1)))AND(vt1.lid)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE (- (vt1.lid))  WHEN ((vt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.lid WHEN ((vt1.c2) NOT BETWEEN (vt0.c0) AND (vt1.c2)) THEN (vt0.c2 IN (vt1.lid)) WHEN ((((vt1.lid)OR(vt0.c1)))AND(vt1.c0)) THEN ((vt0.c2) NOT BETWEEN (vt1.c1) AND ('܌Q')) END WHERE ((('fPJ-') NOT BETWEEN (vt1.lid COLLATE RTRIM) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (((((vt0.c0)OR(vt1.c1)))AND(vt1.lid)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ('');
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffe1e734d0)))) AND (vt0.c2 COLLATE RTRIM)) WHERE (NULL) ORDER BY ((((vt1.c1)<<(vt1.c0)))OR(((vt1.c2)GLOB(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffe1e734d0)))) AND (vt0.c2 COLLATE RTRIM)) ORDER BY ((((vt1.c1)<<(vt1.c0)))OR(((vt1.c2)GLOB(vt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffe1e734d0)))) AND (vt0.c2 COLLATE RTRIM)) WHERE (NULL) ORDER BY ((((vt1.c1)<<(vt1.c0)))OR(((vt1.c2)GLOB(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffe1e734d0)))) AND (vt0.c2 COLLATE RTRIM)) ORDER BY ((((vt1.c1)<<(vt1.c0)))OR(((vt1.c2)GLOB(vt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((CAST(vt1.c1 AS BLOB)) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((0xffffffffe1e734d0)))) AND (vt0.c2 COLLATE RTRIM)) WHERE (NULL) ORDER BY ((((vt1.c1)<<(vt1.c0)))OR(((vt1.c2)GLOB(vt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0, -508786627, vt1.c2))) THEN (+ (vt1.c2)) ELSE (- (0xffffffffd59d733d)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0, -508786627, vt1.c2))) THEN (+ (vt1.c2)) ELSE (- (0Xffffffffd59d733d)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0, -508786627, vt1.c2))) THEN (+ (vt1.c2)) ELSE (- (0xffffffffd59d733d)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0, -508786627, vt1.c2))) THEN (+ (vt1.c2)) ELSE (- (0Xffffffffd59d733d)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (((vt1.c2, vt1.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c2)) AND ((vt1.c0, -508786627, vt1.c2))) THEN (+ (vt1.c2)) ELSE (- (0xffffffffd59d733d)) END);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2)&(vt0.c2)) IN ((- (vt1.c1)))) WHERE (((((vt1.c0)>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c2)&(vt0.c2)) IN ((- (vt1.c1)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2)&(vt0.c2)) IN ((- (vt1.c1)))) WHERE (((((vt1.c0)>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((vt0.c2)&(vt0.c2)) IN ((- (vt1.c1)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((vt0.c2)&(vt0.c2)) IN ((- (vt1.c1)))) WHERE (((((vt1.c0)>(vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(CAST(vt1.lid AS REAL)));
SELECT SUM(count) FROM (SELECT ((QUOTE(CAST(vt1.lid AS REAL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(CAST(vt1.lid AS REAL)));
SELECT SUM(count) FROM (SELECT ((QUOTE(CAST(vt1.lid AS REAL))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (QUOTE(CAST(vt1.lid AS REAL)));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c2)) THEN ((vt0.c2)|(vt1.c1)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0)+(vt1.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c2)) THEN ((vt0.c2)|(vt1.c1)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((((vt1.c0)+(vt1.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c2)) THEN ((vt0.c2)|(vt1.c1)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0)+(vt1.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c2)) THEN ((vt0.c2)|(vt1.c1)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1 ORDER BY ((((vt1.c0)+(vt1.c1))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.lid) BETWEEN (vt1.c2) AND (vt0.c2)) THEN ((vt0.c2)|(vt1.c1)) ELSE (vt1.c0 IN ()) END) ORDER BY ((((vt1.c0)+(vt1.c1))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((UNICODE(x''))>=(-594259604)) WHERE (((CASE WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (0Xffffffff98102e4c) AND (CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (0Xffffffff98102e4c) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((UNICODE(x''))>=(-594259604)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((UNICODE(x''))>=(-594259604)) WHERE (((CASE WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (0Xffffffff98102e4c) AND (CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (0Xffffffff98102e4c) AND (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((UNICODE(x''))>=(-594259604)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((UNICODE(x''))>=(-594259604)) WHERE (((CASE WHEN vt0.c2 THEN vt1.c0 END) BETWEEN (0Xffffffff98102e4c) AND (CAST(x'' AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NOT (vt1.c2)))AND((NOT (vt1.c0)))))OR(((vt1.lid) NOT BETWEEN ('') AND (vt1.c1))))) ORDER BY CASE ((vt0.c2)IS(vt0.c2))  WHEN (((vt1.c1))>=((vt1.c0))) THEN (((vt1.lid))<=((vt1.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt1.c2)))AND((NOT (vt1.c0)))))OR(((vt1.lid) NOT BETWEEN ('') AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt0.c2)IS(vt0.c2))  WHEN (((vt1.c1))>=((vt1.c0))) THEN (((vt1.lid))<=((vt1.c1))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NOT (vt1.c2)))AND((NOT (vt1.c0)))))OR(((vt1.lid) NOT BETWEEN ('') AND (vt1.c1))))) ORDER BY CASE ((vt0.c2)IS(vt0.c2))  WHEN (((vt1.c1))>=((vt1.c0))) THEN (((vt1.lid))<=((vt1.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt1.c2)))AND((NOT (vt1.c0)))))OR(((vt1.lid) NOT BETWEEN ('') AND (vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((vt0.c2)IS(vt0.c2))  WHEN (((vt1.c1))>=((vt1.c0))) THEN (((vt1.lid))<=((vt1.c1))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((NOT (vt1.c2)))AND((NOT (vt1.c0)))))OR(((vt1.lid) NOT BETWEEN ('') AND (vt1.c1))))) ORDER BY CASE ((vt0.c2)IS(vt0.c2))  WHEN (((vt1.c1))>=((vt1.c0))) THEN (((vt1.lid))<=((vt1.c1))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt0.c1, vt1.lid))IS((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt1.lid))IS((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt0.c1, vt1.lid))IS((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c1, vt1.lid))IS((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((TRIM(DISTINCT vt0.c1, vt1.lid))IS((((vt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c2))))));
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c2)))AND((vt0.c2 IN (NULL)))))AND(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c2)))AND((vt0.c2 IN (NULL)))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c2)))AND((vt0.c2 IN (NULL)))))AND(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c2)))AND((vt0.c2 IN (NULL)))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c2)))AND((vt0.c2 IN (NULL)))))AND(CAST(vt0.c2 AS REAL))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2)<=((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2)<=((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2)<=((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2)<=((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c2)<=((NOT (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)|(1.212917091E9)), ((vt1.c1)>(vt0.c0)))) AND ((((x'')/(vt1.c1)), ((vt0.c0) IS FALSE), ((0Xffffffff8cf79489)+(vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)|(1.212917091E9)), ((vt1.c1)>(vt0.c0)))) AND ((((x'')/(vt1.c1)), ((vt0.c0) IS FALSE), ((0Xffffffff8cf79489)+(vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)|(1.212917091E9)), ((vt1.c1)>(vt0.c0)))) AND ((((x'')/(vt1.c1)), ((vt0.c0) IS FALSE), ((0Xffffffff8cf79489)+(vt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)|(1.212917091E9)), ((vt1.c1)>(vt0.c0)))) AND ((((x'')/(vt1.c1)), ((vt0.c0) IS FALSE), ((0Xffffffff8cf79489)+(vt1.c2)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c1, NULL)) BETWEEN ((vt0.c0 COLLATE BINARY, ((vt0.c1)|(1.212917091E9)), ((vt1.c1)>(vt0.c0)))) AND ((((x'')/(vt1.c1)), ((vt0.c0) IS FALSE), ((0Xffffffff8cf79489)+(vt1.c2))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('y<')>=(((((0x46316819)OR(vt0.c1)))AND(vt1.lid))))) ORDER BY (((((NULL IN (NULL)))OR(((vt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((('y<')>=(((((0x46316819)OR(vt0.c1)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NULL IN (NULL)))OR(((vt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('y<')>=(((((0x46316819)OR(vt0.c1)))AND(vt1.lid))))) ORDER BY (((((NULL IN (NULL)))OR(((vt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((('y<')>=(((((0x46316819)OR(vt0.c1)))AND(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((NULL IN (NULL)))OR(((vt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('y<')>=(((((0x46316819)OR(vt0.c1)))AND(vt1.lid))))) ORDER BY (((((NULL IN (NULL)))OR(((vt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS REAL)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2))>=((vt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2))>=((vt1.c2))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2))>=((vt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2))>=((vt1.c2))) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c2))>=((vt1.c2))) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.011031798406271442);
SELECT SUM(count) FROM (SELECT ALL ((0.011031798406271442) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.011031798406271442);
SELECT SUM(count) FROM (SELECT ALL ((0.011031798406271442) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.011031798406271442);
SELECT ALL * FROM vt1, vt0 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT * FROM vt1 WHERE (CASE WHEN CASE vt1.c2  WHEN vt1.lid THEN 0.49772294884755786 END THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c2  WHEN vt1.lid THEN 0.49772294884755786 END THEN '' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE vt1.c2  WHEN vt1.lid THEN 0.49772294884755786 END THEN '' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c2  WHEN vt1.lid THEN 0.49772294884755786 END THEN '' END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE vt1.c2  WHEN vt1.lid THEN 0.49772294884755786 END THEN '' END);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<=(vt0.c0)))&(((0.30039643564470153)<>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt0.c0)))&(((0.30039643564470153)<>(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<=(vt0.c0)))&(((0.30039643564470153)<>(vt1.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt0.c0)))&(((0.30039643564470153)<>(vt1.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1)<=(vt0.c0)))&(((0.30039643564470153)<>(vt1.lid)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2)/(vt0.c1)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))AND((-538048621 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)/(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND((-538048621 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2)/(vt0.c1)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))AND((-538048621 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)/(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))AND((-538048621 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2 COLLATE BINARY)*(CAST(vt1.c0 AS REAL)))) ORDER BY CASE x''  WHEN CAST(vt0.c1 AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))<=((vt0.c0))) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN (vt0.c1)) END ASC  NULLS LAST, ((((((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)))AND(vt1.lid)))OR(((vt0.c0)&(vt0.c0)))) DESC, TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY)*(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE x''  WHEN CAST(vt0.c1 AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))<=((vt0.c0))) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN (vt0.c1)) END ASC  NULLS LAST, ((((((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)))AND(vt1.lid)))OR(((vt0.c0)&(vt0.c0)))) DESC, TOTAL_CHANGES() DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2 COLLATE BINARY)*(CAST(vt1.c0 AS REAL)))) ORDER BY CASE x''  WHEN CAST(vt0.c1 AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))<=((vt0.c0))) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN (vt0.c1)) END ASC  NULLS LAST, ((((((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)))AND(vt1.lid)))OR(((vt0.c0)&(vt0.c0)))) DESC, TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY)*(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE x''  WHEN CAST(vt0.c1 AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))<=((vt0.c0))) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN (vt0.c1)) END ASC  NULLS LAST, ((((((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)))AND(vt1.lid)))OR(((vt0.c0)&(vt0.c0)))) DESC, TOTAL_CHANGES() DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c2 COLLATE BINARY)*(CAST(vt1.c0 AS REAL)))) ORDER BY CASE x''  WHEN CAST(vt0.c1 AS REAL) THEN NULL COLLATE NOCASE WHEN x'' THEN ((vt0.c0) IS FALSE) WHEN (((vt0.c1))<=((vt0.c0))) THEN vt0.c2 COLLATE NOCASE ELSE (vt0.c0 IN (vt0.c1)) END ASC  NULLS LAST, ((((((vt0.c1) BETWEEN (vt1.lid) AND (vt1.lid)))AND(vt1.lid)))OR(((vt0.c0)&(vt0.c0)))) DESC, TOTAL_CHANGES() DESC;
SELECT * FROM vt1 WHERE (((((vt1.c2)>=(vt1.lid))) NOT BETWEEN ((vt1.c0 IN ())) AND (((x'ef59')+(vt1.c2))))) ORDER BY '_L*?\RXa'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)>=(vt1.lid))) NOT BETWEEN ((vt1.c0 IN ())) AND (((x'ef59')+(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY '_L*?\RXa'  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c2)>=(vt1.lid))) NOT BETWEEN ((vt1.c0 IN ())) AND (((x'ef59')+(vt1.c2))))) ORDER BY '_L*?\RXa'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)>=(vt1.lid))) NOT BETWEEN ((vt1.c0 IN ())) AND (((x'ef59')+(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY '_L*?\RXa'  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c2)>=(vt1.lid))) NOT BETWEEN ((vt1.c0 IN ())) AND (((x'ef59')+(vt1.c2))))) ORDER BY '_L*?\RXa'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN (+ (vt1.lid)) THEN LTRIM(vt1.c1) WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((vt1.lid)<(vt1.c0)) END DESC  NULLS FIRST, LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN (+ (vt1.lid)) THEN LTRIM(vt1.c1) WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((vt1.lid)<(vt1.c0)) END DESC  NULLS FIRST, LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN (+ (vt1.lid)) THEN LTRIM(vt1.c1) WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((vt1.lid)<(vt1.c0)) END DESC  NULLS FIRST, LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE (vt1.c0 IN ())  WHEN (+ (vt1.lid)) THEN LTRIM(vt1.c1) WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((vt1.lid)<(vt1.c0)) END DESC  NULLS FIRST, LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c2)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) IN ())) ORDER BY CASE (vt1.c0 IN ())  WHEN (+ (vt1.lid)) THEN LTRIM(vt1.c1) WHEN ((vt1.c2) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((vt1.lid)<(vt1.c0)) END DESC  NULLS FIRST, LOWER(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt1.c2)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((vt0.c2)<=(vt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)<=(vt0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((vt0.c2)<=(vt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2)<=(vt0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY ((vt0.c2)<=(vt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.26347986164989623);
SELECT SUM(count) FROM (SELECT ALL ((0.26347986164989623) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.26347986164989623);
SELECT SUM(count) FROM (SELECT ALL ((0.26347986164989623) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.26347986164989623);
SELECT ALL * FROM vt1 WHERE (0x5c50e6c7);
SELECT SUM(count) FROM (SELECT ((0X5c50e6c7) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x5c50e6c7);
SELECT SUM(count) FROM (SELECT ((0X5c50e6c7) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0x5c50e6c7);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN ((vt0.c2) IS FALSE) ELSE (vt0.c1 IN ()) END) ORDER BY (((vt0.c2 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN ((vt0.c2) IS FALSE) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN ((vt0.c2) IS FALSE) ELSE (vt0.c1 IN ()) END) ORDER BY (((vt0.c2 IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN ((vt0.c2) IS FALSE) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)) THEN ((vt0.c2) IS FALSE) ELSE (vt0.c1 IN ()) END) ORDER BY (((vt0.c2 IN ())) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((((((0.10013287499182388)OR(x'')))OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (vt1.c1))))) ORDER BY ((vt1.c1 COLLATE BINARY) IS FALSE) ASC, ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.10013287499182388)OR(x'')))OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY) IS FALSE) ASC, ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((0.10013287499182388)OR(x'')))OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (vt1.c1))))) ORDER BY ((vt1.c1 COLLATE BINARY) IS FALSE) ASC, ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.10013287499182388)OR(x'')))OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE BINARY) IS FALSE) ASC, ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((0.10013287499182388)OR(x'')))OR(vt1.c1)))AND(vt1.lid)))OR(vt1.lid))) NOT BETWEEN (((NULL) ISNULL)) AND ((~ (vt1.c1))))) ORDER BY ((vt1.c1 COLLATE BINARY) IS FALSE) ASC, ((CASE vt1.c2  WHEN vt1.c2 THEN vt1.lid WHEN vt1.c2 THEN vt1.c2 WHEN vt1.c2 THEN vt1.c0 ELSE vt1.c0 END) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c2)>=(x'')) THEN '' ELSE CAST(vt0.c2 AS REAL) END) ORDER BY CASE WHEN (('-673891816')AND(vt0.c2)) THEN json_array_length(vt0.c2, vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c2)>=(x'')) THEN '' ELSE CAST(vt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (('-673891816')AND(vt0.c2)) THEN json_array_length(vt0.c2, vt0.c0) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c2)>=(x'')) THEN '' ELSE CAST(vt0.c2 AS REAL) END) ORDER BY CASE WHEN (('-673891816')AND(vt0.c2)) THEN json_array_length(vt0.c2, vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt0.c2)>=(x'')) THEN '' ELSE CAST(vt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (('-673891816')AND(vt0.c2)) THEN json_array_length(vt0.c2, vt0.c0) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c2 THEN vt1.lid ELSE vt1.c0 END))) ORDER BY ((vt1.c2 COLLATE NOCASE)<>(((((((((vt1.c2)OR(NULL)))AND(vt1.c1)))OR(vt1.c1)))AND(0xfffffffff7ec9c6d))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c2 THEN vt1.lid ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE NOCASE)<>(((((((((vt1.c2)OR(NULL)))AND(vt1.c1)))OR(vt1.c1)))AND(0Xfffffffff7ec9c6d))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c2 THEN vt1.lid ELSE vt1.c0 END))) ORDER BY ((vt1.c2 COLLATE NOCASE)<>(((((((((vt1.c2)OR(NULL)))AND(vt1.c1)))OR(vt1.c1)))AND(0xfffffffff7ec9c6d))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c2 THEN vt1.lid ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c2 COLLATE NOCASE)<>(((((((((vt1.c2)OR(NULL)))AND(vt1.c1)))OR(vt1.c1)))AND(0Xfffffffff7ec9c6d))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c2 THEN vt1.lid ELSE vt1.c0 END))) ORDER BY ((vt1.c2 COLLATE NOCASE)<>(((((((((vt1.c2)OR(NULL)))AND(vt1.c1)))OR(vt1.c1)))AND(0xfffffffff7ec9c6d))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<(vt0.c2)))AND(vt0.c1)) WHERE ((((vt1.c2 IN (x'7527', vt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (x'7527', vt1.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<(vt0.c2)))AND(vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<(vt0.c2)))AND(vt0.c1)) WHERE ((((vt1.c2 IN (x'7527', vt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (x'7527', vt1.c2))) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<(vt0.c2)))AND(vt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<(vt0.c2)))AND(vt0.c1)) WHERE ((((vt1.c2 IN (x'7527', vt1.c2))) NOTNULL));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((+ (vt0.c2)) IN (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c2)) IN (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((+ (vt0.c2)) IN (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c2)) IN (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((+ (vt0.c2)) IN (((vt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c2 IN ()) WHEN ((x'')>=(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN vt0.c2 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN -1210517279 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) ISNULL) ELSE x'64d9' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c2 IN ()) WHEN ((x'')>=(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN vt0.c2 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN -1210517279 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) ISNULL) ELSE x'64d9' END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c2 IN ()) WHEN ((x'')>=(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN vt0.c2 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN -1210517279 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) ISNULL) ELSE x'64d9' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c2 IN ()) WHEN ((x'')>=(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN vt0.c2 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN -1210517279 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) ISNULL) ELSE x'64d9' END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c2 IN ()) WHEN ((x'')>=(vt0.c0)) THEN ((vt0.c1)OR(vt0.c0)) WHEN vt0.c2 THEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN -1210517279 WHEN ((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c2) ISNULL) ELSE x'64d9' END ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.lid))) BETWEEN (NULLIF(vt1.lid, x'')) AND ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.lid))) BETWEEN (NULLIF(vt1.lid, x'')) AND ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.lid))) BETWEEN (NULLIF(vt1.lid, x'')) AND ((vt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt1.lid))) BETWEEN (NULLIF(vt1.lid, x'')) AND ((vt1.c2 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)LIKE(vt1.lid))) BETWEEN (NULLIF(vt1.lid, x'')) AND ((vt1.c2 IN ()))));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)))) AND ((((vt0.c1)<<(vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))==(((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)))) AND ((((vt0.c1)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))==(((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)))) AND ((((vt0.c1)<<(vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))==(((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)))) AND ((((vt0.c1)<<(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))==(((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2)))));
SELECT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)))) AND ((((vt0.c1)<<(vt0.c0)))))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)))==(((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c2))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c0)GLOB(vt1.c0))  WHEN (('pP{MD*F㶒') NOT NULL) THEN ((((vt1.c0)OR(vt1.lid)))AND(vt0.c1)) WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt1.c2)) THEN ((vt0.c2)=(vt1.c1)) WHEN (((vt1.c2))<((vt1.c0))) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE NULL END WHEN (((vt0.c1, vt1.c2, x'ecb8'))>((vt1.c2, vt0.c2, vt0.c2))) THEN CAST(x'd95a' AS REAL) END) ORDER BY (NOT (CAST(vt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(vt1.c0))  WHEN (('pP{MD*F㶒') NOT NULL) THEN ((((vt1.c0)OR(vt1.lid)))AND(vt0.c1)) WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt1.c2)) THEN ((vt0.c2)=(vt1.c1)) WHEN (((vt1.c2))<((vt1.c0))) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE NULL END WHEN (((vt0.c1, vt1.c2, x'ecb8'))>((vt1.c2, vt0.c2, vt0.c2))) THEN CAST(x'd95a' AS REAL) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (NOT (CAST(vt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c0)GLOB(vt1.c0))  WHEN (('pP{MD*F㶒') NOT NULL) THEN ((((vt1.c0)OR(vt1.lid)))AND(vt0.c1)) WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt1.c2)) THEN ((vt0.c2)=(vt1.c1)) WHEN (((vt1.c2))<((vt1.c0))) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE NULL END WHEN (((vt0.c1, vt1.c2, x'ecb8'))>((vt1.c2, vt0.c2, vt0.c2))) THEN CAST(x'd95a' AS REAL) END) ORDER BY (NOT (CAST(vt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)GLOB(vt1.c0))  WHEN (('pP{MD*F㶒') NOT NULL) THEN ((((vt1.c0)OR(vt1.lid)))AND(vt0.c1)) WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt1.c2)) THEN ((vt0.c2)=(vt1.c1)) WHEN (((vt1.c2))<((vt1.c0))) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE NULL END WHEN (((vt0.c1, vt1.c2, x'ecb8'))>((vt1.c2, vt0.c2, vt0.c2))) THEN CAST(x'd95a' AS REAL) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (NOT (CAST(vt0.c2 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c0)GLOB(vt1.c0))  WHEN (('pP{MD*F㶒') NOT NULL) THEN ((((vt1.c0)OR(vt1.lid)))AND(vt0.c1)) WHEN ((((vt1.c1)OR(vt1.lid)))OR(vt1.c2)) THEN ((vt0.c2)=(vt1.c1)) WHEN (((vt1.c2))<((vt1.c0))) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c1 IN (vt1.lid)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 ELSE NULL END WHEN (((vt0.c1, vt1.c2, x'ecb8'))>((vt1.c2, vt0.c2, vt0.c2))) THEN CAST(x'd95a' AS REAL) END) ORDER BY (NOT (CAST(vt0.c2 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((SUBSTR(vt0.c1, vt0.c2) IN ())) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (((SUBSTR(vt0.c1, vt0.c2) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END DESC);
SELECT * FROM vt0, vt1 WHERE ((SUBSTR(vt0.c1, vt0.c2) IN ())) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (((SUBSTR(vt0.c1, vt0.c2) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END DESC);
SELECT * FROM vt0, vt1 WHERE ((SUBSTR(vt0.c1, vt0.c2) IN ())) ORDER BY CASE WHEN (~ (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((0.028475919320894882)&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((0.028475919320894882)&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((0.028475919320894882)&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((0.028475919320894882)&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((0.028475919320894882)&(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (((((0.7354048237356484)OR(vt1.c2)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST, ((x'7cd9')|((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((0.7354048237356484)OR(vt1.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS LAST, ((x'7cd9')|((+ (vt0.c0)))));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (((((0.7354048237356484)OR(vt1.c2)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST, ((x'7cd9')|((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((0.7354048237356484)OR(vt1.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c0  NULLS LAST, ((x'7cd9')|((+ (vt0.c0)))));
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE ((NOT (((((0.7354048237356484)OR(vt1.c2)))OR(vt0.c1))))) ORDER BY vt0.c0  NULLS LAST, ((x'7cd9')|((+ (vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((('-323685209') NOTNULL))OR((vt1.c1 IN ()))))AND((~ (vt1.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-323685209') NOTNULL))OR((vt1.c1 IN ()))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((('-323685209') NOTNULL))OR((vt1.c1 IN ()))))AND((~ (vt1.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-323685209') NOTNULL))OR((vt1.c1 IN ()))))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((('-323685209') NOTNULL))OR((vt1.c1 IN ()))))AND((~ (vt1.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (vt0.c2);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c0)+(vt1.lid))) AND (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2 DESC, ','  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c0)+(vt1.lid))) AND (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC, ','  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c0)+(vt1.lid))) AND (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2 DESC, ','  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c0)+(vt1.lid))) AND (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2 DESC, ','  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (((vt1.c0)+(vt1.lid))) AND (((((((((vt1.lid)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2 DESC, ','  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON '9K' WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON '9K');
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON '9K' WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON '9K');
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON '9K' WHERE ('');
SELECT ALL * FROM vt1 WHERE (((vt1.c0)/(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)/(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)/(vt1.c1)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) ORDER BY TYPEOF(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))));
SELECT * FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) ORDER BY TYPEOF(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((vt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2))));
SELECT * FROM vt0 WHERE (vt0.c2 COLLATE RTRIM) ORDER BY TYPEOF(((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (((((vt1.lid)<>(vt1.c1))) IS FALSE)) ORDER BY HEX(((vt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)<>(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c1) ISNULL)));
SELECT * FROM vt1 WHERE (((((vt1.lid)<>(vt1.c1))) IS FALSE)) ORDER BY HEX(((vt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.lid)<>(vt1.c1))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY HEX(((vt1.c1) ISNULL)));
SELECT * FROM vt1 WHERE (((((vt1.lid)<>(vt1.c1))) IS FALSE)) ORDER BY HEX(((vt1.c1) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid)OR(vt1.c2)))OR((('4YUyS~A') ISNULL)))) ORDER BY NULL  NULLS LAST, ((vt1.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END) AND (((vt0.c0)IS NOT(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)OR(vt1.c2)))OR((('4YUyS~A') ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS LAST, ((vt1.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END) AND (((vt0.c0)IS NOT(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid)OR(vt1.c2)))OR((('4YUyS~A') ISNULL)))) ORDER BY NULL  NULLS LAST, ((vt1.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END) AND (((vt0.c0)IS NOT(vt1.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.lid)OR(vt1.c2)))OR((('4YUyS~A') ISNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL  NULLS LAST, ((vt1.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END) AND (((vt0.c0)IS NOT(vt1.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.lid)OR(vt1.c2)))OR((('4YUyS~A') ISNULL)))) ORDER BY NULL  NULLS LAST, ((vt1.c2) BETWEEN (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c1 END) AND (((vt0.c0)IS NOT(vt1.lid))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY CASE WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c2)) THEN (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt1.lid)) AND ((vt1.lid, '-85270326', vt1.c2))) WHEN (+ (vt0.c2)) THEN ((vt1.c0)|(NULL)) WHEN (vt1.lid IN ()) THEN vt0.c1 END  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt0.c2)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c1)))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c2)))))OR(0.4867641288060566))  NULLS FIRST, (- (((vt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c2)) THEN (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt1.lid)) AND ((vt1.lid, '-85270326', vt1.c2))) WHEN (+ (vt0.c2)) THEN ((vt1.c0)|(NULL)) WHEN (vt1.lid IN ()) THEN vt0.c1 END  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt0.c2)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c1)))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c2)))))OR(0.4867641288060566))  NULLS FIRST, (- (((vt1.c2) IS FALSE))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY CASE WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c2)) THEN (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt1.lid)) AND ((vt1.lid, '-85270326', vt1.c2))) WHEN (+ (vt0.c2)) THEN ((vt1.c0)|(NULL)) WHEN (vt1.lid IN ()) THEN vt0.c1 END  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt0.c2)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c1)))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c2)))))OR(0.4867641288060566))  NULLS FIRST, (- (((vt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.lid) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c2)) THEN (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt1.lid)) AND ((vt1.lid, '-85270326', vt1.c2))) WHEN (+ (vt0.c2)) THEN ((vt1.c0)|(NULL)) WHEN (vt1.lid IN ()) THEN vt0.c1 END  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt0.c2)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c1)))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c2)))))OR(0.4867641288060566))  NULLS FIRST, (- (((vt1.c2) IS FALSE))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.lid) ORDER BY CASE WHEN ((((vt0.c0)OR(vt1.c2)))OR(vt0.c2)) THEN (((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt1.c1, vt0.c1, vt1.lid)) AND ((vt1.lid, '-85270326', vt1.c2))) WHEN (+ (vt0.c2)) THEN ((vt1.c0)|(NULL)) WHEN (vt1.lid IN ()) THEN vt0.c1 END  NULLS LAST, ((((((((((((((((vt0.c1)AND(vt0.c2)))OR(vt1.lid)))AND(vt1.lid)))AND(vt1.c1)))OR(((vt0.c0) ISNULL))))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt1.c0) BETWEEN (vt1.lid) AND (vt1.c2)))))OR(0.4867641288060566))  NULLS FIRST, (- (((vt1.c2) IS FALSE))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c2))>(NULL))) ORDER BY vt1.c0, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt1.c0, vt1.c2))>(NULL))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c2))>(NULL))) ORDER BY vt1.c0, vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt1.c0, vt1.c2))>(NULL))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, vt1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((IFNULL(DISTINCT vt1.c0, vt1.c2))>(NULL))) ORDER BY vt1.c0, vt1.c0 ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c2)<=(vt1.c2)) COLLATE BINARY) ORDER BY ((((NULL) NOTNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((- (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL) NOTNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((- (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c2)<=(vt1.c2)) COLLATE BINARY) ORDER BY ((((NULL) NOTNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((- (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)<=(vt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((NULL) NOTNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((- (vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c2)<=(vt1.c2)) COLLATE BINARY) ORDER BY ((((NULL) NOTNULL)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND ((- (vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((~ (vt0.c1)));
SELECT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c2, vt0.c0))!=((vt0.c0, vt0.c2, vt0.c2))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1, vt0.c2, vt0.c0))!=((vt0.c0, vt0.c2, vt0.c2))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c2, vt0.c0))!=((vt0.c0, vt0.c2, vt0.c2))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1, vt0.c2, vt0.c0))!=((vt0.c0, vt0.c2, vt0.c2))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c1, vt0.c2, vt0.c0))!=((vt0.c0, vt0.c2, vt0.c2))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY (((vt0.c1))<>((vt0.c1))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1 COLLATE RTRIM))<>((LIKELIHOOD(DISTINCT vt0.c1, 0.457166251446423)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM))<>((LIKELIHOOD(DISTINCT vt0.c1, 0.457166251446423))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1 COLLATE RTRIM))<>((LIKELIHOOD(DISTINCT vt0.c1, 0.457166251446423)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE RTRIM))<>((LIKELIHOOD(DISTINCT vt0.c1, 0.457166251446423))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((vt0.c1 COLLATE RTRIM))<>((LIKELIHOOD(DISTINCT vt0.c1, 0.457166251446423)))));
