-- Time: 2024/06/09 16:25:50
-- Database: database37
-- Database version: 3.40.0
-- seed value: 2474483037
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, prefix=474); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1 UNINDEXED); -- 1ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1143122606 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1143122606 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('1143122606')AND((~ (NULL)))))OR(((NULL) NOT BETWEEN (x'') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2039903057 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1768139122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1143122606 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=2039903057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ((((x''))<>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1768139122 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-488024173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL, 0.7449798652355305, NULL)) BETWEEN (('', x'5ed4', '')) AND ((-4.88024173E8, '2039903057', x''))) THEN CASE 0.8629236443729525  WHEN NULL THEN x'' WHEN '-Infinity' THEN '5\r#' WHEN '1143122606' THEN '0.7449798652355305' END ELSE (('2099830359') ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '囲H '  WHEN NULL THEN 0.5212985406259332 WHEN '-1786334446' THEN '298938416' WHEN '298938416' THEN '' WHEN x'' THEN '-1790370323' WHEN '0.7449798652355305' THEN 'u>' END) NOT BETWEEN (((0.9898754205481128)>(x''))) AND (LIKELY('C!'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '820215408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-368259320 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '298938416 sz=-1775226598'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X3f145054)) BETWEEN ((((x'') NOT BETWEEN (x'') AND ('Md')))) AND ((((0Xffffffffd18b56f2) NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1101532720 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('')))AND(-4.88024173E8 COLLATE RTRIM)))OR(CASE '0.5212985406259332'  WHEN 0.5212985406259332 THEN 'uA' WHEN x'9cf5' THEN '-1101532720' WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('2099830359'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES()) BETWEEN (((((((((x'')OR(0.8600809598486348)))OR(x'')))AND('囲h ')))OR(0.9760799647767887))) AND (((x'e628') NOT BETWEEN (0.9957805675738362) AND (-987484547)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 'C!' THEN 1.058295892E9 END IN (x'', '' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '820215408 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1058295892 -2128654292'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=820215408 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('820215408') NOT NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.0908415866056771, '298938416', x'')) NOT BETWEEN ((0.9667960242659491, -1.786334446E9, x'7e2a')) AND (('c!', 's㚎m\n1en', 820215408))))OR((((-1139958025)) NOT BETWEEN ((0.0908415866056771)) AND ((0.7355408514637665))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL WHEN 0Xffffffffbc0d9ef7 THEN '0.9667960242659491' WHEN NULL THEN '-779397390' ELSE '-779397390' END) BETWEEN ((('FK') ISNULL)) AND ((('-987484547')+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1742911394 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1143122606'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '402023396'  WHEN '﷧' THEN NULL ELSE '0.7449798652355305' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-519781118 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-779397390'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1917207418 sz=2126172281 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=398464580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0908415866056771; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-186953510 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffbe57f1d0) NOT BETWEEN (0.309472970570687) AND ((((((((('-186953510')OR('-1955470773')))OR(x'')))AND(0.0908415866056771)))AND('ocrnowF')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1058295892')OR(2054885011)))AND(0.8629236443729525)))OR(NULL)))AND('2099830359'))) BETWEEN ((('')GLOB(0X7d68d117))) AND (((x'68696e0d')-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '866465549 sz=246021329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-779397390 sz=398464580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -488024173'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '866465549 sz=1256308136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1256308136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1029869543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB((NOT (0.7449798652355305)), '1410196694' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((- ('')))) AND ((((x'') ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=925323763'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'f982'))==(('')))  WHEN (('A') BETWEEN (0.8629236443729525) AND ('')) THEN PRINTF(x'') ELSE '1058295892' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-987484547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6677805592217325; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1029869543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -488024173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-0.0)))&(ABS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (x''))  WHEN SQLITE_COMPILEOPTION_GET(0xffffffffdc7c637d) THEN CASE WHEN x'2282' THEN -2102067737 END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(-926826690))GLOB(CASE ''  WHEN NULL THEN 0Xfffffffffc6aae42 ELSE 1476748374 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-2121400034 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1876561178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1030462027 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=2142311830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6743115239628771) NOT BETWEEN (x'') AND ('475505439')))=(x'1c48' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=925323763 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-60117438') NOT BETWEEN ('-1876561178') AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1375990786'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8239173370761659)&(0.8581940520464916)))OR(((0x692b5456)/('1644391272')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((NULL) NOT BETWEEN (x'') AND (NULL)), 0.16741559329713018); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1896166369 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.5212985406259332)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-186953510 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1927183785 0 sz=398464580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)*('_N'))))>(((+ (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*ia8RSB4')<=('2uEf'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1201422999 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1775226598)OR(1397735151)))AND(0.479408732076416)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1768139122 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1917207418 sz=-1955470773 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1933691250 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2101575864 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1852153391 sz=1235742407'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1288696551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1256308136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1080604760'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1082878448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN NULL ELSE 0.5767120664327472 END))<((('0.5767120664327472' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1080604760 sz=1768139122'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1525252021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1325169465 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.256308136E9; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-918507397 sz=1058295892 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type((('1628796793') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2126172281'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0x20db7acf))<(('925323763'))))AND(x'312d7592')))AND((NOT (0.9163388052641965)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1467749344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=-192088196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=64948444 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2027005872 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{&*e')) NOT BETWEEN (((- (258628154)))) AND ((ABS(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '2101575864' THEN (('-159840954')%('')) WHEN (((x'', NULL, 123256182)) NOT BETWEEN (('4EꟉ-Z', NULL, x'')) AND ((0.9957805675738362, 'D+h疷2|u', x'397b'))) THEN (~ (x'1766fca783d3')) WHEN ((0Xffffffffecf5b314)<(NULL)) THEN 0.04668827332008141 COLLATE BINARY WHEN QUOTE('-1288696551') THEN TRIM(DISTINCT 2126172281) WHEN (((('1058295892')OR(NULL)))OR(0.9163388052641965)) THEN (0.7596652357549202 IN (0.10066556387101966)) ELSE CASE '952635561'  WHEN x'' THEN '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1519637499 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-350698041'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.11359803988037798 IN ()) IN (1381577188)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-110146696'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1381577188 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2121400034'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 -1062255268 sz=866465549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1714182199'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(0.4845425782996089)))<<(CASE 0xffffffffeddb18e9  WHEN x'' THEN 0.9476471414804044 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=437556034'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1790370323'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6808920761138442 COLLATE BINARY AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=246021329 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1397735151 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2096032742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2104366455 sz=-1339496473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.525252021E9)<<('4EꟉ-Z')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1246426451 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL COLLATE NOCASE)AND(((NULL) BETWEEN (0Xffffffffb0b36dae) AND (3.2394826007431377E-4)))))OR(((((0xffffffffbf749610)AND(NULL)))AND('')))))AND(CAST('' AS INTEGER))))AND(CASE WHEN 'l' THEN 1.23256182E8 WHEN 0.5212985406259332 THEN '' WHEN 0.8221787726772302 THEN '-620851872' WHEN '0.5767120664327472' THEN 'i !t' WHEN 0.5814583912197704 THEN '1QPz''4h9A' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-368259320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN (((NULL)-('ocrnowF'))) AND (((0.4948435527409588) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'9332' COLLATE NOCASE) NOT BETWEEN (0.6140780806167494 COLLATE RTRIM) AND ((0.9346911771127652 IN (x'07c3d94c')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5866118784563574)==('1030462027'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=402023396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN x'' THEN '5\r#' ELSE NULL END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0X4068b858)&(398464580)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.20276826832588468)%(-1437418687)))OR(0.0 COLLATE RTRIM)))OR(CASE NULL  WHEN x'a330' THEN NULL ELSE 0xffffffff8a3aeab7 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((x'') ISNULL), ((NULL)>(0.9436421044822613)), ((0.9436421044822613)!=('')), CAST('+>' AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=260210421 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)OR('')))OR(x'')))AND(0.8269487916259834)))AND(x'')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1967081420 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<=(0.7981808274335873)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1992526689'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-241675078'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-94691140 -831455643 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2096032742 0 sz=551254735'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(-1548283324); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=952635561'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '849051319 sz=720769411 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=439529040 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=312622555 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1933691250 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.7520570165300589, -83745361))<((0.13149372329701536, x'ba2c3eed', '-1467749344'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.9957805675738362)OR('849051319')))AND('3''iP')))OR(0.8108682393909151)))AND('r7K1q\n5#r')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-285590680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))|(((0xffffffff81e84968)+(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=439529040 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-2.102067737E9)>=(0.04668827332008141)))LIKE((0.6948246248096392 IN (x'fccc', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 'EB'  WHEN '2101575864' THEN -1139958025 END))>=((x'' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-761288656 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.713624906155339)AND('-1876561178')))OR('0.8600809598486348')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1992526689 1554975842 -1548283324 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1548283324 -32348925 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)>(x''))  WHEN ((0.43026774108045174)>>(NULL)) THEN LOWER('&.d7') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2144044958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())>>(((x'') NOT BETWEEN (0.18702821218298682) AND (x'c4cb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=577306162'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<>(('\rui*a')))) NOT BETWEEN (CAST(0.5882722142195206 AS REAL)) AND (0.5073107979845789 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 743511607 sz=2073593981 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('nvzy+y' IN (x'a650', x'a0bb'))) BETWEEN (((((((((0xffffffff8cd99868)OR('Yg.酘!')))AND(NULL)))OR('402023396')))AND('2096032742'))) AND ((((NULL)) NOT BETWEEN (('')) AND (('-1375990786'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '849051319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN x'' THEN x'' WHEN -1.790370323E9 THEN '-127268201' WHEN 1.058295892E9 THEN 0.21599422435231497 END  WHEN 0.8709523603501867 THEN 0X47188d87 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1030462027'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1397801908 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1528087262 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3057834845076576) BETWEEN (UNLIKELY('-2059668842')) AND (CAST(x'5daf' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELIHOOD(0.011958112208005911, 0.4193941356917066))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 1029869543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1571572217 -1297079951 sz=1804534526 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('%zG^-nf	S'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1637221583 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CASE WHEN x'' THEN -8.31455643E8 ELSE 0.04668827332008141 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-60117438 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- ('0jp')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-588080323 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND ('2027005872')))>((- ('1381577188')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1206400888 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-837828842 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=874937617 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 -64307303 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '437953888 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(CASE 'j8tꔞJjF掞 '  WHEN 1926097023 THEN '0.20276826832588468' END, ((((NULL)AND(-1.7976931348623157E308)))AND(x'f8fd2884'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'922e' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1923190217'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=-1944179652'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')||('1476748374'))))>(((('') NOT BETWEEN (x'eac3a25a') AND ('1379761215'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1426996129 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1386375866'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '123256182 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '827305263 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=330790038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1775226598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1333404305 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 -944107437 sz=-350698041 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x1d6553d2 IN ()))*(((((NULL)OR(-1058726755)))OR(-344083665)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X221d0b3e) BETWEEN (x'f3ef') AND (-1437418687)), (('eu,3Idrf') NOT NULL), (('-1139958025')IS NOT(0.8816023235282584))))==((CASE WHEN NULL THEN 0.03976686362877668 END, (((('.Zo{')AND(NULL)))OR(NULL)), (- ('64948444'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('ju') NOT BETWEEN ('-154079921') AND (1628796793)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=974975265 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2007707292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-893182717 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((4.37556034E8)+('721756070')))OR(((x'')<(x'')))))OR(CAST(-1082878448 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2.095942217E9 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9844635578678353)>('Lg')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1005552336 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1910793920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-192088196 sz=-1663450233 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 807907380  WHEN '2146209249' THEN '.zo{' END THEN (- (NULL)) WHEN ((NULL) NOT NULL) THEN CASE 7.20769411E8  WHEN NULL THEN NULL WHEN 0.8136519663218893 THEN 0.8136519663218893 WHEN 0.8706704407386944 THEN '2104021271' ELSE '849051319' END WHEN (NOT ('尪sX?cO')) THEN ((((x'')AND('-2128654292')))OR(NULL)) ELSE (+ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1644391272 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.10066556387101966'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)*(CASE 0.550457885613328  WHEN NULL THEN NULL WHEN x'c107' THEN '' WHEN NULL THEN '-1903723490' ELSE 0.971731181005651 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1470420196'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-519781118')) NOT BETWEEN ((((1913721361) BETWEEN (NULL) AND (NULL)))) AND ((CAST(0.6282748084831928 AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-333457020 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=890018939'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1876561178'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8502838228127202) ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=159997252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1716797787 sz=-199172869'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7149382922893842))<>(('')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('SvM^x?8I/')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((((0.03369968460215644)AND(0.8060331646573651)))AND('1058295892')), NULL COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1101532720 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2022882529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '-2121400034'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1282013973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-238893387'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '-159840954'  WHEN x'' THEN 0.9494511264283765 END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1605638977 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1809989430 COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1529500213'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'edb5')&('x\r')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -7.7939739E8 THEN '-1955470773' END)>>(CAST(x'75f9' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-524684692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-764933583 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1058295892 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN (((x'')) NOT BETWEEN ((0Xffffffff9583ec48)) AND ((x''))) ELSE (('(') BETWEEN ('') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2139835391 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-989893473 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0793729534115527; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9346911771127652)/('925323763')))/((('d+h疷2|u') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=487328391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2107156159 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0') NOT BETWEEN ('큹ቄ9nc') AND (x'ff7c')))LIKE(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ((('M>jt\l') ISNULL)) AND (0Xffffffffecf5b314)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('r7K1q\n5#r' IN ())))<(((+ (0X6e10c0a0))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 2099830359 sz=-304408343 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1467749344 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1166678936'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1642866868 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-779397390 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1559069979 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=298938416 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8581940520464916; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '599603016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '', x'', 'D\r~K(#a3', 0.254666284513151))<((x'', 0.1969951152249262, NULL, 0.8181040030571849, 0.5563471160210315))))>(CASE WHEN NULL THEN 0.8181040030571849 WHEN '6E밓뭯.-' THEN NULL WHEN NULL THEN 0.3057834845076576 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1625225021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1035793350'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'' COLLATE NOCASE)OR((('') BETWEEN (2.027005872E9) AND (x'')))))OR(CAST(x'' AS TEXT))))AND('-1037038823')))OR(((x'') NOT BETWEEN (NULL) AND (0X692b5456)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=258628154'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS NUMERIC) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-508653634 sz=-906494563 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1672477096 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1847773682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2090821836 sz=-1879741615'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2027005872'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-34689308) BETWEEN (x'a6dd') AND (0.9146141116299591))) NOT BETWEEN ((NOT ('-1967081420'))) AND (((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(x'')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>=(x'')))AND((NULL IN ()))))AND(((0.0892611422604912)IS(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'', 0.9000965235695803, -1.790370323E9))<(('y|w[', -251161033, '1575645530'))))AND(CASE x''  WHEN x'406a' THEN NULL ELSE x'' END)))OR((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0') NOT BETWEEN (8.20215408E8) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=175910358 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2110859462 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 2.98938416E8 THEN x'' END) BETWEEN ((((NULL)) NOT BETWEEN ((x'')) AND (('1887491601')))) AND (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('JRlF' COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((0xffffffff980c5052)AND(x'')))OR('(')))) AND ((((0.7557341465389452) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-791636553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=605355090 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1351391625'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1547438162 sz=-2092155924'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS FALSE))AND(CASE 0.7248678722865816  WHEN x'' THEN '-519781118' WHEN 'j' THEN NULL WHEN 0.5146331701398432 THEN '' END)))AND((('')IS NOT(0.004192354659355857)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1141033991'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3070628323000133) NOT BETWEEN (0.15459369300537218) AND (-1.876561178E9))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TYPEOF(DISTINCT x''))AND(((0.8239173370761659)>>(0x1a32ae50)))))AND((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9476471414804044') BETWEEN ('0.8060331646573651') AND (0.3070628323000133)))AND(0.5395691628668464)))AND(((0.7577874096272821)==(0xffffffffb0b36dae)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-145721171 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1764447318 sz=998566600'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2043635767 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.397735151E9, NULL, NULL))==(('qd뀲vT㷛嘃ങ', 0.19917400478991953, NULL))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1992526689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1215822633 sz=402023396'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1917207418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2139429051'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1511540983 0 sz=-1151108489 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'0e1f038baa42'  WHEN 0x17f663e4 THEN NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1223082193' AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((0.8562966282543809)AND('0.5767120664327472')))AND(0.23308908210435064)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1992526689') NOT BETWEEN (SQLITE_SOURCE_ID()) AND ((+ (0Xffffffffe66c6e60)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2101575864 -1693191903 sz=432726934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1123968224 sz=-378938910 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('1425181272'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2020296863 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1917207418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-37062380 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((DATETIME(0.1451477968573328, NULL, 0.9037465215325985))&(('6e밓뭯.-' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('V\')AND(x'')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-304408343 sz=1256308136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1568785867' IN ('0.23308908210435064', '+w#}>*')))GLOB(((0.6196824600007854)>>(0X6bc2d3ba)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=834580450 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1397735151 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULLIF('', x'') THEN ABS(NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=393065477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-987484547'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x3901139b)||(LIKELIHOOD(DISTINCT 0.524422727636796, 0.8374661868961105))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-90178171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1497026574 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=208533783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('') AND (NULL)))LIKE(0.06381796860858091)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.4630342932782693))<((x'61a5'))) THEN (('큹ቄ9nc')>>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1831349535'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('尪SX?CO' AS BLOB)) NOT BETWEEN (json_valid(NULL)) AND (0.11936364848092051)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=849051319 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=234126977 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2099830359 sz=-186953510'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(2.98938416E8 AS NUMERIC)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '662543721 0 sz=-1992526689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.9735476114540038) AND (x''))) NOT BETWEEN ((('-926826690')LIKE(0.21599422435231497))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-227262310 0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (ABS(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((- (x'')))) AND (((((('')AND(x'')))OR(0.3057834845076576))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2144971805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT NULL)) NOT BETWEEN ('2099830359' COLLATE RTRIM) AND ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1030462027 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=286198239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2059934873 sz=402023396 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-866630014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-2121400034'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, 'X[Ic', 0.325227784023022))>=(('+>', NULL, 0x6abb10de))))OR(NULL)))AND(CASE WHEN 0.5026795136673227 THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((((((((0.7082598418124343)OR(x'bc7636e2')))AND('-1173215108')))AND('[蓇v/(s∜E')))AND(0.3632993647809718)), (((x'791f')) NOT BETWEEN ((NULL)) AND ((x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1933691250 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-519781118'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.14472081883703758; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2104021271 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1927183785 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 -1967081420 sz=2027005872 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')OR(260210421)))AND(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1164079228 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-103175876 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.7442357696999071 AS REAL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1105765825'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1381577188 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('㍜냻[-9-z' COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffaa52bb41) NOT BETWEEN (NULL) AND ('T~j]JEX'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (UNLIKELY(3.9846458E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=56153667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))OR(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) BETWEEN ((('1668161413')|(x'f877'))) AND ((NOT (0.1288845107839125)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (- (NULL)), 0.495546090972087); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-926826690'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1QPz''4h9A')) NOT BETWEEN (('C!')) AND (((0x2b07c3ab IN ('71224626'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ga/?}q'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-83745361'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.44548296701886314)OR('')))OR(NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2102067737 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1768139122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7410473781084248)=(x'')))>=((- ('m>jt\l')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(((1201422999)<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffdc991886)) BETWEEN ((('' IN (x'')))) AND (((('&')>(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '808933076 sz=2144113050 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=303468111 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 850974060 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=138589610 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=559470744 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7411535740861747) ISNULL))IS NOT((((x'')) NOT BETWEEN ((NULL)) AND ((0.8269487916259834))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1704340197'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS NUMERIC))OR(0.6779517240641535)))AND((((NULL, -1548283324, -94691140))==((NULL, 0.6990534152486985, '-1'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2142311830 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1787796656 sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1967081420 COLLATE RTRIM)<>((('1628796793') NOT BETWEEN (0.8181040030571849) AND ('sTsﳠ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2128654292 sz=1191465418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1947484252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-125359672 2107967399'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('R%IHBe&즦')*(0.14521665613933732)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') ISNULL))OR(((0.01884894496062106)GLOB(0xffffffff9630311a)))))OR(1037754429 COLLATE RTRIM)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=91789307 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8707748022361946) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=632079645 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))%((',l-\' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1507733450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((((((((-1975850313)AND('0.03976686362877668')))AND(NULL)))AND(NULL)))OR('-1e500')), ((('')) BETWEEN ((NULL)) AND ((-993077143)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1288696551)<=(0X3b25984e))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1445854853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=460620031 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2113269422 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=925323763 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('' IN ('', '260210421')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-2121400034 -710233247 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-83745361 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.4446649903070131)))GLOB(-9.2682669E8 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CAST(0.21257383808628183 AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2120569859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-856472186 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '551254735 sz=-1879394891 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2600128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-465428358'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'4bf9' IN (0x308c6569)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1787646191)>('-965712569')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0Xffffffff9aef506a  WHEN 0.5713184382535562 THEN NULL ELSE NULL END)GLOB(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN (((((((((((((x'f7c7')AND(NULL)))OR('gXꇥjf|')))AND(x'')))AND(NULL)))OR(-1.8695351E8)))AND(0.9769865125818542))) AND ((('7(璟')<(-1306843147)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1808681357 sz=-665571500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT '-1900954762')) BETWEEN (CASE WHEN '-1752941962' THEN x'' WHEN '925323763' THEN NULL WHEN '' THEN x'' ELSE 'XrJ' END) AND (((('1851315678')) NOT BETWEEN (('w6')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '849051319 -716244263 sz=458916641 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>=(NULL)))OR(((('')) NOT BETWEEN ((NULL)) AND ((NULL))))))AND((('2126172281') BETWEEN ('-1325169465') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1805645103 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-728559913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=312622555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=866465549'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ ('+zN')), CASE -1.246426451E9  WHEN '-1062255268' THEN '' END, ((x'')>>('-1246426451'))))<=(((0.11943774026712795 IN ()), CASE NULL  WHEN NULL THEN '-1742911394' WHEN NULL THEN 0.8558037000338716 WHEN 963462307 THEN '246021329' ELSE '嶇䨍N&<2' END, ((0.22791071276049446)<=(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2101575864 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('15035309' AS NUMERIC))<<(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.330418258E9) NOT BETWEEN (0.43809522746760143) AND (x''))) BETWEEN (0.9394479506446529) AND (0.043826792707937434)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2107285799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-294622502 0 sz=-682849984'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('v\') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-350698041 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2128654292 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1255624021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2099830359 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1681877198'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3126ed3a' IN ())) BETWEEN (COALESCE(x'', 0.42728146858813487)) AND (('-831455643' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-886270808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOTNULL))OR('675672508')))AND(((((NULL)AND(0.03566136848820767)))OR('-1697463605')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '818287711 1080604760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1534210877 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2051904346'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1503182679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE BINARY THEN (('ZR')-(NULL)) WHEN (- (x'')) THEN (- (0.019542912931854395)) WHEN CAST('Y>|ah9' AS NUMERIC) THEN CASE 0.5284122397469981  WHEN NULL THEN x'af12' ELSE 7.20769411E8 END ELSE CAST(NULL AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1375990786 sz=225263729'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT RTRIM(x''), (((((((('-1357058523')AND(x'')))AND(x'')))AND(0Xffffffffb3642efe)))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2028653878 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7210342404528354 AS TEXT)) NOT BETWEEN ((((('')OR(x'fdb20e6b')))AND('2054885011'))) AND ((((NULL)) NOT BETWEEN (('hr')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (-1555319128) AND (x'')))IS(((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1613518111 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2099830359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1033368441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((508938216)) BETWEEN (('-1082878448')) AND ((NULL)))) BETWEEN (((NULL) NOT NULL)) AND (CASE WHEN '0.9898754205481128' THEN '1201422999' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1992526689 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-451510515 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -390994767; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1474530630)>(-9.18507397E8)))IS(((NULL)!=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1139958025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-0.0 COLLATE RTRIM)!=((('-1510645672')=('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-555037027'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('-96223385')AND(0.8691364248901065)))OR('7<Fqoe\')))OR(0.07646982144680492)))OR(-1633854848)))OR(NULL)))OR(NULL)))LIKE((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1949580347'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-835240976 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=765240392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1082878448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'64af'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1787527353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.886054080873962)&(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1391038022 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (('LsB8썚6H!n')LIKE(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0.14891774070519415)))AND((((0.9346911771127652)) BETWEEN ((NULL)) AND ((NULL))))))AND(((((0.13803880075303343)OR(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffc271d345)||((('''**[')|('439529040')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=956039988 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.9000965235695803)<>('-368259320')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))<>((-1587451923)))))<((NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((NULL)OR(x'')))OR('-1269205909')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('1918675465')) IN (CAST('>1檆}' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1080999649)/(0.7321107671100576)))GLOB(((NULL) IS TRUE))); -- 5ms;
DELETE FROM sqlite_stat1 WHERE ((('eg' IN (1741795428, '2099830359')))GLOB(-1.082878448E9 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.19931932739787261  WHEN 'Y' THEN x'7778' WHEN NULL THEN NULL WHEN '6' THEN 0.5133058692032848 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.0033335177878178746)<=(NULL)), 0.6212028296289202, ((NULL) IS FALSE)))<>(((NOT ('472445469')), CASE WHEN x'' THEN '-1790370323' WHEN 'Y' THEN '0.1451477968573328' WHEN '715265511' THEN 'FJFh.' ELSE 'TvBjZC?' END, ((NULL)IS NOT('551254735'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1437418687') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=849051319'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '258628154 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((1.08060476E9) NOTNULL), (('3#Xb') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-684260679 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1759274434 1373214818 sz=-1628853157 unordered noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1917207418 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'8fe2') NOT BETWEEN (NULL) AND (-2072732762)))AND(NULLIF(DISTINCT NULL, '-67126582'))))OR(TYPEOF(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -1975850313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1519637499') BETWEEN ('623773024') AND (NULL)))OR(('-1218357368' IN ()))))AND(((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS FALSE); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-319442156 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2095942217 sz=-1843487103 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1418796115' IN ('-926826690')))AND((x'' IN ()))))AND(((x'')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1745602653 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1466692673 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 -532212588'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-848052300 -1044428641 sz=-1760364939'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2073972410 -119555964 sz=-1975850313 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((UPPER(x''), ((-9.18507397E8)>('x\ns^Yao')), (((x'3253'))<=((260210421)))))<((CASE x'c5e1'  WHEN NULL THEN 0.7965718228586987 WHEN '[8W6.>' THEN 0.5667396353585904 WHEN NULL THEN 'RW}m,' ELSE x'' END, ((4.37556034E8)-(0.4948435527409588)), CAST(0.6800017428612404 AS INTEGER)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1381577188 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-647890151 sz=-915603214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '806481724 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1121101328 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=532167484'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'cd21')))AND(((NULL) NOT BETWEEN (0.665270906501091) AND (-1.375990786E9)))))AND((('')<=(0X3c228fbf)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')>=(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-1525082428 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1322537363 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.9175249799534219 IN ()))<=(((x'')+(x'10df')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6140780806167494) NOTNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1955470773 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1053941231 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1853962649 sz=11865091 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1683320970 -304408343 sz=247366206 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-110146696 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1683040979 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '9223372036854775807 sz=-42352100 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1179446108', x'', -9223372036854775808))>=(('312622555', -1139958025, -2055726001))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)IS NOT(NULL)) THEN UPPER('') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('64948444')) BETWEEN ((LOWER('1'))) AND ((CASE WHEN '1846582027' THEN 2.126172281E9 WHEN '-2095942217' THEN 0.9760799647767887 WHEN NULL THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2003964560 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('398464580') NOT BETWEEN (x'') AND ('437556034')))<=(x'' COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('8a(Iv')==(CAST('391810428' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'435a') NOT BETWEEN (NULL) AND (x'41dcb5f5')))) AND (((('q ꥲ')|(0.592082398646245))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((('1256308136'))>(('q}')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=310202136 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0.4218372061870015)) AND (('731T860:973 122:'))))<(0.8221787726772302 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-60117438'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=590100085 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=904801899'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(0.7791928045405515)))OR((~ (NULL)))))OR(NULL)))AND(((('')) NOT BETWEEN ((NULL)) AND ((9.912555278897006E-4))))))AND((+ ('9wi*	w	')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1671006312 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (-2095942217)))AND((0.8100376377412655 IN ()))))OR((('1225648170')>=('')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(0xffffffffccde39c0 AS INTEGER) THEN CASE 2.126172281E9  WHEN NULL THEN x'' ELSE 0.479408732076416 END WHEN (NULL IN ()) THEN LTRIM(NULL) WHEN (((1949884756)) BETWEEN (('jA+')) AND ((0xffffffff8291ea89))) THEN ((0Xffffffff8130ae0f) BETWEEN (NULL) AND ('2104021271')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=893823186 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7667511594709234) NOT BETWEEN (-1015647831) AND (0x534fbeef)))OR(8.66465549E8 COLLATE NOCASE)))AND(((x'')>(-1876561178)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<('-1338079602'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.030737084500713996) NOT BETWEEN ('10''g5') AND ('1256308136')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2095942217 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (- (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1553355694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('827225255')!=('1050107644')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=NULL WHERE CAST(x'' AS REAL); -- 0ms;
UPDATE OR FAIL vt1 SET (c1)=('-159840954'); -- 0ms;
ANALYZE; -- 5ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1(c1) VALUES (NULL); -- 7ms;
INSERT OR ABORT INTO vt0 VALUES (0xffffffffff9e1954); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=1.896166369E9 WHERE CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-1.96708142E9), (''), (''); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=('-1437418687'); -- 1ms;
UPDATE vt0 SET (c0)=(NULL) WHERE (- (vt0.c0)) COLLATE BINARY; -- 1ms;
UPDATE vt1 SET (c0, c0)=(-2.41675078E8, 0Xffffffffbc0d9ef7) WHERE ((((vt1.c0)<<(vt1.c1))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND ((vt1.c1 IN ()))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -987484547);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1, c0)=(0.5184703063636443, 0X23545f31, NULL) WHERE CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) END; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('-592284796'); -- 0ms;
INSERT OR ABORT INTO vt1(c0, c1) VALUES (NULL, 0.11006602477961813); -- 14ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.025229040805885172); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('2142311830'); -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -332243761);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46012'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1432048191);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2054885011,11');\n; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'6a38'; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 777297609); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '57789'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=441717251,3');\n; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 REAL COLLATE RTRIM ); -- 0ms;
COMMIT TRANSACTION; -- 5ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.713624906155339); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL); -- 6ms;
UPDATE OR ABORT t0 SET c0=0.9883845695273007, c0='', c0=x''; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-246724587 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, 'o.', vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))OR((vt0.c0 IN (vt0.c0)))))OR(vt0.c0 COLLATE BINARY)); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.18702821218298682'); -- 5ms;
UPDATE vt0 SET c0='-1786334446' WHERE ((LOWER(vt0.c0)) BETWEEN (((vt0.c0)!=(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 2ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA wal_checkpoint(RESTART); -- 4ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('0.5767120664327472'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t0 SET c0=0.7435754453591148; -- 0ms;
INSERT OR FAIL INTO vt1(c1, c0) VALUES (NULL, ''), (0Xffffffff8a54c70a, '^8tmE'), (NULL, x'4929'), (1292996285, 0X7c9bdbe5), (NULL, ''); -- 1ms;
PRAGMA mmap_size; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=NULL WHERE CAST(((vt1.c1)!=(vt1.c0)) AS NUMERIC); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40945'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA stats; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (NULL)) COLLATE RTRIM; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.33477967592495506, c0=x''; -- 3ms;
INSERT OR FAIL INTO t0 VALUES (0Xffffffff981d485e); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x'3b65', NULL); -- 5ms;
UPDATE OR REPLACE vt0 SET (c0)=('3}mfG컰j['); -- 30ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 486399267); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('JzieMUN'); -- 5ms;
CREATE UNIQUE INDEX IF NOT EXISTS i49 ON t0(((((((c0))==((c0)))))<=((((((((((c0)OR(c0)))AND(c0)))AND(c0)))OR(c0)))))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c1, c0)=('1030462027', NULL) WHERE ((json_array_length(vt1.c0, vt1.c1)) BETWEEN (((vt1.c1) NOT NULL)) AND (CAST(vt1.c1 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0xffffffff8291ea89, c0=0.5963836855040934, c0=NULL WHERE vt1.c1 COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c1, c0)=(0x56db7fa2, 1710914623, 0.30048395521889637) WHERE (((((((vt1.c1, vt1.c0, '-918507397'))<>((-1288696551, vt1.c1, vt1.c1))))OR(((vt1.c1) ISNULL))))AND(((vt1.c0) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (0.54925412460738, NULL), (1.381577188E9, NULL), (2.096032742E9, 0.3987677132173888), (0.03762475463751347, '-1160300539'), ('-2121400034', 'cP5鑩gI.27'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (+ ((vt0.c0 IN ()))); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (NULL, '7'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (1423216402); -- 0ms;
COMMIT TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0xffffffffc1ea003f), (0Xffffffffe33812bb), (x''); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO vt1(c1) VALUES ('-2067863290'), ('-1135344695'), (0xffffffff8c8db127); -- 7ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), (0.5500719486719224), ('-1735127500'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61813'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '2862'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET c0=0.02320126102286557 WHERE ((((vt1.c0)OR(((vt1.c0)||(vt1.c1)))))OR(vt1.c0)); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 12ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(x'324f', '-2102067737'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'de19'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 601121913); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1460132356'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(0.5356843621170922) WHERE vt1.c0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 2ms;
UPDATE OR REPLACE vt1 SET (c1)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('+zN'); -- 0ms;
UPDATE OR FAIL vt1 SET (c1, c0)=(NULL, '0.10066556387101966'); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('+>'), (x''), ('yS# p'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('Y '); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=184543701; -- 1ms;
PRAGMA temp.ignore_check_constraints = true; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
CREATE INDEX IF NOT EXISTS i73 ON t0((((((''))<((c0)))) NOTNULL)); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('/\rkRN嫜j'), (x''), (NULL); -- 8ms;
INSERT OR ABORT INTO vt1 VALUES (0x1bdbe5b9, '2096032742'); -- 0ms;
COMMIT; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((~ (((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (STRFTIME(((((vt0.c0)AND(x'1bc6b8ba')))AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((((vt0.c0)AND(x'1bc6b8ba')))AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((+ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (STRFTIME(((((vt0.c0)AND(x'1bc6b8ba')))AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((((vt0.c0)AND(x'1bc6b8ba')))AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((+ (vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (STRFTIME(((((vt0.c0)AND(x'1bc6b8ba')))AND(vt0.c0)), ((vt0.c0)>(vt0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))||((+ (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((0xffffffffbe57f1d0)<(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, ((((- (vt0.c0)), (((vt0.c0))<=((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN 0.024807546368170397 END))>=((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '64948444')))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((0xffffffffbe57f1d0)<(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, ((((- (vt0.c0)), (((vt0.c0))<=((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN 0.024807546368170397 END))>=((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '64948444')))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((0xffffffffbe57f1d0)<(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, ((((- (vt0.c0)), (((vt0.c0))<=((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN 0.024807546368170397 END))>=((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '64948444')))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((0xffffffffbe57f1d0)<(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, ((((- (vt0.c0)), (((vt0.c0))<=((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN 0.024807546368170397 END))>=((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '64948444')))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((0xffffffffbe57f1d0)<(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, ((((- (vt0.c0)), (((vt0.c0))<=((vt0.c0))), CASE vt0.c0  WHEN vt0.c0 THEN 0.024807546368170397 END))>=((vt0.c0 COLLATE BINARY, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), '64948444')))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c0)>=(vt1.c1)) IN ())) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c1 END  WHEN (vt0.c0 IN (vt1.c1)) THEN ((((t0.c0)AND(vt1.c1)))AND(vt0.c0)) WHEN TRIM(vt0.c0) THEN UNLIKELY(DISTINCT vt1.c0) WHEN TYPEOF(vt0.c0) THEN (NOT (vt1.c1)) ELSE (((vt1.c0))<=((vt0.c0))) END  NULLS LAST, ((((('698076085', vt1.c1, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, -488024173, vt0.c0, t0.c0, t0.c0)))) BETWEEN ((- (-1139958025))) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c1 END  WHEN (vt0.c0 IN (vt1.c1)) THEN ((((t0.c0)AND(vt1.c1)))AND(vt0.c0)) WHEN TRIM(vt0.c0) THEN UNLIKELY(DISTINCT vt1.c0) WHEN TYPEOF(vt0.c0) THEN (NOT (vt1.c1)) ELSE (((vt1.c0))<=((vt0.c0))) END  NULLS LAST, ((((('698076085', vt1.c1, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, -488024173, vt0.c0, t0.c0, t0.c0)))) BETWEEN ((- (-1139958025))) AND (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c0)>=(vt1.c1)) IN ())) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c1 END  WHEN (vt0.c0 IN (vt1.c1)) THEN ((((t0.c0)AND(vt1.c1)))AND(vt0.c0)) WHEN TRIM(vt0.c0) THEN UNLIKELY(DISTINCT vt1.c0) WHEN TYPEOF(vt0.c0) THEN (NOT (vt1.c1)) ELSE (((vt1.c0))<=((vt0.c0))) END  NULLS LAST, ((((('698076085', vt1.c1, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, -488024173, vt0.c0, t0.c0, t0.c0)))) BETWEEN ((- (-1139958025))) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>=(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c1 END  WHEN (vt0.c0 IN (vt1.c1)) THEN ((((t0.c0)AND(vt1.c1)))AND(vt0.c0)) WHEN TRIM(vt0.c0) THEN UNLIKELY(DISTINCT vt1.c0) WHEN TYPEOF(vt0.c0) THEN (NOT (vt1.c1)) ELSE (((vt1.c0))<=((vt0.c0))) END  NULLS LAST, ((((('698076085', vt1.c1, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, -488024173, vt0.c0, t0.c0, t0.c0)))) BETWEEN ((- (-1139958025))) AND (CAST(vt0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((t0.c0)>=(vt1.c1)) IN ())) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c1 END  WHEN (vt0.c0 IN (vt1.c1)) THEN ((((t0.c0)AND(vt1.c1)))AND(vt0.c0)) WHEN TRIM(vt0.c0) THEN UNLIKELY(DISTINCT vt1.c0) WHEN TYPEOF(vt0.c0) THEN (NOT (vt1.c1)) ELSE (((vt1.c0))<=((vt0.c0))) END  NULLS LAST, ((((('698076085', vt1.c1, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, -488024173, vt0.c0, t0.c0, t0.c0)))) BETWEEN ((- (-1139958025))) AND (CAST(vt0.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (NULL IN ())  NULLS LAST, ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))!=(((t0.c0) NOTNULL))), 'y|w[';
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ())  NULLS LAST, ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<>(((t0.c0) NOTNULL))), 'y|w[');
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (NULL IN ())  NULLS LAST, ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))!=(((t0.c0) NOTNULL))), 'y|w[';
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ())  NULLS LAST, ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))<>(((t0.c0) NOTNULL))), 'y|w[');
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY (NULL IN ())  NULLS LAST, ((((t0.c0) BETWEEN (NULL) AND (t0.c0)))!=(((t0.c0) NOTNULL))), 'y|w[';
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0, (('㍜냻[-9-z' IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0, (('㍜냻[-9-z' IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0, (('㍜냻[-9-z' IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, t0 ORDER BY vt1.c0, (('㍜냻[-9-z' IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((vt1.c0 IN ())) ORDER BY vt1.c0, (('㍜냻[-9-z' IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY ((((vt1.c1) ISNULL)) NOT NULL)  NULLS LAST, (((vt1.c0 IN ()))!=(((((vt1.c1)OR(vt1.c1)))OR('4EꟉ-Z')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ORDER BY ((((vt1.c1) ISNULL)) NOT NULL)  NULLS LAST, (((vt1.c0 IN ()))!=(((((vt1.c1)OR(vt1.c1)))OR('4EꟉ-Z')))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY ((((vt1.c1) ISNULL)) NOT NULL)  NULLS LAST, (((vt1.c0 IN ()))!=(((((vt1.c1)OR(vt1.c1)))OR('4EꟉ-Z')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM ORDER BY ((((vt1.c1) ISNULL)) NOT NULL)  NULLS LAST, (((vt1.c0 IN ()))!=(((((vt1.c1)OR(vt1.c1)))OR('4EꟉ-Z')))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM WHERE ((((vt1.c1) NOT NULL) IN ())) ORDER BY ((((vt1.c1) ISNULL)) NOT NULL)  NULLS LAST, (((vt1.c0 IN ()))!=(((((vt1.c1)OR(vt1.c1)))OR('4EꟉ-Z')))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0)>(x''))) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt0.c0)>(x''))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0)>(x''))) AND (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (((vt0.c0)>(x''))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((vt0.c0)>(x''))) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 COLLATE BINARY))<=((t0.c0 COLLATE NOCASE)))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((NULL)IS NOT(t0.c0)) ELSE CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY))<=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((NULL)IS NOT(t0.c0)) ELSE CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 COLLATE BINARY))<=((t0.c0 COLLATE NOCASE)))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((NULL)IS NOT(t0.c0)) ELSE CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY))<=((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((NULL)IS NOT(t0.c0)) ELSE CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 COLLATE BINARY))<=((t0.c0 COLLATE NOCASE)))) ORDER BY CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN vt0.c0 THEN ((NULL)IS NOT(t0.c0)) ELSE CASE WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (COALESCE(((vt1.c0)>(vt1.c1)), ((t0.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c0)>(vt1.c1)), ((t0.c0)<<(t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (COALESCE(((vt1.c0)>(vt1.c1)), ((t0.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt1.c0)>(vt1.c1)), ((t0.c0)<<(t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON vt1.c0);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON vt1.c0 WHERE (COALESCE(((vt1.c0)>(vt1.c1)), ((t0.c0)<<(t0.c0))));
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((t0.c0)>=(x'')) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)>=(x'')) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((t0.c0)>=(x'')) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)>=(x'')) AS TEXT) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) ORDER BY CAST(((t0.c0)>=(x'')) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((((((- (vt1.c0)))OR((((vt0.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c1))<((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 IN (((x'') IS FALSE))) ASC  NULLS LAST, (((vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))OR((((vt0.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c1))<((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 IN (((x'') IS FALSE))) ASC  NULLS LAST, (((vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((- (vt1.c0)))OR((((vt0.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c1))<((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 IN (((x'') IS FALSE))) ASC  NULLS LAST, (((vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))OR((((vt0.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c1))<((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt1.c0 IN (((x'') IS FALSE))) ASC  NULLS LAST, (((vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((- (vt1.c0)))OR((((vt0.c0, vt1.c1, vt0.c0, vt1.c1, vt1.c1))<((vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (vt1.c0 IN (((x'') IS FALSE))) ASC  NULLS LAST, (((vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) ORDER BY vt0.c0  NULLS FIRST, (- ((+ ('1429071323')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (- ((+ ('1429071323')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) ORDER BY vt0.c0  NULLS FIRST, (- ((+ ('1429071323')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST, (- ((+ ('1429071323')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) ELSE vt0.c0 END) ORDER BY vt0.c0  NULLS FIRST, (- ((+ ('1429071323')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN '2126172281' THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '2126172281' THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((NULL))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN '2126172281' THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((NULL))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '2126172281' THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((NULL))) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN '2126172281' THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((NULL))) END);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))IS(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))IS(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM) ORDER BY (((t0.c0 IN ()))IS(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0))>((vt1.c1))) IN ())) ORDER BY (((((vt0.c0)>(vt1.c1))))>((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))>((vt1.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)>(vt1.c1))))>((NULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0))>((vt1.c1))) IN ())) ORDER BY (((((vt0.c0)>(vt1.c1))))>((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))>((vt1.c1))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)>(vt1.c1))))>((NULL))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0))>((vt1.c1))) IN ())) ORDER BY (((((vt0.c0)>(vt1.c1))))>((NULL)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(json_array(vt1.c0, vt1.c1) AS NUMERIC)) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END, ((vt0.c0)|(vt0.c0)), x''))<=((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_array(vt1.c0, vt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END, ((vt0.c0)|(vt0.c0)), x''))<=((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(json_array(vt1.c0, vt1.c1) AS NUMERIC)) ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END, ((vt0.c0)|(vt0.c0)), x''))<=((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json_array(vt1.c0, vt1.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt0.c0 END, ((vt0.c0)|(vt0.c0)), x''))<=((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt1.c1)), ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (json_array_length((t0.c0 IN ()), ((((t0.c0)AND(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((t0.c0 IN ()), ((((t0.c0)AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (json_array_length((t0.c0 IN ()), ((((t0.c0)AND(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((t0.c0 IN ()), ((((t0.c0)AND(vt1.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT ALL * FROM vt1, t0 INDEXED BY i49 WHERE ('1256308136');
SELECT SUM(count) FROM (SELECT ALL (('1256308136') IS TRUE)  as count FROM vt1, t0 INDEXED BY i49);
SELECT ALL * FROM vt1, t0 INDEXED BY i49 WHERE ('1256308136');
SELECT SUM(count) FROM (SELECT ALL (('1256308136') IS TRUE)  as count FROM vt1, t0 INDEXED BY i49);
SELECT ALL * FROM vt1, t0 INDEXED BY i49 WHERE ('1256308136');
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS TEXT) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS TEXT)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL) DESC;
SELECT ALL * FROM t0 WHERE ((((((t0.c0)|(t0.c0)), CAST(t0.c0 AS TEXT), UPPER(t0.c0)))>((json_valid(t0.c0), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR('')))OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)|(t0.c0)), CAST(t0.c0 AS TEXT), UPPER(t0.c0)))>((json_valid(t0.c0), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR('')))OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)|(t0.c0)), CAST(t0.c0 AS TEXT), UPPER(t0.c0)))>((json_valid(t0.c0), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR('')))OR(t0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)|(t0.c0)), CAST(t0.c0 AS TEXT), UPPER(t0.c0)))>((json_valid(t0.c0), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR('')))OR(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)|(t0.c0)), CAST(t0.c0 AS TEXT), UPPER(t0.c0)))>((json_valid(t0.c0), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(x'')))OR(t0.c0)), ((((((((t0.c0)AND(t0.c0)))OR('')))OR(t0.c0)))AND(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i73 WHERE (CASE ((vt0.c0)<>(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INDEXED BY i73);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i73 WHERE (CASE ((vt0.c0)<>(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)<>(vt0.c0))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt0 INDEXED BY i73);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) BETWEEN (t0.c0) AND ((('-1876561178')>>(t0.c0)))) WHERE (((CAST(t0.c0 AS BLOB))>>(((t0.c0) ISNULL)))) ORDER BY 0.42597078009324707 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))>>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) BETWEEN (t0.c0) AND ((('-1876561178')>>(t0.c0)))) ORDER BY 0.42597078009324707 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) BETWEEN (t0.c0) AND ((('-1876561178')>>(t0.c0)))) WHERE (((CAST(t0.c0 AS BLOB))>>(((t0.c0) ISNULL)))) ORDER BY 0.42597078009324707 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))>>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) BETWEEN (t0.c0) AND ((('-1876561178')>>(t0.c0)))) ORDER BY 0.42597078009324707 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((vt0.c0) BETWEEN (t0.c0) AND ((('-1876561178')>>(t0.c0)))) WHERE (((CAST(t0.c0 AS BLOB))>>(((t0.c0) ISNULL)))) ORDER BY 0.42597078009324707 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(NULL))) IS TRUE)) ORDER BY ((((vt1.c0) NOTNULL))==(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST, CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END ELSE ((((vt1.c1)OR(x'2e23')))OR(x'b7ab')) END, ((vt1.c1)/(0.3953936873047713))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>=(NULL))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST, CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END ELSE ((((vt1.c1)OR(x'2e23')))OR(x'b7ab')) END, ((vt1.c1)/(0.3953936873047713))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(NULL))) IS TRUE)) ORDER BY ((((vt1.c0) NOTNULL))==(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST, CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END ELSE ((((vt1.c1)OR(x'2e23')))OR(x'b7ab')) END, ((vt1.c1)/(0.3953936873047713))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>=(NULL))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST, CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END ELSE ((((vt1.c1)OR(x'2e23')))OR(x'b7ab')) END, ((vt1.c1)/(0.3953936873047713))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(NULL))) IS TRUE)) ORDER BY ((((vt1.c0) NOTNULL))==(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))  NULLS FIRST, CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END THEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END ELSE ((((vt1.c1)OR(x'2e23')))OR(x'b7ab')) END, ((vt1.c1)/(0.3953936873047713))  NULLS FIRST;
SELECT * FROM vt0 WHERE (rtreenode(((vt0.c0)<(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY 0Xffffffff8a3aeab7 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((vt0.c0)<(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffff8a3aeab7 ASC);
SELECT * FROM vt0 WHERE (rtreenode(((vt0.c0)<(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY 0Xffffffff8a3aeab7 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(((vt0.c0)<(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffff8a3aeab7 ASC);
SELECT * FROM vt0 WHERE (rtreenode(((vt0.c0)<(vt0.c0)), ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ORDER BY 0Xffffffff8a3aeab7 ASC;
SELECT * FROM vt0 WHERE (((((0.007507409224543515)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.007507409224543515)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.007507409224543515)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.007507409224543515)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((0.007507409224543515)OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) END ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((vt0.c0)OR(((vt0.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((vt0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((vt0.c0)OR(((vt0.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((vt0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((vt0.c0)OR(((vt0.c0)GLOB(vt1.c0)))));
SELECT * FROM vt0, t0, vt1 WHERE (CAST('[]' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('[]' AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST('[]' AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('[]' AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST('[]' AS BLOB));
SELECT * FROM vt0, vt1, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN (((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0))) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON IFNULL(DISTINCT CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, CAST(vt1.c1 AS NUMERIC)) WHERE (ABS(0.7452350416012675)) ORDER BY ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((ABS(0.7452350416012675)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON IFNULL(DISTINCT CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, CAST(vt1.c1 AS NUMERIC)) ORDER BY ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) COLLATE BINARY ASC);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON IFNULL(DISTINCT CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, CAST(vt1.c1 AS NUMERIC)) WHERE (ABS(0.7452350416012675)) ORDER BY ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((ABS(0.7452350416012675)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON IFNULL(DISTINCT CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, CAST(vt1.c1 AS NUMERIC)) ORDER BY ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) COLLATE BINARY ASC);
SELECT * FROM vt1 FULL OUTER JOIN t0 ON IFNULL(DISTINCT CASE WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END, CAST(vt1.c1 AS NUMERIC)) WHERE (ABS(0.7452350416012675)) ORDER BY ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt1.c0 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN (t0.c0)), ((vt1.c0)%(vt0.c0))) WHERE (((((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))OR(t0.c0))) ISNULL)) ORDER BY x'', (((vt0.c0 COLLATE BINARY, (((vt1.c1))<=((vt1.c1))), CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END))<(((t0.c0 IN ()), (NOT (t0.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.004192354659355857 WHEN vt1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt1.c0 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN (t0.c0)), ((vt1.c0)%(vt0.c0))) ORDER BY x'', (((vt0.c0 COLLATE BINARY, (((vt1.c1))<=((vt1.c1))), CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END))<(((t0.c0 IN ()), (NOT (t0.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.004192354659355857 WHEN vt1.c0 THEN t0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt1.c0 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN (t0.c0)), ((vt1.c0)%(vt0.c0))) WHERE (((((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))OR(t0.c0))) ISNULL)) ORDER BY x'', (((vt0.c0 COLLATE BINARY, (((vt1.c1))<=((vt1.c1))), CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END))<(((t0.c0 IN ()), (NOT (t0.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.004192354659355857 WHEN vt1.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt1.c0 FULL OUTER JOIN vt1 ON json_remove((vt1.c0 IN (t0.c0)), ((vt1.c0)%(vt0.c0))) ORDER BY x'', (((vt0.c0 COLLATE BINARY, (((vt1.c1))<=((vt1.c1))), CASE t0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END))<(((t0.c0 IN ()), (NOT (t0.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.004192354659355857 WHEN vt1.c0 THEN t0.c0 END))));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN LTRIM(vt1.c1) WHEN ((vt1.c1) IS TRUE) THEN NULLIF(DISTINCT vt1.c1, vt0.c0) WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((x'654f')AND(vt1.c0)))AND(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN LTRIM(vt1.c1) WHEN ((vt1.c1) IS TRUE) THEN NULLIF(DISTINCT vt1.c1, vt0.c0) WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END ORDER BY CAST(((((x'654f')AND(vt1.c0)))AND(vt1.c0)) AS INTEGER));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN LTRIM(vt1.c1) WHEN ((vt1.c1) IS TRUE) THEN NULLIF(DISTINCT vt1.c1, vt0.c0) WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((x'654f')AND(vt1.c0)))AND(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN LTRIM(vt1.c1) WHEN ((vt1.c1) IS TRUE) THEN NULLIF(DISTINCT vt1.c1, vt0.c0) WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END ORDER BY CAST(((((x'654f')AND(vt1.c0)))AND(vt1.c0)) AS INTEGER));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))  WHEN ((vt0.c0)<(vt0.c0)) THEN LTRIM(vt1.c1) WHEN ((vt1.c1) IS TRUE) THEN NULLIF(DISTINCT vt1.c1, vt0.c0) WHEN ((vt0.c0)+(vt1.c0)) THEN (vt0.c0 IN ()) END WHERE (((CAST(vt1.c0 AS BLOB)) ISNULL)) ORDER BY CAST(((((x'654f')AND(vt1.c0)))AND(vt1.c0)) AS INTEGER);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)|(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)|(vt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt1.c1)|(vt1.c1)) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) END  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) END  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) END  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) END  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c0)))-(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY CASE (t0.c0 IN (t0.c0, t0.c0))  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)<=(t0.c0)) END  NULLS LAST, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('>[') NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('>[') NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('>[') NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('>[') NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('>[') NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND ((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC;
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE ((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0)AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))=((((vt1.c1)%(vt1.c1)), LIKELY(vt1.c0), ((vt0.c0)-(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0)AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))=((((vt1.c1)%(vt1.c1)), LIKELY(vt1.c0), ((vt0.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE ((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0)AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))=((((vt1.c1)%(vt1.c1)), LIKELY(vt1.c0), ((vt0.c0)-(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0)AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))=((((vt1.c1)%(vt1.c1)), LIKELY(vt1.c0), ((vt0.c0)-(vt1.c0)))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE ((((CASE vt1.c1  WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0)AND(vt1.c0)), CAST(vt1.c0 AS BLOB)))=((((vt1.c1)%(vt1.c1)), LIKELY(vt1.c0), ((vt0.c0)-(vt1.c0))))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOTNULL) WHERE ((((((x'' IN ()))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC, SUBSTR(((t0.c0)GLOB(vt0.c0)), CAST(NULL AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'' IN ()))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOTNULL) ORDER BY x'' ASC, SUBSTR(((t0.c0)GLOB(vt0.c0)), CAST(NULL AS TEXT))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOTNULL) WHERE ((((((x'' IN ()))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC, SUBSTR(((t0.c0)GLOB(vt0.c0)), CAST(NULL AS TEXT))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'' IN ()))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOTNULL) ORDER BY x'' ASC, SUBSTR(((t0.c0)GLOB(vt0.c0)), CAST(NULL AS TEXT))  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOTNULL) WHERE ((((((x'' IN ()))AND(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(t0.c0)))OR(vt0.c0))))) ORDER BY x'' ASC, SUBSTR(((t0.c0)GLOB(vt0.c0)), CAST(NULL AS TEXT))  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON MIN(NULL, vt1.c0) COLLATE RTRIM WHERE (((((vt0.c0)IS NOT(vt1.c1)))LIKE(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt1.c1)))LIKE(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON MIN(NULL, vt1.c0) COLLATE RTRIM ORDER BY ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON MIN(NULL, vt1.c0) COLLATE RTRIM WHERE (((((vt0.c0)IS NOT(vt1.c1)))LIKE(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt1.c1)))LIKE(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON MIN(NULL, vt1.c0) COLLATE RTRIM ORDER BY ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON MIN(NULL, vt1.c0) COLLATE RTRIM WHERE (((((vt0.c0)IS NOT(vt1.c1)))LIKE(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM WHERE (MIN((+ (vt1.c0)), ((t0.c0)>=(vt0.c0)), t0.c0, ((vt0.c0)<(vt0.c0)))) ORDER BY (NOT (((0.07362923507952712) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((MIN((+ (vt1.c0)), ((t0.c0)>=(vt0.c0)), t0.c0, ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM ORDER BY (NOT (((0.07362923507952712) IS TRUE))));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM WHERE (MIN((+ (vt1.c0)), ((t0.c0)>=(vt0.c0)), t0.c0, ((vt0.c0)<(vt0.c0)))) ORDER BY (NOT (((0.07362923507952712) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((MIN((+ (vt1.c0)), ((t0.c0)>=(vt0.c0)), t0.c0, ((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM ORDER BY (NOT (((0.07362923507952712) IS TRUE))));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM WHERE (MIN((+ (vt1.c0)), ((t0.c0)>=(vt0.c0)), t0.c0, ((vt0.c0)<(vt0.c0)))) ORDER BY (NOT (((0.07362923507952712) IS TRUE)));
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY (((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0)))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<(((vt0.c0)<<(vt0.c0))))) ORDER BY (CAST(vt0.c0 AS REAL) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((- (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((- (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((- (t0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))AND(NULL)))AND((((x'c5d8', t0.c0, t0.c0))<((t0.c0, x'', t0.c0)))))) ORDER BY ((((t0.c0)IS NOT(NULL)))>=(t0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND(NULL)))AND((((x'c5d8', t0.c0, t0.c0))<((t0.c0, x'', t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(NULL)))>=(t0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))AND(NULL)))AND((((x'c5d8', t0.c0, t0.c0))<((t0.c0, x'', t0.c0)))))) ORDER BY ((((t0.c0)IS NOT(NULL)))>=(t0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))AND(NULL)))AND((((x'c5d8', t0.c0, t0.c0))<((t0.c0, x'', t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(NULL)))>=(t0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((~ (t0.c0)))AND(NULL)))AND((((x'c5d8', t0.c0, t0.c0))<((t0.c0, x'', t0.c0)))))) ORDER BY ((((t0.c0)IS NOT(NULL)))>=(t0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS REAL) WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LOWER(DISTINCT LIKELIHOOD(vt1.c0, 0.5039107684187105))) ORDER BY '''5';
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT LIKELIHOOD(vt1.c0, 0.5039107684187105))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY '''5');
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LOWER(DISTINCT LIKELIHOOD(vt1.c0, 0.5039107684187105))) ORDER BY '''5';
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT LIKELIHOOD(vt1.c0, 0.5039107684187105))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY '''5');
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (LOWER(DISTINCT LIKELIHOOD(vt1.c0, 0.5039107684187105))) ORDER BY '''5';
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((((((((0.17523415711518098)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)*(vt0.c0))  WHEN ((((((((0.17523415711518098)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((((((((0.17523415711518098)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)*(vt0.c0))  WHEN ((((((((0.17523415711518098)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN ((((((((0.17523415711518098)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ((t0.c0 IN (t0.c0))))) ORDER BY (((t0.c0) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) NOT NULL) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ((t0.c0 IN (t0.c0))))) ORDER BY (((t0.c0) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) NOT NULL) IN ()) DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ((t0.c0 IN (t0.c0))))) ORDER BY (((t0.c0) NOT NULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NOT (vt0.c0)) IN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY x'' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NOT (vt0.c0)) IN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY x'' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'' COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((NOT (vt0.c0)) IN (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1))))) ORDER BY x'' COLLATE BINARY ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)>(vt1.c0)))IS(NULLIF(vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt1.c0)))IS(NULLIF(vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)>(vt1.c0)))IS(NULLIF(vt1.c0, vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt1.c0)))IS(NULLIF(vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((vt0.c0)>(vt1.c0)))IS(NULLIF(vt1.c0, vt1.c1))));
SELECT COUNT(*) FROM t0 WHERE ((+ (504842237))) ORDER BY (~ ((NOT (t0.c0)))) ASC  NULLS LAST, (('402023396' IN ()) IN (((t0.c0) ISNULL), CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ (504842237))) IS TRUE)  as count FROM t0 ORDER BY (~ ((NOT (t0.c0)))) ASC  NULLS LAST, (('402023396' IN ()) IN (((t0.c0) ISNULL), CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0 WHERE ((+ (504842237))) ORDER BY (~ ((NOT (t0.c0)))) ASC  NULLS LAST, (('402023396' IN ()) IN (((t0.c0) ISNULL), CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((+ (504842237))) IS TRUE)  as count FROM t0 ORDER BY (~ ((NOT (t0.c0)))) ASC  NULLS LAST, (('402023396' IN ()) IN (((t0.c0) ISNULL), CAST(t0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0 WHERE ((+ (504842237))) ORDER BY (~ ((NOT (t0.c0)))) ASC  NULLS LAST, (('402023396' IN ()) IN (((t0.c0) ISNULL), CAST(t0.c0 AS NUMERIC)));
SELECT * FROM vt1 INDEXED BY i49, t0 WHERE (((vt1.c0 COLLATE BINARY)*(RTRIM(vt1.c0)))) ORDER BY (((+ (vt1.c0))) BETWEEN ((t0.c0 IN ())) AND ((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)*(RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i49, t0 ORDER BY (((+ (vt1.c0))) BETWEEN ((t0.c0 IN ())) AND ((~ (vt1.c0)))) DESC);
SELECT * FROM vt1 INDEXED BY i49, t0 WHERE (((vt1.c0 COLLATE BINARY)*(RTRIM(vt1.c0)))) ORDER BY (((+ (vt1.c0))) BETWEEN ((t0.c0 IN ())) AND ((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)*(RTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 INDEXED BY i49, t0 ORDER BY (((+ (vt1.c0))) BETWEEN ((t0.c0 IN ())) AND ((~ (vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('');
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c0)&(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0, vt1 WHERE ('1519637499') ORDER BY ((((289460015)AND(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1519637499') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((289460015)AND(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ('1519637499') ORDER BY ((((289460015)AND(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1519637499') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((289460015)AND(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ('1519637499') ORDER BY ((((289460015)AND(vt1.c1)))OR(vt1.c0)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TRIM(DISTINCT ((0.12257829253996555)AND(vt1.c1)), ((t0.c0)<<(vt0.c0))) INNER JOIN vt1 ON (- (((vt0.c0)LIKE(vt1.c1)))) WHERE (ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON TRIM(DISTINCT ((0.12257829253996555)AND(vt1.c1)), ((t0.c0)<<(vt0.c0))) INNER JOIN vt1 ON (- (((vt0.c0)LIKE(vt1.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TRIM(DISTINCT ((0.12257829253996555)AND(vt1.c1)), ((t0.c0)<<(vt0.c0))) INNER JOIN vt1 ON (- (((vt0.c0)LIKE(vt1.c1)))) WHERE (ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON TRIM(DISTINCT ((0.12257829253996555)AND(vt1.c1)), ((t0.c0)<<(vt0.c0))) INNER JOIN vt1 ON (- (((vt0.c0)LIKE(vt1.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON TRIM(DISTINCT ((0.12257829253996555)AND(vt1.c1)), ((t0.c0)<<(vt0.c0))) INNER JOIN vt1 ON (- (((vt0.c0)LIKE(vt1.c1)))) WHERE (ABS(DISTINCT CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END));
SELECT * FROM vt0 WHERE (2.099830359E9);
SELECT SUM(count) FROM (SELECT ALL ((2.099830359E9) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (2.099830359E9);
SELECT SUM(count) FROM (SELECT ALL ((2.099830359E9) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (2.099830359E9);
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST((- (vt1.c0)) AS REAL) WHERE (((((((vt0.c0)OR(x'')))AND(vt1.c1)))%(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND(vt1.c1)))%(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST((- (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST((- (vt1.c0)) AS REAL) WHERE (((((((vt0.c0)OR(x'')))AND(vt1.c1)))%(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(x'')))AND(vt1.c1)))%(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST((- (vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST((- (vt1.c0)) AS REAL) WHERE (((((((vt0.c0)OR(x'')))AND(vt1.c1)))%(vt1.c0)));
SELECT * FROM vt1 WHERE ((((NULL))<=((((vt1.c0) BETWEEN (vt1.c1) AND (0x2b94b337))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt1.c0) BETWEEN (vt1.c1) AND (0x2b94b337)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NULL))<=((((vt1.c0) BETWEEN (vt1.c1) AND (0x2b94b337))))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((((vt1.c0) BETWEEN (vt1.c1) AND (0x2b94b337)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NULL))<=((((vt1.c0) BETWEEN (vt1.c1) AND (0x2b94b337))))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END, SQLITE_VERSION());
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END, SQLITE_VERSION());
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN vt0.c0 ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END, SQLITE_VERSION();
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (CASE WHEN vt1.c1 THEN vt0.c0 ELSE t0.c0 END)));
SELECT * FROM t0, vt0 WHERE (CASE (((vt0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))  WHEN CAST(',i' AS INTEGER) THEN t0.c0 END) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))  WHEN CAST(',i' AS INTEGER) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0);
SELECT * FROM t0, vt0 WHERE (CASE (((vt0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))  WHEN CAST(',i' AS INTEGER) THEN t0.c0 END) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0, t0.c0, t0.c0))<>((t0.c0, t0.c0, t0.c0)))  WHEN CAST(',i' AS INTEGER) THEN t0.c0 END) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c0);
SELECT * FROM t0, vt0 WHERE (CASE (((vt0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c0, t0.c0)))  WHEN CAST(',i' AS INTEGER) THEN t0.c0 END) ORDER BY t0.c0;
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS BLOB) WHERE (CASE WHEN CAST(vt1.c1 AS REAL) THEN (vt1.c1 IN (vt0.c0, vt1.c1)) WHEN ((((((((t0.c0)AND('')))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CAST(vt1.c1 AS REAL) WHEN DATETIME(vt1.c0, vt0.c0, t0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt1.c0)OR(vt1.c1)))OR('[{j')))OR(vt1.c1)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c1 AS REAL) THEN (vt1.c1 IN (vt0.c0, vt1.c1)) WHEN ((((((((t0.c0)AND('')))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CAST(vt1.c1 AS REAL) WHEN DATETIME(vt1.c0, vt0.c0, t0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt1.c0)OR(vt1.c1)))OR('[{j')))OR(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS BLOB) WHERE (CASE WHEN CAST(vt1.c1 AS REAL) THEN (vt1.c1 IN (vt0.c0, vt1.c1)) WHEN ((((((((t0.c0)AND('')))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CAST(vt1.c1 AS REAL) WHEN DATETIME(vt1.c0, vt0.c0, t0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt1.c0)OR(vt1.c1)))OR('[{j')))OR(vt1.c1)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c1 AS REAL) THEN (vt1.c1 IN (vt0.c0, vt1.c1)) WHEN ((((((((t0.c0)AND('')))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CAST(vt1.c1 AS REAL) WHEN DATETIME(vt1.c0, vt0.c0, t0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt1.c0)OR(vt1.c1)))OR('[{j')))OR(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON CAST(t0.c0 COLLATE BINARY AS BLOB) WHERE (CASE WHEN CAST(vt1.c1 AS REAL) THEN (vt1.c1 IN (vt0.c0, vt1.c1)) WHEN ((((((((t0.c0)AND('')))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c0)) THEN CAST(vt1.c1 AS REAL) WHEN DATETIME(vt1.c0, vt0.c0, t0.c0) THEN vt0.c0 COLLATE BINARY ELSE ((((((((vt1.c0)OR(vt1.c1)))OR('[{j')))OR(vt1.c1)))OR(vt1.c0)) END);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt1.c1, vt1.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt1.c1, vt1.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt1.c1, vt1.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt1.c1, vt1.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((vt1.c1) NOTNULL))AND((vt1.c1 IN (vt1.c1, vt1.c0)))))OR((~ (t0.c0)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE IFNULL(DISTINCT x'', vt0.c0)  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (NOT (t0.c0)) END) ORDER BY ((((CASE WHEN t0.c0 THEN vt1.c0 END)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT x'', vt0.c0)  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((CASE WHEN t0.c0 THEN vt1.c0 END)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE IFNULL(DISTINCT x'', vt0.c0)  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (NOT (t0.c0)) END) ORDER BY ((((CASE WHEN t0.c0 THEN vt1.c0 END)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT x'', vt0.c0)  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((CASE WHEN t0.c0 THEN vt1.c0 END)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE IFNULL(DISTINCT x'', vt0.c0)  WHEN ((vt0.c0)-(vt1.c0)) THEN CAST(vt1.c1 AS INTEGER) ELSE (NOT (t0.c0)) END) ORDER BY ((((CASE WHEN t0.c0 THEN vt1.c0 END)AND(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) END) ORDER BY ((((vt1.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('|<') NOT BETWEEN (vt1.c1) AND (x''))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('|<') NOT BETWEEN (vt1.c1) AND (x''))) IS TRUE));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) END) ORDER BY ((((vt1.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('|<') NOT BETWEEN (vt1.c1) AND (x''))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('|<') NOT BETWEEN (vt1.c1) AND (x''))) IS TRUE));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) END) ORDER BY ((((vt1.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((('|<') NOT BETWEEN (vt1.c1) AND (x''))) IS TRUE);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt0.c0);
SELECT * FROM vt0, vt1 WHERE ('0.10066556387101966') ORDER BY RTRIM((- (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.10066556387101966') IS TRUE)  as count FROM vt0, vt1 ORDER BY RTRIM((- (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ('0.10066556387101966') ORDER BY RTRIM((- (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.10066556387101966') IS TRUE)  as count FROM vt0, vt1 ORDER BY RTRIM((- (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ('0.10066556387101966') ORDER BY RTRIM((- (vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) ISNULL))) WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY (- (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) ISNULL))) ORDER BY (- (x''))  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) ISNULL))) WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY (- (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) ISNULL))) ORDER BY (- (x''))  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ (((vt0.c0) ISNULL))) WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((CASE vt1.c1  WHEN vt0.c0 THEN vt1.c0 END)))) ORDER BY (- (x''))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(x'8eb9')))OR(t0.c0)) AS TEXT)) ORDER BY ((x'') BETWEEN ('64948444') AND (((t0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(x'8eb9')))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((x'') BETWEEN ('64948444') AND (((t0.c0) IS FALSE)))  NULLS FIRST, NULL);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(x'8eb9')))OR(t0.c0)) AS TEXT)) ORDER BY ((x'') BETWEEN ('64948444') AND (((t0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(x'8eb9')))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((x'') BETWEEN ('64948444') AND (((t0.c0) IS FALSE)))  NULLS FIRST, NULL);
SELECT COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(x'8eb9')))OR(t0.c0)) AS TEXT)) ORDER BY ((x'') BETWEEN ('64948444') AND (((t0.c0) IS FALSE)))  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c0))!=((vt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<>((vt1.c1))) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c0))!=((vt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))<>((vt1.c1))) IN ())) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c0))!=((vt1.c1))) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('d#P7-J但' COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('d#P7-J但' COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('d#P7-J但' COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT (((('d#P7-J但' COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('d#P7-J但' COLLATE BINARY) IS FALSE));
SELECT * FROM vt1, vt0, t0 WHERE (((((x'18d7')OR(t0.c0)))AND((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'18d7')OR(t0.c0)))AND((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((((x'18d7')OR(t0.c0)))AND((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((x'18d7')OR(t0.c0)))AND((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((((x'18d7')OR(t0.c0)))AND((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL)) ORDER BY t0.c0 ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'd5cd');
SELECT SUM(count) FROM (SELECT ALL ((x'd5cd') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'd5cd');
SELECT SUM(count) FROM (SELECT ALL ((x'd5cd') IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (x'd5cd');
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0))) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(x'')))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(x'')))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0))) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(x'')))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(x'')))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(vt1.c0))) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(x'')))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) ELSE ((vt1.c0) IS TRUE) END);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)|(t0.c0))))) ORDER BY (((vt0.c0 IN ()))LIKE(('-2141764059' IN (0.23669013278544948)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))LIKE(('-2141764059' IN (0.23669013278544948)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)|(t0.c0))))) ORDER BY (((vt0.c0 IN ()))LIKE(('-2141764059' IN (0.23669013278544948)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))LIKE(('-2141764059' IN (0.23669013278544948)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((t0.c0)|(t0.c0))))) ORDER BY (((vt0.c0 IN ()))LIKE(('-2141764059' IN (0.23669013278544948)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((CAST(vt0.c0 AS REAL))>>(((t0.c0)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))>>(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((CAST(vt0.c0 AS REAL))>>(((t0.c0)<<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))>>(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN vt0 ON t0.c0 WHERE (((CAST(vt0.c0 AS REAL))>>(((t0.c0)<<(t0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (vt1.c1) AND (t0.c0))) ORDER BY (((((t0.c0)LIKE(vt1.c0)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, CAST(t0.c0 AS INTEGER), (t0.c0 IN (0X5e71c7cd, t0.c0)), ((('7r')) BETWEEN ((t0.c0)) AND (('398464580')))))=((CASE WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CASE WHEN t0.c0 THEN x'' ELSE 0.9476471414804044 END, vt1.c0 COLLATE BINARY, vt1.c1))) ASC, ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST, (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(((t0.c0)GLOB(vt1.c1)))))OR((((vt1.c1))<>((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c0)) NOT BETWEEN (vt1.c1) AND (t0.c0))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c0)LIKE(vt1.c0)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, CAST(t0.c0 AS INTEGER), (t0.c0 IN (0x5e71c7cd, t0.c0)), ((('7r')) BETWEEN ((t0.c0)) AND (('398464580')))))==((CASE WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CASE WHEN t0.c0 THEN x'' ELSE 0.9476471414804044 END, vt1.c0 COLLATE BINARY, vt1.c1))) ASC, ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST, (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(((t0.c0)GLOB(vt1.c1)))))OR((((vt1.c1))<>((vt1.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (vt1.c1) AND (t0.c0))) ORDER BY (((((t0.c0)LIKE(vt1.c0)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, CAST(t0.c0 AS INTEGER), (t0.c0 IN (0X5e71c7cd, t0.c0)), ((('7r')) BETWEEN ((t0.c0)) AND (('398464580')))))=((CASE WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CASE WHEN t0.c0 THEN x'' ELSE 0.9476471414804044 END, vt1.c0 COLLATE BINARY, vt1.c1))) ASC, ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST, (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(((t0.c0)GLOB(vt1.c1)))))OR((((vt1.c1))<>((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c0)) NOT BETWEEN (vt1.c1) AND (t0.c0))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((t0.c0)LIKE(vt1.c0)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, CAST(t0.c0 AS INTEGER), (t0.c0 IN (0x5e71c7cd, t0.c0)), ((('7r')) BETWEEN ((t0.c0)) AND (('398464580')))))==((CASE WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CASE WHEN t0.c0 THEN x'' ELSE 0.9476471414804044 END, vt1.c0 COLLATE BINARY, vt1.c1))) ASC, ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST, (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(((t0.c0)GLOB(vt1.c1)))))OR((((vt1.c1))<>((vt1.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (vt1.c1) AND (t0.c0))) ORDER BY (((((t0.c0)LIKE(vt1.c0)), CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END, CAST(t0.c0 AS INTEGER), (t0.c0 IN (0X5e71c7cd, t0.c0)), ((('7r')) BETWEEN ((t0.c0)) AND (('398464580')))))=((CASE WHEN vt1.c1 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c1, NULL, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))), CASE WHEN t0.c0 THEN x'' ELSE 0.9476471414804044 END, vt1.c0 COLLATE BINARY, vt1.c1))) ASC, ((CAST(vt1.c1 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOTNULL))) ASC  NULLS FIRST, (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))OR(((t0.c0)GLOB(vt1.c1)))))OR((((vt1.c1))<>((vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (~ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY t0.c0 ASC);
SELECT * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (~ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (~ (t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY t0.c0 ASC);
SELECT * FROM t0, vt1, vt0 WHERE (LOWER(DISTINCT (~ (t0.c0)))) ORDER BY t0.c0 ASC;
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c0 AS TEXT))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY LOWER(DISTINCT QUOTE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS TEXT))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY LOWER(DISTINCT QUOTE(vt1.c0))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c0 AS TEXT))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY LOWER(DISTINCT QUOTE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS TEXT))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, vt1 ORDER BY LOWER(DISTINCT QUOTE(vt1.c0))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE (((((CAST(t0.c0 AS TEXT))OR((t0.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC)))) ORDER BY LOWER(DISTINCT QUOTE(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'e1de' COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((x'e1de' COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'e1de' COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((x'e1de' COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'e1de' COLLATE RTRIM) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((~ (vt1.c0))))) ORDER BY ((((vt1.c0)AND(vt1.c0))) ISNULL);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (x'' IN ()) COLLATE BINARY WHERE (json_array(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) ORDER BY ((+ (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (x'' IN ()) COLLATE BINARY ORDER BY ((+ (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (x'' IN ()) COLLATE BINARY WHERE (json_array(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) ORDER BY ((+ (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (x'' IN ()) COLLATE BINARY ORDER BY ((+ (vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (x'' IN ()) COLLATE BINARY WHERE (json_array(CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END, (- (vt0.c0)))) ORDER BY ((+ (vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_extract(vt1.c1, 0.5667873747692452) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt1.c1, 0.5667873747692452) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (json_extract(vt1.c1, 0.5667873747692452) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(vt1.c1, 0.5667873747692452) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((json_array_length(vt0.c0)) NOT BETWEEN ((((vt0.c0))<(('8&㑦&q')))) AND (((x'') IS FALSE))) WHERE (((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))))AND((('xI')AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))))AND((('xI')AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((json_array_length(vt0.c0)) NOT BETWEEN ((((vt0.c0))<(('8&㑦&q')))) AND (((x'') IS FALSE))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((json_array_length(vt0.c0)) NOT BETWEEN ((((vt0.c0))<(('8&㑦&q')))) AND (((x'') IS FALSE))) WHERE (((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))))AND((('xI')AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))))AND((('xI')AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((json_array_length(vt0.c0)) NOT BETWEEN ((((vt0.c0))<(('8&㑦&q')))) AND (((x'') IS FALSE))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((json_array_length(vt0.c0)) NOT BETWEEN ((((vt0.c0))<(('8&㑦&q')))) AND (((x'') IS FALSE))) WHERE (((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)))))AND((('xI')AND(vt1.c1)))));
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY IFNULL(DISTINCT '2030653476', vt1.c0);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 ORDER BY IFNULL(DISTINCT '2030653476', vt1.c0));
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY IFNULL(DISTINCT '2030653476', vt1.c0);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM t0, vt1 ORDER BY IFNULL(DISTINCT '2030653476', vt1.c0));
SELECT * FROM t0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY IFNULL(DISTINCT '2030653476', vt1.c0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt1.c1)<(vt0.c0)))) AND (((NOT (vt0.c0)))))) ORDER BY (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)) IN (CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.6196824600007854 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((vt1.c1)<(vt0.c0)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)) IN (CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.6196824600007854 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt1.c1)<(vt0.c0)))) AND (((NOT (vt0.c0)))))) ORDER BY (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)) IN (CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.6196824600007854 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN ((((vt1.c1)<(vt0.c0)))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)) IN (CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.6196824600007854 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((((vt1.c1)<(vt0.c0)))) AND (((NOT (vt0.c0)))))) ORDER BY (((((((((t0.c0)AND(vt0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)) IN (CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN 0.6196824600007854 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (UPPER((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((- (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (UPPER((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((- (vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (UPPER((- (vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((vt1.c1)AND(t0.c0)))AND(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(t0.c0)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((vt1.c1)AND(t0.c0)))AND(vt1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(t0.c0)))AND(vt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((((vt1.c1)AND(t0.c0)))AND(vt1.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c0, 0.11775136697286159))) NOT BETWEEN (TYPEOF(t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0, 0.11775136697286159))) NOT BETWEEN (TYPEOF(t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c0, 0.11775136697286159))) NOT BETWEEN (TYPEOF(t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0, 0.11775136697286159))) NOT BETWEEN (TYPEOF(t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c0, 0.11775136697286159))) NOT BETWEEN (TYPEOF(t0.c0)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, vt1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('0)') ORDER BY (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c0)))OR(vt0.c0))))<=((vt1.c1))) ASC  NULLS LAST, ABS(NULL), CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0)') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c0)))OR(vt0.c0))))<=((vt1.c1))) ASC  NULLS LAST, ABS(NULL), CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('0)') ORDER BY (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c0)))OR(vt0.c0))))<=((vt1.c1))) ASC  NULLS LAST, ABS(NULL), CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0)') IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c0)))OR(vt0.c0))))<=((vt1.c1))) ASC  NULLS LAST, ABS(NULL), CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('0)') ORDER BY (((((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))AND(t0.c0)))OR(vt0.c0))))<=((vt1.c1))) ASC  NULLS LAST, ABS(NULL), CAST(((vt1.c0) NOTNULL) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((vt1.c0)*(0.9146141116299591)) COLLATE NOCASE WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((vt1.c0)*(0.9146141116299591)) COLLATE NOCASE ORDER BY vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((vt1.c0)*(0.9146141116299591)) COLLATE NOCASE WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((vt1.c0)*(0.9146141116299591)) COLLATE NOCASE ORDER BY vt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((vt1.c0)*(0.9146141116299591)) COLLATE NOCASE WHERE (vt1.c1) ORDER BY vt1.c0 COLLATE NOCASE;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TIME(t0.c0, UPPER(vt1.c1), ((((vt1.c0)OR(t0.c0)))AND(x'')), ((vt1.c0) ISNULL), NULL) WHERE ((('-1064956959') ISNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((((((((t0.c0) NOTNULL))AND((+ (vt1.c1)))))OR(HEX(DISTINCT vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1064956959') ISNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TIME(t0.c0, UPPER(vt1.c1), ((((vt1.c0)OR(t0.c0)))AND(x'')), ((vt1.c0) ISNULL), NULL) ORDER BY ((((((((((t0.c0) NOTNULL))AND((+ (vt1.c1)))))OR(HEX(DISTINCT vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TIME(t0.c0, UPPER(vt1.c1), ((((vt1.c0)OR(t0.c0)))AND(x'')), ((vt1.c0) ISNULL), NULL) WHERE ((('-1064956959') ISNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((((((((t0.c0) NOTNULL))AND((+ (vt1.c1)))))OR(HEX(DISTINCT vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1064956959') ISNULL) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON TIME(t0.c0, UPPER(vt1.c1), ((((vt1.c0)OR(t0.c0)))AND(x'')), ((vt1.c0) ISNULL), NULL) ORDER BY ((((((((((t0.c0) NOTNULL))AND((+ (vt1.c1)))))OR(HEX(DISTINCT vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON TIME(t0.c0, UPPER(vt1.c1), ((((vt1.c0)OR(t0.c0)))AND(x'')), ((vt1.c0) ISNULL), NULL) WHERE ((('-1064956959') ISNULL) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((((((((((t0.c0) NOTNULL))AND((+ (vt1.c1)))))OR(HEX(DISTINCT vt1.c1))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))AND(CAST(vt1.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c1 DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt1.c1)))AND(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY vt1.c1 DESC;
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i49, t0, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(NULL)))AND(vt1.c0)))) AND ((((x'') IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(NULL)))AND(vt1.c0)))) AND ((((x'') IS TRUE))))) IS TRUE)  as count FROM vt1 INDEXED BY i49, t0, vt0);
SELECT ALL COUNT(*) FROM vt1 INDEXED BY i49, t0, vt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(NULL)))AND(vt1.c0)))) AND ((((x'') IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((((vt1.c1)AND(NULL)))AND(vt1.c0)))) AND ((((x'') IS TRUE))))) IS TRUE)  as count FROM vt1 INDEXED BY i49, t0, vt0);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (((vt1.c1)LIKE(vt0.c0))))) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (((vt1.c1)LIKE(vt0.c0))))) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY t0.c0 COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((NOT (((vt1.c1)LIKE(vt0.c0))))) ORDER BY t0.c0 COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((((t0.c0)GLOB(vt1.c0)))&((- (vt0.c0))))) ORDER BY (- ((((vt1.c1, t0.c0, vt0.c0))<=((vt1.c1, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(vt1.c0)))&((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (- ((((vt1.c1, t0.c0, vt0.c0))<=((vt1.c1, vt1.c0, vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((((t0.c0)GLOB(vt1.c0)))&((- (vt0.c0))))) ORDER BY (- ((((vt1.c1, t0.c0, vt0.c0))<=((vt1.c1, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(vt1.c0)))&((- (vt0.c0))))) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY (- ((((vt1.c1, t0.c0, vt0.c0))<=((vt1.c1, vt1.c0, vt1.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((((t0.c0)GLOB(vt1.c0)))&((- (vt0.c0))))) ORDER BY (- ((((vt1.c1, t0.c0, vt0.c0))<=((vt1.c1, vt1.c0, vt1.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0) BETWEEN (NULL) AND (t0.c0))) AND (0.4440530329166873)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0) BETWEEN (NULL) AND (t0.c0))) AND (0.4440530329166873))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0) BETWEEN (NULL) AND (t0.c0))) AND (0.4440530329166873)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0) BETWEEN (NULL) AND (t0.c0))) AND (0.4440530329166873))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0) BETWEEN (NULL) AND (t0.c0))) AND (0.4440530329166873)));
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT ('R8+}b')) THEN CAST(vt0.c0 AS TEXT) END) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT ('R8+}b')) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt0.c0 IN ())) IS FALSE));
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT ('R8+}b')) THEN CAST(vt0.c0 AS TEXT) END) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT ('R8+}b')) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((vt0.c0 IN ())) IS FALSE));
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN (NOT ('R8+}b')) THEN CAST(vt0.c0 AS TEXT) END) ORDER BY (((vt0.c0 IN ())) IS FALSE);
SELECT * FROM t0, vt0 WHERE (((((((((t0.c0)AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN '-582247080' END)))OR(((t0.c0)/(t0.c0))))) ORDER BY HEX((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN '-582247080' END)))OR(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX((~ (vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((t0.c0)AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN '-582247080' END)))OR(((t0.c0)/(t0.c0))))) ORDER BY HEX((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN '-582247080' END)))OR(((t0.c0)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX((~ (vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((t0.c0)AND(vt0.c0)))OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN '-582247080' END)))OR(((t0.c0)/(t0.c0))))) ORDER BY HEX((~ (vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)%(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)%(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)%(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((((vt1.c1)OR(t0.c0)))OR(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(t0.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((((vt1.c1)OR(t0.c0)))OR(vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)OR(t0.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((((vt1.c1)OR(t0.c0)))OR(vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0, t0.c0)))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0, t0.c0)))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))GLOB((+ (vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE (((('1764447318')) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('1764447318')) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((('1764447318')) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((('1764447318')) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((('1764447318')) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE vt0.c0  WHEN 1.896166369E9 THEN vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (('0.1451477968573328') ISNULL) END) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE vt0.c0  WHEN 1.896166369E9 THEN vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (('0.1451477968573328') ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE vt0.c0  WHEN 1.896166369E9 THEN vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (('0.1451477968573328') ISNULL) END) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE vt0.c0  WHEN 1.896166369E9 THEN vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (('0.1451477968573328') ISNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((vt0.c0))) THEN CASE vt0.c0  WHEN 1.896166369E9 THEN vt0.c0 END WHEN ((vt0.c0)AND(vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE (('0.1451477968573328') ISNULL) END) ORDER BY CAST(((vt0.c0) NOT NULL) AS NUMERIC);
SELECT COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)<<(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(0.40574452427319574 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)<<(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(0.40574452427319574 AS INTEGER))));
SELECT COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)<<(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(0.40574452427319574 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)<<(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(0.40574452427319574 AS INTEGER))));
SELECT COUNT(*) FROM t0 WHERE ((~ (CAST(t0.c0 AS TEXT)))) ORDER BY ((((((t0.c0)<<(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(CAST(0.40574452427319574 AS INTEGER)));
SELECT * FROM vt1, t0 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((CAST(vt1.c1 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))AND('6E밓뭯.-')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(vt1.c1)))AND('6E밓뭯.-')) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))AND('6E밓뭯.-')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)AND(vt1.c1)))AND('6E밓뭯.-')) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c1)))AND('6E밓뭯.-')) AS TEXT));
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS REAL)) ORDER BY x'fadb' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY x'fadb' DESC);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS REAL)) ORDER BY x'fadb' DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY x'fadb' DESC);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS REAL)) ORDER BY x'fadb' DESC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)!=(vt1.c0)))) WHERE (DATE(((((vt1.c1)AND(0xffffffffcc30ed96)))AND(vt1.c1)), ((vt0.c0)&(vt1.c1)), (((vt0.c0))<((vt0.c0))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((DATE(((((vt1.c1)AND(0Xffffffffcc30ed96)))AND(vt1.c1)), ((vt0.c0)&(vt1.c1)), (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)<>(vt1.c0)))) ORDER BY (- (((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)!=(vt1.c0)))) WHERE (DATE(((((vt1.c1)AND(0xffffffffcc30ed96)))AND(vt1.c1)), ((vt0.c0)&(vt1.c1)), (((vt0.c0))<((vt0.c0))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((DATE(((((vt1.c1)AND(0Xffffffffcc30ed96)))AND(vt1.c1)), ((vt0.c0)&(vt1.c1)), (((vt0.c0))<((vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)<>(vt1.c0)))) ORDER BY (- (((vt0.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM) BETWEEN (TYPEOF(vt1.c0)) AND (((vt1.c0)!=(vt1.c0)))) WHERE (DATE(((((vt1.c1)AND(0xffffffffcc30ed96)))AND(vt1.c1)), ((vt0.c0)&(vt1.c1)), (((vt0.c0))<((vt0.c0))))) ORDER BY (- (((vt0.c0) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))))>((json_quote(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))))>((json_quote(NULL))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))))>((json_quote(NULL)))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))))>((json_quote(NULL))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))))>((json_quote(NULL)))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4c9e')))AND(vt1.c1)))>=(HEX(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4c9e')))AND(vt1.c1)))>=(HEX(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4c9e')))AND(vt1.c1)))>=(HEX(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4c9e')))AND(vt1.c1)))>=(HEX(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x'4c9e')))AND(vt1.c1)))>=(HEX(DISTINCT vt1.c1))));
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (((vt1.c0) NOTNULL))) WHERE ((((t0.c0 IN ())) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)GLOB((((vt1.c1))!=((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (((vt1.c0) NOTNULL))) ORDER BY vt1.c1 ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)GLOB((((vt1.c1))<>((t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (((vt1.c0) NOTNULL))) WHERE ((((t0.c0 IN ())) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)GLOB((((vt1.c1))!=((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<(vt1.c1))))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (((vt1.c0) NOTNULL))) ORDER BY vt1.c1 ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)GLOB((((vt1.c1))<>((t0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON (+ (((vt1.c0) NOTNULL))) WHERE ((((t0.c0 IN ())) NOT BETWEEN ((- (vt1.c0))) AND (((vt1.c0)<(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, ((t0.c0 COLLATE RTRIM)GLOB((((vt1.c1))!=((t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT vt0.c0));
SELECT ALL * FROM vt0 WHERE (0.6767341736520955);
SELECT SUM(count) FROM (SELECT ALL ((0.6767341736520955) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.6767341736520955);
SELECT SUM(count) FROM (SELECT ALL ((0.6767341736520955) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.6767341736520955);
SELECT * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) ISNULL)) NOT NULL));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) WHERE (x'77c21c5d') ORDER BY ((vt1.c0)<<(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'77c21c5d') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) ORDER BY ((vt1.c0)<<(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) WHERE (x'77c21c5d') ORDER BY ((vt1.c0)<<(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'77c21c5d') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) ORDER BY ((vt1.c0)<<(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c1) IS FALSE) WHERE (x'77c21c5d') ORDER BY ((vt1.c0)<<(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c1 END)) AND ((((vt1.c0)!=(vt1.c0)))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c1 END)) AND ((((vt1.c0)<>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c1 END)) AND ((((vt1.c0)!=(vt1.c0)))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c1 END)) AND ((((vt1.c0)<>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c1 END)) AND ((((vt1.c0)!=(vt1.c0)))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)<<(NULL))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<<(NULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)<<(NULL))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<<(NULL))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)<<(NULL))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((((((((vt0.c0)OR(0.28673643865125187)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0)))))OR(((2054885011) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(((((((((vt0.c0)OR(0.28673643865125187)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0)))))OR(((2054885011) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((((((((vt0.c0)OR(0.28673643865125187)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0)))))OR(((2054885011) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(((((((((vt0.c0)OR(0.28673643865125187)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0)))))OR(((2054885011) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(((((((((vt0.c0)OR(0.28673643865125187)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR((vt0.c0 IN ()))))OR(((vt0.c0)<=(vt0.c0)))))OR(((2054885011) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)+(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) CROSS JOIN t0 ON '1201422999' WHERE (STRFTIME(MAX(vt1.c1, vt1.c1, vt0.c0, vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(MAX(vt1.c1, vt1.c1, vt0.c0, vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)+(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) CROSS JOIN t0 ON '1201422999');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)+(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) CROSS JOIN t0 ON '1201422999' WHERE (STRFTIME(MAX(vt1.c1, vt1.c1, vt0.c0, vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((STRFTIME(MAX(vt1.c1, vt1.c1, vt0.c0, vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)+(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) CROSS JOIN t0 ON '1201422999');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c1 COLLATE RTRIM)+(((vt1.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) CROSS JOIN t0 ON '1201422999' WHERE (STRFTIME(MAX(vt1.c1, vt1.c1, vt0.c0, vt1.c0), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(t0.c0 AS INTEGER)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((NOT ((NOT (t0.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((NOT ((NOT (t0.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((NOT ((NOT (t0.c0))))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM t0, vt1 WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE, (~ (vt1.c0)))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c1 COLLATE NOCASE, (~ (vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE, (~ (vt1.c0)))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT vt1.c1 COLLATE NOCASE, (~ (vt1.c0)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (TRIM(DISTINCT vt1.c1 COLLATE NOCASE, (~ (vt1.c0)))) ORDER BY t0.c0  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS BLOB))) CROSS JOIN vt0 ON (((0xffffffffa2eaa064, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(0x1a1bb892)), x'939e' COLLATE NOCASE, ((x'7598') BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c1 AS NUMERIC))) AND (((('')LIKE(t0.c0)), QUOTE(NULL), CASE vt1.c0  WHEN t0.c0 THEN x'' END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1))))) WHERE ((('#KV,_{gx~') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('#KV,_{gx~') IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS BLOB))) CROSS JOIN vt0 ON (((0xffffffffa2eaa064, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(0X1a1bb892)), x'939e' COLLATE NOCASE, ((x'7598') BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c1 AS NUMERIC))) AND (((('')LIKE(t0.c0)), QUOTE(NULL), CASE vt1.c0  WHEN t0.c0 THEN x'' END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1))))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS BLOB))) CROSS JOIN vt0 ON (((0xffffffffa2eaa064, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(0x1a1bb892)), x'939e' COLLATE NOCASE, ((x'7598') BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c1 AS NUMERIC))) AND (((('')LIKE(t0.c0)), QUOTE(NULL), CASE vt1.c0  WHEN t0.c0 THEN x'' END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1))))) WHERE ((('#KV,_{gx~') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('#KV,_{gx~') IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS BLOB))) CROSS JOIN vt0 ON (((0xffffffffa2eaa064, vt0.c0, vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(0X1a1bb892)), x'939e' COLLATE NOCASE, ((x'7598') BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c1 AS NUMERIC))) AND (((('')LIKE(t0.c0)), QUOTE(NULL), CASE vt1.c0  WHEN t0.c0 THEN x'' END, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1 IN ()))<=(((t0.c0) IS TRUE)))) ORDER BY '-423830245' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))<=(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '-423830245' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1 IN ()))<=(((t0.c0) IS TRUE)))) ORDER BY '-423830245' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))<=(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY '-423830245' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1 IN ()))<=(((t0.c0) IS TRUE)))) ORDER BY '-423830245' ASC  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c1))!=((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1))!=((t0.c0))) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c1))!=((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1))!=((t0.c0))) IN ())) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (((((vt1.c1))!=((t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)>>(vt0.c0)))>=(((vt1.c1)GLOB(vt1.c1))))) ORDER BY CASE WHEN vt1.c1 THEN t0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0)))>=(((vt1.c1)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN vt1.c1 THEN t0.c0 END COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)>>(vt0.c0)))>=(((vt1.c1)GLOB(vt1.c1))))) ORDER BY CASE WHEN vt1.c1 THEN t0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>>(vt0.c0)))>=(((vt1.c1)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CASE WHEN vt1.c1 THEN t0.c0 END COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)>>(vt0.c0)))>=(((vt1.c1)GLOB(vt1.c1))))) ORDER BY CASE WHEN vt1.c1 THEN t0.c0 END COLLATE RTRIM DESC;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))!=((t0.c0))))LIKE((('-1964371603')%(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((t0.c0))))LIKE((('-1964371603')%(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))!=((t0.c0))))LIKE((('-1964371603')%(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((t0.c0))))LIKE((('-1964371603')%(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))!=((t0.c0))))LIKE((('-1964371603')%(vt1.c1)))));
SELECT ALL * FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (t0.c0);
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (+ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (+ ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END))) ORDER BY (+ ((+ (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY -1651595589, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY -1651595589, vt1.c1);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY -1651595589, vt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY -1651595589, vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt1.c1, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt1.c1, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((vt1.c1 IN (vt1.c1, vt1.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((x'')OR(vt1.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((((vt0.c0))<((x'3e66'))))) CROSS JOIN t0 ON t0.c0 WHERE (x'122c');
SELECT SUM(count) FROM (SELECT ALL ((x'122c') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((x'')OR(vt1.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((((vt0.c0))<((x'3e66'))))) CROSS JOIN t0 ON t0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((x'')OR(vt1.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((((vt0.c0))<((x'3e66'))))) CROSS JOIN t0 ON t0.c0 WHERE (x'122c');
SELECT SUM(count) FROM (SELECT ALL ((x'122c') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((x'')OR(vt1.c0))) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((((vt0.c0))<((x'3e66'))))) CROSS JOIN t0 ON t0.c0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7355408514637665);
SELECT SUM(count) FROM (SELECT ((0.7355408514637665) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7355408514637665);
SELECT SUM(count) FROM (SELECT ((0.7355408514637665) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7355408514637665);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)>>(((vt1.c1)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((vt1.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)>>(((vt1.c1)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((vt1.c1)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL)>>(((vt1.c1)IS NOT(vt1.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (x'') AND (t0.c0)))!=((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-2142910566')))OR(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (x'') AND (t0.c0)))!=((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-2142910566')))OR(t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (x'') AND (t0.c0)))!=((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-2142910566')))OR(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (x'') AND (t0.c0)))!=((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-2142910566')))OR(t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (x'') AND (t0.c0)))!=((+ (t0.c0))))) ORDER BY (((t0.c0)) NOT BETWEEN (((- (t0.c0)))) AND ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR('-2142910566')))OR(t0.c0))))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1910159602');
SELECT SUM(count) FROM (SELECT ALL (('-1910159602') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1910159602');
SELECT SUM(count) FROM (SELECT ALL (('-1910159602') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('-1910159602');
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)LIKE(t0.c0)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)LIKE(t0.c0)))), x'');
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)LIKE(t0.c0)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)LIKE(t0.c0)))), x'');
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))AND(t0.c0 COLLATE NOCASE)))OR(((t0.c0)<<(t0.c0)))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ORDER BY ((t0.c0 IN (t0.c0)) IN (((t0.c0)LIKE(t0.c0)))), x'';
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0)<<(t0.c0)) COLLATE BINARY) ORDER BY (((vt1.c1 IN ()))LIKE((((t0.c0))>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c1 IN ()))LIKE((((t0.c0))>((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0)<<(t0.c0)) COLLATE BINARY) ORDER BY (((vt1.c1 IN ()))LIKE((((t0.c0))>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt1.c1 IN ()))LIKE((((t0.c0))>((vt0.c0))))) DESC);
SELECT * FROM vt1, vt0, t0 WHERE (((vt0.c0)<<(t0.c0)) COLLATE BINARY) ORDER BY (((vt1.c1 IN ()))LIKE((((t0.c0))>((vt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((t0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((t0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((t0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((t0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c0)-(t0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(((t0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY CAST(x'fe2f' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'fe2f' AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY CAST(x'fe2f' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'fe2f' AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND ((((vt0.c0) ISNULL))))) ORDER BY CAST(x'fe2f' AS BLOB);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0)>(vt0.c0))) BETWEEN (((t0.c0)<>(t0.c0))) AND (((t0.c0)||(x''))))) ORDER BY CASE (('1286543114') BETWEEN (vt1.c0) AND (vt1.c1))  WHEN load_extension(vt0.c0) THEN -1833928815 ELSE ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0))) BETWEEN (((t0.c0)!=(t0.c0))) AND (((t0.c0)||(x''))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE (('1286543114') BETWEEN (vt1.c0) AND (vt1.c1))  WHEN load_extension(vt0.c0) THEN -1833928815 ELSE ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((vt0.c0)>(vt0.c0))) BETWEEN (((t0.c0)<>(t0.c0))) AND (((t0.c0)||(x''))))) ORDER BY CASE (('1286543114') BETWEEN (vt1.c0) AND (vt1.c1))  WHEN load_extension(vt0.c0) THEN -1833928815 ELSE ((vt0.c0) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c0))) BETWEEN (((t0.c0)!=(t0.c0))) AND (((t0.c0)||(x''))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE (('1286543114') BETWEEN (vt1.c0) AND (vt1.c1))  WHEN load_extension(vt0.c0) THEN -1833928815 ELSE ((vt0.c0) IS TRUE) END ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1 WHERE ('7qV戨k*%/>') ORDER BY (+ (((vt0.c0)+(vt1.c1)))) DESC, (((('1143122606') NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('7qV戨k*%/>') IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt0.c0)+(vt1.c1)))) DESC, (((('1143122606') NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ('7qV戨k*%/>') ORDER BY (+ (((vt0.c0)+(vt1.c1)))) DESC, (((('1143122606') NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('7qV戨k*%/>') IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (((vt0.c0)+(vt1.c1)))) DESC, (((('1143122606') NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ('7qV戨k*%/>') ORDER BY (+ (((vt0.c0)+(vt1.c1)))) DESC, (((('1143122606') NOT BETWEEN (vt1.c1) AND (vt1.c0)))IS NOT((vt1.c0 IN ()))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) ISNULL)) ORDER BY vt0.c0, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND ('')) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) ISNULL)) ORDER BY vt0.c0, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND ('')) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) ISNULL)) ORDER BY vt0.c0, ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((~ (vt0.c0))) AND ('')) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('v6[쿚-Fw|') AND (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ('v6[쿚-Fw|') AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('v6[쿚-Fw|') AND (((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ('v6[쿚-Fw|') AND (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('v6[쿚-Fw|') AND (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((((vt1.c0)%(vt1.c1)))) AND ((CASE WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END))));
SELECT ALL * FROM vt1, t0 WHERE ((((((((((((((t0.c0 IN ()))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN NULL THEN x'' ELSE vt1.c1 END)))OR((((vt1.c0))>=((t0.c0))))))OR(((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0 IN ()))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN NULL THEN x'' ELSE vt1.c1 END)))OR((((vt1.c0))>=((t0.c0))))))OR(((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((((((((((t0.c0 IN ()))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN NULL THEN x'' ELSE vt1.c1 END)))OR((((vt1.c0))>=((t0.c0))))))OR(((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((t0.c0 IN ()))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN NULL THEN x'' ELSE vt1.c1 END)))OR((((vt1.c0))>=((t0.c0))))))OR(((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((((((((((t0.c0 IN ()))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))))))OR(vt1.c1)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt1.c1 WHEN NULL THEN x'' ELSE vt1.c1 END)))OR((((vt1.c0))>=((t0.c0))))))OR(((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((0.9290750865668227)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9290750865668227)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((0.9290750865668227)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9290750865668227)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((0.9290750865668227)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) IS FALSE));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c1)) AS NUMERIC) WHERE ((+ (0.01459878288888461))) ORDER BY (('''1Le>蓇1*' COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (ROUND(vt1.c1, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (0.01459878288888461))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c1)) AS NUMERIC) ORDER BY (('''1Le>蓇1*' COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (ROUND(vt1.c1, vt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c1)) AS NUMERIC) WHERE ((+ (0.01459878288888461))) ORDER BY (('''1Le>蓇1*' COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (ROUND(vt1.c1, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (0.01459878288888461))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c1)) AS NUMERIC) ORDER BY (('''1Le>蓇1*' COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (ROUND(vt1.c1, vt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(((vt1.c0)+(vt1.c1)) AS NUMERIC) WHERE ((+ (0.01459878288888461))) ORDER BY (('''1Le>蓇1*' COLLATE NOCASE) BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (ROUND(vt1.c1, vt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))LIKE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))LIKE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0, vt1 INDEXED BY i73 WHERE (((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))-((~ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 INDEXED BY i73 ORDER BY (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))-((~ (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt1 INDEXED BY i73 WHERE (((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) COLLATE NOCASE) ORDER BY (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))-((~ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(vt1.c1)))OR(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 INDEXED BY i73 ORDER BY (((((t0.c0)) BETWEEN ((vt1.c0)) AND ((NULL))))-((~ (t0.c0))))  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c1 IN (t0.c0))) IS FALSE)) ORDER BY ((((vt1.c1)IS(vt0.c0))) ISNULL) ASC  NULLS LAST, x'', x'aef6'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c1)IS(vt0.c0))) ISNULL) ASC  NULLS LAST, x'', x'aef6'  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c1 IN (t0.c0))) IS FALSE)) ORDER BY ((((vt1.c1)IS(vt0.c0))) ISNULL) ASC  NULLS LAST, x'', x'aef6'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c1)IS(vt0.c0))) ISNULL) ASC  NULLS LAST, x'', x'aef6'  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c1 IN (t0.c0))) IS FALSE)) ORDER BY ((((vt1.c1)IS(vt0.c0))) ISNULL) ASC  NULLS LAST, x'', x'aef6'  NULLS FIRST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (CAST(vt1.c1 AS TEXT) IN ()) CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))))AND((((t0.c0))>((vt1.c1))))) WHERE (json_remove((vt1.c0 IN (vt1.c1)), vt1.c1 COLLATE BINARY)) ORDER BY ((((0.010294889960228648) IS FALSE))/((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((vt1.c0 IN (vt1.c1)), vt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (CAST(vt1.c1 AS TEXT) IN ()) CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))))AND((((t0.c0))>((vt1.c1))))) ORDER BY ((((0.010294889960228648) IS FALSE))/((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (CAST(vt1.c1 AS TEXT) IN ()) CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))))AND((((t0.c0))>((vt1.c1))))) WHERE (json_remove((vt1.c0 IN (vt1.c1)), vt1.c1 COLLATE BINARY)) ORDER BY ((((0.010294889960228648) IS FALSE))/((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_remove((vt1.c0 IN (vt1.c1)), vt1.c1 COLLATE BINARY)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (CAST(vt1.c1 AS TEXT) IN ()) CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))))AND((((t0.c0))>((vt1.c1))))) ORDER BY ((((0.010294889960228648) IS FALSE))/((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (CAST(vt1.c1 AS TEXT) IN ()) CROSS JOIN vt1 ON (((((vt0.c0 IN ()))AND(((((vt1.c1)AND(vt1.c0)))OR(vt0.c0)))))AND((((t0.c0))>((vt1.c1))))) WHERE (json_remove((vt1.c0 IN (vt1.c1)), vt1.c1 COLLATE BINARY)) ORDER BY ((((0.010294889960228648) IS FALSE))/((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((vt1.c1)<(vt1.c1)) WHEN (('0.0908415866056771')GLOB(vt0.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT vt1.c1) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c1) ISNULL) THEN ((t0.c0)&(t0.c0)) WHEN ABS(vt1.c0) THEN (vt1.c1 IN (vt1.c0)) ELSE (-620851872 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((vt1.c1)<(vt1.c1)) WHEN (('0.0908415866056771')GLOB(vt0.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT vt1.c1) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c1) ISNULL) THEN ((t0.c0)&(t0.c0)) WHEN ABS(vt1.c0) THEN (vt1.c1 IN (vt1.c0)) ELSE (-620851872 IN ()) END ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((vt1.c1)<(vt1.c1)) WHEN (('0.0908415866056771')GLOB(vt0.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT vt1.c1) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c1) ISNULL) THEN ((t0.c0)&(t0.c0)) WHEN ABS(vt1.c0) THEN (vt1.c1 IN (vt1.c0)) ELSE (-620851872 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((vt1.c1)<(vt1.c1)) WHEN (('0.0908415866056771')GLOB(vt0.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT vt1.c1) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c1) ISNULL) THEN ((t0.c0)&(t0.c0)) WHEN ABS(vt1.c0) THEN (vt1.c1 IN (vt1.c0)) ELSE (-620851872 IN ()) END ASC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (vt1.c0) ORDER BY CASE WHEN ((t0.c0) IS FALSE) THEN ((vt1.c1)<(vt1.c1)) WHEN (('0.0908415866056771')GLOB(vt0.c0)) THEN vt1.c0 WHEN TRIM(DISTINCT vt1.c1) THEN vt1.c0 COLLATE BINARY WHEN ((vt1.c1) ISNULL) THEN ((t0.c0)&(t0.c0)) WHEN ABS(vt1.c0) THEN (vt1.c1 IN (vt1.c0)) ELSE (-620851872 IN ()) END ASC;
SELECT * FROM vt0, t0 WHERE (((x'')IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(t0.c0 AS TEXT) IN (((((((((vt0.c0)OR(t0.c0)))AND('')))OR(t0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'')IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(t0.c0 AS TEXT) IN (((((((((vt0.c0)OR(t0.c0)))AND('')))OR(t0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((x'')IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(t0.c0 AS TEXT) IN (((((((((vt0.c0)OR(t0.c0)))AND('')))OR(t0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((x'')IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (CAST(t0.c0 AS TEXT) IN (((((((((vt0.c0)OR(t0.c0)))AND('')))OR(t0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((x'')IS NOT(CAST(vt0.c0 AS INTEGER)))) ORDER BY (CAST(t0.c0 AS TEXT) IN (((((((((vt0.c0)OR(t0.c0)))AND('')))OR(t0.c0)))AND(vt0.c0))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((vt1.c1) NOTNULL) WHERE (HEX(x''));
SELECT SUM(count) FROM (SELECT ((HEX(x'')) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c1) NOTNULL));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((vt1.c1) NOTNULL) WHERE (HEX(x''));
SELECT SUM(count) FROM (SELECT ((HEX(x'')) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((vt1.c1) NOTNULL));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((vt1.c1) NOTNULL) WHERE (HEX(x''));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(257525787 AS BLOB)) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL))<(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(257525787 AS BLOB)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL))<(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(257525787 AS BLOB)) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL))<(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(257525787 AS BLOB)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL))<(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (CAST(257525787 AS BLOB)) ORDER BY ((CAST(vt1.c0 AS BLOB)) NOT NULL) ASC  NULLS LAST, ((vt0.c0) IS TRUE) COLLATE RTRIM ASC  NULLS FIRST, ((CAST(vt1.c1 AS REAL))<(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((CASE 0.7520570165300589  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN (((((NULL)AND(vt1.c1)))OR(vt1.c1))) AND (vt1.c0))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)<<(vt1.c1)))) AND ((((vt1.c1) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.7520570165300589  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN (((((NULL)AND(vt1.c1)))OR(vt1.c1))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)<<(vt1.c1)))) AND ((((vt1.c1) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CASE 0.7520570165300589  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN (((((NULL)AND(vt1.c1)))OR(vt1.c1))) AND (vt1.c0))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)<<(vt1.c1)))) AND ((((vt1.c1) NOTNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE 0.7520570165300589  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN (((((NULL)AND(vt1.c1)))OR(vt1.c1))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)<<(vt1.c1)))) AND ((((vt1.c1) NOTNULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CASE 0.7520570165300589  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) NOT BETWEEN (((((NULL)AND(vt1.c1)))OR(vt1.c1))) AND (vt1.c0))) ORDER BY (((vt1.c1)) NOT BETWEEN ((((vt1.c0)<<(vt1.c1)))) AND ((((vt1.c1) NOTNULL))))  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL));
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL));
SELECT * FROM vt1, vt0, t0 WHERE ((((vt1.c0)) BETWEEN ((vt1.c1 COLLATE NOCASE)) AND ((vt0.c0)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))<((vt1.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0))<((vt1.c0))) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE ('-159840954') ORDER BY 2126172281 DESC;
SELECT SUM(count) FROM (SELECT (('-159840954') IS TRUE)  as count FROM vt0, t0 ORDER BY 2126172281 DESC);
SELECT ALL * FROM vt0, t0 WHERE ('-159840954') ORDER BY 2126172281 DESC;
SELECT SUM(count) FROM (SELECT (('-159840954') IS TRUE)  as count FROM vt0, t0 ORDER BY 2126172281 DESC);
SELECT ALL * FROM t0 WHERE (CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)<((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((NULL COLLATE NOCASE)<((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE (CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)<((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((NULL COLLATE NOCASE)<((t0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE (CAST(STRFTIME(t0.c0, t0.c0, t0.c0) AS NUMERIC)) ORDER BY ((NULL COLLATE NOCASE)<((t0.c0 IN ())));
SELECT * FROM vt0, t0 WHERE (((((((t0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', vt0.c0, vt0.c0, NULL, t0.c0))), ((vt0.c0) NOTNULL), '1080604760'))>((CAST(NULL AS TEXT), (((t0.c0))<((vt0.c0))), (('2104043494')GLOB(vt0.c0)))))) ORDER BY (((('el ,lArw')OR(CAST(t0.c0 AS NUMERIC))))OR((~ (''))))  NULLS FIRST, (((((t0.c0, vt0.c0, 'B->\rC!'))>((t0.c0, t0.c0, t0.c0))))GLOB(vt0.c0)), ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', vt0.c0, vt0.c0, NULL, t0.c0))), ((vt0.c0) NOTNULL), '1080604760'))>((CAST(NULL AS TEXT), (((t0.c0))<((vt0.c0))), (('2104043494')GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('el ,lArw')OR(CAST(t0.c0 AS NUMERIC))))OR((~ (''))))  NULLS FIRST, (((((t0.c0, vt0.c0, 'B->\rC!'))>((t0.c0, t0.c0, t0.c0))))GLOB(vt0.c0)), ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', vt0.c0, vt0.c0, NULL, t0.c0))), ((vt0.c0) NOTNULL), '1080604760'))>((CAST(NULL AS TEXT), (((t0.c0))<((vt0.c0))), (('2104043494')GLOB(vt0.c0)))))) ORDER BY (((('el ,lArw')OR(CAST(t0.c0 AS NUMERIC))))OR((~ (''))))  NULLS FIRST, (((((t0.c0, vt0.c0, 'B->\rC!'))>((t0.c0, t0.c0, t0.c0))))GLOB(vt0.c0)), ((~ (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', vt0.c0, vt0.c0, NULL, t0.c0))), ((vt0.c0) NOTNULL), '1080604760'))>((CAST(NULL AS TEXT), (((t0.c0))<((vt0.c0))), (('2104043494')GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((('el ,lArw')OR(CAST(t0.c0 AS NUMERIC))))OR((~ (''))))  NULLS FIRST, (((((t0.c0, vt0.c0, 'B->\rC!'))>((t0.c0, t0.c0, t0.c0))))GLOB(vt0.c0)), ((~ (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0, t0 WHERE (((((((t0.c0, t0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, t0.c0, t0.c0, t0.c0)) AND ((x'', vt0.c0, vt0.c0, NULL, t0.c0))), ((vt0.c0) NOTNULL), '1080604760'))>((CAST(NULL AS TEXT), (((t0.c0))<((vt0.c0))), (('2104043494')GLOB(vt0.c0)))))) ORDER BY (((('el ,lArw')OR(CAST(t0.c0 AS NUMERIC))))OR((~ (''))))  NULLS FIRST, (((((t0.c0, vt0.c0, 'B->\rC!'))>((t0.c0, t0.c0, t0.c0))))GLOB(vt0.c0)), ((~ (vt0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)/(t0.c0)) ELSE (('-1375990786')<(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)/(t0.c0)) ELSE (('-1375990786')<(t0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)/(t0.c0)) ELSE (('-1375990786')<(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)/(t0.c0)) ELSE (('-1375990786')<(t0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)/(t0.c0)) ELSE (('-1375990786')<(t0.c0)) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((+ (((t0.c0)IS(0.9730805081753832)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)IS(0.9730805081753832))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0)IS(0.9730805081753832)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)IS(0.9730805081753832))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0)IS(0.9730805081753832)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1)))AND(t0.c0)))||((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c0))>(((+ (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1)))AND(t0.c0)))||((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0))>(((+ (vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1)))AND(t0.c0)))||((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c0))>(((+ (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1)))AND(t0.c0)))||((vt1.c1 IN (vt1.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0))>(((+ (vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1)))AND(t0.c0)))||((vt1.c1 IN (vt1.c1))))) ORDER BY (((t0.c0))>(((+ (vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c0 IN ()) IN (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c1, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (x''))) ORDER BY (vt1.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c1, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c1, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (x''))) ORDER BY (vt1.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c1, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c0))==((vt1.c0, vt1.c1, vt1.c0)))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END) AND (x''))) ORDER BY (vt1.c1 IN ()) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('382168170')))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((((vt1.c0) ISNULL))<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR('382168170')))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('382168170')))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((((vt1.c0) ISNULL))<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR('382168170')))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL))<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('382168170')))*(CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((((vt1.c0) ISNULL))<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((((vt1.c1))!=((vt1.c1))))) AND ((((vt1.c0)||(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN (((((vt1.c1))!=((vt1.c1))))) AND ((((vt1.c0)||(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((((vt1.c1))!=((vt1.c1))))) AND ((((vt1.c0)||(vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN (((((vt1.c1))!=((vt1.c1))))) AND ((((vt1.c0)||(vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN (((((vt1.c1))!=((vt1.c1))))) AND ((((vt1.c0)||(vt1.c1))))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((TRIM(vt1.c0) IN ())) ORDER BY ((((vt1.c1) IS FALSE))IS(((vt1.c0)-(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(vt1.c0) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c1) IS FALSE))IS(((vt1.c0)-(vt1.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((TRIM(vt1.c0) IN ())) ORDER BY ((((vt1.c1) IS FALSE))IS(((vt1.c0)-(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(vt1.c0) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c1) IS FALSE))IS(((vt1.c0)-(vt1.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt1 WHERE ((TRIM(vt1.c0) IN ())) ORDER BY ((((vt1.c1) IS FALSE))IS(((vt1.c0)-(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((CAST(0.9283247293239968 AS INTEGER))OR('^pNo9qa?~')))AND((~ (vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))) ORDER BY (NOT (((vt1.c1)%(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(0.9283247293239968 AS INTEGER))OR('^pNo9qa?~')))AND((~ (vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt1.c1)%(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((CAST(0.9283247293239968 AS INTEGER))OR('^pNo9qa?~')))AND((~ (vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))) ORDER BY (NOT (((vt1.c1)%(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(0.9283247293239968 AS INTEGER))OR('^pNo9qa?~')))AND((~ (vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt1.c1)%(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((CAST(0.9283247293239968 AS INTEGER))OR('^pNo9qa?~')))AND((~ (vt1.c0)))))OR(((vt0.c0)>>(vt0.c0)))))AND(CASE WHEN vt1.c1 THEN NULL ELSE vt1.c0 END))) ORDER BY (NOT (((vt1.c1)%(vt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.8239173370761659)<<(CAST(0xffffffffce70fe65 AS BLOB))) WHERE ((((CAST(vt0.c0 AS NUMERIC), PRINTF(0x6a188774, NULL, t0.c0), CAST(t0.c0 AS INTEGER)))<=((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), (+ (t0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC), PRINTF(0x6a188774, NULL, t0.c0), CAST(t0.c0 AS INTEGER)))<=((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), (+ (t0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.8239173370761659)<<(CAST(0xffffffffce70fe65 AS BLOB))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.8239173370761659)<<(CAST(0xffffffffce70fe65 AS BLOB))) WHERE ((((CAST(vt0.c0 AS NUMERIC), PRINTF(0x6a188774, NULL, t0.c0), CAST(t0.c0 AS INTEGER)))<=((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), (+ (t0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS NUMERIC), PRINTF(0x6a188774, NULL, t0.c0), CAST(t0.c0 AS INTEGER)))<=((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), (+ (t0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((0.8239173370761659)<<(CAST(0xffffffffce70fe65 AS BLOB))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((0.8239173370761659)<<(CAST(0xffffffffce70fe65 AS BLOB))) WHERE ((((CAST(vt0.c0 AS NUMERIC), PRINTF(0x6a188774, NULL, t0.c0), CAST(t0.c0 AS INTEGER)))<=((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), (+ (t0.c0)), (NOT (t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))IS(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c1, vt1.c0))IS(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))IS(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c1, vt1.c0))IS(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((LIKE(vt1.c1, vt1.c0))IS(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<=((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<=((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<=((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<=((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)<=((+ (t0.c0)))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE vt1.c1  WHEN vt0.c0 THEN t0.c0 ELSE x'ca617157' END)GLOB((((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))) WHERE (1e500);
SELECT SUM(count) FROM (SELECT ((1e500) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE vt1.c1  WHEN vt0.c0 THEN t0.c0 ELSE x'ca617157' END)GLOB((((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE vt1.c1  WHEN vt0.c0 THEN t0.c0 ELSE x'ca617157' END)GLOB((((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))) WHERE (1e500);
SELECT SUM(count) FROM (SELECT ((1e500) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE vt1.c1  WHEN vt0.c0 THEN t0.c0 ELSE x'ca617157' END)GLOB((((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((CASE vt1.c1  WHEN vt0.c0 THEN t0.c0 ELSE x'ca617157' END)GLOB((((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))) WHERE (1e500);
SELECT * FROM t0 WHERE ((((((NULL IN ()))AND(CAST(t0.c0 AS INTEGER))))AND((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(CAST(t0.c0 AS INTEGER))))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((NULL IN ()))AND(CAST(t0.c0 AS INTEGER))))AND((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(CAST(t0.c0 AS INTEGER))))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((NULL IN ()))AND(CAST(t0.c0 AS INTEGER))))AND((~ (t0.c0)))));
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((vt0.c0) NOTNULL) AS TEXT));
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i49 WHERE (CASE ((t0.c0) ISNULL)  WHEN SQLITE_VERSION() THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((t0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) THEN LIKELIHOOD(vt1.c1, 0.2330973339930027) END) ORDER BY (('') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) ISNULL)  WHEN SQLITE_VERSION() THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((t0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) THEN LIKELIHOOD(vt1.c1, 0.2330973339930027) END) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i49 ORDER BY (('') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1, t0, vt0 INDEXED BY i49 WHERE (CASE ((t0.c0) ISNULL)  WHEN SQLITE_VERSION() THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((t0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) THEN LIKELIHOOD(vt1.c1, 0.2330973339930027) END) ORDER BY (('') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) ISNULL)  WHEN SQLITE_VERSION() THEN CAST(vt1.c0 AS BLOB) WHEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) THEN ((t0.c0) NOTNULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c1)) THEN LIKELIHOOD(vt1.c1, 0.2330973339930027) END) IS TRUE)  as count FROM vt1, t0, vt0 INDEXED BY i49 ORDER BY (('') NOT BETWEEN (t0.c0 COLLATE BINARY) AND (vt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0 NOT INDEXED, vt1 RIGHT OUTER JOIN t0 ON LIKELY(((vt0.c0)<(vt1.c0))) WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON LIKELY(((vt0.c0)<(vt1.c0))));
SELECT * FROM vt0 NOT INDEXED, vt1 RIGHT OUTER JOIN t0 ON LIKELY(((vt0.c0)<(vt1.c0))) WHERE ((((+ (vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON LIKELY(((vt0.c0)<(vt1.c0))));
SELECT * FROM vt0 NOT INDEXED, vt1 RIGHT OUTER JOIN t0 ON LIKELY(((vt0.c0)<(vt1.c0))) WHERE ((((+ (vt1.c0))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON CAST(((vt1.c1) IS TRUE) AS TEXT) LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c0))) NOTNULL) WHERE (((((NOT (t0.c0)), t0.c0, ((vt1.c0) NOT NULL)))>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t0.c0)), t0.c0, ((vt1.c0) NOT NULL)))>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1) IS TRUE) AS TEXT) LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c0))) NOTNULL));
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON CAST(((vt1.c1) IS TRUE) AS TEXT) LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c0))) NOTNULL) WHERE (((((NOT (t0.c0)), t0.c0, ((vt1.c0) NOT NULL)))>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t0.c0)), t0.c0, ((vt1.c0) NOT NULL)))>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c1) IS TRUE) AS TEXT) LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c0))) NOTNULL));
SELECT ALL * FROM vt1 NOT INDEXED FULL OUTER JOIN vt0 ON CAST(((vt1.c1) IS TRUE) AS TEXT) LEFT OUTER JOIN t0 ON ((((t0.c0)-(t0.c0))) NOTNULL) WHERE (((((NOT (t0.c0)), t0.c0, ((vt1.c0) NOT NULL)))>(((+ (vt1.c0)), ((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)), (- (vt1.c1))))));
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(x'')))*(((t0.c0) IS TRUE)))) ORDER BY (((((t0.c0)<(x''))))>((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(x'')))*(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<(x''))))>((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(x'')))*(((t0.c0) IS TRUE)))) ORDER BY (((((t0.c0)<(x''))))>((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)LIKE(x'')))*(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)<(x''))))>((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((((t0.c0)LIKE(x'')))*(((t0.c0) IS TRUE)))) ORDER BY (((((t0.c0)<(x''))))>((CAST(t0.c0 AS NUMERIC)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.6140780806167494);
SELECT SUM(count) FROM (SELECT ALL ((0.6140780806167494) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.6140780806167494);
SELECT SUM(count) FROM (SELECT ALL ((0.6140780806167494) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.6140780806167494);
SELECT ALL * FROM vt0 WHERE ('952635561') ORDER BY '361976175';
SELECT SUM(count) FROM (SELECT (('952635561') IS TRUE)  as count FROM vt0 ORDER BY '361976175');
SELECT ALL * FROM vt0 WHERE ('952635561') ORDER BY '361976175';
SELECT SUM(count) FROM (SELECT (('952635561') IS TRUE)  as count FROM vt0 ORDER BY '361976175');
SELECT ALL * FROM vt0 WHERE ('952635561') ORDER BY '361976175';
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((vt1.c0)GLOB(COALESCE(vt1.c0, vt1.c1, vt1.c0, vt1.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(COALESCE(vt1.c0, vt1.c1, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY ((IFNULL(vt0.c0, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((vt1.c0)GLOB(COALESCE(vt1.c0, vt1.c1, vt1.c0, vt1.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB(COALESCE(vt1.c0, vt1.c1, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) ORDER BY ((IFNULL(vt0.c0, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (vt1.c0 IN ()) WHERE (((vt1.c0)GLOB(COALESCE(vt1.c0, vt1.c1, vt1.c0, vt1.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c1))>>(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))) DESC;
SELECT * FROM vt0, vt1 WHERE ((CAST(1.029869543E9 AS NUMERIC) IN ())) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(1.029869543E9 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((CAST(1.029869543E9 AS NUMERIC) IN ())) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(1.029869543E9 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((CAST(1.029869543E9 AS NUMERIC) IN ())) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c1 COLLATE BINARY)) AND ((CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (HEX(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(t0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (HEX(CAST(t0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(t0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (HEX(CAST(t0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST((NOT (x'9f22')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (x'9f22')) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST((NOT (x'9f22')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (x'9f22')) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CAST((NOT (x'9f22')) AS TEXT));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)<(vt1.c0))) IS FALSE) WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)<(vt1.c0))) IS FALSE));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)<(vt1.c0))) IS FALSE) WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)<(vt1.c0))) IS FALSE));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)<(vt1.c0))) IS FALSE) WHERE (CAST(((vt1.c0)AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (- (COALESCE(x'f18b', vt0.c0, vt0.c0, vt1.c0))) WHERE (((vt0.c0 IN (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (- (COALESCE(x'f18b', vt0.c0, vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (- (COALESCE(x'f18b', vt0.c0, vt0.c0, vt1.c0))) WHERE (((vt0.c0 IN (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (- (COALESCE(x'f18b', vt0.c0, vt0.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (- (COALESCE(x'f18b', vt0.c0, vt0.c0, vt1.c0))) WHERE (((vt0.c0 IN (vt1.c1)) IN ()));
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT (((vt1.c1, t0.c0, vt1.c1))<((vt1.c0, vt1.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt1.c1, t0.c0, vt1.c1))<((vt1.c0, vt1.c0, t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT (((vt1.c1, t0.c0, vt1.c1))<((vt1.c0, vt1.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt1.c1, t0.c0, vt1.c1))<((vt1.c0, vt1.c0, t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT (((vt1.c1, t0.c0, vt1.c1))<((vt1.c0, vt1.c0, t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 INDEXED BY i73 WHERE (LTRIM(((vt0.c0)==(vt0.c0)))) ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS TEXT) ASC, 0.15459369300537218 DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0)=(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i73 ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS TEXT) ASC, 0.15459369300537218 DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt0, vt1 INDEXED BY i73 WHERE (LTRIM(((vt0.c0)==(vt0.c0)))) ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS TEXT) ASC, 0.15459369300537218 DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c0)=(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i73 ORDER BY CAST((vt1.c1 IN (vt1.c0)) AS TEXT) ASC, 0.15459369300537218 DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>>(HEX(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(HEX(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>>(HEX(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>>(HEX(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0)>>(HEX(DISTINCT vt1.c1))));
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt1.c0)))AND(1143122606)))OR(((vt1.c1)/(vt1.c1)))) WHERE (((json_type(vt1.c1)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY vt1.c0 ASC, ((NULL) NOT BETWEEN (((vt1.c1)<<(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))), ((((vt1.c0)/(vt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(vt1.c1)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt1.c0)))AND(1143122606)))OR(((vt1.c1)/(vt1.c1)))) ORDER BY vt1.c0 ASC, ((NULL) NOT BETWEEN (((vt1.c1)<<(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))), ((((vt1.c0)/(vt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt1.c0)))AND(1143122606)))OR(((vt1.c1)/(vt1.c1)))) WHERE (((json_type(vt1.c1)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)))) ORDER BY vt1.c0 ASC, ((NULL) NOT BETWEEN (((vt1.c1)<<(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))), ((((vt1.c0)/(vt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_type(vt1.c1)) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt0.c0 IN (vt0.c0, vt1.c0)))AND(1143122606)))OR(((vt1.c1)/(vt1.c1)))) ORDER BY vt1.c0 ASC, ((NULL) NOT BETWEEN (((vt1.c1)<<(vt0.c0))) AND (((vt0.c0)AND(vt0.c0)))), ((((vt1.c0)/(vt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY (0x18c3e41b IN ());
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (0x18c3e41b IN ()));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY (0x18c3e41b IN ());
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (0x18c3e41b IN ()));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) ORDER BY (0x18c3e41b IN ());
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))<((x'6c65'))) WHERE (((((vt1.c0)>(vt1.c1)))LIKE(vt1.c1))) ORDER BY CASE 1.410196694E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c1)))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))<((x'6c65'))) ORDER BY CASE 1.410196694E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))<((x'6c65'))) WHERE (((((vt1.c0)>(vt1.c1)))LIKE(vt1.c1))) ORDER BY CASE 1.410196694E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c1)))LIKE(vt1.c1))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))<((x'6c65'))) ORDER BY CASE 1.410196694E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0))))<((x'6c65'))) WHERE (((((vt1.c0)>(vt1.c1)))LIKE(vt1.c1))) ORDER BY CASE 1.410196694E9  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY;
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((CAST('Ya' AS BLOB)))>((TRIM(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((CAST('Ya' AS BLOB)))>((TRIM(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((CAST('Ya' AS BLOB)))>((TRIM(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((CAST('Ya' AS BLOB)))>((TRIM(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((CAST('Ya' AS BLOB)))>((TRIM(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<=((0.4359761475338977)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((0.4359761475338977)))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<=((0.4359761475338977)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((0.4359761475338977)))) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))<=((0.4359761475338977)))) IS FALSE));
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0) IS FALSE)) ORDER BY t0.c0 COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.653605262308659) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.653605262308659) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.653605262308659) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.653605262308659) IS TRUE)  as count FROM vt1, vt0 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.653605262308659) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((20481307) ISNULL) IN ()) WHERE (((((((((CASE x'b5da71b1dd5a'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))))OR(((vt0.c0)GLOB('-319442156')))))AND((+ (vt0.c0))))) ORDER BY NULL DESC  NULLS FIRST, NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x'b5da71b1dd5a'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))))OR(((vt0.c0)GLOB('-319442156')))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((20481307) ISNULL) IN ()) ORDER BY NULL DESC  NULLS FIRST, NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((20481307) ISNULL) IN ()) WHERE (((((((((CASE x'b5da71b1dd5a'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))))OR(((vt0.c0)GLOB('-319442156')))))AND((+ (vt0.c0))))) ORDER BY NULL DESC  NULLS FIRST, NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x'b5da71b1dd5a'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))))OR(((vt0.c0)GLOB('-319442156')))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((20481307) ISNULL) IN ()) ORDER BY NULL DESC  NULLS FIRST, NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((20481307) ISNULL) IN ()) WHERE (((((((((CASE x'b5da71b1dd5a'  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))))OR(((vt0.c0)GLOB('-319442156')))))AND((+ (vt0.c0))))) ORDER BY NULL DESC  NULLS FIRST, NULL, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((t0.c0, t0.c0, vt0.c0))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKE(NULL, t0.c0, '0'))<(CASE WHEN NULL THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LIKE(NULL, t0.c0, '0'))<(CASE WHEN NULL THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKE(NULL, t0.c0, '0'))<(CASE WHEN NULL THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LIKE(NULL, t0.c0, '0'))<(CASE WHEN NULL THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((LIKE(NULL, t0.c0, '0'))<(CASE WHEN NULL THEN t0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(t0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0) IS FALSE))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(x''))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 END)>=(UNICODE(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c1 ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 END)>=(UNICODE(vt1.c0))) DESC);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 END)>=(UNICODE(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c1 ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 END)>=(UNICODE(vt1.c0))) DESC);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON vt1.c1 WHERE (NULL) ORDER BY ((CASE WHEN vt1.c1 THEN vt0.c0 END)>=(UNICODE(vt1.c0))) DESC;
SELECT COUNT(*) FROM vt1 WHERE (x'd87c');
SELECT SUM(count) FROM (SELECT ((x'd87c') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'd87c');
SELECT SUM(count) FROM (SELECT ((x'd87c') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'd87c');
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY x'fda1', CAST(((vt1.c1) IS TRUE) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY x'fda1', CAST(((vt1.c1) IS TRUE) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY x'fda1', CAST(((vt1.c1) IS TRUE) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY x'fda1', CAST(((vt1.c1) IS TRUE) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY x'fda1', CAST(((vt1.c1) IS TRUE) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT vt1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT vt1.c0) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY LOWER(DISTINCT vt1.c0) COLLATE BINARY);
SELECT ALL * FROM vt1 NOT INDEXED, vt0 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT vt1.c0) COLLATE BINARY;
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c1 COLLATE BINARY) BETWEEN (0xffffffffa163bb8e) AND (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) WHERE (IFNULL((vt1.c0 IN ()), ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB)  NULLS LAST, NULL DESC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL((vt1.c0 IN ()), ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c1 COLLATE BINARY) BETWEEN (0xffffffffa163bb8e) AND (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB)  NULLS LAST, NULL DESC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c1 COLLATE BINARY) BETWEEN (0xffffffffa163bb8e) AND (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) WHERE (IFNULL((vt1.c0 IN ()), ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB)  NULLS LAST, NULL DESC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL((vt1.c0 IN ()), ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((vt1.c1 COLLATE BINARY) BETWEEN (0xffffffffa163bb8e) AND (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB)  NULLS LAST, NULL DESC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt1 ON ((vt1.c1 COLLATE BINARY) BETWEEN (0xffffffffa163bb8e) AND (((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) WHERE (IFNULL((vt1.c0 IN ()), ((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0)))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB)  NULLS LAST, NULL DESC  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0)IS NOT(vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN ()))) ORDER BY TYPEOF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN ()))) ORDER BY TYPEOF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(DISTINCT (vt0.c0 IN ()))) ORDER BY TYPEOF(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) DESC  NULLS LAST, vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1966672506)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1966672506)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1966672506)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1966672506)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 1966672506)))) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (CAST((0.8816023235282584 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.8816023235282584 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((0.8816023235282584 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.8816023235282584 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((0.8816023235282584 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE ((((0.7602445024001748 IN ()))-(((((((((t0.c0)OR(0.18191815579844095)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7602445024001748 IN ()))-(((((((((t0.c0)OR(0.18191815579844095)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE ((((0.7602445024001748 IN ()))-(((((((((t0.c0)OR(0.18191815579844095)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0.7602445024001748 IN ()))-(((((((((t0.c0)OR(0.18191815579844095)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) WHERE ((((0.7602445024001748 IN ()))-(((((((((t0.c0)OR(0.18191815579844095)))OR(t0.c0)))AND(t0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(0.1592169577893423)) IN ())) ORDER BY CASE WHEN (- (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))OR(0.1592169577893423)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(0.1592169577893423)) IN ())) ORDER BY CASE WHEN (- (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))OR(0.1592169577893423)) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN (- (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(0.1592169577893423)) IN ())) ORDER BY CASE WHEN (- (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT NULL));
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((vt1.c1 COLLATE BINARY)LIKE(((t0.c0)<=(vt1.c1))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)LIKE(((t0.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((vt1.c1 COLLATE BINARY)LIKE(((t0.c0)<=(vt1.c1))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)LIKE(((t0.c0)<=(vt1.c1))))) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN vt1 WHERE (((vt1.c1 COLLATE BINARY)LIKE(((t0.c0)<=(vt1.c1))))) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c0 END IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS FALSE))<=('	i')) RIGHT OUTER JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) WHERE (vt1.c1) ORDER BY UNLIKELY(((((t0.c0)AND(vt1.c1)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS FALSE))<=('	i')) RIGHT OUTER JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) ORDER BY UNLIKELY(((((t0.c0)AND(vt1.c1)))AND(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS FALSE))<=('	i')) RIGHT OUTER JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) WHERE (vt1.c1) ORDER BY UNLIKELY(((((t0.c0)AND(vt1.c1)))AND(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS FALSE))<=('	i')) RIGHT OUTER JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) ORDER BY UNLIKELY(((((t0.c0)AND(vt1.c1)))AND(vt1.c0)))  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((((vt1.c0) IS FALSE))<=('	i')) RIGHT OUTER JOIN vt0 ON (+ (t0.c0 COLLATE BINARY)) WHERE (vt1.c1) ORDER BY UNLIKELY(((((t0.c0)AND(vt1.c1)))AND(vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('K拉?vKNy)' COLLATE BINARY)AND(((0.2369408079095091) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c1)))) ORDER BY (+ (TRIM('1018394377', vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('K拉?vKNy)' COLLATE BINARY)AND(((0.2369408079095091) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (TRIM('1018394377', vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('K拉?vKNy)' COLLATE BINARY)AND(((0.2369408079095091) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c1)))) ORDER BY (+ (TRIM('1018394377', vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('K拉?vKNy)' COLLATE BINARY)AND(((0.2369408079095091) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (TRIM('1018394377', vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((('K拉?vKNy)' COLLATE BINARY)AND(((0.2369408079095091) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(NULLIF(vt1.c0, vt1.c1)))) ORDER BY (+ (TRIM('1018394377', vt1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (2.039903057E9);
SELECT SUM(count) FROM (SELECT ALL ((2.039903057E9) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (2.039903057E9);
SELECT SUM(count) FROM (SELECT ALL ((2.039903057E9) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (2.039903057E9);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0)GLOB(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0)GLOB(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((t0.c0)GLOB(vt0.c0)) COLLATE NOCASE) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)||(t0.c0)) THEN (((t0.c0))>((t0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)||(t0.c0)) THEN (((t0.c0))>((t0.c0))) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)||(t0.c0)) THEN (((t0.c0))>((t0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)||(t0.c0)) THEN (((t0.c0))>((t0.c0))) END ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE NOCASE) ORDER BY CASE WHEN ((t0.c0) NOT NULL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0) IS FALSE) WHEN ((t0.c0)||(t0.c0)) THEN (((t0.c0))>((t0.c0))) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (x'') AND (x''))) NOT BETWEEN (t0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (x'') AND (x''))) NOT BETWEEN (t0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (x'') AND (x''))) NOT BETWEEN (t0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (x'') AND (x''))) NOT BETWEEN (t0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) BETWEEN (x'') AND (x''))) NOT BETWEEN (t0.c0) AND (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)+(vt1.c0)))+(((vt1.c0) BETWEEN (vt1.c1) AND (x''))))) ORDER BY vt1.c1  NULLS LAST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)+(vt1.c0)))+(((vt1.c0) BETWEEN (vt1.c1) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST, vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)+(vt1.c0)))+(((vt1.c0) BETWEEN (vt1.c1) AND (x''))))) ORDER BY vt1.c1  NULLS LAST, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)+(vt1.c0)))+(((vt1.c0) BETWEEN (vt1.c1) AND (x''))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1  NULLS LAST, vt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)+(vt1.c0)))+(((vt1.c0) BETWEEN (vt1.c1) AND (x''))))) ORDER BY vt1.c1  NULLS LAST, vt1.c0 ASC;
SELECT ALL * FROM vt1 WHERE (0.7697775867054193);
SELECT SUM(count) FROM (SELECT ((0.7697775867054193) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.7697775867054193);
SELECT SUM(count) FROM (SELECT ((0.7697775867054193) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.7697775867054193);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%(vt1.c1)) AS INTEGER)) ORDER BY ((((vt1.c0)-(vt1.c0)))IS NOT(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)%(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0)))IS NOT(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%(vt1.c1)) AS INTEGER)) ORDER BY ((((vt1.c0)-(vt1.c0)))IS NOT(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)%(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0)))IS NOT(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)%(vt1.c1)) AS INTEGER)) ORDER BY ((((vt1.c0)-(vt1.c0)))IS NOT(vt1.c0)) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1))<((((vt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))<((((vt1.c1) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1))<((((vt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))<((((vt1.c1) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c1))<((((vt1.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt1.c1 END))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt1.c1 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(vt1.c1 AS REAL) COLLATE BINARY FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((((x'') NOT NULL) IN (CASE WHEN '-1427861164' THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((x'') NOT NULL) IN (CASE WHEN '-1427861164' THEN vt1.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(vt1.c1 AS REAL) COLLATE BINARY FULL OUTER JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON CAST(vt1.c1 AS REAL) COLLATE BINARY FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((((x'') NOT NULL) IN (CASE WHEN '-1427861164' THEN vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((x'') NOT NULL) IN (CASE WHEN '-1427861164' THEN vt1.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON CAST(vt1.c1 AS REAL) COLLATE BINARY FULL OUTER JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN 1.519637499E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN 1.519637499E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN 1.519637499E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN 1.519637499E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN 1.519637499E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE NULL  WHEN CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (vt1.c1) AND (0X7246437a)) WHEN ((0.8621964858689272) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT vt1.c1, vt1.c1) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (x'') AND ('j?+')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((t0.c0)LIKE(vt1.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (vt1.c1) AND (0x7246437a)) WHEN ((0.8621964858689272) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT vt1.c1, vt1.c1) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (x'') AND ('j?+')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((t0.c0)LIKE(vt1.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE NULL  WHEN CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (vt1.c1) AND (0X7246437a)) WHEN ((0.8621964858689272) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT vt1.c1, vt1.c1) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (x'') AND ('j?+')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((t0.c0)LIKE(vt1.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (vt1.c1) AND (0x7246437a)) WHEN ((0.8621964858689272) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT vt1.c1, vt1.c1) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (x'') AND ('j?+')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((t0.c0)LIKE(vt1.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE NULL  WHEN CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END THEN ((vt1.c0) BETWEEN (vt1.c1) AND (0X7246437a)) WHEN ((0.8621964858689272) NOT BETWEEN (t0.c0) AND (vt1.c1)) THEN t0.c0 COLLATE BINARY WHEN NULLIF(DISTINCT vt1.c1, vt1.c1) THEN CAST(vt1.c1 AS REAL) WHEN ((vt1.c0) NOT BETWEEN (x'') AND ('j?+')) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) WHEN ((t0.c0)LIKE(vt1.c0)) THEN ((t0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) ORDER BY ((vt1.c0 COLLATE BINARY)AND(CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((DATE(0.8030307155876174, vt1.c1, vt1.c0)) NOT NULL)) ORDER BY ((ABS(vt1.c0))<<(CAST(vt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((DATE(0.8030307155876174, vt1.c1, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(vt1.c0))<<(CAST(vt1.c1 AS REAL))));
SELECT ALL * FROM vt1 WHERE (((DATE(0.8030307155876174, vt1.c1, vt1.c0)) NOT NULL)) ORDER BY ((ABS(vt1.c0))<<(CAST(vt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((DATE(0.8030307155876174, vt1.c1, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((ABS(vt1.c0))<<(CAST(vt1.c1 AS REAL))));
SELECT ALL * FROM vt1 WHERE (((DATE(0.8030307155876174, vt1.c1, vt1.c0)) NOT NULL)) ORDER BY ((ABS(vt1.c0))<<(CAST(vt1.c1 AS REAL)));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('1476748374');
SELECT SUM(count) FROM (SELECT ALL (('1476748374') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('1476748374');
SELECT SUM(count) FROM (SELECT ALL (('1476748374') IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ('1476748374');
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt1.c0, vt1.c1, NULL)) BETWEEN (((+ (vt1.c1)), vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c1 ELSE '' END)) AND ((IFNULL(DISTINCT vt0.c0, vt1.c1), CAST(vt1.c0 AS BLOB), json_insert(vt1.c1, vt1.c0, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt1.c1, NULL)) BETWEEN (((+ (vt1.c1)), vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c1 ELSE '' END)) AND ((IFNULL(DISTINCT vt0.c0, vt1.c1), CAST(vt1.c0 AS BLOB), json_insert(vt1.c1, vt1.c0, vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt1.c0, vt1.c1, NULL)) BETWEEN (((+ (vt1.c1)), vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c1 ELSE '' END)) AND ((IFNULL(DISTINCT vt0.c0, vt1.c1), CAST(vt1.c0 AS BLOB), json_insert(vt1.c1, vt1.c0, vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt1.c1, NULL)) BETWEEN (((+ (vt1.c1)), vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c1 ELSE '' END)) AND ((IFNULL(DISTINCT vt0.c0, vt1.c1), CAST(vt1.c0 AS BLOB), json_insert(vt1.c1, vt1.c0, vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((+ (vt0.c0))) ORDER BY (((vt1.c0, vt1.c1, NULL)) BETWEEN (((+ (vt1.c1)), vt1.c1 COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt1.c1 ELSE '' END)) AND ((IFNULL(DISTINCT vt0.c0, vt1.c1), CAST(vt1.c0 AS BLOB), json_insert(vt1.c1, vt1.c0, vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((NOT (vt0.c0)));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN -1.59840954E8 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN -1.59840954E8 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN -1.59840954E8 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN -1.59840954E8 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN -1.59840954E8 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1) BETWEEN (t0.c0) AND (vt0.c0)) IN ())) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.6948246248096392 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((vt1.c0)AND(vt1.c0)) END, (((vt0.c0, t0.c0, vt1.c0)) BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), (NOT (',')), vt1.c0 COLLATE NOCASE)) AND ((vt1.c1 COLLATE BINARY, '3Z', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) BETWEEN (t0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.6948246248096392 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((vt1.c0)AND(vt1.c0)) END, (((vt0.c0, t0.c0, vt1.c0)) BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), (NOT (',')), vt1.c0 COLLATE NOCASE)) AND ((vt1.c1 COLLATE BINARY, '3Z', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) DESC, vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1) BETWEEN (t0.c0) AND (vt0.c0)) IN ())) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.6948246248096392 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((vt1.c0)AND(vt1.c0)) END, (((vt0.c0, t0.c0, vt1.c0)) BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), (NOT (',')), vt1.c0 COLLATE NOCASE)) AND ((vt1.c1 COLLATE BINARY, '3Z', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) DESC, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) BETWEEN (t0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.6948246248096392 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((vt1.c0)AND(vt1.c0)) END, (((vt0.c0, t0.c0, vt1.c0)) BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), (NOT (',')), vt1.c0 COLLATE NOCASE)) AND ((vt1.c1 COLLATE BINARY, '3Z', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) DESC, vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c1) BETWEEN (t0.c0) AND (vt0.c0)) IN ())) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN CASE WHEN 0.6948246248096392 THEN vt0.c0 WHEN vt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 END THEN ((vt1.c0)AND(vt1.c0)) END, (((vt0.c0, t0.c0, vt1.c0)) BETWEEN ((((((t0.c0)OR(vt1.c0)))OR(t0.c0)), (NOT (',')), vt1.c0 COLLATE NOCASE)) AND ((vt1.c1 COLLATE BINARY, '3Z', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))))) DESC, vt1.c0  NULLS FIRST;
SELECT * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt1.c1))))) AND ((((NULL)>>(0.8411691453828637))))) WHERE (((((((vt1.c1)OR(vt1.c1)))OR(((vt1.c1) NOT NULL))))AND(vt1.c1))) ORDER BY (((vt1.c0)LIKE(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(((vt1.c1) NOT NULL))))AND(vt1.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt1.c1))))) AND ((((NULL)>>(0.8411691453828637))))) ORDER BY (((vt1.c0)LIKE(vt1.c0)) IN ()) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt1.c1))))) AND ((((NULL)>>(0.8411691453828637))))) WHERE (((((((vt1.c1)OR(vt1.c1)))OR(((vt1.c1) NOT NULL))))AND(vt1.c1))) ORDER BY (((vt1.c0)LIKE(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)OR(vt1.c1)))OR(((vt1.c1) NOT NULL))))AND(vt1.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt1.c1))))) AND ((((NULL)>>(0.8411691453828637))))) ORDER BY (((vt1.c0)LIKE(vt1.c0)) IN ()) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON (((vt1.c0)) BETWEEN (((((vt1.c0))>((vt1.c1))))) AND ((((NULL)>>(0.8411691453828637))))) WHERE (((((((vt1.c1)OR(vt1.c1)))OR(((vt1.c1) NOT NULL))))AND(vt1.c1))) ORDER BY (((vt1.c0)LIKE(vt1.c0)) IN ()) ASC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN ((- (NULL))) AND ('' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOT BETWEEN ((- (NULL))) AND ('' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN ((- (NULL))) AND ('' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOT BETWEEN ((- (NULL))) AND ('' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN ((- (NULL))) AND ('' COLLATE NOCASE)));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((NULL, vt0.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((NULL, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((NULL, vt0.c0, vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((NULL, vt0.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt1.c1 AS TEXT)) AND ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c1)) AND ((NULL, vt0.c0, vt1.c1))))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE vt1.c1  WHEN ((t0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt1.c1)LIKE(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN ((t0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt1.c1)LIKE(vt1.c1)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE vt1.c1  WHEN ((t0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt1.c1)LIKE(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1  WHEN ((t0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt1.c1)LIKE(vt1.c1)) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CASE vt1.c1  WHEN ((t0.c0)||(t0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE ((vt1.c1)LIKE(vt1.c1)) END);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND((~ (1381577188)))))AND(CAST(vt1.c0 AS INTEGER))))OR(PRINTF(vt1.c1))))AND(((0.4317497138252375) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (vt1.c0)))AND((~ (1381577188)))))AND(CAST(vt1.c0 AS INTEGER))))OR(PRINTF(vt1.c1))))AND(((0.4317497138252375) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND((~ (1381577188)))))AND(CAST(vt1.c0 AS INTEGER))))OR(PRINTF(vt1.c1))))AND(((0.4317497138252375) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0 IN (vt1.c0)))AND((~ (1381577188)))))AND(CAST(vt1.c0 AS INTEGER))))OR(PRINTF(vt1.c1))))AND(((0.4317497138252375) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))AND((~ (1381577188)))))AND(CAST(vt1.c0 AS INTEGER))))OR(PRINTF(vt1.c1))))AND(((0.4317497138252375) NOTNULL))));
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY ((((t0.c0) NOT NULL))GLOB(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) NOT NULL))GLOB(vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY ((((t0.c0) NOT NULL))GLOB(vt1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((t0.c0) NOT NULL))GLOB(vt1.c0 COLLATE BINARY)) ASC);
SELECT * FROM vt1, vt0, t0 WHERE ((NOT (((vt0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY ((((t0.c0) NOT NULL))GLOB(vt1.c0 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (vt0.c0 IN (vt1.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt1.c0))>((x'9aa8'))) WHEN ((vt0.c0)<>(vt1.c0)) THEN vt0.c0 END) ORDER BY ((((((((CAST(vt1.c1 AS INTEGER))OR(((vt1.c1)<(x'')))))OR(TRIM(vt0.c0))))OR(((vt0.c0)/(vt0.c0)))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN (vt0.c0 IN (vt1.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt1.c0))>((x'9aa8'))) WHEN ((vt0.c0)<>(vt1.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt1.c1 AS INTEGER))OR(((vt1.c1)<(x'')))))OR(TRIM(vt0.c0))))OR(((vt0.c0)/(vt0.c0)))))AND(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (vt0.c0 IN (vt1.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt1.c0))>((x'9aa8'))) WHEN ((vt0.c0)<>(vt1.c0)) THEN vt0.c0 END) ORDER BY ((((((((CAST(vt1.c1 AS INTEGER))OR(((vt1.c1)<(x'')))))OR(TRIM(vt0.c0))))OR(((vt0.c0)/(vt0.c0)))))AND(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) IS TRUE) THEN (vt0.c0 IN (vt1.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt1.c0))>((x'9aa8'))) WHEN ((vt0.c0)<>(vt1.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CAST(vt1.c1 AS INTEGER))OR(((vt1.c1)<(x'')))))OR(TRIM(vt0.c0))))OR(((vt0.c0)/(vt0.c0)))))AND(vt0.c0)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN (vt0.c0 IN (vt1.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt1.c0))>((x'9aa8'))) WHEN ((vt0.c0)<>(vt1.c0)) THEN vt0.c0 END) ORDER BY ((((((((CAST(vt1.c1 AS INTEGER))OR(((vt1.c1)<(x'')))))OR(TRIM(vt0.c0))))OR(((vt0.c0)/(vt0.c0)))))AND(vt0.c0)) ASC;
SELECT * FROM t0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)+(((vt1.c1)GLOB(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)+(((vt1.c1)GLOB(vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1)GLOB(vt1.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0)<<(vt0.c0)));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((((vt1.c1))>=((vt0.c0)))) BETWEEN ((((vt1.c0))<>((t0.c0)))) AND (((vt1.c0)-(vt1.c0)))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((((vt1.c1))>=((vt0.c0)))) BETWEEN ((((vt1.c0))!=((t0.c0)))) AND (((vt1.c0)-(vt1.c0)))));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((((vt1.c1))>=((vt0.c0)))) BETWEEN ((((vt1.c0))<>((t0.c0)))) AND (((vt1.c0)-(vt1.c0)))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((((vt1.c1))>=((vt0.c0)))) BETWEEN ((((vt1.c0))!=((t0.c0)))) AND (((vt1.c0)-(vt1.c0)))));
SELECT ALL * FROM vt0, t0 INNER JOIN vt1 ON (((((vt1.c1))>=((vt0.c0)))) BETWEEN ((((vt1.c0))<>((t0.c0)))) AND (((vt1.c0)-(vt1.c0)))) WHERE (((((((t0.c0)OR(vt0.c0)))AND(vt0.c0)))<(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((('a*') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('a*') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('a*') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((('a*') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('a*') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON NULL WHERE (((((vt0.c0) ISNULL))<(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))<(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON NULL WHERE (((((vt0.c0) ISNULL))<(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))<(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON NULL);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON NULL WHERE (((((vt0.c0) ISNULL))<(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))>=(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(vt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))>=(vt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=(vt1.c1 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0)GLOB(NULL)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) ISNULL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) END) ORDER BY CASE LOWER(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1253147494' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0)GLOB(NULL)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) ISNULL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CASE LOWER(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1253147494' END  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0)GLOB(NULL)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) ISNULL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) END) ORDER BY CASE LOWER(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1253147494' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0)GLOB(NULL)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) ISNULL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY CASE LOWER(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1253147494' END  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)<=(vt0.c0)) WHEN ((vt0.c0)GLOB(NULL)) THEN vt0.c0 WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0) ISNULL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN HEX(DISTINCT vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN x'' THEN ((vt0.c0)!=(vt0.c0)) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOTNULL) END) ORDER BY CASE LOWER(vt0.c0)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN '1253147494' END  NULLS FIRST;
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (vt1.c1);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((((((((~ (t0.c0)))OR(LENGTH(vt1.c0))))AND((((t0.c0))==((t0.c0))))))AND(((vt1.c1)OR(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)) WHERE (((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((((('j8tꔞjjf掞 ')AND(0.48082200319351287)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((((('j8tꔞjjf掞 ')AND(0.48082200319351287)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((((((((~ (t0.c0)))OR(LENGTH(vt1.c0))))AND((((t0.c0))==((t0.c0))))))AND(((vt1.c1)OR(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((((((((~ (t0.c0)))OR(LENGTH(vt1.c0))))AND((((t0.c0))==((t0.c0))))))AND(((vt1.c1)OR(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)) WHERE (((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((((('j8tꔞjjf掞 ')AND(0.48082200319351287)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((((('j8tꔞjjf掞 ')AND(0.48082200319351287)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((((((((~ (t0.c0)))OR(LENGTH(vt1.c0))))AND((((t0.c0))==((t0.c0))))))AND(((vt1.c1)OR(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)));
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((((((((~ (t0.c0)))OR(LENGTH(vt1.c0))))AND((((t0.c0))==((t0.c0))))))AND(((vt1.c1)OR(vt1.c0)))))AND(vt1.c1 COLLATE NOCASE)) WHERE (((((vt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((((('j8tꔞjjf掞 ')AND(0.48082200319351287)))AND(vt1.c1)))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (-327914406) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1) NOT BETWEEN (-327914406) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (-327914406) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1) NOT BETWEEN (-327914406) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (((vt1.c1) NOT BETWEEN (-327914406) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))<=(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))<=(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))<=(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))<=(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL) NOT BETWEEN (vt1.c1) AND (vt1.c1)))<=(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 INDEXED BY i73);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 INDEXED BY i73);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i73 WHERE (CAST(((t0.c0)<(t0.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 COLLATE NOCASE AS REAL) DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 COLLATE NOCASE AS REAL) DESC);
SELECT ALL * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY CAST(vt1.c1 COLLATE NOCASE AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((0.6391354816753755)))) NOT NULL) WHERE (((((-1.330418258E9)|(vt1.c0)))IS((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((-1.330418258E9)|(vt1.c0)))IS((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((0.6391354816753755)))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((0.6391354816753755)))) NOT NULL) WHERE (((((-1.330418258E9)|(vt1.c0)))IS((~ (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((-1.330418258E9)|(vt1.c0)))IS((~ (vt1.c1))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((0.6391354816753755)))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((0.6391354816753755)))) NOT NULL) WHERE (((((-1.330418258E9)|(vt1.c0)))IS((~ (vt1.c1)))));
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (NOT (((vt0.c0)<(t0.c0)))) WHERE (t0.c0) ORDER BY (((vt1.c0 IN (t0.c0)))|(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (NOT (((vt0.c0)<(t0.c0)))) ORDER BY (((vt1.c0 IN (t0.c0)))|(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1)))) ASC);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (NOT (((vt0.c0)<(t0.c0)))) WHERE (t0.c0) ORDER BY (((vt1.c0 IN (t0.c0)))|(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON (NOT (((vt0.c0)<(t0.c0)))) ORDER BY (((vt1.c0 IN (t0.c0)))|(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1)))) ASC);
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON (NOT (((vt0.c0)<(t0.c0)))) WHERE (t0.c0) ORDER BY (((vt1.c0 IN (t0.c0)))|(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1)))) ASC;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((((vt0.c0)*(vt1.c1))))) RIGHT OUTER JOIN t0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) WHERE (LIKE(vt1.c0, CAST(vt1.c1 AS NUMERIC))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, CAST(vt1.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((((vt0.c0)*(vt1.c1))))) RIGHT OUTER JOIN t0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((((vt0.c0)*(vt1.c1))))) RIGHT OUTER JOIN t0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) WHERE (LIKE(vt1.c0, CAST(vt1.c1 AS NUMERIC))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt1.c0, CAST(vt1.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((((vt0.c0)*(vt1.c1))))) RIGHT OUTER JOIN t0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt1.c1)) NOT BETWEEN ((NULL COLLATE RTRIM)) AND ((((vt0.c0)*(vt1.c1))))) RIGHT OUTER JOIN t0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) WHERE (LIKE(vt1.c0, CAST(vt1.c1 AS NUMERIC))) ORDER BY CAST(((vt1.c0)<(vt1.c1)) AS BLOB) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (t0.c0))) NOT BETWEEN (((vt1.c0)=(vt1.c1))) AND (((vt1.c1) NOT NULL))) RIGHT OUTER JOIN vt1 ON (- (COALESCE(DISTINCT vt1.c0, t0.c0))) WHERE (0.9354836641003339);
SELECT SUM(count) FROM (SELECT ALL ((0.9354836641003339) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (t0.c0))) NOT BETWEEN (((vt1.c0)=(vt1.c1))) AND (((vt1.c1) NOT NULL))) RIGHT OUTER JOIN vt1 ON (- (COALESCE(DISTINCT vt1.c0, t0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (t0.c0))) NOT BETWEEN (((vt1.c0)=(vt1.c1))) AND (((vt1.c1) NOT NULL))) RIGHT OUTER JOIN vt1 ON (- (COALESCE(DISTINCT vt1.c0, t0.c0))) WHERE (0.9354836641003339);
SELECT SUM(count) FROM (SELECT ALL ((0.9354836641003339) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((~ (t0.c0))) NOT BETWEEN (((vt1.c0)=(vt1.c1))) AND (((vt1.c1) NOT NULL))) RIGHT OUTER JOIN vt1 ON (- (COALESCE(DISTINCT vt1.c0, t0.c0))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((x'')>>(vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND (((('-1790370323') NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (('0.20276826832588468') NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((x'')>>(vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND (((('-1790370323') NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (('0.20276826832588468') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((x'')>>(vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND (((('-1790370323') NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (('0.20276826832588468') NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((x'')>>(vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND (((('-1790370323') NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (('0.20276826832588468') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((x'')>>(vt0.c0)), COALESCE(DISTINCT vt0.c0, vt0.c0, vt0.c0, vt0.c0))) AND (((('-1790370323') NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0, (('0.20276826832588468') NOT BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (DATE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND('-620851872')), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND('-620851872')), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND('-620851872')), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND('-620851872')), ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (DATE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))AND('-620851872')), ((vt0.c0) NOT NULL)));
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, vt1.c1, vt1.c1)))))>=((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((vt1.c0 IN (vt1.c1, x''))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, vt1.c1, vt1.c1)))))>=((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt1.c0 IN (vt1.c1, x''))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, vt1.c1, vt1.c1)))))>=((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((vt1.c0 IN (vt1.c1, x''))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, vt1.c1, vt1.c1)))))>=((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt1.c0 IN (vt1.c1, x''))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, NULL, t0.c0)) AND ((t0.c0, vt1.c1, vt1.c1)))))>=((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((vt1.c0 IN (vt1.c1, x''))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((CAST(t0.c0 AS INTEGER)) BETWEEN ((~ (t0.c0))) AND (((((t0.c0)OR(t0.c0)))OR(t0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((((((((((((vt1.c0 IN ()))AND(vt1.c1 COLLATE NOCASE)))OR(CASE WHEN vt1.c0 THEN '-1790370323' WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0)GLOB(vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 WHEN 'ch뼾' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND((vt1.c1 IN (vt1.c1, 0X6963a972)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ')', (+ (vt1.c0)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), (((0X758bd76)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))<=(((((vt1.c0))==((vt1.c0))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c1) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END)))) ORDER BY json_quote('-1001622230'), ((vt1.c1) IS TRUE) COLLATE RTRIM  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ')', (+ (vt1.c0)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), (((0X758bd76)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))<=(((((vt1.c0))=((vt1.c0))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c1) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((((((((((vt1.c0 IN ()))AND(vt1.c1 COLLATE NOCASE)))OR(CASE WHEN vt1.c0 THEN '-1790370323' WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0)GLOB(vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 WHEN 'ch뼾' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND((vt1.c1 IN (vt1.c1, 0x6963a972)))) ORDER BY json_quote('-1001622230'), ((vt1.c1) IS TRUE) COLLATE RTRIM  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((((((((((((vt1.c0 IN ()))AND(vt1.c1 COLLATE NOCASE)))OR(CASE WHEN vt1.c0 THEN '-1790370323' WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0)GLOB(vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 WHEN 'ch뼾' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND((vt1.c1 IN (vt1.c1, 0X6963a972)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ')', (+ (vt1.c0)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), (((0X758bd76)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))<=(((((vt1.c0))==((vt1.c0))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c1) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END)))) ORDER BY json_quote('-1001622230'), ((vt1.c1) IS TRUE) COLLATE RTRIM  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ')', (+ (vt1.c0)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), (((0X758bd76)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))<=(((((vt1.c0))=((vt1.c0))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c1) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((((((((((vt1.c0 IN ()))AND(vt1.c1 COLLATE NOCASE)))OR(CASE WHEN vt1.c0 THEN '-1790370323' WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0)GLOB(vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 WHEN 'ch뼾' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND((vt1.c1 IN (vt1.c1, 0x6963a972)))) ORDER BY json_quote('-1001622230'), ((vt1.c1) IS TRUE) COLLATE RTRIM  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((((((((((((vt1.c0 IN ()))AND(vt1.c1 COLLATE NOCASE)))OR(CASE WHEN vt1.c0 THEN '-1790370323' WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)))AND(CAST(vt1.c1 AS INTEGER))))AND(((vt1.c0)GLOB(vt1.c1)))))OR(CASE WHEN vt1.c1 THEN vt1.c1 WHEN 'ch뼾' THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))AND((vt1.c1 IN (vt1.c1, 0X6963a972)))) WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ')', (+ (vt1.c0)), ((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)), (((0X758bd76)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))))<=(((((vt1.c0))==((vt1.c0))), ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)), (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))), ((vt1.c1) IS TRUE), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 END)))) ORDER BY json_quote('-1001622230'), ((vt1.c1) IS TRUE) COLLATE RTRIM  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CAST(vt1.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (~ ((((('%d*I')AND(vt1.c1)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CAST(vt1.c1 AS REAL)) AND ((- (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ ((((('%d*I')AND(vt1.c1)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CAST(vt1.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (~ ((((('%d*I')AND(vt1.c1)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CAST(vt1.c1 AS REAL)) AND ((- (t0.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ ((((('%d*I')AND(vt1.c1)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (CAST(vt1.c1 AS REAL)) AND ((- (t0.c0))))) ORDER BY (~ ((((('%d*I')AND(vt1.c1)))OR(vt1.c1)))), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X+ങF<r' THEN vt0.c0 ELSE vt0.c0 END THEN '璟AI&m.?L' ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X+ങF<r' THEN vt0.c0 ELSE vt0.c0 END THEN '璟AI&m.?L' ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X+ങF<r' THEN vt0.c0 ELSE vt0.c0 END THEN '璟AI&m.?L' ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X+ങF<r' THEN vt0.c0 ELSE vt0.c0 END THEN '璟AI&m.?L' ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 'X+ങF<r' THEN vt0.c0 ELSE vt0.c0 END THEN '璟AI&m.?L' ELSE (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT NULL)) NOTNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE)LIKE(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt1.c1 COLLATE NOCASE)LIKE(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT NULL)) NOTNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE)LIKE(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt1.c1 COLLATE NOCASE)LIKE(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT NULL)) NOTNULL)) ORDER BY ((vt1.c1 COLLATE NOCASE)LIKE(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c1) ISNULL))OR(json_array_length(vt1.c0, vt1.c1))) LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) WHERE ((((((((((vt1.c1)OR(t0.c0)))AND('1884673111')))OR(vt1.c1)))OR(vt0.c0)) IN ((NOT (vt1.c1))))) ORDER BY (TYPEOF(vt1.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c1)OR(t0.c0)))AND('1884673111')))OR(vt1.c1)))OR(vt0.c0)) IN ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c1) ISNULL))OR(json_array_length(vt1.c0, vt1.c1))) LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) ORDER BY (TYPEOF(vt1.c0) IN ()) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c1) ISNULL))OR(json_array_length(vt1.c0, vt1.c1))) LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) WHERE ((((((((((vt1.c1)OR(t0.c0)))AND('1884673111')))OR(vt1.c1)))OR(vt0.c0)) IN ((NOT (vt1.c1))))) ORDER BY (TYPEOF(vt1.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c1)OR(t0.c0)))AND('1884673111')))OR(vt1.c1)))OR(vt0.c0)) IN ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((vt1.c1) ISNULL))OR(json_array_length(vt1.c0, vt1.c1))) LEFT OUTER JOIN vt0 ON CAST(t0.c0 AS NUMERIC) ORDER BY (TYPEOF(vt1.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c1)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c1)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1))) NOT BETWEEN ((vt1.c0 IN (vt1.c0))) AND (((vt1.c1)LIKE(vt1.c0)))));
SELECT * FROM vt0, t0, vt1 WHERE ((((ABS(DISTINCT vt1.c0)))>=((CASE '0.7442357696999071'  WHEN vt1.c0 THEN vt0.c0 ELSE ']+e3摖|캋/' END))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT vt1.c0)))>=((CASE '0.7442357696999071'  WHEN vt1.c0 THEN vt0.c0 ELSE ']+e3摖|캋/' END)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((ABS(DISTINCT vt1.c0)))>=((CASE '0.7442357696999071'  WHEN vt1.c0 THEN vt0.c0 ELSE ']+e3摖|캋/' END))));
SELECT SUM(count) FROM (SELECT ALL (((((ABS(DISTINCT vt1.c0)))>=((CASE '0.7442357696999071'  WHEN vt1.c0 THEN vt0.c0 ELSE ']+e3摖|캋/' END)))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE ((((ABS(DISTINCT vt1.c0)))>=((CASE '0.7442357696999071'  WHEN vt1.c0 THEN vt0.c0 ELSE ']+e3摖|캋/' END))));
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (- (vt0.c0))  WHEN NULL THEN (vt0.c0 IN (vt0.c0, vt0.c0)) END);
SELECT * FROM vt0, vt1, t0 WHERE (((t0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)%(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0)%(t0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((t0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)%(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((vt0.c0)%(t0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0, vt1, t0 WHERE (((t0.c0)IS(vt0.c0)) COLLATE BINARY) ORDER BY ((vt0.c0)%(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt0.c0, t0.c0, vt0.c0))<=((vt0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN 0.02174154161748032 THEN vt0.c0 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)-(vt0.c0))  WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt0.c0, t0.c0, vt0.c0))<=((vt0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN 0.02174154161748032 THEN vt0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt0.c0, t0.c0, vt0.c0))<=((vt0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN 0.02174154161748032 THEN vt0.c0 ELSE t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)-(vt0.c0))  WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt0.c0, t0.c0, vt0.c0))<=((vt0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN 0.02174154161748032 THEN vt0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((((((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)) THEN t0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (((vt0.c0, t0.c0, vt0.c0))<=((vt0.c0, t0.c0, t0.c0))) WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN 0.02174154161748032 THEN vt0.c0 ELSE t0.c0 END END);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))<<(((vt0.c0)<(vt0.c0)))) WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN GLOB(0.8498714150279353, vt1.c0) ELSE (+ (vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)OR(vt1.c1)))OR(t0.c0)))AND(x'')))AND(vt1.c0)) THEN LENGTH(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN GLOB(0.8498714150279353, vt1.c0) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))<<(((vt0.c0)<(vt0.c0)))) ORDER BY CASE WHEN ((((((((vt1.c1)OR(vt1.c1)))OR(t0.c0)))AND(x'')))AND(vt1.c0)) THEN LENGTH(vt0.c0) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))<<(((vt0.c0)<(vt0.c0)))) WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN GLOB(0.8498714150279353, vt1.c0) ELSE (+ (vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)OR(vt1.c1)))OR(t0.c0)))AND(x'')))AND(vt1.c0)) THEN LENGTH(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN GLOB(0.8498714150279353, vt1.c0) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))<<(((vt0.c0)<(vt0.c0)))) ORDER BY CASE WHEN ((((((((vt1.c1)OR(vt1.c1)))OR(t0.c0)))AND(x'')))AND(vt1.c0)) THEN LENGTH(vt0.c0) END DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((((vt1.c0)OR(vt0.c0)))AND(t0.c0)))<<(((vt0.c0)<(vt0.c0)))) WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN GLOB(0.8498714150279353, vt1.c0) ELSE (+ (vt1.c0)) END) ORDER BY CASE WHEN ((((((((vt1.c1)OR(vt1.c1)))OR(t0.c0)))AND(x'')))AND(vt1.c0)) THEN LENGTH(vt0.c0) END DESC  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE (NOT (t0.c0))  WHEN (+ (x'')) THEN (('') NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c0))  WHEN (+ (x'')) THEN (('') NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(NULL)) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE (NOT (t0.c0))  WHEN (+ (x'')) THEN (('') NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c0))  WHEN (+ (x'')) THEN (('') NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(NULL)) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CASE (NOT (t0.c0))  WHEN (+ (x'')) THEN (('') NOT BETWEEN (t0.c0) AND (vt0.c0)) ELSE ((vt0.c0)IS NOT(NULL)) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ABS(COALESCE(vt1.c0, vt1.c1, vt1.c1, vt1.c1)) WHERE (CASE WHEN x'' THEN ((vt1.c1) IS TRUE) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((vt1.c1) IS TRUE) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ABS(COALESCE(vt1.c0, vt1.c1, vt1.c1, vt1.c1)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ABS(COALESCE(vt1.c0, vt1.c1, vt1.c1, vt1.c1)) WHERE (CASE WHEN x'' THEN ((vt1.c1) IS TRUE) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN ((vt1.c1) IS TRUE) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ABS(COALESCE(vt1.c0, vt1.c1, vt1.c1, vt1.c1)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ABS(COALESCE(vt1.c0, vt1.c1, vt1.c1, vt1.c1)) WHERE (CASE WHEN x'' THEN ((vt1.c1) IS TRUE) ELSE vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE)LIKE(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) NOT NULL));
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(0.7935840516958412 AS BLOB))-((+ (vt0.c0))))) ORDER BY (((((+ (vt1.c0)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7935840516958412 AS BLOB))-((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((+ (vt1.c0)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(0.7935840516958412 AS BLOB))-((+ (vt0.c0))))) ORDER BY (((((+ (vt1.c0)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7935840516958412 AS BLOB))-((+ (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((((+ (vt1.c0)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((CAST(0.7935840516958412 AS BLOB))-((+ (vt0.c0))))) ORDER BY (((((+ (vt1.c0)))AND(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(vt1.c1)))AND(((vt1.c1)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR(vt1.c1)))AND(((vt1.c1)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(vt1.c1)))AND(((vt1.c1)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR(vt1.c1)))AND(((vt1.c1)*(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(vt1.c1)))AND(((vt1.c1)*(vt1.c0)))));
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)+(0.4102519221672538)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)+(0.4102519221672538))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)+(0.4102519221672538)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)+(0.4102519221672538))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END)+(0.4102519221672538)));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))==(TRIM(DISTINCT vt1.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))==(TRIM(DISTINCT vt1.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))==(TRIM(DISTINCT vt1.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))==(TRIM(DISTINCT vt1.c1, vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) ISNULL)) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))==(TRIM(DISTINCT vt1.c1, vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((((vt0.c0, t0.c0, 0x18861bfd))<((vt1.c1, '?\r', x'')))) NOT BETWEEN (-997087647) AND ((- (vt1.c1))))) ORDER BY CAST(CASE vt0.c0  WHEN 'r92<' THEN vt0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c0, 0X18861bfd))<((vt1.c1, '?\r', x'')))) NOT BETWEEN (-997087647) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN 'r92<' THEN vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((((vt0.c0, t0.c0, 0x18861bfd))<((vt1.c1, '?\r', x'')))) NOT BETWEEN (-997087647) AND ((- (vt1.c1))))) ORDER BY CAST(CASE vt0.c0  WHEN 'r92<' THEN vt0.c0 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t0.c0, 0X18861bfd))<((vt1.c1, '?\r', x'')))) NOT BETWEEN (-997087647) AND ((- (vt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(CASE vt0.c0  WHEN 'r92<' THEN vt0.c0 END AS NUMERIC));
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE ((((((vt0.c0, t0.c0, 0x18861bfd))<((vt1.c1, '?\r', x'')))) NOT BETWEEN (-997087647) AND ((- (vt1.c1))))) ORDER BY CAST(CASE vt0.c0  WHEN 'r92<' THEN vt0.c0 END AS NUMERIC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((x'', t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((x'', t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((x'', t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((x'', t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((x'', t0.c0, t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)))) NOTNULL));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END THEN x'89e0' WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) WHEN ((((vt1.c0)AND(t0.c0)))AND(0Xffffffff9a6bca2e)) THEN vt1.c1 WHEN ((t0.c0) ISNULL) THEN (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END THEN x'89e0' WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) WHEN ((((vt1.c0)AND(t0.c0)))AND(0xffffffff9a6bca2e)) THEN vt1.c1 WHEN ((t0.c0) ISNULL) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END THEN x'89e0' WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) WHEN ((((vt1.c0)AND(t0.c0)))AND(0Xffffffff9a6bca2e)) THEN vt1.c1 WHEN ((t0.c0) ISNULL) THEN (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END THEN x'89e0' WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) WHEN ((((vt1.c0)AND(t0.c0)))AND(0xffffffff9a6bca2e)) THEN vt1.c1 WHEN ((t0.c0) ISNULL) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 END THEN x'89e0' WHEN ((t0.c0)|(vt0.c0)) THEN ((t0.c0) NOTNULL) WHEN (- (vt1.c1)) THEN CAST(vt1.c1 AS INTEGER) WHEN ((((vt1.c0)AND(t0.c0)))AND(0Xffffffff9a6bca2e)) THEN vt1.c1 WHEN ((t0.c0) ISNULL) THEN (+ (vt0.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))AND(CHANGES())))OR((+ (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST, (((- (x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))AND(CHANGES())))OR((+ (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST, (((- (x''))) IS TRUE) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) ORDER BY vt0.c0, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))AND(CHANGES())))OR((+ (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST, (((- (x''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)/(vt0.c0)))))AND(CHANGES())))OR((+ (vt0.c0)))))AND((vt0.c0 IN ()))) DESC  NULLS LAST, (((- (x''))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c0)OR('1401990126')))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(((('-466825684'))<=((vt1.c0))))))AND(((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)))) WHERE (NULLIF((NOT (0.13069281552486278)), CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY (- (((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))), CAST(((0.013508100009624657) IS TRUE) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((NOT (0.13069281552486278)), CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c0)OR('1401990126')))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(((('-466825684'))<=((vt1.c0))))))AND(((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)))) ORDER BY (- (((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))), CAST(((0.013508100009624657) IS TRUE) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c0)OR('1401990126')))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(((('-466825684'))<=((vt1.c0))))))AND(((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)))) WHERE (NULLIF((NOT (0.13069281552486278)), CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY (- (((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))), CAST(((0.013508100009624657) IS TRUE) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((NOT (0.13069281552486278)), CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c0)OR('1401990126')))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(((('-466825684'))<=((vt1.c0))))))AND(((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)))) ORDER BY (- (((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))), CAST(((0.013508100009624657) IS TRUE) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((((((((((t0.c0)OR('1401990126')))OR(NULL)))OR(vt0.c0)))OR(vt1.c0)))AND(((('-466825684'))<=((vt1.c0))))))AND(((((vt1.c1)OR(vt0.c0)))OR(vt1.c0)))) WHERE (NULLIF((NOT (0.13069281552486278)), CASE vt1.c1  WHEN vt1.c0 THEN vt0.c0 END)) ORDER BY (- (((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))), CAST(((0.013508100009624657) IS TRUE) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)-(NULL)) WHERE (((vt1.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)-(NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)-(NULL)) WHERE (((vt1.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)-(NULL)));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((t0.c0 COLLATE BINARY)-(NULL)) WHERE (((vt1.c1)%(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((+ (((((258628154)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY (((vt1.c1, ((vt1.c0)<>(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))<=((((vt1.c1) ISNULL), ((vt1.c1) IS TRUE), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((258628154)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, ((vt1.c0)!=(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))<=((((vt1.c1) ISNULL), ((vt1.c1) IS TRUE), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) DESC);
SELECT ALL * FROM vt1 WHERE ((+ (((((258628154)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY (((vt1.c1, ((vt1.c0)<>(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))<=((((vt1.c1) ISNULL), ((vt1.c1) IS TRUE), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((258628154)AND(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1, ((vt1.c0)!=(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))<=((((vt1.c1) ISNULL), ((vt1.c1) IS TRUE), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) DESC);
SELECT ALL * FROM vt1 WHERE ((+ (((((258628154)AND(vt1.c0)))OR(vt1.c1))))) ORDER BY (((vt1.c1, ((vt1.c0)<>(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))<=((((vt1.c1) ISNULL), ((vt1.c1) IS TRUE), ((((vt1.c1)OR(vt1.c1)))AND(vt1.c0))))) DESC;
SELECT ALL * FROM t0 WHERE ((- (LENGTH(t0.c0)))) ORDER BY 2.126172281E9 DESC, 'q}' DESC;
SELECT SUM(count) FROM (SELECT (((- (LENGTH(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY 2.126172281E9 DESC, 'q}' DESC);
SELECT ALL * FROM t0 WHERE ((- (LENGTH(t0.c0)))) ORDER BY 2.126172281E9 DESC, 'q}' DESC;
SELECT SUM(count) FROM (SELECT (((- (LENGTH(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY 2.126172281E9 DESC, 'q}' DESC);
SELECT ALL * FROM t0 WHERE ((- (LENGTH(t0.c0)))) ORDER BY 2.126172281E9 DESC, 'q}' DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((0.16870682019575067)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1nKJ' COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((0.16870682019575067)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1nKJ' COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((0.16870682019575067)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1nKJ' COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((0.16870682019575067)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1nKJ' COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((0.16870682019575067)))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR('1nKJ' COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0))>((t0.c0)))))<((CASE vt1.c0  WHEN '' THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))>((t0.c0)))))<((CASE vt1.c0  WHEN '' THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0))>((t0.c0)))))<((CASE vt1.c0  WHEN '' THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))>((t0.c0)))))<((CASE vt1.c0  WHEN '' THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0))>((t0.c0)))))<((CASE vt1.c0  WHEN '' THEN vt1.c0 WHEN vt1.c1 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN t0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt1.c1)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((LOWER(vt1.c1)) IS FALSE));
SELECT * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(t0.c0 COLLATE RTRIM))) ORDER BY ((TRIM(t0.c0)) ISNULL) DESC, CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c0)) ISNULL) DESC, CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(t0.c0 COLLATE RTRIM))) ORDER BY ((TRIM(t0.c0)) ISNULL) DESC, CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c0)) ISNULL) DESC, CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN '' THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)&(t0.c0 COLLATE RTRIM))) ORDER BY ((TRIM(t0.c0)) ISNULL) DESC, CAST(((t0.c0)<=(t0.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))>=((((t0.c0)+(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)>=(t0.c0))))>=((((t0.c0)+(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))>=((((t0.c0)+(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)>=(t0.c0))))>=((((t0.c0)+(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)>=(t0.c0))))>=((((t0.c0)+(t0.c0))))));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ ((((('1476748374')OR(vt1.c1)))OR(vt1.c0))))) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((('1476748374')OR(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) IS TRUE)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ ((((('1476748374')OR(vt1.c1)))OR(vt1.c0))))) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((('1476748374')OR(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) IS TRUE)) NOTNULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ ((((('1476748374')OR(vt1.c1)))OR(vt1.c0))))) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c0)!=('')))>>(((vt1.c1)<<(t0.c0))))) ORDER BY (((CAST(t0.c0 AS TEXT)))=((((((((((vt1.c0)AND(t0.c0)))AND('212164787')))OR(0.4896669142941289)))AND(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<>('')))>>(((vt1.c1)<<(t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CAST(t0.c0 AS TEXT)))==((((((((((vt1.c0)AND(t0.c0)))AND('212164787')))OR(0.4896669142941289)))AND(t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c0)!=('')))>>(((vt1.c1)<<(t0.c0))))) ORDER BY (((CAST(t0.c0 AS TEXT)))=((((((((((vt1.c0)AND(t0.c0)))AND('212164787')))OR(0.4896669142941289)))AND(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<>('')))>>(((vt1.c1)<<(t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CAST(t0.c0 AS TEXT)))==((((((((((vt1.c0)AND(t0.c0)))AND('212164787')))OR(0.4896669142941289)))AND(t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((((t0.c0)!=('')))>>(((vt1.c1)<<(t0.c0))))) ORDER BY (((CAST(t0.c0 AS TEXT)))=((((((((((vt1.c0)AND(t0.c0)))AND('212164787')))OR(0.4896669142941289)))AND(t0.c0)))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c1 AS BLOB) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) IN ()), CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) IN ()), CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c1 AS BLOB) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) IN ()), CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) IN ()), CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(vt1.c1 AS BLOB) IN ())) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) IN ()), CHANGES() DESC;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (NOT (LENGTH(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (NOT (LENGTH(t0.c0)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (NOT (LENGTH(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (NOT (LENGTH(t0.c0)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (NOT (LENGTH(t0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((ABS(t0.c0)) NOTNULL)) ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((ABS(t0.c0)) NOTNULL)) ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt1.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((ABS(t0.c0)) NOTNULL)) ORDER BY (((((t0.c0)AND(t0.c0)))AND(vt1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((('1194495589') NOT NULL) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((t0.c0)>(NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((('1194495589') NOT NULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((t0.c0)>(NULL))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((('1194495589') NOT NULL) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((t0.c0)>(NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((('1194495589') NOT NULL) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((t0.c0)>(NULL))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((('1194495589') NOT NULL) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((t0.c0)>(NULL))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('1637613858');
SELECT SUM(count) FROM (SELECT ALL (('1637613858') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('1637613858');
SELECT SUM(count) FROM (SELECT ALL (('1637613858') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ('1637613858');
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((((((t0.c0)AND('1637886138')))AND(vt0.c0)))>(x'')) WHERE ('ocrnowf');
SELECT SUM(count) FROM (SELECT (('ocrnowf') IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((((((t0.c0)AND('1637886138')))AND(vt0.c0)))>(x'')));
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((((((t0.c0)AND('1637886138')))AND(vt0.c0)))>(x'')) WHERE ('ocrnowf');
SELECT SUM(count) FROM (SELECT (('ocrnowf') IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON ((((((t0.c0)AND('1637886138')))AND(vt0.c0)))>(x'')));
SELECT COUNT(*) FROM t0, vt1 INNER JOIN vt0 ON ((((((t0.c0)AND('1637886138')))AND(vt0.c0)))>(x'')) WHERE ('ocrnowf');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_quote((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((+ (t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (json_quote((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_quote((+ (t0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt1 INDEXED BY i49 WHERE (((((vt1.c1)<=(vt1.c1)))*(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c1, ((CAST(vt1.c0 AS NUMERIC))<(CAST(vt1.c0 AS REAL))), ((CAST(vt1.c0 AS NUMERIC)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c1)))*(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INDEXED BY i49 ORDER BY vt1.c1, ((CAST(vt1.c0 AS NUMERIC))<(CAST(vt1.c0 AS REAL))), ((CAST(vt1.c0 AS NUMERIC)) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1 INDEXED BY i49 WHERE (((((vt1.c1)<=(vt1.c1)))*(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY vt1.c1, ((CAST(vt1.c0 AS NUMERIC))<(CAST(vt1.c0 AS REAL))), ((CAST(vt1.c0 AS NUMERIC)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c1)))*(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 INDEXED BY i49 ORDER BY vt1.c1, ((CAST(vt1.c0 AS NUMERIC))<(CAST(vt1.c0 AS REAL))), ((CAST(vt1.c0 AS NUMERIC)) IS FALSE) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1))=((t0.c0))))/(((t0.c0)OR(vt1.c0))))) ORDER BY (~ (x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))=((t0.c0))))/(((t0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (x'' COLLATE BINARY)) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1))=((t0.c0))))/(((t0.c0)OR(vt1.c0))))) ORDER BY (~ (x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))=((t0.c0))))/(((t0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (x'' COLLATE BINARY)) DESC);
SELECT ALL * FROM t0, vt1 WHERE ((((((vt1.c1))=((t0.c0))))/(((t0.c0)OR(vt1.c0))))) ORDER BY (~ (x'' COLLATE BINARY)) DESC;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY ((((((vt1.c0)/(x'21d41418')))OR(((((vt0.c0)AND(vt1.c1)))OR('J}F/')))))OR(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)/(x'21d41418')))OR(((((vt0.c0)AND(vt1.c1)))OR('J}F/')))))OR(t0.c0))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY ((((((vt1.c0)/(x'21d41418')))OR(((((vt0.c0)AND(vt1.c1)))OR('J}F/')))))OR(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((vt1.c0)/(x'21d41418')))OR(((((vt0.c0)AND(vt1.c1)))OR('J}F/')))))OR(t0.c0))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY ((((((vt1.c0)/(x'21d41418')))OR(((((vt0.c0)AND(vt1.c1)))OR('J}F/')))))OR(t0.c0))  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN (((t0.c0)GLOB(t0.c0)))));
SELECT * FROM vt0, vt1 WHERE (x'') ORDER BY CAST((vt1.c1 IN (vt1.c0, vt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0, vt1.c1)) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (x'') ORDER BY CAST((vt1.c1 IN (vt1.c0, vt1.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c0, vt1.c1)) AS INTEGER));
SELECT * FROM vt0, vt1 WHERE (x'') ORDER BY CAST((vt1.c1 IN (vt1.c0, vt1.c1)) AS INTEGER);
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((t0.c0) NOT NULL)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(t0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(t0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((t0.c0) NOT NULL)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(t0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(t0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (((x'')|(((t0.c0) NOT NULL)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0)GLOB(t0.c0)))) AND ((((vt0.c0)LIKE(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) ORDER BY CAST('-1411673763' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST('-1411673763' AS NUMERIC) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) ORDER BY CAST('-1411673763' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST('-1411673763' AS NUMERIC) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1)) AS NUMERIC)) ORDER BY CAST('-1411673763' AS NUMERIC) ASC;
SELECT ALL * FROM t0, vt1 WHERE ((- (CAST(t0.c0 AS REAL)))) ORDER BY LIKELIHOOD(DISTINCT CASE x''  WHEN vt1.c1 THEN t0.c0 WHEN '298938416' THEN vt1.c0 WHEN vt1.c1 THEN NULL END, 0.3606646058999008) ASC  NULLS FIRST, ((vt1.c1)&(vt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY LIKELIHOOD(DISTINCT CASE x''  WHEN vt1.c1 THEN t0.c0 WHEN '298938416' THEN vt1.c0 WHEN vt1.c1 THEN NULL END, 0.3606646058999008) ASC  NULLS FIRST, ((vt1.c1)&(vt1.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((- (CAST(t0.c0 AS REAL)))) ORDER BY LIKELIHOOD(DISTINCT CASE x''  WHEN vt1.c1 THEN t0.c0 WHEN '298938416' THEN vt1.c0 WHEN vt1.c1 THEN NULL END, 0.3606646058999008) ASC  NULLS FIRST, ((vt1.c1)&(vt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1 ORDER BY LIKELIHOOD(DISTINCT CASE x''  WHEN vt1.c1 THEN t0.c0 WHEN '298938416' THEN vt1.c0 WHEN vt1.c1 THEN NULL END, 0.3606646058999008) ASC  NULLS FIRST, ((vt1.c1)&(vt1.c1)) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((- (CAST(t0.c0 AS REAL)))) ORDER BY LIKELIHOOD(DISTINCT CASE x''  WHEN vt1.c1 THEN t0.c0 WHEN '298938416' THEN vt1.c0 WHEN vt1.c1 THEN NULL END, 0.3606646058999008) ASC  NULLS FIRST, ((vt1.c1)&(vt1.c1)) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE RTRIM CROSS JOIN vt1 ON ((((((x'b1be')OR(t0.c0)))OR(vt1.c0)))&((vt1.c1 IN ()))) WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE RTRIM CROSS JOIN vt1 ON ((((((x'b1be')OR(t0.c0)))OR(vt1.c0)))&((vt1.c1 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE RTRIM CROSS JOIN vt1 ON ((((((x'b1be')OR(t0.c0)))OR(vt1.c0)))&((vt1.c1 IN ()))) WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE RTRIM CROSS JOIN vt1 ON ((((((x'b1be')OR(t0.c0)))OR(vt1.c0)))&((vt1.c1 IN ()))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))) COLLATE RTRIM CROSS JOIN vt1 ON ((((((x'b1be')OR(t0.c0)))OR(vt1.c0)))&((vt1.c1 IN ()))) WHERE ((NOT (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED);
SELECT ALL * FROM t0, vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED);
SELECT ALL * FROM t0, vt0, vt1 WHERE ('');
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST, (vt0.c0 IN ());
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST, (vt0.c0 IN ()));
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE RTRIM  NULLS LAST, (vt0.c0 IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))>((x'')))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC, (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((vt1.c1)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))>((x'')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC, (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((vt1.c1)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))>((x'')))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC, (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((vt1.c1)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))>((x'')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC, (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((vt1.c1)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))))>((x'')))) ORDER BY ((vt1.c0 COLLATE NOCASE) IS TRUE) DESC, (~ (vt1.c0 COLLATE BINARY))  NULLS LAST, ((((vt1.c1)OR(t0.c0)))OR(t0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (NULL);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR('-1201761736')))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR('-1201761736')))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR('-1201761736')))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR('-1201761736')))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c0)OR('-1201761736')))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END WHEN CAST(t0.c0 AS TEXT) THEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN (NOT (t0.c0)) THEN t0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))>=((CASE WHEN t0.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt0.c0)+(t0.c0))  WHEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))>=((CASE WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((vt0.c0)+(t0.c0))  WHEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))>=((CASE WHEN t0.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt0.c0)+(t0.c0))  WHEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))>=((CASE WHEN t0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE ((vt0.c0)+(t0.c0))  WHEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((((((t0.c0)AND(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0))))>=((CASE WHEN t0.c0 THEN vt0.c0 END)))) ORDER BY CASE ((vt0.c0)+(t0.c0))  WHEN ((((vt0.c0)AND(t0.c0)))OR(t0.c0)) THEN (NOT (vt0.c0)) ELSE (vt0.c0 IN ()) END;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0)))<>(TOTAL_CHANGES())) WHERE ((((vt1.c1)LIKE(vt0.c0)) IN ())) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0)))<>(TOTAL_CHANGES())) ORDER BY '' ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0)))<>(TOTAL_CHANGES())) WHERE ((((vt1.c1)LIKE(vt0.c0)) IN ())) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0)))<>(TOTAL_CHANGES())) ORDER BY '' ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0)))<>(TOTAL_CHANGES())) WHERE ((((vt1.c1)LIKE(vt0.c0)) IN ())) ORDER BY '' ASC;
SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (TYPEOF(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT x'')))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (TYPEOF(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT x'')))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((NOT (TYPEOF(DISTINCT x''))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, vt1 WHERE ((NOT (((vt0.c0)-(NULL))))) ORDER BY ((json_quote(vt1.c0)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)-(NULL))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((json_quote(vt1.c0)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt0, vt1 WHERE ((NOT (((vt0.c0)-(NULL))))) ORDER BY ((json_quote(vt1.c0)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)-(NULL))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((json_quote(vt1.c0)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c0)))||((vt0.c0 IN ()))));
SELECT * FROM vt0, t0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)), QUOTE(t0.c0), NULL))!=((((vt0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (t0.c0) AND (t0.c0)), QUOTE(t0.c0), NULL))<>((((vt0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (~ (t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)), QUOTE(t0.c0), NULL))!=((((vt0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (~ (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (t0.c0) AND (t0.c0)), QUOTE(t0.c0), NULL))<>((((vt0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (~ (t0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((NULL) BETWEEN (t0.c0) AND (t0.c0)), QUOTE(t0.c0), NULL))!=((((vt0.c0) NOTNULL), ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (~ (t0.c0))))));
SELECT ALL * FROM t0, vt1 WHERE ((((- (vt1.c1)))<=(CAST(vt1.c1 AS BLOB)))) ORDER BY ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))<=(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((- (vt1.c1)))<=(CAST(vt1.c1 AS BLOB)))) ORDER BY ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))<=(CAST(vt1.c1 AS BLOB)))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE ((((- (vt1.c1)))<=(CAST(vt1.c1 AS BLOB)))) ORDER BY ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE t0.c0  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN t0.c0 WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON 439529040 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c1))) NOT NULL)) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN x'' ELSE ((t0.c0)+('')) END, ((((vt1.c0) NOT NULL))<<((x'c43c8c2c' IN ())))  NULLS FIRST, (((+ (vt1.c1)))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 439529040 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN x'' ELSE ((t0.c0)+('')) END, ((((vt1.c0) NOT NULL))<<((x'c43c8c2c' IN ())))  NULLS FIRST, (((+ (vt1.c1)))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON 439529040 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c1))) NOT NULL)) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN x'' ELSE ((t0.c0)+('')) END, ((((vt1.c0) NOT NULL))<<((x'c43c8c2c' IN ())))  NULLS FIRST, (((+ (vt1.c1)))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON 439529040 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN x'' ELSE ((t0.c0)+('')) END, ((((vt1.c0) NOT NULL))<<((x'c43c8c2c' IN ())))  NULLS FIRST, (((+ (vt1.c1)))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ASC);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON 439529040 LEFT OUTER JOIN t0 ON ((t0.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)||(vt1.c0))) AND (((((vt1.c0)AND(vt1.c1)))OR(vt0.c0)))) WHERE (((((vt1.c0)GLOB(vt1.c1))) NOT NULL)) ORDER BY CASE WHEN CASE WHEN vt1.c1 THEN vt1.c0 END THEN x'' ELSE ((t0.c0)+('')) END, ((((vt1.c0) NOT NULL))<<((x'c43c8c2c' IN ())))  NULLS FIRST, (((+ (vt1.c1)))%(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c1)))) ASC;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((vt0.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((vt0.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((vt0.c0)AND(vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(CAST(vt1.c1 AS BLOB) AS TEXT));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c1, vt1.c1, vt0.c0)) BETWEEN ((t0.c0, vt1.c1, t0.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt0.c0)) BETWEEN ((t0.c0, vt1.c1, t0.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c1, vt1.c1, vt0.c0)) BETWEEN ((t0.c0, vt1.c1, t0.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt0.c0)) BETWEEN ((t0.c0, vt1.c1, t0.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt1.c1, vt1.c1, vt0.c0)) BETWEEN ((t0.c0, vt1.c1, t0.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('aW' COLLATE BINARY) ORDER BY (((t0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (vt1.c1 IN ()), (~ (t0.c0)))) AND ((((t0.c0) ISNULL), CASE WHEN 0.9782283619695423 THEN NULL ELSE t0.c0 END, NULLIF(vt0.c0, vt0.c0))))  NULLS FIRST, (- (LIKE(vt1.c1, vt1.c1))) DESC, CASE ((vt1.c0)||(vt0.c0))  WHEN (+ (t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN (vt1.c1 IN ()) WHEN CASE WHEN '9Do' THEN vt1.c1 ELSE t0.c0 END THEN x'' ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('aW' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (vt1.c1 IN ()), (~ (t0.c0)))) AND ((((t0.c0) ISNULL), CASE WHEN 0.9782283619695423 THEN NULL ELSE t0.c0 END, NULLIF(vt0.c0, vt0.c0))))  NULLS FIRST, (- (LIKE(vt1.c1, vt1.c1))) DESC, CASE ((vt1.c0)||(vt0.c0))  WHEN (+ (t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN (vt1.c1 IN ()) WHEN CASE WHEN '9Do' THEN vt1.c1 ELSE t0.c0 END THEN x'' ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('aW' COLLATE BINARY) ORDER BY (((t0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (vt1.c1 IN ()), (~ (t0.c0)))) AND ((((t0.c0) ISNULL), CASE WHEN 0.9782283619695423 THEN NULL ELSE t0.c0 END, NULLIF(vt0.c0, vt0.c0))))  NULLS FIRST, (- (LIKE(vt1.c1, vt1.c1))) DESC, CASE ((vt1.c0)||(vt0.c0))  WHEN (+ (t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN (vt1.c1 IN ()) WHEN CASE WHEN '9Do' THEN vt1.c1 ELSE t0.c0 END THEN x'' ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('aW' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (vt1.c1 IN ()), (~ (t0.c0)))) AND ((((t0.c0) ISNULL), CASE WHEN 0.9782283619695423 THEN NULL ELSE t0.c0 END, NULLIF(vt0.c0, vt0.c0))))  NULLS FIRST, (- (LIKE(vt1.c1, vt1.c1))) DESC, CASE ((vt1.c0)||(vt0.c0))  WHEN (+ (t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN (vt1.c1 IN ()) WHEN CASE WHEN '9Do' THEN vt1.c1 ELSE t0.c0 END THEN x'' ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ('aW' COLLATE BINARY) ORDER BY (((t0.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (vt1.c1 IN ()), (~ (t0.c0)))) AND ((((t0.c0) ISNULL), CASE WHEN 0.9782283619695423 THEN NULL ELSE t0.c0 END, NULLIF(vt0.c0, vt0.c0))))  NULLS FIRST, (- (LIKE(vt1.c1, vt1.c1))) DESC, CASE ((vt1.c0)||(vt0.c0))  WHEN (+ (t0.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((vt1.c0)IS NOT(vt1.c1)) THEN (vt1.c1 IN ()) WHEN CASE WHEN '9Do' THEN vt1.c1 ELSE t0.c0 END THEN x'' ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN (t0.c0)))<=(((t0.c0) BETWEEN (0.11799335817189327) AND (t0.c0)))) DESC, ((((((((((t0.c0)||(t0.c0)))OR((t0.c0 IN ()))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(DATETIME(t0.c0, -319442156, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)==(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0)))<=(((t0.c0) BETWEEN (0.11799335817189327) AND (t0.c0)))) DESC, ((((((((((t0.c0)||(t0.c0)))OR((t0.c0 IN ()))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(DATETIME(t0.c0, -319442156, t0.c0))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN (t0.c0)))<=(((t0.c0) BETWEEN (0.11799335817189327) AND (t0.c0)))) DESC, ((((((((((t0.c0)||(t0.c0)))OR((t0.c0 IN ()))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(DATETIME(t0.c0, -319442156, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)==(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0)))<=(((t0.c0) BETWEEN (0.11799335817189327) AND (t0.c0)))) DESC, ((((((((((t0.c0)||(t0.c0)))OR((t0.c0 IN ()))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(DATETIME(t0.c0, -319442156, t0.c0))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c0))) ISNULL)) ORDER BY (((t0.c0 IN (t0.c0)))<=(((t0.c0) BETWEEN (0.11799335817189327) AND (t0.c0)))) DESC, ((((((((((t0.c0)||(t0.c0)))OR((t0.c0 IN ()))))AND((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)))OR(DATETIME(t0.c0, -319442156, t0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((NOT (vt0.c0)))) ORDER BY '4EꟉ-Z';
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '4EꟉ-Z');
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((NOT (vt0.c0)))) ORDER BY '4EꟉ-Z';
SELECT SUM(count) FROM (SELECT ALL ((TRIM((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '4EꟉ-Z');
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM((NOT (vt0.c0)))) ORDER BY '4EꟉ-Z';
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt1.c1)<<(vt1.c0))) BETWEEN (SQLITE_COMPILEOPTION_USED(vt1.c0)) AND (vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(vt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) ASC  NULLS LAST, IFNULL(DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), vt1.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) ASC  NULLS LAST, IFNULL(DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), vt1.c1 COLLATE BINARY) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) ASC  NULLS LAST, IFNULL(DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), vt1.c1 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) ASC  NULLS LAST, IFNULL(DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), vt1.c1 COLLATE BINARY) ASC);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS INTEGER) ASC  NULLS LAST, IFNULL(DISTINCT (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))), vt1.c1 COLLATE BINARY) ASC;
SELECT ALL * FROM vt1 INNER JOIN t0 ON (CAST(vt1.c1 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0))>((vt0.c0))) THEN '' COLLATE BINARY END WHERE (((((vt1.c0)|(vt0.c0)))>(((vt0.c0)<=(t0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((t0.c0)AND(vt1.c1)))AND(vt0.c0))))  NULLS LAST, (~ ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0)))>(((vt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (CAST(vt1.c1 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0))>((vt0.c0))) THEN '' COLLATE BINARY END ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((t0.c0)AND(vt1.c1)))AND(vt0.c0))))  NULLS LAST, (~ ('')) DESC);
SELECT ALL * FROM vt1 INNER JOIN t0 ON (CAST(vt1.c1 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0))>((vt0.c0))) THEN '' COLLATE BINARY END WHERE (((((vt1.c0)|(vt0.c0)))>(((vt0.c0)<=(t0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((t0.c0)AND(vt1.c1)))AND(vt0.c0))))  NULLS LAST, (~ ('')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0)))>(((vt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (CAST(vt1.c1 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0))>((vt0.c0))) THEN '' COLLATE BINARY END ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((t0.c0)AND(vt1.c1)))AND(vt0.c0))))  NULLS LAST, (~ ('')) DESC);
SELECT ALL * FROM vt1 INNER JOIN t0 ON (CAST(vt1.c1 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN (((t0.c0))>((vt0.c0))) THEN '' COLLATE BINARY END WHERE (((((vt1.c0)|(vt0.c0)))>(((vt0.c0)<=(t0.c0))))) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((t0.c0)AND(vt1.c1)))AND(vt0.c0))))  NULLS LAST, (~ ('')) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON '' WHERE (((NULL) BETWEEN (((t0.c0)!=(t0.c0))) AND ((NOT (vt1.c1))))) ORDER BY x'', (NOT (CAST(vt1.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c0)!=(t0.c0))) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON '' ORDER BY x'', (NOT (CAST(vt1.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON '' WHERE (((NULL) BETWEEN (((t0.c0)!=(t0.c0))) AND ((NOT (vt1.c1))))) ORDER BY x'', (NOT (CAST(vt1.c1 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c0)!=(t0.c0))) AND ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON '' ORDER BY x'', (NOT (CAST(vt1.c1 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON '' WHERE (((NULL) BETWEEN (((t0.c0)!=(t0.c0))) AND ((NOT (vt1.c1))))) ORDER BY x'', (NOT (CAST(vt1.c1 AS NUMERIC))) DESC;
SELECT * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9050943828488588)) AND ((vt0.c0, '3F', vt0.c0)))))) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9050943828488588)) AND ((vt0.c0, '3F', vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9050943828488588)) AND ((vt0.c0, '3F', vt0.c0)))))) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9050943828488588)) AND ((vt0.c0, '3F', vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, 0.9050943828488588)) AND ((vt0.c0, '3F', vt0.c0)))))) ORDER BY (~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))AND(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)))))AND(vt1.c0)));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON UPPER(CAST(t0.c0 AS NUMERIC)) WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON UPPER(CAST(t0.c0 AS NUMERIC)));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON UPPER(CAST(t0.c0 AS NUMERIC)) WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON UPPER(CAST(t0.c0 AS NUMERIC)));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON UPPER(CAST(t0.c0 AS NUMERIC)) WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON '-1523590315' CROSS JOIN vt0 ON vt0.c0 WHERE (((-918507397)IS NOT(((vt1.c1)||(t0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (-1265270079) AND (vt1.c0)))<=(((vt1.c0)AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((-918507397)IS NOT(((vt1.c1)||(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON '-1523590315' CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt0.c0) NOT BETWEEN (-1265270079) AND (vt1.c0)))<=(((vt1.c0)AND(vt1.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON '-1523590315' CROSS JOIN vt0 ON vt0.c0 WHERE (((-918507397)IS NOT(((vt1.c1)||(t0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (-1265270079) AND (vt1.c0)))<=(((vt1.c0)AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((-918507397)IS NOT(((vt1.c1)||(t0.c0))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON '-1523590315' CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt0.c0) NOT BETWEEN (-1265270079) AND (vt1.c0)))<=(((vt1.c0)AND(vt1.c1)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON '-1523590315' CROSS JOIN vt0 ON vt0.c0 WHERE (((-918507397)IS NOT(((vt1.c1)||(t0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (-1265270079) AND (vt1.c0)))<=(((vt1.c0)AND(vt1.c1))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)|((vt0.c0 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (((vt1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c1))) NOT BETWEEN (vt1.c1) AND (vt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ ('Z(')) COLLATE RTRIM  NULLS LAST, ((((t0.c0)AND(t0.c0))) NOT BETWEEN (0.33358551418421045) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('-1205938854', vt0.c0, vt0.c0))))OR(((vt0.c0)IS NOT(x'')))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ ('Z(')) COLLATE RTRIM  NULLS LAST, ((((t0.c0)AND(t0.c0))) NOT BETWEEN (0.33358551418421045) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('-1205938854', vt0.c0, vt0.c0))))OR(((vt0.c0)IS NOT(x'')))))AND(x'')) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ ('Z(')) COLLATE RTRIM  NULLS LAST, ((((t0.c0)AND(t0.c0))) NOT BETWEEN (0.33358551418421045) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('-1205938854', vt0.c0, vt0.c0))))OR(((vt0.c0)IS NOT(x'')))))AND(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ ('Z(')) COLLATE RTRIM  NULLS LAST, ((((t0.c0)AND(t0.c0))) NOT BETWEEN (0.33358551418421045) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('-1205938854', vt0.c0, vt0.c0))))OR(((vt0.c0)IS NOT(x'')))))AND(x'')) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (~ ('Z(')) COLLATE RTRIM  NULLS LAST, ((((t0.c0)AND(t0.c0))) NOT BETWEEN (0.33358551418421045) AND ((((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, (((((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt0.c0)) AND (('-1205938854', vt0.c0, vt0.c0))))OR(((vt0.c0)IS NOT(x'')))))AND(x'')) ASC;
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c1)<(vt1.c0))))) ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c1)<(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c1)<(vt1.c0))))) ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c1)<(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END)));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c1)<(vt1.c0))))) ORDER BY (((((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)LIKE(((vt1.c1)<(0.8708205128584103)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(((vt1.c1)<(0.8708205128584103))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)LIKE(((vt1.c1)<(0.8708205128584103)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)LIKE(((vt1.c1)<(0.8708205128584103))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)LIKE(((vt1.c1)<(0.8708205128584103)))));
SELECT ALL * FROM t0, vt1 WHERE ((+ (((t0.c0)-(t0.c0))))) ORDER BY ABS(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END), (NOT ((((vt1.c1))>((0.4097506200174448)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ABS(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END), (NOT ((((vt1.c1))>((0.4097506200174448)))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((+ (((t0.c0)-(t0.c0))))) ORDER BY ABS(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END), (NOT ((((vt1.c1))>((0.4097506200174448)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ABS(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END), (NOT ((((vt1.c1))>((0.4097506200174448)))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE ((+ (((t0.c0)-(t0.c0))))) ORDER BY ABS(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END), (NOT ((((vt1.c1))>((0.4097506200174448)))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 IN ()), '{}' COLLATE RTRIM, ((vt0.c0)-(vt0.c0))))<((json_valid(vt0.c0), x'', ((vt0.c0) IS TRUE))))) ORDER BY (((((t0.c0)%(vt0.c0))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), '{}' COLLATE RTRIM, ((vt0.c0)-(vt0.c0))))<((json_valid(vt0.c0), x'', ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0)%(vt0.c0))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 IN ()), '{}' COLLATE RTRIM, ((vt0.c0)-(vt0.c0))))<((json_valid(vt0.c0), x'', ((vt0.c0) IS TRUE))))) ORDER BY (((((t0.c0)%(vt0.c0))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), '{}' COLLATE RTRIM, ((vt0.c0)-(vt0.c0))))<((json_valid(vt0.c0), x'', ((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0)%(vt0.c0))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))))));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 IN ()), '{}' COLLATE RTRIM, ((vt0.c0)-(vt0.c0))))<((json_valid(vt0.c0), x'', ((vt0.c0) IS TRUE))))) ORDER BY (((((t0.c0)%(vt0.c0))))>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON 0x141230eb WHERE ((((vt0.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1)-(vt1.c1)))) AND ((vt0.c0, CAST(vt1.c0 AS REAL), CAST(vt0.c0 AS BLOB))))) ORDER BY 1592754477 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1)-(vt1.c1)))) AND ((vt0.c0, CAST(vt1.c0 AS REAL), CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON 0X141230eb ORDER BY 1592754477 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON 0x141230eb WHERE ((((vt0.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1)-(vt1.c1)))) AND ((vt0.c0, CAST(vt1.c0 AS REAL), CAST(vt0.c0 AS BLOB))))) ORDER BY 1592754477 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c1, vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1)-(vt1.c1)))) AND ((vt0.c0, CAST(vt1.c0 AS REAL), CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON 0X141230eb ORDER BY 1592754477 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)IS NOT(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)IS NOT(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)IS NOT(t0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))<<(CAST(t0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) IS FALSE));
SELECT * FROM vt1 WHERE (((+ (vt1.c0)) IN ())) ORDER BY (NOT (json_array_length(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT (json_array_length(vt1.c0, vt1.c0))) ASC);
SELECT * FROM vt1 WHERE (((+ (vt1.c0)) IN ())) ORDER BY (NOT (json_array_length(vt1.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT (json_array_length(vt1.c0, vt1.c0))) ASC);
SELECT * FROM t0 INNER JOIN vt1 ON ((LIKELY(DISTINCT NULL))IS NOT(t0.c0)) LEFT OUTER JOIN vt0 ON (+ ((+ (vt1.c0)))) WHERE (((vt1.c1) NOTNULL)) ORDER BY TYPEOF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (x''))) DESC, ((((vt1.c0 COLLATE BINARY)AND(ABS(vt1.c0))))AND(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((LIKELY(DISTINCT NULL))IS NOT(t0.c0)) LEFT OUTER JOIN vt0 ON (+ ((+ (vt1.c0)))) ORDER BY TYPEOF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (x''))) DESC, ((((vt1.c0 COLLATE BINARY)AND(ABS(vt1.c0))))AND(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))));
SELECT * FROM t0 INNER JOIN vt1 ON ((LIKELY(DISTINCT NULL))IS NOT(t0.c0)) LEFT OUTER JOIN vt0 ON (+ ((+ (vt1.c0)))) WHERE (((vt1.c1) NOTNULL)) ORDER BY TYPEOF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (x''))) DESC, ((((vt1.c0 COLLATE BINARY)AND(ABS(vt1.c0))))AND(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((LIKELY(DISTINCT NULL))IS NOT(t0.c0)) LEFT OUTER JOIN vt0 ON (+ ((+ (vt1.c0)))) ORDER BY TYPEOF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (x''))) DESC, ((((vt1.c0 COLLATE BINARY)AND(ABS(vt1.c0))))AND(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))));
SELECT * FROM t0 INNER JOIN vt1 ON ((LIKELY(DISTINCT NULL))IS NOT(t0.c0)) LEFT OUTER JOIN vt0 ON (+ ((+ (vt1.c0)))) WHERE (((vt1.c1) NOTNULL)) ORDER BY TYPEOF(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (x''))) DESC, ((((vt1.c0 COLLATE BINARY)AND(ABS(vt1.c0))))AND(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))OR(vt1.c1)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt0.c0)<<(801480479))))  NULLS FIRST, ((((vt1.c0 IN (vt1.c0)), ((((vt1.c1)AND(vt0.c0)))AND(NULL)), load_extension(vt0.c0)))>((((vt1.c1) BETWEEN (vt1.c1) AND (NULL)), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt0.c0)<<(801480479))))  NULLS FIRST, ((((vt1.c0 IN (vt1.c0)), ((((vt1.c1)AND(vt0.c0)))AND(NULL)), load_extension(vt0.c0)))>((((vt1.c1) BETWEEN (vt1.c1) AND (NULL)), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt0.c0)<<(801480479))))  NULLS FIRST, ((((vt1.c0 IN (vt1.c0)), ((((vt1.c1)AND(vt0.c0)))AND(NULL)), load_extension(vt0.c0)))>((((vt1.c1) BETWEEN (vt1.c1) AND (NULL)), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt0.c0)<<(801480479))))  NULLS FIRST, ((((vt1.c0 IN (vt1.c0)), ((((vt1.c1)AND(vt0.c0)))AND(NULL)), load_extension(vt0.c0)))>((((vt1.c1) BETWEEN (vt1.c1) AND (NULL)), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) ORDER BY ((vt1.c0 COLLATE NOCASE)%(((vt0.c0)<<(801480479))))  NULLS FIRST, ((((vt1.c0 IN (vt1.c0)), ((((vt1.c1)AND(vt0.c0)))AND(NULL)), load_extension(vt0.c0)))>((((vt1.c1) BETWEEN (vt1.c1) AND (NULL)), ((vt0.c0)IS(vt0.c0)), ((((((((vt0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(NULL))) NOT BETWEEN ((- (vt1.c1))) AND ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((x'a6b8', vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1)))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c1)/(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))OR(NULL))) NOT BETWEEN ((- (vt1.c1))) AND ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((x'a6b8', vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c1)/(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(NULL))) NOT BETWEEN ((- (vt1.c1))) AND ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((x'a6b8', vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1)))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c1)/(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1)AND(vt1.c0)))OR(NULL))) NOT BETWEEN ((- (vt1.c1))) AND ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((x'a6b8', vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c1)/(vt1.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c0)))OR(NULL))) NOT BETWEEN ((- (vt1.c1))) AND ((((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((x'a6b8', vt1.c1, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c1)))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c1)/(vt1.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((TYPEOF(t0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.1428362413820219 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0) NOTNULL))AND(((vt0.c0)>(t0.c0)))), HEX(((vt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.1428362413820219 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOTNULL))AND(((vt0.c0)>(t0.c0)))), HEX(((vt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((TYPEOF(t0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.1428362413820219 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0) NOTNULL))AND(((vt0.c0)>(t0.c0)))), HEX(((vt0.c0) IS TRUE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.1428362413820219 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) NOTNULL))AND(((vt0.c0)>(t0.c0)))), HEX(((vt0.c0) IS TRUE))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((TYPEOF(t0.c0)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.1428362413820219 END) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((((t0.c0) NOTNULL))AND(((vt0.c0)>(t0.c0)))), HEX(((vt0.c0) IS TRUE))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9738347777765802 AS BLOB)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN (((vt0.c0))<((vt0.c0))) END) ORDER BY TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.9738347777765802 AS BLOB)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN (((vt0.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9738347777765802 AS BLOB)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN (((vt0.c0))<((vt0.c0))) END) ORDER BY TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.9738347777765802 AS BLOB)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN (((vt0.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(0.9738347777765802 AS BLOB)  WHEN CASE WHEN x'' THEN vt0.c0 END THEN (((vt0.c0))<((vt0.c0))) END) ORDER BY TRIM(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TYPEOF(DISTINCT vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TYPEOF(DISTINCT vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TYPEOF(DISTINCT vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TYPEOF(DISTINCT vt0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY INSTR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TYPEOF(DISTINCT vt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1)) COLLATE NOCASE) ORDER BY ((x'')&(vt1.c1)) COLLATE NOCASE  NULLS LAST, ('' IN ()) ASC, (+ (0Xffffffff8291ea89));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((x'')&(vt1.c1)) COLLATE NOCASE  NULLS LAST, ('' IN ()) ASC, (+ (0Xffffffff8291ea89)));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1)) COLLATE NOCASE) ORDER BY ((x'')&(vt1.c1)) COLLATE NOCASE  NULLS LAST, ('' IN ()) ASC, (+ (0Xffffffff8291ea89));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((x'')&(vt1.c1)) COLLATE NOCASE  NULLS LAST, ('' IN ()) ASC, (+ (0Xffffffff8291ea89)));
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c1)) COLLATE NOCASE) ORDER BY ((x'')&(vt1.c1)) COLLATE NOCASE  NULLS LAST, ('' IN ()) ASC, (+ (0Xffffffff8291ea89));
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS TEXT)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN ()));
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS TEXT)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN ()));
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c1 AS TEXT)))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c1) AND (NULL)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+('0')) COLLATE NOCASE) ORDER BY TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+('0')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+('0')) COLLATE NOCASE) ORDER BY TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+('0')) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)+('0')) COLLATE NOCASE) ORDER BY TYPEOF(DISTINCT (vt0.c0 IN (vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(HEX(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(HEX(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3632993647809718') ORDER BY 0.2624790535818321, ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))) ISNULL) ASC, CAST(TRIM(vt1.c1) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.3632993647809718') IS TRUE)  as count FROM vt1 ORDER BY 0.2624790535818321, ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))) ISNULL) ASC, CAST(TRIM(vt1.c1) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3632993647809718') ORDER BY 0.2624790535818321, ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))) ISNULL) ASC, CAST(TRIM(vt1.c1) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.3632993647809718') IS TRUE)  as count FROM vt1 ORDER BY 0.2624790535818321, ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))) ISNULL) ASC, CAST(TRIM(vt1.c1) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ('0.3632993647809718') ORDER BY 0.2624790535818321, ((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1))) ISNULL) ASC, CAST(TRIM(vt1.c1) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((CAST('' AS INTEGER))))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((CAST('' AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((CAST('' AS INTEGER))))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((CAST('' AS INTEGER))))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((CAST('' AS INTEGER))))) ORDER BY CASE WHEN ((vt1.c0)&(vt1.c1)) THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) ELSE CAST(vt1.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) ELSE CAST(vt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) ELSE CAST(vt1.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) ELSE CAST(vt1.c1 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) THEN ABS(DISTINCT vt1.c0) ELSE CAST(vt1.c1 AS INTEGER) END);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) WHERE (json_patch(((t0.c0)LIKE('%8j.')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ORDER BY (0.09992727447433558 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((t0.c0)LIKE('%8j.')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) ORDER BY (0.09992727447433558 IN ()) ASC);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) WHERE (json_patch(((t0.c0)LIKE('%8j.')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ORDER BY (0.09992727447433558 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((t0.c0)LIKE('%8j.')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) ORDER BY (0.09992727447433558 IN ()) ASC);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()) WHERE (json_patch(((t0.c0)LIKE('%8j.')), ((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ORDER BY (0.09992727447433558 IN ()) ASC;
SELECT * FROM vt1, vt0 INNER JOIN t0 ON (NOT (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 END)) WHERE (ABS(TRIM(DISTINCT vt1.c0, NULL)));
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(DISTINCT vt1.c0, NULL))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (NOT (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM vt1, vt0 INNER JOIN t0 ON (NOT (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 END)) WHERE (ABS(TRIM(DISTINCT vt1.c0, NULL)));
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(DISTINCT vt1.c0, NULL))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (NOT (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM vt1, vt0 INNER JOIN t0 ON (NOT (CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN t0.c0 THEN t0.c0 END)) WHERE (ABS(TRIM(DISTINCT vt1.c0, NULL)));
SELECT * FROM vt1 INNER JOIN t0 ON (((vt0.c0) IS FALSE) IN (HEX(vt1.c1))) INNER JOIN vt0 ON t0.c0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((vt0.c0) IS FALSE) IN (HEX(vt1.c1))) INNER JOIN vt0 ON t0.c0);
SELECT * FROM vt1 INNER JOIN t0 ON (((vt0.c0) IS FALSE) IN (HEX(vt1.c1))) INNER JOIN vt0 ON t0.c0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (((vt0.c0) IS FALSE) IN (HEX(vt1.c1))) INNER JOIN vt0 ON t0.c0);
SELECT * FROM vt1 INNER JOIN t0 ON (((vt0.c0) IS FALSE) IN (HEX(vt1.c1))) INNER JOIN vt0 ON t0.c0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (((NULL) IS FALSE)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((NULL) IS FALSE)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((NULL) IS FALSE)) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((0.026672336362042248) IS TRUE)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN 0.15203311608039516 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.026672336362042248) IS TRUE)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN 0.15203311608039516 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((0.026672336362042248) IS TRUE)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN 0.15203311608039516 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.026672336362042248) IS TRUE)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN 0.15203311608039516 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((0.026672336362042248) IS TRUE)) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (CASE NULL  WHEN vt0.c0 THEN 0.15203311608039516 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((t0.c0, t0.c0, t0.c0, x'c54b', t0.c0))))) WHERE ((CHANGES() IN ()));
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((t0.c0, t0.c0, t0.c0, x'c54b', t0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((t0.c0, t0.c0, t0.c0, x'c54b', t0.c0))))) WHERE ((CHANGES() IN ()));
SELECT SUM(count) FROM (SELECT (((CHANGES() IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((t0.c0, t0.c0, t0.c0, x'c54b', t0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CASE WHEN t0.c0 THEN t0.c0 END)LIKE((((t0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((t0.c0, t0.c0, t0.c0, x'c54b', t0.c0))))) WHERE ((CHANGES() IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END WHEN CAST(vt1.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN 0x3a5a0a98 ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END END) ORDER BY (((~ (vt1.c1)))LIKE((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END WHEN CAST(vt1.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN 0X3a5a0a98 ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((~ (vt1.c1)))LIKE((- (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END WHEN CAST(vt1.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN 0x3a5a0a98 ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END END) ORDER BY (((~ (vt1.c1)))LIKE((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt1.c0)) THEN CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END WHEN CAST(vt1.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN 0X3a5a0a98 ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((~ (vt1.c1)))LIKE((- (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN CASE vt1.c1  WHEN vt1.c1 THEN vt0.c0 ELSE vt1.c1 END WHEN CAST(vt1.c0 AS TEXT) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((vt0.c0) IS FALSE) THEN 0x3a5a0a98 ELSE CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END END) ORDER BY (((~ (vt1.c1)))LIKE((- (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.c0)))!=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))!=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.c0)))!=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))!=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((- (vt1.c0)))!=(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((0.18453992875635816) NOTNULL), vt0.c0 COLLATE BINARY))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xa803da9))), TRIM(vt0.c0, vt0.c0), ((vt0.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((0.18453992875635816) NOTNULL), vt0.c0 COLLATE BINARY))=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xa803da9))), TRIM(vt0.c0, vt0.c0), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((0.18453992875635816) NOTNULL), vt0.c0 COLLATE BINARY))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xa803da9))), TRIM(vt0.c0, vt0.c0), ((vt0.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((0.18453992875635816) NOTNULL), vt0.c0 COLLATE BINARY))=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xa803da9))), TRIM(vt0.c0, vt0.c0), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((0.18453992875635816) NOTNULL), vt0.c0 COLLATE BINARY))==(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0Xa803da9))), TRIM(vt0.c0, vt0.c0), ((vt0.c0)>>(vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c1)<<(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c1)<<(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<<(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c1)<<(t0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN 0.7963935717533278 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM WHERE (((((((((((((((((vt1.c0)AND(((vt0.c0)=(vt1.c0)))))AND(((vt1.c1) NOTNULL))))AND(((945148728)%(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))))AND(((vt1.c0)*(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(((vt0.c0)==(vt1.c0)))))AND(((vt1.c1) NOTNULL))))AND(((945148728)%(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))))AND(((vt1.c0)*(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN 0.7963935717533278 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN 0.7963935717533278 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM WHERE (((((((((((((((((vt1.c0)AND(((vt0.c0)=(vt1.c0)))))AND(((vt1.c1) NOTNULL))))AND(((945148728)%(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))))AND(((vt1.c0)*(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(((vt0.c0)==(vt1.c0)))))AND(((vt1.c1) NOTNULL))))AND(((945148728)%(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))))AND(((vt1.c0)*(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN 0.7963935717533278 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CASE vt0.c0  WHEN vt0.c0 THEN 0.7963935717533278 WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 END COLLATE RTRIM WHERE (((((((((((((((((vt1.c0)AND(((vt0.c0)=(vt1.c0)))))AND(((vt1.c1) NOTNULL))))AND(((945148728)%(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))))AND(((vt1.c0)*(vt0.c0)))))AND(CAST(vt1.c0 AS TEXT))))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN vt1.c1 THEN ((x'') NOT BETWEEN (vt1.c1) AND ('')) END) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN vt1.c1 THEN ((x'') NOT BETWEEN (vt1.c1) AND ('')) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))<>(((vt0.c0)>>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN vt1.c1 THEN ((x'') NOT BETWEEN (vt1.c1) AND ('')) END) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN vt1.c1 THEN ((x'') NOT BETWEEN (vt1.c1) AND ('')) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0 IN ()))<>(((vt0.c0)>>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN vt1.c1 THEN ((x'') NOT BETWEEN (vt1.c1) AND ('')) END) ORDER BY (((vt0.c0 IN ()))!=(((vt0.c0)>>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) ISNULL) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-159840954' IN (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (NOT (RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((('-159840954' IN (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (NOT (RTRIM(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-159840954' IN (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (NOT (RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((('-159840954' IN (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (NOT (RTRIM(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-159840954' IN (vt0.c0)))/(vt0.c0 COLLATE RTRIM))) ORDER BY (- (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (NOT (RTRIM(vt0.c0)));
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c1  WHEN (((vt0.c0))<((vt1.c0))) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN (((vt0.c0))<((vt1.c0))) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c1  WHEN (((vt0.c0))<((vt1.c0))) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN (((vt0.c0))<((vt1.c0))) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c1  WHEN (((vt0.c0))<((vt1.c0))) THEN (NOT (vt0.c0)) END);
SELECT ALL * FROM t0, vt1, vt0 WHERE (load_extension(((vt0.c0)AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt0.c0)AND(t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (load_extension(((vt0.c0)AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((vt0.c0)AND(t0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(0.7585959295399386 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7585959295399386 AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(0.7585959295399386 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.7585959295399386 AS REAL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(0.7585959295399386 AS REAL));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.5378404141474639 COLLATE RTRIM) ORDER BY CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN (t0.c0 IN (t0.c0)) THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((0.5378404141474639 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN (t0.c0 IN (t0.c0)) THEN vt1.c0 END DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.5378404141474639 COLLATE RTRIM) ORDER BY CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN (t0.c0 IN (t0.c0)) THEN vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((0.5378404141474639 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN (t0.c0 IN (t0.c0)) THEN vt1.c0 END DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.5378404141474639 COLLATE RTRIM) ORDER BY CASE CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END  WHEN (t0.c0 IN (t0.c0)) THEN vt1.c0 END DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))>>(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)||((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)||((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)||((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)||((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt1.c1)||((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '849051319'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '849051319'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '849051319'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY '849051319'  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((~ (vt0.c0)) AS REAL)) ORDER BY '849051319'  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE (TIME(((vt1.c0) NOTNULL), t0.c0, ((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TIME(((vt1.c0) NOTNULL), t0.c0, ((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (TIME(((vt1.c0) NOTNULL), t0.c0, ((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((TIME(((vt1.c0) NOTNULL), t0.c0, ((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (TIME(((vt1.c0) NOTNULL), t0.c0, ((t0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)>(t0.c0))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)>(t0.c0))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END)>(t0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS('H\n-^oIS~'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 0.9667960242659491 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6677805592217325 THEN vt0.c0 END) AND (t0.c0)) WHERE (((t0.c0 COLLATE NOCASE)<<((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<<((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS('H\n-^oIS~'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 0.9667960242659491 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6677805592217325 THEN vt0.c0 END) AND (t0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS('H\n-^oIS~'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 0.9667960242659491 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6677805592217325 THEN vt0.c0 END) AND (t0.c0)) WHERE (((t0.c0 COLLATE NOCASE)<<((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<<((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS('H\n-^oIS~'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 0.9667960242659491 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6677805592217325 THEN vt0.c0 END) AND (t0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((vt1.c0)IS('H\n-^oIS~'))) NOT BETWEEN (CASE WHEN vt0.c0 THEN 0.9667960242659491 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6677805592217325 THEN vt0.c0 END) AND (t0.c0)) WHERE (((t0.c0 COLLATE NOCASE)<<((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CAST('-1787089602' AS BLOB) AS NUMERIC) WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt1.c1))) ORDER BY 0.8939271555982871  NULLS FIRST, ((NULL) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt1.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CAST('-1787089602' AS BLOB) AS NUMERIC) ORDER BY 0.8939271555982871  NULLS FIRST, ((NULL) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CAST('-1787089602' AS BLOB) AS NUMERIC) WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt1.c1))) ORDER BY 0.8939271555982871  NULLS FIRST, ((NULL) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt1.c1))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CAST('-1787089602' AS BLOB) AS NUMERIC) ORDER BY 0.8939271555982871  NULLS FIRST, ((NULL) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CAST('-1787089602' AS BLOB) AS NUMERIC) WHERE (((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0) IS TRUE))))AND(vt1.c1))) ORDER BY 0.8939271555982871  NULLS FIRST, ((NULL) IS FALSE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)) COLLATE NOCASE);
SELECT * FROM vt0, vt1, t0 WHERE ((((TYPEOF(DISTINCT t0.c0), vt1.c0, CAST(vt1.c0 AS INTEGER)))!=((UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, ((vt1.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT t0.c0), vt1.c0, CAST(vt1.c0 AS INTEGER)))!=((UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, ((vt1.c1) NOTNULL))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((TYPEOF(DISTINCT t0.c0), vt1.c0, CAST(vt1.c0 AS INTEGER)))!=((UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, ((vt1.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT t0.c0), vt1.c0, CAST(vt1.c0 AS INTEGER)))!=((UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, ((vt1.c1) NOTNULL))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE ((((TYPEOF(DISTINCT t0.c0), vt1.c0, CAST(vt1.c0 AS INTEGER)))!=((UNLIKELY(vt0.c0), vt0.c0 COLLATE NOCASE, ((vt1.c1) NOTNULL)))));
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY ((((((vt0.c0) NOT NULL))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY ((((((vt0.c0) NOT NULL))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) ORDER BY ((((((vt0.c0) NOT NULL))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(vt0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM t0, vt0 WHERE ('0.8108682393909151' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('0.8108682393909151' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('0.8108682393909151' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('0.8108682393909151' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('0.8108682393909151' COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'' END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'' END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (CASE WHEN vt1.c1 THEN vt1.c1 ELSE x'' END)));
SELECT ALL * FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((vt1.c1 COLLATE RTRIM)/((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c1 COLLATE RTRIM)/((+ (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((vt1.c1 COLLATE RTRIM)/((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c1 COLLATE RTRIM)/((+ (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ((vt1.c1 COLLATE RTRIM)/((+ (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((INSTR(vt0.c0, vt0.c0))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)/(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN (vt0.c0 IN ()) WHEN '' THEN CAST(t0.c0 AS TEXT) ELSE json_type(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0)/(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN (vt0.c0 IN ()) WHEN '' THEN CAST(t0.c0 AS TEXT) ELSE json_type(t0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((INSTR(vt0.c0, vt0.c0))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((INSTR(vt0.c0, vt0.c0))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)/(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN (vt0.c0 IN ()) WHEN '' THEN CAST(t0.c0 AS TEXT) ELSE json_type(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((vt0.c0)/(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN (vt0.c0 IN ()) WHEN '' THEN CAST(t0.c0 AS TEXT) ELSE json_type(t0.c0) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((INSTR(vt0.c0, vt0.c0))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((INSTR(vt0.c0, vt0.c0))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0)/(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN (vt0.c0 IN ()) WHEN '' THEN CAST(t0.c0 AS TEXT) ELSE json_type(t0.c0) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 END IN (vt1.c1)) FULL OUTER JOIN vt0 ON (((vt1.c1 IN ())) ISNULL) WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 END IN (vt1.c1)) FULL OUTER JOIN vt0 ON (((vt1.c1 IN ())) ISNULL) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1) IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 END IN (vt1.c1)) FULL OUTER JOIN vt0 ON (((vt1.c1 IN ())) ISNULL) WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 END IN (vt1.c1)) FULL OUTER JOIN vt0 ON (((vt1.c1 IN ())) ISNULL) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1) IS TRUE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (CASE vt1.c1  WHEN vt1.c1 THEN t0.c0 END IN (vt1.c1)) FULL OUTER JOIN vt0 ON (((vt1.c1 IN ())) ISNULL) WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt1.c1) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS INTEGER)) ORDER BY json_insert(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0);
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY json_insert(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS INTEGER)) ORDER BY json_insert(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0);
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY json_insert(LIKELY(t0.c0), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, t0.c0));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)||(vt1.c1)) COLLATE BINARY CROSS JOIN t0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)||(vt1.c1)) COLLATE BINARY CROSS JOIN t0 ON (NOT (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)||(vt1.c1)) COLLATE BINARY CROSS JOIN t0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)||(vt1.c1)) COLLATE BINARY CROSS JOIN t0 ON (NOT (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0)||(vt1.c1)) COLLATE BINARY CROSS JOIN t0 ON (NOT (vt0.c0)) COLLATE BINARY WHERE (vt1.c1);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS BLOB))IS(t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB))IS(t0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS BLOB))IS(t0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB))IS(t0.c0 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE)) NOT NULL)) ORDER BY ((CAST(t0.c0 AS BLOB))IS(t0.c0 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)AND(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(t0.c0)))AND(vt1.c1))) AND (vt1.c1)) WHERE (LAST_INSERT_ROWID()) ORDER BY TRIM(DISTINCT (vt0.c0 IN (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)AND(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(t0.c0)))AND(vt1.c1))) AND (vt1.c1)) ORDER BY TRIM(DISTINCT (vt0.c0 IN (vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)AND(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(t0.c0)))AND(vt1.c1))) AND (vt1.c1)) WHERE (LAST_INSERT_ROWID()) ORDER BY TRIM(DISTINCT (vt0.c0 IN (vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)AND(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(t0.c0)))AND(vt1.c1))) AND (vt1.c1)) ORDER BY TRIM(DISTINCT (vt0.c0 IN (vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t0 ON ((((vt1.c0)AND(vt1.c1))) NOT BETWEEN (((((vt1.c1)OR(t0.c0)))AND(vt1.c1))) AND (vt1.c1)) WHERE (LAST_INSERT_ROWID()) ORDER BY TRIM(DISTINCT (vt0.c0 IN (vt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN '' THEN '-178618124' ELSE vt0.c0 END)))OR((((vt0.c0, -2.41675078E8, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(GLOB(vt0.c0, vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))))OR((('1514064022')<=(vt0.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN '' THEN '-178618124' ELSE vt0.c0 END)))OR((((vt0.c0, -2.41675078E8, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(GLOB(vt0.c0, vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))))OR((('1514064022')<=(vt0.c0)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN '' THEN '-178618124' ELSE vt0.c0 END)))OR((((vt0.c0, -2.41675078E8, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(GLOB(vt0.c0, vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))))OR((('1514064022')<=(vt0.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN '' THEN '-178618124' ELSE vt0.c0 END)))OR((((vt0.c0, -2.41675078E8, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(GLOB(vt0.c0, vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))))OR((('1514064022')<=(vt0.c0)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((((((((((((vt0.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN '' THEN '-178618124' ELSE vt0.c0 END)))OR((((vt0.c0, -2.41675078E8, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(GLOB(vt0.c0, vt0.c0))))AND((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, NULL, vt0.c0))))))OR((('1514064022')<=(vt0.c0)))))AND(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0)*(t0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))-((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ()))-((t0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0)*(t0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))-((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0 IN ()))-((t0.c0 IN ()))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0)*(t0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))-((t0.c0 IN ())));
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))OR(0Xffffffffae12dde1)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(0xffffffffae12dde1)))OR(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))OR(0Xffffffffae12dde1)))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (t0.c0)))OR(0xffffffffae12dde1)))OR(t0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((~ (t0.c0)))OR(0Xffffffffae12dde1)))OR(t0.c0)));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((((ABS(vt1.c1))OR(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN '1104973082' WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND('^GaP')))OR((vt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) NOTNULL))))AND(t0.c0)))AND(((t0.c0)>>(vt0.c0)))))OR(((t0.c0) NOTNULL))) WHERE ((NOT (ABS(x'51f3')))) ORDER BY ((((vt0.c0)AND(vt1.c0)))>((NOT (NULL)))) DESC, (+ (NULL));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(x'51f3')))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((((ABS(vt1.c1))OR(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN '1104973082' WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND('^GaP')))OR((vt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) NOTNULL))))AND(t0.c0)))AND(((t0.c0)>>(vt0.c0)))))OR(((t0.c0) NOTNULL))) ORDER BY ((((vt0.c0)AND(vt1.c0)))>((NOT (NULL)))) DESC, (+ (NULL)));
SELECT * FROM vt1 INNER JOIN t0 ON ((((((((ABS(vt1.c1))OR(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN '1104973082' WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND('^GaP')))OR((vt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) NOTNULL))))AND(t0.c0)))AND(((t0.c0)>>(vt0.c0)))))OR(((t0.c0) NOTNULL))) WHERE ((NOT (ABS(x'51f3')))) ORDER BY ((((vt0.c0)AND(vt1.c0)))>((NOT (NULL)))) DESC, (+ (NULL));
SELECT SUM(count) FROM (SELECT ALL (((NOT (ABS(x'51f3')))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((((ABS(vt1.c1))OR(((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))))OR(CASE vt1.c1  WHEN t0.c0 THEN vt1.c1 WHEN vt1.c1 THEN '1104973082' WHEN t0.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND('^GaP')))OR((vt1.c1 IN ()))) RIGHT OUTER JOIN vt0 ON ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(((vt1.c0) NOTNULL))))AND(t0.c0)))AND(((t0.c0)>>(vt0.c0)))))OR(((t0.c0) NOTNULL))) ORDER BY ((((vt0.c0)AND(vt1.c0)))>((NOT (NULL)))) DESC, (+ (NULL)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0 COLLATE NOCASE)IS NOT((((x''))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)IS NOT((((x''))>=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0 COLLATE NOCASE)IS NOT((((x''))>=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)IS NOT((((x''))>=((t0.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0 COLLATE NOCASE)IS NOT((((x''))>=((t0.c0))))));
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c1 IN ()), (((((((('')OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM((vt1.c1 IN ()), (((((((('')OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c1 IN ()), (((((((('')OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((TRIM((vt1.c1 IN ()), (((((((('')OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (TRIM((vt1.c1 IN ()), (((((((('')OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT t0.c0) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (NOT (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE UPPER(vt1.c0) END) ORDER BY ((t0.c0)<=(((t0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN (NOT (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE UPPER(vt1.c0) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT t0.c0) ORDER BY ((t0.c0)<=(((t0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT t0.c0) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (NOT (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE UPPER(vt1.c0) END) ORDER BY ((t0.c0)<=(((t0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN (NOT (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE UPPER(vt1.c0) END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT t0.c0) ORDER BY ((t0.c0)<=(((t0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON TYPEOF(DISTINCT t0.c0) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (NOT (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE UPPER(vt1.c0) END) ORDER BY ((t0.c0)<=(((t0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE vt1.c0 END END);
SELECT * FROM vt0, t0 WHERE ((((x'cd34'))>=((t0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((x'cd34'))>=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE ((((x'cd34'))>=((t0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((x'cd34'))>=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM)));
SELECT * FROM vt0, t0 WHERE ((((x'cd34'))>=((t0.c0))) COLLATE NOCASE) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))GLOB(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE (CHANGES()) ORDER BY (((- (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((- (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CHANGES()) ORDER BY (((- (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (((- (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CHANGES()) ORDER BY (((- (t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((TYPEOF(DISTINCT '('))OR(t0.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((TYPEOF(DISTINCT '('))OR(t0.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((TYPEOF(DISTINCT '('))OR(t0.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)GLOB(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((TYPEOF(DISTINCT '('))OR(t0.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((((((TYPEOF(DISTINCT '('))OR(t0.c0 COLLATE NOCASE)))AND(vt1.c0)))AND(vt1.c1 COLLATE BINARY)))AND(((vt0.c0)GLOB(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (t0.c0)))>(LOWER(t0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)||((vt1.c1 IN ()))) WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (- (vt1.c1)) ELSE ((((vt1.c1)OR(vt0.c0)))AND(-1809188094)) END) ORDER BY ((t0.c0)>>(((t0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (- (vt1.c1)) ELSE ((((vt1.c1)OR(vt0.c0)))AND(-1809188094)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (t0.c0)))>(LOWER(t0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)||((vt1.c1 IN ()))) ORDER BY ((t0.c0)>>(((t0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (t0.c0)))>(LOWER(t0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)||((vt1.c1 IN ()))) WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (- (vt1.c1)) ELSE ((((vt1.c1)OR(vt0.c0)))AND(-1809188094)) END) ORDER BY ((t0.c0)>>(((t0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (- (vt1.c1)) ELSE ((((vt1.c1)OR(vt0.c0)))AND(-1809188094)) END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((+ (t0.c0)))>(LOWER(t0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)||((vt1.c1 IN ()))) ORDER BY ((t0.c0)>>(((t0.c0) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((+ (t0.c0)))>(LOWER(t0.c0))) INNER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)||((vt1.c1 IN ()))) WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (- (vt1.c1)) ELSE ((((vt1.c1)OR(vt0.c0)))AND(-1809188094)) END) ORDER BY ((t0.c0)>>(((t0.c0) NOT NULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE NOCASE) ORDER BY (('eg') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('eg') IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE NOCASE) ORDER BY (('eg') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 ORDER BY (('eg') IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END COLLATE NOCASE) ORDER BY (('eg') IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((((vt0.c0 IN ()))<=(vt1.c1 COLLATE BINARY))) ORDER BY ((('[]')) NOT BETWEEN ((((t0.c0)%(vt0.c0)))) AND (((vt1.c1 IN (t0.c0))))) ASC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) ORDER BY ((('[]')) NOT BETWEEN ((((t0.c0)%(vt0.c0)))) AND (((vt1.c1 IN (t0.c0))))) ASC  NULLS LAST, '' ASC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((((vt0.c0 IN ()))<=(vt1.c1 COLLATE BINARY))) ORDER BY ((('[]')) NOT BETWEEN ((((t0.c0)%(vt0.c0)))) AND (((vt1.c1 IN (t0.c0))))) ASC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<=(vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) ORDER BY ((('[]')) NOT BETWEEN ((((t0.c0)%(vt0.c0)))) AND (((vt1.c1 IN (t0.c0))))) ASC  NULLS LAST, '' ASC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN vt0 ON (- (((vt0.c0)%(vt0.c0)))) WHERE ((((vt0.c0 IN ()))<=(vt1.c1 COLLATE BINARY))) ORDER BY ((('[]')) NOT BETWEEN ((((t0.c0)%(vt0.c0)))) AND (((vt1.c1 IN (t0.c0))))) ASC  NULLS LAST, '' ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (SQLITE_VERSION());
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (((vt0.c0)/(vt0.c0)))));
SELECT * FROM vt1, vt0 INDEXED BY i73 WHERE (((((vt1.c1) NOTNULL))&(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))&(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i73);
SELECT * FROM vt1, vt0 INDEXED BY i73 WHERE (((((vt1.c1) NOTNULL))&(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL))&(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i73);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (~ (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))LIKE(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY (~ (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (~ (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))LIKE(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY (~ (vt0.c0)) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (~ (vt0.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((vt1.c1)OR(0xffffffffa98f3f66)))OR(vt1.c0))))) ORDER BY ((STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0))>=(((vt1.c1) NOT NULL))), (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.9221227766297678))))  NULLS LAST, (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((vt1.c1)OR(0xffffffffa98f3f66)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0))>=(((vt1.c1) NOT NULL))), (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.9221227766297678))))  NULLS LAST, (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((vt1.c1)OR(0xffffffffa98f3f66)))OR(vt1.c0))))) ORDER BY ((STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0))>=(((vt1.c1) NOT NULL))), (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.9221227766297678))))  NULLS LAST, (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((vt1.c1)OR(0xffffffffa98f3f66)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0))>=(((vt1.c1) NOT NULL))), (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.9221227766297678))))  NULLS LAST, (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c1) NOT NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((vt1.c1)OR(0xffffffffa98f3f66)))OR(vt1.c0))))) ORDER BY ((STRFTIME(vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c0, vt1.c0))>=(((vt1.c1) NOT NULL))), (- (((vt1.c1) NOT BETWEEN (vt1.c1) AND (0.9221227766297678))))  NULLS LAST, (((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (((vt1.c1) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1885012335') BETWEEN ((- (vt1.c1))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((('-1885012335') BETWEEN ((- (vt1.c1))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1885012335') BETWEEN ((- (vt1.c1))) AND (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((('-1885012335') BETWEEN ((- (vt1.c1))) AND (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((('-1885012335') BETWEEN ((- (vt1.c1))) AND (vt1.c1)));
SELECT * FROM t0, vt1 WHERE (((((((vt1.c1, t0.c0, vt1.c1))<((vt1.c1, vt1.c0, NULL)))))>(((((vt1.c0))=((vt1.c0))))))) ORDER BY (- (((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1, t0.c0, vt1.c1))<((vt1.c1, vt1.c0, NULL)))))>(((((vt1.c0))=((vt1.c0))))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (- (((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))) DESC);
SELECT * FROM t0, vt1 WHERE (((((((vt1.c1, t0.c0, vt1.c1))<((vt1.c1, vt1.c0, NULL)))))>(((((vt1.c0))=((vt1.c0))))))) ORDER BY (- (((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1, t0.c0, vt1.c1))<((vt1.c1, vt1.c0, NULL)))))>(((((vt1.c0))=((vt1.c0))))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (- (((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))) DESC);
SELECT * FROM t0, vt1 WHERE (((((((vt1.c1, t0.c0, vt1.c1))<((vt1.c1, vt1.c0, NULL)))))>(((((vt1.c0))=((vt1.c0))))))) ORDER BY (- (((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)+(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)+(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LOWER(DISTINCT ((((t0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (UNLIKELY(DISTINCT vt1.c0) COLLATE BINARY);
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 IN (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c0 IN (((t0.c0)==(t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((json_array_length(t0.c0, t0.c0)))<((CAST(NULL AS INTEGER)))) FULL OUTER JOIN vt1 ON (NULL IN ()) WHERE (CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 END THEN vt1.c0 COLLATE RTRIM ELSE ((0.011901255094955654)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 END THEN vt1.c0 COLLATE RTRIM ELSE ((0.011901255094955654)OR(vt0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((json_array_length(t0.c0, t0.c0)))<((CAST(NULL AS INTEGER)))) FULL OUTER JOIN vt1 ON (NULL IN ()));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (((json_array_length(t0.c0, t0.c0)))<((CAST(NULL AS INTEGER)))) FULL OUTER JOIN vt1 ON (NULL IN ()) WHERE (CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 END THEN vt1.c0 COLLATE RTRIM ELSE ((0.011901255094955654)OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN vt1.c1 END THEN vt1.c0 COLLATE RTRIM ELSE ((0.011901255094955654)OR(vt0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((json_array_length(t0.c0, t0.c0)))<((CAST(NULL AS INTEGER)))) FULL OUTER JOIN vt1 ON (NULL IN ()));
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (SUBSTR(vt1.c0, vt1.c1)) AND (((vt1.c1)>(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))*(NULL)), (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (SUBSTR(vt1.c0, vt1.c1)) AND (((vt1.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))*(NULL)), (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (SUBSTR(vt1.c0, vt1.c1)) AND (((vt1.c1)>(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))*(NULL)), (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (SUBSTR(vt1.c0, vt1.c1)) AND (((vt1.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))*(NULL)), (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (SUBSTR(vt1.c0, vt1.c1)) AND (((vt1.c1)>(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)))*(NULL)), (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0, '0.03369968460215644', vt0.c0)) BETWEEN ((vt0.c0, 0.27525848700844824, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((NOT (vt0.c0)))-(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0, '0.03369968460215644', vt0.c0)) BETWEEN ((vt0.c0, 0.27525848700844824, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((NOT (vt0.c0)))-(vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0, '0.03369968460215644', vt0.c0)) BETWEEN ((vt0.c0, 0.27525848700844824, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((NOT (vt0.c0)))-(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0, '0.03369968460215644', vt0.c0)) BETWEEN ((vt0.c0, 0.27525848700844824, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((NOT (vt0.c0)))-(vt0.c0)) DESC);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (((vt0.c0, '0.03369968460215644', vt0.c0)) BETWEEN ((vt0.c0, 0.27525848700844824, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (+ (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), (((NOT (vt0.c0)))-(vt0.c0)) DESC;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((NULL)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)+(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((NULL)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)+(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((NULL)+(t0.c0)))));
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c1)||(vt1.c0)))<>((NULL IN ())))) ORDER BY (((t0.c0)>(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)||(vt1.c0)))!=((NULL IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c0)>(vt1.c1)) IN ()) ASC);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c1)||(vt1.c0)))<>((NULL IN ())))) ORDER BY (((t0.c0)>(vt1.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)||(vt1.c0)))!=((NULL IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((t0.c0)>(vt1.c1)) IN ()) ASC);
SELECT ALL * FROM vt1, t0 WHERE (((((vt1.c1)||(vt1.c0)))<>((NULL IN ())))) ORDER BY (((t0.c0)>(vt1.c1)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c1 CROSS JOIN vt0 ON ABS(x'') WHERE (json_array_length(((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))OR('475505439')))AND(vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))OR('475505439')))AND(vt0.c0)), NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON vt1.c1 CROSS JOIN vt0 ON ABS(x''));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c1 CROSS JOIN vt0 ON ABS(x'') WHERE (json_array_length(((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))OR('475505439')))AND(vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))OR('475505439')))AND(vt0.c0)), NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON vt1.c1 CROSS JOIN vt0 ON ABS(x''));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON vt1.c1 CROSS JOIN vt0 ON ABS(x'') WHERE (json_array_length(((((((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))OR('475505439')))AND(vt0.c0)), NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)*(vt1.c1))) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)*(vt1.c1))) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)*(vt1.c1))) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)*(vt1.c1))) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)*(vt1.c1))) NOT BETWEEN (((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c1)))||(TYPEOF('-1786334446'))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1)))||(TYPEOF('-1786334446')))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c1)))||(TYPEOF('-1786334446'))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1)))||(TYPEOF('-1786334446')))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((NOT (vt1.c1)))||(TYPEOF('-1786334446'))));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('''%8z' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('''%8z' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('''%8z' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('''%8z' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ('''%8z' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (json_valid(IFNULL(DISTINCT vt1.c1, t0.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)/(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(IFNULL(DISTINCT vt1.c1, t0.c0))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELY(DISTINCT ((vt1.c0)/(vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (json_valid(IFNULL(DISTINCT vt1.c1, t0.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)/(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(IFNULL(DISTINCT vt1.c1, t0.c0))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY LIKELY(DISTINCT ((vt1.c0)/(vt1.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (json_valid(IFNULL(DISTINCT vt1.c1, t0.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)/(vt1.c0))) DESC  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0))>=((x'')))) ORDER BY ((((vt1.c0)GLOB(t0.c0)))<((((vt1.c0))>((vt1.c1))))) DESC, CASE WHEN 'TVBJZC?' THEN (((vt1.c0))<>((t0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((x'')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0)GLOB(t0.c0)))<((((vt1.c0))>((vt1.c1))))) DESC, CASE WHEN 'TVBJZC?' THEN (((vt1.c0))!=((t0.c0))) END  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0))>=((x'')))) ORDER BY ((((vt1.c0)GLOB(t0.c0)))<((((vt1.c0))>((vt1.c1))))) DESC, CASE WHEN 'TVBJZC?' THEN (((vt1.c0))<>((t0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=((x'')))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0)GLOB(t0.c0)))<((((vt1.c0))>((vt1.c1))))) DESC, CASE WHEN 'TVBJZC?' THEN (((vt1.c0))!=((t0.c0))) END  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE ((((vt1.c0))>=((x'')))) ORDER BY ((((vt1.c0)GLOB(t0.c0)))<((((vt1.c0))>((vt1.c1))))) DESC, CASE WHEN 'TVBJZC?' THEN (((vt1.c0))<>((t0.c0))) END  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt1.c1 IN ()) IN ((vt1.c1 IN (vt1.c0, vt1.c1))))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND('-488024173')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 IN ()) IN ((vt1.c1 IN (vt1.c0, vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND('-488024173')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt1.c1 IN ()) IN ((vt1.c1 IN (vt1.c0, vt1.c1))))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND('-488024173')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 IN ()) IN ((vt1.c1 IN (vt1.c0, vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((vt1.c0 COLLATE NOCASE)AND('-488024173')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((vt1.c1 IN ()) IN ((vt1.c1 IN (vt1.c0, vt1.c1))))) ORDER BY ((((vt1.c0 COLLATE NOCASE)AND('-488024173')))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c1))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((((0.8600809598486348)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE t0.c0 END WHEN ((vt0.c0)&(vt1.c1)) THEN ((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN ((vt1.c1)*(vt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS LAST, (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((((0.8600809598486348)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE t0.c0 END WHEN ((vt0.c0)&(vt1.c1)) THEN ((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN ((vt1.c1)*(vt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS LAST, (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((((0.8600809598486348)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE t0.c0 END WHEN ((vt0.c0)&(vt1.c1)) THEN ((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN ((vt1.c1)*(vt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS LAST, (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((((0.8600809598486348)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE t0.c0 END WHEN ((vt0.c0)&(vt1.c1)) THEN ((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN ((vt1.c1)*(vt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS LAST, (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((((0.8600809598486348)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t0.c0) IS FALSE) THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE t0.c0 END WHEN ((vt0.c0)&(vt1.c1)) THEN ((((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN ((vt1.c1)*(vt1.c1)) WHEN CASE vt0.c0  WHEN vt1.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END  NULLS LAST, (((t0.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0)OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0)OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0)OR(((vt0.c0) NOT NULL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))%(((vt0.c0)AND(vt0.c0))))) ORDER BY (NOT ((('}둚ᷭ')||(vt0.c0))))  NULLS FIRST, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (0.3057834845076576)) ASC  NULLS FIRST, CAST((- (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))%(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('}둚ᷭ')||(vt0.c0))))  NULLS FIRST, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (0.3057834845076576)) ASC  NULLS FIRST, CAST((- (vt0.c0)) AS REAL) ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))%(((vt0.c0)AND(vt0.c0))))) ORDER BY (NOT ((('}둚ᷭ')||(vt0.c0))))  NULLS FIRST, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (0.3057834845076576)) ASC  NULLS FIRST, CAST((- (vt0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))%(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((('}둚ᷭ')||(vt0.c0))))  NULLS FIRST, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (0.3057834845076576)) ASC  NULLS FIRST, CAST((- (vt0.c0)) AS REAL) ASC);
SELECT * FROM vt0 WHERE ((((+ (vt0.c0)))%(((vt0.c0)AND(vt0.c0))))) ORDER BY (NOT ((('}둚ᷭ')||(vt0.c0))))  NULLS FIRST, ((((NULL) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (0.3057834845076576)) ASC  NULLS FIRST, CAST((- (vt0.c0)) AS REAL) ASC;
SELECT * FROM t0 WHERE ((((~ (t0.c0)))AND((t0.c0 IN (t0.c0))))) ORDER BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))AND((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) DESC);
SELECT * FROM t0 WHERE ((((~ (t0.c0)))AND((t0.c0 IN (t0.c0))))) ORDER BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))AND((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) DESC);
SELECT * FROM t0 WHERE ((((~ (t0.c0)))AND((t0.c0 IN (t0.c0))))) ORDER BY (((((t0.c0))<((t0.c0)))) NOT BETWEEN ((~ (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))))) DESC;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 END AS INTEGER) WHERE ((((((vt1.c0, vt1.c1, vt1.c0))<=((vt1.c1, vt1.c1, vt0.c0)))) NOTNULL)) ORDER BY (+ (((vt1.c1) BETWEEN (0X21c4ea82) AND (vt1.c0))))  NULLS FIRST, ((vt1.c0)LIKE(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))), vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c1, vt1.c0))<=((vt1.c1, vt1.c1, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 END AS INTEGER) ORDER BY (+ (((vt1.c1) BETWEEN (0x21c4ea82) AND (vt1.c0))))  NULLS FIRST, ((vt1.c0)LIKE(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))), vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 END AS INTEGER) WHERE ((((((vt1.c0, vt1.c1, vt1.c0))<=((vt1.c1, vt1.c1, vt0.c0)))) NOTNULL)) ORDER BY (+ (((vt1.c1) BETWEEN (0X21c4ea82) AND (vt1.c0))))  NULLS FIRST, ((vt1.c0)LIKE(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))), vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c1, vt1.c0))<=((vt1.c1, vt1.c1, vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 END AS INTEGER) ORDER BY (+ (((vt1.c1) BETWEEN (0x21c4ea82) AND (vt1.c0))))  NULLS FIRST, ((vt1.c0)LIKE(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))), vt1.c0 DESC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 END AS INTEGER) WHERE ((((((vt1.c0, vt1.c1, vt1.c0))<=((vt1.c1, vt1.c1, vt0.c0)))) NOTNULL)) ORDER BY (+ (((vt1.c1) BETWEEN (0X21c4ea82) AND (vt1.c0))))  NULLS FIRST, ((vt1.c0)LIKE(((((vt1.c1)OR(vt1.c1)))AND(vt0.c0)))), vt1.c0 DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c1)+(vt1.c0))) BETWEEN ((- (vt1.c1))) AND ((((0xffffffffc29022ad))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(vt1.c0))) BETWEEN ((- (vt1.c1))) AND ((((0Xffffffffc29022ad))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)+(vt1.c0))) BETWEEN ((- (vt1.c1))) AND ((((0xffffffffc29022ad))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(vt1.c0))) BETWEEN ((- (vt1.c1))) AND ((((0Xffffffffc29022ad))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1)+(vt1.c0))) BETWEEN ((- (vt1.c1))) AND ((((0xffffffffc29022ad))>((vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ('255216326') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('255216326') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt1, vt0 WHERE ('255216326') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('255216326') IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC);
SELECT ALL * FROM vt1, vt0 WHERE ('255216326') ORDER BY vt0.c0 ASC;
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((NULL)OR(464325019)))OR(CAST(vt0.c0 AS BLOB))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((NULL)OR(464325019)))OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((NULL)OR(464325019)))OR(CAST(vt0.c0 AS BLOB))) WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((NULL)OR(464325019)))OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON ((((NULL)OR(464325019)))OR(CAST(vt0.c0 AS BLOB))) WHERE (vt1.c1);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE BINARY))<>(((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((((((((((((((vt0.c0) IS FALSE))OR('0.9844635578678353')))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt1.c1)))OR(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE BINARY))!=(((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((vt0.c0) IS FALSE))OR('0.9844635578678353')))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt1.c1)))OR(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE BINARY))<>(((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((((((((((((((vt0.c0) IS FALSE))OR('0.9844635578678353')))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt1.c1)))OR(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 COLLATE BINARY))!=(((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((((vt0.c0) IS FALSE))OR('0.9844635578678353')))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt1.c1)))OR(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0 COLLATE BINARY))<>(((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))) ORDER BY ((((((((((((((vt0.c0) IS FALSE))OR('0.9844635578678353')))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt1.c1)))OR(vt0.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0) IS FALSE)))  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((t0.c0 IN ())) ORDER BY (- (NULL)) DESC  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((t0.c0)>(vt1.c1))))  NULLS FIRST, (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) IN ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (NULL)) DESC  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((t0.c0)>(vt1.c1))))  NULLS FIRST, (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) IN ((vt1.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((t0.c0 IN ())) ORDER BY (- (NULL)) DESC  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((t0.c0)>(vt1.c1))))  NULLS FIRST, (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) IN ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (- (NULL)) DESC  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((t0.c0)>(vt1.c1))))  NULLS FIRST, (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) IN ((vt1.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((t0.c0 IN ())) ORDER BY (- (NULL)) DESC  NULLS LAST, ((((t0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))OR(((t0.c0)>(vt1.c1))))  NULLS FIRST, (((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) IN ((vt1.c1 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY ((((((vt1.c1)|(NULL)))AND((vt1.c1 IN ()))))AND(((vt1.c0)>=(vt0.c0)))) ASC, 0Xffffffff832a39b0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c1)|(NULL)))AND((vt1.c1 IN ()))))AND(((vt1.c0)>=(vt0.c0)))) ASC, 0xffffffff832a39b0 DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (NULL) ORDER BY ((((((vt1.c1)|(NULL)))AND((vt1.c1 IN ()))))AND(((vt1.c0)>=(vt0.c0)))) ASC, 0Xffffffff832a39b0 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c1)|(NULL)))AND((vt1.c1 IN ()))))AND(((vt1.c0)>=(vt0.c0)))) ASC, 0xffffffff832a39b0 DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(NULLIF(vt1.c0, '-1454775954') AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt1.c0, '-1454775954') AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(NULLIF(vt1.c0, '-1454775954') AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt1.c0, '-1454775954') AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(NULLIF(vt1.c0, '-1454775954') AS REAL));
SELECT * FROM vt1 WHERE (HEX(DISTINCT ((vt1.c1)<>(vt1.c1)))) ORDER BY CAST((((vt1.c0, vt1.c1, vt1.c0))=((vt1.c1, vt1.c1, vt1.c0))) AS BLOB) ASC  NULLS FIRST, (vt1.c1 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt1.c1)!=(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c1, vt1.c0))==((vt1.c1, vt1.c1, vt1.c0))) AS BLOB) ASC  NULLS FIRST, (vt1.c1 COLLATE BINARY IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (HEX(DISTINCT ((vt1.c1)<>(vt1.c1)))) ORDER BY CAST((((vt1.c0, vt1.c1, vt1.c0))=((vt1.c1, vt1.c1, vt1.c0))) AS BLOB) ASC  NULLS FIRST, (vt1.c1 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt1.c1)!=(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0, vt1.c1, vt1.c0))==((vt1.c1, vt1.c1, vt1.c0))) AS BLOB) ASC  NULLS FIRST, (vt1.c1 COLLATE BINARY IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (HEX(DISTINCT ((vt1.c1)<>(vt1.c1)))) ORDER BY CAST((((vt1.c0, vt1.c1, vt1.c0))=((vt1.c1, vt1.c1, vt1.c0))) AS BLOB) ASC  NULLS FIRST, (vt1.c1 COLLATE BINARY IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((x'')>=(json_quote(t0.c0)))) ORDER BY ((vt1.c1)<>(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(json_quote(t0.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt1.c1)<>(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (((x'')>=(json_quote(t0.c0)))) ORDER BY ((vt1.c1)<>(vt1.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(json_quote(t0.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((vt1.c1)<>(vt1.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE (0.3070628323000133);
SELECT SUM(count) FROM (SELECT ALL ((0.3070628323000133) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (- (vt1.c0)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE (0.3070628323000133);
SELECT SUM(count) FROM (SELECT ALL ((0.3070628323000133) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (- (vt1.c0)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON (- (vt1.c0)) WHERE (0.3070628323000133);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER((t0.c0 IN ()))) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((t0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER((t0.c0 IN ()))) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((t0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (LOWER((t0.c0 IN ()))) ORDER BY ((CAST(t0.c0 AS TEXT)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (NULL)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'a20e' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0)>=(t0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (NULL)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'a20e' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (NULL)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'a20e' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0)>=(t0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (NULL)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'a20e' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (NULL)))<(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'a20e' WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ORDER BY (((t0.c0)>=(t0.c0)) IN ())  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL)) ORDER BY 1.768139122E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 1.768139122E9 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL)) ORDER BY 1.768139122E9 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 1.768139122E9 ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))) ISNULL)) ORDER BY 1.768139122E9 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((vt1.c1)!=(vt1.c1)))) LEFT OUTER JOIN vt0 ON (('{܊Icv' COLLATE NOCASE)|((((x'6af1')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) WHERE (((((0.7845470306685431)<(vt1.c0)))AND(json_patch(vt1.c1, NULL)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE t0.c0 END)) AND (((vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.7845470306685431)<(vt1.c0)))AND(json_patch(vt1.c1, NULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((vt1.c1)<>(vt1.c1)))) LEFT OUTER JOIN vt0 ON (('{܊Icv' COLLATE NOCASE)|((((x'6af1')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE t0.c0 END)) AND (((vt1.c0 IN ())))) ASC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((vt1.c1)!=(vt1.c1)))) LEFT OUTER JOIN vt0 ON (('{܊Icv' COLLATE NOCASE)|((((x'6af1')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) WHERE (((((0.7845470306685431)<(vt1.c0)))AND(json_patch(vt1.c1, NULL)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE t0.c0 END)) AND (((vt1.c0 IN ())))) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.7845470306685431)<(vt1.c0)))AND(json_patch(vt1.c1, NULL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (vt0.c0))) AND (((vt1.c1)<>(vt1.c1)))) LEFT OUTER JOIN vt0 ON (('{܊Icv' COLLATE NOCASE)|((((x'6af1')) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt1.c1 THEN vt1.c1 ELSE t0.c0 END)) AND (((vt1.c0 IN ())))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c1)+(vt0.c0))))==(((NOT (t0.c0)))))) ORDER BY ((((((((((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))OR(((t0.c0)&(vt0.c0)))))AND(((t0.c0) ISNULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)+(vt0.c0))))=(((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))OR(((t0.c0)&(vt0.c0)))))AND(((t0.c0) ISNULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))OR(vt0.c0)));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c1)+(vt0.c0))))==(((NOT (t0.c0)))))) ORDER BY ((((((((((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))OR(((t0.c0)&(vt0.c0)))))AND(((t0.c0) ISNULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)+(vt0.c0))))=(((NOT (t0.c0)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((((((((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))OR(((t0.c0)&(vt0.c0)))))AND(((t0.c0) ISNULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))OR(vt0.c0)));
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt1.c1)+(vt0.c0))))==(((NOT (t0.c0)))))) ORDER BY ((((((((((((vt1.c1)OR(t0.c0)))AND(vt1.c1)))OR(((t0.c0)&(vt0.c0)))))AND(((t0.c0) ISNULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)))))OR(vt0.c0));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((0.3070628323000133 IN (vt0.c0))))>(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.3070628323000133 IN (vt0.c0))))>(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.3070628323000133 IN (vt0.c0))))>(((NOT (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((0.3070628323000133 IN (vt0.c0))))>(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0.3070628323000133 IN (vt0.c0))))>(((NOT (vt0.c0))))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((vt1.c1 IN ())) ISNULL));
SELECT ALL * FROM t0 WHERE ((((((((t0.c0))>((0.5504706061273255))))AND(CAST(t0.c0 AS NUMERIC))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))>((0.5504706061273255))))AND(CAST(t0.c0 AS NUMERIC))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c0))>((0.5504706061273255))))AND(CAST(t0.c0 AS NUMERIC))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))>((0.5504706061273255))))AND(CAST(t0.c0 AS NUMERIC))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((t0.c0))>((0.5504706061273255))))AND(CAST(t0.c0 AS NUMERIC))))AND(((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))) FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((CASE WHEN x'4d04' THEN vt1.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))) WHERE (IFNULL(DISTINCT (+ (vt1.c1)), ((vt1.c1)|(x'2001'))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (+ (vt1.c1)), ((vt1.c1)|(x'2001')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))) FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((CASE WHEN x'4d04' THEN vt1.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))) FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((CASE WHEN x'4d04' THEN vt1.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))) WHERE (IFNULL(DISTINCT (+ (vt1.c1)), ((vt1.c1)|(x'2001'))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (+ (vt1.c1)), ((vt1.c1)|(x'2001')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))) FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((CASE WHEN x'4d04' THEN vt1.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))<(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))) FULL OUTER JOIN t0 ON (((NULL)) NOT BETWEEN ((CASE WHEN x'4d04' THEN vt1.c0 ELSE vt0.c0 END)) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))) WHERE (IFNULL(DISTINCT (+ (vt1.c1)), ((vt1.c1)|(x'2001'))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))&((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))&((- (vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))&((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))&((- (vt1.c1))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((CAST(t0.c0 AS REAL))&((- (vt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))AND(vt0.c0 COLLATE BINARY)))OR((vt1.c0 IN ()))) WHERE (1.397735151E9) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC  NULLS LAST, 0.6032755343299274, (((vt1.c0 IN ()))<(((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((1.397735151E9) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))AND(vt0.c0 COLLATE BINARY)))OR((vt1.c0 IN ()))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC  NULLS LAST, 0.6032755343299274, (((vt1.c0 IN ()))<(((vt1.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))AND(vt0.c0 COLLATE BINARY)))OR((vt1.c0 IN ()))) WHERE (1.397735151E9) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC  NULLS LAST, 0.6032755343299274, (((vt1.c0 IN ()))<(((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((1.397735151E9) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))AND(vt0.c0 COLLATE BINARY)))OR((vt1.c0 IN ()))) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC  NULLS LAST, 0.6032755343299274, (((vt1.c0 IN ()))<(((vt1.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt1.c1 IN ()))AND(vt0.c0 COLLATE BINARY)))OR((vt1.c0 IN ()))) WHERE (1.397735151E9) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) ASC  NULLS LAST, 0.6032755343299274, (((vt1.c0 IN ()))<(((vt1.c0) ISNULL))) ASC;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))OR(((t0.c0)%(vt1.c1)))) WHERE (((((vt1.c0)GLOB(NULL)))AND(vt1.c0))) ORDER BY ((LAST_INSERT_ROWID())<>(COALESCE(vt1.c1, t0.c0, vt1.c0, 0.4363787716809032)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(NULL)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))OR(((t0.c0)%(vt1.c1)))) ORDER BY ((LAST_INSERT_ROWID())<>(COALESCE(vt1.c1, t0.c0, vt1.c0, 0.4363787716809032)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))OR(((t0.c0)%(vt1.c1)))) WHERE (((((vt1.c0)GLOB(NULL)))AND(vt1.c0))) ORDER BY ((LAST_INSERT_ROWID())<>(COALESCE(vt1.c1, t0.c0, vt1.c0, 0.4363787716809032)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(NULL)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))OR(((t0.c0)%(vt1.c1)))) ORDER BY ((LAST_INSERT_ROWID())<>(COALESCE(vt1.c1, t0.c0, vt1.c0, 0.4363787716809032)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c1 AS NUMERIC))OR(((t0.c0)%(vt1.c1)))) WHERE (((((vt1.c0)GLOB(NULL)))AND(vt1.c0))) ORDER BY ((LAST_INSERT_ROWID())<>(COALESCE(vt1.c1, t0.c0, vt1.c0, 0.4363787716809032)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1038366855)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1038366855)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1038366855)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1038366855)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 1038366855)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((COALESCE(t0.c0, x''))IS NOT(0.7162247973045178)) LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS BLOB))AND(vt1.c0 COLLATE BINARY)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0.9000965235695803)))AND(t0.c0)))) WHERE ('+c');
SELECT SUM(count) FROM (SELECT (('+c') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((COALESCE(t0.c0, x''))IS NOT(0.7162247973045178)) LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS BLOB))AND(vt1.c0 COLLATE BINARY)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0.9000965235695803)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((COALESCE(t0.c0, x''))IS NOT(0.7162247973045178)) LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS BLOB))AND(vt1.c0 COLLATE BINARY)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0.9000965235695803)))AND(t0.c0)))) WHERE ('+c');
SELECT SUM(count) FROM (SELECT (('+c') IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((COALESCE(t0.c0, x''))IS NOT(0.7162247973045178)) LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS BLOB))AND(vt1.c0 COLLATE BINARY)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0.9000965235695803)))AND(t0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((COALESCE(t0.c0, x''))IS NOT(0.7162247973045178)) LEFT OUTER JOIN t0 ON ((((CAST(t0.c0 AS BLOB))AND(vt1.c0 COLLATE BINARY)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(0.9000965235695803)))AND(t0.c0)))) WHERE ('+c');
SELECT * FROM vt1, vt0, t0 INDEXED BY i49 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c0  WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i49);
SELECT * FROM vt1, vt0, t0 INDEXED BY i49 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c0  WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, t0 INDEXED BY i49);
SELECT * FROM vt1, vt0, t0 INDEXED BY i49 WHERE ((- (CASE t0.c0  WHEN t0.c0 THEN vt1.c1 ELSE vt1.c0 END)));
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS REAL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((t0.c0)==(vt0.c0))) NOT BETWEEN (((NULL) NOT NULL)) AND ((x'' IN ()))) WHERE ((((vt0.c0, x'', t0.c0, x'', vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), (t0.c0 IN ()), ((vt0.c0) NOT NULL), (~ (vt0.c0)), vt0.c0)) AND ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), (t0.c0 IN ()), ((t0.c0)OR(t0.c0)), ((t0.c0)<>(t0.c0)), '', (t0.c0 IN ()), NULL)))) ORDER BY ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', t0.c0, x'', vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), (t0.c0 IN ()), ((vt0.c0) NOT NULL), (~ (vt0.c0)), vt0.c0)) AND ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), (t0.c0 IN ()), ((t0.c0)OR(t0.c0)), ((t0.c0)<>(t0.c0)), '', (t0.c0 IN ()), NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((t0.c0)=(vt0.c0))) NOT BETWEEN (((NULL) NOT NULL)) AND ((x'' IN ()))) ORDER BY ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((t0.c0)==(vt0.c0))) NOT BETWEEN (((NULL) NOT NULL)) AND ((x'' IN ()))) WHERE ((((vt0.c0, x'', t0.c0, x'', vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), (t0.c0 IN ()), ((vt0.c0) NOT NULL), (~ (vt0.c0)), vt0.c0)) AND ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), (t0.c0 IN ()), ((t0.c0)OR(t0.c0)), ((t0.c0)<>(t0.c0)), '', (t0.c0 IN ()), NULL)))) ORDER BY ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, x'', t0.c0, x'', vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), (t0.c0 IN ()), ((vt0.c0) NOT NULL), (~ (vt0.c0)), vt0.c0)) AND ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), (t0.c0 IN ()), ((t0.c0)OR(t0.c0)), ((t0.c0)<>(t0.c0)), '', (t0.c0 IN ()), NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((t0.c0)=(vt0.c0))) NOT BETWEEN (((NULL) NOT NULL)) AND ((x'' IN ()))) ORDER BY ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((t0.c0)==(vt0.c0))) NOT BETWEEN (((NULL) NOT NULL)) AND ((x'' IN ()))) WHERE ((((vt0.c0, x'', t0.c0, x'', vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), ((vt0.c0)>=(vt0.c0)), (t0.c0 IN ()), ((vt0.c0) NOT NULL), (~ (vt0.c0)), vt0.c0)) AND ((((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), (t0.c0 IN ()), ((t0.c0)OR(t0.c0)), ((t0.c0)<>(t0.c0)), '', (t0.c0 IN ()), NULL)))) ORDER BY ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((vt1.c0) NOTNULL) COLLATE BINARY WHERE (vt1.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CASE WHEN t0.c0 THEN vt0.c0 END)>=(((vt1.c1)IS NOT(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((vt1.c0) NOTNULL) COLLATE BINARY ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CASE WHEN t0.c0 THEN vt0.c0 END)>=(((vt1.c1)IS NOT(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((vt1.c0) NOTNULL) COLLATE BINARY WHERE (vt1.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CASE WHEN t0.c0 THEN vt0.c0 END)>=(((vt1.c1)IS NOT(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((vt1.c0) NOTNULL) COLLATE BINARY ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CASE WHEN t0.c0 THEN vt0.c0 END)>=(((vt1.c1)IS NOT(vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON vt0.c0 LEFT OUTER JOIN vt1 ON ((vt1.c0) NOTNULL) COLLATE BINARY WHERE (vt1.c0) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE RTRIM  NULLS LAST, ((CASE WHEN t0.c0 THEN vt0.c0 END)>=(((vt1.c1)IS NOT(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((~ (((vt1.c0) IS FALSE))));
SELECT * FROM vt1 WHERE (((((vt1.c1) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c1) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE (((-1087147174) NOT NULL) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST, 0.9678142820320007;
SELECT SUM(count) FROM (SELECT ALL ((((-1087147174) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS FIRST, 0.9678142820320007);
SELECT COUNT(*) FROM vt1 WHERE (((-1087147174) NOT NULL) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST, 0.9678142820320007;
SELECT SUM(count) FROM (SELECT ALL ((((-1087147174) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS FIRST, 0.9678142820320007);
SELECT COUNT(*) FROM vt1 WHERE (((-1087147174) NOT NULL) COLLATE RTRIM) ORDER BY NULL  NULLS FIRST, 0.9678142820320007;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('0.15459369300537218') AND (0xffffffff856657cc))) BETWEEN (((t0.c0)AND(t0.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN ('0.15459369300537218') AND (0Xffffffff856657cc))) BETWEEN (((t0.c0)AND(t0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('0.15459369300537218') AND (0xffffffff856657cc))) BETWEEN (((t0.c0)AND(t0.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN ('0.15459369300537218') AND (0Xffffffff856657cc))) BETWEEN (((t0.c0)AND(t0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN ('0.15459369300537218') AND (0xffffffff856657cc))) BETWEEN (((t0.c0)AND(t0.c0))) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('')))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('')))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('')))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('')))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (+ (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('')))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)IS(vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(t0.c0))) WHERE (0.550457885613328) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3194360059592335 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.550457885613328) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(t0.c0))) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3194360059592335 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)<(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(t0.c0))) WHERE (0.550457885613328) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3194360059592335 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.550457885613328) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(t0.c0))) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3194360059592335 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)<(t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT ((((t0.c0)OR(vt0.c0)))AND(t0.c0))) WHERE (0.550457885613328) ORDER BY ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.3194360059592335 WHEN t0.c0 THEN t0.c0 END)*(((t0.c0)<(t0.c0))))  NULLS FIRST;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON IFNULL((vt0.c0 IN (vt0.c0, t0.c0)), t0.c0 COLLATE RTRIM) WHERE (((((vt0.c0)AND(((((vt0.c0)OR(t0.c0)))AND(0.36112344791642226)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((((vt0.c0)OR(t0.c0)))AND(0.36112344791642226)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON IFNULL((vt0.c0 IN (vt0.c0, t0.c0)), t0.c0 COLLATE RTRIM));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON IFNULL((vt0.c0 IN (vt0.c0, t0.c0)), t0.c0 COLLATE RTRIM) WHERE (((((vt0.c0)AND(((((vt0.c0)OR(t0.c0)))AND(0.36112344791642226)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(((((vt0.c0)OR(t0.c0)))AND(0.36112344791642226)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON IFNULL((vt0.c0 IN (vt0.c0, t0.c0)), t0.c0 COLLATE RTRIM));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON IFNULL((vt0.c0 IN (vt0.c0, t0.c0)), t0.c0 COLLATE RTRIM) WHERE (((((vt0.c0)AND(((((vt0.c0)OR(t0.c0)))AND(0.36112344791642226)))))OR(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((~ (t0.c0))))==((vt0.c0))) WHERE (((vt0.c0)-(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((~ (t0.c0))))==((vt0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((~ (t0.c0))))==((vt0.c0))) WHERE (((vt0.c0)-(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((~ (t0.c0))))==((vt0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((~ (t0.c0))))==((vt0.c0))) WHERE (((vt0.c0)-(vt0.c0)) COLLATE NOCASE);
SELECT * FROM t0, vt0 WHERE ((NOT (((x'')IS NOT(t0.c0))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(0.0036824760530163037)))OR(t0.c0)))AND(vt0.c0)))AND(0x74401e79)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END, '-1339496473' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(0.0036824760530163037)))OR(t0.c0)))AND(vt0.c0)))AND(0X74401e79)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END, '-1339496473' ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((NOT (((x'')IS NOT(t0.c0))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(0.0036824760530163037)))OR(t0.c0)))AND(vt0.c0)))AND(0x74401e79)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END, '-1339496473' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')IS NOT(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(0.0036824760530163037)))OR(t0.c0)))AND(vt0.c0)))AND(0X74401e79)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END, '-1339496473' ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((NOT (((x'')IS NOT(t0.c0))))) ORDER BY CASE t0.c0 COLLATE NOCASE  WHEN ((((((((((((t0.c0)AND(vt0.c0)))OR(0.0036824760530163037)))OR(t0.c0)))AND(vt0.c0)))AND(0x74401e79)))AND(t0.c0)) THEN vt0.c0 COLLATE NOCASE END, '-1339496473' ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 COLLATE BINARY)AND((('1525252021')-(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (('2062844340')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND((('1525252021')-(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (('2062844340'))));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 COLLATE BINARY)AND((('1525252021')-(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (('2062844340')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND((('1525252021')-(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (('2062844340'))));
SELECT * FROM vt0, t0 WHERE (((((vt0.c0 COLLATE BINARY)AND((('1525252021')-(vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (('2062844340')));
