-- Time: 2024/06/09 00:52:58
-- Database: database82
-- Database version: 3.40.0
-- seed value: 1477238282
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.1947387091018693), ('4*'), (x'605e'), (0.839362861165087), (0.5878326769562648); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.5697629282632006); -- 0ms;
PRAGMA stats; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'59aa49dea55a'), (0.839362861165087), (0xffffffffc7a05e2c); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c1; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7900080368335015); -- 0ms;
UPDATE OR ABORT t0 SET (c1)=(0.839362861165087); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ANALYZE t1; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (0.828504874665369); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
PRAGMA cache_size; -- 0ms;
UPDATE t0 SET c0=-9.45791444E8 WHERE (-824201229 IN ()); -- 0ms;
REINDEX  t0; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c67; -- 0ms;
CREATE UNIQUE INDEX i11 ON t0((((c67) BETWEEN (c67) AND (c67)) IN ())); -- 0ms;
CREATE UNIQUE INDEX i48 ON t0(LIKELIHOOD(0.24713743510896125, 0.5631216518912457) COLLATE RTRIM ASC); -- 0ms;
CREATE UNIQUE INDEX i75 ON t0(((((c67)IS NOT('}5l/HD늂R-'))) NOTNULL) COLLATE NOCASE); -- 0ms;
CREATE INDEX IF NOT EXISTS i45 ON t0(CAST((('2092708198') BETWEEN (c67) AND (c67)) AS BLOB) DESC) WHERE ((NULL COLLATE BINARY) ISNULL); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA default_cache_size = -1545624971; -- 1ms;
INSERT OR ABORT INTO t0 VALUES (0.5697629282632006), (x'c5ab'), (0.839362861165087); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0Xffffffffd5d9b02c); -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
REINDEX i45; -- 0ms;
CREATE INDEX i15 ON t0(((((c67) IS FALSE)) NOT BETWEEN (((c67)!=(c67))) AND (((c67)IS(c67)))) COLLATE NOCASE) WHERE c67; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE OR IGNORE t0 SET (c67)=(0Xffffffffd5d9b02c) WHERE (((((t0.c67)) BETWEEN ((t0.c67)) AND ((t0.c67))))GLOB((t0.c67 IN (t0.c67, t0.c67)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX i15; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE 0.294255095363538  WHEN '-1123656381' THEN NULL END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c2)=(NULL, 0.294255095363538); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
UPDATE t0 SET (c67)=(716646746) WHERE ((((((((CASE t0.c67  WHEN t0.c67 THEN t0.c67 ELSE t0.c67 END)OR(CASE t0.c67  WHEN t0.c67 THEN t0.c67 END)))AND(((t0.c67)>>(t0.c67)))))OR(0.828504874665369)))AND((((t0.c67))<=((t0.c67))))); -- 4ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA temp.default_cache_size = 1364656324; -- 0ms;
DROP TABLE t1; -- 0ms;
PRAGMA threads = 8925902012531066731; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL  CHECK ( (~ ((c0 IN ()))))); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1, c2, c0) VALUES (0x131f9508, NULL, ''); -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (-325005219), (0.08292295982811992), (0.8296433984429632); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0Xffffffffb995b25a), (NULL), (0.4800807213035515); -- 0ms;
INSERT OR REPLACE INTO vt0(c1, c0, c2) VALUES (1.364656324E9, NULL, 0.2842306431367938); -- 0ms;
UPDATE OR REPLACE vt0 SET (c2)=(0.5103053289422876) WHERE (('4b')<=(vt0.c2 COLLATE NOCASE)); -- 0ms;
PRAGMA stats; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -764201200);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 266010560); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
UPDATE t1 SET (c0)=(0.3855196580732043) WHERE ((((t1.c0)=(t1.c0))) ISNULL); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c2, c2)=(NULL, NULL); -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c90; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1129453969);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 228617016); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c2=100725139 WHERE (((((0.15086855099486085 IN (vt0.c2, vt0.c2)))OR(0.6962568400341804)))OR((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))); -- 0ms;
UPDATE t1 SET c90='0.8296433984429632', c90=NULL WHERE (~ (t1.c90)); -- 0ms;
UPDATE t1 SET (c90, c90, c90)=(1.364656324E9, x'6ff2', x'') WHERE (NOT (((t1.c90) NOTNULL))); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (0.3855196580732043); -- 0ms;
UPDATE OR IGNORE t1 SET c90=NULL WHERE t1.c90; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (0.7303560712941568); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-326943913'); -- 0ms;
UPDATE OR IGNORE t1 SET c90=-2.094550398E9, c90=x''; -- 0ms;
UPDATE OR IGNORE vt0 SET c2=')d\n', c2=NULL, c1='?)' WHERE CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END AS TEXT); -- 0ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT OR FAIL INTO vt0(c2, c0) VALUES ('', '-2005339700'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)!=(((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)!=(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)!=(((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)!=(((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)!=(((vt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (CAST(0.839362861165087 AS INTEGER) IN ()) WHERE (((((vt0.c2 IN ()), CAST('1342687823' AS TEXT), ((t1.c90)<>(vt0.c0))))>((CASE vt0.c0  WHEN t1.c90 THEN vt0.c0 END, (~ (vt0.c2)), ((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 IN ()), CAST('1342687823' AS TEXT), ((t1.c90)!=(vt0.c0))))>((CASE vt0.c0  WHEN t1.c90 THEN vt0.c0 END, (~ (vt0.c2)), ((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (CAST(0.839362861165087 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (CAST(0.839362861165087 AS INTEGER) IN ()) WHERE (((((vt0.c2 IN ()), CAST('1342687823' AS TEXT), ((t1.c90)<>(vt0.c0))))>((CASE vt0.c0  WHEN t1.c90 THEN vt0.c0 END, (~ (vt0.c2)), ((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 IN ()), CAST('1342687823' AS TEXT), ((t1.c90)!=(vt0.c0))))>((CASE vt0.c0  WHEN t1.c90 THEN vt0.c0 END, (~ (vt0.c2)), ((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (CAST(0.839362861165087 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (CAST(0.839362861165087 AS INTEGER) IN ()) WHERE (((((vt0.c2 IN ()), CAST('1342687823' AS TEXT), ((t1.c90)<>(vt0.c0))))>((CASE vt0.c0  WHEN t1.c90 THEN vt0.c0 END, (~ (vt0.c2)), ((vt0.c1) NOTNULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2) IS FALSE)) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)AND(CAST(t1.c90 AS BLOB))))OR(CAST(t1.c90 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)AND(CAST(t1.c90 AS BLOB))))OR(CAST(t1.c90 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)AND(CAST(t1.c90 AS BLOB))))OR(CAST(t1.c90 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)AND(CAST(t1.c90 AS BLOB))))OR(CAST(t1.c90 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)AND(CAST(t1.c90 AS BLOB))))OR(CAST(t1.c90 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c90  WHEN 'P<6siuny' THEN t1.c90 WHEN t1.c90 THEN NULL WHEN t1.c90 THEN t1.c90 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c90  WHEN 'P<6siuny' THEN t1.c90 WHEN t1.c90 THEN NULL WHEN t1.c90 THEN t1.c90 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c90  WHEN 'P<6siuny' THEN t1.c90 WHEN t1.c90 THEN NULL WHEN t1.c90 THEN t1.c90 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c90  WHEN 'P<6siuny' THEN t1.c90 WHEN t1.c90 THEN NULL WHEN t1.c90 THEN t1.c90 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c90  WHEN 'P<6siuny' THEN t1.c90 WHEN t1.c90 THEN NULL WHEN t1.c90 THEN t1.c90 END COLLATE BINARY);
SELECT * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (- (t1.c90)) THEN ((vt0.c2)<=(t1.c90)) WHEN t1.c90 THEN CASE WHEN t1.c90 THEN t1.c90 END WHEN (t1.c90 IN ()) THEN ((vt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (- (t1.c90)) THEN ((vt0.c2)<=(t1.c90)) WHEN t1.c90 THEN CASE WHEN t1.c90 THEN t1.c90 END WHEN (t1.c90 IN ()) THEN ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (- (t1.c90)) THEN ((vt0.c2)<=(t1.c90)) WHEN t1.c90 THEN CASE WHEN t1.c90 THEN t1.c90 END WHEN (t1.c90 IN ()) THEN ((vt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (- (t1.c90)) THEN ((vt0.c2)<=(t1.c90)) WHEN t1.c90 THEN CASE WHEN t1.c90 THEN t1.c90 END WHEN (t1.c90 IN ()) THEN ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2))  WHEN (- (t1.c90)) THEN ((vt0.c2)<=(t1.c90)) WHEN t1.c90 THEN CASE WHEN t1.c90 THEN t1.c90 END WHEN (t1.c90 IN ()) THEN ((vt0.c1) ISNULL) END);
SELECT * FROM t1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) ORDER BY CASE (~ (t1.c90))  WHEN (NOT (t1.c90)) THEN CAST(vt0.c2 AS INTEGER) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN x'' END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (~ (t1.c90))  WHEN (NOT (t1.c90)) THEN CAST(vt0.c2 AS INTEGER) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN x'' END);
SELECT * FROM t1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) ORDER BY CASE (~ (t1.c90))  WHEN (NOT (t1.c90)) THEN CAST(vt0.c2 AS INTEGER) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN x'' END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (~ (t1.c90))  WHEN (NOT (t1.c90)) THEN CAST(vt0.c2 AS INTEGER) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN x'' END);
SELECT * FROM t1, vt0 WHERE (CASE WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) END) ORDER BY CASE (~ (t1.c90))  WHEN (NOT (t1.c90)) THEN CAST(vt0.c2 AS INTEGER) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 COLLATE RTRIM THEN x'' END;
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c90)GLOB(t1.c90))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c90)GLOB(t1.c90)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c90)GLOB(t1.c90))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t1.c90)GLOB(t1.c90)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (LIKELY(((t1.c90)GLOB(t1.c90))));
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((vt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c2) NOT NULL))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((vt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c2) NOT NULL))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (TRIM(((vt0.c2) NOT NULL)));
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((((vt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((((vt0.c2) ISNULL))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((((vt0.c2) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((((vt0.c2) ISNULL))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2)) BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((((vt0.c2) ISNULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<>(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<>(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<>(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<>(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<>(vt0.c2)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (0Xffffffffb3e9cb00);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb3e9cb00) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0Xffffffffb3e9cb00);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffb3e9cb00) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0Xffffffffb3e9cb00);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON '''Ellqd땸s[' WHERE ((((((vt0.c0)) NOT BETWEEN (('320836872')) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c1))>=((t1.c90))) IN ())  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('320836872')) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON '''Ellqd땸s[' ORDER BY ((((vt0.c1))>=((t1.c90))) IN ())  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON '''Ellqd땸s[' WHERE ((((((vt0.c0)) NOT BETWEEN (('320836872')) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c1))>=((t1.c90))) IN ())  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('320836872')) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON '''Ellqd땸s[' ORDER BY ((((vt0.c1))>=((t1.c90))) IN ())  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON '''Ellqd땸s[' WHERE ((((((vt0.c0)) NOT BETWEEN (('320836872')) AND ((vt0.c1))))>>(vt0.c0 COLLATE BINARY))) ORDER BY ((((vt0.c1))>=((t1.c90))) IN ())  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c2) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) IS TRUE));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) WHERE (CASE WHEN (('100725139')*(vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('100725139')*(vt0.c1)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) WHERE (CASE WHEN (('100725139')*(vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('100725139')*(vt0.c1)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(vt0.c0 AS BLOB) WHERE (CASE WHEN (('100725139')*(vt0.c1)) THEN (vt0.c1 IN ()) END);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(vt0.c2 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(vt0.c2 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))|(((vt0.c0)IS NOT(vt0.c2))))) ORDER BY ((CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)*(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1)))|(((vt0.c0)IS NOT(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)*(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))|(((vt0.c0)IS NOT(vt0.c2))))) ORDER BY ((CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)*(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1)))|(((vt0.c0)IS NOT(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)*(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1)))|(((vt0.c0)IS NOT(vt0.c2))))) ORDER BY ((CASE ''  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)*(NULL)) DESC;
SELECT * FROM vt0 WHERE (json_extract(((vt0.c2) ISNULL), CASE WHEN vt0.c1 THEN '' ELSE 0Xffffffff8ddd1a37 END, vt0.c1 COLLATE RTRIM, CAST(vt0.c1 AS REAL))) ORDER BY x'4d8f' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c2) ISNULL), CASE WHEN vt0.c1 THEN '' ELSE 0Xffffffff8ddd1a37 END, vt0.c1 COLLATE RTRIM, CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY x'4d8f' COLLATE BINARY);
SELECT * FROM vt0 WHERE (json_extract(((vt0.c2) ISNULL), CASE WHEN vt0.c1 THEN '' ELSE 0Xffffffff8ddd1a37 END, vt0.c1 COLLATE RTRIM, CAST(vt0.c1 AS REAL))) ORDER BY x'4d8f' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((json_extract(((vt0.c2) ISNULL), CASE WHEN vt0.c1 THEN '' ELSE 0Xffffffff8ddd1a37 END, vt0.c1 COLLATE RTRIM, CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY x'4d8f' COLLATE BINARY);
SELECT ALL * FROM vt0, t1 WHERE ((((~ ('0TP쌾t'))) BETWEEN (CASE WHEN NULL THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('0TP쌾t'))) BETWEEN (CASE WHEN NULL THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((~ ('0TP쌾t'))) BETWEEN (CASE WHEN NULL THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('0TP쌾t'))) BETWEEN (CASE WHEN NULL THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((~ ('0TP쌾t'))) BETWEEN (CASE WHEN NULL THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c2) NOT NULL))));
SELECT * FROM t1 WHERE ((('.N?m') BETWEEN (CASE t1.c90  WHEN t1.c90 THEN x'' END) AND ('0.24713743510896125'))) ORDER BY (+ (CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('.N?m') BETWEEN (CASE t1.c90  WHEN t1.c90 THEN x'' END) AND ('0.24713743510896125'))) IS TRUE)  as count FROM t1 ORDER BY (+ (CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC, '' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((('.N?m') BETWEEN (CASE t1.c90  WHEN t1.c90 THEN x'' END) AND ('0.24713743510896125'))) ORDER BY (+ (CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC, '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('.N?m') BETWEEN (CASE t1.c90  WHEN t1.c90 THEN x'' END) AND ('0.24713743510896125'))) IS TRUE)  as count FROM t1 ORDER BY (+ (CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC, '' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((('.N?m') BETWEEN (CASE t1.c90  WHEN t1.c90 THEN x'' END) AND ('0.24713743510896125'))) ORDER BY (+ (CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC, '' ASC  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN t1 ON -1181371814 WHERE ((+ (t1.c90)) COLLATE NOCASE) ORDER BY ((((((NULL)||(vt0.c1)))AND(((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c90)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON -1181371814 ORDER BY ((((((NULL)||(vt0.c1)))AND(((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1) IS FALSE))) ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON -1181371814 WHERE ((+ (t1.c90)) COLLATE NOCASE) ORDER BY ((((((NULL)||(vt0.c1)))AND(((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c90)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON -1181371814 ORDER BY ((((((NULL)||(vt0.c1)))AND(((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1) IS FALSE))) ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON -1181371814 WHERE ((+ (t1.c90)) COLLATE NOCASE) ORDER BY ((((((NULL)||(vt0.c1)))AND(((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(((vt0.c1) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((NULL)OR('!pO')))AND(vt0.c1)))OR(0.023514815351151963)))AND(vt0.c1))) AND (((t1.c90) NOTNULL)))) ORDER BY (+ (t1.c90)) DESC, ((json_array_length(vt0.c2))<=(vt0.c0))  NULLS FIRST, (((((((vt0.c0))>((t1.c90))))OR((((vt0.c2))<((t1.c90))))))AND(CASE WHEN t1.c90 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((NULL)OR('!pO')))AND(vt0.c1)))OR(0.023514815351151963)))AND(vt0.c1))) AND (((t1.c90) NOTNULL)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c0 ORDER BY (+ (t1.c90)) DESC, ((json_array_length(vt0.c2))<=(vt0.c0))  NULLS FIRST, (((((((vt0.c0))>((t1.c90))))OR((((vt0.c2))<((t1.c90))))))AND(CASE WHEN t1.c90 THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((NULL)OR('!pO')))AND(vt0.c1)))OR(0.023514815351151963)))AND(vt0.c1))) AND (((t1.c90) NOTNULL)))) ORDER BY (+ (t1.c90)) DESC, ((json_array_length(vt0.c2))<=(vt0.c0))  NULLS FIRST, (((((((vt0.c0))>((t1.c90))))OR((((vt0.c2))<((t1.c90))))))AND(CASE WHEN t1.c90 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((NULL)OR('!pO')))AND(vt0.c1)))OR(0.023514815351151963)))AND(vt0.c1))) AND (((t1.c90) NOTNULL)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c0 ORDER BY (+ (t1.c90)) DESC, ((json_array_length(vt0.c2))<=(vt0.c0))  NULLS FIRST, (((((((vt0.c0))>((t1.c90))))OR((((vt0.c2))<((t1.c90))))))AND(CASE WHEN t1.c90 THEN vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((((((((NULL)OR('!pO')))AND(vt0.c1)))OR(0.023514815351151963)))AND(vt0.c1))) AND (((t1.c90) NOTNULL)))) ORDER BY (+ (t1.c90)) DESC, ((json_array_length(vt0.c2))<=(vt0.c0))  NULLS FIRST, (((((((vt0.c0))>((t1.c90))))OR((((vt0.c2))<((t1.c90))))))AND(CASE WHEN t1.c90 THEN vt0.c0 END)) ASC;
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c2)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c2)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (((vt0.c2)>>(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c90)))IS NOT(0.7900080368335015)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c90)))IS NOT(0.7900080368335015))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c90)))IS NOT(0.7900080368335015)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c90)))IS NOT(0.7900080368335015))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c90)))IS NOT(0.7900080368335015)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c90);
SELECT COUNT(*) FROM vt0 WHERE ((-326943913 COLLATE BINARY IN (((vt0.c1) IS FALSE)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-326943913 COLLATE BINARY IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((-326943913 COLLATE BINARY IN (((vt0.c1) IS FALSE)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((-326943913 COLLATE BINARY IN (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((-326943913 COLLATE BINARY IN (((vt0.c1) IS FALSE)))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 WHEN x'' THEN 0.24713743510896125 WHEN vt0.c2 THEN t1.c90 WHEN x'' THEN vt0.c2 END)<=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 WHEN x'' THEN 0.24713743510896125 WHEN vt0.c2 THEN t1.c90 WHEN x'' THEN vt0.c2 END)<=((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 WHEN x'' THEN 0.24713743510896125 WHEN vt0.c2 THEN t1.c90 WHEN x'' THEN vt0.c2 END)<=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 WHEN x'' THEN 0.24713743510896125 WHEN vt0.c2 THEN t1.c90 WHEN x'' THEN vt0.c2 END)<=((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 WHEN x'' THEN 0.24713743510896125 WHEN vt0.c2 THEN t1.c90 WHEN x'' THEN vt0.c2 END)<=((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))<((t1.c90)))) IS TRUE) WHERE (((((t1.c90, NULL, vt0.c2, vt0.c2, t1.c90))>=((t1.c90, t1.c90, vt0.c0, 0.7513658469163744, t1.c90))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90, NULL, vt0.c2, vt0.c2, t1.c90))>=((t1.c90, t1.c90, vt0.c0, 0.7513658469163744, t1.c90))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))<((t1.c90)))) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))<((t1.c90)))) IS TRUE) WHERE (((((t1.c90, NULL, vt0.c2, vt0.c2, t1.c90))>=((t1.c90, t1.c90, vt0.c0, 0.7513658469163744, t1.c90))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90, NULL, vt0.c2, vt0.c2, t1.c90))>=((t1.c90, t1.c90, vt0.c0, 0.7513658469163744, t1.c90))) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))<((t1.c90)))) IS TRUE));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))<((t1.c90)))) IS TRUE) WHERE (((((t1.c90, NULL, vt0.c2, vt0.c2, t1.c90))>=((t1.c90, t1.c90, vt0.c0, 0.7513658469163744, t1.c90))) IN ()));
SELECT ALL * FROM vt0 WHERE (((((-9.45791444E8)LIKE(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0) BETWEEN (vt0.c2) AND (((vt0.c2)+(vt0.c1)))) DESC  NULLS LAST, CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-9.45791444E8)LIKE(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c2) AND (((vt0.c2)+(vt0.c1)))) DESC  NULLS LAST, CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (((((-9.45791444E8)LIKE(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0) BETWEEN (vt0.c2) AND (((vt0.c2)+(vt0.c1)))) DESC  NULLS LAST, CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((-9.45791444E8)LIKE(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c2) AND (((vt0.c2)+(vt0.c1)))) DESC  NULLS LAST, CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (((((-9.45791444E8)LIKE(vt0.c0))) IS TRUE)) ORDER BY ((vt0.c0) BETWEEN (vt0.c2) AND (((vt0.c2)+(vt0.c1)))) DESC  NULLS LAST, CAST(CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END AS REAL) ASC;
SELECT ALL * FROM t1 WHERE (CAST(('-2005339700' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-2005339700' IN ()) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(('-2005339700' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-2005339700' IN ()) AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(('-2005339700' IN ()) AS INTEGER));
SELECT ALL * FROM t1 WHERE (HEX(DISTINCT TRIM(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT TRIM(t1.c90))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (HEX(DISTINCT TRIM(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT TRIM(t1.c90))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (HEX(DISTINCT TRIM(t1.c90)));
SELECT * FROM vt0, t1 WHERE (CASE ((((vt0.c2)OR('-824201229')))OR(vt0.c2))  WHEN ((((vt0.c2)AND(t1.c90)))OR(vt0.c1)) THEN ((NULL)==(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN t1.c90 END THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) WHEN '-707153876' THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END) ORDER BY CHAR(vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c2)OR('-824201229')))OR(vt0.c2))  WHEN ((((vt0.c2)AND(t1.c90)))OR(vt0.c1)) THEN ((NULL)==(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN t1.c90 END THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) WHEN '-707153876' THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY CHAR(vt0.c2 COLLATE NOCASE));
SELECT * FROM vt0, t1 WHERE (CASE ((((vt0.c2)OR('-824201229')))OR(vt0.c2))  WHEN ((((vt0.c2)AND(t1.c90)))OR(vt0.c1)) THEN ((NULL)==(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN t1.c90 END THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) WHEN '-707153876' THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END) ORDER BY CHAR(vt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c2)OR('-824201229')))OR(vt0.c2))  WHEN ((((vt0.c2)AND(t1.c90)))OR(vt0.c1)) THEN ((NULL)==(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN t1.c90 END THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) WHEN '-707153876' THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY CHAR(vt0.c2 COLLATE NOCASE));
SELECT * FROM vt0, t1 WHERE (CASE ((((vt0.c2)OR('-824201229')))OR(vt0.c2))  WHEN ((((vt0.c2)AND(t1.c90)))OR(vt0.c1)) THEN ((NULL)==(vt0.c2)) WHEN CASE vt0.c0  WHEN vt0.c2 THEN t1.c90 END THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) WHEN '-707153876' THEN vt0.c2 COLLATE BINARY ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) END) ORDER BY CHAR(vt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0, t1 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(t1.c90)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(t1.c90)) AS REAL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(t1.c90)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(t1.c90)) AS REAL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(t1.c90)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-707153876') ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-707153876') IS TRUE)  as count FROM vt0, t1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-707153876') ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-707153876') IS TRUE)  as count FROM vt0, t1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ('-707153876') ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN t1.c90 ELSE '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN t1.c90 ELSE '' END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN t1.c90 ELSE '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN t1.c90 ELSE '' END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c2 END THEN t1.c90 ELSE '' END);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0, t1 WHERE ((NOT ((- (vt0.c1))))) ORDER BY ((CAST(NULL AS INTEGER))%(vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(NULL AS INTEGER))%(vt0.c2)) ASC);
SELECT ALL * FROM vt0, t1 WHERE ((NOT ((- (vt0.c1))))) ORDER BY ((CAST(NULL AS INTEGER))%(vt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(NULL AS INTEGER))%(vt0.c2)) ASC);
SELECT ALL * FROM vt0, t1 WHERE ((NOT ((- (vt0.c1))))) ORDER BY ((CAST(NULL AS INTEGER))%(vt0.c2)) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS TEXT) THEN (vt0.c1 IN ()) ELSE (((t1.c90))==((vt0.c0))) END WHERE (LOWER(DISTINCT (vt0.c2 IN ()))) ORDER BY ((x'c61c' COLLATE BINARY) BETWEEN (CAST('0.4800807213035515' AS NUMERIC)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS TEXT) THEN (vt0.c1 IN ()) ELSE (((t1.c90))=((vt0.c0))) END ORDER BY ((x'c61c' COLLATE BINARY) BETWEEN (CAST('0.4800807213035515' AS NUMERIC)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS TEXT) THEN (vt0.c1 IN ()) ELSE (((t1.c90))==((vt0.c0))) END WHERE (LOWER(DISTINCT (vt0.c2 IN ()))) ORDER BY ((x'c61c' COLLATE BINARY) BETWEEN (CAST('0.4800807213035515' AS NUMERIC)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt0.c2 IN ()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS TEXT) THEN (vt0.c1 IN ()) ELSE (((t1.c90))=((vt0.c0))) END ORDER BY ((x'c61c' COLLATE BINARY) BETWEEN (CAST('0.4800807213035515' AS NUMERIC)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CASE WHEN CAST(vt0.c1 AS TEXT) THEN (vt0.c1 IN ()) ELSE (((t1.c90))==((vt0.c0))) END WHERE (LOWER(DISTINCT (vt0.c2 IN ()))) ORDER BY ((x'c61c' COLLATE BINARY) BETWEEN (CAST('0.4800807213035515' AS NUMERIC)) AND (vt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c1)<=(t1.c90))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c1)<=(t1.c90)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c1)<=(t1.c90))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c1)<=(t1.c90)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c1)<=(t1.c90))))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 END)) AND ((((t1.c90) IS FALSE))))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 END)) AND ((((t1.c90) IS FALSE))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 END)) AND ((((t1.c90) IS FALSE))))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 END)) AND ((((t1.c90) IS FALSE))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 END)) AND ((((t1.c90) IS FALSE))))) ORDER BY CAST(vt0.c0 AS NUMERIC)  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(t1.c90 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c90 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(t1.c90 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c90 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(t1.c90 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (- (-65161851)) THEN (vt0.c2 IN ()) END) ORDER BY (((vt0.c2)) BETWEEN (((+ ('}~')))) AND ((t1.c90 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c2)-(vt0.c0)))<<(((((vt0.c2)OR(vt0.c1)))OR(t1.c90)))) DESC, ((0.45250892552915467)>>(x'29e3'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (-65161851)) THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c2)) BETWEEN (((+ ('}~')))) AND ((t1.c90 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c2)-(vt0.c0)))<<(((((vt0.c2)OR(vt0.c1)))OR(t1.c90)))) DESC, ((0.45250892552915467)>>(x'29e3')));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (- (-65161851)) THEN (vt0.c2 IN ()) END) ORDER BY (((vt0.c2)) BETWEEN (((+ ('}~')))) AND ((t1.c90 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c2)-(vt0.c0)))<<(((((vt0.c2)OR(vt0.c1)))OR(t1.c90)))) DESC, ((0.45250892552915467)>>(x'29e3'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (-65161851)) THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c2)) BETWEEN (((+ ('}~')))) AND ((t1.c90 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c2)-(vt0.c0)))<<(((((vt0.c2)OR(vt0.c1)))OR(t1.c90)))) DESC, ((0.45250892552915467)>>(x'29e3')));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (- (-65161851)) THEN (vt0.c2 IN ()) END) ORDER BY (((vt0.c2)) BETWEEN (((+ ('}~')))) AND ((t1.c90 COLLATE RTRIM)))  NULLS LAST, ((((vt0.c2)-(vt0.c0)))<<(((((vt0.c2)OR(vt0.c1)))OR(t1.c90)))) DESC, ((0.45250892552915467)>>(x'29e3'));
SELECT ALL * FROM t1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))>((vt0.c1 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN t1.c90 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), json_extract(((((t1.c90)OR(NULL)))OR(t1.c90)), vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))>((vt0.c1 IN ())))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(CASE WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN t1.c90 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), json_extract(((((t1.c90)OR(NULL)))OR(t1.c90)), vt0.c1 COLLATE BINARY));
SELECT ALL * FROM t1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))>((vt0.c1 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN t1.c90 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), json_extract(((((t1.c90)OR(NULL)))OR(t1.c90)), vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS TEXT))>((vt0.c1 IN ())))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(CASE WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN t1.c90 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), json_extract(((((t1.c90)OR(NULL)))OR(t1.c90)), vt0.c1 COLLATE BINARY));
SELECT ALL * FROM t1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))>((vt0.c1 IN ())))) ORDER BY CAST(CASE WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 WHEN t1.c90 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER), json_extract(((((t1.c90)OR(NULL)))OR(t1.c90)), vt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))<<(((t1.c90)<(t1.c90)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c90 AS BLOB))<<(((t1.c90)<(t1.c90))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))<<(((t1.c90)<(t1.c90)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c90 AS BLOB))<<(((t1.c90)<(t1.c90))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))<<(((t1.c90)<(t1.c90)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (+ (DATE(t1.c90, vt0.c2, vt0.c0, t1.c90, vt0.c0))) WHERE ((((t1.c90, vt0.c0, t1.c90, vt0.c1, '}p')) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c90, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c90, vt0.c0, t1.c90, vt0.c1, '}p')) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c90, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (+ (DATE(t1.c90, vt0.c2, vt0.c0, t1.c90, vt0.c0))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (+ (DATE(t1.c90, vt0.c2, vt0.c0, t1.c90, vt0.c0))) WHERE ((((t1.c90, vt0.c0, t1.c90, vt0.c1, '}p')) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c90, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((t1.c90, vt0.c0, t1.c90, vt0.c1, '}p')) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c90, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (+ (DATE(t1.c90, vt0.c2, vt0.c0, t1.c90, vt0.c0))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (+ (DATE(t1.c90, vt0.c2, vt0.c0, t1.c90, vt0.c0))) WHERE ((((t1.c90, vt0.c0, t1.c90, vt0.c1, '}p')) NOT BETWEEN ((vt0.c1, vt0.c1, t1.c90, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c2, vt0.c2, vt0.c0))) COLLATE NOCASE);
SELECT * FROM vt0, t1 WHERE ((((t1.c90)&(vt0.c2)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((t1.c90)&(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY NULL);
SELECT * FROM vt0, t1 WHERE ((((t1.c90)&(vt0.c2)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((t1.c90)&(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY NULL);
SELECT * FROM vt0, t1 WHERE ((((t1.c90)&(vt0.c2)) IN ())) ORDER BY NULL;
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(vt0.c0)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_VERSION()) ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (CASE WHEN ((vt0.c2)>(t1.c90)) THEN NULLIF(DISTINCT vt0.c0, vt0.c1) END) ORDER BY (((('1152857406') NOT BETWEEN (vt0.c1) AND (-155327452)))&(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((t1.c90)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c90)))) AND (((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)>(t1.c90)) THEN NULLIF(DISTINCT vt0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS NUMERIC) ORDER BY (((('1152857406') NOT BETWEEN (vt0.c1) AND (-155327452)))&(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((t1.c90)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c90)))) AND (((+ (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (CASE WHEN ((vt0.c2)>(t1.c90)) THEN NULLIF(DISTINCT vt0.c0, vt0.c1) END) ORDER BY (((('1152857406') NOT BETWEEN (vt0.c1) AND (-155327452)))&(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((t1.c90)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c90)))) AND (((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c2)>(t1.c90)) THEN NULLIF(DISTINCT vt0.c0, vt0.c1) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS NUMERIC) ORDER BY (((('1152857406') NOT BETWEEN (vt0.c1) AND (-155327452)))&(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((t1.c90)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c90)))) AND (((+ (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CAST((vt0.c0 IN ()) AS NUMERIC) WHERE (CASE WHEN ((vt0.c2)>(t1.c90)) THEN NULLIF(DISTINCT vt0.c0, vt0.c1) END) ORDER BY (((('1152857406') NOT BETWEEN (vt0.c1) AND (-155327452)))&(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, (((t1.c90)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c2) AND (t1.c90)))) AND (((+ (vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((t1.c90, (+ (t1.c90)), ((vt0.c0)>(vt0.c2)))) AND ((vt0.c0, (((vt0.c1)) NOT BETWEEN ((0X3bcfc33e)) AND ((vt0.c0))), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((t1.c90, (+ (t1.c90)), ((vt0.c0)>(vt0.c2)))) AND ((vt0.c0, (((vt0.c1)) NOT BETWEEN ((0X3bcfc33e)) AND ((vt0.c0))), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((t1.c90, (+ (t1.c90)), ((vt0.c0)>(vt0.c2)))) AND ((vt0.c0, (((vt0.c1)) NOT BETWEEN ((0X3bcfc33e)) AND ((vt0.c0))), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((t1.c90, (+ (t1.c90)), ((vt0.c0)>(vt0.c2)))) AND ((vt0.c0, (((vt0.c1)) NOT BETWEEN ((0X3bcfc33e)) AND ((vt0.c0))), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((t1.c90, (+ (t1.c90)), ((vt0.c0)>(vt0.c2)))) AND ((vt0.c0, (((vt0.c1)) NOT BETWEEN ((0X3bcfc33e)) AND ((vt0.c0))), ((((vt0.c1)AND(vt0.c2)))OR(vt0.c1))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((0.1947387091018693)LIKE((((t1.c90, t1.c90, 0.21835730299272305)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, x'', t1.c90))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1947387091018693)LIKE((((t1.c90, t1.c90, 0.21835730299272305)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, x'', t1.c90)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.1947387091018693)LIKE((((t1.c90, t1.c90, 0.21835730299272305)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, x'', t1.c90))))));
SELECT SUM(count) FROM (SELECT ALL ((((0.1947387091018693)LIKE((((t1.c90, t1.c90, 0.21835730299272305)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, x'', t1.c90)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((0.1947387091018693)LIKE((((t1.c90, t1.c90, 0.21835730299272305)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, x'', t1.c90))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c90 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c90 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c90 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c90 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c90 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))) WHERE (((((vt0.c2)LIKE(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)LIKE(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))) WHERE (((((vt0.c2)LIKE(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)LIKE(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (vt0.c0 IN ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))) WHERE (((((vt0.c2)LIKE(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(((t1.c90)||(t1.c90)))) ORDER BY CAST((- (t1.c90)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t1.c90)||(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CAST((- (t1.c90)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(((t1.c90)||(t1.c90)))) ORDER BY CAST((- (t1.c90)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t1.c90)||(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CAST((- (t1.c90)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (ABS(((t1.c90)||(t1.c90)))) ORDER BY CAST((- (t1.c90)) AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)LIKE(vt0.c0)))));
SELECT * FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c2))<((vt0.c2)))))) ORDER BY ((((((vt0.c2) IS TRUE))AND(CAST(vt0.c1 AS INTEGER))))AND((((vt0.c1))>=((vt0.c2)))))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c2, vt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c2))<((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2) IS TRUE))AND(CAST(vt0.c1 AS INTEGER))))AND((((vt0.c1))>=((vt0.c2)))))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c2, vt0.c2))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c2))<((vt0.c2)))))) ORDER BY ((((((vt0.c2) IS TRUE))AND(CAST(vt0.c1 AS INTEGER))))AND((((vt0.c1))>=((vt0.c2)))))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c2, vt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c2))<((vt0.c2)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2) IS TRUE))AND(CAST(vt0.c1 AS INTEGER))))AND((((vt0.c1))>=((vt0.c2)))))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c2, vt0.c2))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE ((~ ((((vt0.c2))<((vt0.c2)))))) ORDER BY ((((((vt0.c2) IS TRUE))AND(CAST(vt0.c1 AS INTEGER))))AND((((vt0.c1))>=((vt0.c2)))))  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c2, vt0.c2))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c90)OR(vt0.c0)))AND(NULL))) NOT BETWEEN (vt0.c2) AND ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c90)OR(vt0.c0)))AND(NULL))) NOT BETWEEN (vt0.c2) AND ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c90)OR(vt0.c0)))AND(NULL))) NOT BETWEEN (vt0.c2) AND ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c90)OR(vt0.c0)))AND(NULL))) NOT BETWEEN (vt0.c2) AND ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((((t1.c90)OR(vt0.c0)))AND(NULL))) NOT BETWEEN (vt0.c2) AND ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1) NOTNULL) WHERE ((((+ (t1.c90)))>(((((((((t1.c90)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(t1.c90)))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c90)))>(((((((((t1.c90)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(t1.c90))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1) NOTNULL) WHERE ((((+ (t1.c90)))>(((((((((t1.c90)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(t1.c90)))));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c90)))>(((((((((t1.c90)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(t1.c90))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1) NOTNULL) WHERE ((((+ (t1.c90)))>(((((((((t1.c90)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(t1.c90)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(LENGTH(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c2)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c2)AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(LENGTH(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c2)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(LENGTH(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c2)AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND((vt0.c0 IN ()))))AND(LENGTH(vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)LIKE(((vt0.c2)AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN LIKE(t1.c90, NULL, 'B') WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.5892746439959478) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN LIKE(t1.c90, NULL, 'B') WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.5892746439959478) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN LIKE(t1.c90, NULL, 'B') WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.5892746439959478) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN ((vt0.c0)>(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN LIKE(t1.c90, NULL, 'B') WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.5892746439959478) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN ((vt0.c0)>(vt0.c1)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 THEN LIKE(t1.c90, NULL, 'B') WHEN CAST(vt0.c0 AS NUMERIC) THEN ((0.5892746439959478) BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN ((vt0.c0)>(vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c2 THEN (x'3b26' IN ()) ELSE 0X4ff4b19b END) ORDER BY ((CAST(vt0.c1 AS REAL))||(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c2 THEN (x'3b26' IN ()) ELSE 0X4ff4b19b END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))||(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c2 THEN (x'3b26' IN ()) ELSE 0X4ff4b19b END) ORDER BY ((CAST(vt0.c1 AS REAL))||(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c2 THEN (x'3b26' IN ()) ELSE 0X4ff4b19b END) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))||(CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN vt0.c2 THEN (x'3b26' IN ()) ELSE 0X4ff4b19b END) ORDER BY ((CAST(vt0.c1 AS REAL))||(CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))==((- (vt0.c1))))) ORDER BY ((vt0.c2) BETWEEN (((t1.c90) IS TRUE)) AND (vt0.c2)), (((((vt0.c0) IS TRUE)))<=((((vt0.c1)<>(vt0.c0))))) DESC, ((('0.7303560712941568', ((t1.c90)/(vt0.c2)), '2057571235'))>=((((t1.c90)|(t1.c90)), ((vt0.c2)>>(vt0.c2)), (((vt0.c2, vt0.c2, x'1751')) NOT BETWEEN ((vt0.c2, t1.c90, t1.c90)) AND ((vt0.c1, t1.c90, t1.c90))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))=((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c2) BETWEEN (((t1.c90) IS TRUE)) AND (vt0.c2)), (((((vt0.c0) IS TRUE)))<=((((vt0.c1)!=(vt0.c0))))) DESC, ((('0.7303560712941568', ((t1.c90)/(vt0.c2)), '2057571235'))>=((((t1.c90)|(t1.c90)), ((vt0.c2)>>(vt0.c2)), (((vt0.c2, vt0.c2, x'1751')) NOT BETWEEN ((vt0.c2, t1.c90, t1.c90)) AND ((vt0.c1, t1.c90, t1.c90)))))));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))==((- (vt0.c1))))) ORDER BY ((vt0.c2) BETWEEN (((t1.c90) IS TRUE)) AND (vt0.c2)), (((((vt0.c0) IS TRUE)))<=((((vt0.c1)<>(vt0.c0))))) DESC, ((('0.7303560712941568', ((t1.c90)/(vt0.c2)), '2057571235'))>=((((t1.c90)|(t1.c90)), ((vt0.c2)>>(vt0.c2)), (((vt0.c2, vt0.c2, x'1751')) NOT BETWEEN ((vt0.c2, t1.c90, t1.c90)) AND ((vt0.c1, t1.c90, t1.c90))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))=((- (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c2) BETWEEN (((t1.c90) IS TRUE)) AND (vt0.c2)), (((((vt0.c0) IS TRUE)))<=((((vt0.c1)!=(vt0.c0))))) DESC, ((('0.7303560712941568', ((t1.c90)/(vt0.c2)), '2057571235'))>=((((t1.c90)|(t1.c90)), ((vt0.c2)>>(vt0.c2)), (((vt0.c2, vt0.c2, x'1751')) NOT BETWEEN ((vt0.c2, t1.c90, t1.c90)) AND ((vt0.c1, t1.c90, t1.c90)))))));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))==((- (vt0.c1))))) ORDER BY ((vt0.c2) BETWEEN (((t1.c90) IS TRUE)) AND (vt0.c2)), (((((vt0.c0) IS TRUE)))<=((((vt0.c1)<>(vt0.c0))))) DESC, ((('0.7303560712941568', ((t1.c90)/(vt0.c2)), '2057571235'))>=((((t1.c90)|(t1.c90)), ((vt0.c2)>>(vt0.c2)), (((vt0.c2, vt0.c2, x'1751')) NOT BETWEEN ((vt0.c2, t1.c90, t1.c90)) AND ((vt0.c1, t1.c90, t1.c90))))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((CAST(vt0.c0 AS REAL))|(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))|(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((CAST(vt0.c0 AS REAL))|(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))|(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((CAST(vt0.c0 AS REAL))|(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((('OO*0놛'))!=((json(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('OO*0놛'))<>((json(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('OO*0놛'))!=((json(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('OO*0놛'))<>((json(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c90)IS(vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)IS(vt0.c0)))==(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c90)IS(vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)IS(vt0.c0)))==(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c90)IS(vt0.c0)))==(vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)!=(vt0.c0)))||((NOT (vt0.c0)))) WHERE (((((vt0.c0)/(vt0.c0))) IS FALSE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c2 END)OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)<>(vt0.c0)))||((NOT (vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c2 END)OR((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)!=(vt0.c0)))||((NOT (vt0.c0)))) WHERE (((((vt0.c0)/(vt0.c0))) IS FALSE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c2 END)OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)<>(vt0.c0)))||((NOT (vt0.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c2 END)OR((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON ((((vt0.c0)!=(vt0.c0)))||((NOT (vt0.c0)))) WHERE (((((vt0.c0)/(vt0.c0))) IS FALSE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c2 END)OR((vt0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CASE vt0.c1  WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CASE vt0.c1  WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (vt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (vt0.c2 IN ()) END) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE CASE vt0.c1  WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END  WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (vt0.c2 IN ()) END);
SELECT * FROM vt0 CROSS JOIN t1 ON (((((((((NOT (vt0.c2)))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((x'')GLOB(vt0.c0)))))OR((vt0.c1 IN ()))))OR((((vt0.c1)) BETWEEN ((t1.c90)) AND ((vt0.c1))))) WHERE (((((((((CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN 'XK~2v''Q+|' THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c0, t1.c90, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, t1.c90)) AND (('?1~js', vt0.c2, vt0.c0))))))AND(((t1.c90) NOTNULL))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90))))) ORDER BY ((MIN(t1.c90, vt0.c2, vt0.c0, t1.c90))+(((((vt0.c1)OR(vt0.c1)))AND(t1.c90)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN 'XK~2v''Q+|' THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c0, t1.c90, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, t1.c90)) AND (('?1~js', vt0.c2, vt0.c0))))))AND(((t1.c90) NOTNULL))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((((((NOT (vt0.c2)))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((x'')GLOB(vt0.c0)))))OR((vt0.c1 IN ()))))OR((((vt0.c1)) BETWEEN ((t1.c90)) AND ((vt0.c1))))) ORDER BY ((MIN(t1.c90, vt0.c2, vt0.c0, t1.c90))+(((((vt0.c1)OR(vt0.c1)))AND(t1.c90)))) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((((((((NOT (vt0.c2)))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((x'')GLOB(vt0.c0)))))OR((vt0.c1 IN ()))))OR((((vt0.c1)) BETWEEN ((t1.c90)) AND ((vt0.c1))))) WHERE (((((((((CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN 'XK~2v''Q+|' THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c0, t1.c90, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, t1.c90)) AND (('?1~js', vt0.c2, vt0.c0))))))AND(((t1.c90) NOTNULL))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90))))) ORDER BY ((MIN(t1.c90, vt0.c2, vt0.c0, t1.c90))+(((((vt0.c1)OR(vt0.c1)))AND(t1.c90)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN 'XK~2v''Q+|' THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c0, t1.c90, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, t1.c90)) AND (('?1~js', vt0.c2, vt0.c0))))))AND(((t1.c90) NOTNULL))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((((((((NOT (vt0.c2)))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((x'')GLOB(vt0.c0)))))OR((vt0.c1 IN ()))))OR((((vt0.c1)) BETWEEN ((t1.c90)) AND ((vt0.c1))))) ORDER BY ((MIN(t1.c90, vt0.c2, vt0.c0, t1.c90))+(((((vt0.c1)OR(vt0.c1)))AND(t1.c90)))) DESC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((((((((NOT (vt0.c2)))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))))OR(((x'')GLOB(vt0.c0)))))OR((vt0.c1 IN ()))))OR((((vt0.c1)) BETWEEN ((t1.c90)) AND ((vt0.c1))))) WHERE (((((((((CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN 'XK~2v''Q+|' THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)AND(vt0.c2 COLLATE RTRIM)))AND((((vt0.c0, t1.c90, vt0.c2)) BETWEEN ((vt0.c2, vt0.c1, t1.c90)) AND (('?1~js', vt0.c2, vt0.c0))))))AND(((t1.c90) NOTNULL))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90))))) ORDER BY ((MIN(t1.c90, vt0.c2, vt0.c0, t1.c90))+(((((vt0.c1)OR(vt0.c1)))AND(t1.c90)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (vt0.c1) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c2)OR(vt0.c2)))OR(t1.c90)))AND('仱-z锗)~~')))OR(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN t1.c90 END THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN json(t1.c90) WHEN (((t1.c90, t1.c90, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, t1.c90, vt0.c2, vt0.c1, 0.023514815351151963)) AND ((t1.c90, vt0.c2, t1.c90, vt0.c0, t1.c90))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN -1546804495 ELSE t1.c90 COLLATE BINARY END, (- (CAST(t1.c90 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c2)OR(vt0.c2)))OR(t1.c90)))AND('仱-z锗)~~')))OR(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN t1.c90 END THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN json(t1.c90) WHEN (((t1.c90, t1.c90, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, t1.c90, vt0.c2, vt0.c1, 0.023514815351151963)) AND ((t1.c90, vt0.c2, t1.c90, vt0.c0, t1.c90))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN -1546804495 ELSE t1.c90 COLLATE BINARY END, (- (CAST(t1.c90 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c1) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c2)OR(vt0.c2)))OR(t1.c90)))AND('仱-z锗)~~')))OR(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN t1.c90 END THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN json(t1.c90) WHEN (((t1.c90, t1.c90, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, t1.c90, vt0.c2, vt0.c1, 0.023514815351151963)) AND ((t1.c90, vt0.c2, t1.c90, vt0.c0, t1.c90))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN -1546804495 ELSE t1.c90 COLLATE BINARY END, (- (CAST(t1.c90 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c2)OR(vt0.c2)))OR(t1.c90)))AND('仱-z锗)~~')))OR(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN t1.c90 END THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN json(t1.c90) WHEN (((t1.c90, t1.c90, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, t1.c90, vt0.c2, vt0.c1, 0.023514815351151963)) AND ((t1.c90, vt0.c2, t1.c90, vt0.c0, t1.c90))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN -1546804495 ELSE t1.c90 COLLATE BINARY END, (- (CAST(t1.c90 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (vt0.c1) ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((t1.c90) BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c2)OR(vt0.c2)))OR(t1.c90)))AND('仱-z锗)~~')))OR(vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN t1.c90 END THEN vt0.c0 WHEN CAST(vt0.c1 AS REAL) THEN json(t1.c90) WHEN (((t1.c90, t1.c90, vt0.c1, vt0.c2, vt0.c2)) BETWEEN ((vt0.c2, t1.c90, vt0.c2, vt0.c1, 0.023514815351151963)) AND ((t1.c90, vt0.c2, t1.c90, vt0.c0, t1.c90))) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) WHEN t1.c90 THEN -1546804495 ELSE t1.c90 COLLATE BINARY END, (- (CAST(t1.c90 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c2) IS FALSE)))<>((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) ISNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) IS FALSE)))<>((((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c2) IS FALSE)))<>((((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2) ISNULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) IS FALSE)))<>((((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE BINARY COLLATE RTRIM) ORDER BY (((((vt0.c2) IS FALSE)))<>((((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM t1, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(0x5d95e5b1)) AS TEXT)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(rtreenode(x'', vt0.c0))) ASC, ((NULL)>=(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(0x5d95e5b1)) AS TEXT)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(rtreenode(x'', vt0.c0))) ASC, ((NULL)>=(CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM t1, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(0x5d95e5b1)) AS TEXT)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(rtreenode(x'', vt0.c0))) ASC, ((NULL)>=(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(0x5d95e5b1)) AS TEXT)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(rtreenode(x'', vt0.c0))) ASC, ((NULL)>=(CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM t1, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(0x5d95e5b1)) AS TEXT)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))IS NOT(rtreenode(x'', vt0.c0))) ASC, ((NULL)>=(CAST(vt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM t1, vt0 WHERE (((x'') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((x'') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((x'') IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (-8.24201229E8) ORDER BY t1.c90 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-8.24201229E8) IS TRUE)  as count FROM t1 ORDER BY t1.c90 ASC);
SELECT COUNT(*) FROM t1 WHERE (-8.24201229E8) ORDER BY t1.c90 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-8.24201229E8) IS TRUE)  as count FROM t1 ORDER BY t1.c90 ASC);
SELECT COUNT(*) FROM t1 WHERE (-8.24201229E8) ORDER BY t1.c90 ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM t1, vt0 NOT INDEXED);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM t1, vt0 NOT INDEXED);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN (vt0.c0)) IN ())) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), x'c481') DESC, json_array_length(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), x'c481') DESC, json_array_length(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN (vt0.c0)) IN ())) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), x'c481') DESC, json_array_length(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), x'c481') DESC, json_array_length(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'' IN (vt0.c0)) IN ())) ORDER BY IFNULL(CAST(vt0.c2 AS NUMERIC), x'c481') DESC, json_array_length(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c90)+(t1.c90)) IN (MIN(t1.c90, t1.c90)))) ORDER BY CASE UNLIKELY(DISTINCT t1.c90)  WHEN (t1.c90 IN (t1.c90)) THEN json_valid(t1.c90) WHEN ((t1.c90) IS FALSE) THEN t1.c90 COLLATE NOCASE WHEN ((-7.07153876E8)<>(t1.c90)) THEN x'c207' ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90)+(t1.c90)) IN (MIN(t1.c90, t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CASE UNLIKELY(DISTINCT t1.c90)  WHEN (t1.c90 IN (t1.c90)) THEN json_valid(t1.c90) WHEN ((t1.c90) IS FALSE) THEN t1.c90 COLLATE NOCASE WHEN ((-7.07153876E8)!=(t1.c90)) THEN x'c207' ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END);
SELECT * FROM t1 WHERE ((((t1.c90)+(t1.c90)) IN (MIN(t1.c90, t1.c90)))) ORDER BY CASE UNLIKELY(DISTINCT t1.c90)  WHEN (t1.c90 IN (t1.c90)) THEN json_valid(t1.c90) WHEN ((t1.c90) IS FALSE) THEN t1.c90 COLLATE NOCASE WHEN ((-7.07153876E8)<>(t1.c90)) THEN x'c207' ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90)+(t1.c90)) IN (MIN(t1.c90, t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CASE UNLIKELY(DISTINCT t1.c90)  WHEN (t1.c90 IN (t1.c90)) THEN json_valid(t1.c90) WHEN ((t1.c90) IS FALSE) THEN t1.c90 COLLATE NOCASE WHEN ((-7.07153876E8)!=(t1.c90)) THEN x'c207' ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END);
SELECT * FROM t1 WHERE ((((t1.c90)+(t1.c90)) IN (MIN(t1.c90, t1.c90)))) ORDER BY CASE UNLIKELY(DISTINCT t1.c90)  WHEN (t1.c90 IN (t1.c90)) THEN json_valid(t1.c90) WHEN ((t1.c90) IS FALSE) THEN t1.c90 COLLATE NOCASE WHEN ((-7.07153876E8)<>(t1.c90)) THEN x'c207' ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END;
SELECT * FROM vt0, t1 WHERE (CASE WHEN (NOT (vt0.c2)) THEN CAST(vt0.c2 AS TEXT) ELSE NULL END) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c2)) THEN CAST(vt0.c2 AS TEXT) ELSE NULL END) IS TRUE)  as count FROM vt0, t1 ORDER BY (NULL IN ())  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CASE WHEN (NOT (vt0.c2)) THEN CAST(vt0.c2 AS TEXT) ELSE NULL END) ORDER BY (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c2)) THEN CAST(vt0.c2 AS TEXT) ELSE NULL END) IS TRUE)  as count FROM vt0, t1 ORDER BY (NULL IN ())  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (CASE WHEN (NOT (vt0.c2)) THEN CAST(vt0.c2 AS TEXT) ELSE NULL END) ORDER BY (NULL IN ())  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))>(CASE t1.c90  WHEN t1.c90 THEN 0.28358306717167914 END))) ORDER BY CASE CAST(t1.c90 AS REAL)  WHEN LIKELIHOOD(t1.c90, 0.5178911329105322) THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) ELSE ((t1.c90) IS FALSE) END, CAST((((t1.c90, -1.914889673E9, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c90 IN ()))>(CASE t1.c90  WHEN t1.c90 THEN 0.28358306717167914 END))) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c90 AS REAL)  WHEN LIKELIHOOD(t1.c90, 0.5178911329105322) THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) ELSE ((t1.c90) IS FALSE) END, CAST((((t1.c90, -1.914889673E9, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))>(CASE t1.c90  WHEN t1.c90 THEN 0.28358306717167914 END))) ORDER BY CASE CAST(t1.c90 AS REAL)  WHEN LIKELIHOOD(t1.c90, 0.5178911329105322) THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) ELSE ((t1.c90) IS FALSE) END, CAST((((t1.c90, -1.914889673E9, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c90 IN ()))>(CASE t1.c90  WHEN t1.c90 THEN 0.28358306717167914 END))) IS TRUE)  as count FROM t1 ORDER BY CASE CAST(t1.c90 AS REAL)  WHEN LIKELIHOOD(t1.c90, 0.5178911329105322) THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) ELSE ((t1.c90) IS FALSE) END, CAST((((t1.c90, -1.914889673E9, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))>(CASE t1.c90  WHEN t1.c90 THEN 0.28358306717167914 END))) ORDER BY CASE CAST(t1.c90 AS REAL)  WHEN LIKELIHOOD(t1.c90, 0.5178911329105322) THEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) ELSE ((t1.c90) IS FALSE) END, CAST((((t1.c90, -1.914889673E9, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) AS BLOB) ASC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON CASE WHEN vt0.c2 COLLATE BINARY THEN ((t1.c90)*(t1.c90)) END WHERE (((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2))) IN ())) ORDER BY (((~ (t1.c90)))&(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON CASE WHEN vt0.c2 COLLATE BINARY THEN ((t1.c90)*(t1.c90)) END ORDER BY (((~ (t1.c90)))&(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t1 ON CASE WHEN vt0.c2 COLLATE BINARY THEN ((t1.c90)*(t1.c90)) END WHERE (((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2))) IN ())) ORDER BY (((~ (t1.c90)))&(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2))) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON CASE WHEN vt0.c2 COLLATE BINARY THEN ((t1.c90)*(t1.c90)) END ORDER BY (((~ (t1.c90)))&(vt0.c0))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t1 ON CASE WHEN vt0.c2 COLLATE BINARY THEN ((t1.c90)*(t1.c90)) END WHERE (((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2))) IN ())) ORDER BY (((~ (t1.c90)))&(vt0.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE ((NOT ((x'6fff' IN ())))) ORDER BY (((t1.c90 IN ()))>=(((t1.c90) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((x'6fff' IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90 IN ()))>=(((t1.c90) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((NOT ((x'6fff' IN ())))) ORDER BY (((t1.c90 IN ()))>=(((t1.c90) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((x'6fff' IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90 IN ()))>=(((t1.c90) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((NOT ((x'6fff' IN ())))) ORDER BY (((t1.c90 IN ()))>=(((t1.c90) IS FALSE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))/(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB))/(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))/(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB))/(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB))/(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c90))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c90))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c1) AND (t1.c90)))));
SELECT ALL * FROM vt0 WHERE (LOWER((vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((vt0.c2 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER((vt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((vt0.c2 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER((vt0.c2 IN ())));
SELECT * FROM vt0, t1 WHERE (CASE (((0X466ab16d, vt0.c1, t1.c90)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c1, t1.c90)))  WHEN CAST(t1.c90 AS REAL) THEN CASE vt0.c2  WHEN t1.c90 THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((0x466ab16d, vt0.c1, t1.c90)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c1, t1.c90)))  WHEN CAST(t1.c90 AS REAL) THEN CASE vt0.c2  WHEN t1.c90 THEN vt0.c2 END END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE (((0X466ab16d, vt0.c1, t1.c90)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c1, t1.c90)))  WHEN CAST(t1.c90 AS REAL) THEN CASE vt0.c2  WHEN t1.c90 THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (((0x466ab16d, vt0.c1, t1.c90)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c1, t1.c90)))  WHEN CAST(t1.c90 AS REAL) THEN CASE vt0.c2  WHEN t1.c90 THEN vt0.c2 END END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE (((0X466ab16d, vt0.c1, t1.c90)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c2, vt0.c1, t1.c90)))  WHEN CAST(t1.c90 AS REAL) THEN CASE vt0.c2  WHEN t1.c90 THEN vt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT NULL), vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT NULL), vt0.c2)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT NULL), vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0) NOT NULL), vt0.c2)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0) NOT NULL), vt0.c2));
SELECT ALL * FROM t1 WHERE (((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)/(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)/(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)/(vt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)/(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT ((vt0.c0) NOTNULL), ((vt0.c0)/(vt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN '716646746' THEN vt0.c2 END THEN x'67bdee78' ELSE 0.2133926311426637 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN '716646746' THEN vt0.c2 END THEN x'67bdee78' ELSE 0.2133926311426637 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN '716646746' THEN vt0.c2 END THEN x'67bdee78' ELSE 0.2133926311426637 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN '716646746' THEN vt0.c2 END THEN x'67bdee78' ELSE 0.2133926311426637 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN '716646746' THEN vt0.c2 END THEN x'67bdee78' ELSE 0.2133926311426637 END);
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (('1003471678' IN ()))));
SELECT SUM(count) FROM (SELECT (((- (('1003471678' IN ())))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (('1003471678' IN ()))));
SELECT SUM(count) FROM (SELECT (((- (('1003471678' IN ())))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((- (('1003471678' IN ()))));
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY ((((UPPER(DISTINCT vt0.c0))AND(((0.4271427855296438)!=(vt0.c1)))))OR(((NULL)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((UPPER(DISTINCT vt0.c0))AND(((0.4271427855296438)<>(vt0.c1)))))OR(((NULL)||(vt0.c0)))));
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY ((((UPPER(DISTINCT vt0.c0))AND(((0.4271427855296438)!=(vt0.c1)))))OR(((NULL)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((UPPER(DISTINCT vt0.c0))AND(((0.4271427855296438)<>(vt0.c1)))))OR(((NULL)||(vt0.c0)))));
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY ((((UPPER(DISTINCT vt0.c0))AND(((0.4271427855296438)!=(vt0.c1)))))OR(((NULL)||(vt0.c0))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '' WHERE ((((t1.c90)) BETWEEN (((((t1.c90)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND (((~ (vt0.c0)))))) ORDER BY (- (UNLIKELY(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c90)) BETWEEN (((((t1.c90)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '' ORDER BY (- (UNLIKELY(vt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '' WHERE ((((t1.c90)) BETWEEN (((((t1.c90)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND (((~ (vt0.c0)))))) ORDER BY (- (UNLIKELY(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c90)) BETWEEN (((((t1.c90)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '' ORDER BY (- (UNLIKELY(vt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '' WHERE ((((t1.c90)) BETWEEN (((((t1.c90)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND (((~ (vt0.c0)))))) ORDER BY (- (UNLIKELY(vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c90)<>(0.5811018560337774)) IN ())) ORDER BY load_extension(0.1956608420190563, ((t1.c90) BETWEEN (t1.c90) AND (NULL))) ASC, ((t1.c90 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90)<>(0.5811018560337774)) IN ())) IS TRUE)  as count FROM t1 ORDER BY load_extension(0.1956608420190563, ((t1.c90) BETWEEN (t1.c90) AND (NULL))) ASC, ((t1.c90 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c90)<>(0.5811018560337774)) IN ())) ORDER BY load_extension(0.1956608420190563, ((t1.c90) BETWEEN (t1.c90) AND (NULL))) ASC, ((t1.c90 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90)<>(0.5811018560337774)) IN ())) IS TRUE)  as count FROM t1 ORDER BY load_extension(0.1956608420190563, ((t1.c90) BETWEEN (t1.c90) AND (NULL))) ASC, ((t1.c90 IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((((('	8yQ')==(t1.c90)))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))AND((((NULL)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))))AND((0.8583525696483284 IN ()))))OR(x''))) ORDER BY (+ (CAST(vt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((('	8yQ')==(t1.c90)))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))AND((((NULL)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))))AND((0.8583525696483284 IN ()))))OR(x''))) IS TRUE)  as count FROM vt0, t1 ORDER BY (+ (CAST(vt0.c1 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((((('	8yQ')==(t1.c90)))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))AND((((NULL)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))))AND((0.8583525696483284 IN ()))))OR(x''))) ORDER BY (+ (CAST(vt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((('	8yQ')==(t1.c90)))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))AND((((NULL)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))))AND((0.8583525696483284 IN ()))))OR(x''))) IS TRUE)  as count FROM vt0, t1 ORDER BY (+ (CAST(vt0.c1 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((((((('	8yQ')==(t1.c90)))AND(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)))AND((((NULL)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))))AND((0.8583525696483284 IN ()))))OR(x''))) ORDER BY (+ (CAST(vt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c2)OR(t1.c90)))AND(vt0.c1)) IN ((- (t1.c90)), vt0.c1))) ORDER BY (((t1.c90)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((('-1545624971') NOT BETWEEN (vt0.c1) AND (0.05496606170474527)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)OR(t1.c90)))AND(vt0.c1)) IN ((- (t1.c90)), vt0.c1))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((t1.c90)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((('-1545624971') NOT BETWEEN (vt0.c1) AND (0.05496606170474527))))));
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c2)OR(t1.c90)))AND(vt0.c1)) IN ((- (t1.c90)), vt0.c1))) ORDER BY (((t1.c90)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((('-1545624971') NOT BETWEEN (vt0.c1) AND (0.05496606170474527)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)OR(t1.c90)))AND(vt0.c1)) IN ((- (t1.c90)), vt0.c1))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((t1.c90)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((('-1545624971') NOT BETWEEN (vt0.c1) AND (0.05496606170474527))))));
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c2)OR(t1.c90)))AND(vt0.c1)) IN ((- (t1.c90)), vt0.c1))) ORDER BY (((t1.c90)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND (((('-1545624971') NOT BETWEEN (vt0.c1) AND (0.05496606170474527)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2) ISNULL) COLLATE RTRIM);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (UPPER(vt0.c2)) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (UPPER(vt0.c2)) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (UPPER(vt0.c2)) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN (UPPER(vt0.c2)) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN (UPPER(vt0.c2)) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((((((t1.c90)AND(x'')))AND(t1.c90)))AND(((((((((t1.c90)AND(t1.c90)))AND(t1.c90)))AND(0.28358306717167914)))OR(t1.c90)))))AND(((t1.c90)&(t1.c90)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c90)AND(x'')))AND(t1.c90)))AND(((((((((t1.c90)AND(t1.c90)))AND(t1.c90)))AND(0.28358306717167914)))OR(t1.c90)))))AND(((t1.c90)&(t1.c90)))) ASC);
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((((((t1.c90)AND(x'')))AND(t1.c90)))AND(((((((((t1.c90)AND(t1.c90)))AND(t1.c90)))AND(0.28358306717167914)))OR(t1.c90)))))AND(((t1.c90)&(t1.c90)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c90)AND(x'')))AND(t1.c90)))AND(((((((((t1.c90)AND(t1.c90)))AND(t1.c90)))AND(0.28358306717167914)))OR(t1.c90)))))AND(((t1.c90)&(t1.c90)))) ASC);
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((((((t1.c90)AND(x'')))AND(t1.c90)))AND(((((((((t1.c90)AND(t1.c90)))AND(t1.c90)))AND(0.28358306717167914)))OR(t1.c90)))))AND(((t1.c90)&(t1.c90)))) ASC;
SELECT * FROM t1 CROSS JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)>>(vt0.c1)) WHEN (- (vt0.c1)) THEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c2 END WHEN (+ (vt0.c2)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c2  WHEN t1.c90 THEN t1.c90 END END WHERE (vt0.c1) ORDER BY ((vt0.c1 COLLATE BINARY)==((vt0.c1 IN (0.5811018560337774, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)>>(vt0.c1)) WHEN (- (vt0.c1)) THEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c2 END WHEN (+ (vt0.c2)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c2  WHEN t1.c90 THEN t1.c90 END END ORDER BY ((vt0.c1 COLLATE BINARY)=((vt0.c1 IN (0.5811018560337774, vt0.c0))))  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)>>(vt0.c1)) WHEN (- (vt0.c1)) THEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c2 END WHEN (+ (vt0.c2)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c2  WHEN t1.c90 THEN t1.c90 END END WHERE (vt0.c1) ORDER BY ((vt0.c1 COLLATE BINARY)==((vt0.c1 IN (0.5811018560337774, vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)>>(vt0.c1)) WHEN (- (vt0.c1)) THEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c2 END WHEN (+ (vt0.c2)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c2  WHEN t1.c90 THEN t1.c90 END END ORDER BY ((vt0.c1 COLLATE BINARY)=((vt0.c1 IN (0.5811018560337774, vt0.c0))))  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)>>(vt0.c1)) WHEN (- (vt0.c1)) THEN CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c2 END WHEN (+ (vt0.c2)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c2  WHEN t1.c90 THEN t1.c90 END END WHERE (vt0.c1) ORDER BY ((vt0.c1 COLLATE BINARY)==((vt0.c1 IN (0.5811018560337774, vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(vt0.c2)))OR((- (x'9686')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(vt0.c2)))OR((- (x'9686'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(vt0.c2)))OR((- (x'9686')))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) IS TRUE))AND(vt0.c2)))OR((- (x'9686'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1) IS TRUE))AND(vt0.c2)))OR((- (x'9686')))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END AS REAL) WHERE (DATETIME(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)/(-895027437)))) ORDER BY ((IFNULL(vt0.c0, vt0.c2)) NOT BETWEEN (((vt0.c0) BETWEEN ('仱-z锗)~~') AND (t1.c90))) AND (CAST(0xffffffffb7c1de46 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)/(-895027437)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END AS REAL) ORDER BY ((IFNULL(vt0.c0, vt0.c2)) NOT BETWEEN (((vt0.c0) BETWEEN ('仱-z锗)~~') AND (t1.c90))) AND (CAST(0Xffffffffb7c1de46 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END AS REAL) WHERE (DATETIME(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)/(-895027437)))) ORDER BY ((IFNULL(vt0.c0, vt0.c2)) NOT BETWEEN (((vt0.c0) BETWEEN ('仱-z锗)~~') AND (t1.c90))) AND (CAST(0xffffffffb7c1de46 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)/(-895027437)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END AS REAL) ORDER BY ((IFNULL(vt0.c0, vt0.c2)) NOT BETWEEN (((vt0.c0) BETWEEN ('仱-z锗)~~') AND (t1.c90))) AND (CAST(0Xffffffffb7c1de46 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 END AS REAL) WHERE (DATETIME(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)/(-895027437)))) ORDER BY ((IFNULL(vt0.c0, vt0.c2)) NOT BETWEEN (((vt0.c0) BETWEEN ('仱-z锗)~~') AND (t1.c90))) AND (CAST(0xffffffffb7c1de46 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END))=((((((x'ff1d')AND(vt0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c1 END))==((((((x'ff1d')AND(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END))=((((((x'ff1d')AND(vt0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c0 THEN vt0.c1 END))==((((((x'ff1d')AND(vt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END))=((((((x'ff1d')AND(vt0.c1)))OR(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) IN ((~ (vt0.c2))))) ORDER BY ((0.6962568400341804)||(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) IN ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.6962568400341804)||(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) IN ((~ (vt0.c2))))) ORDER BY ((0.6962568400341804)||(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) IN ((~ (vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.6962568400341804)||(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) IN ((~ (vt0.c2))))) ORDER BY ((0.6962568400341804)||(vt0.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((vt0.c2 COLLATE NOCASE)OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))));
SELECT * FROM vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(0X1b96db63 AS REAL) AS TEXT)) ORDER BY ((x'6ce1')>(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0x1b96db63 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((x'6ce1')>(NULL COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(0X1b96db63 AS REAL) AS TEXT)) ORDER BY ((x'6ce1')>(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0x1b96db63 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((x'6ce1')>(NULL COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(CAST(0X1b96db63 AS REAL) AS TEXT)) ORDER BY ((x'6ce1')>(NULL COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)-(vt0.c2))))>=((vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c2))))>=((vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)-(vt0.c2))))>=((vt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)-(vt0.c2))))>=((vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)-(vt0.c2))))>=((vt0.c2))));
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)<=(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)<=(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((((vt0.c0)<=(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (x'11263115') AND (vt0.c2)))IS NOT(NULL))) ORDER BY ((vt0.c2 COLLATE NOCASE)!=(vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (x'11263115') AND (vt0.c2)))IS NOT(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE)<>(vt0.c2)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (x'11263115') AND (vt0.c2)))IS NOT(NULL))) ORDER BY ((vt0.c2 COLLATE NOCASE)!=(vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (x'11263115') AND (vt0.c2)))IS NOT(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE)<>(vt0.c2)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (x'11263115') AND (vt0.c2)))IS NOT(NULL))) ORDER BY ((vt0.c2 COLLATE NOCASE)!=(vt0.c2)) DESC;
SELECT * FROM vt0 WHERE ((- (((vt0.c1)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c1)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c1)==(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c1))))<((CASE WHEN vt0.c2 THEN '2092708198' END))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))<((CASE WHEN vt0.c2 THEN '2092708198' END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c1))))<((CASE WHEN vt0.c2 THEN '2092708198' END))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))<((CASE WHEN vt0.c2 THEN '2092708198' END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c1))))<((CASE WHEN vt0.c2 THEN '2092708198' END))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR(x'')))OR(((NULL)|(t1.c90))))) ORDER BY UNLIKELY(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR(x'')))OR(((NULL)|(t1.c90))))) IS TRUE)  as count FROM vt0, t1 ORDER BY UNLIKELY(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR(x'')))OR(((NULL)|(t1.c90))))) ORDER BY UNLIKELY(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR(x'')))OR(((NULL)|(t1.c90))))) IS TRUE)  as count FROM vt0, t1 ORDER BY UNLIKELY(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))OR(x'')))OR(((NULL)|(t1.c90))))) ORDER BY UNLIKELY(vt0.c1) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2)OR(vt0.c1))) IS TRUE)) ORDER BY (((0.30131705219139837)) NOT BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c2, vt0.c0, t1.c90))))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (((0.30131705219139837)) NOT BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c2, vt0.c0, t1.c90))))) AND ((vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2)OR(vt0.c1))) IS TRUE)) ORDER BY (((0.30131705219139837)) NOT BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c2, vt0.c0, t1.c90))))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (((0.30131705219139837)) NOT BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c2, vt0.c0, t1.c90))))) AND ((vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2)OR(vt0.c1))) IS TRUE)) ORDER BY (((0.30131705219139837)) NOT BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c2, vt0.c0, t1.c90))))) AND ((vt0.c0))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (t1.c90) AND (LIKELY(x''))) WHERE (CASE ((t1.c90)IS(t1.c90))  WHEN ((vt0.c0) ISNULL) THEN vt0.c2 ELSE (- (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c90)IS(t1.c90))  WHEN ((vt0.c0) ISNULL) THEN vt0.c2 ELSE (- (vt0.c2)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (t1.c90) AND (LIKELY(x''))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (t1.c90) AND (LIKELY(x''))) WHERE (CASE ((t1.c90)IS(t1.c90))  WHEN ((vt0.c0) ISNULL) THEN vt0.c2 ELSE (- (vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c90)IS(t1.c90))  WHEN ((vt0.c0) ISNULL) THEN vt0.c2 ELSE (- (vt0.c2)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (t1.c90) AND (LIKELY(x''))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (t1.c90) AND (LIKELY(x''))) WHERE (CASE ((t1.c90)IS(t1.c90))  WHEN ((vt0.c0) ISNULL) THEN vt0.c2 ELSE (- (vt0.c2)) END);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE) DESC  NULLS FIRST, (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((x'', t1.c90, vt0.c2)) AND ((vt0.c0, t1.c90, vt0.c0)))) IS TRUE), (~ (vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE) DESC  NULLS FIRST, (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((x'', t1.c90, vt0.c2)) AND ((vt0.c0, t1.c90, vt0.c0)))) IS TRUE), (~ (vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE) DESC  NULLS FIRST, (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((x'', t1.c90, vt0.c2)) AND ((vt0.c0, t1.c90, vt0.c0)))) IS TRUE), (~ (vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE) DESC  NULLS FIRST, (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((x'', t1.c90, vt0.c2)) AND ((vt0.c0, t1.c90, vt0.c0)))) IS TRUE), (~ (vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY (((vt0.c1 IN (vt0.c0))) IS TRUE) DESC  NULLS FIRST, (((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((x'', t1.c90, vt0.c2)) AND ((vt0.c0, t1.c90, vt0.c0)))) IS TRUE), (~ (vt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (0x57a333bf) AND ((t1.c90 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (0X57a333bf) AND ((t1.c90 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (0x57a333bf) AND ((t1.c90 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (0X57a333bf) AND ((t1.c90 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c90)) NOT BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (0x57a333bf) AND ((t1.c90 IN ()))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (RTRIM((NOT (t1.c90)))) ORDER BY ((UPPER(DISTINCT vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (t1.c90)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY ((UPPER(DISTINCT vt0.c1)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (RTRIM((NOT (t1.c90)))) ORDER BY ((UPPER(DISTINCT vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((NOT (t1.c90)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY ((UPPER(DISTINCT vt0.c1)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (RTRIM((NOT (t1.c90)))) ORDER BY ((UPPER(DISTINCT vt0.c1)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c2)<=(t1.c90)))AND(load_extension(t1.c90, x'')))) ORDER BY COALESCE(DISTINCT ((vt0.c2)<(vt0.c2)), t1.c90, ((3.20836872E8)<=(t1.c90)), CAST(t1.c90 AS REAL))  NULLS LAST, ((t1.c90) NOT BETWEEN ((((t1.c90, t1.c90, t1.c90))>=((vt0.c0, vt0.c1, 1.129453969E9)))) AND (CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<=(t1.c90)))AND(load_extension(t1.c90, x'')))) IS TRUE)  as count FROM t1, vt0 ORDER BY COALESCE(DISTINCT ((vt0.c2)<(vt0.c2)), t1.c90, ((3.20836872E8)<=(t1.c90)), CAST(t1.c90 AS REAL))  NULLS LAST, ((t1.c90) NOT BETWEEN ((((t1.c90, t1.c90, t1.c90))>=((vt0.c0, vt0.c1, 1.129453969E9)))) AND (CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((vt0.c2)<=(t1.c90)))AND(load_extension(t1.c90, x'')))) ORDER BY COALESCE(DISTINCT ((vt0.c2)<(vt0.c2)), t1.c90, ((3.20836872E8)<=(t1.c90)), CAST(t1.c90 AS REAL))  NULLS LAST, ((t1.c90) NOT BETWEEN ((((t1.c90, t1.c90, t1.c90))>=((vt0.c0, vt0.c1, 1.129453969E9)))) AND (CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<=(t1.c90)))AND(load_extension(t1.c90, x'')))) IS TRUE)  as count FROM t1, vt0 ORDER BY COALESCE(DISTINCT ((vt0.c2)<(vt0.c2)), t1.c90, ((3.20836872E8)<=(t1.c90)), CAST(t1.c90 AS REAL))  NULLS LAST, ((t1.c90) NOT BETWEEN ((((t1.c90, t1.c90, t1.c90))>=((vt0.c0, vt0.c1, 1.129453969E9)))) AND (CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT * FROM t1, vt0 WHERE ((- (t1.c90)) COLLATE NOCASE) ORDER BY CASE ((vt0.c2)IS(vt0.c0))  WHEN '777907728' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) WHEN (((('{<')OR(vt0.c2)))AND(0.8633303299506343)) THEN vt0.c1 COLLATE NOCASE WHEN ((t1.c90)+(vt0.c2)) THEN HEX(DISTINCT vt0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c90)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE ((vt0.c2)IS(vt0.c0))  WHEN '777907728' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) WHEN (((('{<')OR(vt0.c2)))AND(0.8633303299506343)) THEN vt0.c1 COLLATE NOCASE WHEN ((t1.c90)+(vt0.c2)) THEN HEX(DISTINCT vt0.c2) END  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((- (t1.c90)) COLLATE NOCASE) ORDER BY CASE ((vt0.c2)IS(vt0.c0))  WHEN '777907728' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) WHEN (((('{<')OR(vt0.c2)))AND(0.8633303299506343)) THEN vt0.c1 COLLATE NOCASE WHEN ((t1.c90)+(vt0.c2)) THEN HEX(DISTINCT vt0.c2) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c90)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE ((vt0.c2)IS(vt0.c0))  WHEN '777907728' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) WHEN (((('{<')OR(vt0.c2)))AND(0.8633303299506343)) THEN vt0.c1 COLLATE NOCASE WHEN ((t1.c90)+(vt0.c2)) THEN HEX(DISTINCT vt0.c2) END  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((- (t1.c90)) COLLATE NOCASE) ORDER BY CASE ((vt0.c2)IS(vt0.c0))  WHEN '777907728' THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) WHEN (((('{<')OR(vt0.c2)))AND(0.8633303299506343)) THEN vt0.c1 COLLATE NOCASE WHEN ((t1.c90)+(vt0.c2)) THEN HEX(DISTINCT vt0.c2) END  NULLS FIRST;
SELECT * FROM t1 FULL OUTER JOIN vt0 ON '-1144600150' WHERE (((((load_extension(vt0.c2))OR(((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND('-1069076285')))OR(t1.c90)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0)))))) ORDER BY (TRIM(DISTINCT t1.c90) IN (((((((((vt0.c1)AND(t1.c90)))AND(0.24141620183620316)))OR(vt0.c1)))OR(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt0.c2))OR(((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND('-1069076285')))OR(t1.c90)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '-1144600150' ORDER BY (TRIM(DISTINCT t1.c90) IN (((((((((vt0.c1)AND(t1.c90)))AND(0.24141620183620316)))OR(vt0.c1)))OR(vt0.c2))))  NULLS LAST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON '-1144600150' WHERE (((((load_extension(vt0.c2))OR(((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND('-1069076285')))OR(t1.c90)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0)))))) ORDER BY (TRIM(DISTINCT t1.c90) IN (((((((((vt0.c1)AND(t1.c90)))AND(0.24141620183620316)))OR(vt0.c1)))OR(vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((load_extension(vt0.c2))OR(((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))AND('-1069076285')))OR(t1.c90)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '-1144600150' ORDER BY (TRIM(DISTINCT t1.c90) IN (((((((((vt0.c1)AND(t1.c90)))AND(0.24141620183620316)))OR(vt0.c1)))OR(vt0.c2))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c90 AS TEXT)) ORDER BY ((CASE WHEN 0.38289941246514614 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c90 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN 0.38289941246514614 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END) IS FALSE));
SELECT ALL * FROM t1 WHERE (CAST(t1.c90 AS TEXT)) ORDER BY ((CASE WHEN 0.38289941246514614 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CAST(t1.c90 AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN 0.38289941246514614 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END) IS FALSE));
SELECT ALL * FROM t1 WHERE (CAST(t1.c90 AS TEXT)) ORDER BY ((CASE WHEN 0.38289941246514614 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END) IS FALSE);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<<((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<<((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<<((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))<<((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0)))<<((~ (vt0.c0)))));
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c90)<(t1.c90))) BETWEEN (((t1.c90) IS TRUE)) AND (t1.c90));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)<(t1.c90))) BETWEEN (((t1.c90) IS TRUE)) AND (t1.c90)));
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c90)<(t1.c90))) BETWEEN (((t1.c90) IS TRUE)) AND (t1.c90));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)<(t1.c90))) BETWEEN (((t1.c90) IS TRUE)) AND (t1.c90)));
SELECT * FROM t1 WHERE (NULL) ORDER BY ((((t1.c90)<(t1.c90))) BETWEEN (((t1.c90) IS TRUE)) AND (t1.c90));
SELECT ALL * FROM t1 WHERE (((((t1.c90)==(t1.c90)))GLOB(CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (t1.c90 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)=(t1.c90)))GLOB(CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY (t1.c90 IN ()) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c90)==(t1.c90)))GLOB(CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (t1.c90 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)=(t1.c90)))GLOB(CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY (t1.c90 IN ()) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c90)==(t1.c90)))GLOB(CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (t1.c90 IN ()) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c1))) AS NUMERIC)) ORDER BY ((((vt0.c2) BETWEEN (NULL) AND (x'37e0')))IS((((0.9728433755617946))>((vt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) BETWEEN (NULL) AND (x'37e0')))IS((((0.9728433755617946))>((vt0.c2))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c1))) AS NUMERIC)) ORDER BY ((((vt0.c2) BETWEEN (NULL) AND (x'37e0')))IS((((0.9728433755617946))>((vt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) BETWEEN (NULL) AND (x'37e0')))IS((((0.9728433755617946))>((vt0.c2))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c2, vt0.c1))) AS NUMERIC)) ORDER BY ((((vt0.c2) BETWEEN (NULL) AND (x'37e0')))IS((((0.9728433755617946))>((vt0.c2))))) DESC;
SELECT ALL * FROM vt0 WHERE (SUBSTR((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c2)) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SUBSTR((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c2)) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c2)) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (SUBSTR((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), vt0.c2)) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((t1.c90))) IN (((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)))) WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY t1.c90 ASC, CAST(vt0.c2 AS TEXT)  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c1, 0.45156595797564136) IN (((NULL) BETWEEN (t1.c90) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((t1.c90))) IN (((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)))) ORDER BY t1.c90 ASC, CAST(vt0.c2 AS TEXT)  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c1, 0.45156595797564136) IN (((NULL) BETWEEN (t1.c90) AND (vt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((t1.c90))) IN (((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)))) WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY t1.c90 ASC, CAST(vt0.c2 AS TEXT)  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c1, 0.45156595797564136) IN (((NULL) BETWEEN (t1.c90) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((t1.c90))) IN (((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)))) ORDER BY t1.c90 ASC, CAST(vt0.c2 AS TEXT)  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c1, 0.45156595797564136) IN (((NULL) BETWEEN (t1.c90) AND (vt0.c2)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c90)) BETWEEN ((vt0.c1)) AND ((t1.c90))) IN (((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)))) WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY t1.c90 ASC, CAST(vt0.c2 AS TEXT)  NULLS FIRST, (LIKELIHOOD(DISTINCT vt0.c1, 0.45156595797564136) IN (((NULL) BETWEEN (t1.c90) AND (vt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((((((vt0.c0)AND(t1.c90)))AND(t1.c90)))<<(((vt0.c1)=(NULL)))) WHERE (x'acff');
SELECT SUM(count) FROM (SELECT ((x'acff') IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((((((vt0.c0)AND(t1.c90)))AND(t1.c90)))<<(((vt0.c1)==(NULL)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((((((vt0.c0)AND(t1.c90)))AND(t1.c90)))<<(((vt0.c1)=(NULL)))) WHERE (x'acff');
SELECT SUM(count) FROM (SELECT ((x'acff') IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((((((vt0.c0)AND(t1.c90)))AND(t1.c90)))<<(((vt0.c1)==(NULL)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((((((vt0.c0)AND(t1.c90)))AND(t1.c90)))<<(((vt0.c1)=(NULL)))) WHERE (x'acff');
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)IS(t1.c90))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)IS(t1.c90))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS(t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)IS(t1.c90))) IS FALSE));
SELECT * FROM vt0 WHERE (UNLIKELY(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(vt0.c0) COLLATE BINARY);
SELECT * FROM vt0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c1)));
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c0)|(vt0.c0))))) ORDER BY (((NOT (vt0.c1)))*(vt0.c1)) DESC, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c90 END) NOT BETWEEN ((- (t1.c90))) AND (((x'') NOT BETWEEN (vt0.c0) AND (t1.c90)))), ((((CASE WHEN vt0.c1 THEN t1.c90 WHEN t1.c90 THEN '-1545624971' WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c2 ELSE 1.7976931348623157E308 END)))AND((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((NOT (vt0.c1)))*(vt0.c1)) DESC, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c90 END) NOT BETWEEN ((- (t1.c90))) AND (((x'') NOT BETWEEN (vt0.c0) AND (t1.c90)))), ((((CASE WHEN vt0.c1 THEN t1.c90 WHEN t1.c90 THEN '-1545624971' WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c2 ELSE 1.7976931348623157E308 END)))AND((~ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c0)|(vt0.c0))))) ORDER BY (((NOT (vt0.c1)))*(vt0.c1)) DESC, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c90 END) NOT BETWEEN ((- (t1.c90))) AND (((x'') NOT BETWEEN (vt0.c0) AND (t1.c90)))), ((((CASE WHEN vt0.c1 THEN t1.c90 WHEN t1.c90 THEN '-1545624971' WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c2 ELSE 1.7976931348623157E308 END)))AND((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((NOT (vt0.c1)))*(vt0.c1)) DESC, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c90 END) NOT BETWEEN ((- (t1.c90))) AND (((x'') NOT BETWEEN (vt0.c0) AND (t1.c90)))), ((((CASE WHEN vt0.c1 THEN t1.c90 WHEN t1.c90 THEN '-1545624971' WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c2 ELSE 1.7976931348623157E308 END)))AND((~ (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c0)|(vt0.c0))))) ORDER BY (((NOT (vt0.c1)))*(vt0.c1)) DESC, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE t1.c90 END) NOT BETWEEN ((- (t1.c90))) AND (((x'') NOT BETWEEN (vt0.c0) AND (t1.c90)))), ((((CASE WHEN vt0.c1 THEN t1.c90 WHEN t1.c90 THEN '-1545624971' WHEN vt0.c2 THEN vt0.c0 END)OR(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c2 ELSE 1.7976931348623157E308 END)))AND((~ (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((vt0.c2 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(((x'')<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((x'')<>(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((vt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((vt0.c2 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(((x'')<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((x'')<>(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((vt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((vt0.c2 COLLATE RTRIM) IS TRUE) WHERE (UNLIKELY(((x'')<>(vt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ABS(DISTINCT (vt0.c1 IN ())) WHERE (CAST('뺝	EPk' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('뺝	EPk' AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ABS(DISTINCT (vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ABS(DISTINCT (vt0.c1 IN ())) WHERE (CAST('뺝	EPk' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('뺝	EPk' AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ABS(DISTINCT (vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ABS(DISTINCT (vt0.c1 IN ())) WHERE (CAST('뺝	EPk' AS NUMERIC));
SELECT ALL * FROM t1, vt0 WHERE ((~ ((((t1.c90, vt0.c1, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, NULL)) AND ((t1.c90, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c90, vt0.c1, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, NULL)) AND ((t1.c90, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((~ ((((t1.c90, vt0.c1, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, NULL)) AND ((t1.c90, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t1.c90, vt0.c1, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, NULL)) AND ((t1.c90, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((~ ((((t1.c90, vt0.c1, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, NULL)) AND ((t1.c90, vt0.c0, vt0.c0))))));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)>(t1.c90)))/(TYPEOF(t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)>(t1.c90)))/(TYPEOF(t1.c90)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)>(t1.c90)))/(TYPEOF(t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)>(t1.c90)))/(TYPEOF(t1.c90)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)>(t1.c90)))/(TYPEOF(t1.c90))));
SELECT * FROM t1 WHERE (((~ (t1.c90)) IN ())) ORDER BY (((((((((t1.c90 IN ()))AND(CAST(t1.c90 AS TEXT))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90)))))OR((- (t1.c90)))))OR('361906698'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c90)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((((((t1.c90 IN ()))AND(CAST(t1.c90 AS TEXT))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90)))))OR((- (t1.c90)))))OR('361906698'))  NULLS LAST);
SELECT * FROM t1 WHERE (((~ (t1.c90)) IN ())) ORDER BY (((((((((t1.c90 IN ()))AND(CAST(t1.c90 AS TEXT))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90)))))OR((- (t1.c90)))))OR('361906698'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t1.c90)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((((((t1.c90 IN ()))AND(CAST(t1.c90 AS TEXT))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90)))))OR((- (t1.c90)))))OR('361906698'))  NULLS LAST);
SELECT * FROM t1 WHERE (((~ (t1.c90)) IN ())) ORDER BY (((((((((t1.c90 IN ()))AND(CAST(t1.c90 AS TEXT))))AND(((((t1.c90)AND(t1.c90)))OR(t1.c90)))))OR((- (t1.c90)))))OR('361906698'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE)) ORDER BY ((((vt0.c1)<>(vt0.c1)))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c1)!=(vt0.c1)))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE)) ORDER BY ((((vt0.c1)<>(vt0.c1)))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c1)!=(vt0.c1)))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER)) IS TRUE)) ORDER BY ((((vt0.c1)<>(vt0.c1)))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM vt0, t1 WHERE ((('1415292646') BETWEEN (((NULL) ISNULL)) AND (vt0.c2 COLLATE BINARY))) ORDER BY (((+ (t1.c90)))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1415292646') BETWEEN (((NULL) ISNULL)) AND (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((+ (t1.c90)))LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE ((('1415292646') BETWEEN (((NULL) ISNULL)) AND (vt0.c2 COLLATE BINARY))) ORDER BY (((+ (t1.c90)))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1415292646') BETWEEN (((NULL) ISNULL)) AND (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((+ (t1.c90)))LIKE((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE ((('1415292646') BETWEEN (((NULL) ISNULL)) AND (vt0.c2 COLLATE BINARY))) ORDER BY (((+ (t1.c90)))LIKE((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(1181397357)))AND(t1.c90)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(1181397357)))AND(t1.c90)) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(1181397357)))AND(t1.c90)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(1181397357)))AND(t1.c90)) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(1181397357)))AND(t1.c90)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (RTRIM((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (RTRIM((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (RTRIM((vt0.c0 IN ())));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))&(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))&(((t1.c90) BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))&(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))&(((t1.c90) BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))&(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c2)<=((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)<=((+ (vt0.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c2)<=((+ (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2)<=((+ (vt0.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c2)<=((+ (vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)<((- (vt0.c0))))) ORDER BY ((vt0.c2 COLLATE NOCASE) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY)<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)<((- (vt0.c0))))) ORDER BY ((vt0.c2 COLLATE NOCASE) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE BINARY)<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE NOCASE) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)<((- (vt0.c0))))) ORDER BY ((vt0.c2 COLLATE NOCASE) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c1)))))AND(((((vt0.c0)AND(t1.c90)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c1)))))AND(((((vt0.c0)AND(t1.c90)))OR(vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c1)))))AND(((((vt0.c0)AND(t1.c90)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c1)))))AND(((((vt0.c0)AND(t1.c90)))OR(vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))OR(((vt0.c0)|(vt0.c1)))))AND(((((vt0.c0)AND(t1.c90)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(TYPEOF(vt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(TYPEOF(vt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt0.c2) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(TYPEOF(vt0.c2) AS INTEGER));
SELECT * FROM vt0 WHERE (((('놻') NOTNULL) IN (LIKELY(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((('놻') NOTNULL) IN (LIKELY(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('놻') NOTNULL) IN (LIKELY(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((('놻') NOTNULL) IN (LIKELY(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('놻') NOTNULL) IN (LIKELY(vt0.c2))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (CASE vt0.c0  WHEN t1.c90 THEN t1.c90 END))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN t1.c90 THEN t1.c90 END))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (CASE vt0.c0  WHEN t1.c90 THEN t1.c90 END))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN t1.c90 THEN t1.c90 END))) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (CASE vt0.c0  WHEN t1.c90 THEN t1.c90 END))) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((((vt0.c1)AND(x'')))OR(vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(x'')))OR(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((((vt0.c1)AND(x'')))OR(vt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(x'')))OR(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((((vt0.c1)AND(x'')))OR(vt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c0)))) NOT BETWEEN ((('')AND(vt0.c2))) AND ((((t1.c90))>=((vt0.c1)))))) ORDER BY ((x'')IS NOT(((t1.c90)GLOB(t1.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c0)))) NOT BETWEEN ((('')AND(vt0.c2))) AND ((((t1.c90))>=((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((x'')IS NOT(((t1.c90)GLOB(t1.c90)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c0)))) NOT BETWEEN ((('')AND(vt0.c2))) AND ((((t1.c90))>=((vt0.c1)))))) ORDER BY ((x'')IS NOT(((t1.c90)GLOB(t1.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c0)))) NOT BETWEEN ((('')AND(vt0.c2))) AND ((((t1.c90))>=((vt0.c1)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((x'')IS NOT(((t1.c90)GLOB(t1.c90)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c0)))) NOT BETWEEN ((('')AND(vt0.c2))) AND ((((t1.c90))>=((vt0.c1)))))) ORDER BY ((x'')IS NOT(((t1.c90)GLOB(t1.c90)))) DESC;
SELECT ALL * FROM t1, vt0 WHERE (((((json_insert(vt0.c2, t1.c90, x'80a6'))OR((((x'')) BETWEEN ((NULL)) AND ((vt0.c2))))))OR(UPPER(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_insert(vt0.c2, t1.c90, x'80a6'))OR((((x'')) BETWEEN ((NULL)) AND ((vt0.c2))))))OR(UPPER(DISTINCT x'')))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((json_insert(vt0.c2, t1.c90, x'80a6'))OR((((x'')) BETWEEN ((NULL)) AND ((vt0.c2))))))OR(UPPER(DISTINCT x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_insert(vt0.c2, t1.c90, x'80a6'))OR((((x'')) BETWEEN ((NULL)) AND ((vt0.c2))))))OR(UPPER(DISTINCT x'')))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ('x3SnM'))) ORDER BY CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('x3SnM'))) IS TRUE)  as count FROM t1 ORDER BY CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ('x3SnM'))) ORDER BY CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ('x3SnM'))) IS TRUE)  as count FROM t1 ORDER BY CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ('x3SnM'))) ORDER BY CAST(TOTAL_CHANGES() AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c2 THEN NULL END, ((vt0.c2)!=(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN vt0.c2 THEN NULL END, ((vt0.c2)!=(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c2 THEN NULL END, ((vt0.c2)!=(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN vt0.c2 THEN NULL END, ((vt0.c2)!=(vt0.c2)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c2 THEN NULL END, ((vt0.c2)!=(vt0.c2))));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c90 AS REAL) AS BLOB)) ORDER BY ((t1.c90) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c90 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) IS FALSE));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c90 AS REAL) AS BLOB)) ORDER BY ((t1.c90) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c90 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) IS FALSE));
SELECT * FROM t1 WHERE (CAST(CAST(t1.c90 AS REAL) AS BLOB)) ORDER BY ((t1.c90) IS FALSE);
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(DISTINCT t1.c90));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t1.c90)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(DISTINCT t1.c90));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT t1.c90)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(DISTINCT t1.c90));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (x'59b5'))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c1 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(x'')))OR(vt0.c1))  NULLS FIRST, (((NOT (vt0.c0)))*((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (x'59b5'))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c1 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(x'')))OR(vt0.c1))  NULLS FIRST, (((NOT (vt0.c0)))*((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (x'59b5'))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c1 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(x'')))OR(vt0.c1))  NULLS FIRST, (((NOT (vt0.c0)))*((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (x'59b5'))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c1 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(x'')))OR(vt0.c1))  NULLS FIRST, (((NOT (vt0.c0)))*((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c2) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2))) AND (x'59b5'))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c1 IN ()))))OR(vt0.c2 COLLATE BINARY)))AND(x'')))OR(vt0.c1))  NULLS FIRST, (((NOT (vt0.c0)))*((vt0.c1 IN ())));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c1)LIKE(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c1)LIKE(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c1)LIKE(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c2)GLOB(NULL)) WHERE ((('0.5103053289422876') NOT BETWEEN ((((0x4ff4b19b))>=((t1.c90)))) AND (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('0.5103053289422876') NOT BETWEEN ((((0x4ff4b19b))>=((t1.c90)))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c2)GLOB(NULL)));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c2)GLOB(NULL)) WHERE ((('0.5103053289422876') NOT BETWEEN ((((0x4ff4b19b))>=((t1.c90)))) AND (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('0.5103053289422876') NOT BETWEEN ((((0x4ff4b19b))>=((t1.c90)))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c2)GLOB(NULL)));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((vt0.c2)GLOB(NULL)) WHERE ((('0.5103053289422876') NOT BETWEEN ((((0x4ff4b19b))>=((t1.c90)))) AND (((NULL) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) THEN (((NULL, t1.c90, t1.c90))<>((t1.c90, t1.c90, '135435543'))) ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) THEN (((NULL, t1.c90, t1.c90))!=((t1.c90, t1.c90, '135435543'))) ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) THEN (((NULL, t1.c90, t1.c90))<>((t1.c90, t1.c90, '135435543'))) ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) THEN (((NULL, t1.c90, t1.c90))!=((t1.c90, t1.c90, '135435543'))) ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) THEN (((NULL, t1.c90, t1.c90))<>((t1.c90, t1.c90, '135435543'))) ELSE ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) END);
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c1)) COLLATE BINARY) ORDER BY vt0.c1, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1, x'' ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c1)) COLLATE BINARY) ORDER BY vt0.c1, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1, x'' ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)-(vt0.c1)) COLLATE BINARY) ORDER BY vt0.c1, x'' ASC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- ((vt0.c0 IN (vt0.c2))))) ORDER BY -840066673, HEX(NULL) DESC;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY -840066673, HEX(NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- ((vt0.c0 IN (vt0.c2))))) ORDER BY -840066673, HEX(NULL) DESC;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY -840066673, HEX(NULL) DESC);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c90 AS NUMERIC))==((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c90 AS NUMERIC))==((+ (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c90 AS NUMERIC))==((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c90 AS NUMERIC))==((+ (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CAST(t1.c90 AS NUMERIC))==((+ (t1.c90)))));
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN -1.069076285E9 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c90 THEN -1.069076285E9 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN -1.069076285E9 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c90 THEN -1.069076285E9 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN -1.069076285E9 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY CAST(((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) AS BLOB);
SELECT COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(UNLIKELY(t1.c90))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(UNLIKELY(t1.c90))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(UNLIKELY(t1.c90))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE RTRIM)<=(UNLIKELY(t1.c90))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM)<=(UNLIKELY(t1.c90))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE ((((t1.c90 IN (t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))) AND (((t1.c90)>=(t1.c90))))) ORDER BY ((0.7513658469163744)>=(((t1.c90) IS FALSE))), json_array(CAST(t1.c90 AS NUMERIC), ((t1.c90)/(t1.c90)), t1.c90 COLLATE RTRIM, t1.c90)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN (t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))) AND (((t1.c90)>=(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((0.7513658469163744)>=(((t1.c90) IS FALSE))), json_array(CAST(t1.c90 AS NUMERIC), ((t1.c90)/(t1.c90)), t1.c90 COLLATE RTRIM, t1.c90)  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c90 IN (t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))) AND (((t1.c90)>=(t1.c90))))) ORDER BY ((0.7513658469163744)>=(((t1.c90) IS FALSE))), json_array(CAST(t1.c90 AS NUMERIC), ((t1.c90)/(t1.c90)), t1.c90 COLLATE RTRIM, t1.c90)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN (t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))) AND (((t1.c90)>=(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((0.7513658469163744)>=(((t1.c90) IS FALSE))), json_array(CAST(t1.c90 AS NUMERIC), ((t1.c90)/(t1.c90)), t1.c90 COLLATE RTRIM, t1.c90)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c90, t1.c90, 0.673717388666378)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) IN ())) ORDER BY (((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), t1.c90, NULL)) AND (('462871395', (((t1.c90, x'2340', t1.c90))>=((t1.c90, t1.c90, t1.c90))), LIKELY(t1.c90)))) ASC, ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))) NOT NULL), (NULL IN (((t1.c90)>=(t1.c90)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c90, t1.c90, 0.673717388666378)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), t1.c90, NULL)) AND (('462871395', (((t1.c90, x'2340', t1.c90))>=((t1.c90, t1.c90, t1.c90))), LIKELY(t1.c90)))) ASC, ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))) NOT NULL), (NULL IN (((t1.c90)>=(t1.c90)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c90, t1.c90, 0.673717388666378)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) IN ())) ORDER BY (((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), t1.c90, NULL)) AND (('462871395', (((t1.c90, x'2340', t1.c90))>=((t1.c90, t1.c90, t1.c90))), LIKELY(t1.c90)))) ASC, ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))) NOT NULL), (NULL IN (((t1.c90)>=(t1.c90)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c90, t1.c90, 0.673717388666378)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), t1.c90, NULL)) AND (('462871395', (((t1.c90, x'2340', t1.c90))>=((t1.c90, t1.c90, t1.c90))), LIKELY(t1.c90)))) ASC, ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))) NOT NULL), (NULL IN (((t1.c90)>=(t1.c90)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c90, t1.c90, 0.673717388666378)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))) IN ())) ORDER BY (((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), t1.c90, NULL)) AND (('462871395', (((t1.c90, x'2340', t1.c90))>=((t1.c90, t1.c90, t1.c90))), LIKELY(t1.c90)))) ASC, ((((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))) NOT NULL), (NULL IN (((t1.c90)>=(t1.c90)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90))))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (x'') ORDER BY CAST(((t1.c90)>(vt0.c0)) AS INTEGER) DESC, ((CAST(vt0.c0 AS INTEGER))<<((+ (vt0.c0))))  NULLS FIRST, (- (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c90)>(vt0.c0)) AS INTEGER) DESC, ((CAST(vt0.c0 AS INTEGER))<<((+ (vt0.c0))))  NULLS FIRST, (- (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (x'') ORDER BY CAST(((t1.c90)>(vt0.c0)) AS INTEGER) DESC, ((CAST(vt0.c0 AS INTEGER))<<((+ (vt0.c0))))  NULLS FIRST, (- (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c90)>(vt0.c0)) AS INTEGER) DESC, ((CAST(vt0.c0 AS INTEGER))<<((+ (vt0.c0))))  NULLS FIRST, (- (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (x'') ORDER BY CAST(((t1.c90)>(vt0.c0)) AS INTEGER) DESC, ((CAST(vt0.c0 AS INTEGER))<<((+ (vt0.c0))))  NULLS FIRST, (- (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(HEX(DISTINCT t1.c90) AS INTEGER)) ORDER BY (((t1.c90)) BETWEEN ((t1.c90 COLLATE RTRIM)) AND ((t1.c90))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t1.c90) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90)) BETWEEN ((t1.c90 COLLATE RTRIM)) AND ((t1.c90))) ASC);
SELECT ALL * FROM t1 WHERE (CAST(HEX(DISTINCT t1.c90) AS INTEGER)) ORDER BY (((t1.c90)) BETWEEN ((t1.c90 COLLATE RTRIM)) AND ((t1.c90))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t1.c90) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90)) BETWEEN ((t1.c90 COLLATE RTRIM)) AND ((t1.c90))) ASC);
SELECT ALL * FROM t1 WHERE (CAST(HEX(DISTINCT t1.c90) AS INTEGER)) ORDER BY (((t1.c90)) BETWEEN ((t1.c90 COLLATE RTRIM)) AND ((t1.c90))) ASC;
SELECT * FROM vt0, t1 WHERE ('-2074276338');
SELECT SUM(count) FROM (SELECT (('-2074276338') IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ('-2074276338');
SELECT SUM(count) FROM (SELECT (('-2074276338') IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ('-2074276338');
SELECT * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) NOT BETWEEN ('凘y') AND (vt0.c0)), vt0.c2)))) ORDER BY ('93741957' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) NOT BETWEEN ('凘y') AND (vt0.c0)), vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ('93741957' IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) NOT BETWEEN ('凘y') AND (vt0.c0)), vt0.c2)))) ORDER BY ('93741957' IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) NOT BETWEEN ('凘y') AND (vt0.c0)), vt0.c2)))) IS TRUE)  as count FROM vt0 ORDER BY ('93741957' IN ()));
SELECT * FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CAST(vt0.c2 AS TEXT), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((vt0.c1) NOT BETWEEN ('凘y') AND (vt0.c0)), vt0.c2)))) ORDER BY ('93741957' IN ());
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, vt0.c1, ((0.7900080368335015)&('300250655')))) AND ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)), (+ (vt0.c1)), CASE WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((((t1.c90)>>(t1.c90)))AND(NULL)))AND(vt0.c0)), (((((- (t1.c90)))AND(CASE vt0.c1  WHEN t1.c90 THEN vt0.c2 END)))OR(((vt0.c1)>=(vt0.c1)))) ASC  NULLS LAST, ((t1.c90 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((t1.c90)<>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, vt0.c1, ((0.7900080368335015)&('300250655')))) AND ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)), (+ (vt0.c1)), CASE WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((t1.c90)>>(t1.c90)))AND(NULL)))AND(vt0.c0)), (((((- (t1.c90)))AND(CASE vt0.c1  WHEN t1.c90 THEN vt0.c2 END)))OR(((vt0.c1)>=(vt0.c1)))) ASC  NULLS LAST, ((t1.c90 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((t1.c90)!=(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, vt0.c1, ((0.7900080368335015)&('300250655')))) AND ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)), (+ (vt0.c1)), CASE WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((((t1.c90)>>(t1.c90)))AND(NULL)))AND(vt0.c0)), (((((- (t1.c90)))AND(CASE vt0.c1  WHEN t1.c90 THEN vt0.c2 END)))OR(((vt0.c1)>=(vt0.c1)))) ASC  NULLS LAST, ((t1.c90 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((t1.c90)<>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, vt0.c1, ((0.7900080368335015)&('300250655')))) AND ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)), (+ (vt0.c1)), CASE WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((t1.c90)>>(t1.c90)))AND(NULL)))AND(vt0.c0)), (((((- (t1.c90)))AND(CASE vt0.c1  WHEN t1.c90 THEN vt0.c2 END)))OR(((vt0.c1)>=(vt0.c1)))) ASC  NULLS LAST, ((t1.c90 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((t1.c90)!=(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1 COLLATE NOCASE, vt0.c1, ((0.7900080368335015)&('300250655')))) AND ((((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)), (+ (vt0.c1)), CASE WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((((t1.c90)>>(t1.c90)))AND(NULL)))AND(vt0.c0)), (((((- (t1.c90)))AND(CASE vt0.c1  WHEN t1.c90 THEN vt0.c2 END)))OR(((vt0.c1)>=(vt0.c1)))) ASC  NULLS LAST, ((t1.c90 COLLATE RTRIM) NOT BETWEEN (HEX(DISTINCT vt0.c0)) AND (((t1.c90)<>(vt0.c1))));
SELECT * FROM vt0, t1 WHERE (((((NULL)>>(vt0.c0)))OR((+ (vt0.c1))))) ORDER BY CASE ((vt0.c0)>>(vt0.c2))  WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) ELSE ((((t1.c90)AND(t1.c90)))AND(NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(vt0.c0)))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c0)>>(vt0.c2))  WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) ELSE ((((t1.c90)AND(t1.c90)))AND(NULL)) END ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((NULL)>>(vt0.c0)))OR((+ (vt0.c1))))) ORDER BY CASE ((vt0.c0)>>(vt0.c2))  WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) ELSE ((((t1.c90)AND(t1.c90)))AND(NULL)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(vt0.c0)))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c0)>>(vt0.c2))  WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) ELSE ((((t1.c90)AND(t1.c90)))AND(NULL)) END ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((NULL)>>(vt0.c0)))OR((+ (vt0.c1))))) ORDER BY CASE ((vt0.c0)>>(vt0.c2))  WHEN vt0.c2 COLLATE NOCASE THEN (- (vt0.c1)) ELSE ((((t1.c90)AND(t1.c90)))AND(NULL)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((NULL)%(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((NULL)%(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((NULL)%(CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN 0x185ae8c THEN NULL END))) ORDER BY ((((+ (vt0.c2)), (((vt0.c1))>((vt0.c2))), ((vt0.c0)IS(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), '-1450427167'))>=(((- (vt0.c2)), 'Q쭾3I', (0.839362861165087 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '~4' WHEN vt0.c2 THEN 0.22356521244677452 END, CAST(vt0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c1  WHEN 0X185ae8c THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c2)), (((vt0.c1))>((vt0.c2))), ((vt0.c0)IS(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), '-1450427167'))>=(((- (vt0.c2)), 'Q쭾3I', (0.839362861165087 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '~4' WHEN vt0.c2 THEN 0.22356521244677452 END, CAST(vt0.c1 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN 0x185ae8c THEN NULL END))) ORDER BY ((((+ (vt0.c2)), (((vt0.c1))>((vt0.c2))), ((vt0.c0)IS(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), '-1450427167'))>=(((- (vt0.c2)), 'Q쭾3I', (0.839362861165087 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '~4' WHEN vt0.c2 THEN 0.22356521244677452 END, CAST(vt0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt0.c1  WHEN 0X185ae8c THEN NULL END))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c2)), (((vt0.c1))>((vt0.c2))), ((vt0.c0)IS(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), '-1450427167'))>=(((- (vt0.c2)), 'Q쭾3I', (0.839362861165087 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '~4' WHEN vt0.c2 THEN 0.22356521244677452 END, CAST(vt0.c1 AS NUMERIC))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN 0x185ae8c THEN NULL END))) ORDER BY ((((+ (vt0.c2)), (((vt0.c1))>((vt0.c2))), ((vt0.c0)IS(vt0.c2)), ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)), '-1450427167'))>=(((- (vt0.c2)), 'Q쭾3I', (0.839362861165087 IN ()), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN '~4' WHEN vt0.c2 THEN 0.22356521244677452 END, CAST(vt0.c1 AS NUMERIC))))  NULLS FIRST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c1)))) NOT BETWEEN (((((-8.95027437E8)OR(t1.c90)))AND(t1.c90))) AND ((NOT (vt0.c0)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((x'1228') NOTNULL), vt0.c2 COLLATE BINARY, CASE WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((x'1228') NOTNULL), vt0.c2 COLLATE BINARY, CASE WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c1)))) NOT BETWEEN (((((-8.95027437E8)OR(t1.c90)))AND(t1.c90))) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c1)))) NOT BETWEEN (((((-8.95027437E8)OR(t1.c90)))AND(t1.c90))) AND ((NOT (vt0.c0)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((x'1228') NOTNULL), vt0.c2 COLLATE BINARY, CASE WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((x'1228') NOTNULL), vt0.c2 COLLATE BINARY, CASE WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c1)))) NOT BETWEEN (((((-8.95027437E8)OR(t1.c90)))AND(t1.c90))) AND ((NOT (vt0.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c1)))) NOT BETWEEN (((((-8.95027437E8)OR(t1.c90)))AND(t1.c90))) AND ((NOT (vt0.c0)))) WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((x'1228') NOTNULL), vt0.c2 COLLATE BINARY, CASE WHEN t1.c90 THEN t1.c90 ELSE vt0.c2 END));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((t1.c90)AND(vt0.c1)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((x'd4c0'))), (+ (t1.c90)), CASE NULL  WHEN t1.c90 THEN vt0.c0 END, ((vt0.c0)<<(x'd6e1446b')), ((((vt0.c2)OR(vt0.c2)))AND(t1.c90)), ((t1.c90) BETWEEN ('') AND (vt0.c2))))<=((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c2 END, ((t1.c90) ISNULL), ((vt0.c1)GLOB(vt0.c2)), CAST(vt0.c1 AS REAL), ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)), '\g', '')))) ORDER BY (+ (HEX(DISTINCT t1.c90))) ASC, (((((0Xffffffffd5a0c714, vt0.c1, t1.c90)) NOT BETWEEN ((vt0.c0, vt0.c1, t1.c90)) AND ((vt0.c1, t1.c90, vt0.c0)))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c90)AND(vt0.c1)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((x'd4c0'))), (+ (t1.c90)), CASE NULL  WHEN t1.c90 THEN vt0.c0 END, ((vt0.c0)<<(x'd6e1446b')), ((((vt0.c2)OR(vt0.c2)))AND(t1.c90)), ((t1.c90) BETWEEN ('') AND (vt0.c2))))<=((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c2 END, ((t1.c90) ISNULL), ((vt0.c1)GLOB(vt0.c2)), CAST(vt0.c1 AS REAL), ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)), '\g', '')))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY (+ (HEX(DISTINCT t1.c90))) ASC, (((((0xffffffffd5a0c714, vt0.c1, t1.c90)) NOT BETWEEN ((vt0.c0, vt0.c1, t1.c90)) AND ((vt0.c1, t1.c90, vt0.c0)))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND ((+ (vt0.c1)))) ASC);
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((t1.c90)AND(vt0.c1)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((x'd4c0'))), (+ (t1.c90)), CASE NULL  WHEN t1.c90 THEN vt0.c0 END, ((vt0.c0)<<(x'd6e1446b')), ((((vt0.c2)OR(vt0.c2)))AND(t1.c90)), ((t1.c90) BETWEEN ('') AND (vt0.c2))))<=((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c2 END, ((t1.c90) ISNULL), ((vt0.c1)GLOB(vt0.c2)), CAST(vt0.c1 AS REAL), ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)), '\g', '')))) ORDER BY (+ (HEX(DISTINCT t1.c90))) ASC, (((((0Xffffffffd5a0c714, vt0.c1, t1.c90)) NOT BETWEEN ((vt0.c0, vt0.c1, t1.c90)) AND ((vt0.c1, t1.c90, vt0.c0)))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND ((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c90)AND(vt0.c1)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((x'd4c0'))), (+ (t1.c90)), CASE NULL  WHEN t1.c90 THEN vt0.c0 END, ((vt0.c0)<<(x'd6e1446b')), ((((vt0.c2)OR(vt0.c2)))AND(t1.c90)), ((t1.c90) BETWEEN ('') AND (vt0.c2))))<=((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c2 END, ((t1.c90) ISNULL), ((vt0.c1)GLOB(vt0.c2)), CAST(vt0.c1 AS REAL), ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)), '\g', '')))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY (+ (HEX(DISTINCT t1.c90))) ASC, (((((0xffffffffd5a0c714, vt0.c1, t1.c90)) NOT BETWEEN ((vt0.c0, vt0.c1, t1.c90)) AND ((vt0.c1, t1.c90, vt0.c0)))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND ((+ (vt0.c1)))) ASC);
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE ((((((t1.c90)AND(vt0.c1)), (((t1.c90)) BETWEEN ((t1.c90)) AND ((x'd4c0'))), (+ (t1.c90)), CASE NULL  WHEN t1.c90 THEN vt0.c0 END, ((vt0.c0)<<(x'd6e1446b')), ((((vt0.c2)OR(vt0.c2)))AND(t1.c90)), ((t1.c90) BETWEEN ('') AND (vt0.c2))))<=((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c2 END, ((t1.c90) ISNULL), ((vt0.c1)GLOB(vt0.c2)), CAST(vt0.c1 AS REAL), ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)), '\g', '')))) ORDER BY (+ (HEX(DISTINCT t1.c90))) ASC, (((((0Xffffffffd5a0c714, vt0.c1, t1.c90)) NOT BETWEEN ((vt0.c0, vt0.c1, t1.c90)) AND ((vt0.c1, t1.c90, vt0.c0)))) NOT BETWEEN (((vt0.c1)<(vt0.c2))) AND ((+ (vt0.c1)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((NOT ((((t1.c90))=((vt0.c1)))))) ORDER BY (NOT (((vt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c90))=((vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (NOT (((vt0.c2)&(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE ((NOT ((((t1.c90))=((vt0.c1)))))) ORDER BY (NOT (((vt0.c2)&(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c90))=((vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (NOT (((vt0.c2)&(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE ((NOT ((((t1.c90))=((vt0.c1)))))) ORDER BY (NOT (((vt0.c2)&(vt0.c1))));
SELECT * FROM t1 WHERE (0.819419118650583);
SELECT SUM(count) FROM (SELECT ALL ((0.819419118650583) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.819419118650583);
SELECT SUM(count) FROM (SELECT ALL ((0.819419118650583) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.819419118650583);
SELECT * FROM t1, vt0 WHERE ('d뀬');
SELECT SUM(count) FROM (SELECT (('d뀬') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ('d뀬');
SELECT SUM(count) FROM (SELECT (('d뀬') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ('d뀬');
SELECT COUNT(*) FROM t1 WHERE (t1.c90 COLLATE NOCASE) ORDER BY ((((t1.c90)||(t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90))>((t1.c90, t1.c90, t1.c90)))) AND ((((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90 COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)||(t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90))>((t1.c90, t1.c90, t1.c90)))) AND ((((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c90 COLLATE NOCASE) ORDER BY ((((t1.c90)||(t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90))>((t1.c90, t1.c90, t1.c90)))) AND ((((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90 COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)||(t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90))>((t1.c90, t1.c90, t1.c90)))) AND ((((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c90 COLLATE NOCASE) ORDER BY ((((t1.c90)||(t1.c90))) BETWEEN ((((t1.c90, t1.c90, t1.c90))>((t1.c90, t1.c90, t1.c90)))) AND ((((t1.c90, t1.c90, t1.c90)) NOT BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))))  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE ((- ((~ (t1.c90))))) ORDER BY ((((vt0.c2 IN ())))<((((((((((((((((((0.6567864376201061)AND(vt0.c0)))OR(vt0.c2)))OR(0.19975908168881573)))OR(vt0.c2)))OR('4,')))AND(vt0.c0)))AND('72633710')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (t1.c90))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2 IN ())))<((((((((((((((((((0.6567864376201061)AND(vt0.c0)))OR(vt0.c2)))OR(0.19975908168881573)))OR(vt0.c2)))OR('4,')))AND(vt0.c0)))AND('72633710')))OR(vt0.c0))))));
SELECT ALL * FROM vt0, t1 WHERE ((- ((~ (t1.c90))))) ORDER BY ((((vt0.c2 IN ())))<((((((((((((((((((0.6567864376201061)AND(vt0.c0)))OR(vt0.c2)))OR(0.19975908168881573)))OR(vt0.c2)))OR('4,')))AND(vt0.c0)))AND('72633710')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (t1.c90))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2 IN ())))<((((((((((((((((((0.6567864376201061)AND(vt0.c0)))OR(vt0.c2)))OR(0.19975908168881573)))OR(vt0.c2)))OR('4,')))AND(vt0.c0)))AND('72633710')))OR(vt0.c0))))));
SELECT ALL * FROM vt0, t1 WHERE ((- ((~ (t1.c90))))) ORDER BY ((((vt0.c2 IN ())))<((((((((((((((((((0.6567864376201061)AND(vt0.c0)))OR(vt0.c2)))OR(0.19975908168881573)))OR(vt0.c2)))OR('4,')))AND(vt0.c0)))AND('72633710')))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (vt0.c2)))|(t1.c90))) ORDER BY CASE ((vt0.c1)<<(vt0.c2))  WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c1))<((t1.c90))) ELSE vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) BETWEEN (t1.c90) AND (vt0.c2)))|(t1.c90))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c1)<<(vt0.c2))  WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c1))<((t1.c90))) ELSE vt0.c1 END DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (vt0.c2)))|(t1.c90))) ORDER BY CASE ((vt0.c1)<<(vt0.c2))  WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c1))<((t1.c90))) ELSE vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) BETWEEN (t1.c90) AND (vt0.c2)))|(t1.c90))) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE ((vt0.c1)<<(vt0.c2))  WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c1))<((t1.c90))) ELSE vt0.c1 END DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (vt0.c2)))|(t1.c90))) ORDER BY CASE ((vt0.c1)<<(vt0.c2))  WHEN (vt0.c1 IN (vt0.c2)) THEN (((vt0.c1))<((t1.c90))) ELSE vt0.c1 END DESC;
SELECT * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT(CASE NULL  WHEN vt0.c1 THEN 1.342687823E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS NOT(CASE NULL  WHEN vt0.c1 THEN 1.342687823E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT(CASE NULL  WHEN vt0.c1 THEN 1.342687823E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))IS NOT(CASE NULL  WHEN vt0.c1 THEN 1.342687823E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((CAST(vt0.c0 AS INTEGER))IS NOT(CASE NULL  WHEN vt0.c1 THEN 1.342687823E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)));
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90)<(vt0.c2))) NOT BETWEEN (vt0.c0) AND (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)<(vt0.c2))) NOT BETWEEN (vt0.c0) AND (RTRIM(vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90)<(vt0.c2))) NOT BETWEEN (vt0.c0) AND (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)<(vt0.c2))) NOT BETWEEN (vt0.c0) AND (RTRIM(vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90)<(vt0.c2))) NOT BETWEEN (vt0.c0) AND (RTRIM(vt0.c1))));
SELECT * FROM t1, vt0 WHERE ((((((x'')) BETWEEN (('y{AtX\r+(%')) AND ((1.003471678E9))))<>(vt0.c0))) ORDER BY CASE (- (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((t1.c90)|(vt0.c2)) ELSE ((t1.c90)IS NOT(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN (('y{AtX\r+(%')) AND ((1.003471678E9))))!=(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (- (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((t1.c90)|(vt0.c2)) ELSE ((t1.c90)IS NOT(vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE ((((((x'')) BETWEEN (('y{AtX\r+(%')) AND ((1.003471678E9))))<>(vt0.c0))) ORDER BY CASE (- (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((t1.c90)|(vt0.c2)) ELSE ((t1.c90)IS NOT(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'')) BETWEEN (('y{AtX\r+(%')) AND ((1.003471678E9))))!=(vt0.c0))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (- (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((t1.c90)|(vt0.c2)) ELSE ((t1.c90)IS NOT(vt0.c0)) END DESC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE ((((((x'')) BETWEEN (('y{AtX\r+(%')) AND ((1.003471678E9))))<>(vt0.c0))) ORDER BY CASE (- (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((t1.c90)|(vt0.c2)) ELSE ((t1.c90)IS NOT(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((vt0.c2)<=(vt0.c1)))==(((t1.c90)-(vt0.c1)))) WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))))OR(((vt0.c1) BETWEEN (t1.c90) AND (t1.c90))))  NULLS LAST, ((0.5450476922903352)!=(vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((vt0.c2)<=(vt0.c1)))==(((t1.c90)-(vt0.c1)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))))OR(((vt0.c1) BETWEEN (t1.c90) AND (t1.c90))))  NULLS LAST, ((0.5450476922903352)<>(vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((vt0.c2)<=(vt0.c1)))==(((t1.c90)-(vt0.c1)))) WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))))OR(((vt0.c1) BETWEEN (t1.c90) AND (t1.c90))))  NULLS LAST, ((0.5450476922903352)!=(vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((vt0.c2)<=(vt0.c1)))==(((t1.c90)-(vt0.c1)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))))OR(((vt0.c1) BETWEEN (t1.c90) AND (t1.c90))))  NULLS LAST, ((0.5450476922903352)<>(vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((vt0.c2)<=(vt0.c1)))==(((t1.c90)-(vt0.c1)))) WHERE ((+ (((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c1))))OR(((vt0.c1) BETWEEN (t1.c90) AND (t1.c90))))  NULLS LAST, ((0.5450476922903352)!=(vt0.c2)) COLLATE BINARY;
SELECT * FROM t1 WHERE (((CASE t1.c90  WHEN '-1e500' THEN 0.32396115851175256 ELSE t1.c90 END) NOT BETWEEN (LOWER(t1.c90)) AND (TRIM(DISTINCT t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c90  WHEN '-1e500' THEN 0.32396115851175256 ELSE t1.c90 END) NOT BETWEEN (LOWER(t1.c90)) AND (TRIM(DISTINCT t1.c90, t1.c90)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c90  WHEN '-1e500' THEN 0.32396115851175256 ELSE t1.c90 END) NOT BETWEEN (LOWER(t1.c90)) AND (TRIM(DISTINCT t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c90  WHEN '-1e500' THEN 0.32396115851175256 ELSE t1.c90 END) NOT BETWEEN (LOWER(t1.c90)) AND (TRIM(DISTINCT t1.c90, t1.c90)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c90  WHEN '-1e500' THEN 0.32396115851175256 ELSE t1.c90 END) NOT BETWEEN (LOWER(t1.c90)) AND (TRIM(DISTINCT t1.c90, t1.c90))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('0TP)t') ORDER BY (((vt0.c0 IN ()))IS(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)) ASC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END AS TEXT)  NULLS FIRST, ((('1470313407', vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((~ (vt0.c2)), NULL, (~ (vt0.c1)), (((vt0.c0))<((vt0.c1))), ((0.8359148465290013)==(vt0.c1)))) AND ((((vt0.c0)|(vt0.c0)), CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('#y.ணI칓Z!')), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('0TP)t') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))IS(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)) ASC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END AS TEXT)  NULLS FIRST, ((('1470313407', vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((~ (vt0.c2)), NULL, (~ (vt0.c1)), (((vt0.c0))<((vt0.c1))), ((0.8359148465290013)=(vt0.c1)))) AND ((((vt0.c0)|(vt0.c0)), CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('#y.ணI칓Z!')), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0TP)t') ORDER BY (((vt0.c0 IN ()))IS(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)) ASC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END AS TEXT)  NULLS FIRST, ((('1470313407', vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((~ (vt0.c2)), NULL, (~ (vt0.c1)), (((vt0.c0))<((vt0.c1))), ((0.8359148465290013)==(vt0.c1)))) AND ((((vt0.c0)|(vt0.c0)), CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('#y.ணI칓Z!')), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('0TP)t') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))IS(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)) ASC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END AS TEXT)  NULLS FIRST, ((('1470313407', vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((~ (vt0.c2)), NULL, (~ (vt0.c1)), (((vt0.c0))<((vt0.c1))), ((0.8359148465290013)=(vt0.c1)))) AND ((((vt0.c0)|(vt0.c0)), CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('#y.ணI칓Z!')), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0TP)t') ORDER BY (((vt0.c0 IN ()))IS(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END)) ASC  NULLS FIRST, CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END AS TEXT)  NULLS FIRST, ((('1470313407', vt0.c1, vt0.c2, vt0.c2, vt0.c1)) BETWEEN (((~ (vt0.c2)), NULL, (~ (vt0.c1)), (((vt0.c0))<((vt0.c1))), ((0.8359148465290013)==(vt0.c1)))) AND ((((vt0.c0)|(vt0.c0)), CAST(vt0.c1 AS REAL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('#y.ணI칓Z!')), ((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))) DESC;
SELECT * FROM vt0, t1 WHERE ((- (((vt0.c1) NOT NULL)))) ORDER BY ((t1.c90) NOT NULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c90) NOT NULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE ((- (((vt0.c1) NOT NULL)))) ORDER BY ((t1.c90) NOT NULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c90) NOT NULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE ((- (((vt0.c1) NOT NULL)))) ORDER BY ((t1.c90) NOT NULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c2, vt0.c2)))))OR(PRINTF(vt0.c2))))OR(((vt0.c1)*(vt0.c0)))))OR(((vt0.c0)LIKE(0.6866819631461535)))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c2, vt0.c2)))))OR(PRINTF(vt0.c2))))OR(((vt0.c1)*(vt0.c0)))))OR(((vt0.c0)LIKE(0.6866819631461535))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c2, vt0.c2)))))OR(PRINTF(vt0.c2))))OR(((vt0.c1)*(vt0.c0)))))OR(((vt0.c0)LIKE(0.6866819631461535)))));
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c2, vt0.c2)))))OR(PRINTF(vt0.c2))))OR(((vt0.c1)*(vt0.c0)))))OR(((vt0.c0)LIKE(0.6866819631461535))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR((vt0.c1 IN (vt0.c2, vt0.c2)))))OR(PRINTF(vt0.c2))))OR(((vt0.c1)*(vt0.c0)))))OR(((vt0.c0)LIKE(0.6866819631461535)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((CAST(vt0.c0 AS NUMERIC), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.7750947827608694 WHEN vt0.c2 THEN '1344622321' END, ((vt0.c2)GLOB(vt0.c0)), vt0.c1, vt0.c2 COLLATE NOCASE))<=((CASE WHEN x'ef29' THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c0, vt0.c1, vt0.c0))==((t1.c90, vt0.c2, vt0.c1))), ((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)), vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt0.c1))))) ORDER BY (('318086972')>((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.7750947827608694 WHEN vt0.c2 THEN '1344622321' END, ((vt0.c2)GLOB(vt0.c0)), vt0.c1, vt0.c2 COLLATE NOCASE))<=((CASE WHEN x'ef29' THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c0, vt0.c1, vt0.c0))=((t1.c90, vt0.c2, vt0.c1))), ((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)), vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (('318086972')>((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((CAST(vt0.c0 AS NUMERIC), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.7750947827608694 WHEN vt0.c2 THEN '1344622321' END, ((vt0.c2)GLOB(vt0.c0)), vt0.c1, vt0.c2 COLLATE NOCASE))<=((CASE WHEN x'ef29' THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c0, vt0.c1, vt0.c0))==((t1.c90, vt0.c2, vt0.c1))), ((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)), vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt0.c1))))) ORDER BY (('318086972')>((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS NUMERIC), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.7750947827608694 WHEN vt0.c2 THEN '1344622321' END, ((vt0.c2)GLOB(vt0.c0)), vt0.c1, vt0.c2 COLLATE NOCASE))<=((CASE WHEN x'ef29' THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c0, vt0.c1, vt0.c0))=((t1.c90, vt0.c2, vt0.c1))), ((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)), vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (('318086972')>((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((CAST(vt0.c0 AS NUMERIC), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.7750947827608694 WHEN vt0.c2 THEN '1344622321' END, ((vt0.c2)GLOB(vt0.c0)), vt0.c1, vt0.c2 COLLATE NOCASE))<=((CASE WHEN x'ef29' THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c0, vt0.c1, vt0.c0))==((t1.c90, vt0.c2, vt0.c1))), ((t1.c90) BETWEEN (vt0.c2) AND (t1.c90)), vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt0.c1))))) ORDER BY (('318086972')>((~ (vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (((((((((CASE WHEN t1.c90 THEN vt0.c1 END)OR(0.6081314477030838)))AND(((']u') NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (t1.c90) AND (vt0.c2))))) ORDER BY ((((vt0.c2) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c90 THEN vt0.c1 END)OR(0.6081314477030838)))AND(((']u') NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (t1.c90) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2) ISNULL)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((((((((CASE WHEN t1.c90 THEN vt0.c1 END)OR(0.6081314477030838)))AND(((']u') NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (t1.c90) AND (vt0.c2))))) ORDER BY ((((vt0.c2) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c90 THEN vt0.c1 END)OR(0.6081314477030838)))AND(((']u') NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (t1.c90) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c2) ISNULL)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((((((((CASE WHEN t1.c90 THEN vt0.c1 END)OR(0.6081314477030838)))AND(((']u') NOT BETWEEN (vt0.c0) AND (vt0.c2)))))AND((~ (vt0.c1)))))OR(((vt0.c0) BETWEEN (t1.c90) AND (vt0.c2))))) ORDER BY ((((vt0.c2) ISNULL)) IS FALSE)  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CAST((- (vt0.c0)) AS BLOB));
SELECT ALL * FROM t1 WHERE ((0.6962568400341804 IN ((~ (t1.c90)), '1344622321')));
SELECT SUM(count) FROM (SELECT ALL (((0.6962568400341804 IN ((~ (t1.c90)), '1344622321'))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((0.6962568400341804 IN ((~ (t1.c90)), '1344622321')));
SELECT SUM(count) FROM (SELECT ALL (((0.6962568400341804 IN ((~ (t1.c90)), '1344622321'))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((0.6962568400341804 IN ((~ (t1.c90)), '1344622321')));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT ALL (((~ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(vt0.c0 COLLATE RTRIM AS REAL) WHERE ((~ (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM t1 WHERE (((((((((CAST(0.4725617371291492 AS REAL))AND(((t1.c90)%(t1.c90)))))OR(((t1.c90) ISNULL))))AND(t1.c90 COLLATE BINARY)))OR(ABS(t1.c90)))) ORDER BY (((((t1.c90))!=((t1.c90))))GLOB((NULL IN (t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(0.4725617371291492 AS REAL))AND(((t1.c90)%(t1.c90)))))OR(((t1.c90) ISNULL))))AND(t1.c90 COLLATE BINARY)))OR(ABS(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))!=((t1.c90))))GLOB((NULL IN (t1.c90, t1.c90)))));
SELECT COUNT(*) FROM t1 WHERE (((((((((CAST(0.4725617371291492 AS REAL))AND(((t1.c90)%(t1.c90)))))OR(((t1.c90) ISNULL))))AND(t1.c90 COLLATE BINARY)))OR(ABS(t1.c90)))) ORDER BY (((((t1.c90))!=((t1.c90))))GLOB((NULL IN (t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(0.4725617371291492 AS REAL))AND(((t1.c90)%(t1.c90)))))OR(((t1.c90) ISNULL))))AND(t1.c90 COLLATE BINARY)))OR(ABS(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))!=((t1.c90))))GLOB((NULL IN (t1.c90, t1.c90)))));
SELECT COUNT(*) FROM t1 WHERE (((((((((CAST(0.4725617371291492 AS REAL))AND(((t1.c90)%(t1.c90)))))OR(((t1.c90) ISNULL))))AND(t1.c90 COLLATE BINARY)))OR(ABS(t1.c90)))) ORDER BY (((((t1.c90))!=((t1.c90))))GLOB((NULL IN (t1.c90, t1.c90))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((CAST(t1.c90 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c90 AS REAL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((CAST(t1.c90 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY ((CAST(t1.c90 AS REAL)) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LOWER(vt0.c0) COLLATE BINARY) ORDER BY ((CAST(t1.c90 AS REAL)) NOT NULL) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c2 AS INTEGER)) NOTNULL) WHERE (COALESCE(vt0.c1, ((t1.c90)IS NOT(vt0.c0)))) ORDER BY UPPER('	g,\rK')  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))IS NOT('135435543')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c1, ((t1.c90)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c2 AS INTEGER)) NOTNULL) ORDER BY UPPER('	g,\rK')  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))IS NOT('135435543')) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c2 AS INTEGER)) NOTNULL) WHERE (COALESCE(vt0.c1, ((t1.c90)IS NOT(vt0.c0)))) ORDER BY UPPER('	g,\rK')  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))IS NOT('135435543')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt0.c1, ((t1.c90)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c2 AS INTEGER)) NOTNULL) ORDER BY UPPER('	g,\rK')  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))IS NOT('135435543')) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON ((CAST(vt0.c2 AS INTEGER)) NOTNULL) WHERE (COALESCE(vt0.c1, ((t1.c90)IS NOT(vt0.c0)))) ORDER BY UPPER('	g,\rK')  NULLS FIRST, vt0.c0 DESC  NULLS FIRST, ((CAST(vt0.c0 AS TEXT))IS NOT('135435543')) ASC;
SELECT ALL * FROM t1 WHERE (((json_valid(t1.c90)) IS FALSE)) ORDER BY ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t1.c90)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((json_valid(t1.c90)) IS FALSE)) ORDER BY ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(t1.c90)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((json_valid(t1.c90)) IS FALSE)) ORDER BY ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (CAST(NULL AS TEXT)) ORDER BY (((((((((((((((t1.c90)) BETWEEN ((t1.c90)) AND ((0.6960385922584592))))OR((t1.c90 IN ()))))AND(CASE t1.c90  WHEN x'' THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)))OR(t1.c90)))AND((t1.c90 IN ()))))OR(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))))AND(t1.c90)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((((t1.c90)) BETWEEN ((t1.c90)) AND ((0.6960385922584592))))OR((t1.c90 IN ()))))AND(CASE t1.c90  WHEN x'' THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)))OR(t1.c90)))AND((t1.c90 IN ()))))OR(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))))AND(t1.c90)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(NULL AS TEXT)) ORDER BY (((((((((((((((t1.c90)) BETWEEN ((t1.c90)) AND ((0.6960385922584592))))OR((t1.c90 IN ()))))AND(CASE t1.c90  WHEN x'' THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)))OR(t1.c90)))AND((t1.c90 IN ()))))OR(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))))AND(t1.c90)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (((((((((((((((t1.c90)) BETWEEN ((t1.c90)) AND ((0.6960385922584592))))OR((t1.c90 IN ()))))AND(CASE t1.c90  WHEN x'' THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)))OR(t1.c90)))AND((t1.c90 IN ()))))OR(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))))AND(t1.c90)) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(NULL AS TEXT)) ORDER BY (((((((((((((((t1.c90)) BETWEEN ((t1.c90)) AND ((0.6960385922584592))))OR((t1.c90 IN ()))))AND(CASE t1.c90  WHEN x'' THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)))OR(t1.c90)))AND((t1.c90 IN ()))))OR(((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))))AND(t1.c90)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 IN (vt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (vt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 IN (vt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (vt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (vt0.c1 IN (vt0.c2)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (t1.c90) ORDER BY ((CASE t1.c90  WHEN t1.c90 THEN t1.c90 END)<<((- (t1.c90)))) DESC, CASE WHEN CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) AND ((t1.c90, NULL, 0x2e50fb1f, t1.c90, t1.c90))) ELSE t1.c90 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY ((CASE t1.c90  WHEN t1.c90 THEN t1.c90 END)<<((- (t1.c90)))) DESC, CASE WHEN CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) AND ((t1.c90, NULL, 0X2e50fb1f, t1.c90, t1.c90))) ELSE t1.c90 END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c90) ORDER BY ((CASE t1.c90  WHEN t1.c90 THEN t1.c90 END)<<((- (t1.c90)))) DESC, CASE WHEN CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) AND ((t1.c90, NULL, 0x2e50fb1f, t1.c90, t1.c90))) ELSE t1.c90 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY ((CASE t1.c90  WHEN t1.c90 THEN t1.c90 END)<<((- (t1.c90)))) DESC, CASE WHEN CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) AND ((t1.c90, NULL, 0X2e50fb1f, t1.c90, t1.c90))) ELSE t1.c90 END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c90) ORDER BY ((CASE t1.c90  WHEN t1.c90 THEN t1.c90 END)<<((- (t1.c90)))) DESC, CASE WHEN CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90)) AND ((t1.c90, NULL, 0x2e50fb1f, t1.c90, t1.c90))) ELSE t1.c90 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, 0.3646020147057093)) BETWEEN ((x'', IFNULL(vt0.c1, vt0.c0), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))) AND ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(0.7645821157663647)))OR(x'')), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (~ (vt0.c0)))))) ORDER BY (((CAST(-653319301 AS REAL)))<((vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS BLOB))==(CAST(vt0.c1 AS REAL)))  NULLS LAST, (((vt0.c2)) BETWEEN (((NULL IN ()))) AND ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))), (NOT (UNLIKELY(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c0, 0.3646020147057093)) BETWEEN ((x'', IFNULL(vt0.c1, vt0.c0), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))) AND ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(0.7645821157663647)))OR(x'')), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(-653319301 AS REAL)))<((vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS BLOB))==(CAST(vt0.c1 AS REAL)))  NULLS LAST, (((vt0.c2)) BETWEEN (((NULL IN ()))) AND ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))), (NOT (UNLIKELY(vt0.c2))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, 0.3646020147057093)) BETWEEN ((x'', IFNULL(vt0.c1, vt0.c0), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))) AND ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(0.7645821157663647)))OR(x'')), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (~ (vt0.c0)))))) ORDER BY (((CAST(-653319301 AS REAL)))<((vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS BLOB))==(CAST(vt0.c1 AS REAL)))  NULLS LAST, (((vt0.c2)) BETWEEN (((NULL IN ()))) AND ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))), (NOT (UNLIKELY(vt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2, vt0.c0, 0.3646020147057093)) BETWEEN ((x'', IFNULL(vt0.c1, vt0.c0), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))) AND ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(0.7645821157663647)))OR(x'')), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(-653319301 AS REAL)))<((vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS BLOB))==(CAST(vt0.c1 AS REAL)))  NULLS LAST, (((vt0.c2)) BETWEEN (((NULL IN ()))) AND ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))), (NOT (UNLIKELY(vt0.c2))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2, vt0.c0, 0.3646020147057093)) BETWEEN ((x'', IFNULL(vt0.c1, vt0.c0), ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c2)))) AND ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(0.7645821157663647)))OR(x'')), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), (~ (vt0.c0)))))) ORDER BY (((CAST(-653319301 AS REAL)))<((vt0.c0)))  NULLS LAST, ((CAST(vt0.c0 AS BLOB))==(CAST(vt0.c1 AS REAL)))  NULLS LAST, (((vt0.c2)) BETWEEN (((NULL IN ()))) AND ((((((vt0.c1)AND(vt0.c2)))AND(vt0.c1))))), (NOT (UNLIKELY(vt0.c2))) DESC;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM t1 WHERE (((t1.c90 IN ()) IN ())) ORDER BY ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN 'UVeJ' END)!=((((t1.c90))>(('yOm|!')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c90 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN 'UVeJ' END)!=((((t1.c90))>(('yOm|!')))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c90 IN ()) IN ())) ORDER BY ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN 'UVeJ' END)!=((((t1.c90))>(('yOm|!')))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c90 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN 'UVeJ' END)!=((((t1.c90))>(('yOm|!')))))  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c90 IN ()) IN ())) ORDER BY ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN 'UVeJ' END)!=((((t1.c90))>(('yOm|!')))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(vt0.c0)) WHERE (CASE WHEN '308065938' THEN CASE WHEN t1.c90 THEN vt0.c0 ELSE t1.c90 END WHEN HEX(vt0.c0) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c90)&(t1.c90)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '308065938' THEN CASE WHEN t1.c90 THEN vt0.c0 ELSE t1.c90 END WHEN HEX(vt0.c0) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c90)&(t1.c90)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(vt0.c0)));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(vt0.c0)) WHERE (CASE WHEN '308065938' THEN CASE WHEN t1.c90 THEN vt0.c0 ELSE t1.c90 END WHEN HEX(vt0.c0) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c90)&(t1.c90)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '308065938' THEN CASE WHEN t1.c90 THEN vt0.c0 ELSE t1.c90 END WHEN HEX(vt0.c0) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c90)&(t1.c90)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(vt0.c0)));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))))<<(vt0.c0)) WHERE (CASE WHEN '308065938' THEN CASE WHEN t1.c90 THEN vt0.c0 ELSE t1.c90 END WHEN HEX(vt0.c0) THEN x'' WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c90)&(t1.c90)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((TRIM(vt0.c2)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c2)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (vt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((TRIM(vt0.c2)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c2)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (vt0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((- (CASE WHEN vt0.c0 THEN vt0.c2 END))) ORDER BY ((TRIM(vt0.c2)) NOT BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (vt0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE ((~ (((t1.c90) NOT BETWEEN (vt0.c0) AND (0xffffffffa3cda2f1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c90) NOT BETWEEN (vt0.c0) AND (0Xffffffffa3cda2f1))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((~ (((t1.c90) NOT BETWEEN (vt0.c0) AND (0xffffffffa3cda2f1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c90) NOT BETWEEN (vt0.c0) AND (0Xffffffffa3cda2f1))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((~ (((t1.c90) NOT BETWEEN (vt0.c0) AND (0xffffffffa3cda2f1)))));
SELECT * FROM t1, vt0 WHERE (CASE WHEN t1.c90 THEN (- (x'')) ELSE ((((vt0.c0)OR(x'')))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c90 THEN (- (x'')) ELSE ((((vt0.c0)OR(x'')))OR(vt0.c1)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN t1.c90 THEN (- (x'')) ELSE ((((vt0.c0)OR(x'')))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c90 THEN (- (x'')) ELSE ((((vt0.c0)OR(x'')))OR(vt0.c1)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN t1.c90 THEN (- (x'')) ELSE ((((vt0.c0)OR(x'')))OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN ())))));
SELECT * FROM t1 WHERE (((((t1.c90) NOT NULL))&(CAST(t1.c90 AS NUMERIC)))) ORDER BY (((t1.c90)) BETWEEN ((CAST(t1.c90 AS INTEGER))) AND (((- (t1.c90))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) NOT NULL))&(CAST(t1.c90 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90)) BETWEEN ((CAST(t1.c90 AS INTEGER))) AND (((- (t1.c90))))) DESC);
SELECT * FROM t1 WHERE (((((t1.c90) NOT NULL))&(CAST(t1.c90 AS NUMERIC)))) ORDER BY (((t1.c90)) BETWEEN ((CAST(t1.c90 AS INTEGER))) AND (((- (t1.c90))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) NOT NULL))&(CAST(t1.c90 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90)) BETWEEN ((CAST(t1.c90 AS INTEGER))) AND (((- (t1.c90))))) DESC);
SELECT * FROM t1 WHERE (((((t1.c90) NOT NULL))&(CAST(t1.c90 AS NUMERIC)))) ORDER BY (((t1.c90)) BETWEEN ((CAST(t1.c90 AS INTEGER))) AND (((- (t1.c90))))) DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(vt0.c2))) AND (LOWER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(vt0.c2))) AND (LOWER(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(vt0.c2))) AND (LOWER(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(vt0.c2))) AND (LOWER(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) NOTNULL)) BETWEEN (((((NULL)AND(vt0.c1)))OR(vt0.c2))) AND (LOWER(vt0.c1))));
SELECT * FROM t1 WHERE (((MAX(t1.c90, t1.c90))IS((t1.c90 IN (t1.c90))))) ORDER BY ((((x'')OR(CAST(t1.c90 AS BLOB))))AND(((((x'')AND(t1.c90)))AND(t1.c90))));
SELECT SUM(count) FROM (SELECT ((((MAX(t1.c90, t1.c90))IS((t1.c90 IN (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'')OR(CAST(t1.c90 AS BLOB))))AND(((((x'')AND(t1.c90)))AND(t1.c90)))));
SELECT * FROM t1 WHERE (((MAX(t1.c90, t1.c90))IS((t1.c90 IN (t1.c90))))) ORDER BY ((((x'')OR(CAST(t1.c90 AS BLOB))))AND(((((x'')AND(t1.c90)))AND(t1.c90))));
SELECT SUM(count) FROM (SELECT ((((MAX(t1.c90, t1.c90))IS((t1.c90 IN (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'')OR(CAST(t1.c90 AS BLOB))))AND(((((x'')AND(t1.c90)))AND(t1.c90)))));
SELECT * FROM t1 WHERE (((MAX(t1.c90, t1.c90))IS((t1.c90 IN (t1.c90))))) ORDER BY ((((x'')OR(CAST(t1.c90 AS BLOB))))AND(((((x'')AND(t1.c90)))AND(t1.c90))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+('-1557348175'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+('-1557348175'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+('-1557348175'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+('-1557348175'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)+('-1557348175'))) NOT NULL));
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM t1, vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM t1, vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c0) IS FALSE)) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((vt0.c2 IN ())) ORDER BY (CASE t1.c90  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((LENGTH(vt0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (CASE t1.c90  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((LENGTH(vt0.c2)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((vt0.c2 IN ())) ORDER BY (CASE t1.c90  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((LENGTH(vt0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (CASE t1.c90  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((LENGTH(vt0.c2)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((vt0.c2 IN ())) ORDER BY (CASE t1.c90  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END IN ()), ((LENGTH(vt0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (t1.c90) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t1, vt0 WHERE (t1.c90) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM t1, vt0 WHERE (t1.c90) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c2, '')) NOT BETWEEN ((((vt0.c1)>>(t1.c90)), NULL, (NOT (t1.c90)))) AND (((NULL IN ()), CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)>(t1.c90)))))) ORDER BY (((((t1.c90))>=((vt0.c2))))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90, vt0.c2, '')) NOT BETWEEN ((((vt0.c1)>>(t1.c90)), NULL, (NOT (t1.c90)))) AND (((NULL IN ()), CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)>(t1.c90)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((t1.c90))>=((vt0.c2))))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c2, '')) NOT BETWEEN ((((vt0.c1)>>(t1.c90)), NULL, (NOT (t1.c90)))) AND (((NULL IN ()), CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)>(t1.c90)))))) ORDER BY (((((t1.c90))>=((vt0.c2))))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90, vt0.c2, '')) NOT BETWEEN ((((vt0.c1)>>(t1.c90)), NULL, (NOT (t1.c90)))) AND (((NULL IN ()), CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)>(t1.c90)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((t1.c90))>=((vt0.c2))))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((t1.c90, vt0.c2, '')) NOT BETWEEN ((((vt0.c1)>>(t1.c90)), NULL, (NOT (t1.c90)))) AND (((NULL IN ()), CASE t1.c90  WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, ((vt0.c0)>(t1.c90)))))) ORDER BY (((((t1.c90))>=((vt0.c2))))-((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((NOT (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM t1 WHERE (GLOB(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (GLOB(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (GLOB(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c1 COLLATE NOCASE IN (((vt0.c2)LIKE(vt0.c2)))) WHERE ((((NULL, vt0.c2 COLLATE NOCASE, vt0.c2 COLLATE RTRIM))<(((t1.c90 IN ()), vt0.c2, CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((vt0.c0)/(vt0.c2)))%(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, vt0.c2 COLLATE NOCASE, vt0.c2 COLLATE RTRIM))<(((t1.c90 IN ()), vt0.c2, CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c1 COLLATE NOCASE IN (((vt0.c2)LIKE(vt0.c2)))) ORDER BY ((((vt0.c0)/(vt0.c2)))%(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c1 COLLATE NOCASE IN (((vt0.c2)LIKE(vt0.c2)))) WHERE ((((NULL, vt0.c2 COLLATE NOCASE, vt0.c2 COLLATE RTRIM))<(((t1.c90 IN ()), vt0.c2, CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((vt0.c0)/(vt0.c2)))%(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, vt0.c2 COLLATE NOCASE, vt0.c2 COLLATE RTRIM))<(((t1.c90 IN ()), vt0.c2, CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c1 COLLATE NOCASE IN (((vt0.c2)LIKE(vt0.c2)))) ORDER BY ((((vt0.c0)/(vt0.c2)))%(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c1 COLLATE NOCASE IN (((vt0.c2)LIKE(vt0.c2)))) WHERE ((((NULL, vt0.c2 COLLATE NOCASE, vt0.c2 COLLATE RTRIM))<(((t1.c90 IN ()), vt0.c2, CASE vt0.c0  WHEN vt0.c0 THEN t1.c90 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((((vt0.c0)/(vt0.c2)))%(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c90))));
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY (((t1.c90 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY (((t1.c90 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY (((t1.c90 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1, vt0 ORDER BY (((t1.c90 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (t1.c90) ORDER BY (((t1.c90 IN ())) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE vt0.c2  WHEN t1.c90 THEN -302142435 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM) ORDER BY JULIANDAY(CAST(t1.c90 AS TEXT), ((x'')*(vt0.c0)), ((vt0.c0)OR(vt0.c1))) DESC, (((t1.c90, vt0.c0, t1.c90)) NOT BETWEEN ((t1.c90 COLLATE NOCASE, (~ (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c1))<=((vt0.c1))), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN t1.c90 THEN -302142435 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY JULIANDAY(CAST(t1.c90 AS TEXT), ((x'')*(vt0.c0)), ((vt0.c0)OR(vt0.c1))) DESC, (((t1.c90, vt0.c0, t1.c90)) NOT BETWEEN ((t1.c90 COLLATE NOCASE, (~ (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c1))<=((vt0.c1))), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE vt0.c2  WHEN t1.c90 THEN -302142435 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM) ORDER BY JULIANDAY(CAST(t1.c90 AS TEXT), ((x'')*(vt0.c0)), ((vt0.c0)OR(vt0.c1))) DESC, (((t1.c90, vt0.c0, t1.c90)) NOT BETWEEN ((t1.c90 COLLATE NOCASE, (~ (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c1))<=((vt0.c1))), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c2  WHEN t1.c90 THEN -302142435 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY JULIANDAY(CAST(t1.c90 AS TEXT), ((x'')*(vt0.c0)), ((vt0.c0)OR(vt0.c1))) DESC, (((t1.c90, vt0.c0, t1.c90)) NOT BETWEEN ((t1.c90 COLLATE NOCASE, (~ (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c1))<=((vt0.c1))), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE vt0.c2  WHEN t1.c90 THEN -302142435 ELSE vt0.c1 END COLLATE RTRIM COLLATE RTRIM) ORDER BY JULIANDAY(CAST(t1.c90 AS TEXT), ((x'')*(vt0.c0)), ((vt0.c0)OR(vt0.c1))) DESC, (((t1.c90, vt0.c0, t1.c90)) NOT BETWEEN ((t1.c90 COLLATE NOCASE, (~ (x'')), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))) AND (((((vt0.c1))<=((vt0.c1))), ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1))) ASC;
SELECT * FROM t1 WHERE (x'') ORDER BY (+ (((t1.c90) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c90) NOT NULL))) DESC);
SELECT * FROM t1 WHERE (x'') ORDER BY (+ (((t1.c90) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c90) NOT NULL))) DESC);
SELECT * FROM t1 WHERE (x'') ORDER BY (+ (((t1.c90) NOT NULL))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c90 THEN '-2074276338' ELSE t1.c90 END)<<(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c90 THEN '-2074276338' ELSE t1.c90 END)<<(t1.c90))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c90 THEN '-2074276338' ELSE t1.c90 END)<<(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c90 THEN '-2074276338' ELSE t1.c90 END)<<(t1.c90))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c90 THEN '-2074276338' ELSE t1.c90 END)<<(t1.c90)));
SELECT * FROM t1 WHERE (((((t1.c90) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c90) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c90) IS FALSE)) NOTNULL));
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c90, vt0.c0, '1714246104')) BETWEEN ((TYPEOF(vt0.c0), '-912283382', (x'' IN (t1.c90)))) AND (((vt0.c2 IN (vt0.c0)), ((t1.c90)<<(vt0.c1)), x'6795'))) WHERE (CASE WHEN (((t1.c90))<=((t1.c90))) THEN ((((vt0.c1)AND(vt0.c2)))AND(t1.c90)) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN '' COLLATE BINARY THEN ((t1.c90) BETWEEN (t1.c90) AND (vt0.c1)) ELSE ((t1.c90)AND(vt0.c1)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c90))<=((t1.c90))) THEN ((((vt0.c1)AND(vt0.c2)))AND(t1.c90)) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN '' COLLATE BINARY THEN ((t1.c90) BETWEEN (t1.c90) AND (vt0.c1)) ELSE ((t1.c90)AND(vt0.c1)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c90, vt0.c0, '1714246104')) BETWEEN ((TYPEOF(vt0.c0), '-912283382', (x'' IN (t1.c90)))) AND (((vt0.c2 IN (vt0.c0)), ((t1.c90)<<(vt0.c1)), x'6795'))) ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c90, vt0.c0, '1714246104')) BETWEEN ((TYPEOF(vt0.c0), '-912283382', (x'' IN (t1.c90)))) AND (((vt0.c2 IN (vt0.c0)), ((t1.c90)<<(vt0.c1)), x'6795'))) WHERE (CASE WHEN (((t1.c90))<=((t1.c90))) THEN ((((vt0.c1)AND(vt0.c2)))AND(t1.c90)) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN '' COLLATE BINARY THEN ((t1.c90) BETWEEN (t1.c90) AND (vt0.c1)) ELSE ((t1.c90)AND(vt0.c1)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c90))<=((t1.c90))) THEN ((((vt0.c1)AND(vt0.c2)))AND(t1.c90)) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN '' COLLATE BINARY THEN ((t1.c90) BETWEEN (t1.c90) AND (vt0.c1)) ELSE ((t1.c90)AND(vt0.c1)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c90, vt0.c0, '1714246104')) BETWEEN ((TYPEOF(vt0.c0), '-912283382', (x'' IN (t1.c90)))) AND (((vt0.c2 IN (vt0.c0)), ((t1.c90)<<(vt0.c1)), x'6795'))) ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON (((t1.c90, vt0.c0, '1714246104')) BETWEEN ((TYPEOF(vt0.c0), '-912283382', (x'' IN (t1.c90)))) AND (((vt0.c2 IN (vt0.c0)), ((t1.c90)<<(vt0.c1)), x'6795'))) WHERE (CASE WHEN (((t1.c90))<=((t1.c90))) THEN ((((vt0.c1)AND(vt0.c2)))AND(t1.c90)) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 WHEN '' COLLATE BINARY THEN ((t1.c90) BETWEEN (t1.c90) AND (vt0.c1)) ELSE ((t1.c90)AND(vt0.c1)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULL);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE (~ ('1825428984'))  WHEN ((vt0.c2)||(t1.c90)) THEN ((vt0.c1)GLOB(vt0.c0)) END WHERE ((- (((((t1.c90)OR(t1.c90)))AND(vt0.c0))))) ORDER BY ((((t1.c90) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t1.c90)OR(t1.c90)))AND(vt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CASE (~ ('1825428984'))  WHEN ((vt0.c2)||(t1.c90)) THEN ((vt0.c1)GLOB(vt0.c0)) END ORDER BY ((((t1.c90) IS FALSE)) ISNULL)  NULLS FIRST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE (~ ('1825428984'))  WHEN ((vt0.c2)||(t1.c90)) THEN ((vt0.c1)GLOB(vt0.c0)) END WHERE ((- (((((t1.c90)OR(t1.c90)))AND(vt0.c0))))) ORDER BY ((((t1.c90) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((t1.c90)OR(t1.c90)))AND(vt0.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CASE (~ ('1825428984'))  WHEN ((vt0.c2)||(t1.c90)) THEN ((vt0.c1)GLOB(vt0.c0)) END ORDER BY ((((t1.c90) IS FALSE)) ISNULL)  NULLS FIRST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE (~ ('1825428984'))  WHEN ((vt0.c2)||(t1.c90)) THEN ((vt0.c1)GLOB(vt0.c0)) END WHERE ((- (((((t1.c90)OR(t1.c90)))AND(vt0.c0))))) ORDER BY ((((t1.c90) IS FALSE)) ISNULL)  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c90) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c90) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c90) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c90) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c90) ISNULL));
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN t1.c90 ELSE ((t1.c90)IS(t1.c90)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c90 THEN t1.c90 ELSE ((t1.c90)IS(t1.c90)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN t1.c90 ELSE ((t1.c90)IS(t1.c90)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c90 THEN t1.c90 ELSE ((t1.c90)IS(t1.c90)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c90 THEN t1.c90 ELSE ((t1.c90)IS(t1.c90)) END);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90))) IS TRUE));
SELECT ALL * FROM t1, vt0 WHERE ((+ ((((t1.c90)) BETWEEN ((vt0.c0)) AND ((t1.c90)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c2)))) AND ((((vt0.c2)/(vt0.c1))))), ((('{' IN ()))-(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))OR(x'')))AND(t1.c90)))) DESC, (- ((NOT (vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((t1.c90)) BETWEEN ((vt0.c0)) AND ((t1.c90)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c2)))) AND ((((vt0.c2)/(vt0.c1))))), ((('{' IN ()))-(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))OR(x'')))AND(t1.c90)))) DESC, (- ((NOT (vt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((+ ((((t1.c90)) BETWEEN ((vt0.c0)) AND ((t1.c90)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c2)))) AND ((((vt0.c2)/(vt0.c1))))), ((('{' IN ()))-(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))OR(x'')))AND(t1.c90)))) DESC, (- ((NOT (vt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((t1.c90)) BETWEEN ((vt0.c0)) AND ((t1.c90)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c2)))) AND ((((vt0.c2)/(vt0.c1))))), ((('{' IN ()))-(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))OR(x'')))AND(t1.c90)))) DESC, (- ((NOT (vt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((+ ((((t1.c90)) BETWEEN ((vt0.c0)) AND ((t1.c90)))))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c2)))) AND ((((vt0.c2)/(vt0.c1))))), ((('{' IN ()))-(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))OR(x'')))AND(t1.c90)))) DESC, (- ((NOT (vt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c90 COLLATE RTRIM)OR(((NULL)GLOB(t1.c90)))))OR(((t1.c90) NOT NULL)))) ORDER BY (((((t1.c90))<=((t1.c90))))AND(((t1.c90)>>(t1.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c90 COLLATE RTRIM)OR(((NULL)GLOB(t1.c90)))))OR(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))<=((t1.c90))))AND(((t1.c90)>>(t1.c90)))) DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c90 COLLATE RTRIM)OR(((NULL)GLOB(t1.c90)))))OR(((t1.c90) NOT NULL)))) ORDER BY (((((t1.c90))<=((t1.c90))))AND(((t1.c90)>>(t1.c90)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c90 COLLATE RTRIM)OR(((NULL)GLOB(t1.c90)))))OR(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))<=((t1.c90))))AND(((t1.c90)>>(t1.c90)))) DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c90 COLLATE RTRIM)OR(((NULL)GLOB(t1.c90)))))OR(((t1.c90) NOT NULL)))) ORDER BY (((((t1.c90))<=((t1.c90))))AND(((t1.c90)>>(t1.c90)))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1 IN ()))OR(((NULL) BETWEEN (vt0.c1) AND (t1.c90)))))OR(((vt0.c0)>>(t1.c90))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((x'')AND(t1.c90)))OR(vt0.c0)))OR(vt0.c1)))AND(t1.c90))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((NULL) BETWEEN (vt0.c1) AND (t1.c90)))))OR(((vt0.c0)>>(t1.c90))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((x'')AND(t1.c90)))OR(vt0.c0)))OR(vt0.c1)))AND(t1.c90))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1 IN ()))OR(((NULL) BETWEEN (vt0.c1) AND (t1.c90)))))OR(((vt0.c0)>>(t1.c90))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((x'')AND(t1.c90)))OR(vt0.c0)))OR(vt0.c1)))AND(t1.c90))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((NULL) BETWEEN (vt0.c1) AND (t1.c90)))))OR(((vt0.c0)>>(t1.c90))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((x'')AND(t1.c90)))OR(vt0.c0)))OR(vt0.c1)))AND(t1.c90))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1 IN ()))OR(((NULL) BETWEEN (vt0.c1) AND (t1.c90)))))OR(((vt0.c0)>>(t1.c90))))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((x'')AND(t1.c90)))OR(vt0.c0)))OR(vt0.c1)))AND(t1.c90))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((((((((t1.c90) BETWEEN (NULL) AND (t1.c90)))OR((NOT (t1.c90)))))OR(((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))))AND(((((t1.c90)AND(NULL)))OR(t1.c90)))))AND(t1.c90 COLLATE BINARY))) ORDER BY (t1.c90 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c90) BETWEEN (NULL) AND (t1.c90)))OR((NOT (t1.c90)))))OR(((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))))AND(((((t1.c90)AND(NULL)))OR(t1.c90)))))AND(t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (t1.c90 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c90) BETWEEN (NULL) AND (t1.c90)))OR((NOT (t1.c90)))))OR(((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))))AND(((((t1.c90)AND(NULL)))OR(t1.c90)))))AND(t1.c90 COLLATE BINARY))) ORDER BY (t1.c90 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c90) BETWEEN (NULL) AND (t1.c90)))OR((NOT (t1.c90)))))OR(((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))))AND(((((t1.c90)AND(NULL)))OR(t1.c90)))))AND(t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1 ORDER BY (t1.c90 IN ()) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((((((t1.c90) BETWEEN (NULL) AND (t1.c90)))OR((NOT (t1.c90)))))OR(((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))))AND(((((t1.c90)AND(NULL)))OR(t1.c90)))))AND(t1.c90 COLLATE BINARY))) ORDER BY (t1.c90 IN ()) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((((((((0Xffffffffec833b57)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))||(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((0Xffffffffec833b57)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((((((((0Xffffffffec833b57)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))||(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((((((((0Xffffffffec833b57)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN (vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) NOT NULL)))) ORDER BY CASE WHEN ((((((((0Xffffffffec833b57)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN (vt0.c1)) END;
SELECT ALL COUNT(*) FROM t1 WHERE (0.22537751758809987);
SELECT SUM(count) FROM (SELECT ((0.22537751758809987) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.22537751758809987);
SELECT SUM(count) FROM (SELECT ((0.22537751758809987) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (0.22537751758809987);
SELECT ALL COUNT(*) FROM t1 WHERE ('!PO') ORDER BY 0.16451949781552644 ASC, ABS(DISTINCT t1.c90 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (('!PO') IS TRUE)  as count FROM t1 ORDER BY 0.16451949781552644 ASC, ABS(DISTINCT t1.c90 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ('!PO') ORDER BY 0.16451949781552644 ASC, ABS(DISTINCT t1.c90 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT (('!PO') IS TRUE)  as count FROM t1 ORDER BY 0.16451949781552644 ASC, ABS(DISTINCT t1.c90 COLLATE NOCASE) DESC);
SELECT ALL COUNT(*) FROM t1 WHERE ('!PO') ORDER BY 0.16451949781552644 ASC, ABS(DISTINCT t1.c90 COLLATE NOCASE) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c2 COLLATE BINARY)LIKE((((x'387b')) BETWEEN ((NULL)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE BINARY)LIKE((((x'387b')) BETWEEN ((NULL)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c2 COLLATE BINARY)LIKE((((x'387b')) BETWEEN ((NULL)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2 COLLATE BINARY)LIKE((((x'387b')) BETWEEN ((NULL)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c2 COLLATE BINARY)LIKE((((x'387b')) BETWEEN ((NULL)) AND ((vt0.c1)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c90))<>((t1.c90))))+(t1.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c90))!=((t1.c90))))+(t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c90))<>((t1.c90))))+(t1.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c90))!=((t1.c90))))+(t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c90))<>((t1.c90))))+(t1.c90 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 WHERE ((t1.c90 IN ()) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c90) IS FALSE))<(CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c90 IN ()) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) IS FALSE))<(CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c90 IN ()) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c90) IS FALSE))<(CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c90 IN ()) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) IS FALSE))<(CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC  NULLS LAST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c90 IN ()) COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c90) IS FALSE))<(CASE t1.c90  WHEN t1.c90 THEN NULL END)) DESC  NULLS LAST, NULL  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN t1 ON ((UNICODE(vt0.c0))IS NOT(LIKELIHOOD(vt0.c2, 0.39326641902729076))) WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((UNICODE(vt0.c0))IS NOT(LIKELIHOOD(vt0.c2, 0.39326641902729076))));
SELECT * FROM vt0 INNER JOIN t1 ON ((UNICODE(vt0.c0))IS NOT(LIKELIHOOD(vt0.c2, 0.39326641902729076))) WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((UNICODE(vt0.c0))IS NOT(LIKELIHOOD(vt0.c2, 0.39326641902729076))));
SELECT * FROM vt0 INNER JOIN t1 ON ((UNICODE(vt0.c0))IS NOT(LIKELIHOOD(vt0.c2, 0.39326641902729076))) WHERE ((~ (CAST(vt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.5243549551515249 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 0.5243549551515249 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.5243549551515249 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN 0.5243549551515249 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.5243549551515249 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (vt0.c2 COLLATE RTRIM) AND (((vt0.c2) IS FALSE))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), TIME(vt0.c1, t1.c90, vt0.c1), '')) AND (('OO*0놛', (((t1.c90))<((vt0.c0))), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), TIME(vt0.c1, t1.c90, vt0.c1), '')) AND (('OO*0놛', (((t1.c90))<((vt0.c0))), x'')))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), TIME(vt0.c1, t1.c90, vt0.c1), '')) AND (('OO*0놛', (((t1.c90))<((vt0.c0))), x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), TIME(vt0.c1, t1.c90, vt0.c1), '')) AND (('OO*0놛', (((t1.c90))<((vt0.c0))), x'')))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (((~ (vt0.c2)), TIME(vt0.c1, t1.c90, vt0.c1), '')) AND (('OO*0놛', (((t1.c90))<((vt0.c0))), x''))));
SELECT ALL * FROM vt0 WHERE ((NOT (((('514211086'))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (((('514211086'))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((('514211086'))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT (((('514211086'))<((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((('514211086'))<((vt0.c0))))));
SELECT ALL * FROM t1, vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (((vt0.c2)!=(t1.c90))) AND (CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (((vt0.c2)!=(t1.c90))) AND (CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (((vt0.c2)!=(t1.c90))) AND (CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (((vt0.c2)!=(t1.c90))) AND (CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c90) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (((vt0.c2)!=(t1.c90))) AND (CASE vt0.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END)));
SELECT ALL * FROM t1 WHERE (IFNULL(((((t1.c90)AND(1364656324)))AND(t1.c90)), t1.c90)) ORDER BY t1.c90 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((t1.c90)AND(1364656324)))AND(t1.c90)), t1.c90)) IS TRUE)  as count FROM t1 ORDER BY t1.c90 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (IFNULL(((((t1.c90)AND(1364656324)))AND(t1.c90)), t1.c90)) ORDER BY t1.c90 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((t1.c90)AND(1364656324)))AND(t1.c90)), t1.c90)) IS TRUE)  as count FROM t1 ORDER BY t1.c90 DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (IFNULL(((((t1.c90)AND(1364656324)))AND(t1.c90)), t1.c90)) ORDER BY t1.c90 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNICODE(vt0.c2) THEN vt0.c2 COLLATE RTRIM ELSE ((vt0.c1)/(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN UNICODE(vt0.c2) THEN vt0.c2 COLLATE RTRIM ELSE ((vt0.c1)/(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNICODE(vt0.c2) THEN vt0.c2 COLLATE RTRIM ELSE ((vt0.c1)/(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN UNICODE(vt0.c2) THEN vt0.c2 COLLATE RTRIM ELSE ((vt0.c1)/(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN UNICODE(vt0.c2) THEN vt0.c2 COLLATE RTRIM ELSE ((vt0.c1)/(vt0.c2)) END);
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))) ORDER BY ((((((vt0.c1)AND(t1.c90)))AND(t1.c90))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c1)AND(t1.c90)))AND(t1.c90))) ISNULL));
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))) ORDER BY ((((((vt0.c1)AND(t1.c90)))AND(t1.c90))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c1)AND(t1.c90)))AND(t1.c90))) ISNULL));
SELECT COUNT(*) FROM t1, vt0 WHERE (LOWER(((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))) ORDER BY ((((((vt0.c1)AND(t1.c90)))AND(t1.c90))) ISNULL);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END) IS FALSE)) ORDER BY ((((t1.c90)>(t1.c90)))=(TIME(NULL, t1.c90, t1.c90, t1.c90, t1.c90))), CASE 0.20458693529826733  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)>(t1.c90)))=(TIME(NULL, t1.c90, t1.c90, t1.c90, t1.c90))), CASE 0.20458693529826733  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END) IS FALSE)) ORDER BY ((((t1.c90)>(t1.c90)))=(TIME(NULL, t1.c90, t1.c90, t1.c90, t1.c90))), CASE 0.20458693529826733  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90)>(t1.c90)))=(TIME(NULL, t1.c90, t1.c90, t1.c90, t1.c90))), CASE 0.20458693529826733  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END) IS FALSE)) ORDER BY ((((t1.c90)>(t1.c90)))=(TIME(NULL, t1.c90, t1.c90, t1.c90, t1.c90))), CASE 0.20458693529826733  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1 COLLATE RTRIM)%(vt0.c0))  NULLS FIRST, ((vt0.c0 COLLATE BINARY)||(0X4418fc57))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)%(vt0.c0))  NULLS FIRST, ((vt0.c0 COLLATE BINARY)||(0x4418fc57))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1 COLLATE RTRIM)%(vt0.c0))  NULLS FIRST, ((vt0.c0 COLLATE BINARY)||(0X4418fc57))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)%(vt0.c0))  NULLS FIRST, ((vt0.c0 COLLATE BINARY)||(0x4418fc57))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1 COLLATE RTRIM)%(vt0.c0))  NULLS FIRST, ((vt0.c0 COLLATE BINARY)||(0X4418fc57))  NULLS LAST;
SELECT * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY (NOT ((t1.c90 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (NOT ((t1.c90 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY (NOT ((t1.c90 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (NOT ((t1.c90 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (x'' COLLATE BINARY) ORDER BY (NOT ((t1.c90 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t1 WHERE (((((CAST(t1.c90 AS BLOB))OR(((NULL)|(t1.c90)))))AND((t1.c90 IN ())))) ORDER BY ((((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))OR(t1.c90)))OR(t1.c90))) IS FALSE) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c90 AS BLOB))OR(((NULL)|(t1.c90)))))AND((t1.c90 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))OR(t1.c90)))OR(t1.c90))) IS FALSE) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((CAST(t1.c90 AS BLOB))OR(((NULL)|(t1.c90)))))AND((t1.c90 IN ())))) ORDER BY ((((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))OR(t1.c90)))OR(t1.c90))) IS FALSE) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c90 AS BLOB))OR(((NULL)|(t1.c90)))))AND((t1.c90 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))OR(t1.c90)))OR(t1.c90))) IS FALSE) DESC  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM t1 WHERE (((((CAST(t1.c90 AS BLOB))OR(((NULL)|(t1.c90)))))AND((t1.c90 IN ())))) ORDER BY ((((((((((t1.c90)AND(t1.c90)))OR(t1.c90)))OR(t1.c90)))OR(t1.c90))) IS FALSE) DESC  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c2)/(vt0.c2)))) WHERE (((((vt0.c1)OR(t1.c90)))|(((t1.c90)>(vt0.c2))))) ORDER BY ((t1.c90) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(t1.c90)))|(((t1.c90)>(vt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c2)/(vt0.c2)))) ORDER BY ((t1.c90) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c2)/(vt0.c2)))) WHERE (((((vt0.c1)OR(t1.c90)))|(((t1.c90)>(vt0.c2))))) ORDER BY ((t1.c90) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(t1.c90)))|(((t1.c90)>(vt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c2)/(vt0.c2)))) ORDER BY ((t1.c90) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((vt0.c0 IN ())) BETWEEN ((- (vt0.c0))) AND (((vt0.c2)/(vt0.c2)))) WHERE (((((vt0.c1)OR(t1.c90)))|(((t1.c90)>(vt0.c2))))) ORDER BY ((t1.c90) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1) NOT NULL))) ASC;
SELECT * FROM t1 WHERE (((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))OR(t1.c90))) NOT BETWEEN (((t1.c90)+(x''))) AND ((+ (t1.c90))))) ORDER BY '\rッ{5R0' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))OR(t1.c90))) NOT BETWEEN (((t1.c90)+(x''))) AND ((+ (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY '\rッ{5R0' DESC);
SELECT * FROM t1 WHERE (((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))OR(t1.c90))) NOT BETWEEN (((t1.c90)+(x''))) AND ((+ (t1.c90))))) ORDER BY '\rッ{5R0' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))OR(t1.c90))) NOT BETWEEN (((t1.c90)+(x''))) AND ((+ (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY '\rッ{5R0' DESC);
SELECT * FROM t1 WHERE (((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))AND(t1.c90)))OR(t1.c90))) NOT BETWEEN (((t1.c90)+(x''))) AND ((+ (t1.c90))))) ORDER BY '\rッ{5R0' DESC;
SELECT COUNT(*) FROM vt0, t1 WHERE (x'1d46') ORDER BY ((CASE WHEN vt0.c0 THEN 0xffffffffca73a373 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE t1.c90 END) IS TRUE), ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (- (CAST(x'2647' AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'1d46') IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE WHEN vt0.c0 THEN 0xffffffffca73a373 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE t1.c90 END) IS TRUE), ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (- (CAST(x'2647' AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (x'1d46') ORDER BY ((CASE WHEN vt0.c0 THEN 0xffffffffca73a373 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE t1.c90 END) IS TRUE), ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (- (CAST(x'2647' AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'1d46') IS TRUE)  as count FROM vt0, t1 ORDER BY ((CASE WHEN vt0.c0 THEN 0xffffffffca73a373 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE t1.c90 END) IS TRUE), ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (- (CAST(x'2647' AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (x'1d46') ORDER BY ((CASE WHEN vt0.c0 THEN 0xffffffffca73a373 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE t1.c90 END) IS TRUE), ((vt0.c0) IS FALSE) COLLATE NOCASE  NULLS LAST, (- (CAST(x'2647' AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((NOT (t1.c90))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (((NOT (t1.c90))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((NOT (t1.c90))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (((NOT (t1.c90))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((vt0.c2 IN ())) ORDER BY (((NOT (t1.c90))) ISNULL);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((x'ff2f') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((x'ff2f') NOTNULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((x'ff2f') NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((x'ff2f') NOTNULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN (NULL) AND (((x'ff2f') NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c2 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c2 IN ()) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c2 IN ()) AS REAL));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN (vt0.c2, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c2 IN (vt0.c2, vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<=(vt0.c1))) IS TRUE)) ORDER BY IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())), RTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())), RTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<=(vt0.c1))) IS TRUE)) ORDER BY IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())), RTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())), RTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c2)<=(vt0.c1))) IS TRUE)) ORDER BY IFNULL((vt0.c1 IN ()), (vt0.c1 IN ())), RTRIM((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((0.049809350896877325 COLLATE NOCASE)<((+ (vt0.c2))))) ORDER BY CAST(0.9728433755617946 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.049809350896877325 COLLATE NOCASE)<((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(0.9728433755617946 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((0.049809350896877325 COLLATE NOCASE)<((+ (vt0.c2))))) ORDER BY CAST(0.9728433755617946 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.049809350896877325 COLLATE NOCASE)<((+ (vt0.c2))))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(0.9728433755617946 AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((0.049809350896877325 COLLATE NOCASE)<((+ (vt0.c2))))) ORDER BY CAST(0.9728433755617946 AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR('361906698'))))) ORDER BY ((NULL) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR('361906698'))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR('361906698'))))) ORDER BY ((NULL) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR('361906698'))))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NULL IN ()))<<(((((vt0.c2)AND(vt0.c1)))OR('361906698'))))) ORDER BY ((NULL) BETWEEN ((((vt0.c0))<((vt0.c1)))) AND (vt0.c1 COLLATE RTRIM));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (- (t1.c90 COLLATE NOCASE)) WHERE (((((vt0.c1) NOTNULL))-(vt0.c2 COLLATE NOCASE))) ORDER BY ((t1.c90) NOT BETWEEN (vt0.c1) AND (t1.c90)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))-(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (- (t1.c90 COLLATE NOCASE)) ORDER BY ((t1.c90) NOT BETWEEN (vt0.c1) AND (t1.c90)) COLLATE RTRIM);
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (- (t1.c90 COLLATE NOCASE)) WHERE (((((vt0.c1) NOTNULL))-(vt0.c2 COLLATE NOCASE))) ORDER BY ((t1.c90) NOT BETWEEN (vt0.c1) AND (t1.c90)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))-(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (- (t1.c90 COLLATE NOCASE)) ORDER BY ((t1.c90) NOT BETWEEN (vt0.c1) AND (t1.c90)) COLLATE RTRIM);
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (- (t1.c90 COLLATE NOCASE)) WHERE (((((vt0.c1) NOTNULL))-(vt0.c2 COLLATE NOCASE))) ORDER BY ((t1.c90) NOT BETWEEN (vt0.c1) AND (t1.c90)) COLLATE RTRIM;
SELECT ALL * FROM vt0, t1 WHERE (HEX(CASE WHEN NULL THEN x'499f' END)) ORDER BY ((((vt0.c1) ISNULL))GLOB(t1.c90 COLLATE BINARY)) DESC  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN NULL THEN x'499f' END)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c1) ISNULL))GLOB(t1.c90 COLLATE BINARY)) DESC  NULLS FIRST, x''  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (HEX(CASE WHEN NULL THEN x'499f' END)) ORDER BY ((((vt0.c1) ISNULL))GLOB(t1.c90 COLLATE BINARY)) DESC  NULLS FIRST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN NULL THEN x'499f' END)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((vt0.c1) ISNULL))GLOB(t1.c90 COLLATE BINARY)) DESC  NULLS FIRST, x''  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (HEX(CASE WHEN NULL THEN x'499f' END)) ORDER BY ((((vt0.c1) ISNULL))GLOB(t1.c90 COLLATE BINARY)) DESC  NULLS FIRST, x''  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c2)OR(vt0.c2)))IS(CASE WHEN t1.c90 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c2)))IS(CASE WHEN t1.c90 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c2)OR(vt0.c2)))IS(CASE WHEN t1.c90 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)OR(vt0.c2)))IS(CASE WHEN t1.c90 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c2)OR(vt0.c2)))IS(CASE WHEN t1.c90 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS REAL)  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS REAL)  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN CAST(vt0.c2 AS BLOB) THEN ((vt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((x'40cf2fdb')) BETWEEN ((((vt0.c2) NOTNULL))) AND ((vt0.c0)))) ORDER BY ((((vt0.c1)AND(((vt0.c2)&(t1.c90)))))AND((vt0.c2 IN ()))) ASC  NULLS FIRST, (((((t1.c90)==(t1.c90))))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((x'40cf2fdb')) BETWEEN ((((vt0.c2) NOTNULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)AND(((vt0.c2)&(t1.c90)))))AND((vt0.c2 IN ()))) ASC  NULLS FIRST, (((((t1.c90)=(t1.c90))))!=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((x'40cf2fdb')) BETWEEN ((((vt0.c2) NOTNULL))) AND ((vt0.c0)))) ORDER BY ((((vt0.c1)AND(((vt0.c2)&(t1.c90)))))AND((vt0.c2 IN ()))) ASC  NULLS FIRST, (((((t1.c90)==(t1.c90))))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((x'40cf2fdb')) BETWEEN ((((vt0.c2) NOTNULL))) AND ((vt0.c0)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)AND(((vt0.c2)&(t1.c90)))))AND((vt0.c2 IN ()))) ASC  NULLS FIRST, (((((t1.c90)=(t1.c90))))!=((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))));
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(UPPER(DISTINCT vt0.c1), ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UPPER(DISTINCT vt0.c1), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(UPPER(DISTINCT vt0.c1), ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UPPER(DISTINCT vt0.c1), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(UPPER(DISTINCT vt0.c1), ((vt0.c0) IS FALSE)));
SELECT * FROM t1, vt0 WHERE (((((((((UPPER(DISTINCT vt0.c2))OR(((vt0.c2)<>(t1.c90)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE WHEN 'q鶒qw0' THEN vt0.c2 END)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT vt0.c2))OR(((vt0.c2)!=(t1.c90)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE WHEN 'q鶒qw0' THEN vt0.c2 END)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((((UPPER(DISTINCT vt0.c2))OR(((vt0.c2)<>(t1.c90)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE WHEN 'q鶒qw0' THEN vt0.c2 END)))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((UPPER(DISTINCT vt0.c2))OR(((vt0.c2)!=(t1.c90)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE WHEN 'q鶒qw0' THEN vt0.c2 END)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((((UPPER(DISTINCT vt0.c2))OR(((vt0.c2)<>(t1.c90)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE WHEN 'q鶒qw0' THEN vt0.c2 END)))OR((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(t1.c90))  WHEN t1.c90 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c0) AND (t1.c90)) ELSE ((vt0.c0)<(vt0.c2)) END) ORDER BY ((((vt0.c1) NOT NULL)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(t1.c90))  WHEN t1.c90 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c0) AND (t1.c90)) ELSE ((vt0.c0)<(vt0.c2)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1) NOT NULL)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(t1.c90))  WHEN t1.c90 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c0) AND (t1.c90)) ELSE ((vt0.c0)<(vt0.c2)) END) ORDER BY ((((vt0.c1) NOT NULL)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)OR(vt0.c0)))AND(t1.c90))  WHEN t1.c90 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c0) AND (t1.c90)) ELSE ((vt0.c0)<(vt0.c2)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1) NOT NULL)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c0)))AND(t1.c90))  WHEN t1.c90 COLLATE NOCASE THEN ((vt0.c2) BETWEEN (vt0.c0) AND (t1.c90)) ELSE ((vt0.c0)<(vt0.c2)) END) ORDER BY ((((vt0.c1) NOT NULL)) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN (t1.c90))) IS FALSE)) ORDER BY (NOT (((t1.c90)IS NOT(t1.c90)))), ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)<=(CAST(t1.c90 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN (t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (NOT (((t1.c90)IS NOT(t1.c90)))), ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)<=(CAST(t1.c90 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN (t1.c90))) IS FALSE)) ORDER BY (NOT (((t1.c90)IS NOT(t1.c90)))), ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)<=(CAST(t1.c90 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN (t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY (NOT (((t1.c90)IS NOT(t1.c90)))), ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)<=(CAST(t1.c90 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c90 IN (t1.c90))) IS FALSE)) ORDER BY (NOT (((t1.c90)IS NOT(t1.c90)))), ((CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)<=(CAST(t1.c90 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON vt0.c1 WHERE (((((vt0.c1) IS TRUE))>=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))>=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON vt0.c1 WHERE (((((vt0.c1) IS TRUE))>=(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))>=(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON vt0.c1);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON vt0.c1 WHERE (((((vt0.c1) IS TRUE))>=(((vt0.c0) ISNULL))));
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1 IN ())))!=(((vt0.c2 IN ()))))) ORDER BY (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))<>(((vt0.c2 IN ()))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c0)))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1 IN ())))!=(((vt0.c2 IN ()))))) ORDER BY (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))<>(((vt0.c2 IN ()))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c0)))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1 IN ())))!=(((vt0.c2 IN ()))))) ORDER BY (((((vt0.c0)) BETWEEN ((t1.c90)) AND ((vt0.c0)))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) BETWEEN (((((((((t1.c90)AND(vt0.c0)))OR(vt0.c2)))AND(t1.c90)))OR(vt0.c0))) AND ((('VQIz労Qkd')&(vt0.c1)))) WHERE ((((vt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) BETWEEN (((((((((t1.c90)AND(vt0.c0)))OR(vt0.c2)))AND(t1.c90)))OR(vt0.c0))) AND ((('VQIz労Qkd')&(vt0.c1)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) BETWEEN (((((((((t1.c90)AND(vt0.c0)))OR(vt0.c2)))AND(t1.c90)))OR(vt0.c0))) AND ((('VQIz労Qkd')&(vt0.c1)))) WHERE ((((vt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) BETWEEN (((((((((t1.c90)AND(vt0.c0)))OR(vt0.c2)))AND(t1.c90)))OR(vt0.c0))) AND ((('VQIz労Qkd')&(vt0.c1)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY) BETWEEN (((((((((t1.c90)AND(vt0.c0)))OR(vt0.c2)))AND(t1.c90)))OR(vt0.c0))) AND ((('VQIz労Qkd')&(vt0.c1)))) WHERE ((((vt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c1) THEN ((vt0.c2)|(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1)|(vt0.c2)) THEN (((vt0.c0))<((vt0.c2))) END) ORDER BY 0.47377492436800295;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt0.c1) THEN ((vt0.c2)|(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1)|(vt0.c2)) THEN (((vt0.c0))<((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY 0.47377492436800295);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c1) THEN ((vt0.c2)|(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1)|(vt0.c2)) THEN (((vt0.c0))<((vt0.c2))) END) ORDER BY 0.47377492436800295;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt0.c1) THEN ((vt0.c2)|(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1)|(vt0.c2)) THEN (((vt0.c0))<((vt0.c2))) END) IS TRUE)  as count FROM vt0 ORDER BY 0.47377492436800295);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ABS(vt0.c1) THEN ((vt0.c2)|(vt0.c1)) WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c0 END THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1)|(vt0.c2)) THEN (((vt0.c0))<((vt0.c2))) END) ORDER BY 0.47377492436800295;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c90)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ISNULL) WHERE (((t1.c90 IN ()) IN (((0.2907941064543724) NOT NULL), ((vt0.c1)<=(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90 IN ()) IN (((0.2907941064543724) NOT NULL), ((vt0.c1)<=(t1.c90))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c90)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ISNULL));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c90)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ISNULL) WHERE (((t1.c90 IN ()) IN (((0.2907941064543724) NOT NULL), ((vt0.c1)<=(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90 IN ()) IN (((0.2907941064543724) NOT NULL), ((vt0.c1)<=(t1.c90))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c90)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ISNULL));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c90)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ISNULL) WHERE (((t1.c90 IN ()) IN (((0.2907941064543724) NOT NULL), ((vt0.c1)<=(t1.c90)))));
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) IS TRUE)) ORDER BY (- (((t1.c90)&(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>>(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY (- (((t1.c90)&(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) IS TRUE)) ORDER BY (- (((t1.c90)&(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)>>(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY (- (((t1.c90)&(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c2)>>(vt0.c2))) IS TRUE)) ORDER BY (- (((t1.c90)&(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON 0X185ae8c WHERE (t1.c90) ORDER BY NULLIF(vt0.c0, vt0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON 0x185ae8c ORDER BY NULLIF(vt0.c0, vt0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON 0X185ae8c WHERE (t1.c90) ORDER BY NULLIF(vt0.c0, vt0.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON 0x185ae8c ORDER BY NULLIF(vt0.c0, vt0.c0) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON 0X185ae8c WHERE (t1.c90) ORDER BY NULLIF(vt0.c0, vt0.c0) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1)<=(vt0.c2)))<=((- (vt0.c0))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c2)))<=((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1)<=(vt0.c2)))<=((- (vt0.c0))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c2)))<=((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c1)<=(vt0.c2)))<=((- (vt0.c0))))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (CAST(CASE t1.c90  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN 0.5385799214735626 WHEN vt0.c2 THEN t1.c90 ELSE vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c90  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN 0.5385799214735626 WHEN vt0.c2 THEN t1.c90 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CAST(CASE t1.c90  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN 0.5385799214735626 WHEN vt0.c2 THEN t1.c90 ELSE vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c90  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN 0.5385799214735626 WHEN vt0.c2 THEN t1.c90 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CAST(CASE t1.c90  WHEN vt0.c0 THEN vt0.c2 WHEN t1.c90 THEN 0.5385799214735626 WHEN vt0.c2 THEN t1.c90 ELSE vt0.c1 END AS REAL));
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(0.11583098323877139 AS BLOB))/((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.11583098323877139 AS BLOB))/((+ (t1.c90))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(0.11583098323877139 AS BLOB))/((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.11583098323877139 AS BLOB))/((+ (t1.c90))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(0.11583098323877139 AS BLOB))/((+ (t1.c90)))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((INSTR(vt0.c1, t1.c90)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((INSTR(vt0.c1, t1.c90)) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((INSTR(vt0.c1, t1.c90)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((INSTR(vt0.c1, t1.c90)) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((INSTR(vt0.c1, t1.c90)) IS FALSE));
SELECT ALL * FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))==(((((t1.c90)OR(t1.c90)))AND(t1.c90))))) ORDER BY ((t1.c90)=(t1.c90 COLLATE BINARY)), t1.c90 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))==(((((t1.c90)OR(t1.c90)))AND(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90)=(t1.c90 COLLATE BINARY)), t1.c90 DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))==(((((t1.c90)OR(t1.c90)))AND(t1.c90))))) ORDER BY ((t1.c90)=(t1.c90 COLLATE BINARY)), t1.c90 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))==(((((t1.c90)OR(t1.c90)))AND(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90)=(t1.c90 COLLATE BINARY)), t1.c90 DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))==(((((t1.c90)OR(t1.c90)))AND(t1.c90))))) ORDER BY ((t1.c90)=(t1.c90 COLLATE BINARY)), t1.c90 DESC;
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))));
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)=(0Xffffffffde4b52d9)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)=(0Xffffffffde4b52d9))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)=(0Xffffffffde4b52d9)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)=(0Xffffffffde4b52d9))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)=(0Xffffffffde4b52d9)));
SELECT ALL * FROM t1 WHERE (t1.c90) ORDER BY TRIM(CASE 0.995468756324762  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END, ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 ORDER BY TRIM(CASE 0.995468756324762  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END, ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c90) ORDER BY TRIM(CASE 0.995468756324762  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END, ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 ORDER BY TRIM(CASE 0.995468756324762  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END, ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c90) ORDER BY TRIM(CASE 0.995468756324762  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END, ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(x'')) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))AND(x'')) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(x'')) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))AND(x'')) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c1)OR(vt0.c1)))AND(x'')) IN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 WHERE (NULLIF(t1.c90 COLLATE RTRIM, (((t1.c90, t1.c90, t1.c90))>=((t1.c90, t1.c90, t1.c90)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(t1.c90 COLLATE RTRIM, (((t1.c90, t1.c90, t1.c90))>=((t1.c90, t1.c90, t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULLIF(t1.c90 COLLATE RTRIM, (((t1.c90, t1.c90, t1.c90))>=((t1.c90, t1.c90, t1.c90)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(t1.c90 COLLATE RTRIM, (((t1.c90, t1.c90, t1.c90))>=((t1.c90, t1.c90, t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (NULLIF(t1.c90 COLLATE RTRIM, (((t1.c90, t1.c90, t1.c90))>=((t1.c90, t1.c90, t1.c90)))));
SELECT ALL * FROM t1 WHERE (((((((t1.c90)OR(t1.c90)))AND(t1.c90)))*(((t1.c90) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))*(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((t1.c90)OR(t1.c90)))AND(t1.c90)))*(((t1.c90) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))*(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((t1.c90)OR(t1.c90)))AND(t1.c90)))*(((t1.c90) NOT NULL))));
SELECT * FROM t1 WHERE (((((t1.c90)LIKE(t1.c90))) NOT BETWEEN (CAST(t1.c90 AS INTEGER)) AND (LIKELIHOOD(t1.c90, 0.6614775277392503)))) ORDER BY (((((t1.c90))=((t1.c90)))) BETWEEN (((((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) AND (((t1.c90) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c90)LIKE(t1.c90))) NOT BETWEEN (CAST(t1.c90 AS INTEGER)) AND (LIKELIHOOD(t1.c90, 0.6614775277392503)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))==((t1.c90)))) BETWEEN (((((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) AND (((t1.c90) NOTNULL))) ASC);
SELECT * FROM t1 WHERE (((((t1.c90)LIKE(t1.c90))) NOT BETWEEN (CAST(t1.c90 AS INTEGER)) AND (LIKELIHOOD(t1.c90, 0.6614775277392503)))) ORDER BY (((((t1.c90))=((t1.c90)))) BETWEEN (((((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) AND (((t1.c90) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c90)LIKE(t1.c90))) NOT BETWEEN (CAST(t1.c90 AS INTEGER)) AND (LIKELIHOOD(t1.c90, 0.6614775277392503)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))==((t1.c90)))) BETWEEN (((((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) AND (((t1.c90) NOTNULL))) ASC);
SELECT * FROM t1 WHERE (((((t1.c90)LIKE(t1.c90))) NOT BETWEEN (CAST(t1.c90 AS INTEGER)) AND (LIKELIHOOD(t1.c90, 0.6614775277392503)))) ORDER BY (((((t1.c90))=((t1.c90)))) BETWEEN (((((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) AND (((t1.c90) NOTNULL))) ASC;
SELECT ALL * FROM t1 WHERE (((x'')GLOB(((x'f5ba') BETWEEN (t1.c90) AND (t1.c90))))) ORDER BY 0.5220817023888723  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(((x'f5ba') BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY 0.5220817023888723  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((x'')GLOB(((x'f5ba') BETWEEN (t1.c90) AND (t1.c90))))) ORDER BY 0.5220817023888723  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(((x'f5ba') BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY 0.5220817023888723  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((x'')GLOB(((x'f5ba') BETWEEN (t1.c90) AND (t1.c90))))) ORDER BY 0.5220817023888723  NULLS FIRST;
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND ((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0);
SELECT * FROM t1 NATURAL JOIN vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) AND ((vt0.c1 COLLATE BINARY))));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))IS NOT(((((t1.c90)OR('-805835846')))OR(t1.c90))))) ORDER BY ((((((t1.c90)OR(t1.c90)))OR(t1.c90)))<((t1.c90 IN (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c90 AS BLOB))IS NOT(((((t1.c90)OR('-805835846')))OR(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c90)OR(t1.c90)))OR(t1.c90)))<((t1.c90 IN (t1.c90))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))IS NOT(((((t1.c90)OR('-805835846')))OR(t1.c90))))) ORDER BY ((((((t1.c90)OR(t1.c90)))OR(t1.c90)))<((t1.c90 IN (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c90 AS BLOB))IS NOT(((((t1.c90)OR('-805835846')))OR(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c90)OR(t1.c90)))OR(t1.c90)))<((t1.c90 IN (t1.c90))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c90 AS BLOB))IS NOT(((((t1.c90)OR('-805835846')))OR(t1.c90))))) ORDER BY ((((((t1.c90)OR(t1.c90)))OR(t1.c90)))<((t1.c90 IN (t1.c90))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY (((((((t1.c90)OR(vt0.c0)))AND(t1.c90))))<=(((((vt0.c0))==((vt0.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((((t1.c90)OR(vt0.c0)))AND(t1.c90))))<=(((((vt0.c0))=((vt0.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY (((((((t1.c90)OR(vt0.c0)))AND(t1.c90))))<=(((((vt0.c0))==((vt0.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LOWER(vt0.c0) IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((((t1.c90)OR(vt0.c0)))AND(t1.c90))))<=(((((vt0.c0))=((vt0.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((LOWER(vt0.c0) IN ())) ORDER BY (((((((t1.c90)OR(vt0.c0)))AND(t1.c90))))<=(((((vt0.c0))==((vt0.c1)))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c2 COLLATE BINARY WHERE (CAST('누]SJ' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('누]SJ' AS NUMERIC)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c2 COLLATE BINARY);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c2 COLLATE BINARY WHERE (CAST('누]SJ' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST('누]SJ' AS NUMERIC)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c2 COLLATE BINARY);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c2 COLLATE BINARY WHERE (CAST('누]SJ' AS NUMERIC));
SELECT * FROM t1 WHERE ((NOT (((t1.c90)-(t1.c90))))) ORDER BY ((t1.c90) ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c90)-(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) ISNULL) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((NOT (((t1.c90)-(t1.c90))))) ORDER BY ((t1.c90) ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c90)-(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) ISNULL) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((NOT (((t1.c90)-(t1.c90))))) ORDER BY ((t1.c90) ISNULL) COLLATE RTRIM;
SELECT ALL * FROM vt0, t1 WHERE ((~ (TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((~ (TYPEOF(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((~ (TYPEOF(DISTINCT vt0.c0))));
SELECT ALL * FROM vt0, t1 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c1)*(vt0.c1)) AS INTEGER)  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)*(vt0.c1)) AS INTEGER)  NULLS LAST, vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c1)*(vt0.c1)) AS INTEGER)  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)*(vt0.c1)) AS INTEGER)  NULLS LAST, vt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) AS REAL)) ORDER BY CAST(((vt0.c1)*(vt0.c1)) AS INTEGER)  NULLS LAST, vt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((((1e500 IN ())) BETWEEN ((- (vt0.c1))) AND ((0.8710484310967723 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((1e500 IN ())) BETWEEN ((- (vt0.c1))) AND ((0.8710484310967723 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((1e500 IN ())) BETWEEN ((- (vt0.c1))) AND ((0.8710484310967723 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((1e500 IN ())) BETWEEN ((- (vt0.c1))) AND ((0.8710484310967723 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((1e500 IN ())) BETWEEN ((- (vt0.c1))) AND ((0.8710484310967723 IN ()))));
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT ALL * FROM t1 WHERE ((t1.c90 IN (CASE t1.c90  WHEN t1.c90 THEN x'' ELSE t1.c90 END))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((t1.c90 IN (CASE t1.c90  WHEN t1.c90 THEN x'' ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC);
SELECT ALL * FROM t1 WHERE ((t1.c90 IN (CASE t1.c90  WHEN t1.c90 THEN x'' ELSE t1.c90 END))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((t1.c90 IN (CASE t1.c90  WHEN t1.c90 THEN x'' ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC);
SELECT ALL * FROM t1 WHERE ((t1.c90 IN (CASE t1.c90  WHEN t1.c90 THEN x'' ELSE t1.c90 END))) ORDER BY x'' ASC;
SELECT * FROM vt0 WHERE (((((((((0xfffffffff6bde424)OR(0.4810625103749602 COLLATE BINARY)))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt0.c0)>('-302142435')))))OR(((vt0.c2)-(NULL))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xfffffffff6bde424)OR(0.4810625103749602 COLLATE BINARY)))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt0.c0)>('-302142435')))))OR(((vt0.c2)-(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()));
SELECT * FROM vt0 WHERE (((((((((0xfffffffff6bde424)OR(0.4810625103749602 COLLATE BINARY)))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt0.c0)>('-302142435')))))OR(((vt0.c2)-(NULL))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((0Xfffffffff6bde424)OR(0.4810625103749602 COLLATE BINARY)))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt0.c0)>('-302142435')))))OR(((vt0.c2)-(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN ()));
SELECT * FROM vt0 WHERE (((((((((0xfffffffff6bde424)OR(0.4810625103749602 COLLATE BINARY)))AND(CASE WHEN vt0.c2 THEN vt0.c0 END)))OR(((vt0.c0)>('-302142435')))))OR(((vt0.c2)-(NULL))))) ORDER BY (CAST(vt0.c1 AS REAL) IN ());
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c2) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c2) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c2) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c2) ORDER BY ((vt0.c2) IS TRUE) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (CASE WHEN 0.8728486444082681 THEN NULL ELSE vt0.c1 END) AND ((NOT (vt0.c0)))) WHERE ((+ (CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (CASE WHEN 0.8728486444082681 THEN NULL ELSE vt0.c1 END) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (CASE WHEN 0.8728486444082681 THEN NULL ELSE vt0.c1 END) AND ((NOT (vt0.c0)))) WHERE ((+ (CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (CASE WHEN 0.8728486444082681 THEN NULL ELSE vt0.c1 END) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c2) NOT BETWEEN (CASE WHEN 0.8728486444082681 THEN NULL ELSE vt0.c1 END) AND ((NOT (vt0.c0)))) WHERE ((+ (CASE vt0.c0  WHEN NULL THEN vt0.c2 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (- (CAST(vt0.c2 AS NUMERIC))) WHERE (UPPER((vt0.c0 IN (vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((vt0.c0 IN (vt0.c1, vt0.c1)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (- (CAST(vt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (- (CAST(vt0.c2 AS NUMERIC))) WHERE (UPPER((vt0.c0 IN (vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((vt0.c0 IN (vt0.c1, vt0.c1)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (- (CAST(vt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (- (CAST(vt0.c2 AS NUMERIC))) WHERE (UPPER((vt0.c0 IN (vt0.c1, vt0.c1))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'') ISNULL))) WHERE (TRIM(DISTINCT ((((NULL)OR(2.057571235E9)))OR(vt0.c1)), 0.23278660062048395)) ORDER BY (NOT (((vt0.c2)+(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((NULL)OR(2.057571235E9)))OR(vt0.c1)), 0.23278660062048395)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'') ISNULL))) ORDER BY (NOT (((vt0.c2)+(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'') ISNULL))) WHERE (TRIM(DISTINCT ((((NULL)OR(2.057571235E9)))OR(vt0.c1)), 0.23278660062048395)) ORDER BY (NOT (((vt0.c2)+(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((NULL)OR(2.057571235E9)))OR(vt0.c1)), 0.23278660062048395)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'') ISNULL))) ORDER BY (NOT (((vt0.c2)+(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((vt0.c0) IS TRUE)) AND (((x'') ISNULL))) WHERE (TRIM(DISTINCT ((((NULL)OR(2.057571235E9)))OR(vt0.c1)), 0.23278660062048395)) ORDER BY (NOT (((vt0.c2)+(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (vt0.c1))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (vt0.c1))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c1 ASC);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ (vt0.c1))) ORDER BY vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c2)))OR(((vt0.c2)==(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))OR(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (NULL))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)IS(vt0.c2)))OR(((vt0.c2)=(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))OR(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (NULL))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c2)))OR(((vt0.c2)==(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))OR(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (NULL))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)IS(vt0.c2)))OR(((vt0.c2)=(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))OR(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (NULL))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)IS(vt0.c2)))OR(((vt0.c2)==(vt0.c1)))))AND((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))OR(((vt0.c0)<(vt0.c0)))))AND(((((vt0.c2)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY ((((vt0.c2) BETWEEN (vt0.c2) AND (NULL))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c90 END)<<(vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c90 END)<<(vt0.c2)) DESC);
SELECT ALL * FROM t1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c90 END)<<(vt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c90 END)<<(vt0.c2)) DESC);
SELECT ALL * FROM t1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t1.c90 END)<<(vt0.c2)) DESC;
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('-1595655102') ISNULL) ASC, ((((((((((vt0.c0) NOT BETWEEN (t1.c90) AND (t1.c90)))OR(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((~ (vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY (('-1595655102') ISNULL) ASC, ((((((((((vt0.c0) NOT BETWEEN (t1.c90) AND (t1.c90)))OR(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((~ (vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('-1595655102') ISNULL) ASC, ((((((((((vt0.c0) NOT BETWEEN (t1.c90) AND (t1.c90)))OR(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((~ (vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY (('-1595655102') ISNULL) ASC, ((((((((((vt0.c0) NOT BETWEEN (t1.c90) AND (t1.c90)))OR(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((~ (vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c0) ORDER BY (('-1595655102') ISNULL) ASC, ((((((((((vt0.c0) NOT BETWEEN (t1.c90) AND (t1.c90)))OR(((vt0.c1) IS TRUE))))OR(vt0.c0 COLLATE BINARY)))OR((~ (vt0.c2)))))AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((('\g')>=(t1.c90))) ORDER BY (((CAST(t1.c90 AS REAL)))>=((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((('\g')>=(t1.c90))) IS TRUE)  as count FROM t1 ORDER BY (((CAST(t1.c90 AS REAL)))>=((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90))))));
SELECT COUNT(*) FROM t1 WHERE ((('\g')>=(t1.c90))) ORDER BY (((CAST(t1.c90 AS REAL)))>=((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((('\g')>=(t1.c90))) IS TRUE)  as count FROM t1 ORDER BY (((CAST(t1.c90 AS REAL)))>=((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90))))));
SELECT COUNT(*) FROM t1 WHERE ((('\g')>=(t1.c90))) ORDER BY (((CAST(t1.c90 AS REAL)))>=((((((((((t1.c90)OR(t1.c90)))OR(t1.c90)))OR(t1.c90)))AND(t1.c90)))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((vt0.c1 IN ())) ORDER BY COALESCE(DISTINCT t1.c90 COLLATE NOCASE, vt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY COALESCE(DISTINCT t1.c90 COLLATE NOCASE, vt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((vt0.c1 IN ())) ORDER BY COALESCE(DISTINCT t1.c90 COLLATE NOCASE, vt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY COALESCE(DISTINCT t1.c90 COLLATE NOCASE, vt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((vt0.c1 IN ())) ORDER BY COALESCE(DISTINCT t1.c90 COLLATE NOCASE, vt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN '!ie[' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 9.3741957E7 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN json_patch(0Xffffffff915d5848, vt0.c1) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0)IS NOT(vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c1 THEN '!ie[' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 9.3741957E7 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN json_patch(0xffffffff915d5848, vt0.c1) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0)IS NOT(vt0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN '!ie[' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 9.3741957E7 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN json_patch(0Xffffffff915d5848, vt0.c1) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0)IS NOT(vt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE vt0.c0  WHEN vt0.c1 THEN '!ie[' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 9.3741957E7 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN json_patch(0xffffffff915d5848, vt0.c1) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0)IS NOT(vt0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c1 THEN '!ie[' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 9.3741957E7 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END))) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c2)<(vt0.c0)) WHEN json_patch(0Xffffffff915d5848, vt0.c1) THEN CAST(vt0.c2 AS BLOB) WHEN ((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c1 AS INTEGER) ELSE ((vt0.c0)IS NOT(vt0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((NULL))>((((t1.c90)-(t1.c90)))))) ORDER BY (((((((((t1.c90 IN (t1.c90)))OR(ABS(DISTINCT t1.c90))))OR(CAST(t1.c90 AS NUMERIC))))OR(t1.c90)))AND(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>((((t1.c90)-(t1.c90)))))) IS TRUE)  as count FROM t1 ORDER BY (((((((((t1.c90 IN (t1.c90)))OR(ABS(DISTINCT t1.c90))))OR(CAST(t1.c90 AS NUMERIC))))OR(t1.c90)))AND(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)))));
SELECT ALL * FROM t1 WHERE ((((NULL))>((((t1.c90)-(t1.c90)))))) ORDER BY (((((((((t1.c90 IN (t1.c90)))OR(ABS(DISTINCT t1.c90))))OR(CAST(t1.c90 AS NUMERIC))))OR(t1.c90)))AND(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>((((t1.c90)-(t1.c90)))))) IS TRUE)  as count FROM t1 ORDER BY (((((((((t1.c90 IN (t1.c90)))OR(ABS(DISTINCT t1.c90))))OR(CAST(t1.c90 AS NUMERIC))))OR(t1.c90)))AND(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)))));
SELECT ALL * FROM t1 WHERE ((((NULL))>((((t1.c90)-(t1.c90)))))) ORDER BY (((((((((t1.c90 IN (t1.c90)))OR(ABS(DISTINCT t1.c90))))OR(CAST(t1.c90 AS NUMERIC))))OR(t1.c90)))AND(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))));
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR((('4,')>>(vt0.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((t1.c90)=(vt0.c1)))*(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR((('4,')>>(vt0.c1)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON x'' ORDER BY ((((t1.c90)==(vt0.c1)))*(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) DESC);
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR((('4,')>>(vt0.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((t1.c90)=(vt0.c1)))*(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR((('4,')>>(vt0.c1)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON x'' ORDER BY ((((t1.c90)==(vt0.c1)))*(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) DESC);
SELECT * FROM vt0 CROSS JOIN t1 ON x'' WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR((('4,')>>(vt0.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY ((((t1.c90)=(vt0.c1)))*(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) DESC;
SELECT ALL * FROM t1 NOT INDEXED, vt0 WHERE ((((vt0.c2 COLLATE NOCASE, -8.95027437E8, (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c1))<=((t1.c90, vt0.c1, t1.c90, vt0.c1, vt0.c0)))))<((CAST(x'' AS BLOB), CAST(vt0.c0 AS REAL), (((vt0.c2, t1.c90, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, t1.c90)) AND ((vt0.c2, vt0.c1, vt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 COLLATE NOCASE, -8.95027437E8, (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c1))<=((t1.c90, vt0.c1, t1.c90, vt0.c1, vt0.c0)))))<((CAST(x'' AS BLOB), CAST(vt0.c0 AS REAL), (((vt0.c2, t1.c90, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, t1.c90)) AND ((vt0.c2, vt0.c1, vt0.c2))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt0 WHERE ((((vt0.c2 COLLATE NOCASE, -8.95027437E8, (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c1))<=((t1.c90, vt0.c1, t1.c90, vt0.c1, vt0.c0)))))<((CAST(x'' AS BLOB), CAST(vt0.c0 AS REAL), (((vt0.c2, t1.c90, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, t1.c90)) AND ((vt0.c2, vt0.c1, vt0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 COLLATE NOCASE, -8.95027437E8, (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c1))<=((t1.c90, vt0.c1, t1.c90, vt0.c1, vt0.c0)))))<((CAST(x'' AS BLOB), CAST(vt0.c0 AS REAL), (((vt0.c2, t1.c90, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, t1.c90)) AND ((vt0.c2, vt0.c1, vt0.c2))))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt0 WHERE ((((vt0.c2 COLLATE NOCASE, -8.95027437E8, (((vt0.c2, vt0.c2, vt0.c0, vt0.c1, vt0.c1))<=((t1.c90, vt0.c1, t1.c90, vt0.c1, vt0.c0)))))<((CAST(x'' AS BLOB), CAST(vt0.c0 AS REAL), (((vt0.c2, t1.c90, vt0.c2)) NOT BETWEEN ((t1.c90, vt0.c2, t1.c90)) AND ((vt0.c2, vt0.c1, vt0.c2)))))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT '0.19975908168881573')) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (t1.c90) AND (vt0.c1)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT '0.19975908168881573')) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (t1.c90) AND (vt0.c1)) THEN vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT '0.19975908168881573')) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (t1.c90) AND (vt0.c1)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT '0.19975908168881573')) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (t1.c90) AND (vt0.c1)) THEN vt0.c0 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT '0.19975908168881573')) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (t1.c90) AND (vt0.c1)) THEN vt0.c0 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((t1.c90) NOT NULL))AND((- (t1.c90)))))OR(CASE WHEN t1.c90 THEN vt0.c1 ELSE t1.c90 END))) ORDER BY (~ (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c90) NOT NULL))AND((- (t1.c90)))))OR(CASE WHEN t1.c90 THEN vt0.c1 ELSE t1.c90 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (((vt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((t1.c90) NOT NULL))AND((- (t1.c90)))))OR(CASE WHEN t1.c90 THEN vt0.c1 ELSE t1.c90 END))) ORDER BY (~ (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t1.c90) NOT NULL))AND((- (t1.c90)))))OR(CASE WHEN t1.c90 THEN vt0.c1 ELSE t1.c90 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY (~ (((vt0.c1) IS FALSE))) DESC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((t1.c90) NOT NULL))AND((- (t1.c90)))))OR(CASE WHEN t1.c90 THEN vt0.c1 ELSE t1.c90 END))) ORDER BY (~ (((vt0.c1) IS FALSE))) DESC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((((((t1.c90)OR(t1.c90)))OR(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((t1.c90) IS TRUE))) AND (((((vt0.c0)) BETWEEN ((NULL)) AND ((x'e034'))), ((vt0.c0)-(vt0.c1)), (t1.c90 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((((((t1.c90)OR(t1.c90)))OR(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((t1.c90) IS TRUE))) AND (((((vt0.c0)) BETWEEN ((NULL)) AND ((x'e034'))), ((vt0.c0)-(vt0.c1)), (t1.c90 IN ()))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((((((t1.c90)OR(t1.c90)))OR(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((t1.c90) IS TRUE))) AND (((((vt0.c0)) BETWEEN ((NULL)) AND ((x'e034'))), ((vt0.c0)-(vt0.c1)), (t1.c90 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((((((t1.c90)OR(t1.c90)))OR(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((t1.c90) IS TRUE))) AND (((((vt0.c0)) BETWEEN ((NULL)) AND ((x'e034'))), ((vt0.c0)-(vt0.c1)), (t1.c90 IN ()))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((vt0.c1, vt0.c2, vt0.c1)) NOT BETWEEN ((((((t1.c90)OR(t1.c90)))OR(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((t1.c90) IS TRUE))) AND (((((vt0.c0)) BETWEEN ((NULL)) AND ((x'e034'))), ((vt0.c0)-(vt0.c1)), (t1.c90 IN ())))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((x'')OR(vt0.c2)))OR(x'772b')))OR(((vt0.c2)GLOB(0Xffffffffa89ccb7e)))))OR(((vt0.c2)>>(vt0.c0)))) WHERE (((((vt0.c1) NOT NULL))%((((t1.c90, vt0.c2, NULL))<=((vt0.c1, t1.c90, t1.c90))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))%((((t1.c90, vt0.c2, NULL))<=((vt0.c1, t1.c90, t1.c90)))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((((((((x'')OR(vt0.c2)))OR(x'772b')))OR(((vt0.c2)GLOB(0xffffffffa89ccb7e)))))OR(((vt0.c2)>>(vt0.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((x'')OR(vt0.c2)))OR(x'772b')))OR(((vt0.c2)GLOB(0Xffffffffa89ccb7e)))))OR(((vt0.c2)>>(vt0.c0)))) WHERE (((((vt0.c1) NOT NULL))%((((t1.c90, vt0.c2, NULL))<=((vt0.c1, t1.c90, t1.c90))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))%((((t1.c90, vt0.c2, NULL))<=((vt0.c1, t1.c90, t1.c90)))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((((((((x'')OR(vt0.c2)))OR(x'772b')))OR(((vt0.c2)GLOB(0xffffffffa89ccb7e)))))OR(((vt0.c2)>>(vt0.c0)))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((((((((x'')OR(vt0.c2)))OR(x'772b')))OR(((vt0.c2)GLOB(0Xffffffffa89ccb7e)))))OR(((vt0.c2)>>(vt0.c0)))) WHERE (((((vt0.c1) NOT NULL))%((((t1.c90, vt0.c2, NULL))<=((vt0.c1, t1.c90, t1.c90))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c90)))|(t1.c90))) ORDER BY (+ (CAST(t1.c90 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c90)))|(t1.c90))) IS TRUE)  as count FROM t1 ORDER BY (+ (CAST(t1.c90 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c90)))|(t1.c90))) ORDER BY (+ (CAST(t1.c90 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c90)))|(t1.c90))) IS TRUE)  as count FROM t1 ORDER BY (+ (CAST(t1.c90 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c90)))|(t1.c90))) ORDER BY (+ (CAST(t1.c90 AS INTEGER)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c1)==(vt0.c0))) NOT BETWEEN (CASE x'87b5'  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c1 END) AND (((t1.c90)GLOB(vt0.c0)))) WHERE (((((((((((((t1.c90)OR(vt0.c1)))AND(vt0.c0)))OR(t1.c90)))OR(vt0.c2)))AND((- (vt0.c2)))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY 0.2077404114947291 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c90)OR(vt0.c1)))AND(vt0.c0)))OR(t1.c90)))OR(vt0.c2)))AND((- (vt0.c2)))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c1)=(vt0.c0))) NOT BETWEEN (CASE x'87b5'  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c1 END) AND (((t1.c90)GLOB(vt0.c0)))) ORDER BY 0.2077404114947291 ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c1)==(vt0.c0))) NOT BETWEEN (CASE x'87b5'  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c1 END) AND (((t1.c90)GLOB(vt0.c0)))) WHERE (((((((((((((t1.c90)OR(vt0.c1)))AND(vt0.c0)))OR(t1.c90)))OR(vt0.c2)))AND((- (vt0.c2)))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY 0.2077404114947291 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c90)OR(vt0.c1)))AND(vt0.c0)))OR(t1.c90)))OR(vt0.c2)))AND((- (vt0.c2)))))AND(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c1)=(vt0.c0))) NOT BETWEEN (CASE x'87b5'  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c1 END) AND (((t1.c90)GLOB(vt0.c0)))) ORDER BY 0.2077404114947291 ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON ((((vt0.c1)==(vt0.c0))) NOT BETWEEN (CASE x'87b5'  WHEN vt0.c1 THEN t1.c90 ELSE vt0.c1 END) AND (((t1.c90)GLOB(vt0.c0)))) WHERE (((((((((((((t1.c90)OR(vt0.c1)))AND(vt0.c0)))OR(t1.c90)))OR(vt0.c2)))AND((- (vt0.c2)))))AND(CAST(vt0.c2 AS REAL)))) ORDER BY 0.2077404114947291 ASC;
SELECT * FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7718416575238047)) ORDER BY -1023087378 ASC  NULLS FIRST, ((((vt0.c2) IS FALSE))<(((x'') IS TRUE))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7718416575238047)) IS TRUE)  as count FROM vt0 ORDER BY -1023087378 ASC  NULLS FIRST, ((((vt0.c2) IS FALSE))<(((x'') IS TRUE))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (NULL)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7718416575238047)) ORDER BY -1023087378 ASC  NULLS FIRST, ((((vt0.c2) IS FALSE))<(((x'') IS TRUE))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7718416575238047)) IS TRUE)  as count FROM vt0 ORDER BY -1023087378 ASC  NULLS FIRST, ((((vt0.c2) IS FALSE))<(((x'') IS TRUE))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN (((vt0.c2) NOT NULL)) AND (NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c2)>=(0xffffffffa3dfa275)))GLOB(((t1.c90) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)>=(0Xffffffffa3dfa275)))GLOB(((t1.c90) IS FALSE)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c2)>=(0xffffffffa3dfa275)))GLOB(((t1.c90) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)>=(0Xffffffffa3dfa275)))GLOB(((t1.c90) IS FALSE)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c2)>=(0xffffffffa3dfa275)))GLOB(((t1.c90) IS FALSE))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))==(TYPEOF(DISTINCT t1.c90)))) ORDER BY CAST((t1.c90 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))=(TYPEOF(DISTINCT t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c90 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))==(TYPEOF(DISTINCT t1.c90)))) ORDER BY CAST((t1.c90 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))=(TYPEOF(DISTINCT t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c90 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c90 IN ()))==(TYPEOF(DISTINCT t1.c90)))) ORDER BY CAST((t1.c90 IN ()) AS INTEGER);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, t1.c90)) AND ((0.7808245684011449, t1.c90, vt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, t1.c90)) AND ((0.7808245684011449, t1.c90, vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, t1.c90)) AND ((0.7808245684011449, t1.c90, vt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, t1.c90)) AND ((0.7808245684011449, t1.c90, vt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c2, t1.c90)) AND ((0.7808245684011449, t1.c90, vt0.c2))) COLLATE NOCASE);
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))OR(((NULL) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))OR(((NULL) BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))OR(((NULL) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90 IN ()))OR(((NULL) BETWEEN (t1.c90) AND (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c90 IN ()))OR(((NULL) BETWEEN (t1.c90) AND (t1.c90)))));
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((((t1.c90))>((t1.c90))))=(x'')), ((UPPER(DISTINCT t1.c90))!=(t1.c90))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))>((t1.c90))))=(x'')), ((UPPER(DISTINCT t1.c90))<>(t1.c90))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((((t1.c90))>((t1.c90))))=(x'')), ((UPPER(DISTINCT t1.c90))!=(t1.c90))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90))>((t1.c90))))=(x'')), ((UPPER(DISTINCT t1.c90))<>(t1.c90))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY (((((t1.c90))>((t1.c90))))=(x'')), ((UPPER(DISTINCT t1.c90))!=(t1.c90))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c2)));
SELECT * FROM t1 WHERE (TYPEOF(((t1.c90)>>(t1.c90)))) ORDER BY ((TRIM(DISTINCT t1.c90, t1.c90))*(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t1.c90)>>(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY ((TRIM(DISTINCT t1.c90, t1.c90))*(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))))  NULLS FIRST);
SELECT * FROM t1 WHERE (TYPEOF(((t1.c90)>>(t1.c90)))) ORDER BY ((TRIM(DISTINCT t1.c90, t1.c90))*(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((t1.c90)>>(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY ((TRIM(DISTINCT t1.c90, t1.c90))*(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))))  NULLS FIRST);
SELECT * FROM t1 WHERE (TYPEOF(((t1.c90)>>(t1.c90)))) ORDER BY ((TRIM(DISTINCT t1.c90, t1.c90))*(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90))))  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (((((((t1.c90)AND(0.29301372604969966)))OR(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)AND(0.29301372604969966)))OR(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((t1.c90)AND(0.29301372604969966)))OR(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)AND(0.29301372604969966)))OR(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((t1.c90)AND(0.29301372604969966)))OR(vt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN (t1.c90 IN ()) THEN ((vt0.c1)OR(t1.c90)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS TEXT)  WHEN (t1.c90 IN ()) THEN ((vt0.c1)OR(t1.c90)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN (t1.c90 IN ()) THEN ((vt0.c1)OR(t1.c90)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c1 AS TEXT)  WHEN (t1.c90 IN ()) THEN ((vt0.c1)OR(t1.c90)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN (t1.c90 IN ()) THEN ((vt0.c1)OR(t1.c90)) END);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)GLOB(NULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)GLOB(NULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE BINARY)GLOB(NULL)));
SELECT COUNT(*) FROM t1 WHERE (TRIM((((t1.c90, t1.c90, t1.c90))<>((t1.c90, 0.8603808625903809, t1.c90))), (((x'', t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t1.c90, t1.c90, t1.c90))!=((t1.c90, 0.8603808625903809, t1.c90))), (((x'', t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TRIM((((t1.c90, t1.c90, t1.c90))<>((t1.c90, 0.8603808625903809, t1.c90))), (((x'', t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t1.c90, t1.c90, t1.c90))!=((t1.c90, 0.8603808625903809, t1.c90))), (((x'', t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (TRIM((((t1.c90, t1.c90, t1.c90))<>((t1.c90, 0.8603808625903809, t1.c90))), (((x'', t1.c90, t1.c90)) BETWEEN ((t1.c90, t1.c90, t1.c90)) AND ((t1.c90, t1.c90, t1.c90)))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST, json_type(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) DESC, ((((vt0.c2)==(vt0.c1)))&((((NULL)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST, json_type(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) DESC, ((((vt0.c2)==(vt0.c1)))&((((NULL)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST, json_type(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) DESC, ((((vt0.c2)==(vt0.c1)))&((((NULL)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST, json_type(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) DESC, ((((vt0.c2)==(vt0.c1)))&((((NULL)) BETWEEN ((vt0.c2)) AND ((vt0.c1))))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (vt0.c1) ORDER BY (- (vt0.c0 COLLATE NOCASE))  NULLS FIRST, json_type(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) DESC, ((((vt0.c2)==(vt0.c1)))&((((NULL)) BETWEEN ((vt0.c2)) AND ((vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(vt0.c1)))AND(((t1.c90) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(vt0.c1)))AND(((t1.c90) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(vt0.c1)))AND(((t1.c90) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(vt0.c1)))AND(((t1.c90) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((((- (vt0.c0))) NOT NULL)) ORDER BY ((((CAST(vt0.c2 AS TEXT))AND(vt0.c1)))AND(((t1.c90) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE ((((- (vt0.c2))) NOT BETWEEN ((((t1.c90, vt0.c0, x'd64a')) BETWEEN ((vt0.c1, t1.c90, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2)))) AND (NULL))) ORDER BY (((((vt0.c0)<(vt0.c1))))>=(((vt0.c1 IN (vt0.c0, vt0.c1))))) ASC  NULLS LAST, CAST(((vt0.c1)GLOB(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) NOT BETWEEN ((((t1.c90, vt0.c0, x'd64a')) BETWEEN ((vt0.c1, t1.c90, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2)))) AND (NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((vt0.c0)<(vt0.c1))))>=(((vt0.c1 IN (vt0.c0, vt0.c1))))) ASC  NULLS LAST, CAST(((vt0.c1)GLOB(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((((- (vt0.c2))) NOT BETWEEN ((((t1.c90, vt0.c0, x'd64a')) BETWEEN ((vt0.c1, t1.c90, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2)))) AND (NULL))) ORDER BY (((((vt0.c0)<(vt0.c1))))>=(((vt0.c1 IN (vt0.c0, vt0.c1))))) ASC  NULLS LAST, CAST(((vt0.c1)GLOB(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c2))) NOT BETWEEN ((((t1.c90, vt0.c0, x'd64a')) BETWEEN ((vt0.c1, t1.c90, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2)))) AND (NULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((vt0.c0)<(vt0.c1))))>=(((vt0.c1 IN (vt0.c0, vt0.c1))))) ASC  NULLS LAST, CAST(((vt0.c1)GLOB(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((((- (vt0.c2))) NOT BETWEEN ((((t1.c90, vt0.c0, x'd64a')) BETWEEN ((vt0.c1, t1.c90, vt0.c1)) AND ((vt0.c2, vt0.c2, vt0.c2)))) AND (NULL))) ORDER BY (((((vt0.c0)<(vt0.c1))))>=(((vt0.c1 IN (vt0.c0, vt0.c1))))) ASC  NULLS LAST, CAST(((vt0.c1)GLOB(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (CAST((t1.c90 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c90 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CAST((t1.c90 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c90 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (CAST((t1.c90 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED WHERE (vt0.c0) ORDER BY (((TRIM(DISTINCT vt0.c0), vt0.c1, t1.c90))>((CAST(vt0.c2 AS BLOB), CAST(t1.c90 AS INTEGER), vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (((TRIM(DISTINCT vt0.c0), vt0.c1, t1.c90))>((CAST(vt0.c2 AS BLOB), CAST(t1.c90 AS INTEGER), vt0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED WHERE (vt0.c0) ORDER BY (((TRIM(DISTINCT vt0.c0), vt0.c1, t1.c90))>((CAST(vt0.c2 AS BLOB), CAST(t1.c90 AS INTEGER), vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (((TRIM(DISTINCT vt0.c0), vt0.c1, t1.c90))>((CAST(vt0.c2 AS BLOB), CAST(t1.c90 AS INTEGER), vt0.c2 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED WHERE (vt0.c0) ORDER BY (((TRIM(DISTINCT vt0.c0), vt0.c1, t1.c90))>((CAST(vt0.c2 AS BLOB), CAST(t1.c90 AS INTEGER), vt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((vt0.c2)IS(vt0.c0)) AS TEXT)) ORDER BY (- (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)IS(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 ORDER BY (- (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((vt0.c2)IS(vt0.c0)) AS TEXT)) ORDER BY (- (vt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)IS(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t1 ORDER BY (- (vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((vt0.c2)IS(vt0.c0)) AS TEXT)) ORDER BY (- (vt0.c1)) COLLATE RTRIM;
SELECT ALL * FROM vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE));
SELECT ALL * FROM t1 WHERE (((t1.c90) IS FALSE)) ORDER BY ((t1.c90) IS FALSE)  NULLS LAST, (((+ (t1.c90))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) IS FALSE)  NULLS LAST, (((+ (t1.c90))) NOT NULL) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c90) IS FALSE)) ORDER BY ((t1.c90) IS FALSE)  NULLS LAST, (((+ (t1.c90))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90) IS FALSE)  NULLS LAST, (((+ (t1.c90))) NOT NULL) ASC);
SELECT ALL * FROM t1 WHERE (((t1.c90) IS FALSE)) ORDER BY ((t1.c90) IS FALSE)  NULLS LAST, (((+ (t1.c90))) NOT NULL) ASC;
SELECT * FROM t1, vt0 WHERE (((RTRIM(t1.c90))<<(((t1.c90)&('')))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t1.c90))<<(((t1.c90)&(''))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((RTRIM(t1.c90))<<(((t1.c90)&('')))));
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(t1.c90))<<(((t1.c90)&(''))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((RTRIM(t1.c90))<<(((t1.c90)&('')))));
SELECT ALL * FROM t1 WHERE (((t1.c90)|(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90)|(t1.c90))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90)|(t1.c90)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90)|(t1.c90))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90)|(t1.c90)));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c90) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c90) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c90) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t1.c90) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c90) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)==(t1.c90)))|(((t1.c90) NOT NULL)))) ORDER BY ((((((((((((((((t1.c90)AND('\rD7/䶠[G9>')))OR(t1.c90)))OR(0Xffffffffa3dfa275)))OR(t1.c90)))OR(CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)))OR(x'')))AND(((((t1.c90)OR(t1.c90)))OR(t1.c90)))))OR((t1.c90 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)=(t1.c90)))|(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((((((((t1.c90)AND('\rD7/䶠[G9>')))OR(t1.c90)))OR(0xffffffffa3dfa275)))OR(t1.c90)))OR(CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)))OR(x'')))AND(((((t1.c90)OR(t1.c90)))OR(t1.c90)))))OR((t1.c90 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)==(t1.c90)))|(((t1.c90) NOT NULL)))) ORDER BY ((((((((((((((((t1.c90)AND('\rD7/䶠[G9>')))OR(t1.c90)))OR(0Xffffffffa3dfa275)))OR(t1.c90)))OR(CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)))OR(x'')))AND(((((t1.c90)OR(t1.c90)))OR(t1.c90)))))OR((t1.c90 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)=(t1.c90)))|(((t1.c90) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((((((((t1.c90)AND('\rD7/䶠[G9>')))OR(t1.c90)))OR(0xffffffffa3dfa275)))OR(t1.c90)))OR(CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)))OR(x'')))AND(((((t1.c90)OR(t1.c90)))OR(t1.c90)))))OR((t1.c90 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)==(t1.c90)))|(((t1.c90) NOT NULL)))) ORDER BY ((((((((((((((((t1.c90)AND('\rD7/䶠[G9>')))OR(t1.c90)))OR(0Xffffffffa3dfa275)))OR(t1.c90)))OR(CASE WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END)))OR(x'')))AND(((((t1.c90)OR(t1.c90)))OR(t1.c90)))))OR((t1.c90 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)<(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2)<(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (vt0.c0)));
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) IS TRUE));
SELECT ALL * FROM t1 WHERE (((((((t1.c90)IS NOT(t1.c90)))AND(((((t1.c90)AND(t1.c90)))AND(t1.c90)))))AND(CAST(t1.c90 AS NUMERIC)))) ORDER BY ((((t1.c90) NOT NULL))&(LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)IS NOT(t1.c90)))AND(((((t1.c90)AND(t1.c90)))AND(t1.c90)))))AND(CAST(t1.c90 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) NOT NULL))&(LAST_INSERT_ROWID()))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((t1.c90)IS NOT(t1.c90)))AND(((((t1.c90)AND(t1.c90)))AND(t1.c90)))))AND(CAST(t1.c90 AS NUMERIC)))) ORDER BY ((((t1.c90) NOT NULL))&(LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c90)IS NOT(t1.c90)))AND(((((t1.c90)AND(t1.c90)))AND(t1.c90)))))AND(CAST(t1.c90 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c90) NOT NULL))&(LAST_INSERT_ROWID()))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((t1.c90)IS NOT(t1.c90)))AND(((((t1.c90)AND(t1.c90)))AND(t1.c90)))))AND(CAST(t1.c90 AS NUMERIC)))) ORDER BY ((((t1.c90) NOT NULL))&(LAST_INSERT_ROWID()))  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (vt0.c0) ORDER BY vt0.c1 COLLATE NOCASE DESC, (+ (((t1.c90) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c1 COLLATE NOCASE DESC, (+ (((t1.c90) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT * FROM t1, vt0 WHERE (vt0.c0) ORDER BY vt0.c1 COLLATE NOCASE DESC, (+ (((t1.c90) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c1 COLLATE NOCASE DESC, (+ (((t1.c90) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC);
SELECT * FROM t1, vt0 WHERE (vt0.c0) ORDER BY vt0.c1 COLLATE NOCASE DESC, (+ (((t1.c90) BETWEEN (vt0.c1) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)/(t1.c90))) IS FALSE)) ORDER BY ((t1.c90)>=(t1.c90)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)/(t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90)>=(t1.c90)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)/(t1.c90))) IS FALSE)) ORDER BY ((t1.c90)>=(t1.c90)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)/(t1.c90))) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90)>=(t1.c90)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c90)/(t1.c90))) IS FALSE)) ORDER BY ((t1.c90)>=(t1.c90)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((NOT (vt0.c1))))) ORDER BY (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))<((vt0.c2 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))<((vt0.c2 COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((NOT (vt0.c1))))) ORDER BY (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))<((vt0.c2 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))<((vt0.c2 COLLATE NOCASE))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND ((NOT (vt0.c1))))) ORDER BY (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2))))<((vt0.c2 COLLATE NOCASE))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((('' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((('' COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('' COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((('' COLLATE NOCASE) ISNULL));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS FALSE));
SELECT * FROM t1, vt0 WHERE (((((vt0.c1)+(vt0.c0)))+(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0)))+(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((vt0.c1)+(vt0.c0)))+(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(vt0.c0)))+(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((vt0.c1)+(vt0.c0)))+(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 WHERE ((((((x''))>((t1.c90))))>=(t1.c90)));
SELECT SUM(count) FROM (SELECT (((((((x''))>((t1.c90))))>=(t1.c90))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((x''))>((t1.c90))))>=(t1.c90)));
SELECT SUM(count) FROM (SELECT (((((((x''))>((t1.c90))))>=(t1.c90))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((x''))>((t1.c90))))>=(t1.c90)));
SELECT * FROM t1 WHERE ((t1.c90 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c90 IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c90 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c90 IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c90 IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((((CASE t1.c90  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)AND(CAST(t1.c90 AS INTEGER))))AND(((t1.c90) IS FALSE)))) ORDER BY CAST(((t1.c90)/(t1.c90)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c90  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)AND(CAST(t1.c90 AS INTEGER))))AND(((t1.c90) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c90)/(t1.c90)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((CASE t1.c90  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)AND(CAST(t1.c90 AS INTEGER))))AND(((t1.c90) IS FALSE)))) ORDER BY CAST(((t1.c90)/(t1.c90)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c90  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)AND(CAST(t1.c90 AS INTEGER))))AND(((t1.c90) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c90)/(t1.c90)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((CASE t1.c90  WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 WHEN t1.c90 THEN t1.c90 END)AND(CAST(t1.c90 AS INTEGER))))AND(((t1.c90) IS FALSE)))) ORDER BY CAST(((t1.c90)/(t1.c90)) AS REAL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c2)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT NULL))))OR(((vt0.c2) IS FALSE))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)LIKE(vt0.c2)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT NULL))))OR(((vt0.c2) IS FALSE))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c2)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT NULL))))OR(((vt0.c2) IS FALSE))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)LIKE(vt0.c2)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT NULL))))OR(((vt0.c2) IS FALSE))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c2)))OR(CAST(vt0.c1 AS TEXT))))OR(((vt0.c2) NOT NULL))))OR(((vt0.c2) IS FALSE))))AND(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE (((('' IN (0.7559119179545544)))>=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (0.7559119179545544)))>=((- (vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((('' IN (0.7559119179545544)))>=((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (0.7559119179545544)))>=((- (vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((('' IN (0.7559119179545544)))>=((- (vt0.c1)))));
SELECT * FROM vt0 WHERE ((('93741957')GLOB(((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('93741957')GLOB(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('93741957')GLOB(((vt0.c0)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('93741957')GLOB(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('93741957')GLOB(((vt0.c0)>=(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0)&('-1879454125'))) ORDER BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) DESC, (((vt0.c1)!=(vt0.c2)) IN (CASE 0.5444385662052791  WHEN vt0.c0 THEN vt0.c0 WHEN 0.1055770088994219 THEN '-1539527479' WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&('-1879454125'))) IS TRUE)  as count FROM t1, vt0 ORDER BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) DESC, (((vt0.c1)!=(vt0.c2)) IN (CASE 0.5444385662052791  WHEN vt0.c0 THEN vt0.c0 WHEN 0.1055770088994219 THEN '-1539527479' WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0)&('-1879454125'))) ORDER BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) DESC, (((vt0.c1)!=(vt0.c2)) IN (CASE 0.5444385662052791  WHEN vt0.c0 THEN vt0.c0 WHEN 0.1055770088994219 THEN '-1539527479' WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)&('-1879454125'))) IS TRUE)  as count FROM t1, vt0 ORDER BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) DESC, (((vt0.c1)!=(vt0.c2)) IN (CASE 0.5444385662052791  WHEN vt0.c0 THEN vt0.c0 WHEN 0.1055770088994219 THEN '-1539527479' WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1)))));
SELECT ALL * FROM t1, vt0 WHERE (((vt0.c0)&('-1879454125'))) ORDER BY (- (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) DESC, (((vt0.c1)!=(vt0.c2)) IN (CASE 0.5444385662052791  WHEN vt0.c0 THEN vt0.c0 WHEN 0.1055770088994219 THEN '-1539527479' WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END, ((vt0.c0)>(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (CASE 'hOP{\u7V'  WHEN ((vt0.c0) NOTNULL) THEN ABS(vt0.c2) END) ORDER BY QUOTE(((vt0.c1)%(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'hOP{\u7V'  WHEN ((vt0.c0) NOTNULL) THEN ABS(vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(((vt0.c1)%(vt0.c1))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE 'hOP{\u7V'  WHEN ((vt0.c0) NOTNULL) THEN ABS(vt0.c2) END) ORDER BY QUOTE(((vt0.c1)%(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'hOP{\u7V'  WHEN ((vt0.c0) NOTNULL) THEN ABS(vt0.c2) END) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(((vt0.c1)%(vt0.c1))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE 'hOP{\u7V'  WHEN ((vt0.c0) NOTNULL) THEN ABS(vt0.c2) END) ORDER BY QUOTE(((vt0.c1)%(vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(((((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (load_extension(((((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (NULL)) THEN ((0X662d51d8)IS(vt0.c0)) WHEN vt0.c2 THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (NULL)) THEN ((0X662d51d8)IS(vt0.c0)) WHEN vt0.c2 THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (NULL)) THEN ((0X662d51d8)IS(vt0.c0)) WHEN vt0.c2 THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (NULL)) THEN ((0X662d51d8)IS(vt0.c0)) WHEN vt0.c2 THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN ((vt0.c0)||(vt0.c2)) WHEN (NOT (NULL)) THEN ((0X662d51d8)IS(vt0.c0)) WHEN vt0.c2 THEN CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS BLOB));
SELECT ALL * FROM t1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM t1 WHERE ((((x'3956')) NOT BETWEEN ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))) AND ((((t1.c90)IS(t1.c90)))))) ORDER BY (((((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (t1.c90) AND (CAST(t1.c90 AS BLOB)))  NULLS FIRST, CASE WHEN ((t1.c90)>(t1.c90)) THEN ((t1.c90)<(t1.c90)) WHEN t1.c90 COLLATE NOCASE THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))!=((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))) WHEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) THEN t1.c90 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'3956')) NOT BETWEEN ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))) AND ((((t1.c90)IS(t1.c90)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (t1.c90) AND (CAST(t1.c90 AS BLOB)))  NULLS FIRST, CASE WHEN ((t1.c90)>(t1.c90)) THEN ((t1.c90)<(t1.c90)) WHEN t1.c90 COLLATE NOCASE THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))!=((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))) WHEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) THEN t1.c90 END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((x'3956')) NOT BETWEEN ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))) AND ((((t1.c90)IS(t1.c90)))))) ORDER BY (((((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (t1.c90) AND (CAST(t1.c90 AS BLOB)))  NULLS FIRST, CASE WHEN ((t1.c90)>(t1.c90)) THEN ((t1.c90)<(t1.c90)) WHEN t1.c90 COLLATE NOCASE THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))!=((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))) WHEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) THEN t1.c90 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'3956')) NOT BETWEEN ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))) AND ((((t1.c90)IS(t1.c90)))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (t1.c90) AND (CAST(t1.c90 AS BLOB)))  NULLS FIRST, CASE WHEN ((t1.c90)>(t1.c90)) THEN ((t1.c90)<(t1.c90)) WHEN t1.c90 COLLATE NOCASE THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))!=((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))) WHEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) THEN t1.c90 END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((x'3956')) NOT BETWEEN ((((t1.c90) BETWEEN (t1.c90) AND (t1.c90)))) AND ((((t1.c90)IS(t1.c90)))))) ORDER BY (((((t1.c90)) BETWEEN ((t1.c90)) AND ((t1.c90)))) BETWEEN (t1.c90) AND (CAST(t1.c90 AS BLOB)))  NULLS FIRST, CASE WHEN ((t1.c90)>(t1.c90)) THEN ((t1.c90)<(t1.c90)) WHEN t1.c90 COLLATE NOCASE THEN (((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))!=((t1.c90, t1.c90, t1.c90, t1.c90, t1.c90))) WHEN ((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)) THEN t1.c90 END ASC;
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN NULL ELSE t1.c90 END) NOT BETWEEN ((+ (t1.c90))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) WHERE (0.5408838634973696);
SELECT SUM(count) FROM (SELECT ALL ((0.5408838634973696) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN NULL ELSE t1.c90 END) NOT BETWEEN ((+ (t1.c90))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN NULL ELSE t1.c90 END) NOT BETWEEN ((+ (t1.c90))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) WHERE (0.5408838634973696);
SELECT SUM(count) FROM (SELECT ALL ((0.5408838634973696) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN NULL ELSE t1.c90 END) NOT BETWEEN ((+ (t1.c90))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CASE vt0.c2  WHEN vt0.c1 THEN t1.c90 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN NULL ELSE t1.c90 END) NOT BETWEEN ((+ (t1.c90))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))) WHERE (0.5408838634973696);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))OR(vt0.c2))) IS TRUE));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((((vt0.c1)OR(t1.c90)))OR(vt0.c2)))LIKE(((t1.c90) BETWEEN (vt0.c0) AND (t1.c90)))) WHERE (0Xfffffffff20eb07b);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff20eb07b) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((((vt0.c1)OR(t1.c90)))OR(vt0.c2)))LIKE(((t1.c90) BETWEEN (vt0.c0) AND (t1.c90)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((((vt0.c1)OR(t1.c90)))OR(vt0.c2)))LIKE(((t1.c90) BETWEEN (vt0.c0) AND (t1.c90)))) WHERE (0Xfffffffff20eb07b);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff20eb07b) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((((((vt0.c1)OR(t1.c90)))OR(vt0.c2)))LIKE(((t1.c90) BETWEEN (vt0.c0) AND (t1.c90)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((((((vt0.c1)OR(t1.c90)))OR(vt0.c2)))LIKE(((t1.c90) BETWEEN (vt0.c0) AND (t1.c90)))) WHERE (0Xfffffffff20eb07b);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2 IN (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 IN (vt0.c1)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2 IN (vt0.c1)) IN ()));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) ASC);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt0 ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) ASC);
SELECT ALL * FROM t1, vt0 WHERE ((NOT (CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY HEX(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))) ASC;
SELECT * FROM t1 WHERE (((t1.c90)&((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90)&((+ (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c90)&((+ (t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90)&((+ (t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c90)&((+ (t1.c90)))));
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((- (vt0.c2)))LIKE(((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))) WHERE (CASE WHEN ((vt0.c2)/(t1.c90)) THEN CAST(x'' AS NUMERIC) END) ORDER BY (0Xfffffffff46b3067 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)/(t1.c90)) THEN CAST(x'' AS NUMERIC) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((- (vt0.c2)))LIKE(((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY (0xfffffffff46b3067 IN ()) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((- (vt0.c2)))LIKE(((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))) WHERE (CASE WHEN ((vt0.c2)/(t1.c90)) THEN CAST(x'' AS NUMERIC) END) ORDER BY (0Xfffffffff46b3067 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c2)/(t1.c90)) THEN CAST(x'' AS NUMERIC) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((- (vt0.c2)))LIKE(((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY (0xfffffffff46b3067 IN ()) DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN t1 ON (((- (vt0.c2)))LIKE(((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))) WHERE (CASE WHEN ((vt0.c2)/(t1.c90)) THEN CAST(x'' AS NUMERIC) END) ORDER BY (0Xfffffffff46b3067 IN ()) DESC;
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((((vt0.c0))>=((vt0.c1))))))AND(LIKELIHOOD(vt0.c1, 0.38039796973241635)))) ORDER BY ((((x'eaf1') NOT NULL))OR((+ (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((((vt0.c0))>=((vt0.c1))))))AND(LIKELIHOOD(vt0.c1, 0.38039796973241635)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((x'eaf1') NOT NULL))OR((+ (t1.c90))))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((((vt0.c0))>=((vt0.c1))))))AND(LIKELIHOOD(vt0.c1, 0.38039796973241635)))) ORDER BY ((((x'eaf1') NOT NULL))OR((+ (t1.c90))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR((((vt0.c0))>=((vt0.c1))))))AND(LIKELIHOOD(vt0.c1, 0.38039796973241635)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((x'eaf1') NOT NULL))OR((+ (t1.c90))))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((vt0.c0)OR((((vt0.c0))>=((vt0.c1))))))AND(LIKELIHOOD(vt0.c1, 0.38039796973241635)))) ORDER BY ((((x'eaf1') NOT NULL))OR((+ (t1.c90))))  NULLS FIRST;
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c90 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CAST(t1.c90 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c90 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(CAST(t1.c90 AS NUMERIC))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (SQLITE_COMPILEOPTION_USED(CAST(t1.c90 AS NUMERIC)));
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1)|(((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((+ (vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)|(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((+ (vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((+ (vt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1)|(((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((+ (vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)|(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((+ (vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((+ (vt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1)|(((vt0.c0) NOT NULL)))) ORDER BY (((((+ (vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))AND((+ (vt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE ((((((vt0.c2) IS TRUE)))>((((t1.c90)GLOB(vt0.c2)))))) ORDER BY '1342687823';
SELECT SUM(count) FROM (SELECT (((((((vt0.c2) IS TRUE)))>((((t1.c90)GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY '1342687823');
SELECT * FROM vt0, t1 WHERE ((((((vt0.c2) IS TRUE)))>((((t1.c90)GLOB(vt0.c2)))))) ORDER BY '1342687823';
SELECT SUM(count) FROM (SELECT (((((((vt0.c2) IS TRUE)))>((((t1.c90)GLOB(vt0.c2)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY '1342687823');
SELECT * FROM vt0, t1 WHERE ((((((vt0.c2) IS TRUE)))>((((t1.c90)GLOB(vt0.c2)))))) ORDER BY '1342687823';
SELECT COUNT(*) FROM t1, vt0 WHERE ((((~ ('_ykO{i4'))) NOT BETWEEN ((((t1.c90))>=((t1.c90)))) AND (((vt0.c1)IS(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('_ykO{i4'))) NOT BETWEEN ((((t1.c90))>=((t1.c90)))) AND (((vt0.c1)IS(vt0.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((~ ('_ykO{i4'))) NOT BETWEEN ((((t1.c90))>=((t1.c90)))) AND (((vt0.c1)IS(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ ('_ykO{i4'))) NOT BETWEEN ((((t1.c90))>=((t1.c90)))) AND (((vt0.c1)IS(vt0.c2))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((~ ('_ykO{i4'))) NOT BETWEEN ((((t1.c90))>=((t1.c90)))) AND (((vt0.c1)IS(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (vt0.c1);
SELECT * FROM t1 WHERE ((((((0X3bcfc33e)<>(t1.c90))))<=((HEX(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0X3bcfc33e)<>(t1.c90))))<=((HEX(t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((0X3bcfc33e)<>(t1.c90))))<=((HEX(t1.c90)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0X3bcfc33e)<>(t1.c90))))<=((HEX(t1.c90))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((0X3bcfc33e)<>(t1.c90))))<=((HEX(t1.c90)))));
SELECT ALL * FROM t1 WHERE (((t1.c90 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t1.c90 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t1.c90 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c90 COLLATE NOCASE) IS TRUE));
SELECT COUNT(*) FROM t1, vt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ('' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))=((vt0.c2 COLLATE BINARY)))) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((LTRIM(vt0.c0, vt0.c0)))=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))=((vt0.c2 COLLATE BINARY)))) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((LTRIM(vt0.c0, vt0.c0)))=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0)))=((vt0.c2 COLLATE BINARY)))) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (vt0.c0 COLLATE RTRIM, CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) DESC;
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(vt0.c1)) WHERE (CAST(((t1.c90)!=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c90)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(vt0.c1)));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(vt0.c1)) WHERE (CAST(((t1.c90)!=(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c90)!=(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(vt0.c1)));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS INTEGER))|(vt0.c1)) WHERE (CAST(((t1.c90)!=(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0 NATURAL JOIN t1 WHERE ((vt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE ((vt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE ((vt0.c2 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90)||(t1.c90)))|(DATE(t1.c90, t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)||(t1.c90)))|(DATE(t1.c90, t1.c90, t1.c90)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90)||(t1.c90)))|(DATE(t1.c90, t1.c90, t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)||(t1.c90)))|(DATE(t1.c90, t1.c90, t1.c90)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c90)||(t1.c90)))|(DATE(t1.c90, t1.c90, t1.c90))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7303560712941568);
SELECT SUM(count) FROM (SELECT ((0.7303560712941568) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7303560712941568);
SELECT SUM(count) FROM (SELECT ((0.7303560712941568) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.7303560712941568);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c90 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c90 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c90 COLLATE BINARY)));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(('_ykO{i4' IN (t1.c90)) AS NUMERIC) WHERE (((vt0.c1) BETWEEN (vt0.c1 COLLATE RTRIM) AND (t1.c90))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c1 COLLATE RTRIM) AND (t1.c90))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(('_ykO{i4' IN (t1.c90)) AS NUMERIC) ORDER BY vt0.c0);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(('_ykO{i4' IN (t1.c90)) AS NUMERIC) WHERE (((vt0.c1) BETWEEN (vt0.c1 COLLATE RTRIM) AND (t1.c90))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c1 COLLATE RTRIM) AND (t1.c90))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(('_ykO{i4' IN (t1.c90)) AS NUMERIC) ORDER BY vt0.c0);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON CAST(('_ykO{i4' IN (t1.c90)) AS NUMERIC) WHERE (((vt0.c1) BETWEEN (vt0.c1 COLLATE RTRIM) AND (t1.c90))) ORDER BY vt0.c0;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c90)*(vt0.c2)) IN (((vt0.c0)>(vt0.c1)))) WHERE (((((t1.c90) IS TRUE))==(TRIM(vt0.c1)))) ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) IS TRUE))=(TRIM(vt0.c1)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c90)*(vt0.c2)) IN (((vt0.c0)>(vt0.c1)))) ORDER BY vt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c90)*(vt0.c2)) IN (((vt0.c0)>(vt0.c1)))) WHERE (((((t1.c90) IS TRUE))==(TRIM(vt0.c1)))) ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90) IS TRUE))=(TRIM(vt0.c1)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c90)*(vt0.c2)) IN (((vt0.c0)>(vt0.c1)))) ORDER BY vt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((t1.c90)*(vt0.c2)) IN (((vt0.c0)>(vt0.c1)))) WHERE (((((t1.c90) IS TRUE))==(TRIM(vt0.c1)))) ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((NULL)=(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)==(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((NULL)=(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((NULL)==(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((NULL)=(((vt0.c1) ISNULL))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((t1.c90) BETWEEN (vt0.c2) AND (NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c90) BETWEEN (vt0.c2) AND (NULL)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((t1.c90) BETWEEN (vt0.c2) AND (NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c90) BETWEEN (vt0.c2) AND (NULL)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((t1.c90) BETWEEN (vt0.c2) AND (NULL)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE ((- (t1.c90)) COLLATE RTRIM) ORDER BY (((t1.c90, t1.c90, t1.c90)) BETWEEN ((((t1.c90) IS TRUE), CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END, ((x'')-(t1.c90)))) AND (((+ (t1.c90)), ((t1.c90)>>(t1.c90)), (+ (t1.c90))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t1.c90)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90, t1.c90, t1.c90)) BETWEEN ((((t1.c90) IS TRUE), CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END, ((x'')-(t1.c90)))) AND (((+ (t1.c90)), ((t1.c90)>>(t1.c90)), (+ (t1.c90))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (t1.c90)) COLLATE RTRIM) ORDER BY (((t1.c90, t1.c90, t1.c90)) BETWEEN ((((t1.c90) IS TRUE), CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END, ((x'')-(t1.c90)))) AND (((+ (t1.c90)), ((t1.c90)>>(t1.c90)), (+ (t1.c90))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (t1.c90)) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY (((t1.c90, t1.c90, t1.c90)) BETWEEN ((((t1.c90) IS TRUE), CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END, ((x'')-(t1.c90)))) AND (((+ (t1.c90)), ((t1.c90)>>(t1.c90)), (+ (t1.c90))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((- (t1.c90)) COLLATE RTRIM) ORDER BY (((t1.c90, t1.c90, t1.c90)) BETWEEN ((((t1.c90) IS TRUE), CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END, ((x'')-(t1.c90)))) AND (((+ (t1.c90)), ((t1.c90)>>(t1.c90)), (+ (t1.c90))))) ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE t1.c90 COLLATE NOCASE  WHEN ((t1.c90)IS NOT(t1.c90)) THEN SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c90 COLLATE NOCASE  WHEN ((t1.c90)IS NOT(t1.c90)) THEN SQLITE_VERSION() END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE t1.c90 COLLATE NOCASE  WHEN ((t1.c90)IS NOT(t1.c90)) THEN SQLITE_VERSION() END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c90 COLLATE NOCASE  WHEN ((t1.c90)IS NOT(t1.c90)) THEN SQLITE_VERSION() END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE t1.c90 COLLATE NOCASE  WHEN ((t1.c90)IS NOT(t1.c90)) THEN SQLITE_VERSION() END);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(TRIM(DISTINCT t1.c90) AS BLOB)) ORDER BY ((NULL)<>(UNLIKELY(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t1.c90) AS BLOB)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL)<>(UNLIKELY(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(TRIM(DISTINCT t1.c90) AS BLOB)) ORDER BY ((NULL)<>(UNLIKELY(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t1.c90) AS BLOB)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((NULL)<>(UNLIKELY(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(TRIM(DISTINCT t1.c90) AS BLOB)) ORDER BY ((NULL)<>(UNLIKELY(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE (t1.c90);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((t1.c90)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY) ORDER BY (((((vt0.c2)GLOB('?0&6Dm'))))=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c90)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c2)GLOB('?0&6Dm'))))==((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((t1.c90)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY) ORDER BY (((((vt0.c2)GLOB('?0&6Dm'))))=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c90)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c2)GLOB('?0&6Dm'))))==((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((t1.c90)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)) COLLATE BINARY) ORDER BY (((((vt0.c2)GLOB('?0&6Dm'))))=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0)&(vt0.c1)))));
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON (((x'') NOT NULL) IN ()) WHERE (LIKELY(t1.c90) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(t1.c90) COLLATE BINARY) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON (((x'') NOT NULL) IN ()));
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON (((x'') NOT NULL) IN ()) WHERE (LIKELY(t1.c90) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELY(t1.c90) COLLATE BINARY) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON (((x'') NOT NULL) IN ()));
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON (((x'') NOT NULL) IN ()) WHERE (LIKELY(t1.c90) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TYPEOF(0Xffffffff9df57f36))IS(HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(0Xffffffff9df57f36))IS(HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TYPEOF(0Xffffffff9df57f36))IS(HEX(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(0Xffffffff9df57f36))IS(HEX(DISTINCT vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TYPEOF(0Xffffffff9df57f36))IS(HEX(DISTINCT vt0.c1))));
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY ((0.0) NOT BETWEEN (((vt0.c0)IS(vt0.c2))) AND (TRIM(DISTINCT vt0.c1))), TRIM(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM vt0, t1 ORDER BY ((0.0) NOT BETWEEN (((vt0.c0)IS(vt0.c2))) AND (TRIM(DISTINCT vt0.c1))), TRIM(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY ((0.0) NOT BETWEEN (((vt0.c0)IS(vt0.c2))) AND (TRIM(DISTINCT vt0.c1))), TRIM(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM vt0, t1 ORDER BY ((0.0) NOT BETWEEN (((vt0.c0)IS(vt0.c2))) AND (TRIM(DISTINCT vt0.c1))), TRIM(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY ((0.0) NOT BETWEEN (((vt0.c0)IS(vt0.c2))) AND (TRIM(DISTINCT vt0.c1))), TRIM(DISTINCT vt0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(0.9493746587778743 AS BLOB)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (CAST(0.9493746587778743 AS BLOB)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(0.9493746587778743 AS BLOB)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (CAST(0.9493746587778743 AS BLOB)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (CAST(0.9493746587778743 AS BLOB)) AND (((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY (vt0.c1 IN ()) COLLATE BINARY;
SELECT * FROM t1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE BINARY) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) NOT BETWEEN ((vt0.c2 IN ())) AND (((vt0.c1)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)IS(t1.c90)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(t1.c90)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)IS(t1.c90)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(t1.c90)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL)IS(t1.c90)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CAST(((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS REAL)) ORDER BY ((vt0.c1 IN ()) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((''))>((0.7900080368335015))) WHERE (((SQLITE_VERSION()) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((''))>((0.7900080368335015))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((''))>((0.7900080368335015))) WHERE (((SQLITE_VERSION()) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((''))>((0.7900080368335015))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON (((''))>((0.7900080368335015))) WHERE (((SQLITE_VERSION()) NOTNULL));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((('-2057940665')AND(vt0.c2)))AND(vt0.c0)))OR(t1.c90)))AND(t1.c90)))*(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(CASE WHEN t1.c90 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((('-2057940665')AND(vt0.c2)))AND(vt0.c0)))OR(t1.c90)))AND(t1.c90)))*(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(CASE WHEN t1.c90 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((('-2057940665')AND(vt0.c2)))AND(vt0.c0)))OR(t1.c90)))AND(t1.c90)))*(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(CASE WHEN t1.c90 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((('-2057940665')AND(vt0.c2)))AND(vt0.c0)))OR(t1.c90)))AND(t1.c90)))*(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(CASE WHEN t1.c90 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((('-2057940665')AND(vt0.c2)))AND(vt0.c0)))OR(t1.c90)))AND(t1.c90)))*(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))))) ORDER BY ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))/(CASE WHEN t1.c90 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN t1.c90 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (NULL)) THEN ((vt0.c0) IS FALSE) WHEN (('190230798')>(vt0.c2)) THEN ((vt0.c0)&(vt0.c0)) WHEN LOWER(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (NULL)) THEN ((vt0.c0) IS FALSE) WHEN (('190230798')>(vt0.c2)) THEN ((vt0.c0)&(vt0.c0)) WHEN LOWER(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c2 END) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (NULL)) THEN ((vt0.c0) IS FALSE) WHEN (('190230798')>(vt0.c2)) THEN ((vt0.c0)&(vt0.c0)) WHEN LOWER(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (NULL)) THEN ((vt0.c0) IS FALSE) WHEN (('190230798')>(vt0.c2)) THEN ((vt0.c0)&(vt0.c0)) WHEN LOWER(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c2 END) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (NULL)) THEN ((vt0.c0) IS FALSE) WHEN (('190230798')>(vt0.c2)) THEN ((vt0.c0)&(vt0.c0)) WHEN LOWER(vt0.c1) THEN vt0.c0 COLLATE RTRIM ELSE vt0.c2 END);
SELECT ALL * FROM t1, vt0 WHERE ((('/o')%(((vt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('/o')%(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((('/o')%(((vt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('/o')%(((vt0.c2) IS TRUE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((('/o')%(((vt0.c2) IS TRUE))));
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))<=(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))<=(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<=(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((vt0.c0) NOTNULL))<=(vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS BLOB)) ORDER BY (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), vt0.c1 COLLATE NOCASE, (vt0.c2 IN ()), json_patch(vt0.c2, vt0.c2), NULL))<(('1579549801', CAST(vt0.c2 AS REAL), vt0.c0, vt0.c0, (- (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), vt0.c1 COLLATE NOCASE, (vt0.c2 IN ()), json_patch(vt0.c2, vt0.c2), NULL))<(('1579549801', CAST(vt0.c2 AS REAL), vt0.c0, vt0.c0, (- (vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS BLOB)) ORDER BY (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), vt0.c1 COLLATE NOCASE, (vt0.c2 IN ()), json_patch(vt0.c2, vt0.c2), NULL))<(('1579549801', CAST(vt0.c2 AS REAL), vt0.c0, vt0.c0, (- (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), vt0.c1 COLLATE NOCASE, (vt0.c2 IN ()), json_patch(vt0.c2, vt0.c2), NULL))<(('1579549801', CAST(vt0.c2 AS REAL), vt0.c0, vt0.c0, (- (vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS BLOB)) ORDER BY (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c2)), vt0.c1 COLLATE NOCASE, (vt0.c2 IN ()), json_patch(vt0.c2, vt0.c2), NULL))<(('1579549801', CAST(vt0.c2 AS REAL), vt0.c0, vt0.c0, (- (vt0.c1)))))  NULLS FIRST;
SELECT * FROM t1 WHERE ((((t1.c90) BETWEEN ('') AND (t1.c90)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90) BETWEEN ('') AND (t1.c90)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE ((((t1.c90) BETWEEN ('') AND (t1.c90)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c90) BETWEEN ('') AND (t1.c90)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT * FROM t1 WHERE ((((t1.c90) BETWEEN ('') AND (t1.c90)) IN ()));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('4)0rH.^}') ORDER BY ((t1.c90 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('4)0rH.^}') IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c90 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('4)0rH.^}') ORDER BY ((t1.c90 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('4)0rH.^}') IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c90 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('4)0rH.^}') ORDER BY ((t1.c90 COLLATE RTRIM) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c90 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c90 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c90 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c90 IN ()) AS REAL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((t1.c90 IN ()) AS REAL));
SELECT ALL * FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (NULL);
SELECT ALL * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c90);
SELECT COUNT(*) FROM t1 WHERE (LIKE(((t1.c90)IS(t1.c90)), t1.c90 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t1.c90)IS(t1.c90)), t1.c90 COLLATE BINARY)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (LIKE(((t1.c90)IS(t1.c90)), t1.c90 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t1.c90)IS(t1.c90)), t1.c90 COLLATE BINARY)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (LIKE(((t1.c90)IS(t1.c90)), t1.c90 COLLATE BINARY));
SELECT * FROM t1, vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c2, vt0.c2, vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (((((((((t1.c90)OR(t1.c90)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2))))) ORDER BY 0.7483548658710678 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c2, vt0.c2, vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (((((((((t1.c90)OR(t1.c90)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0.7483548658710678 DESC);
SELECT * FROM t1, vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c2, vt0.c2, vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (((((((((t1.c90)OR(t1.c90)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2))))) ORDER BY 0.7483548658710678 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c2, vt0.c2, vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (((((((((t1.c90)OR(t1.c90)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY 0.7483548658710678 DESC);
SELECT * FROM t1, vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c2, vt0.c2, vt0.c0)))) BETWEEN (((vt0.c1) NOT NULL)) AND (((((((((t1.c90)OR(t1.c90)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2))))) ORDER BY 0.7483548658710678 DESC;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c90 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ORDER BY INSTR(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), TRIM(DISTINCT t1.c90, t1.c90))  NULLS FIRST, UPPER(t1.c90) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY INSTR(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), TRIM(DISTINCT t1.c90, t1.c90))  NULLS FIRST, UPPER(t1.c90) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c90 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ORDER BY INSTR(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), TRIM(DISTINCT t1.c90, t1.c90))  NULLS FIRST, UPPER(t1.c90) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c90 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY INSTR(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), TRIM(DISTINCT t1.c90, t1.c90))  NULLS FIRST, UPPER(t1.c90) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c90 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE) ORDER BY INSTR(((t1.c90) NOT BETWEEN (t1.c90) AND (t1.c90)), TRIM(DISTINCT t1.c90, t1.c90))  NULLS FIRST, UPPER(t1.c90) COLLATE BINARY  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c2))) AND ((((t1.c90, t1.c90, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c1)))))) ORDER BY (((((vt0.c1))>=((vt0.c0))))+((((('1628236376')AND(vt0.c2)))AND(0.614156762810825)))), ((t1.c90 COLLATE RTRIM) NOT BETWEEN (x'') AND (3.61906698E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c2))) AND ((((t1.c90, t1.c90, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c1))>=((vt0.c0))))+((((('1628236376')AND(vt0.c2)))AND(0.614156762810825)))), ((t1.c90 COLLATE RTRIM) NOT BETWEEN (x'') AND (3.61906698E8))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c2))) AND ((((t1.c90, t1.c90, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c1)))))) ORDER BY (((((vt0.c1))>=((vt0.c0))))+((((('1628236376')AND(vt0.c2)))AND(0.614156762810825)))), ((t1.c90 COLLATE RTRIM) NOT BETWEEN (x'') AND (3.61906698E8))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c2))) AND ((((t1.c90, t1.c90, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c1))>=((vt0.c0))))+((((('1628236376')AND(vt0.c2)))AND(0.614156762810825)))), ((t1.c90 COLLATE RTRIM) NOT BETWEEN (x'') AND (3.61906698E8))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((((vt0.c2)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c2))) AND ((((t1.c90, t1.c90, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, t1.c90, vt0.c1)))))) ORDER BY (((((vt0.c1))>=((vt0.c0))))+((((('1628236376')AND(vt0.c2)))AND(0.614156762810825)))), ((t1.c90 COLLATE RTRIM) NOT BETWEEN (x'') AND (3.61906698E8))  NULLS FIRST;
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c90)IS(vt0.c1))) NOTNULL) WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c90)IS(vt0.c1))) NOTNULL));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c90)IS(vt0.c1))) NOTNULL) WHERE ((NOT (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c90)IS(vt0.c1))) NOTNULL));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c90)IS(vt0.c1))) NOTNULL) WHERE ((NOT (NULL)));
SELECT * FROM t1 WHERE (t1.c90) ORDER BY CAST(CAST(t1.c90 AS REAL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 ORDER BY CAST(CAST(t1.c90 AS REAL) AS BLOB) DESC);
SELECT * FROM t1 WHERE (t1.c90) ORDER BY CAST(CAST(t1.c90 AS REAL) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM t1 ORDER BY CAST(CAST(t1.c90 AS REAL) AS BLOB) DESC);
SELECT * FROM t1 WHERE (t1.c90) ORDER BY CAST(CAST(t1.c90 AS REAL) AS BLOB) DESC;
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT SUM(count) FROM (SELECT ((t1.c90) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c90);
SELECT * FROM t1 WHERE (((((t1.c90)||(t1.c90)))>(UPPER(DISTINCT t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)||(t1.c90)))>(UPPER(DISTINCT t1.c90)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c90)||(t1.c90)))>(UPPER(DISTINCT t1.c90))));
SELECT SUM(count) FROM (SELECT ((((((t1.c90)||(t1.c90)))>(UPPER(DISTINCT t1.c90)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c90)||(t1.c90)))>(UPPER(DISTINCT t1.c90))));
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c1)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)+(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((~ (((vt0.c1)+(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((vt0.c0))<=((vt0.c1))))OR((~ (vt0.c2)))))AND(((((t1.c90)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY json_array(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2)!=(t1.c90))) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(x'')))AND(((vt0.c1)OR(vt0.c2)))), ((~ (vt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<=((vt0.c1))))OR((~ (vt0.c2)))))AND(((((t1.c90)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_array(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2)<>(t1.c90))) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(x'')))AND(((vt0.c1)OR(vt0.c2)))), ((~ (vt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((vt0.c0))<=((vt0.c1))))OR((~ (vt0.c2)))))AND(((((t1.c90)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY json_array(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2)!=(t1.c90))) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(x'')))AND(((vt0.c1)OR(vt0.c2)))), ((~ (vt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<=((vt0.c1))))OR((~ (vt0.c2)))))AND(((((t1.c90)AND(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_array(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2)<>(t1.c90))) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(x'')))AND(((vt0.c1)OR(vt0.c2)))), ((~ (vt0.c2)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((((vt0.c0))<=((vt0.c1))))OR((~ (vt0.c2)))))AND(((((t1.c90)AND(vt0.c2)))AND(vt0.c2))))) ORDER BY json_array(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)), ((vt0.c2)!=(t1.c90))) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))OR(x'')))AND(((vt0.c1)OR(vt0.c2)))), ((~ (vt0.c2)) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c2) ISNULL)) AND (CASE vt0.c2  WHEN '' THEN vt0.c0 ELSE vt0.c2 END))) ORDER BY (((((vt0.c2))==((vt0.c2))))>>(vt0.c0))  NULLS FIRST, CASE WHEN 0.02560318823096175 THEN '' ELSE (+ (vt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c2) ISNULL)) AND (CASE vt0.c2  WHEN '' THEN vt0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2))==((vt0.c2))))>>(vt0.c0))  NULLS FIRST, CASE WHEN 0.02560318823096175 THEN '' ELSE (+ (vt0.c2)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c2) ISNULL)) AND (CASE vt0.c2  WHEN '' THEN vt0.c0 ELSE vt0.c2 END))) ORDER BY (((((vt0.c2))==((vt0.c2))))>>(vt0.c0))  NULLS FIRST, CASE WHEN 0.02560318823096175 THEN '' ELSE (+ (vt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c2) ISNULL)) AND (CASE vt0.c2  WHEN '' THEN vt0.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c2))==((vt0.c2))))>>(vt0.c0))  NULLS FIRST, CASE WHEN 0.02560318823096175 THEN '' ELSE (+ (vt0.c2)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c2) ISNULL)) AND (CASE vt0.c2  WHEN '' THEN vt0.c0 ELSE vt0.c2 END))) ORDER BY (((((vt0.c2))==((vt0.c2))))>>(vt0.c0))  NULLS FIRST, CASE WHEN 0.02560318823096175 THEN '' ELSE (+ (vt0.c2)) END DESC;
SELECT * FROM t1, vt0 WHERE ((vt0.c1 IN ())) ORDER BY (((((vt0.c2 IN ()))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c2)AND('-1335325485')))OR('[,!]'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c2 IN ()))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c2)AND('-1335325485')))OR('[,!]'))))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((vt0.c1 IN ())) ORDER BY (((((vt0.c2 IN ()))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c2)AND('-1335325485')))OR('[,!]'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((vt0.c2 IN ()))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c2)AND('-1335325485')))OR('[,!]'))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CHANGES() DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE BINARY) ORDER BY CHANGES() DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)+(vt0.c2))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)+(vt0.c2)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((((vt0.c2)OR(x'')))OR(t1.c90)) THEN t1.c90 ELSE 0.14275619029931275 END WHERE (CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((((vt0.c2)OR(x'')))OR(t1.c90)) THEN t1.c90 ELSE 0.14275619029931275 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((((vt0.c2)OR(x'')))OR(t1.c90)) THEN t1.c90 ELSE 0.14275619029931275 END WHERE (CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((((vt0.c2)OR(x'')))OR(t1.c90)) THEN t1.c90 ELSE 0.14275619029931275 END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((((vt0.c2)OR(x'')))OR(t1.c90)) THEN t1.c90 ELSE 0.14275619029931275 END WHERE (CAST(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END AS TEXT));
SELECT * FROM t1 WHERE ((((ABS(t1.c90)))>((CAST(t1.c90 AS REAL))))) ORDER BY ((t1.c90 COLLATE RTRIM)>=(t1.c90 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((ABS(t1.c90)))>((CAST(t1.c90 AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90 COLLATE RTRIM)>=(t1.c90 COLLATE NOCASE)));
SELECT * FROM t1 WHERE ((((ABS(t1.c90)))>((CAST(t1.c90 AS REAL))))) ORDER BY ((t1.c90 COLLATE RTRIM)>=(t1.c90 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((ABS(t1.c90)))>((CAST(t1.c90 AS REAL))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90 COLLATE RTRIM)>=(t1.c90 COLLATE NOCASE)));
SELECT * FROM t1 WHERE ((((ABS(t1.c90)))>((CAST(t1.c90 AS REAL))))) ORDER BY ((t1.c90 COLLATE RTRIM)>=(t1.c90 COLLATE NOCASE));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((('2126569445')<=(t1.c90)))>=(NULL)) WHERE (CAST(((vt0.c1) NOT NULL) AS TEXT)) ORDER BY (((- (vt0.c1))) NOTNULL)  NULLS LAST, CASE ((vt0.c1)<=(t1.c90))  WHEN ((t1.c90)<>(t1.c90)) THEN ((t1.c90) IS FALSE) ELSE 0X2e50fb1f END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((('2126569445')<=(t1.c90)))>=(NULL)) ORDER BY (((- (vt0.c1))) NOTNULL)  NULLS LAST, CASE ((vt0.c1)<=(t1.c90))  WHEN ((t1.c90)!=(t1.c90)) THEN ((t1.c90) IS FALSE) ELSE 0X2e50fb1f END);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((('2126569445')<=(t1.c90)))>=(NULL)) WHERE (CAST(((vt0.c1) NOT NULL) AS TEXT)) ORDER BY (((- (vt0.c1))) NOTNULL)  NULLS LAST, CASE ((vt0.c1)<=(t1.c90))  WHEN ((t1.c90)<>(t1.c90)) THEN ((t1.c90) IS FALSE) ELSE 0X2e50fb1f END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((('2126569445')<=(t1.c90)))>=(NULL)) ORDER BY (((- (vt0.c1))) NOTNULL)  NULLS LAST, CASE ((vt0.c1)<=(t1.c90))  WHEN ((t1.c90)!=(t1.c90)) THEN ((t1.c90) IS FALSE) ELSE 0X2e50fb1f END);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON (((('2126569445')<=(t1.c90)))>=(NULL)) WHERE (CAST(((vt0.c1) NOT NULL) AS TEXT)) ORDER BY (((- (vt0.c1))) NOTNULL)  NULLS LAST, CASE ((vt0.c1)<=(t1.c90))  WHEN ((t1.c90)<>(t1.c90)) THEN ((t1.c90) IS FALSE) ELSE 0X2e50fb1f END;
SELECT COUNT(*) FROM vt0 WHERE ((((((''))<=((vt0.c0))))<=((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.09310281461043457, vt0.c1, vt0.c1)))))) ORDER BY (((((((0.06895950828594843, vt0.c2, vt0.c0))=((vt0.c1, vt0.c1, vt0.c2))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((''))<=((vt0.c0))))<=((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.09310281461043457, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((0.06895950828594843, vt0.c2, vt0.c0))=((vt0.c1, vt0.c1, vt0.c2))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((''))<=((vt0.c0))))<=((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.09310281461043457, vt0.c1, vt0.c1)))))) ORDER BY (((((((0.06895950828594843, vt0.c2, vt0.c0))=((vt0.c1, vt0.c1, vt0.c2))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT (((((((''))<=((vt0.c0))))<=((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.09310281461043457, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((((((0.06895950828594843, vt0.c2, vt0.c0))=((vt0.c1, vt0.c1, vt0.c2))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ((((((''))<=((vt0.c0))))<=((((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((0.09310281461043457, vt0.c1, vt0.c1)))))) ORDER BY (((((((0.06895950828594843, vt0.c2, vt0.c0))=((vt0.c1, vt0.c1, vt0.c2))))AND(vt0.c1 COLLATE NOCASE)))AND(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))*(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))*(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))*(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))*(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))*(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN (vt0.c0 COLLATE RTRIM, TRIM(vt0.c1)))) ORDER BY ((((vt0.c2) NOTNULL))&(((vt0.c1)LIKE(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN (vt0.c0 COLLATE RTRIM, TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOTNULL))&(((vt0.c1)LIKE(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN (vt0.c0 COLLATE RTRIM, TRIM(vt0.c1)))) ORDER BY ((((vt0.c2) NOTNULL))&(((vt0.c1)LIKE(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN (vt0.c0 COLLATE RTRIM, TRIM(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2) NOTNULL))&(((vt0.c1)LIKE(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN (vt0.c0 COLLATE RTRIM, TRIM(vt0.c1)))) ORDER BY ((((vt0.c2) NOTNULL))&(((vt0.c1)LIKE(vt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY (((((t1.c90, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c90, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1)))) NOTNULL), ((((vt0.c1) NOT BETWEEN (t1.c90) AND (vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((t1.c90, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c90, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1)))) NOTNULL), ((((vt0.c1) NOT BETWEEN (t1.c90) AND (vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY (((((t1.c90, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c90, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1)))) NOTNULL), ((((vt0.c1) NOT BETWEEN (t1.c90) AND (vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c90) IS TRUE)  as count FROM vt0, t1 ORDER BY (((((t1.c90, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c90, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1)))) NOTNULL), ((((vt0.c1) NOT BETWEEN (t1.c90) AND (vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c90) ORDER BY (((((t1.c90, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, t1.c90, vt0.c0)) AND ((vt0.c0, vt0.c2, vt0.c1)))) NOTNULL), ((((vt0.c1) NOT BETWEEN (t1.c90) AND (vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN json_patch(t1.c90, vt0.c2) ELSE ((vt0.c1)!=('1471830761')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN json_patch(t1.c90, vt0.c2) ELSE ((vt0.c1)!=('1471830761')) END) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN json_patch(t1.c90, vt0.c2) ELSE ((vt0.c1)!=('1471830761')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN json_patch(t1.c90, vt0.c2) ELSE ((vt0.c1)!=('1471830761')) END) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN json_patch(t1.c90, vt0.c2) ELSE ((vt0.c1)!=('1471830761')) END);
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN (2.092708198E9) AND (((vt0.c0)&(vt0.c0)))) WHERE (((((t1.c90)AND(vt0.c2)))AND(x'')) COLLATE RTRIM) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS LAST, (((t1.c90 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)AND(vt0.c2)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN (2.092708198E9) AND (((vt0.c0)&(vt0.c0)))) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS LAST, (((t1.c90 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((NOT (vt0.c1)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN (2.092708198E9) AND (((vt0.c0)&(vt0.c0)))) WHERE (((((t1.c90)AND(vt0.c2)))AND(x'')) COLLATE RTRIM) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS LAST, (((t1.c90 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c90)AND(vt0.c2)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN (2.092708198E9) AND (((vt0.c0)&(vt0.c0)))) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS LAST, (((t1.c90 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((NOT (vt0.c1)))));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) BETWEEN (2.092708198E9) AND (((vt0.c0)&(vt0.c0)))) WHERE (((((t1.c90)AND(vt0.c2)))AND(x'')) COLLATE RTRIM) ORDER BY (CAST(vt0.c2 AS NUMERIC) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2))))  NULLS LAST, (((t1.c90 IN ())) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((NOT (vt0.c1))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1)AND(vt0.c2)) AS BLOB));
SELECT * FROM t1 WHERE ((((((((t1.c90))>=((t1.c90))))OR((('LqW*擅') NOT NULL))))AND(t1.c90 COLLATE NOCASE))) ORDER BY ((CASE 1.90230798E8  WHEN t1.c90 THEN t1.c90 END)<=(COALESCE(DISTINCT t1.c90, t1.c90))) ASC  NULLS LAST, CASE WHEN HEX(DISTINCT t1.c90) THEN ((t1.c90) IS FALSE) ELSE (t1.c90 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c90))>=((t1.c90))))OR((('LqW*擅') NOT NULL))))AND(t1.c90 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((CASE 1.90230798E8  WHEN t1.c90 THEN t1.c90 END)<=(COALESCE(DISTINCT t1.c90, t1.c90))) ASC  NULLS LAST, CASE WHEN HEX(DISTINCT t1.c90) THEN ((t1.c90) IS FALSE) ELSE (t1.c90 IN ()) END ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((((((((t1.c90))>=((t1.c90))))OR((('LqW*擅') NOT NULL))))AND(t1.c90 COLLATE NOCASE))) ORDER BY ((CASE 1.90230798E8  WHEN t1.c90 THEN t1.c90 END)<=(COALESCE(DISTINCT t1.c90, t1.c90))) ASC  NULLS LAST, CASE WHEN HEX(DISTINCT t1.c90) THEN ((t1.c90) IS FALSE) ELSE (t1.c90 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c90))>=((t1.c90))))OR((('LqW*擅') NOT NULL))))AND(t1.c90 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((CASE 1.90230798E8  WHEN t1.c90 THEN t1.c90 END)<=(COALESCE(DISTINCT t1.c90, t1.c90))) ASC  NULLS LAST, CASE WHEN HEX(DISTINCT t1.c90) THEN ((t1.c90) IS FALSE) ELSE (t1.c90 IN ()) END ASC  NULLS LAST);
SELECT * FROM t1 WHERE ((((((((t1.c90))>=((t1.c90))))OR((('LqW*擅') NOT NULL))))AND(t1.c90 COLLATE NOCASE))) ORDER BY ((CASE 1.90230798E8  WHEN t1.c90 THEN t1.c90 END)<=(COALESCE(DISTINCT t1.c90, t1.c90))) ASC  NULLS LAST, CASE WHEN HEX(DISTINCT t1.c90) THEN ((t1.c90) IS FALSE) ELSE (t1.c90 IN ()) END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))AND(-1212809614 COLLATE RTRIM)))AND(((((NULL)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt0.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c2)))AND(-1212809614 COLLATE RTRIM)))AND(((((NULL)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))AND(-1212809614 COLLATE RTRIM)))AND(((((NULL)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt0.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c2)))AND(-1212809614 COLLATE RTRIM)))AND(((((NULL)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c2)))AND(-1212809614 COLLATE RTRIM)))AND(((((NULL)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (((~ (vt0.c2))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((('1217024714')) BETWEEN ((CASE WHEN 0.02560318823096175 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((CASE vt0.c0  WHEN 0.47331991862481826 THEN vt0.c2 ELSE vt0.c1 END)%(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)>(((((vt0.c0)OR(0.6443400564119621)))OR(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('1217024714')) BETWEEN ((CASE WHEN 0.02560318823096175 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN 0.47331991862481826 THEN vt0.c2 ELSE vt0.c1 END)%(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)>(((((vt0.c0)OR(0.6443400564119621)))OR(x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((('1217024714')) BETWEEN ((CASE WHEN 0.02560318823096175 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((CASE vt0.c0  WHEN 0.47331991862481826 THEN vt0.c2 ELSE vt0.c1 END)%(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)>(((((vt0.c0)OR(0.6443400564119621)))OR(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('1217024714')) BETWEEN ((CASE WHEN 0.02560318823096175 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN 0.47331991862481826 THEN vt0.c2 ELSE vt0.c1 END)%(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)>(((((vt0.c0)OR(0.6443400564119621)))OR(x'')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((('1217024714')) BETWEEN ((CASE WHEN 0.02560318823096175 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) AND ((CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END)))) ORDER BY ((CASE vt0.c0  WHEN 0.47331991862481826 THEN vt0.c2 ELSE vt0.c1 END)%(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)>(((((vt0.c0)OR(0.6443400564119621)))OR(x'')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON vt0.c1 WHERE ((- (CASE 0.6206966008312779  WHEN vt0.c2 THEN t1.c90 WHEN vt0.c1 THEN t1.c90 WHEN vt0.c2 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS LAST, (((vt0.c2))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE 0.6206966008312779  WHEN vt0.c2 THEN t1.c90 WHEN vt0.c1 THEN t1.c90 WHEN vt0.c2 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON vt0.c1 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS LAST, (((vt0.c2))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON vt0.c1 WHERE ((- (CASE 0.6206966008312779  WHEN vt0.c2 THEN t1.c90 WHEN vt0.c1 THEN t1.c90 WHEN vt0.c2 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS LAST, (((vt0.c2))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE 0.6206966008312779  WHEN vt0.c2 THEN t1.c90 WHEN vt0.c1 THEN t1.c90 WHEN vt0.c2 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON vt0.c1 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS LAST, (((vt0.c2))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2)))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON vt0.c1 WHERE ((- (CASE 0.6206966008312779  WHEN vt0.c2 THEN t1.c90 WHEN vt0.c1 THEN t1.c90 WHEN vt0.c2 THEN t1.c90 ELSE t1.c90 END))) ORDER BY (CAST(vt0.c0 AS REAL) IN ()) ASC  NULLS LAST, (((vt0.c2))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((vt0.c2)))))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ('-1007442094');
SELECT SUM(count) FROM (SELECT ALL (('-1007442094') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ('-1007442094');
SELECT SUM(count) FROM (SELECT ALL (('-1007442094') IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ('-1007442094');
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((((0Xffffffffbe333978)-(t1.c90)), vt0.c0 COLLATE RTRIM, TRIM(vt0.c1, 0.28202393302753204))) AND ((((t1.c90)!=(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c0)=(vt0.c2))))) WHERE (CASE WHEN (((0.6960385922584592, vt0.c2, vt0.c1)) NOT BETWEEN ((t1.c90, '0.828504874665369', vt0.c0)) AND ((vt0.c0, t1.c90, vt0.c1))) THEN CAST(vt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.6960385922584592, vt0.c2, vt0.c1)) NOT BETWEEN ((t1.c90, '0.828504874665369', vt0.c0)) AND ((vt0.c0, t1.c90, vt0.c1))) THEN CAST(vt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((((0xffffffffbe333978)-(t1.c90)), vt0.c0 COLLATE RTRIM, TRIM(vt0.c1, 0.28202393302753204))) AND ((((t1.c90)<>(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c0)=(vt0.c2))))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((((0Xffffffffbe333978)-(t1.c90)), vt0.c0 COLLATE RTRIM, TRIM(vt0.c1, 0.28202393302753204))) AND ((((t1.c90)!=(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c0)=(vt0.c2))))) WHERE (CASE WHEN (((0.6960385922584592, vt0.c2, vt0.c1)) NOT BETWEEN ((t1.c90, '0.828504874665369', vt0.c0)) AND ((vt0.c0, t1.c90, vt0.c1))) THEN CAST(vt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.6960385922584592, vt0.c2, vt0.c1)) NOT BETWEEN ((t1.c90, '0.828504874665369', vt0.c0)) AND ((vt0.c0, t1.c90, vt0.c1))) THEN CAST(vt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((((0xffffffffbe333978)-(t1.c90)), vt0.c0 COLLATE RTRIM, TRIM(vt0.c1, 0.28202393302753204))) AND ((((t1.c90)<>(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c0)=(vt0.c2))))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((((0Xffffffffbe333978)-(t1.c90)), vt0.c0 COLLATE RTRIM, TRIM(vt0.c1, 0.28202393302753204))) AND ((((t1.c90)!=(vt0.c1)), CAST(vt0.c1 AS BLOB), ((vt0.c0)=(vt0.c2))))) WHERE (CASE WHEN (((0.6960385922584592, vt0.c2, vt0.c1)) NOT BETWEEN ((t1.c90, '0.828504874665369', vt0.c0)) AND ((vt0.c0, t1.c90, vt0.c1))) THEN CAST(vt0.c2 AS NUMERIC) END);
SELECT * FROM vt0 WHERE (CASE (0xffffffffe23e1103 IN ())  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN 0.625962896156376 END END);
SELECT SUM(count) FROM (SELECT ((CASE (0xffffffffe23e1103 IN ())  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN 0.625962896156376 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (0xffffffffe23e1103 IN ())  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN 0.625962896156376 END END);
SELECT SUM(count) FROM (SELECT ((CASE (0xffffffffe23e1103 IN ())  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN 0.625962896156376 END END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (0xffffffffe23e1103 IN ())  WHEN vt0.c2 THEN CASE WHEN vt0.c2 THEN 0.625962896156376 END END);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END IN (LENGTH(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY LIKELY((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END IN (LENGTH(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY((~ (vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END IN (LENGTH(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY LIKELY((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END IN (LENGTH(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY((~ (vt0.c1))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN vt0.c2 THEN x'' ELSE vt0.c2 END IN (LENGTH(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) ORDER BY LIKELY((~ (vt0.c1)));
SELECT COUNT(*) FROM t1 WHERE (json((((627762742, t1.c90, t1.c90, t1.c90, t1.c90))<=((t1.c90, t1.c90, t1.c90, t1.c90, x''))))) ORDER BY CASE WHEN t1.c90 THEN CAST(t1.c90 AS NUMERIC) WHEN (- (t1.c90)) THEN t1.c90 COLLATE RTRIM WHEN SQLITE_VERSION() THEN ((((t1.c90)AND(-313170863)))AND(t1.c90)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json((((627762742, t1.c90, t1.c90, t1.c90, t1.c90))<=((t1.c90, t1.c90, t1.c90, t1.c90, x''))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c90 THEN CAST(t1.c90 AS NUMERIC) WHEN (- (t1.c90)) THEN t1.c90 COLLATE RTRIM WHEN SQLITE_VERSION() THEN ((((t1.c90)AND(-313170863)))AND(t1.c90)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (json((((627762742, t1.c90, t1.c90, t1.c90, t1.c90))<=((t1.c90, t1.c90, t1.c90, t1.c90, x''))))) ORDER BY CASE WHEN t1.c90 THEN CAST(t1.c90 AS NUMERIC) WHEN (- (t1.c90)) THEN t1.c90 COLLATE RTRIM WHEN SQLITE_VERSION() THEN ((((t1.c90)AND(-313170863)))AND(t1.c90)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json((((627762742, t1.c90, t1.c90, t1.c90, t1.c90))<=((t1.c90, t1.c90, t1.c90, t1.c90, x''))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c90 THEN CAST(t1.c90 AS NUMERIC) WHEN (- (t1.c90)) THEN t1.c90 COLLATE RTRIM WHEN SQLITE_VERSION() THEN ((((t1.c90)AND(-313170863)))AND(t1.c90)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (json((((627762742, t1.c90, t1.c90, t1.c90, t1.c90))<=((t1.c90, t1.c90, t1.c90, t1.c90, x''))))) ORDER BY CASE WHEN t1.c90 THEN CAST(t1.c90 AS NUMERIC) WHEN (- (t1.c90)) THEN t1.c90 COLLATE RTRIM WHEN SQLITE_VERSION() THEN ((((t1.c90)AND(-313170863)))AND(t1.c90)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE ((- (CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c1 END))) ORDER BY DATE((- (t1.c90)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN 0.8499742021900565 END, ((vt0.c1)<=(vt0.c1)), vt0.c2 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS TEXT) ORDER BY DATE((- (t1.c90)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN 0.8499742021900565 END, ((vt0.c1)<=(vt0.c1)), vt0.c2 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE ((- (CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c1 END))) ORDER BY DATE((- (t1.c90)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN 0.8499742021900565 END, ((vt0.c1)<=(vt0.c1)), vt0.c2 COLLATE NOCASE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS TEXT) ORDER BY DATE((- (t1.c90)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN 0.8499742021900565 END, ((vt0.c1)<=(vt0.c1)), vt0.c2 COLLATE NOCASE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON CAST(vt0.c0 AS TEXT) WHERE ((- (CASE vt0.c1  WHEN vt0.c0 THEN t1.c90 ELSE vt0.c1 END))) ORDER BY DATE((- (t1.c90)), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN vt0.c1 WHEN vt0.c0 THEN 0.8499742021900565 END, ((vt0.c1)<=(vt0.c1)), vt0.c2 COLLATE NOCASE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON NULL WHERE (-1567778368);
SELECT SUM(count) FROM (SELECT ((-1567778368) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON NULL WHERE (-1567778368);
SELECT SUM(count) FROM (SELECT ((-1567778368) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON NULL WHERE (-1567778368);
SELECT * FROM vt0, t1 WHERE ((((0.930978747639554))<((((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.930978747639554))<((((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ((((0.930978747639554))<((((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.930978747639554))<((((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE ((((0.930978747639554))<((((t1.c90) NOT BETWEEN (t1.c90) AND (vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (0x1444ccd9 IN (CAST(t1.c90 AS REAL))) WHERE (((((NULL))>=((t1.c90))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL))>=((t1.c90))) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (0X1444ccd9 IN (CAST(t1.c90 AS REAL))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (0x1444ccd9 IN (CAST(t1.c90 AS REAL))) WHERE (((((NULL))>=((t1.c90))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((NULL))>=((t1.c90))) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (0X1444ccd9 IN (CAST(t1.c90 AS REAL))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (0x1444ccd9 IN (CAST(t1.c90 AS REAL))) WHERE (((((NULL))>=((t1.c90))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) NOT BETWEEN (((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))));
SELECT ALL * FROM t1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)IS(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((vt0.c0)IS(vt0.c1)) AS TEXT) ASC);
SELECT ALL * FROM t1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)IS(vt0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((vt0.c0)IS(vt0.c1)) AS TEXT) ASC);
SELECT ALL * FROM t1, vt0 WHERE (x'') ORDER BY CAST(((vt0.c0)IS(vt0.c1)) AS TEXT) ASC;
SELECT ALL * FROM vt0, t1 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c0) NOT BETWEEN (NULL) AND (0.28202393302753204)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (NULL) AND (0.28202393302753204)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c0) NOT BETWEEN (NULL) AND (0.28202393302753204)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (NULL) AND (0.28202393302753204)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE ((x'' COLLATE BINARY IN ())) ORDER BY CAST(((vt0.c0) NOT BETWEEN (NULL) AND (0.28202393302753204)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON CASE CASE t1.c90  WHEN vt0.c2 THEN vt0.c1 END  WHEN 0.6451234930873625 THEN ((t1.c90)/(vt0.c2)) ELSE NULL END WHERE ((((vt0.c1, vt0.c2, 0.1055770088994219)) NOT BETWEEN ((t1.c90, t1.c90, vt0.c2)) AND ((t1.c90, vt0.c1, vt0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY TYPEOF(t1.c90) COLLATE BINARY DESC, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c2, 0.1055770088994219)) NOT BETWEEN ((t1.c90, t1.c90, vt0.c2)) AND ((t1.c90, vt0.c1, vt0.c2))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE CASE t1.c90  WHEN vt0.c2 THEN vt0.c1 END  WHEN 0.6451234930873625 THEN ((t1.c90)/(vt0.c2)) ELSE NULL END ORDER BY TYPEOF(t1.c90) COLLATE BINARY DESC, vt0.c2);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON CASE CASE t1.c90  WHEN vt0.c2 THEN vt0.c1 END  WHEN 0.6451234930873625 THEN ((t1.c90)/(vt0.c2)) ELSE NULL END WHERE ((((vt0.c1, vt0.c2, 0.1055770088994219)) NOT BETWEEN ((t1.c90, t1.c90, vt0.c2)) AND ((t1.c90, vt0.c1, vt0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY TYPEOF(t1.c90) COLLATE BINARY DESC, vt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c2, 0.1055770088994219)) NOT BETWEEN ((t1.c90, t1.c90, vt0.c2)) AND ((t1.c90, vt0.c1, vt0.c2))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE CASE t1.c90  WHEN vt0.c2 THEN vt0.c1 END  WHEN 0.6451234930873625 THEN ((t1.c90)/(vt0.c2)) ELSE NULL END ORDER BY TYPEOF(t1.c90) COLLATE BINARY DESC, vt0.c2);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON CASE CASE t1.c90  WHEN vt0.c2 THEN vt0.c1 END  WHEN 0.6451234930873625 THEN ((t1.c90)/(vt0.c2)) ELSE NULL END WHERE ((((vt0.c1, vt0.c2, 0.1055770088994219)) NOT BETWEEN ((t1.c90, t1.c90, vt0.c2)) AND ((t1.c90, vt0.c1, vt0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY TYPEOF(t1.c90) COLLATE BINARY DESC, vt0.c2;
SELECT * FROM vt0, t1 WHERE ((((((vt0.c1)<>(t1.c90))))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((t1.c90))))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)<>(t1.c90))))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((t1.c90))))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((CAST(vt0.c0 AS REAL))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c1)<>(t1.c90))))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((t1.c90))))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)<>(t1.c90))))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((t1.c90))))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((CAST(vt0.c0 AS REAL))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC);
SELECT * FROM vt0, t1 WHERE ((((((vt0.c1)<>(t1.c90))))>=(((((vt0.c0)) NOT BETWEEN ((t1.c90)) AND ((t1.c90))))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND((- (vt0.c0)))))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END)) DESC;
SELECT * FROM vt0, t1 WHERE (((t1.c90)GLOB(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c90)GLOB(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((t1.c90)GLOB(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c90)GLOB(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((t1.c90)GLOB(vt0.c0)) COLLATE NOCASE);
SELECT * FROM t1, vt0 WHERE ((((t1.c90 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t1.c90 IN ())) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c90 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t1.c90 IN ())) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c90 IN ())) NOTNULL));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ()) WHERE (NULL) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c2 THEN t1.c90 END)), CAST(vt0.c2 COLLATE RTRIM AS INTEGER), (vt0.c0 COLLATE RTRIM IN (((vt0.c1) IS TRUE), 0.8640125303943292))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ()) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c2 THEN t1.c90 END)), CAST(vt0.c2 COLLATE RTRIM AS INTEGER), (vt0.c0 COLLATE RTRIM IN (((vt0.c1) IS TRUE), 0.8640125303943292))  NULLS LAST);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ()) WHERE (NULL) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c2 THEN t1.c90 END)), CAST(vt0.c2 COLLATE RTRIM AS INTEGER), (vt0.c0 COLLATE RTRIM IN (((vt0.c1) IS TRUE), 0.8640125303943292))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) IN ()) ORDER BY (((((vt0.c1 IN ()))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c2 THEN t1.c90 END)), CAST(vt0.c2 COLLATE RTRIM AS INTEGER), (vt0.c0 COLLATE RTRIM IN (((vt0.c1) IS TRUE), 0.8640125303943292))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((3.00250655E8)|(CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY ((t1.c90 COLLATE RTRIM)*(t1.c90))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((3.00250655E8)|(CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90 COLLATE RTRIM)*(t1.c90))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((3.00250655E8)|(CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY ((t1.c90 COLLATE RTRIM)*(t1.c90))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((3.00250655E8)|(CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c90 COLLATE RTRIM)*(t1.c90))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((3.00250655E8)|(CASE t1.c90  WHEN t1.c90 THEN t1.c90 ELSE t1.c90 END))) ORDER BY ((t1.c90 COLLATE RTRIM)*(t1.c90))  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((t1.c90 COLLATE RTRIM) BETWEEN (CASE t1.c90  WHEN vt0.c0 THEN t1.c90 ELSE t1.c90 END) AND (vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90 COLLATE RTRIM) BETWEEN (CASE t1.c90  WHEN vt0.c0 THEN t1.c90 ELSE t1.c90 END) AND (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c90 COLLATE RTRIM) BETWEEN (CASE t1.c90  WHEN vt0.c0 THEN t1.c90 ELSE t1.c90 END) AND (vt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c90 COLLATE RTRIM) BETWEEN (CASE t1.c90  WHEN vt0.c0 THEN t1.c90 ELSE t1.c90 END) AND (vt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c90 COLLATE RTRIM) BETWEEN (CASE t1.c90  WHEN vt0.c0 THEN t1.c90 ELSE t1.c90 END) AND (vt0.c2 COLLATE BINARY)));
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((vt0.c1) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) NOTNULL)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((t1.c90)OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))OR(t1.c90)))AND(t1.c90))) NOTNULL));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM vt0, t1 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (LIKELY(vt0.c1) COLLATE NOCASE);
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(CASE vt0.c1  WHEN t1.c90 THEN NULL ELSE vt0.c2 END AS BLOB) WHERE (TRIM(((vt0.c1)%(vt0.c2)), '777059103'));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c1)%(vt0.c2)), '777059103')) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST(CASE vt0.c1  WHEN t1.c90 THEN NULL ELSE vt0.c2 END AS BLOB));
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(CASE vt0.c1  WHEN t1.c90 THEN NULL ELSE vt0.c2 END AS BLOB) WHERE (TRIM(((vt0.c1)%(vt0.c2)), '777059103'));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c1)%(vt0.c2)), '777059103')) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST(CASE vt0.c1  WHEN t1.c90 THEN NULL ELSE vt0.c2 END AS BLOB));
SELECT ALL * FROM t1 INNER JOIN vt0 ON CAST(CASE vt0.c1  WHEN t1.c90 THEN NULL ELSE vt0.c2 END AS BLOB) WHERE (TRIM(((vt0.c1)%(vt0.c2)), '777059103'));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (t1.c90 IN (t1.c90))  WHEN ((t1.c90)<=(t1.c90)) THEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE (t1.c90 IN (t1.c90))  WHEN ((t1.c90)<=(t1.c90)) THEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) ELSE NULL END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (t1.c90 IN (t1.c90))  WHEN ((t1.c90)<=(t1.c90)) THEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE (t1.c90 IN (t1.c90))  WHEN ((t1.c90)<=(t1.c90)) THEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) ELSE NULL END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (t1.c90 IN (t1.c90))  WHEN ((t1.c90)<=(t1.c90)) THEN ((t1.c90) BETWEEN (t1.c90) AND (t1.c90)) ELSE NULL END);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (t1.c90)) THEN CAST(vt0.c2 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (t1.c90)) THEN CAST(vt0.c2 AS TEXT) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (t1.c90)) THEN CAST(vt0.c2 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (t1.c90)) THEN CAST(vt0.c2 AS TEXT) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE WHEN ((vt0.c0) BETWEEN (t1.c90) AND (t1.c90)) THEN CAST(vt0.c2 AS TEXT) END);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((((((- (vt0.c0)))AND(((NULL) NOT BETWEEN (vt0.c1) AND (7.77907728E8)))))AND(((((t1.c90)OR(vt0.c1)))AND(t1.c90)))))OR(0.025324889891913838 COLLATE BINARY)))AND(((t1.c90) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CAST(vt0.c1 AS TEXT))))OR(IFNULL(t1.c90, t1.c90)))) ORDER BY ((t1.c90) NOT BETWEEN (SUBSTR(t1.c90, t1.c90)) AND (((vt0.c2)-(vt0.c2)))), (((vt0.c1) BETWEEN ('Ku') AND (vt0.c1)) IN (t1.c90, (((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((- (vt0.c0)))AND(((NULL) NOT BETWEEN (vt0.c1) AND (7.77907728E8)))))AND(((((t1.c90)OR(vt0.c1)))AND(t1.c90)))))OR(0.025324889891913838 COLLATE BINARY)))AND(((t1.c90) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CAST(vt0.c1 AS TEXT))))OR(IFNULL(t1.c90, t1.c90)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c90) NOT BETWEEN (SUBSTR(t1.c90, t1.c90)) AND (((vt0.c2)-(vt0.c2)))), (((vt0.c1) BETWEEN ('Ku') AND (vt0.c1)) IN (t1.c90, (((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((((((- (vt0.c0)))AND(((NULL) NOT BETWEEN (vt0.c1) AND (7.77907728E8)))))AND(((((t1.c90)OR(vt0.c1)))AND(t1.c90)))))OR(0.025324889891913838 COLLATE BINARY)))AND(((t1.c90) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CAST(vt0.c1 AS TEXT))))OR(IFNULL(t1.c90, t1.c90)))) ORDER BY ((t1.c90) NOT BETWEEN (SUBSTR(t1.c90, t1.c90)) AND (((vt0.c2)-(vt0.c2)))), (((vt0.c1) BETWEEN ('Ku') AND (vt0.c1)) IN (t1.c90, (((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((- (vt0.c0)))AND(((NULL) NOT BETWEEN (vt0.c1) AND (7.77907728E8)))))AND(((((t1.c90)OR(vt0.c1)))AND(t1.c90)))))OR(0.025324889891913838 COLLATE BINARY)))AND(((t1.c90) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CAST(vt0.c1 AS TEXT))))OR(IFNULL(t1.c90, t1.c90)))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((t1.c90) NOT BETWEEN (SUBSTR(t1.c90, t1.c90)) AND (((vt0.c2)-(vt0.c2)))), (((vt0.c1) BETWEEN ('Ku') AND (vt0.c1)) IN (t1.c90, (((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((((((((((((- (vt0.c0)))AND(((NULL) NOT BETWEEN (vt0.c1) AND (7.77907728E8)))))AND(((((t1.c90)OR(vt0.c1)))AND(t1.c90)))))OR(0.025324889891913838 COLLATE BINARY)))AND(((t1.c90) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(CAST(vt0.c1 AS TEXT))))OR(IFNULL(t1.c90, t1.c90)))) ORDER BY ((t1.c90) NOT BETWEEN (SUBSTR(t1.c90, t1.c90)) AND (((vt0.c2)-(vt0.c2)))), (((vt0.c1) BETWEEN ('Ku') AND (vt0.c1)) IN (t1.c90, (((vt0.c2)) NOT BETWEEN ((t1.c90)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c0)>=(t1.c90)))OR(CAST(t1.c90 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(t1.c90)))OR(CAST(t1.c90 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c0)>=(t1.c90)))OR(CAST(t1.c90 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(t1.c90)))OR(CAST(t1.c90 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((vt0.c0)>=(t1.c90)))OR(CAST(t1.c90 AS TEXT))));
SELECT ALL * FROM t1 WHERE (((((((((((x'')AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND('R労)u'))) NOT BETWEEN ((t1.c90 IN ())) AND (((((t1.c90)AND(t1.c90)))AND(t1.c90))))) ORDER BY (CASE t1.c90  WHEN t1.c90 THEN t1.c90 END IN (((t1.c90)IS NOT(t1.c90)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((x'')AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND('R労)u'))) NOT BETWEEN ((t1.c90 IN ())) AND (((((t1.c90)AND(t1.c90)))AND(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c90  WHEN t1.c90 THEN t1.c90 END IN (((t1.c90)IS NOT(t1.c90)))) ASC);
SELECT ALL * FROM t1 WHERE (((((((((((x'')AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND('R労)u'))) NOT BETWEEN ((t1.c90 IN ())) AND (((((t1.c90)AND(t1.c90)))AND(t1.c90))))) ORDER BY (CASE t1.c90  WHEN t1.c90 THEN t1.c90 END IN (((t1.c90)IS NOT(t1.c90)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((x'')AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND('R労)u'))) NOT BETWEEN ((t1.c90 IN ())) AND (((((t1.c90)AND(t1.c90)))AND(t1.c90))))) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c90  WHEN t1.c90 THEN t1.c90 END IN (((t1.c90)IS NOT(t1.c90)))) ASC);
SELECT ALL * FROM t1 WHERE (((((((((((x'')AND(t1.c90)))OR(t1.c90)))AND(t1.c90)))AND('R労)u'))) NOT BETWEEN ((t1.c90 IN ())) AND (((((t1.c90)AND(t1.c90)))AND(t1.c90))))) ORDER BY (CASE t1.c90  WHEN t1.c90 THEN t1.c90 END IN (((t1.c90)IS NOT(t1.c90)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c2)) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((((0x610cea58)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)!=(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((((0x610cea58)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c2)) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((((0x610cea58)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)!=(vt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((((0x610cea58)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)!=(vt0.c2)) AS TEXT)) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))OR((((0x610cea58)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE ROUND(t1.c90, vt0.c0)  WHEN 0Xffffffff826bf749 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END ELSE (- (vt0.c0)) END) ORDER BY ((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))<=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(t1.c90, vt0.c0)  WHEN 0xffffffff826bf749 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))<=(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE ROUND(t1.c90, vt0.c0)  WHEN 0Xffffffff826bf749 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END ELSE (- (vt0.c0)) END) ORDER BY ((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))<=(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(t1.c90, vt0.c0)  WHEN 0xffffffff826bf749 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))<=(vt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE ROUND(t1.c90, vt0.c0)  WHEN 0Xffffffff826bf749 THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c2 END ELSE (- (vt0.c0)) END) ORDER BY ((((((vt0.c0)OR(t1.c90)))AND(vt0.c0)))<=(vt0.c0)) ASC;
SELECT * FROM t1 WHERE ((- ((('u') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('u') IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- ((('u') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('u') IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- ((('u') IS TRUE))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)OR(vt0.c2))) BETWEEN (((((t1.c90)OR(vt0.c2)))OR(t1.c90))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c2))) BETWEEN (((((t1.c90)OR(vt0.c2)))OR(t1.c90))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)OR(vt0.c2))) BETWEEN (((((t1.c90)OR(vt0.c2)))OR(t1.c90))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c2))) BETWEEN (((((t1.c90)OR(vt0.c2)))OR(t1.c90))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((vt0.c0)OR(vt0.c2))) BETWEEN (((((t1.c90)OR(vt0.c2)))OR(t1.c90))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c1);
SELECT ALL * FROM t1 INNER JOIN vt0 ON vt0.c1 WHERE (((NULL) NOTNULL));
SELECT * FROM t1, vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)LIKE(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY ((((((((((((((((vt0.c2)OR(x'd968')))OR(vt0.c2)))AND(vt0.c0)))AND(t1.c90)))OR(vt0.c0)))OR('ྩk.	J㜅^K')))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN vt0.c1 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)LIKE(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((((((((vt0.c2)OR(x'd968')))OR(vt0.c2)))AND(vt0.c0)))AND(t1.c90)))OR(vt0.c0)))OR('ྩk.	J㜅^K')))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN vt0.c1 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)LIKE(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY ((((((((((((((((vt0.c2)OR(x'd968')))OR(vt0.c2)))AND(vt0.c0)))AND(t1.c90)))OR(vt0.c0)))OR('ྩk.	J㜅^K')))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN vt0.c1 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)LIKE(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((((((((vt0.c2)OR(x'd968')))OR(vt0.c2)))AND(vt0.c0)))AND(t1.c90)))OR(vt0.c0)))OR('ྩk.	J㜅^K')))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN vt0.c1 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN t1.c90 THEN x'' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END)LIKE(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c2))))) ORDER BY ((((((((((((((((vt0.c2)OR(x'd968')))OR(vt0.c2)))AND(vt0.c0)))AND(t1.c90)))OR(vt0.c0)))OR('ྩk.	J㜅^K')))OR(CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t1.c90 THEN vt0.c1 END)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt0.c1)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((x'2f2d')IS NOT(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) IS TRUE)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt0.c1)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((x'2f2d')IS NOT(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt0.c1)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((x'2f2d')IS NOT(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c2) IS TRUE)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt0.c1)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((x'2f2d')IS NOT(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c2) IS TRUE)  WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c1 COLLATE BINARY WHEN ((vt0.c0)LIKE(vt0.c1)) THEN CAST(vt0.c2 AS INTEGER) WHEN ((x'2f2d')IS NOT(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0 IN ()))=(((vt0.c2)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))=(((vt0.c2)>=(vt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0 IN ()))=(((vt0.c2)>=(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))=(((vt0.c2)>=(vt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt0 NATURAL JOIN t1 WHERE ((((vt0.c0 IN ()))=(((vt0.c2)>=(vt0.c2)))));
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)%(t1.c90)))) AND ((((vt0.c2) BETWEEN (t1.c90) AND (vt0.c2)))))) ORDER BY json_extract(((vt0.c2)>=(vt0.c1)), CAST(vt0.c2 AS REAL)), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((((vt0.c1)%(t1.c90)))) AND ((((vt0.c2) BETWEEN (t1.c90) AND (vt0.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_extract(((vt0.c2)>=(vt0.c1)), CAST(vt0.c2 AS REAL)), vt0.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)%(t1.c90)))) AND ((((vt0.c2) BETWEEN (t1.c90) AND (vt0.c2)))))) ORDER BY json_extract(((vt0.c2)>=(vt0.c1)), CAST(vt0.c2 AS REAL)), vt0.c0;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN ((((vt0.c1)%(t1.c90)))) AND ((((vt0.c2) BETWEEN (t1.c90) AND (vt0.c2)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY json_extract(((vt0.c2)>=(vt0.c1)), CAST(vt0.c2 AS REAL)), vt0.c0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt0.c1)%(t1.c90)))) AND ((((vt0.c2) BETWEEN (t1.c90) AND (vt0.c2)))))) ORDER BY json_extract(((vt0.c2)>=(vt0.c1)), CAST(vt0.c2 AS REAL)), vt0.c0;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((+ (CAST('y{AtX\r+(%' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST('y{AtX\r+(%' AS BLOB)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((+ (CAST('y{AtX\r+(%' AS BLOB))));
SELECT SUM(count) FROM (SELECT (((+ (CAST('y{AtX\r+(%' AS BLOB)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE ((+ (CAST('y{AtX\r+(%' AS BLOB))));
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((vt0.c1) NOTNULL) COLLATE NOCASE WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((vt0.c1) NOTNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((vt0.c1) NOTNULL) COLLATE NOCASE WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((vt0.c1) NOTNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((vt0.c1) NOTNULL) COLLATE NOCASE WHERE ((vt0.c1 IN ()));
SELECT COUNT(*) FROM t1 WHERE (IFNULL(SUBSTR(t1.c90, t1.c90), ((((t1.c90)OR(t1.c90)))OR(t1.c90)))) ORDER BY (~ (t1.c90 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(SUBSTR(t1.c90, t1.c90), ((((t1.c90)OR(t1.c90)))OR(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c90 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(SUBSTR(t1.c90, t1.c90), ((((t1.c90)OR(t1.c90)))OR(t1.c90)))) ORDER BY (~ (t1.c90 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(SUBSTR(t1.c90, t1.c90), ((((t1.c90)OR(t1.c90)))OR(t1.c90)))) IS TRUE)  as count FROM t1 ORDER BY (~ (t1.c90 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (IFNULL(SUBSTR(t1.c90, t1.c90), ((((t1.c90)OR(t1.c90)))OR(t1.c90)))) ORDER BY (~ (t1.c90 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0)-(vt0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (vt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST((+ (vt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0)-(vt0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (vt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)-(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST((+ (vt0.c2)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0)-(vt0.c1)) COLLATE RTRIM) ORDER BY CAST((+ (vt0.c2)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)=((~ (t1.c90))))) ORDER BY ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)==((~ (t1.c90))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)=((~ (t1.c90))))) ORDER BY ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)==((~ (t1.c90))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((vt0.c2)=((~ (t1.c90))))) ORDER BY ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ('-1546804495');
SELECT SUM(count) FROM (SELECT (('-1546804495') IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ('-1546804495');
SELECT SUM(count) FROM (SELECT (('-1546804495') IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ('-1546804495');
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c2) NOT NULL)))) ORDER BY ((TIME(vt0.c1, '-1250642568', vt0.c1)) ISNULL)  NULLS FIRST, ((0xffffffffa3dfa275)<(vt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((TIME(vt0.c1, '-1250642568', vt0.c1)) ISNULL)  NULLS FIRST, ((0xffffffffa3dfa275)<(vt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c2) NOT NULL)))) ORDER BY ((TIME(vt0.c1, '-1250642568', vt0.c1)) ISNULL)  NULLS FIRST, ((0xffffffffa3dfa275)<(vt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN (((vt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((TIME(vt0.c1, '-1250642568', vt0.c1)) ISNULL)  NULLS FIRST, ((0xffffffffa3dfa275)<(vt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT (vt0.c0)) IN (((vt0.c2) NOT NULL)))) ORDER BY ((TIME(vt0.c1, '-1250642568', vt0.c1)) ISNULL)  NULLS FIRST, ((0xffffffffa3dfa275)<(vt0.c2)) ASC  NULLS FIRST;
