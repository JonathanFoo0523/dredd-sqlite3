-- Time: 2024/06/11 03:00:39
-- Database: database82
-- Database version: 3.40.0
-- seed value: 3811351882
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT OR ABORT INTO rt0(c3, c1, c4) VALUES (NULL, x'', 0.2054459978151706), (0xe770fe0, x'', '242683872'), (0.2054459978151706, x'', 2.42683872E8); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
DROP TABLE vt1; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c3) VALUES (0X6685a397, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-2091611003'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c2=0.3925626583996392 WHERE ((rt0.c0)>>(rt0.c2 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1587791116 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'de96'  WHEN x'de2b' THEN NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((912788976 IN (0.6794434997320333))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-2091611003' AS NUMERIC) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1720034199 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1717606678 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '261726839 622071287 sz=1687625749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1720034199'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1767223264 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((-1188037178, NULL, 0.783973747842665)) BETWEEN ((NULL, 0x7cdd323, x'8a1e')) AND (('130929443', NULL, 0.8598695857693781))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -6440152'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1188037178 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1720034199 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '315685125 sz=-2008805869 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-631172340'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2091611003 sz=130929443 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=261726839 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1313070573 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('],)8') IS FALSE))LIKE(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('.uY5&')||(-1e500)))-(((0.19475857249924733) NOT BETWEEN (-6440152.0) AND ('vg}b')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-810542292 sz=1469863829 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1642121812 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0') NOT BETWEEN ('') AND (0x64972015))  WHEN ((x'')IS NOT(0Xffffffffd329005d)) THEN CASE x'34fc4e7f'  WHEN NULL THEN 0.19475857249924733 ELSE NULL END ELSE ((NULL)IS NOT(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1355588473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x2dd7c147, 0.12512582799533933, NULL))=((NULL, 0.5443709592831268, x'')))) NOT BETWEEN (((0.8598695857693781) IS FALSE)) AND ((((NULL)) BETWEEN (('-782918099')) AND ((1.642121812E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=242683872 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8548750871951326)) BETWEEN (('-302860371')) AND ((0.17565728952985282)))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=904936829 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-6440152 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1949843910 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1627443926') NOT NULL))OR(((-6440152) NOTNULL))))AND(((1687625749)&('')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'bda3')/(0.9661101731120117))  WHEN ((x'fbfa')>>(x'e798')) THEN CAST(NULL AS TEXT) ELSE ((NULL)OR('-810542292')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(1719293139)))AND(x'')))=((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))OR(x'' COLLATE NOCASE)))OR(((((((((NULL)AND('1717606678')))OR(x'')))AND(NULL)))OR(x'95f8')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '755548723 sz=787399860 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=261726839 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1666771680 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0x11ac48c9)))&(('' IN ('ii^|')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2110110594 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_extract(NULL, 0.3127817700408059) IN ((('-752287651')/(0.783973747842665)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '130929443'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -6440152  WHEN '296503497' THEN NULL ELSE x'' END) BETWEEN (0.39533577455947555) AND ('-2008805869' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1717606678'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_insert(0.3345078624358654, 1719293139, -1382865882) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1379509138 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1587791116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=769114439 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=931381880 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) BETWEEN ('0.39533577455947555') AND ('U-')))OR((+ (-8.10542292E8)))))OR(((NULL)<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))OR(CAST(NULL AS REAL))))OR((((NULL))>(('ệDdV#'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.8060728989162619 THEN x'9409' ELSE NULL END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1227347042, x'', x'')) NOT BETWEEN (((x'' IN ()), NULL, ((('1259824013')) BETWEEN ((0X29b700ee)) AND ((NULL))))) AND ((NULL, MIN(NULL, NULL), ((0.7835313299901081) IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_valid(x'ea86'))IS(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0xffffffffd2b97f08)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1539148597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=788342439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1767223264 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -122567510 sz=-122567510 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.9114437604303064  WHEN NULL THEN NULL END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1746918363 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1339555920'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=325367572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1382865882'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (('780151034') NOT BETWEEN (x'b639ad9e') AND (0.19475857249924733))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -610880747'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1375568144 -1382865882 sz=-1188037178 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)%('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((-435802445))!=(('-218375756')))  WHEN (+ (0.5373755087123441)) THEN ((NULL)GLOB('755548723')) ELSE ((-0.0) NOT BETWEEN (0.19636995366607135) AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '435077223 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((-218375756)|(x'b5f5')), (NOT (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1528699729'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1738795389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=309270654 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1065519940 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2008805869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-759595256' AS REAL))||((('-1569475556') NOT BETWEEN (x'de8b') AND ('710012135')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.2256751E8)OR(0.8114983086505124)))AND(0.4534432352294573))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=797988163'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1504028014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -2008805869 sz=1270787518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.47572035002020796  WHEN '-1382865882' THEN NULL ELSE 0.16545502187972738 END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-6440152 sz=-2141082504'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1539148597'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1180646989'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1964240700 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('W\r6*5)Y쒴')<=(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1628643648')) NOT BETWEEN ((x'')) AND ((-1405785968)))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.4534432352294573)))<=((('0.5443709592831268') NOT BETWEEN (NULL) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1301969934'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-631172340 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3941011107734784)) NOT BETWEEN ((((0.4534432352294573)<=(NULL)))) AND ((((NULL)GLOB('1259824013'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('B') NOT BETWEEN (x'') AND (x'')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1373484831 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=483420446'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2141082504 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('1311207606' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '336761262 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '578413618 sz=782640947'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=782640947'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1713938760 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '912788976 sz=306257266 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((839927188)LIKE('336761262')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=552295617 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-O^掍j)/]')%(x'c564')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '969976979 sz=931381880 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '429398423 0 sz=306257266 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2041698675') NOT NULL)))>=(((('XT')==('u-'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1612100696 sz=-2782031 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-909901021 780151034 sz=-2043651247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-940419519 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-918146178 4 sz=315685125 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1831687156'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1065519940 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1008059161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1065519940'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1035631335 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-476664173 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))%(((x'')+(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=425113012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1618985496 0 sz=429398423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1405785968 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-119239907 111778336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-758710217')AND(NULL)))OR(NULL)))AND(0X35f03d7d)))OR(0.9728852460126944)))==(CAST('-1225882701' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (-1029815834) AND (0Xffffffffbe0e78a2))) BETWEEN ((('-2036756002')||('-1973496962'))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1324034227'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=488286391 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '354970457 sz=-1618985496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2782031'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -2103626616 sz=-1741929630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1870276010 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-925914516 sz=866061459 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1627443926 COLLATE BINARY)!=(((x'') NOT BETWEEN (x'') AND (0.9728852460126944)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('~ZTn')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')||(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1092684741 sz=296503497 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Q>')) BETWEEN (((x'' IN ('N孑', 'dr')))) AND ((((((x'')OR('-714330506')))OR(x'5a93'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8980687317670236 AS TEXT))IS NOT(CAST(x'024e' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1454654109'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=-918146178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)%((NOT ('1845309900')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=252529136'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-2089797523'  WHEN '-302860371' THEN x'9f9d' WHEN '1469863829' THEN '.uY5&' WHEN 0.3941011107734784 THEN NULL END IN (197494165 COLLATE BINARY, CASE 'X\r匥'  WHEN '-1162531816' THEN x'' WHEN NULL THEN NULL WHEN 0x5c2b220e THEN 0.6958968010191693 ELSE 0.1523064116747952 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((0Xffffffffe8ceb49c)OR('1964240700')))AND('W>')))AND(0.11871576580744991)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.10634787E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1964240700')LIKE(x'')))<(((NULL)>=(-1.7976931348623157E308)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' END)AND((((0xffffffffaf548fc0, 0.8841263144229713, -1379509138)) NOT BETWEEN ((x'', 0xffffffffa65a5a92, -1573708654)) AND ((0X12411d72, 0.9725488685077144, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2043651247 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 425113012 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1237099625 sz=-1035631335'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '425113012 2130102169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '752196603 sz=889002066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1581465786 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1717606678')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=904936829 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN '0.7835313299901081' WHEN x'' THEN 0.9661101731120117 WHEN '-1831687156' THEN '' WHEN NULL THEN '-27111897' WHEN NULL THEN 'W>' ELSE x'' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1262500685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1198140438'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((((x'')OR('-1984892244')))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN ' d%&쁧' THEN 7.82640947E8 WHEN '0.17565728952985282' THEN NULL WHEN 0.9713346368319151 THEN '-303306717' ELSE 1.7976931348623157E308 END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1642121812' COLLATE RTRIM) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1852977259 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1109593866 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.227347042E9)AND(x'')))AND((((x'', 0xfffffffffee5ba62, 0Xffffffff99a66195)) BETWEEN ((x'', NULL, x'')) AND (('', '', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NOT (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1819502521 sz=-918146178'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.38873004279168544)) NOT BETWEEN ((x'53de')) AND ((-1.375568144E9))) THEN CAST('UX]hY뜟%.' AS INTEGER) WHEN x'4a0f' THEN ((NULL)&(0.9859764505373366)) WHEN CASE NULL  WHEN 0.9305052761520596 THEN 0.5958774102192143 ELSE NULL END THEN ((x'')%(NULL)) ELSE (0.3659724968107866 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('23043801' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('429398423') AND (x''))) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 531088451 sz=1052535819'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2041698675 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((INSTR(NULL, x''))GLOB('' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '242683872'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=315685125'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-107746891 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1225882701 0 sz=-1301414661 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1687625749 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=1573378008 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', NULL, x'')) BETWEEN ((((x'')GLOB(0.677248378639045)), '-1528699729', x'')) AND (((('-1669308050') IS TRUE), CAST(NULL AS REAL), ((NULL)<=(0.3659724968107866))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('xP'))>=(('483420446'))))AND(((((NULL)AND(-1.7976931348623157E308)))OR(0.11871576580744991)))))OR(((NULL)||(x'2874')))))OR((+ (NULL)))))AND(((x'') BETWEEN ('-1022211786') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -545099479'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-6440152'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' WHEN x'' THEN x'' WHEN '-1280345040' THEN 0.12512582799533933 END)%(x'929e2098')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1151405953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1686084137') IS TRUE)  WHEN CAST(NULL AS BLOB) THEN LIKELIHOOD('0.39533577455947555', 0.49361330347110166) ELSE ((((NULL)OR('')))AND('-752287651')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '606340189 sz=-962601500 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=839927188 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 7.55548723E8 END) BETWEEN (((((NULL)OR('0.9114437604303064')))AND(x'f2c2eae1'))) AND (CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, x''))!=(('1628643648', 0.8615053923976597, x'374d'))))|((0.3127817700408059 IN ('1301969934')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '710012135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1655320795 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-232224303')) BETWEEN (('2110110594')) AND (('0.9713346368319151'))) IN (CAST('_p<櫙LYVk' AS REAL), (((''))>((x'3aff'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1727417825 -1339555920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-948987603 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.0802071347192097 THEN x'' ELSE 0.2737759325057696 END)-(TRIM('f4', 'N|'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-122567510 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1022181514 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=123572355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2113263453'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1907663601 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=180765845 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=931381880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1023733544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-565153231'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1618985496'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1269239642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1949843910'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6f09') BETWEEN (x'') AND (0.783973747842665)))>>(((((x'')OR(NULL)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1131046549 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1170381758 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=687890364 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -863502399 0 sz=862303661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '306257266 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-770891875 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '710012135'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (NULL) AND (x'')))>=(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1767223264'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=812594972 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('-1382865882') AND (x'')))OR((((-1.382865882E9, NULL, '~C.!N	4q'))>((6453821, 1.7976931348623157E308, x'1b5bfe56f385'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-435802445 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1512916050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1856494066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2028355472 sz=-317575686 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)<>('-1568854035')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'2f72') AND (NULL)))<((((0.8667435402586685)) NOT BETWEEN (('740379640')) AND (('503037829'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((RTRIM(x''))) AND ((((x'') NOT BETWEEN ('-2141082504') AND (x'be60'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1200960509 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('55', ((NULL) NOT BETWEEN (0.710395541192427) AND (-100724006))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-963175021'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1470766220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1812647141 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF('-958535867', '')) NOT BETWEEN (CAST('?\r6f' AS REAL)) AND (CASE WHEN 0.8748587584778571 THEN x'418c' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=116357972 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('0.783973747842665' IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=797988163 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((481286865)OR(-2.043651247E9)))AND(0.18237235793542883)))AND(0.861209169959347)))OR(x'')))+(CASE '-940419519'  WHEN NULL THEN '0' ELSE 0.9728852460126944 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1612100696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('931381880') BETWEEN (x'') AND (-1382865882))) BETWEEN (((((NULL)AND('501561535')))OR('-1716648916'))) AND ((~ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=880465865 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('F}[4jl') NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-582634174' COLLATE RTRIM)AND((((x'')) BETWEEN ((x'')) AND ((7.10012135E8))))))OR(0.6072324810215706 COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2121151500 1958685431 sz=-1339555920 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))>((x''))))OR(((0.9236062913714198)>>(0.11517408055507472)))))AND(0.3208233872638663)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-970255416 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1724664453 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1949843910 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1154408484'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(0xffffffffa273b41c, x'') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-679192227 1717606678 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '81300249 -741243597 sz=912788976 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=336761262 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.35312312843663274) IS TRUE) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)-(((x'')<<(0.8866429205669909)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1767223264 0 sz=1553981769 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-435802445'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1373484831 sz=822301310 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9305052761520596')AND('-631172340')))AND(-6.10880747E8)))IS NOT(-1880606585 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'14e4'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1820718915 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-782918099 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x48469f13 IN ())) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-1986772603') AND (x'')))%(((x'3914') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1926614324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-562682360 sz=-713176704 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1610568504 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'')))AND(((0x11031ec7) IS TRUE))))OR(CASE NULL  WHEN x'' THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=797988163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' COLLATE BINARY)AND((((x'29d7', x'', NULL))!=(('tC~/[]', 0X3a998155, NULL))))))AND(((0.20488049505190065)IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-740334634'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1563576698 sz=-171107178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1937529600'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=384903219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1516561301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1772596083'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1382865882 sz=434293391 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=158560019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=699859182'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-122567510 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1583572085 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '345438707 sz=1717606678 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=71461554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '296503497 sz=249422600 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-120141661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2109463879 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1681130486'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1425195045 sz=2039297956 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=296503497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1347198080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=876929006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)>('2011180239')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1948356671 986043593 sz=-206506563 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=152123315 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=797988163 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX(x'', 0.38863646913548333)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-435802445' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 969976979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)IS(((NULL)*(0.3208233872638663)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')&(NULL)) COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2071705586'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1767223264 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN NULL THEN 0.4165674955987243 END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=289178537 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (json_type(0.1474750858509476) IN (CAST(x'9b5d' AS INTEGER), (+ (0.3659724968107866)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '780151034 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-6440152 1708029755'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER(DISTINCT 'lᄄᬳ'))OR((' *' IN ()))))AND((('h#')LIKE(x'504a')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.8060728989162619, NULL))LIKE((((0.628906102903016))>=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('B쒴gchQ醮', 0.4881810491396392, NULL)) NOT BETWEEN ((json_array(0X2e8028fa, x'', '', NULL), ((NULL) NOT BETWEEN (NULL) AND ('-891613133')), CAST(NULL AS REAL))) AND ((((-1097429704)|(x'030a')), ((1296201820)<>(0.503938977718046)), ((x'')<<(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9725488685077144) BETWEEN (NULL) AND (',*')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=121960833'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-16004335'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-721280942' IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -2091611003 sz=989286379 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=316577552 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((('322401242')) NOT BETWEEN (('-618550080')) AND ((NULL))), ((NULL)+(0Xffffffffd40233d7))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.041769163791605)>>(0.9843250442900608)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3*H')>>('-810542292')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=931381880'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1129641684 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '-581868626'  WHEN -1.618985496E9 THEN x'' ELSE '-2043651247' END THEN UPPER(DISTINCT '863587474') WHEN (('787399860')<=(0.16037698402832523)) THEN (+ (-761320449)) WHEN ((((1.720034199E9)AND(NULL)))OR('838808359')) THEN ((((' d%&쁧')OR(x'')))AND('QZ')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '199462011 sz=-1924643858'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1469863829 sz=-1926674422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=839927188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'km貅!'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=318751699 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2782031 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '953878531 sz=-2782031 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(x'2314')))OR(x'')))OR(NULL)))AND(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1588828147 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('W\r6*5)Y쒴' IN ()))IS NOT(((0.2547656898244858) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-262097407'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 412629491 sz=1349368072 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 -1730355911 sz=700687115 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1928656206', 'GMOP1IQN', -1035631335)) BETWEEN ((load_extension(x''), ((NULL)-(x'')), (- (NULL)))) AND ((x'' COLLATE BINARY, (('gMOp1IQN')GLOB('tC~/[]')), (('')+(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1573499155 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=729714872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID())LIKE((((0.18237235793542883)) BETWEEN (('L\n]sa-蔙#')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-763563728 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=921779219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')LIKE('SW{}+Da|')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1065519940 sz=494743591 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(((0.1765039298862382) BETWEEN (0x61411b54) AND (NULL)), ((NULL) NOT BETWEEN (',*') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-894239718'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1618985496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2129409315 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1502619639 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.1634719015729631 IN ()) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((x'') NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1431463106'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('tc~/[]')>(0.11517408055507472)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.5443709592831268)))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1746152248'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 -2041960875 sz=-1041204460'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1729329242'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1848609097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7610548923885888 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1902700052 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('[e5Q?RhC' COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1317237566'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))>=(('755548723' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1469863829 sz=-1511794853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1831687156 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1569475556 sz=325367572 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1725213731 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5aa8') NOT BETWEEN (x'fc25') AND ('-1022686683')))<<('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<(CASE ''  WHEN '839927188' THEN '-1576069092' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1456160743 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-909901021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN x'' THEN '-1405785968' WHEN '48282874' THEN 0x743841c6 WHEN 0.3773547825227206 THEN '-1194867623' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1603369428 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=782640947 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1426213136 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-64366638 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1964240700 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('h#' AS TEXT)) NOT BETWEEN ((((x'60c5')) NOT BETWEEN ((x'')) AND (('F}[4JL')))) AND (((NULL)<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '969976979 -1369354968 sz=614107631 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1965038347 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=250458534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.4547842217303296)>('䇆L\n)')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-779977654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 425113012 sz=-1831687156 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('-1227347042' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==('-718015976'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('') BETWEEN ('-542386847') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7cc4'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN -1528699729 THEN NULL WHEN 1715218945 THEN '?O' WHEN 325367572 THEN '' ELSE NULL END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((((('-1569475556')AND(x'')))AND(0xffffffff9fe653a8))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1628643648 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('zMQ7')) BETWEEN ((x'98dd')) AND ((0.8752911362555168))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN CASE x''  WHEN 'Zk' THEN x'' END WHEN '0' THEN 0.8586792944544441 WHEN ((0.34703023526372034) IS TRUE) THEN (~ (NULL)) WHEN ('-1002293944' IN ()) THEN ((0x799c975d) ISNULL) WHEN (('') ISNULL) THEN ((NULL)>>(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1949843910'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(x'eb25')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1408010476 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=149402272 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1666771680 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) IS TRUE))OR(((x'066b')<=(0.9843250442900608)))))AND(((NULL) NOT BETWEEN (1542168345) AND (-1.504028014E9)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -6440152 sz=1137602928 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=285417159 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0x699b3e87 AS INTEGER)) BETWEEN (((((0.5064513951402261)AND(NULL)))AND(x'513b'))) AND (((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1227347042 sz=-92884929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=157530045 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-536692798 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=425113012 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0X2f905543)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1035631335 1820132475 sz=-1227347042'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')&('넖wa1Q^')))OR((~ ('')))))OR((~ (x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('gMOp1IQN')AND('FALSE')))AND(0.6484605039792194)))!=((('-2091611003') BETWEEN ('<A!G詮>砄') AND ('0.11871576580744991')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME(0X303ec0ec, 3.15685125E8, NULL, 0.9721991043196603, '', NULL, '-1065519940')) NOT BETWEEN (((('-181813577')) NOT BETWEEN ((1785412031)) AND (('M廕ඁ*TP鞞zN')))) AND (((('\r'))<=((0Xfffffffff2fbd9b4))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2006834555'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1642121812 -758710217 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-940419519 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1302089006 sz=-1606190364 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1949843910'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (x'')) IN (((('', 0.39518905978070085, '429398423'))<=((-1.831687156E9, 0.6240399641511762, NULL))), 'b', (((0.3426465146536286, '1627443926', ''))>=((0.3773547825227206, -4.35802445E8, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1472350529 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-782918099 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1008059161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=797988163'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1451654166 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1379509138 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-4.76664173E8)OR(NULL)))AND(NULL))))<((((' d%&쁧')<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1365339054 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-333510932')))=(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT NULL COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=2043949866 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=981368337'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '782640947 sz=-476664173 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1670938905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1373484831 sz=-1099253176 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '203102234'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-476664173 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=904936829 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-616536875'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('U-' COLLATE NOCASE)) AND (((~ (5.52295617E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1984983468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1106347870 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=93248266 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1990109201 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1106347870 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1065800645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1591063054'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1539148597 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0.19690074702950244)))OR(x'')))>(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((912788976)<=(x'')), '-2029454202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-798782659 sz=-302860371 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1641027184 -752287651 sz=-2097352666 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '929106086'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE '425113012'  WHEN 0.4881810491396392 THEN NULL END)OR(CAST(0.05845246754023914 AS TEXT))))OR('-1227347042')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1475058078'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=602219872 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-234959842 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE RTRIM)OR(((x'')||(0Xffffffffcc2ce1ac)))))AND((('#znJ>I')==(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('')))OR(0.19690074702950244))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', -2.091611003E9, '-1774596622', x'', NULL)) BETWEEN (((0.5393710734080394 IN ()), ((x'')+(1767223264)), 'jW', IFNULL(DISTINCT 1696225727, 0.9725488685077144), ((x'') IS FALSE))) AND ((json_valid(x''), TRIM(0.2041872869351794), CASE x'1321'  WHEN NULL THEN 0.8586792944544441 WHEN 0.09368685787675957 THEN -7.58710217E8 WHEN 0.5373755087123441 THEN 0x3a9e71d8 END, NULL, 'S✳YQ+g~J'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=699859182'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))OR(((('\6')) BETWEEN ((0.26076218284621333)) AND ((0.9713346368319151))))))OR(((x'a2e6') NOT BETWEEN ('P[?鏷\n紛eiV') AND ('-1225882701')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (NULL)), (('K#ua')<(x'929a')), '#2' COLLATE BINARY))==(((NULL IN ()), (((('1456861609')OR('-1106347870')))AND('nM凉')), NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1446886443 -98518507 sz=503526072'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('769114439') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT (0.6614739811160945)) THEN CASE WHEN x'' THEN 0.031947172295049175 ELSE '-1871207239' END ELSE '5y8*p*.Ꮝ' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '959960355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1519709476'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '261726839 2083771990 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1474609393 sz=780151034 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN (0.8598695857693781 COLLATE NOCASE) AND (((x'') NOT BETWEEN (NULL) AND (769114439)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.11871576580744991)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-798953163)LIKE(0Xf99a277)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('iVrM')) AND ((((0.6572574872438588) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=514409071 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) NOT BETWEEN (UPPER(x'')) AND (((-2043651247) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1301969934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '439177355 sz=-1249598251 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND(0.030919827293587665)))OR('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>(((-1746918363) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1717606678 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1213227633'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=589710971 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-533648236 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=522385570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1022695025 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2051651225 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('449835187')>('-1775223940')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-909901021' IN ()))<(TRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1690413079 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-47871509 unordered noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1103227529'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1612100696 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.6572574872438588, x'', x''))<>(('-1997895406', 'x8lsC*+fr', 0x391049de))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1005404018 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1086750078 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (((0.23214075676482593, '-1655974030', -3.02860371E8))<=((x'', x'', NULL))), 0x6c276581 COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'4aac') NOT BETWEEN (x'') AND ('W')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1746918363 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '465115655 sz=1949664656 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.4884027775346226 COLLATE RTRIM)%(((NULL)LIKE('0嬱9+H')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=98805129 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1175578625 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1603918216 483420446 sz=412242059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=483420446 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -491249646'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(NULL AS TEXT))AND(NULL)))OR(CAST(NULL AS INTEGER))))AND((0.6614739811160945 IN ()))))AND(((0.4884027775346226)/(0.9306010021857434)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('797988163' COLLATE NOCASE)<=(((0.5231050820446123) BETWEEN (x'') AND (0.14112928392294377)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1178212821'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=631595295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('|Sy串}RgM-')AND(NULL)))OR((('292221921') IS FALSE))))AND((('') BETWEEN ('-1252213801') AND (0.9126897525434895)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(x'', '')) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1539148597'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.0' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-30986498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-782918099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1065519940'))<((x'')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-640862570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=80823835 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<('ꧦT')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1669610496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((1301969934)IS('-19903687'))  WHEN ((NULL)LIKE(x'')) THEN CAST(NULL AS REAL) ELSE ((((((((((((-1050945921)AND(x'5798')))AND(x'')))OR(-1.19239907E8)))AND(x'89f2')))OR(NULL)))OR(0.11662558538263001)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1865209022'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1232302830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=519848334 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1029815834 sz=-1382865882 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1772647802'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1137943342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1643291476 0 sz=958371026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=904936829 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-864275509'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '89699696 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.3292866473988715)) BETWEEN (('0.3345078624358654')) AND ((NULL))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1687625749 noskipscan'); -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0, c1, c3) VALUES (NULL, 0x5b2c0397, x'', '793431976', 0.672762929916353); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=7.8739986E8; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c3='0.09368685787675957' WHERE ((rt0.c4 COLLATE BINARY) NOT NULL); -- 0ms;
UPDATE OR ABORT rt0 SET (c3, c0)=(x'02fc', x'') WHERE ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))||(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END)); -- 0ms;
PRAGMA application_id; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=('483420446', 252288975) WHERE rt0.c0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4) VALUES ('-1587791116', '.1Pd\r', NULL); -- 0ms;
PRAGMA threads = 2234393222439494884; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA cache_size = 3155944999029106857; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=285417159 WHERE ((rt0.c2) NOTNULL); -- 4ms;
UPDATE rt0 SET (c3)=(x''); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
PRAGMA application_id; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
VACUUM; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA threads; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR FAIL rt1 SET (c2)=('-1379509138') WHERE (x'' IN ()); -- 0ms;
PRAGMA main.optimize; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1, order=ASC); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0.2737759325057696); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=''; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (0xffffffffe8b58460, NULL, x''); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.9843250442900608) WHERE NULLIF(DISTINCT vt0.c1, ((' *')IS(vt0.c1))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33360'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL, c2=x'' WHERE rt1.c2; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES ('1528762514', 0Xffffffff8d8d659d, NULL), (-8.10542292E8, '', '-1587270493'), (x'', 0.07731505150952467, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2017514072); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2130370779);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '16236'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10041'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 161881721); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7906'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49959'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 7ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1939322920); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8255'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44424'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN (((NOT (rt0.c1)), ((rt0.c1)<=(rt0.c3)), ((rt0.c4)IS NOT(rt0.c1)))) AND ((rt0.c4 COLLATE RTRIM, highlight(vt0.c1, vt0.c0, vt0.c1, rt0.c2), CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN (((NOT (rt0.c1)), ((rt0.c1)<=(rt0.c3)), ((rt0.c4)IS NOT(rt0.c1)))) AND ((rt0.c4 COLLATE RTRIM, highlight(vt0.c1, vt0.c0, vt0.c1, rt0.c2), CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN (((NOT (rt0.c1)), ((rt0.c1)<=(rt0.c3)), ((rt0.c4)IS NOT(rt0.c1)))) AND ((rt0.c4 COLLATE RTRIM, highlight(vt0.c1, vt0.c0, vt0.c1, rt0.c2), CAST(vt0.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN (((NOT (rt0.c1)), ((rt0.c1)<=(rt0.c3)), ((rt0.c4)IS NOT(rt0.c1)))) AND ((rt0.c4 COLLATE RTRIM, highlight(vt0.c1, vt0.c0, vt0.c1, rt0.c2), CAST(vt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4, rt0.c4, rt0.c1)) BETWEEN (((NOT (rt0.c1)), ((rt0.c1)<=(rt0.c3)), ((rt0.c4)IS NOT(rt0.c1)))) AND ((rt0.c4 COLLATE RTRIM, highlight(vt0.c1, vt0.c0, vt0.c1, rt0.c2), CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0, rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))/((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ()))/((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))/((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3 IN ()))/((vt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST((~ (rt0.c3)) AS NUMERIC)) ORDER BY (((rt0.c3 IN ()))/((vt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.29168066473709686) ORDER BY (((((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))OR((rt0.c1 IN ()))))OR((+ (rt0.c4)))))OR((rt1.c0 IN (rt1.c1)))))AND(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.29168066473709686) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))OR((rt0.c1 IN ()))))OR((+ (rt0.c4)))))OR((rt1.c0 IN (rt1.c1)))))AND(CHANGES())) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.29168066473709686) ORDER BY (((((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))OR((rt0.c1 IN ()))))OR((+ (rt0.c4)))))OR((rt1.c0 IN (rt1.c1)))))AND(CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.29168066473709686) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))OR((rt0.c1 IN ()))))OR((+ (rt0.c4)))))OR((rt1.c0 IN (rt1.c1)))))AND(CHANGES())) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (0.29168066473709686) ORDER BY (((((((((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c2))))OR((rt0.c1 IN ()))))OR((+ (rt0.c4)))))OR((rt1.c0 IN (rt1.c1)))))AND(CHANGES())) DESC;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c1)<<(vt0.c0)))|(((725387514) BETWEEN (rt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(vt0.c0)))|(((725387514) BETWEEN (rt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c1)<<(vt0.c0)))|(((725387514) BETWEEN (rt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<<(vt0.c0)))|(((725387514) BETWEEN (rt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c1)<<(vt0.c0)))|(((725387514) BETWEEN (rt0.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))||((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))||((+ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))||((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))||((+ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))||((+ (NULL)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((vt0.c1 COLLATE BINARY IN ()));
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END IN ()));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (UPPER(vt0.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((rt1.c2)>=(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY vt0.c1 DESC  NULLS FIRST, ((rt1.c2)>=(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (UPPER(vt0.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((rt1.c2)>=(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (UPPER(vt0.c0)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY vt0.c1 DESC  NULLS FIRST, ((rt1.c2)>=(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((~ (UPPER(vt0.c0)))) ORDER BY vt0.c1 DESC  NULLS FIRST, ((rt1.c2)>=(CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (json_array_length(((0xffffffff86afd77f) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)-(rt0.c3)))) ORDER BY CASE ((rt1.c2)==(rt0.c2))  WHEN ((rt1.c1)>=(rt1.c2)) THEN ((((rt0.c3)OR(rt0.c0)))AND('-1106347870')) END;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((0xffffffff86afd77f) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)-(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE ((rt1.c2)=(rt0.c2))  WHEN ((rt1.c1)>=(rt1.c2)) THEN ((((rt0.c3)OR(rt0.c0)))AND('-1106347870')) END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (json_array_length(((0xffffffff86afd77f) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)-(rt0.c3)))) ORDER BY CASE ((rt1.c2)==(rt0.c2))  WHEN ((rt1.c1)>=(rt1.c2)) THEN ((((rt0.c3)OR(rt0.c0)))AND('-1106347870')) END;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((0xffffffff86afd77f) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)-(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE ((rt1.c2)=(rt0.c2))  WHEN ((rt1.c1)>=(rt1.c2)) THEN ((((rt0.c3)OR(rt0.c0)))AND('-1106347870')) END);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (json_array_length(((0xffffffff86afd77f) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c4)-(rt0.c3)))) ORDER BY CASE ((rt1.c2)==(rt0.c2))  WHEN ((rt1.c1)>=(rt1.c2)) THEN ((((rt0.c3)OR(rt0.c0)))AND('-1106347870')) END;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY  NULLS LAST, ((((vt0.c0)LIKE(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY  NULLS LAST, ((((vt0.c0)LIKE(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY  NULLS LAST, ((((vt0.c0)LIKE(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY  NULLS LAST, ((((vt0.c0)LIKE(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE BINARY  NULLS LAST, ((((vt0.c0)LIKE(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (0.9654252841743488) ORDER BY ((rt1.c2)>(rt0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9654252841743488) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2)>(rt0.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (0.9654252841743488) ORDER BY ((rt1.c2)>(rt0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9654252841743488) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2)>(rt0.c4 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (0.9654252841743488) ORDER BY ((rt1.c2)>(rt0.c4 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (986953120)));
SELECT SUM(count) FROM (SELECT ALL (((~ (986953120))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (986953120)));
SELECT SUM(count) FROM (SELECT ALL (((~ (986953120))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((~ (986953120)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c2)))<(((rt1.c2) NOT NULL)))) ORDER BY CAST(x'be1e' AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)/(rt1.c2)))<(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(x'be1e' AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c2)))<(((rt1.c2) NOT NULL)))) ORDER BY CAST(x'be1e' AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)/(rt1.c2)))<(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(x'be1e' AS INTEGER) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)/(rt1.c2)))<(((rt1.c2) NOT NULL)))) ORDER BY CAST(x'be1e' AS INTEGER) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt0.c3) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c0)OR(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c0)OR(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN rt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, vt0 FULL OUTER JOIN rt0 ON NULL WHERE (((((rt0.c0)OR(rt0.c3))) NOT NULL));
SELECT * FROM vt0, rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (rt0.c3);
SELECT * FROM rt0, rt1 WHERE ('-1379509138') ORDER BY (((rt0.c3 IN ()))<<(ABS(rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1379509138') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3 IN ()))<<(ABS(rt1.c0)))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ('-1379509138') ORDER BY (((rt0.c3 IN ()))<<(ABS(rt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1379509138') IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c3 IN ()))<<(ABS(rt1.c0)))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ('-1379509138') ORDER BY (((rt0.c3 IN ()))<<(ABS(rt1.c0)))  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(rt1.c0, 0.7695791982680069) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c0, 0.7695791982680069) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(rt1.c0, 0.7695791982680069) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt1.c0, 0.7695791982680069) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(LIKELIHOOD(rt1.c0, 0.7695791982680069) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('_K෰n(t' COLLATE RTRIM) ORDER BY ((((((((((((x'')AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('_K෰n(t' COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((((x'')AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('_K෰n(t' COLLATE RTRIM) ORDER BY ((((((((((((x'')AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('_K෰n(t' COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((((((((((x'')AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ('_K෰n(t' COLLATE RTRIM) ORDER BY ((((((((((((x'')AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c1)))AND(rt1.c0)) COLLATE RTRIM;
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))<=((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))<=((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))<=((rt1.c0 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))<=((rt1.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))<=((rt1.c0 IN (rt1.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('-1035631335') NOTNULL) WHERE (NULL) ORDER BY (vt0.c1 IN ((+ (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('-1035631335') NOTNULL) ORDER BY (vt0.c1 IN ((+ (rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('-1035631335') NOTNULL) WHERE (NULL) ORDER BY (vt0.c1 IN ((+ (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('-1035631335') NOTNULL) ORDER BY (vt0.c1 IN ((+ (rt0.c4)))) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('-1035631335') NOTNULL) WHERE (NULL) ORDER BY (vt0.c1 IN ((+ (rt0.c4)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)>(rt0.c2)), (((rt0.c2))<((rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))>=(((((rt0.c0))<=((rt0.c3))), rtreenode(rt0.c0, rt0.c2), rt0.c1 COLLATE NOCASE)))  NULLS FIRST, (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)>(rt0.c2)), (((rt0.c2))<((rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))>=(((((rt0.c0))<=((rt0.c3))), rtreenode(rt0.c0, rt0.c2), rt0.c1 COLLATE NOCASE)))  NULLS FIRST, (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)>(rt0.c2)), (((rt0.c2))<((rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))>=(((((rt0.c0))<=((rt0.c3))), rtreenode(rt0.c0, rt0.c2), rt0.c1 COLLATE NOCASE)))  NULLS FIRST, (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3)>(rt0.c2)), (((rt0.c2))<((rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))>=(((((rt0.c0))<=((rt0.c3))), rtreenode(rt0.c0, rt0.c2), rt0.c1 COLLATE NOCASE)))  NULLS FIRST, (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c1 END AS NUMERIC)) ORDER BY (((((rt0.c3)>(rt0.c2)), (((rt0.c2))<((rt0.c2))), CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))>=(((((rt0.c0))<=((rt0.c3))), rtreenode(rt0.c0, rt0.c2), rt0.c1 COLLATE NOCASE)))  NULLS FIRST, (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CAST(rt1.c0 AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2))))>((((NULL) BETWEEN (vt0.c1) AND (1612100696)))))) ORDER BY ABS(rt1.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2))))>((((NULL) BETWEEN (vt0.c1) AND (1612100696)))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ABS(rt1.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2))))>((((NULL) BETWEEN (vt0.c1) AND (1612100696)))))) ORDER BY ABS(rt1.c2 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2))))>((((NULL) BETWEEN (vt0.c1) AND (1612100696)))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ABS(rt1.c2 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt0.c2)AND(rt0.c2))))>((((NULL) BETWEEN (vt0.c1) AND (1612100696)))))) ORDER BY ABS(rt1.c2 COLLATE RTRIM) ASC;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (RTRIM(0xffffffffa4681a9e) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((RTRIM(0xffffffffa4681a9e) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (RTRIM(0xffffffffa4681a9e) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((RTRIM(0xffffffffa4681a9e) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (RTRIM(0xffffffffa4681a9e) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) NOT NULL))=(((('>q㯮e'))==((rt0.c1)))))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE rt1.c2 END)-(HEX(DISTINCT vt0.c1))) DESC  NULLS FIRST, (((((rt0.c2)<=(rt1.c2))))=(((rt0.c3 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))=(((('>q㯮e'))=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE rt1.c2 END)-(HEX(DISTINCT vt0.c1))) DESC  NULLS FIRST, (((((rt0.c2)<=(rt1.c2))))=(((rt0.c3 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) NOT NULL))=(((('>q㯮e'))==((rt0.c1)))))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE rt1.c2 END)-(HEX(DISTINCT vt0.c1))) DESC  NULLS FIRST, (((((rt0.c2)<=(rt1.c2))))=(((rt0.c3 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL))=(((('>q㯮e'))=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE rt1.c2 END)-(HEX(DISTINCT vt0.c1))) DESC  NULLS FIRST, (((((rt0.c2)<=(rt1.c2))))=(((rt0.c3 IN ()))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((rt0.c4) NOT NULL))=(((('>q㯮e'))==((rt0.c1)))))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' ELSE rt1.c2 END)-(HEX(DISTINCT vt0.c1))) DESC  NULLS FIRST, (((((rt0.c2)<=(rt1.c2))))=(((rt0.c3 IN ()))))  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)IS(rt1.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt1.c2 THEN rt0.c2 END)IS NOT(((rt0.c0)>=(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt0.c2 END)IS NOT(((rt0.c0)>=(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)IS(rt1.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt1.c2 THEN rt0.c2 END)IS NOT(((rt0.c0)>=(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE WHEN rt1.c2 THEN rt0.c2 END)IS NOT(((rt0.c0)>=(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2)IS(rt1.c0)) COLLATE NOCASE) ORDER BY ((CASE WHEN rt1.c2 THEN rt0.c2 END)IS NOT(((rt0.c0)>=(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)) IN (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)) IN (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)) IN (((vt0.c0) NOT NULL))));
SELECT ALL * FROM rt1, vt0 WHERE (((((((((-2006880916)OR((((vt0.c1, 0.8680963951708179, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, '309270654')) AND ((rt1.c2, rt1.c0, rt1.c0))))))OR(((0.672762929916353)<<(rt1.c1)))))AND((+ (vt0.c0)))))OR(((rt1.c1)*(0.7441301354107666)))));
SELECT SUM(count) FROM (SELECT ((((((((((-2006880916)OR((((vt0.c1, 0.8680963951708179, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, '309270654')) AND ((rt1.c2, rt1.c0, rt1.c0))))))OR(((0.672762929916353)<<(rt1.c1)))))AND((+ (vt0.c0)))))OR(((rt1.c1)*(0.7441301354107666))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((-2006880916)OR((((vt0.c1, 0.8680963951708179, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, '309270654')) AND ((rt1.c2, rt1.c0, rt1.c0))))))OR(((0.672762929916353)<<(rt1.c1)))))AND((+ (vt0.c0)))))OR(((rt1.c1)*(0.7441301354107666)))));
SELECT SUM(count) FROM (SELECT ((((((((((-2006880916)OR((((vt0.c1, 0.8680963951708179, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, '309270654')) AND ((rt1.c2, rt1.c0, rt1.c0))))))OR(((0.672762929916353)<<(rt1.c1)))))AND((+ (vt0.c0)))))OR(((rt1.c1)*(0.7441301354107666))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((((((-2006880916)OR((((vt0.c1, 0.8680963951708179, vt0.c0)) NOT BETWEEN ((rt1.c0, vt0.c0, '309270654')) AND ((rt1.c2, rt1.c0, rt1.c0))))))OR(((0.672762929916353)<<(rt1.c1)))))AND((+ (vt0.c0)))))OR(((rt1.c1)*(0.7441301354107666)))));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE (- (rt1.c0))  WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2)) THEN (- (rt1.c2)) END WHERE ((~ (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE (- (rt1.c0))  WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2)) THEN (- (rt1.c2)) END);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE (- (rt1.c0))  WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2)) THEN (- (rt1.c2)) END WHERE ((~ (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE (- (rt1.c0))  WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2)) THEN (- (rt1.c2)) END);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE (- (rt1.c0))  WHEN ((rt0.c3) BETWEEN (rt1.c0) AND (rt1.c2)) THEN (- (rt1.c2)) END WHERE ((~ (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)IS(rt0.c0)))AND(0x72c0820d)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c0)))AND(0x72c0820d))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)IS(rt0.c0)))AND(0x72c0820d)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c0)))AND(0x72c0820d))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c1)IS(rt0.c0)))AND(0x72c0820d)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((0.09992925362551819)IS NOT(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.09992925362551819)IS NOT(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((0.09992925362551819)IS NOT(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.09992925362551819)IS NOT(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((((0.09992925362551819)IS NOT(vt0.c1)))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c2)))))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((rt0.c3 IN (rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c4))))>(((rt0.c3 IN (rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((rt0.c3 IN (rt0.c3, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c4))))>(((rt0.c3 IN (rt0.c3, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((- (rt0.c4))))>(((rt0.c3 IN (rt0.c3, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c0 IN ()))<=(0X2f905543))) ORDER BY CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c4)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))<=(0X2f905543))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c4)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c0 IN ()))<=(0X2f905543))) ORDER BY CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c4)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))<=(0X2f905543))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c4)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((((rt1.c0 IN ()))<=(0X2f905543))) ORDER BY CAST(((((rt0.c0)AND(vt0.c0)))OR(rt0.c4)) AS TEXT)  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON UNLIKELY(DISTINCT CAST(0.7835313299901081 AS NUMERIC)) LEFT OUTER JOIN vt0 ON rt1.c0 WHERE (((vt0.c1) NOT BETWEEN ((rt0.c3 IN ())) AND (rt1.c2))) ORDER BY (((+ (rt0.c0)))*(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN ((rt0.c3 IN ())) AND (rt1.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON UNLIKELY(DISTINCT CAST(0.7835313299901081 AS NUMERIC)) LEFT OUTER JOIN vt0 ON rt1.c0 ORDER BY (((+ (rt0.c0)))*(rt1.c1))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON UNLIKELY(DISTINCT CAST(0.7835313299901081 AS NUMERIC)) LEFT OUTER JOIN vt0 ON rt1.c0 WHERE (((vt0.c1) NOT BETWEEN ((rt0.c3 IN ())) AND (rt1.c2))) ORDER BY (((+ (rt0.c0)))*(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN ((rt0.c3 IN ())) AND (rt1.c2))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON UNLIKELY(DISTINCT CAST(0.7835313299901081 AS NUMERIC)) LEFT OUTER JOIN vt0 ON rt1.c0 ORDER BY (((+ (rt0.c0)))*(rt1.c1))  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON UNLIKELY(DISTINCT CAST(0.7835313299901081 AS NUMERIC)) LEFT OUTER JOIN vt0 ON rt1.c0 WHERE (((vt0.c1) NOT BETWEEN ((rt0.c3 IN ())) AND (rt1.c2))) ORDER BY (((+ (rt0.c0)))*(rt1.c1))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c2 END)AND(UPPER(rt0.c4))))AND(((rt1.c2)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c2 END)AND(UPPER(rt0.c4))))AND(((rt1.c2)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c2 END)AND(UPPER(rt0.c4))))AND(((rt1.c2)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c2 END)AND(UPPER(rt0.c4))))AND(((rt1.c2)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((((CASE rt0.c3  WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c2 END)AND(UPPER(rt0.c4))))AND(((rt1.c2)/(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)<(0.5192681201622648)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)<(0.5192681201622648)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)<(0.5192681201622648)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)<(0.5192681201622648)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)<(0.5192681201622648)) END);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1)&(rt0.c4))) AND ((+ (rt1.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1)&(rt0.c4))) AND ((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1)&(rt0.c4))) AND ((+ (rt1.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1)&(rt0.c4))) AND ((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((((((rt0.c2)AND(x'')))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c0))) BETWEEN (((rt1.c1)&(rt0.c4))) AND ((+ (rt1.c1)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))OR(rt0.c3))) ISNULL));
SELECT ALL * FROM rt1 WHERE (json_remove(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_remove(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (json_remove(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END));
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0, vt0 WHERE (((((((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND('x ~\㡦䗨!BN')))OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND('x ~\㡦䗨!BN')))OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0, vt0 WHERE (((((((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND('x ~\㡦䗨!BN')))OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND('x ~\㡦䗨!BN')))OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1 NOT INDEXED, rt0, vt0 WHERE (((((((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c4)))AND('x ~\㡦䗨!BN')))OR(vt0.c0)))AND(vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt1.c1 IN (rt1.c2)))) AND ((ABS(DISTINCT vt0.c1)))), x'' DESC, TYPEOF(((((rt1.c2)AND(rt1.c2)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((rt1.c1 IN (rt1.c2)))) AND ((ABS(DISTINCT vt0.c1)))), x'' DESC, TYPEOF(((((rt1.c2)AND(rt1.c2)))AND(vt0.c1))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt1.c1 IN (rt1.c2)))) AND ((ABS(DISTINCT vt0.c1)))), x'' DESC, TYPEOF(((((rt1.c2)AND(rt1.c2)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN (((rt1.c1 IN (rt1.c2)))) AND ((ABS(DISTINCT vt0.c1)))), x'' DESC, TYPEOF(((((rt1.c2)AND(rt1.c2)))AND(vt0.c1))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL)))) ORDER BY (((rt0.c1)) NOT BETWEEN (((rt1.c1 IN (rt1.c2)))) AND ((ABS(DISTINCT vt0.c1)))), x'' DESC, TYPEOF(((((rt1.c2)AND(rt1.c2)))AND(vt0.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((((vt0.c0)AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((((vt0.c0)AND(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((((vt0.c0)AND(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((((vt0.c0)AND(rt1.c2)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((rt1.c1 COLLATE BINARY)) AND ((((vt0.c0)AND(rt1.c2))))));
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)<=(x'')) END) ORDER BY (((NOT (rt0.c3))) NOT NULL) ASC  NULLS LAST, TYPEOF(((rt0.c0)%(NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)<=(x'')) END) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c3))) NOT NULL) ASC  NULLS LAST, TYPEOF(((rt0.c0)%(NULL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)<=(x'')) END) ORDER BY (((NOT (rt0.c3))) NOT NULL) ASC  NULLS LAST, TYPEOF(((rt0.c0)%(NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)<=(x'')) END) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c3))) NOT NULL) ASC  NULLS LAST, TYPEOF(((rt0.c0)%(NULL)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)<=(x'')) END) ORDER BY (((NOT (rt0.c3))) NOT NULL) ASC  NULLS LAST, TYPEOF(((rt0.c0)%(NULL)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, rt1.c1, rt1.c0))))) AND (('-505260730'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, rt1.c1, rt1.c0))))) AND (('-505260730')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, rt1.c1, rt1.c0))))) AND (('-505260730'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, rt1.c1, rt1.c0))))) AND (('-505260730')))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN (((((rt1.c2, rt1.c2, rt1.c1))>((rt1.c0, rt1.c1, rt1.c0))))) AND (('-505260730'))));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))<=((rt1.c0))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) ORDER BY CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (0xfffffffff8b1c4aa) AND (rt1.c0)) END ASC, rt0.c3, ((((((((((((((x'a7d1')OR(rt0.c3)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c4))) BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((('', '1414517992', rt0.c0, rt0.c4, rt0.c1))!=((x'7361', rt1.c1, rt1.c1, rt0.c4, rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<=((rt1.c0))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (0Xfffffffff8b1c4aa) AND (rt1.c0)) END ASC, rt0.c3, ((((((((((((((x'a7d1')OR(rt0.c3)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c4))) BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((('', '1414517992', rt0.c0, rt0.c4, rt0.c1))!=((x'7361', rt1.c1, rt1.c1, rt0.c4, rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))<=((rt1.c0))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) ORDER BY CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (0xfffffffff8b1c4aa) AND (rt1.c0)) END ASC, rt0.c3, ((((((((((((((x'a7d1')OR(rt0.c3)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c4))) BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((('', '1414517992', rt0.c0, rt0.c4, rt0.c1))!=((x'7361', rt1.c1, rt1.c1, rt0.c4, rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0))<=((rt1.c0))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (0Xfffffffff8b1c4aa) AND (rt1.c0)) END ASC, rt0.c3, ((((((((((((((x'a7d1')OR(rt0.c3)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c4))) BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((('', '1414517992', rt0.c0, rt0.c4, rt0.c1))!=((x'7361', rt1.c1, rt1.c1, rt0.c4, rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0))<=((rt1.c0))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c0))))) ORDER BY CASE ((rt0.c2)GLOB(rt0.c1))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((rt1.c2) NOT BETWEEN (0xfffffffff8b1c4aa) AND (rt1.c0)) END ASC, rt0.c3, ((((((((((((((x'a7d1')OR(rt0.c3)))AND(rt0.c1)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c4))) BETWEEN (NULLIF(DISTINCT rt1.c1, rt1.c0)) AND (((('', '1414517992', rt0.c0, rt0.c4, rt0.c1))!=((x'7361', rt1.c1, rt1.c1, rt0.c4, rt0.c3))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 WHERE (((rt0.c4)*(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4)*(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)*(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4)*(rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(((rt1.c1)-(rt0.c4)) AS REAL) WHERE (CAST('Qu.v㘯wb' AS INTEGER)) ORDER BY 0X10af5d04 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('Qu.v㘯wb' AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(((rt1.c1)-(rt0.c4)) AS REAL) ORDER BY 0x10af5d04 ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(((rt1.c1)-(rt0.c4)) AS REAL) WHERE (CAST('Qu.v㘯wb' AS INTEGER)) ORDER BY 0X10af5d04 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('Qu.v㘯wb' AS INTEGER)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(((rt1.c1)-(rt0.c4)) AS REAL) ORDER BY 0x10af5d04 ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c0)<<(rt1.c2)))>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(rt1.c2)))>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c0)<<(rt1.c2)))>((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<<(rt1.c2)))>((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (((((rt0.c0)<<(rt1.c2)))>((rt1.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((x'' IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0)LIKE(rt1.c2)))==(((vt0.c1) NOT NULL))) WHERE (rt0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0)LIKE(rt1.c2)))=(((vt0.c1) NOT NULL))) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0)LIKE(rt1.c2)))==(((vt0.c1) NOT NULL))) WHERE (rt0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0)LIKE(rt1.c2)))=(((vt0.c1) NOT NULL))) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN rt1 ON ((((vt0.c0)LIKE(rt1.c2)))==(((vt0.c1) NOT NULL))) WHERE (rt0.c3) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))))AND(((rt1.c2) IS FALSE))))OR((rt0.c0 IN ()))))AND(((0.35837294424949406) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((x'ca74') ISNULL)  NULLS LAST, (((rt0.c4, '3', rt1.c2)) NOT BETWEEN (((((rt1.c0))>((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END, CASE WHEN rt1.c1 THEN 0.10189410126089338 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 END)) AND (('', ((((((((vt0.c0)AND(rt1.c2)))OR(rt0.c0)))OR('*Br')))AND(vt0.c0)), ((rt1.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)IS(rt0.c1)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))))AND(((rt1.c2) IS FALSE))))OR((rt0.c0 IN ()))))AND(((0.35837294424949406) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((x'ca74') ISNULL)  NULLS LAST, (((rt0.c4, '3', rt1.c2)) NOT BETWEEN (((((rt1.c0))>((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END, CASE WHEN rt1.c1 THEN 0.10189410126089338 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 END)) AND (('', ((((((((vt0.c0)AND(rt1.c2)))OR(rt0.c0)))OR('*Br')))AND(vt0.c0)), ((rt1.c0) IS TRUE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))))AND(((rt1.c2) IS FALSE))))OR((rt0.c0 IN ()))))AND(((0.35837294424949406) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((x'ca74') ISNULL)  NULLS LAST, (((rt0.c4, '3', rt1.c2)) NOT BETWEEN (((((rt1.c0))>((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END, CASE WHEN rt1.c1 THEN 0.10189410126089338 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 END)) AND (('', ((((((((vt0.c0)AND(rt1.c2)))OR(rt0.c0)))OR('*Br')))AND(vt0.c0)), ((rt1.c0) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)IS(rt0.c1)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))))AND(((rt1.c2) IS FALSE))))OR((rt0.c0 IN ()))))AND(((0.35837294424949406) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((x'ca74') ISNULL)  NULLS LAST, (((rt0.c4, '3', rt1.c2)) NOT BETWEEN (((((rt1.c0))>((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END, CASE WHEN rt1.c1 THEN 0.10189410126089338 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 END)) AND (('', ((((((((vt0.c0)AND(rt1.c2)))OR(rt0.c0)))OR('*Br')))AND(vt0.c0)), ((rt1.c0) IS TRUE))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((((((((rt0.c0)IS(rt0.c1)))AND(((((((((vt0.c0)OR(rt0.c1)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)))))AND(((rt1.c2) IS FALSE))))OR((rt0.c0 IN ()))))AND(((0.35837294424949406) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((x'ca74') ISNULL)  NULLS LAST, (((rt0.c4, '3', rt1.c2)) NOT BETWEEN (((((rt1.c0))>((rt1.c0))), CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt1.c1 END, CASE WHEN rt1.c1 THEN 0.10189410126089338 WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c0 END)) AND (('', ((((((((vt0.c0)AND(rt1.c2)))OR(rt0.c0)))OR('*Br')))AND(vt0.c0)), ((rt1.c0) IS TRUE))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt1, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM rt1, vt0 NATURAL JOIN rt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN rt0.c2 END)));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY ((rt1.c2)>=(IFNULL(DISTINCT rt1.c2, rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(IFNULL(DISTINCT rt1.c2, rt1.c0))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY ((rt1.c2)>=(IFNULL(DISTINCT rt1.c2, rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(IFNULL(DISTINCT rt1.c2, rt1.c0))) DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ())) ORDER BY ((rt1.c2)>=(IFNULL(DISTINCT rt1.c2, rt1.c0))) DESC;
SELECT ALL * FROM rt1, vt0 WHERE ((('')<((+ (rt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(x'')))AND((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')<((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(x'')))AND((+ (vt0.c1)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((('')<((+ (rt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(x'')))AND((+ (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')<((+ (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))AND(x'')))AND((+ (vt0.c1)))) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((('')<((+ (rt1.c0))))) ORDER BY ((((CAST(vt0.c0 AS REAL))AND(x'')))AND((+ (vt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((((rt0.c4)OR(NULL)))OR(rt0.c4)) END) ORDER BY NULLIF(rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((((rt0.c4)OR(NULL)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((((rt0.c4)OR(NULL)))OR(rt0.c4)) END) ORDER BY NULLIF(rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE NOCASE THEN ((((rt0.c4)OR(NULL)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE NOCASE THEN ((((rt0.c4)OR(NULL)))OR(rt0.c4)) END) ORDER BY NULLIF(rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c0)AND(vt0.c0)))OR(rt0.c4)))OR(CASE rt1.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c0 END)))AND(((rt0.c3)IS NOT(rt0.c0)))) RIGHT OUTER JOIN vt0 ON (('lv')>>(CASE rt0.c1  WHEN rt1.c1 THEN 0Xffffffff92d2ac0c ELSE rt1.c2 END)) WHERE (CAST(rt1.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c0)AND(vt0.c0)))OR(rt0.c4)))OR(CASE rt1.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c0 END)))AND(((rt0.c3)IS NOT(rt0.c0)))) RIGHT OUTER JOIN vt0 ON (('lv')>>(CASE rt0.c1  WHEN rt1.c1 THEN 0xffffffff92d2ac0c ELSE rt1.c2 END)));
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c0)AND(vt0.c0)))OR(rt0.c4)))OR(CASE rt1.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c0 END)))AND(((rt0.c3)IS NOT(rt0.c0)))) RIGHT OUTER JOIN vt0 ON (('lv')>>(CASE rt0.c1  WHEN rt1.c1 THEN 0Xffffffff92d2ac0c ELSE rt1.c2 END)) WHERE (CAST(rt1.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS INTEGER)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((rt1.c0)AND(vt0.c0)))OR(rt0.c4)))OR(CASE rt1.c0  WHEN rt0.c4 THEN vt0.c0 ELSE rt1.c0 END)))AND(((rt0.c3)IS NOT(rt0.c0)))) RIGHT OUTER JOIN vt0 ON (('lv')>>(CASE rt0.c1  WHEN rt1.c1 THEN 0xffffffff92d2ac0c ELSE rt1.c2 END)));
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY (((0.9305052761520596, (+ (NULL)), INSTR(rt0.c2, rt0.c0)))<>((((-1569475556)>(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN -1275081527 END, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0.9305052761520596, (+ (NULL)), INSTR(rt0.c2, rt0.c0)))<>((((-1569475556)>(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN -1275081527 END, vt0.c1))));
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY (((0.9305052761520596, (+ (NULL)), INSTR(rt0.c2, rt0.c0)))<>((((-1569475556)>(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN -1275081527 END, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((0.9305052761520596, (+ (NULL)), INSTR(rt0.c2, rt0.c0)))<>((((-1569475556)>(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN -1275081527 END, vt0.c1))));
SELECT * FROM vt0, rt0 WHERE (UNLIKELY(CAST(rt0.c1 AS TEXT))) ORDER BY (((0.9305052761520596, (+ (NULL)), INSTR(rt0.c2, rt0.c0)))<>((((-1569475556)>(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN -1275081527 END, vt0.c1)));
SELECT * FROM rt1 INNER JOIN rt0 ON ((+ (rt1.c2)) IN ((rt0.c3 IN (rt0.c0)), ((rt1.c1)<<(rt0.c2)))) WHERE (((((((((((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))AND((rt1.c0 IN ()))))OR(((rt0.c3)GLOB(rt1.c0)))))AND((rt0.c4 IN ()))))OR((((rt1.c1, rt0.c0, rt1.c0))<=(('969976979', rt1.c2, rt0.c4)))))) ORDER BY (NOT (UNICODE(rt0.c0))), 0.7260054924415954 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))AND((rt1.c0 IN ()))))OR(((rt0.c3)GLOB(rt1.c0)))))AND((rt0.c4 IN ()))))OR((((rt1.c1, rt0.c0, rt1.c0))<=(('969976979', rt1.c2, rt0.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((+ (rt1.c2)) IN ((rt0.c3 IN (rt0.c0)), ((rt1.c1)<<(rt0.c2)))) ORDER BY (NOT (UNICODE(rt0.c0))), 0.7260054924415954 ASC);
SELECT * FROM rt1 INNER JOIN rt0 ON ((+ (rt1.c2)) IN ((rt0.c3 IN (rt0.c0)), ((rt1.c1)<<(rt0.c2)))) WHERE (((((((((((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))AND((rt1.c0 IN ()))))OR(((rt0.c3)GLOB(rt1.c0)))))AND((rt0.c4 IN ()))))OR((((rt1.c1, rt0.c0, rt1.c0))<=(('969976979', rt1.c2, rt0.c4)))))) ORDER BY (NOT (UNICODE(rt0.c0))), 0.7260054924415954 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))AND((rt1.c0 IN ()))))OR(((rt0.c3)GLOB(rt1.c0)))))AND((rt0.c4 IN ()))))OR((((rt1.c1, rt0.c0, rt1.c0))<=(('969976979', rt1.c2, rt0.c4)))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((+ (rt1.c2)) IN ((rt0.c3 IN (rt0.c0)), ((rt1.c1)<<(rt0.c2)))) ORDER BY (NOT (UNICODE(rt0.c0))), 0.7260054924415954 ASC);
SELECT * FROM rt1 INNER JOIN rt0 ON ((+ (rt1.c2)) IN ((rt0.c3 IN (rt0.c0)), ((rt1.c1)<<(rt0.c2)))) WHERE (((((((((((NULL) NOT BETWEEN (rt1.c1) AND (rt0.c3)))AND((rt1.c0 IN ()))))OR(((rt0.c3)GLOB(rt1.c0)))))AND((rt0.c4 IN ()))))OR((((rt1.c1, rt0.c0, rt1.c0))<=(('969976979', rt1.c2, rt0.c4)))))) ORDER BY (NOT (UNICODE(rt0.c0))), 0.7260054924415954 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CAST(IFNULL(rt1.c2, rt1.c2) AS NUMERIC) WHERE (UPPER((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((- (rt0.c4)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CAST(IFNULL(rt1.c2, rt1.c2) AS NUMERIC));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CAST(IFNULL(rt1.c2, rt1.c2) AS NUMERIC) WHERE (UPPER((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER((- (rt0.c4)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CAST(IFNULL(rt1.c2, rt1.c2) AS NUMERIC));
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON CAST(IFNULL(rt1.c2, rt1.c2) AS NUMERIC) WHERE (UPPER((- (rt0.c4))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((- (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))<<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))<<(CAST(rt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))<<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))<<(CAST(rt0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))<<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 COLLATE BINARY WHERE (((((rt0.c4)AND(((rt0.c3)<<(rt0.c0)))))AND((((rt0.c4))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(((rt0.c3)<<(rt0.c0)))))AND((((rt0.c4))=((rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 COLLATE BINARY WHERE (((((rt0.c4)AND(((rt0.c3)<<(rt0.c0)))))AND((((rt0.c4))=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)AND(((rt0.c3)<<(rt0.c0)))))AND((((rt0.c4))=((rt0.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c1 COLLATE BINARY WHERE (((((rt0.c4)AND(((rt0.c3)<<(rt0.c0)))))AND((((rt0.c4))=((rt0.c1))))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE -1.405785968E9  WHEN rt1.c2 THEN rt0.c0 END ELSE HEX(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE -1.405785968E9  WHEN rt1.c2 THEN rt0.c0 END ELSE HEX(rt0.c2) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE -1.405785968E9  WHEN rt1.c2 THEN rt0.c0 END ELSE HEX(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE -1.405785968E9  WHEN rt1.c2 THEN rt0.c0 END ELSE HEX(rt0.c2) END) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CASE WHEN (((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) THEN CASE -1.405785968E9  WHEN rt1.c2 THEN rt0.c0 END ELSE HEX(rt0.c2) END);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 907302204 END)LIKE(CAST(rt1.c1 AS NUMERIC))) WHERE (CASE ((rt1.c2)%(vt0.c1))  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c2 END THEN (((vt0.c1))<=((rt1.c1))) ELSE ((rt1.c1)IS('-1008059161')) END) ORDER BY (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (('', 2.61726839E8, CAST(x'4ff0' AS TEXT))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c1)))OR(-508122401)))OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c0)), (((x'31a828aa')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c1 END))) ASC  NULLS LAST, (((- (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)%(vt0.c1))  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c2 END THEN (((vt0.c1))<=((rt1.c1))) ELSE ((rt1.c1)IS('-1008059161')) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 907302204 END)LIKE(CAST(rt1.c1 AS NUMERIC))) ORDER BY (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (('', 2.61726839E8, CAST(x'4ff0' AS TEXT))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c1)))OR(-508122401)))OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c0)), (((x'31a828aa')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c1 END))) ASC  NULLS LAST, (((- (vt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 907302204 END)LIKE(CAST(rt1.c1 AS NUMERIC))) WHERE (CASE ((rt1.c2)%(vt0.c1))  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c2 END THEN (((vt0.c1))<=((rt1.c1))) ELSE ((rt1.c1)IS('-1008059161')) END) ORDER BY (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (('', 2.61726839E8, CAST(x'4ff0' AS TEXT))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c1)))OR(-508122401)))OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c0)), (((x'31a828aa')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c1 END))) ASC  NULLS LAST, (((- (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)%(vt0.c1))  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c2 END THEN (((vt0.c1))<=((rt1.c1))) ELSE ((rt1.c1)IS('-1008059161')) END) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 907302204 END)LIKE(CAST(rt1.c1 AS NUMERIC))) ORDER BY (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (('', 2.61726839E8, CAST(x'4ff0' AS TEXT))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c1)))OR(-508122401)))OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c0)), (((x'31a828aa')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c1 END))) ASC  NULLS LAST, (((- (vt0.c1))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt1.c2 ELSE 907302204 END)LIKE(CAST(rt1.c1 AS NUMERIC))) WHERE (CASE ((rt1.c2)%(vt0.c1))  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 ELSE rt1.c2 END THEN (((vt0.c1))<=((rt1.c1))) ELSE ((rt1.c1)IS('-1008059161')) END) ORDER BY (((vt0.c0, rt1.c1, rt1.c1)) BETWEEN (('', 2.61726839E8, CAST(x'4ff0' AS TEXT))) AND ((((((((((((((vt0.c1)OR(vt0.c1)))AND(rt1.c1)))OR(-508122401)))OR(vt0.c1)))OR(vt0.c0)))AND(rt1.c0)), (((x'31a828aa')) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), CASE WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c1 END))) ASC  NULLS LAST, (((- (vt0.c1))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)), (rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) END WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(rt1.c1)))AND('')))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c0)>>(rt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c0)))OR(rt1.c1)))AND('')))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) END ORDER BY ((((rt1.c0)>>(rt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) END WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(rt1.c1)))AND('')))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c0)>>(rt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)OR(vt0.c0)))OR(rt1.c1)))AND('')))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) END ORDER BY ((((rt1.c0)>>(rt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c1)||(vt0.c0)) ELSE ((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c1)) END WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(rt1.c1)))AND('')))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((rt1.c0)>>(rt1.c0))) ISNULL);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY (~ (json_remove(vt0.c1, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (json_remove(vt0.c1, rt0.c2))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY (~ (json_remove(vt0.c1, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (json_remove(vt0.c1, rt0.c2))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (CAST(rt0.c2 AS REAL)))) ORDER BY (~ (json_remove(vt0.c1, rt0.c2))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (NULL))) ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (NULL))) ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (NULL))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0))) BETWEEN ((+ (rt1.c1))) AND (NULL))) ORDER BY ((rt1.c1)+(rt1.c2)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE ((~ (rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE ((~ (rt0.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN rt1 ON ((vt0.c0) IS TRUE) COLLATE RTRIM WHERE ((~ (rt0.c4 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY '2041698675'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY '2041698675'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY '2041698675'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY '2041698675'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS TEXT)) ORDER BY '2041698675'  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE ((((((x'', rt1.c0, rt1.c0))<>((vt0.c1, rt1.c0, vt0.c0))))LIKE(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c0, rt1.c0))<>((vt0.c1, rt1.c0, vt0.c0))))LIKE(rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((x'', rt1.c0, rt1.c0))<>((vt0.c1, rt1.c0, vt0.c0))))LIKE(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((((x'', rt1.c0, rt1.c0))<>((vt0.c1, rt1.c0, vt0.c0))))LIKE(rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((x'', rt1.c0, rt1.c0))<>((vt0.c1, rt1.c0, vt0.c0))))LIKE(rt1.c2)));
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)&(rt0.c4)))) AND ((((((rt0.c4)OR(rt1.c0)))OR('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)&(rt0.c4)))) AND ((((((rt0.c4)OR(rt1.c0)))OR('')))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)&(rt0.c4)))) AND ((((((rt0.c4)OR(rt1.c0)))OR('')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)&(rt0.c4)))) AND ((((((rt0.c4)OR(rt1.c0)))OR('')))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (x'') ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1)&(rt0.c4)))) AND ((((((rt0.c4)OR(rt1.c0)))OR('')))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE ((rt0.c0)<<(rt0.c4))  WHEN json_valid(rt1.c2) THEN (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN TRIM(rt0.c1) THEN ((rt0.c2)<=(x'f2f7')) WHEN ((vt0.c0)<>(rt0.c4)) THEN HEX(DISTINCT rt0.c0) WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (((rt0.c4))>((NULL))) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN (NOT (vt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)) END) ORDER BY (((('-1417821496') BETWEEN (rt0.c1) AND (-1199866915)))AND((rt0.c2 IN (rt0.c3, '-1587791116'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<<(rt0.c4))  WHEN json_valid(rt1.c2) THEN (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN TRIM(rt0.c1) THEN ((rt0.c2)<=(x'f2f7')) WHEN ((vt0.c0)!=(rt0.c4)) THEN HEX(DISTINCT rt0.c0) WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (((rt0.c4))>((NULL))) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN (NOT (vt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((('-1417821496') BETWEEN (rt0.c1) AND (-1199866915)))AND((rt0.c2 IN (rt0.c3, '-1587791116'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE ((rt0.c0)<<(rt0.c4))  WHEN json_valid(rt1.c2) THEN (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN TRIM(rt0.c1) THEN ((rt0.c2)<=(x'f2f7')) WHEN ((vt0.c0)<>(rt0.c4)) THEN HEX(DISTINCT rt0.c0) WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (((rt0.c4))>((NULL))) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN (NOT (vt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)) END) ORDER BY (((('-1417821496') BETWEEN (rt0.c1) AND (-1199866915)))AND((rt0.c2 IN (rt0.c3, '-1587791116'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)<<(rt0.c4))  WHEN json_valid(rt1.c2) THEN (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN TRIM(rt0.c1) THEN ((rt0.c2)<=(x'f2f7')) WHEN ((vt0.c0)!=(rt0.c4)) THEN HEX(DISTINCT rt0.c0) WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (((rt0.c4))>((NULL))) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN (NOT (vt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (((('-1417821496') BETWEEN (rt0.c1) AND (-1199866915)))AND((rt0.c2 IN (rt0.c3, '-1587791116'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CASE ((rt0.c0)<<(rt0.c4))  WHEN json_valid(rt1.c2) THEN (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) WHEN TRIM(rt0.c1) THEN ((rt0.c2)<=(x'f2f7')) WHEN ((vt0.c0)<>(rt0.c4)) THEN HEX(DISTINCT rt0.c0) WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt1.c0)) THEN (((rt0.c4))>((NULL))) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c1)) THEN (NOT (vt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (vt0.c1)) END) ORDER BY (((('-1417821496') BETWEEN (rt0.c1) AND (-1199866915)))AND((rt0.c2 IN (rt0.c3, '-1587791116'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((('5LJx\n'))!=((rt1.c1))))OR(((vt0.c1)>=(rt1.c0)))))AND(((vt0.c1) IS TRUE))) WHERE (((((((((rt1.c2 COLLATE RTRIM)OR(((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))))OR(rt1.c0 COLLATE NOCASE)))OR(((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2 COLLATE RTRIM)OR(((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))))OR(rt1.c0 COLLATE NOCASE)))OR(((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((('5LJx\n'))<>((rt1.c1))))OR(((vt0.c1)>=(rt1.c0)))))AND(((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((('5LJx\n'))!=((rt1.c1))))OR(((vt0.c1)>=(rt1.c0)))))AND(((vt0.c1) IS TRUE))) WHERE (((((((((rt1.c2 COLLATE RTRIM)OR(((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))))OR(rt1.c0 COLLATE NOCASE)))OR(((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c2 COLLATE RTRIM)OR(((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))))OR(rt1.c0 COLLATE NOCASE)))OR(((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((('5LJx\n'))<>((rt1.c1))))OR(((vt0.c1)>=(rt1.c0)))))AND(((vt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((((('5LJx\n'))!=((rt1.c1))))OR(((vt0.c1)>=(rt1.c0)))))AND(((vt0.c1) IS TRUE))) WHERE (((((((((rt1.c2 COLLATE RTRIM)OR(((((((((vt0.c1)OR(rt1.c2)))OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c0)))))OR(rt1.c0 COLLATE NOCASE)))OR(((vt0.c1) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((rt1.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)<<(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (0.7899933517626935))) IS TRUE), ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<<(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (0.7899933517626935))) IS TRUE), ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)<<(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (0.7899933517626935))) IS TRUE), ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)<<(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (0.7899933517626935))) IS TRUE), ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)<<(vt0.c1))) BETWEEN (((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c4))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((- (0.7899933517626935))) IS TRUE), ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN vt0 ON 0.9305052761520596 WHERE ((((((x'', vt0.c0, rt0.c3))<>((rt0.c2, vt0.c0, rt1.c2))))LIKE((+ (vt0.c1))))) ORDER BY ((IFNULL(rt0.c3, rt0.c4))GLOB(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))||(CASE WHEN vt0.c1 THEN '0.9236062913714198' WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'', vt0.c0, rt0.c3))<>((rt0.c2, vt0.c0, rt1.c2))))LIKE((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN vt0 ON 0.9305052761520596 ORDER BY ((IFNULL(rt0.c3, rt0.c4))GLOB(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))||(CASE WHEN vt0.c1 THEN '0.9236062913714198' WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' END)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN vt0 ON 0.9305052761520596 WHERE ((((((x'', vt0.c0, rt0.c3))<>((rt0.c2, vt0.c0, rt1.c2))))LIKE((+ (vt0.c1))))) ORDER BY ((IFNULL(rt0.c3, rt0.c4))GLOB(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))||(CASE WHEN vt0.c1 THEN '0.9236062913714198' WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'', vt0.c0, rt0.c3))<>((rt0.c2, vt0.c0, rt1.c2))))LIKE((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN vt0 ON 0.9305052761520596 ORDER BY ((IFNULL(rt0.c3, rt0.c4))GLOB(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))||(CASE WHEN vt0.c1 THEN '0.9236062913714198' WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' END)) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN vt0 ON 0.9305052761520596 WHERE ((((((x'', vt0.c0, rt0.c3))<>((rt0.c2, vt0.c0, rt1.c2))))LIKE((+ (vt0.c1))))) ORDER BY ((IFNULL(rt0.c3, rt0.c4))GLOB(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c0)))||(CASE WHEN vt0.c1 THEN '0.9236062913714198' WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN x'' END)) DESC;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0))  WHEN CAST(rt0.c0 AS INTEGER) THEN ((rt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))%((((rt1.c0))>=((rt1.c2)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))%((((rt1.c0))>=((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((rt1.c0) IS FALSE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))%((((rt1.c0))>=((rt1.c2)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))%((((rt1.c0))>=((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((rt1.c0) IS FALSE)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2) IS FALSE))%((((rt1.c0))>=((rt1.c2)))))) ORDER BY TYPEOF(((rt1.c0) IS FALSE)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((vt0.c0 IN ()), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((vt0.c0 IN ()), CAST(vt0.c1 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (SUBSTR((vt0.c0 IN ()), CAST(vt0.c1 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c1)&(vt0.c1))  WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' ELSE vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)&(vt0.c1))  WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' ELSE vt0.c1 END DESC);
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c1)&(vt0.c1))  WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' ELSE vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)&(vt0.c1))  WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' ELSE vt0.c1 END DESC);
SELECT ALL * FROM vt0 WHERE (CAST((- (vt0.c1)) AS BLOB)) ORDER BY CASE ((vt0.c1)&(vt0.c1))  WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN x'' ELSE vt0.c1 END DESC;
SELECT * FROM rt1, vt0, rt0 WHERE (CASE WHEN ((vt0.c1)==(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4)) END) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)==(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (CASE WHEN ((vt0.c1)==(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4)) END) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)==(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4)) END) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)  NULLS FIRST);
SELECT * FROM rt1, vt0, rt0 WHERE (CASE WHEN ((vt0.c1)==(rt0.c3)) THEN CASE WHEN vt0.c1 THEN rt0.c2 END ELSE ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c4)) END) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c2) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((((rt1.c2) NOT NULL)) NOTNULL));
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (- (((rt1.c2)/(rt1.c1)))), ABS(DISTINCT ((rt1.c0) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c2)/(rt1.c1)))), ABS(DISTINCT ((rt1.c0) ISNULL)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (- (((rt1.c2)/(rt1.c1)))), ABS(DISTINCT ((rt1.c0) ISNULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- (((rt1.c2)/(rt1.c1)))), ABS(DISTINCT ((rt1.c0) ISNULL)) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (rt1.c0) ORDER BY (- (((rt1.c2)/(rt1.c1)))), ABS(DISTINCT ((rt1.c0) ISNULL)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (('1486967311')) AND ((rt0.c0)))))) ORDER BY ((LOWER(rt0.c4)) NOT BETWEEN ('ꧦt') AND (0.6084731802058705)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c2)) NOT BETWEEN (('1486967311')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((LOWER(rt0.c4)) NOT BETWEEN ('ꧦt') AND (0.6084731802058705)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (('1486967311')) AND ((rt0.c0)))))) ORDER BY ((LOWER(rt0.c4)) NOT BETWEEN ('ꧦt') AND (0.6084731802058705)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c2)) NOT BETWEEN (('1486967311')) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY ((LOWER(rt0.c4)) NOT BETWEEN ('ꧦt') AND (0.6084731802058705)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((NOT ((((rt1.c2)) NOT BETWEEN (('1486967311')) AND ((rt0.c0)))))) ORDER BY ((LOWER(rt0.c4)) NOT BETWEEN ('ꧦt') AND (0.6084731802058705)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c0)) ELSE ((rt0.c3)/(rt0.c1)) END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c0)) ELSE ((rt0.c3)/(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c0)) ELSE ((rt0.c3)/(rt0.c1)) END) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c0)) ELSE ((rt0.c3)/(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN (NOT (rt0.c0)) ELSE ((rt0.c3)/(rt0.c1)) END) ORDER BY rt0.c3;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ (rt0.c4)) COLLATE BINARY WHERE (TYPEOF(DISTINCT (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (rt0.c0 IN ()))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (+ (rt0.c4)) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ (rt0.c4)) COLLATE BINARY WHERE (TYPEOF(DISTINCT (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (rt0.c0 IN ()))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (+ (rt0.c4)) COLLATE BINARY);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (+ (rt0.c4)) COLLATE BINARY WHERE (TYPEOF(DISTINCT (rt0.c0 IN ())));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((0X2d885396)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((0X2d885396)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((0X2d885396)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((0X2d885396)))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((vt0.c1)) AND ((0X2d885396)))) NOT NULL));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON CAST(((((((((NULL)OR('B')))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((HEX(rt0.c0)))<>(((rt0.c0 IN ())))) WHERE (CAST(((rt1.c0)LIKE(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)LIKE(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((((((((NULL)OR('B')))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((HEX(rt0.c0)))!=(((rt0.c0 IN ())))));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON CAST(((((((((NULL)OR('B')))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((HEX(rt0.c0)))<>(((rt0.c0 IN ())))) WHERE (CAST(((rt1.c0)LIKE(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)LIKE(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CAST(((((((((NULL)OR('B')))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((HEX(rt0.c0)))!=(((rt0.c0 IN ())))));
SELECT ALL * FROM rt0 NOT INDEXED INNER JOIN rt1 ON CAST(((((((((NULL)OR('B')))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)) AS NUMERIC) LEFT OUTER JOIN vt0 ON (((HEX(rt0.c0)))<>(((rt0.c0 IN ())))) WHERE (CAST(((rt1.c0)LIKE(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.627665615262892 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.627665615262892 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.627665615262892 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((0.627665615262892 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((0.627665615262892 IN ()) IN ()));
SELECT * FROM rt1, rt0 WHERE (((((rt1.c0)GLOB(rt0.c2)))+((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt0.c2)))+((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c0)GLOB(rt0.c2)))+((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)GLOB(rt0.c2)))+((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c0)GLOB(rt0.c2)))+((rt1.c2 IN ()))));
SELECT * FROM rt1, vt0 WHERE ('2110110594') ORDER BY CAST(((((vt0.c1)AND(rt1.c2)))AND(rt1.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (('2110110594') IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((((vt0.c1)AND(rt1.c2)))AND(rt1.c2)) AS NUMERIC) DESC);
SELECT * FROM rt1, vt0 WHERE ('2110110594') ORDER BY CAST(((((vt0.c1)AND(rt1.c2)))AND(rt1.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (('2110110594') IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((((vt0.c1)AND(rt1.c2)))AND(rt1.c2)) AS NUMERIC) DESC);
SELECT * FROM rt1, vt0 WHERE ('2110110594') ORDER BY CAST(((((vt0.c1)AND(rt1.c2)))AND(rt1.c2)) AS NUMERIC) DESC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)))) AND (((+ (vt0.c0)))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)))) AND (((+ (vt0.c0)))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)))) AND (((+ (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)&(vt0.c1)))) AND (((+ (vt0.c0)))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c0 IN (0X41a0468c, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c0 IN (0X41a0468c, vt0.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c0 IN (0X41a0468c, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((rt1.c0 IN (0X41a0468c, vt0.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((- ((rt1.c0 IN (0X41a0468c, vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))-(((vt0.c1)<=(rt0.c2)))) WHERE (('' IN (CASE rt0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c4)>=(vt0.c1)))>(((rt0.c2)>=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CASE rt0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))-(((vt0.c1)<=(rt0.c2)))) ORDER BY ((((rt0.c4)>=(vt0.c1)))>(((rt0.c2)>=(rt1.c2)))));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))-(((vt0.c1)<=(rt0.c2)))) WHERE (('' IN (CASE rt0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c4)>=(vt0.c1)))>(((rt0.c2)>=(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((('' IN (CASE rt0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))-(((vt0.c1)<=(rt0.c2)))) ORDER BY ((((rt0.c4)>=(vt0.c1)))>(((rt0.c2)>=(rt1.c2)))));
SELECT COUNT(*) FROM vt0, rt1 RIGHT OUTER JOIN rt0 ON (((~ (rt0.c0)))-(((vt0.c1)<=(rt0.c2)))) WHERE (('' IN (CASE rt0.c0  WHEN rt0.c3 THEN rt1.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c4)>=(vt0.c1)))>(((rt0.c2)>=(rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((0.2737759325057696)OR(rt1.c0)))AND(rt1.c1)))||((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((0.2737759325057696)OR(rt1.c0)))AND(rt1.c1)))||((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((0.2737759325057696)OR(rt1.c0)))AND(rt1.c1)))||((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((0.2737759325057696)OR(rt1.c0)))AND(rt1.c1)))||((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((0.2737759325057696)OR(rt1.c0)))AND(rt1.c1)))||((NOT (rt1.c2)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND (CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY TRIM(DISTINCT ((vt0.c1)IS(rt1.c1)), ((rt1.c2)||(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND (CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(DISTINCT ((vt0.c1)IS(rt1.c1)), ((rt1.c2)||(rt1.c2)))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND (CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY TRIM(DISTINCT ((vt0.c1)IS(rt1.c1)), ((rt1.c2)||(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND (CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY TRIM(DISTINCT ((vt0.c1)IS(rt1.c1)), ((rt1.c2)||(rt1.c2)))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((vt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))) NOT BETWEEN ((rt1.c1 IN (rt1.c1))) AND (CASE WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt0.c0 WHEN rt1.c1 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY TRIM(DISTINCT ((vt0.c1)IS(rt1.c1)), ((rt1.c2)||(rt1.c2)))  NULLS LAST;
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(rt0.c4 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(rt0.c4 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (CAST(rt0.c4 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((x'') BETWEEN (rt1.c1) AND (x'5747')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'') BETWEEN (rt1.c1) AND (x'5747'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((x'') BETWEEN (rt1.c1) AND (x'5747')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'') BETWEEN (rt1.c1) AND (x'5747'))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (((x'') BETWEEN (rt1.c1) AND (x'5747')))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS TEXT)) ORDER BY ((rt0.c1)!=(rt0.c4)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)!=(rt0.c4)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS TEXT)) ORDER BY ((rt0.c1)!=(rt0.c4)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)!=(rt0.c4)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS TEXT)) ORDER BY ((rt0.c1)!=(rt0.c4)) COLLATE BINARY DESC;
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2)LIKE(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (CAST(((rt1.c2)LIKE(vt0.c0)) AS NUMERIC)) ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) WHERE (CASE WHEN x'' THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) WHERE (CASE WHEN x'' THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) ELSE ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) ELSE ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON (+ (vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS INTEGER))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) WHERE (CASE WHEN x'' THEN ((((rt1.c1)OR(rt1.c1)))OR(rt1.c1)) ELSE ((rt1.c2) NOT NULL) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c1)))OR((NOT (rt1.c1))))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN 0x2279e432 ELSE 0Xffffffffe8288f18 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt1.c1)))OR((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN 0x2279e432 ELSE 0Xffffffffe8288f18 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c1)))OR((NOT (rt1.c1))))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN 0x2279e432 ELSE 0Xffffffffe8288f18 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt1.c1)))OR((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN 0x2279e432 ELSE 0Xffffffffe8288f18 END COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c1)))OR((NOT (rt1.c1))))) ORDER BY CASE WHEN rt1.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c4 THEN 0x2279e432 ELSE 0Xffffffffe8288f18 END COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(((rt0.c1)%(rt1.c1)))))AND(((rt1.c1) ISNULL))) WHERE (((rt0.c3 COLLATE RTRIM)>=((0.2217184848788719 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>=((0.2217184848788719 IN ())))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(((rt0.c1)%(rt1.c1)))))AND(((rt1.c1) ISNULL))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(((rt0.c1)%(rt1.c1)))))AND(((rt1.c1) ISNULL))) WHERE (((rt0.c3 COLLATE RTRIM)>=((0.2217184848788719 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>=((0.2217184848788719 IN ())))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(((rt0.c1)%(rt1.c1)))))AND(((rt1.c1) ISNULL))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)AND(((rt0.c1)%(rt1.c1)))))AND(((rt1.c1) ISNULL))) WHERE (((rt0.c3 COLLATE RTRIM)>=((0.2217184848788719 IN ()))));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS LAST, ((((((vt0.c0)>=(rt0.c0)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END)))AND(vt0.c0 COLLATE BINARY)), (((rt0.c0)|(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS LAST, ((((((vt0.c0)>=(rt0.c0)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END)))AND(vt0.c0 COLLATE BINARY)), (((rt0.c0)|(vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS LAST, ((((((vt0.c0)>=(rt0.c0)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END)))AND(vt0.c0 COLLATE BINARY)), (((rt0.c0)|(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS LAST, ((((((vt0.c0)>=(rt0.c0)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END)))AND(vt0.c0 COLLATE BINARY)), (((rt0.c0)|(vt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) IN ())  NULLS LAST, ((((((vt0.c0)>=(rt0.c0)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c3 END)))AND(vt0.c0 COLLATE BINARY)), (((rt0.c0)|(vt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))<((((((NULL)AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((0.4545187324958333) BETWEEN (((vt0.c1) IS TRUE)) AND (load_extension(vt0.c0, vt0.c1)))  NULLS LAST, CAST(vt0.c0 AS BLOB) DESC, (~ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))<((((((NULL)AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.4545187324958333) BETWEEN (((vt0.c1) IS TRUE)) AND (load_extension(vt0.c0, vt0.c1)))  NULLS LAST, CAST(vt0.c0 AS BLOB) DESC, (~ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))<((((((NULL)AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((0.4545187324958333) BETWEEN (((vt0.c1) IS TRUE)) AND (load_extension(vt0.c0, vt0.c1)))  NULLS LAST, CAST(vt0.c0 AS BLOB) DESC, (~ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))<((((((NULL)AND(vt0.c0)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.4545187324958333) BETWEEN (((vt0.c1) IS TRUE)) AND (load_extension(vt0.c0, vt0.c1)))  NULLS LAST, CAST(vt0.c0 AS BLOB) DESC, (~ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END))<((((((NULL)AND(vt0.c0)))AND(vt0.c1)))))) ORDER BY ((0.4545187324958333) BETWEEN (((vt0.c1) IS TRUE)) AND (load_extension(vt0.c0, vt0.c1)))  NULLS LAST, CAST(vt0.c0 AS BLOB) DESC, (~ (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((0.5728535153977206)AND(vt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN (((((0.5728535153977206)AND(vt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((0.5728535153977206)AND(vt0.c1)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS TEXT) IN (((((0.5728535153977206)AND(vt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((CAST(rt0.c2 AS TEXT) IN (((((0.5728535153977206)AND(vt0.c1)))OR(rt0.c3)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c1)|(rt0.c4)))/('-1732823923'))) ORDER BY (NOT (((rt0.c3)AND(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c4)))/('-1732823923'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c3)AND(NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c1)|(rt0.c4)))/('-1732823923'))) ORDER BY (NOT (((rt0.c3)AND(NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(rt0.c4)))/('-1732823923'))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c3)AND(NULL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c1)|(rt0.c4)))/('-1732823923'))) ORDER BY (NOT (((rt0.c3)AND(NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))<=((rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))<=((rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))<=((rt0.c4))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))<=((rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END))<=((rt0.c4))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY TOTAL_CHANGES() ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY TOTAL_CHANGES() ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY TOTAL_CHANGES() ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (('-1313070573' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2)))) WHERE ('-752287651');
SELECT SUM(count) FROM (SELECT ALL (('-752287651') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (('-1313070573' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (('-1313070573' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2)))) WHERE ('-752287651');
SELECT SUM(count) FROM (SELECT ALL (('-752287651') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (('-1313070573' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON (('-1313070573' COLLATE NOCASE) BETWEEN (((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c0)))OR(rt1.c0))) AND (((rt1.c0) BETWEEN (vt0.c1) AND (rt1.c2)))) WHERE ('-752287651');
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) ORDER BY CAST(NULLIF(DISTINCT rt0.c2, rt1.c2) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULLIF(DISTINCT rt0.c2, rt1.c2) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) ORDER BY CAST(NULLIF(DISTINCT rt0.c2, rt1.c2) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(NULLIF(DISTINCT rt0.c2, rt1.c2) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((+ ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) ORDER BY CAST(NULLIF(DISTINCT rt0.c2, rt1.c2) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT ((vt0.c1 IN (rt0.c2))))) ORDER BY TRIM(((NULL)>>(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY TRIM(((NULL)>>(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT ((vt0.c1 IN (rt0.c2))))) ORDER BY TRIM(((NULL)>>(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY TRIM(((NULL)>>(rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((NOT ((vt0.c1 IN (rt0.c2))))) ORDER BY TRIM(((NULL)>>(rt0.c1))) ASC;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c1 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'')))<(((rt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(x'')))<(((rt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c1 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'')))<(((rt0.c2)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(x'')))<(((rt0.c2)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON vt0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON vt0.c1 COLLATE NOCASE WHERE (((((((rt0.c0)OR(rt0.c0)))AND(x'')))<(((rt0.c2)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((NULLIF(rt0.c2, rt0.c2))GLOB((+ ('')))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((NULLIF(rt0.c2, rt0.c2))GLOB((+ ('')))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((NULLIF(rt0.c2, rt0.c2))GLOB((+ ('')))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((NULLIF(rt0.c2, rt0.c2))GLOB((+ ('')))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((NULLIF(rt0.c2, rt0.c2))GLOB((+ ('')))) WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((0.7095218680199774)>>(rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7095218680199774)>>(rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((0.7095218680199774)>>(rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7095218680199774)>>(rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (((((0.7095218680199774)>>(rt0.c0)))<<(((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON ((vt0.c1) NOT BETWEEN (((rt0.c4)AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN rt1.c1 END)) WHERE (CAST(((vt0.c1) NOT NULL) AS REAL)) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt0.c3)>>(vt0.c0))) AND (CASE WHEN NULL THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN vt0.c0 END)) DESC  NULLS LAST, (((rt1.c0 IN (rt0.c3))) IS FALSE), CASE HEX(vt0.c0)  WHEN json_type(vt0.c1) THEN (rt0.c3 IN (rt1.c1, vt0.c0)) ELSE ((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON ((vt0.c1) NOT BETWEEN (((rt0.c4)AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN rt1.c1 END)) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt0.c3)>>(vt0.c0))) AND (CASE WHEN NULL THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN vt0.c0 END)) DESC  NULLS LAST, (((rt1.c0 IN (rt0.c3))) IS FALSE), CASE HEX(vt0.c0)  WHEN json_type(vt0.c1) THEN (rt0.c3 IN (rt1.c1, vt0.c0)) ELSE ((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON ((vt0.c1) NOT BETWEEN (((rt0.c4)AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN rt1.c1 END)) WHERE (CAST(((vt0.c1) NOT NULL) AS REAL)) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt0.c3)>>(vt0.c0))) AND (CASE WHEN NULL THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN vt0.c0 END)) DESC  NULLS LAST, (((rt1.c0 IN (rt0.c3))) IS FALSE), CASE HEX(vt0.c0)  WHEN json_type(vt0.c1) THEN (rt0.c3 IN (rt1.c1, vt0.c0)) ELSE ((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON ((vt0.c1) NOT BETWEEN (((rt0.c4)AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN rt1.c1 END)) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt0.c3)>>(vt0.c0))) AND (CASE WHEN NULL THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN vt0.c0 END)) DESC  NULLS LAST, (((rt1.c0 IN (rt0.c3))) IS FALSE), CASE HEX(vt0.c0)  WHEN json_type(vt0.c1) THEN (rt0.c3 IN (rt1.c1, vt0.c0)) ELSE ((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN rt1 ON ((vt0.c1) NOT BETWEEN (((rt0.c4)AND(vt0.c0))) AND (CASE WHEN vt0.c1 THEN rt1.c1 END)) WHERE (CAST(((vt0.c1) NOT NULL) AS REAL)) ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt0.c3)>>(vt0.c0))) AND (CASE WHEN NULL THEN rt0.c4 WHEN rt1.c1 THEN rt1.c1 WHEN x'' THEN vt0.c0 END)) DESC  NULLS LAST, (((rt1.c0 IN (rt0.c3))) IS FALSE), CASE HEX(vt0.c0)  WHEN json_type(vt0.c1) THEN (rt0.c3 IN (rt1.c1, vt0.c0)) ELSE ((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) END DESC;
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c4)/(rt0.c3)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)/(rt0.c3)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt1.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c4)/(rt0.c3)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)/(rt0.c3)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt1.c0 IN ()) COLLATE BINARY ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c4)/(rt0.c3)) IN ())) ORDER BY (rt1.c0 IN ()) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c3))>=((rt0.c3))))<<(json_array_length(rt0.c2, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))>=((rt0.c3))))<<(json_array_length(rt0.c2, rt0.c3)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c3))>=((rt0.c3))))<<(json_array_length(rt0.c2, rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))>=((rt0.c3))))<<(json_array_length(rt0.c2, rt0.c3)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c3))>=((rt0.c3))))<<(json_array_length(rt0.c2, rt0.c3))));
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((x'f86d')+(rt1.c0)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c1, rt1.c0)) AND (('780151034', rt0.c3, rt0.c0))))))AND(((rt0.c0)==(rt0.c2)))))AND(((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (- (((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'f86d')+(rt1.c0)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c1, rt1.c0)) AND (('780151034', rt0.c3, rt0.c0))))))AND(((rt0.c0)=(rt0.c2)))))AND(((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))));
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((x'f86d')+(rt1.c0)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c1, rt1.c0)) AND (('780151034', rt0.c3, rt0.c0))))))AND(((rt0.c0)==(rt0.c2)))))AND(((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (- (((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'f86d')+(rt1.c0)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c1, rt1.c0)) AND (('780151034', rt0.c3, rt0.c0))))))AND(((rt0.c0)=(rt0.c2)))))AND(((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- (((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))));
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((x'f86d')+(rt1.c0)))AND((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c1, rt1.c0)) AND (('780151034', rt0.c3, rt0.c0))))))AND(((rt0.c0)==(rt0.c2)))))AND(((((((((rt0.c3)OR(rt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))))OR(((rt1.c1) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY (- (((((rt1.c0)AND(rt1.c0)))OR(rt1.c1))));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c2) ISNULL) IN ())) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c2)))||(((0.0802071347192097)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(rt1.c2)))||(((0.0802071347192097)&(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c2)))||(((0.0802071347192097)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND(rt1.c2)))||(((0.0802071347192097)&(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c3)AND(rt1.c2)))||(((0.0802071347192097)&(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE))>>(CASE WHEN 0.8629030860281902 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) IS FALSE))>>(CASE WHEN 0.8629030860281902 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) DESC);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE))>>(CASE WHEN 0.8629030860281902 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) IS FALSE))>>(CASE WHEN 0.8629030860281902 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) DESC);
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) AS BLOB)) ORDER BY ((((rt0.c3) IS FALSE))>>(CASE WHEN 0.8629030860281902 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST, ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c2 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) NOT NULL) WHEN (vt0.c1 IN (rt1.c1)) THEN ((x'') NOT NULL) END) ORDER BY x'' DESC, (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))))==(((vt0.c1) IS FALSE))), ((((rt1.c2) IS TRUE))LIKE(((rt1.c1)-(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c2 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) NOT NULL) WHEN (vt0.c1 IN (rt1.c1)) THEN ((x'') NOT NULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC, (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))))==(((vt0.c1) IS FALSE))), ((((rt1.c2) IS TRUE))LIKE(((rt1.c1)-(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c2 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) NOT NULL) WHEN (vt0.c1 IN (rt1.c1)) THEN ((x'') NOT NULL) END) ORDER BY x'' DESC, (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))))==(((vt0.c1) IS FALSE))), ((((rt1.c2) IS TRUE))LIKE(((rt1.c1)-(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c2 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) NOT NULL) WHEN (vt0.c1 IN (rt1.c1)) THEN ((x'') NOT NULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY x'' DESC, (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))))==(((vt0.c1) IS FALSE))), ((((rt1.c2) IS TRUE))LIKE(((rt1.c1)-(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c2 WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1) NOT NULL) WHEN (vt0.c1 IN (rt1.c1)) THEN ((x'') NOT NULL) END) ORDER BY x'' DESC, (((((rt1.c2, rt1.c1, rt1.c0)) BETWEEN ((vt0.c0, rt1.c1, rt1.c1)) AND ((vt0.c0, rt1.c0, vt0.c0))))==(((vt0.c1) IS FALSE))), ((((rt1.c2) IS TRUE))LIKE(((rt1.c1)-(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST('-302860371' AS NUMERIC) IN (((rt0.c0)AND(rt0.c0)))) WHERE (((UNLIKELY(rt0.c0)) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0)|(rt0.c2))), x'f57f' ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST('-302860371' AS NUMERIC) IN (((rt0.c0)AND(rt0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0)|(rt0.c2))), x'f57f' ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST('-302860371' AS NUMERIC) IN (((rt0.c0)AND(rt0.c0)))) WHERE (((UNLIKELY(rt0.c0)) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0)|(rt0.c2))), x'f57f' ASC;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST('-302860371' AS NUMERIC) IN (((rt0.c0)AND(rt0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0)|(rt0.c2))), x'f57f' ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST('-302860371' AS NUMERIC) IN (((rt0.c0)AND(rt0.c0)))) WHERE (((UNLIKELY(rt0.c0)) NOTNULL)) ORDER BY UNLIKELY(DISTINCT ((vt0.c0)|(rt0.c2))), x'f57f' ASC;
SELECT ALL * FROM rt1, vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY ((((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) ISNULL))))OR((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) ISNULL))))OR((+ (rt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY ((((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) ISNULL))))OR((+ (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) ISNULL))))OR((+ (rt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY ((((CASE rt1.c1  WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c0) ISNULL))))OR((+ (rt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON (((((vt0.c1) NOT NULL), ((vt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c3)), UNLIKELY(DISTINCT rt0.c4)))>=(((('W>') IS FALSE), (((rt0.c4))<>((rt1.c1))), ((rt1.c0)!=(rt0.c2))))) FULL OUTER JOIN rt0 ON ((NOT (rt0.c3)) IN ()) WHERE (CAST(((rt0.c4) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((((vt0.c1) NOT NULL), ((vt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c3)), UNLIKELY(DISTINCT rt0.c4)))>=(((('W>') IS FALSE), (((rt0.c4))<>((rt1.c1))), ((rt1.c0)<>(rt0.c2))))) FULL OUTER JOIN rt0 ON ((NOT (rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON (((((vt0.c1) NOT NULL), ((vt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c3)), UNLIKELY(DISTINCT rt0.c4)))>=(((('W>') IS FALSE), (((rt0.c4))<>((rt1.c1))), ((rt1.c0)!=(rt0.c2))))) FULL OUTER JOIN rt0 ON ((NOT (rt0.c3)) IN ()) WHERE (CAST(((rt0.c4) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON (((((vt0.c1) NOT NULL), ((vt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c3)), UNLIKELY(DISTINCT rt0.c4)))>=(((('W>') IS FALSE), (((rt0.c4))<>((rt1.c1))), ((rt1.c0)<>(rt0.c2))))) FULL OUTER JOIN rt0 ON ((NOT (rt0.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((json_array_length(rt1.c0))&((((rt1.c2, rt1.c0, vt0.c1))!=((rt1.c1, rt1.c1, rt1.c1)))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt1.c0))&((((rt1.c2, rt1.c0, vt0.c1))!=((rt1.c1, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((json_array_length(rt1.c0))&((((rt1.c2, rt1.c0, vt0.c1))!=((rt1.c1, rt1.c1, rt1.c1)))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt1.c0))&((((rt1.c2, rt1.c0, vt0.c1))!=((rt1.c1, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((json_array_length(rt1.c0))&((((rt1.c2, rt1.c0, vt0.c1))!=((rt1.c1, rt1.c1, rt1.c1)))))) ORDER BY rt1.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (('-1405785968') NOTNULL) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (('-1405785968') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (('-1405785968') NOTNULL) WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (('-1405785968') NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON (('-1405785968') NOTNULL) WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((NULL) NOT BETWEEN (0Xffffffffe69e64af) AND (x'7d51'))) BETWEEN (CASE ''  WHEN rt0.c3 THEN vt0.c0 WHEN 's' THEN 0.7647331053193622 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (0xffffffffe69e64af) AND (x'7d51'))) BETWEEN (CASE ''  WHEN rt0.c3 THEN vt0.c0 WHEN 's' THEN 0.7647331053193622 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((NULL) NOT BETWEEN (0Xffffffffe69e64af) AND (x'7d51'))) BETWEEN (CASE ''  WHEN rt0.c3 THEN vt0.c0 WHEN 's' THEN 0.7647331053193622 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (0xffffffffe69e64af) AND (x'7d51'))) BETWEEN (CASE ''  WHEN rt0.c3 THEN vt0.c0 WHEN 's' THEN 0.7647331053193622 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE (((((NULL) NOT BETWEEN (0Xffffffffe69e64af) AND (x'7d51'))) BETWEEN (CASE ''  WHEN rt0.c3 THEN vt0.c0 WHEN 's' THEN 0.7647331053193622 WHEN rt1.c0 THEN rt0.c1 ELSE rt0.c2 END) AND (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c1)-(vt0.c0))))) WHERE ((((((+ (rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))))OR('XT'))) ORDER BY ((((rt1.c0)<(rt1.c2)))IS(NULLIF(vt0.c1, rt1.c2))) ASC, ((((rt1.c2)>>(rt1.c1)))&((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))))OR('XT'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c1)-(vt0.c0))))) ORDER BY ((((rt1.c0)<(rt1.c2)))IS(NULLIF(vt0.c1, rt1.c2))) ASC, ((((rt1.c2)>>(rt1.c1)))&((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c1)-(vt0.c0))))) WHERE ((((((+ (rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))))OR('XT'))) ORDER BY ((((rt1.c0)<(rt1.c2)))IS(NULLIF(vt0.c1, rt1.c2))) ASC, ((((rt1.c2)>>(rt1.c1)))&((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))))OR('XT'))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c1)-(vt0.c0))))) ORDER BY ((((rt1.c0)<(rt1.c2)))IS(NULLIF(vt0.c1, rt1.c2))) ASC, ((((rt1.c2)>>(rt1.c1)))&((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((rt1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((rt1.c1)-(vt0.c0))))) WHERE ((((((+ (rt1.c1)))OR(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))))OR('XT'))) ORDER BY ((((rt1.c0)<(rt1.c2)))IS(NULLIF(vt0.c1, rt1.c2))) ASC, ((((rt1.c2)>>(rt1.c1)))&((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((vt0.c0))))) ASC;
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt0.c3)GLOB(rt0.c1))  WHEN ((rt0.c0)LIKE(rt1.c2)) THEN HEX(vt0.c0) ELSE (rt1.c0 IN (rt0.c3, rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)GLOB(rt0.c1))  WHEN ((rt0.c0)LIKE(rt1.c2)) THEN HEX(vt0.c0) ELSE (rt1.c0 IN (rt0.c3, rt1.c2)) END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt0.c3)GLOB(rt0.c1))  WHEN ((rt0.c0)LIKE(rt1.c2)) THEN HEX(vt0.c0) ELSE (rt1.c0 IN (rt0.c3, rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3)GLOB(rt0.c1))  WHEN ((rt0.c0)LIKE(rt1.c2)) THEN HEX(vt0.c0) ELSE (rt1.c0 IN (rt0.c3, rt1.c2)) END) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt0.c3)GLOB(rt0.c1))  WHEN ((rt0.c0)LIKE(rt1.c2)) THEN HEX(vt0.c0) ELSE (rt1.c0 IN (rt0.c3, rt1.c2)) END);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON (+ (((rt1.c2) IS TRUE))) WHERE (LIKELIHOOD(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)), 0.40850189758998723)) ORDER BY NULLIF(DISTINCT ((vt0.c0) IS TRUE), CASE rt1.c1  WHEN 0.04191052308851195 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)), 0.40850189758998723)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON (+ (((rt1.c2) IS TRUE))) ORDER BY NULLIF(DISTINCT ((vt0.c0) IS TRUE), CASE rt1.c1  WHEN 0.04191052308851195 THEN vt0.c0 END));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON (+ (((rt1.c2) IS TRUE))) WHERE (LIKELIHOOD(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)), 0.40850189758998723)) ORDER BY NULLIF(DISTINCT ((vt0.c0) IS TRUE), CASE rt1.c1  WHEN 0.04191052308851195 THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)), 0.40850189758998723)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON (+ (((rt1.c2) IS TRUE))) ORDER BY NULLIF(DISTINCT ((vt0.c0) IS TRUE), CASE rt1.c1  WHEN 0.04191052308851195 THEN vt0.c0 END));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE BINARY COLLATE RTRIM INNER JOIN vt0 ON (+ (((rt1.c2) IS TRUE))) WHERE (LIKELIHOOD(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c2)), 0.40850189758998723)) ORDER BY NULLIF(DISTINCT ((vt0.c0) IS TRUE), CASE rt1.c1  WHEN 0.04191052308851195 THEN vt0.c0 END);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((rt0.c4) NOTNULL) THEN (NULL IN (x'')) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND ('')) THEN rt1.c1 END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((rt0.c4) NOTNULL) THEN (NULL IN (x'')) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND ('')) THEN rt1.c1 END) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON rt0.c4 ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((rt0.c4) NOTNULL) THEN (NULL IN (x'')) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND ('')) THEN rt1.c1 END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((rt0.c4) NOTNULL) THEN (NULL IN (x'')) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND ('')) THEN rt1.c1 END) IS TRUE)  as count FROM vt0, rt1 LEFT OUTER JOIN rt0 ON rt0.c4 ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 LEFT OUTER JOIN rt0 ON rt0.c4 WHERE (CASE WHEN NULL THEN (rt0.c3 IN ()) WHEN ((rt0.c4) NOTNULL) THEN (NULL IN (x'')) WHEN ((rt0.c1) BETWEEN (rt0.c3) AND ('')) THEN rt1.c1 END) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT ('285417159')) IN (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))) ASC, x'5297' DESC;
SELECT SUM(count) FROM (SELECT ((((NOT ('285417159')) IN (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))) ASC, x'5297' DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT ('285417159')) IN (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))) ASC, x'5297' DESC;
SELECT SUM(count) FROM (SELECT ((((NOT ('285417159')) IN (CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))) ASC, x'5297' DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT ('285417159')) IN (CAST(rt1.c1 AS BLOB)))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c2 THEN vt0.c1 END) AND (CAST(vt0.c1 AS INTEGER))) ASC, x'5297' DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(0.08500592863108902 COLLATE BINARY AS NUMERIC)) ORDER BY ((((rt0.c4) NOTNULL)) NOT BETWEEN (((0.6794434997320333) IS FALSE)) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.08500592863108902 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4) NOTNULL)) NOT BETWEEN (((0.6794434997320333) IS FALSE)) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(0.08500592863108902 COLLATE BINARY AS NUMERIC)) ORDER BY ((((rt0.c4) NOTNULL)) NOT BETWEEN (((0.6794434997320333) IS FALSE)) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.08500592863108902 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c4) NOTNULL)) NOT BETWEEN (((0.6794434997320333) IS FALSE)) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(0.08500592863108902 COLLATE BINARY AS NUMERIC)) ORDER BY ((((rt0.c4) NOTNULL)) NOT BETWEEN (((0.6794434997320333) IS FALSE)) AND (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((- (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((- (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((- (rt1.c2)) IN ()));
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (+ (((rt1.c2)=(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c2)=(rt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (+ (((rt1.c2)=(rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (+ (((rt1.c2)=(rt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (NULL) ORDER BY (+ (((rt1.c2)=(rt1.c2)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (((((((-2.18375756E8)<(rt1.c2)))OR((((rt1.c0, rt1.c1, 7.10012135E8))>((rt1.c2, rt1.c0, rt1.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((-2.18375756E8)<(rt1.c2)))OR((((rt1.c0, rt1.c1, 7.10012135E8))>((rt1.c2, rt1.c0, rt1.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((-2.18375756E8)<(rt1.c2)))OR((((rt1.c0, rt1.c1, 7.10012135E8))>((rt1.c2, rt1.c0, rt1.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((-2.18375756E8)<(rt1.c2)))OR((((rt1.c0, rt1.c1, 7.10012135E8))>((rt1.c2, rt1.c0, rt1.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((-2.18375756E8)<(rt1.c2)))OR((((rt1.c0, rt1.c1, 7.10012135E8))>((rt1.c2, rt1.c0, rt1.c1))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (rt0.c0) AND (-610880747)))))AND(((vt0.c0)<>(rt1.c0)))) CROSS JOIN rt0 ON (((rt0.c1, rt0.c1, '')) BETWEEN (((vt0.c0 IN ()), (NOT (rt0.c0)), ((rt1.c2) NOTNULL))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)), CAST(rt0.c4 AS TEXT), (((vt0.c0, rt1.c1, rt0.c1))>((rt0.c4, rt0.c3, rt1.c1)))))) WHERE ((((CAST(0.10628810875016159 AS TEXT), (~ (rt1.c1)), NULL))<((0xffffffffc91c72a5, ((((rt1.c1)OR(rt1.c0)))AND(rt0.c2)), ((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.10628810875016159 AS TEXT), (~ (rt1.c1)), NULL))<((0xffffffffc91c72a5, ((((rt1.c1)OR(rt1.c0)))AND(rt0.c2)), ((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (rt0.c0) AND (-610880747)))))AND(((vt0.c0)!=(rt1.c0)))) CROSS JOIN rt0 ON (((rt0.c1, rt0.c1, '')) BETWEEN (((vt0.c0 IN ()), (NOT (rt0.c0)), ((rt1.c2) NOTNULL))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)), CAST(rt0.c4 AS TEXT), (((vt0.c0, rt1.c1, rt0.c1))>((rt0.c4, rt0.c3, rt1.c1)))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (rt0.c0) AND (-610880747)))))AND(((vt0.c0)<>(rt1.c0)))) CROSS JOIN rt0 ON (((rt0.c1, rt0.c1, '')) BETWEEN (((vt0.c0 IN ()), (NOT (rt0.c0)), ((rt1.c2) NOTNULL))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)), CAST(rt0.c4 AS TEXT), (((vt0.c0, rt1.c1, rt0.c1))>((rt0.c4, rt0.c3, rt1.c1)))))) WHERE ((((CAST(0.10628810875016159 AS TEXT), (~ (rt1.c1)), NULL))<((0xffffffffc91c72a5, ((((rt1.c1)OR(rt1.c0)))AND(rt0.c2)), ((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0.10628810875016159 AS TEXT), (~ (rt1.c1)), NULL))<((0xffffffffc91c72a5, ((((rt1.c1)OR(rt1.c0)))AND(rt0.c2)), ((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((((rt1.c0 COLLATE RTRIM)AND(((vt0.c1) NOT BETWEEN (rt0.c0) AND (-610880747)))))AND(((vt0.c0)!=(rt1.c0)))) CROSS JOIN rt0 ON (((rt0.c1, rt0.c1, '')) BETWEEN (((vt0.c0 IN ()), (NOT (rt0.c0)), ((rt1.c2) NOTNULL))) AND ((((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c2)), CAST(rt0.c4 AS TEXT), (((vt0.c0, rt1.c1, rt0.c1))>((rt0.c4, rt0.c3, rt1.c1)))))));
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)>=(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)>=(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>=(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE (((vt0.c0)>=(rt1.c2)) COLLATE RTRIM);
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))IS((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c1)))IS((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))IS((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)-(rt1.c1)))IS((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)-(rt1.c1)))IS((+ (rt1.c0)))));
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))<>(((((rt0.c3)AND(3.06257266E8)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0)))!=(((((rt0.c3)AND(3.06257266E8)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))<>(((((rt0.c3)AND(3.06257266E8)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (rt0.c0)))!=(((((rt0.c3)AND(3.06257266E8)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))<>(((((rt0.c3)AND(3.06257266E8)))OR(rt0.c2)))));
SELECT * FROM rt1 WHERE ((((0.5416742620724898) IS TRUE) IN ((rt1.c2 IN ())))) ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) ASC, ((rt1.c0) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ((((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.5416742620724898) IS TRUE) IN ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) ASC, ((rt1.c0) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ((((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((0.5416742620724898) IS TRUE) IN ((rt1.c2 IN ())))) ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) ASC, ((rt1.c0) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ((((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.5416742620724898) IS TRUE) IN ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) ASC, ((rt1.c0) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ((((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((0.5416742620724898) IS TRUE) IN ((rt1.c2 IN ())))) ORDER BY CAST(((rt1.c1) IS TRUE) AS INTEGER) ASC, ((rt1.c0) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))) AND ((((rt1.c1, rt1.c1, rt1.c1))!=((rt1.c1, rt1.c1, rt1.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (load_extension(((rt1.c0)IS NOT(rt1.c1)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) ORDER BY x'' COLLATE RTRIM ASC  NULLS LAST, ((NULL)=(rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt1.c0)IS NOT(rt1.c1)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE RTRIM ASC  NULLS LAST, ((NULL)=(rt1.c2))  NULLS LAST);
SELECT * FROM rt1 WHERE (load_extension(((rt1.c0)IS NOT(rt1.c1)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) ORDER BY x'' COLLATE RTRIM ASC  NULLS LAST, ((NULL)=(rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt1.c0)IS NOT(rt1.c1)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) IS TRUE)  as count FROM rt1 ORDER BY x'' COLLATE RTRIM ASC  NULLS LAST, ((NULL)=(rt1.c2))  NULLS LAST);
SELECT * FROM rt1 WHERE (load_extension(((rt1.c0)IS NOT(rt1.c1)), CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)) ORDER BY x'' COLLATE RTRIM ASC  NULLS LAST, ((NULL)=(rt1.c2))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)GLOB(rt0.c1)) IN ((+ (NULL)), PRINTF(vt0.c1)))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)GLOB(rt0.c1)) IN ((+ (NULL)), PRINTF(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS FIRST, ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)GLOB(rt0.c1)) IN ((+ (NULL)), PRINTF(vt0.c1)))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)GLOB(rt0.c1)) IN ((+ (NULL)), PRINTF(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS FIRST, ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)GLOB(rt0.c1)) IN ((+ (NULL)), PRINTF(vt0.c1)))) ORDER BY rt0.c1 ASC  NULLS FIRST, ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON (((((((((NULL)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(NULL)) IN ()) WHERE (rt0.c1) ORDER BY ((((rt1.c1) IS FALSE)) ISNULL)  NULLS LAST, (((((rt0.c2))>=((rt0.c0)))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c3 END) AND (0.13840817877863199)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON (((((((((NULL)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(NULL)) IN ()) ORDER BY ((((rt1.c1) IS FALSE)) ISNULL)  NULLS LAST, (((((rt0.c2))>=((rt0.c0)))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c3 END) AND (0.13840817877863199)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON (((((((((NULL)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(NULL)) IN ()) WHERE (rt0.c1) ORDER BY ((((rt1.c1) IS FALSE)) ISNULL)  NULLS LAST, (((((rt0.c2))>=((rt0.c0)))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c3 END) AND (0.13840817877863199)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt0 ON (((((((((NULL)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(NULL)) IN ()) ORDER BY ((((rt1.c1) IS FALSE)) ISNULL)  NULLS LAST, (((((rt0.c2))>=((rt0.c0)))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c3 END) AND (0.13840817877863199)) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 FULL OUTER JOIN vt0 ON (((((((((NULL)OR(rt1.c1)))OR(rt1.c0)))OR(rt0.c0)))OR(NULL)) IN ()) WHERE (rt0.c1) ORDER BY ((((rt1.c1) IS FALSE)) ISNULL)  NULLS LAST, (((((rt0.c2))>=((rt0.c0)))) BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt0.c3 END) AND (0.13840817877863199)) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((- (rt0.c3)))AND(rt0.c3 COLLATE BINARY))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN ((rt1.c1 IN ())) AND (((rt0.c2)-('-1584148264'))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN ((rt1.c1 IN ())) AND (((rt0.c2)-('-1584148264')))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((- (rt0.c3)))AND(rt0.c3 COLLATE BINARY))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN ((rt1.c1 IN ())) AND (((rt0.c2)-('-1584148264'))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))AND(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN ((rt1.c1 IN ())) AND (((rt0.c2)-('-1584148264')))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((- (rt0.c3)))AND(rt0.c3 COLLATE BINARY))) ORDER BY ((rt1.c2 COLLATE BINARY) BETWEEN ((rt1.c1 IN ())) AND (((rt0.c2)-('-1584148264'))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((-1736364003))!=(((rt0.c1 IN ()))))) ORDER BY ((vt0.c1) NOT BETWEEN (TRIM(rt0.c2, rt0.c3)) AND (((rt0.c1)IS(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((-1736364003))<>(((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (TRIM(rt0.c2, rt0.c3)) AND (((rt0.c1)IS(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((-1736364003))!=(((rt0.c1 IN ()))))) ORDER BY ((vt0.c1) NOT BETWEEN (TRIM(rt0.c2, rt0.c3)) AND (((rt0.c1)IS(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((-1736364003))<>(((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (TRIM(rt0.c2, rt0.c3)) AND (((rt0.c1)IS(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((-1736364003))!=(((rt0.c1 IN ()))))) ORDER BY ((vt0.c1) NOT BETWEEN (TRIM(rt0.c2, rt0.c3)) AND (((rt0.c1)IS(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))|(0.6941267987664205)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))|(0.6941267987664205))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))|(0.6941267987664205)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))|(0.6941267987664205))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1))))|(0.6941267987664205)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c1)))OR('618227876'))  WHEN (((vt0.c1, vt0.c1, vt0.c0))!=((x'', vt0.c0, vt0.c1))) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c1)) THEN ((x'') NOT BETWEEN (NULL) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN ('0.9114437604303064') AND (0.3774171455300064)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)OR(vt0.c1)))OR('618227876'))  WHEN (((vt0.c1, vt0.c1, vt0.c0))<>((x'', vt0.c0, vt0.c1))) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c1)) THEN ((x'') NOT BETWEEN (NULL) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN ('0.9114437604303064') AND (0.3774171455300064)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c1)))OR('618227876'))  WHEN (((vt0.c1, vt0.c1, vt0.c0))!=((x'', vt0.c0, vt0.c1))) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c1)) THEN ((x'') NOT BETWEEN (NULL) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN ('0.9114437604303064') AND (0.3774171455300064)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)OR(vt0.c1)))OR('618227876'))  WHEN (((vt0.c1, vt0.c1, vt0.c0))<>((x'', vt0.c0, vt0.c1))) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c1)) THEN ((x'') NOT BETWEEN (NULL) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN ('0.9114437604303064') AND (0.3774171455300064)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c1)OR(vt0.c1)))OR('618227876'))  WHEN (((vt0.c1, vt0.c1, vt0.c0))!=((x'', vt0.c0, vt0.c1))) THEN ((vt0.c1) ISNULL) WHEN vt0.c0 THEN (vt0.c1 IN ()) WHEN ((vt0.c0)IS(vt0.c1)) THEN ((x'') NOT BETWEEN (NULL) AND (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN ('0.9114437604303064') AND (0.3774171455300064)) END);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)&(vt0.c0)))-(x''))) ORDER BY ((0.3907165392157347) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC  NULLS LAST, 0.9132671860126378, (- (ABS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(vt0.c0)))-(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.3907165392157347) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC  NULLS LAST, 0.9132671860126378, (- (ABS(vt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)&(vt0.c0)))-(x''))) ORDER BY ((0.3907165392157347) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC  NULLS LAST, 0.9132671860126378, (- (ABS(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(vt0.c0)))-(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.3907165392157347) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC  NULLS LAST, 0.9132671860126378, (- (ABS(vt0.c0))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)&(vt0.c0)))-(x''))) ORDER BY ((0.3907165392157347) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC  NULLS LAST, 0.9132671860126378, (- (ABS(vt0.c0))) ASC;
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt1.c0 END)<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c0, rt0.c1, rt1.c1)) NOT BETWEEN (((NOT (0.40154995347816447)), NULL, (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)), ((rt0.c4)==(rt1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND ('*E8')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt1.c0 END)<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c0, rt0.c1, rt1.c1)) NOT BETWEEN (((NOT (0.40154995347816447)), NULL, (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)), ((rt0.c4)==(rt1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND ('*E8')))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt1.c0 END)<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c0, rt0.c1, rt1.c1)) NOT BETWEEN (((NOT (0.40154995347816447)), NULL, (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)), ((rt0.c4)==(rt1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND ('*E8')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt1.c0 END)<(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c0, rt0.c1, rt1.c1)) NOT BETWEEN (((NOT (0.40154995347816447)), NULL, (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)), ((rt0.c4)==(rt1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND ('*E8')))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt1.c0 END)<(CAST(rt1.c1 AS BLOB)))) ORDER BY (((rt1.c0, rt0.c1, rt1.c1)) NOT BETWEEN (((NOT (0.40154995347816447)), NULL, (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)), ((rt0.c4)==(rt1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND ('*E8')))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((((((((LTRIM(rt0.c4, rt1.c1))AND(((rt0.c3)|(rt0.c3)))))AND((+ (rt1.c2)))))AND('A')))AND(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((LTRIM(rt0.c4, rt1.c1))AND(((rt0.c3)|(rt0.c3)))))AND((+ (rt1.c2)))))AND('A')))AND(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((((LTRIM(rt0.c4, rt1.c1))AND(((rt0.c3)|(rt0.c3)))))AND((+ (rt1.c2)))))AND('A')))AND(x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((LTRIM(rt0.c4, rt1.c1))AND(((rt0.c3)|(rt0.c3)))))AND((+ (rt1.c2)))))AND('A')))AND(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((((((LTRIM(rt0.c4, rt1.c1))AND(((rt0.c3)|(rt0.c3)))))AND((+ (rt1.c2)))))AND('A')))AND(x'' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1)&(rt1.c1))))) ORDER BY (((rt1.c0 IN ())) NOTNULL) ASC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)LIKE(rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)&(rt1.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, vt0 ORDER BY (((rt1.c0 IN ())) NOTNULL) ASC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)LIKE(rt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1)&(rt1.c1))))) ORDER BY (((rt1.c0 IN ())) NOTNULL) ASC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)LIKE(rt0.c1)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1)&(rt1.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, rt1, vt0 ORDER BY (((rt1.c0 IN ())) NOTNULL) ASC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)LIKE(rt0.c1)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE ((~ (((rt1.c1)&(rt1.c1))))) ORDER BY (((rt1.c0 IN ())) NOTNULL) ASC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)LIKE(rt0.c1)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 END)IS(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 END)IS(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 END)IS(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 END)IS(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c1 WHEN rt0.c0 THEN rt0.c2 END)IS(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c4)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4)<=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c4)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4)<=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c4)<=(rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT NULL) ASC, ((((vt0.c0 IN ())))<=((((rt0.c4)||(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT NULL) ASC, ((((vt0.c0 IN ())))<=((((rt0.c4)||(rt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT NULL) ASC, ((((vt0.c0 IN ())))<=((((rt0.c4)||(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY ((rt0.c4 COLLATE RTRIM) NOT NULL) ASC, ((((vt0.c0 IN ())))<=((((rt0.c4)||(rt1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((rt1.c2 COLLATE RTRIM IN ())) ORDER BY ((rt0.c4 COLLATE RTRIM) NOT NULL) ASC, ((((vt0.c0 IN ())))<=((((rt0.c4)||(rt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))<=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))<=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))<=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1)))<=(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('i&㷨G3(!{h' COLLATE BINARY)) AND ((LIKELY(rt1.c2))))) ORDER BY (~ (vt0.c1)), LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS LAST, ((0.08115850902773136) NOT BETWEEN ('7d}?^භJ''') AND (((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('i&㷨G3(!{h' COLLATE BINARY)) AND ((LIKELY(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (~ (vt0.c1)), LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS LAST, ((0.08115850902773136) NOT BETWEEN ('7d}?^භJ''') AND (((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('i&㷨G3(!{h' COLLATE BINARY)) AND ((LIKELY(rt1.c2))))) ORDER BY (~ (vt0.c1)), LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS LAST, ((0.08115850902773136) NOT BETWEEN ('7d}?^භJ''') AND (((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('i&㷨G3(!{h' COLLATE BINARY)) AND ((LIKELY(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (~ (vt0.c1)), LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS LAST, ((0.08115850902773136) NOT BETWEEN ('7d}?^භJ''') AND (((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('i&㷨G3(!{h' COLLATE BINARY)) AND ((LIKELY(rt1.c2))))) ORDER BY (~ (vt0.c1)), LIKELY(vt0.c0) COLLATE NOCASE ASC  NULLS LAST, ((0.08115850902773136) NOT BETWEEN ('7d}?^භJ''') AND (((rt0.c4)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (json_patch((rt0.c2 IN ()), rt1.c2 COLLATE RTRIM)) ORDER BY (NOT (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-759595256')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((rt0.c2 IN ()), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-759595256')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (json_patch((rt0.c2 IN ()), rt1.c2 COLLATE RTRIM)) ORDER BY (NOT (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-759595256')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((rt0.c2 IN ()), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-759595256')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (json_patch((rt0.c2 IN ()), rt1.c2 COLLATE RTRIM)) ORDER BY (NOT (((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c0)))OR(rt0.c0)))AND('-759595256')))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (load_extension(vt0.c1, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (load_extension(vt0.c1, vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (load_extension(vt0.c1, vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (load_extension(vt0.c1, vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY (load_extension(vt0.c1, vt0.c0) IN ());
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (x''))) IS FALSE)) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))LIKE(x'262e')), (((vt0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))LIKE(x'262e')), (((vt0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((vt0.c1))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (x''))) IS FALSE)) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))LIKE(x'262e')), (((vt0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))LIKE(x'262e')), (((vt0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((vt0.c1))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (x''))) IS FALSE)) ORDER BY ((((((((((vt0.c0)AND(rt1.c1)))OR(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))LIKE(x'262e')), (((vt0.c1)) NOT BETWEEN ((CAST(rt1.c0 AS TEXT))) AND ((vt0.c1)));
SELECT COUNT(*) FROM rt1 WHERE (GLOB(rt1.c2, (NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt1.c2, (NOT (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (GLOB(rt1.c2, (NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(rt1.c2, (NOT (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (GLOB(rt1.c2, (NOT (rt1.c2))));
SELECT * FROM rt0, vt0, rt1 WHERE (((MIN(vt0.c0, rt0.c3, rt1.c0, vt0.c1, rt0.c2, rt1.c0))+((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(vt0.c0, rt0.c3, rt1.c0, vt0.c1, rt0.c2, rt1.c0))+((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((MIN(vt0.c0, rt0.c3, rt1.c0, vt0.c1, rt0.c2, rt1.c0))+((rt0.c1 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((MIN(vt0.c0, rt0.c3, rt1.c0, vt0.c1, rt0.c2, rt1.c0))+((rt0.c1 IN (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT * FROM rt0, vt0, rt1 WHERE (((MIN(vt0.c0, rt0.c3, rt1.c0, vt0.c1, rt0.c2, rt1.c0))+((rt0.c1 IN (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((((0xffffffffac5dcc1e) BETWEEN (rt0.c2) AND (rt1.c2)))OR(rt0.c4)))OR(CASE '435077223'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((0xffffffffac5dcc1e) BETWEEN (rt0.c2) AND (rt1.c2)))OR(rt0.c4)))OR(CASE '435077223'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((((0xffffffffac5dcc1e) BETWEEN (rt0.c2) AND (rt1.c2)))OR(rt0.c4)))OR(CASE '435077223'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((0xffffffffac5dcc1e) BETWEEN (rt0.c2) AND (rt1.c2)))OR(rt0.c4)))OR(CASE '435077223'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (((((((0xffffffffac5dcc1e) BETWEEN (rt0.c2) AND (rt1.c2)))OR(rt0.c4)))OR(CASE '435077223'  WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c2)<(rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c2)<(rt0.c2))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<(rt0.c2))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'') ORDER BY ((((rt0.c2)<(rt0.c2))) ISNULL);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((+ (rt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((+ (rt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((+ (rt1.c2))) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (vt0.c0))) ORDER BY NULL ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((('꿠T6B^iV6m') NOT BETWEEN (NULL) AND (LIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((('꿠T6B^iV6m') NOT BETWEEN (NULL) AND (LIKELY(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('꿠T6B^iV6m') NOT BETWEEN (NULL) AND (LIKELY(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((('꿠T6B^iV6m') NOT BETWEEN (NULL) AND (LIKELY(vt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('꿠T6B^iV6m') NOT BETWEEN (NULL) AND (LIKELY(vt0.c1))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (+ (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (+ (rt1.c1)) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN (+ (rt1.c1)) END);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)OR(rt1.c0)) IN ())) ORDER BY -928967159, (((('D蔙\nI	'))>((vt0.c0))) IN (CASE rt1.c2  WHEN rt1.c1 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)OR(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY -928967159, (((('D蔙\nI	'))>((vt0.c0))) IN (CASE rt1.c2  WHEN rt1.c1 THEN vt0.c1 END)) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)OR(rt1.c0)) IN ())) ORDER BY -928967159, (((('D蔙\nI	'))>((vt0.c0))) IN (CASE rt1.c2  WHEN rt1.c1 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)OR(rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY -928967159, (((('D蔙\nI	'))>((vt0.c0))) IN (CASE rt1.c2  WHEN rt1.c1 THEN vt0.c1 END)) ASC);
SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN rt1 ON PRINTF((~ (rt0.c3))) FULL OUTER JOIN rt0 ON ABS(DISTINCT (+ (vt0.c1))) WHERE (((787399860)>=((+ (rt1.c1))))) ORDER BY (((rt0.c0)) BETWEEN (((((NULL))<((rt0.c0))))) AND (((~ (rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((787399860)>=((+ (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON PRINTF((~ (rt0.c3))) FULL OUTER JOIN rt0 ON ABS(DISTINCT (+ (vt0.c1))) ORDER BY (((rt0.c0)) BETWEEN (((((NULL))<((rt0.c0))))) AND (((~ (rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED INNER JOIN rt1 ON PRINTF((~ (rt0.c3))) FULL OUTER JOIN rt0 ON ABS(DISTINCT (+ (vt0.c1))) WHERE (((787399860)>=((+ (rt1.c1))))) ORDER BY (((rt0.c0)) BETWEEN (((((NULL))<((rt0.c0))))) AND (((~ (rt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((787399860)>=((+ (rt1.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON PRINTF((~ (rt0.c3))) FULL OUTER JOIN rt0 ON ABS(DISTINCT (+ (vt0.c1))) ORDER BY (((rt0.c0)) BETWEEN (((((NULL))<((rt0.c0))))) AND (((~ (rt0.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2) ISNULL))));
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c0)) BETWEEN (((rt1.c2 IN (vt0.c1)))) AND ((((vt0.c0) IS FALSE)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((('g>!' IN (rt0.c2)))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((('g>!' IN (rt0.c2)))/(rt0.c1))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((('g>!' IN (rt0.c2)))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((('g>!' IN (rt0.c2)))/(rt0.c1))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (((('g>!' IN (rt0.c2)))/(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c2))<=((rt0.c0))) IN ((+ (rt0.c4))))) ORDER BY (~ (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<=((rt0.c0))) IN ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c2))<=((rt0.c0))) IN ((+ (rt0.c4))))) ORDER BY (~ (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<=((rt0.c0))) IN ((+ (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (~ (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c2))<=((rt0.c0))) IN ((+ (rt0.c4))))) ORDER BY (~ (CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c4 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (((((vt0.c1)OR(rt0.c4)))AND(vt0.c1))) AND (((rt0.c3)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE)) BETWEEN (((((vt0.c1)OR(rt0.c4)))AND(vt0.c1))) AND (((rt0.c3)&(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, rt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (((((vt0.c1)OR(rt0.c4)))AND(vt0.c1))) AND (((rt0.c3)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE)) BETWEEN (((((vt0.c1)OR(rt0.c4)))AND(vt0.c1))) AND (((rt0.c3)&(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, rt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((((rt0.c4) IS TRUE)) BETWEEN (((((vt0.c1)OR(rt0.c4)))AND(vt0.c1))) AND (((rt0.c3)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (x'44e9')))!=(((((rt1.c0)OR(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (x'44e9')))<>(((((rt1.c0)OR(rt0.c3)))AND(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (x'44e9')))!=(((((rt1.c0)OR(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (x'44e9')))<>(((((rt1.c0)OR(rt0.c3)))AND(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)) IN ())) ORDER BY ((((rt0.c2) BETWEEN (rt1.c0) AND (x'44e9')))!=(((((rt1.c0)OR(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c1)&(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)&(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c1)&(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)&(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((rt1.c1)&(rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c1 AS BLOB))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c1 AS BLOB))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c1 AS BLOB))))) ORDER BY CASE WHEN vt0.c1 COLLATE RTRIM THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c4)IS(vt0.c0)))IS NOT(((((rt1.c0)AND(vt0.c1)))OR(rt0.c3))))) ORDER BY 0.6277498890528739  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS(vt0.c0)))IS NOT(((((rt1.c0)AND(vt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY 0.6277498890528739  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c4)IS(vt0.c0)))IS NOT(((((rt1.c0)AND(vt0.c1)))OR(rt0.c3))))) ORDER BY 0.6277498890528739  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS(vt0.c0)))IS NOT(((((rt1.c0)AND(vt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY 0.6277498890528739  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((((rt0.c4)IS(vt0.c0)))IS NOT(((((rt1.c0)AND(vt0.c1)))OR(rt0.c3))))) ORDER BY 0.6277498890528739  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c0)>=(rt0.c1))))) ORDER BY CAST(IFNULL(vt0.c1, rt0.c3) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(IFNULL(vt0.c1, rt0.c3) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c0)>=(rt0.c1))))) ORDER BY CAST(IFNULL(vt0.c1, rt0.c3) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(IFNULL(vt0.c1, rt0.c3) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE ((- (((rt0.c0)>=(rt0.c1))))) ORDER BY CAST(IFNULL(vt0.c1, rt0.c3) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((761350309) BETWEEN ((((rt0.c1, 0.12613781492626464, rt0.c0))==((rt0.c4, rt1.c2, rt0.c0)))) AND (((vt0.c0)IS NOT(rt0.c4)))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c4)AND(rt0.c3)))AND(vt0.c0)) ELSE CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c4 END END WHERE (CASE WHEN UPPER(rt0.c3) THEN DATE(vt0.c1, rt1.c2, rt0.c0) WHEN CASE WHEN rt1.c0 THEN rt0.c0 END THEN rt0.c0 WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)AND(rt0.c2)))AND(rt1.c0)) END) ORDER BY ((rt0.c4)LIKE(CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(rt0.c3) THEN DATE(vt0.c1, rt1.c2, rt0.c0) WHEN CASE WHEN rt1.c0 THEN rt0.c0 END THEN rt0.c0 WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)AND(rt0.c2)))AND(rt1.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((761350309) BETWEEN ((((rt0.c1, 0.12613781492626464, rt0.c0))==((rt0.c4, rt1.c2, rt0.c0)))) AND (((vt0.c0)IS NOT(rt0.c4)))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c4)AND(rt0.c3)))AND(vt0.c0)) ELSE CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c4 END END ORDER BY ((rt0.c4)LIKE(CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((761350309) BETWEEN ((((rt0.c1, 0.12613781492626464, rt0.c0))==((rt0.c4, rt1.c2, rt0.c0)))) AND (((vt0.c0)IS NOT(rt0.c4)))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c4)AND(rt0.c3)))AND(vt0.c0)) ELSE CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c4 END END WHERE (CASE WHEN UPPER(rt0.c3) THEN DATE(vt0.c1, rt1.c2, rt0.c0) WHEN CASE WHEN rt1.c0 THEN rt0.c0 END THEN rt0.c0 WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)AND(rt0.c2)))AND(rt1.c0)) END) ORDER BY ((rt0.c4)LIKE(CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(rt0.c3) THEN DATE(vt0.c1, rt1.c2, rt0.c0) WHEN CASE WHEN rt1.c0 THEN rt0.c0 END THEN rt0.c0 WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)AND(rt0.c2)))AND(rt1.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((761350309) BETWEEN ((((rt0.c1, 0.12613781492626464, rt0.c0))==((rt0.c4, rt1.c2, rt0.c0)))) AND (((vt0.c0)IS NOT(rt0.c4)))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c4)AND(rt0.c3)))AND(vt0.c0)) ELSE CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c4 END END ORDER BY ((rt0.c4)LIKE(CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((761350309) BETWEEN ((((rt0.c1, 0.12613781492626464, rt0.c0))==((rt0.c4, rt1.c2, rt0.c0)))) AND (((vt0.c0)IS NOT(rt0.c4)))) LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((rt0.c4)AND(rt0.c3)))AND(vt0.c0)) ELSE CASE WHEN rt1.c2 THEN vt0.c1 ELSE rt0.c4 END END WHERE (CASE WHEN UPPER(rt0.c3) THEN DATE(vt0.c1, rt1.c2, rt0.c0) WHEN CASE WHEN rt1.c0 THEN rt0.c0 END THEN rt0.c0 WHEN (NOT (vt0.c1)) THEN ((((vt0.c1)AND(rt0.c2)))AND(rt1.c0)) END) ORDER BY ((rt0.c4)LIKE(CAST(rt1.c1 AS REAL))) DESC  NULLS FIRST;
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c2, vt0.c1, vt0.c1)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((vt0.c1) NOT NULL), rt1.c1)) AND ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))) ORDER BY LIKELY(DISTINCT ((vt0.c0)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, vt0.c1, vt0.c1)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((vt0.c1) NOT NULL), rt1.c1)) AND ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY LIKELY(DISTINCT ((vt0.c0)<=(NULL))));
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c2, vt0.c1, vt0.c1)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((vt0.c1) NOT NULL), rt1.c1)) AND ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))) ORDER BY LIKELY(DISTINCT ((vt0.c0)<=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, vt0.c1, vt0.c1)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((vt0.c1) NOT NULL), rt1.c1)) AND ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY LIKELY(DISTINCT ((vt0.c0)<=(NULL))));
SELECT * FROM rt1, vt0, rt0 WHERE ((((rt1.c2, vt0.c1, vt0.c1)) BETWEEN ((CAST(rt1.c1 AS TEXT), ((vt0.c1) NOT NULL), rt1.c1)) AND ((CASE vt0.c1  WHEN rt1.c0 THEN vt0.c1 END, ((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)), ((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))) ORDER BY LIKELY(DISTINCT ((vt0.c0)<=(NULL)));
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<>(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (((((('2110110594') NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((rt1.c2 IN ()))))OR(((rt1.c0)*(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))!=(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((((('2110110594') NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((rt1.c2 IN ()))))OR(((rt1.c0)*(rt1.c0)))) DESC);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<>(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (((((('2110110594') NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((rt1.c2 IN ()))))OR(((rt1.c0)*(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))!=(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY (((((('2110110594') NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((rt1.c2 IN ()))))OR(((rt1.c0)*(rt1.c0)))) DESC);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))<>(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (((((('2110110594') NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((rt1.c2 IN ()))))OR(((rt1.c0)*(rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)) NOT BETWEEN (('1402726550')) AND ((rt0.c1))) IN ()) RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c4 AS TEXT))>>(NULL)) WHERE (((json_object(rt1.c2, 0.4220623553627687))&('')));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt1.c2, 0.4220623553627687))&(''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)) NOT BETWEEN (('1402726550')) AND ((rt0.c1))) IN ()) RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c4 AS TEXT))>>(NULL)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)) NOT BETWEEN (('1402726550')) AND ((rt0.c1))) IN ()) RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c4 AS TEXT))>>(NULL)) WHERE (((json_object(rt1.c2, 0.4220623553627687))&('')));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt1.c2, 0.4220623553627687))&(''))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)) NOT BETWEEN (('1402726550')) AND ((rt0.c1))) IN ()) RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c4 AS TEXT))>>(NULL)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)) NOT BETWEEN (('1402726550')) AND ((rt0.c1))) IN ()) RIGHT OUTER JOIN rt1 ON ((CAST(rt0.c4 AS TEXT))>>(NULL)) WHERE (((json_object(rt1.c2, 0.4220623553627687))&('')));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))AND(rt0.c4)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (- (rt1.c1)) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (- (rt1.c1)) THEN rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c1)) THEN rt1.c2 END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (- (rt1.c1)) THEN rt1.c2 END);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c38d');
SELECT SUM(count) FROM (SELECT ALL ((x'c38d') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c38d');
SELECT SUM(count) FROM (SELECT ALL ((x'c38d') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c38d');
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt1.c2)) BETWEEN (((((0.1340381865271456))>=((rt0.c2))))) AND ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((((0.1340381865271456))>=((rt0.c2))))) AND ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt1.c2)) BETWEEN (((((0.1340381865271456))>=((rt0.c2))))) AND ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) BETWEEN (((((0.1340381865271456))>=((rt0.c2))))) AND ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt1.c2)) BETWEEN (((((0.1340381865271456))>=((rt0.c2))))) AND ((((((rt0.c1)OR(rt1.c0)))OR(rt1.c1))))));
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (('2110110594')) AND (((((vt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c0, rt0.c3))))))) ORDER BY CASE CASE '-448611332'  WHEN rt0.c0 THEN rt0.c1 END  WHEN '' THEN (+ (rt0.c3)) ELSE ((rt0.c3) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (('2110110594')) AND (((((vt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c0, rt0.c3))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CASE '-448611332'  WHEN rt0.c0 THEN rt0.c1 END  WHEN '' THEN (+ (rt0.c3)) ELSE ((rt0.c3) NOTNULL) END  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (('2110110594')) AND (((((vt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c0, rt0.c3))))))) ORDER BY CASE CASE '-448611332'  WHEN rt0.c0 THEN rt0.c1 END  WHEN '' THEN (+ (rt0.c3)) ELSE ((rt0.c3) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (('2110110594')) AND (((((vt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c0, rt0.c3))))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CASE '-448611332'  WHEN rt0.c0 THEN rt0.c1 END  WHEN '' THEN (+ (rt0.c3)) ELSE ((rt0.c3) NOTNULL) END  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (('2110110594')) AND (((((vt0.c0, rt0.c2, rt0.c2))=((rt0.c3, rt0.c0, rt0.c3))))))) ORDER BY CASE CASE '-448611332'  WHEN rt0.c0 THEN rt0.c1 END  WHEN '' THEN (+ (rt0.c3)) ELSE ((rt0.c3) NOTNULL) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0) IS TRUE))) AND ((rt1.c1))));
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)) AS NUMERIC) WHERE (MIN('-683185729', UNLIKELY(rt1.c1), (~ (vt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((MIN('-683185729', UNLIKELY(rt1.c1), (~ (vt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c1))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)) AS NUMERIC));
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)) AS NUMERIC) WHERE (MIN('-683185729', UNLIKELY(rt1.c1), (~ (vt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((MIN('-683185729', UNLIKELY(rt1.c1), (~ (vt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c1))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)) AS NUMERIC));
SELECT * FROM rt1 INNER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN (rt1.c0) AND (vt0.c1)) AS NUMERIC) WHERE (MIN('-683185729', UNLIKELY(rt1.c1), (~ (vt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c1)));
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC))==(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))==(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC))==(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))==(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(NULL AS NUMERIC))==(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((+ (CAST(NULL AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((0.11871576580744991)/(vt0.c1)) THEN ((vt0.c1)OR(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c1)&(vt0.c1)) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END) ORDER BY ((((vt0.c0) IS TRUE))||(vt0.c1 COLLATE BINARY)), (~ (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE x''  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) DESC, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((0.11871576580744991)/(vt0.c1)) THEN ((vt0.c1)OR(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c1)&(vt0.c1)) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))||(vt0.c1 COLLATE BINARY)), (~ (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE x''  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) DESC, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((0.11871576580744991)/(vt0.c1)) THEN ((vt0.c1)OR(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c1)&(vt0.c1)) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END) ORDER BY ((((vt0.c0) IS TRUE))||(vt0.c1 COLLATE BINARY)), (~ (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE x''  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) DESC, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((0.11871576580744991)/(vt0.c1)) THEN ((vt0.c1)OR(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c1)&(vt0.c1)) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS TRUE))||(vt0.c1 COLLATE BINARY)), (~ (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE x''  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) DESC, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN CAST(vt0.c1 AS BLOB) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN ((0.11871576580744991)/(vt0.c1)) THEN ((vt0.c1)OR(vt0.c1)) WHEN COALESCE(DISTINCT vt0.c0, vt0.c0) THEN ((vt0.c1)&(vt0.c1)) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) END) ORDER BY ((((vt0.c0) IS TRUE))||(vt0.c1 COLLATE BINARY)), (~ (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, CAST(CASE x''  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS TEXT) DESC, ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE ((((rt0.c3)AND(vt0.c1)))AND(rt0.c2))  WHEN ((((((((x'')OR(vt0.c0)))AND(rt0.c4)))OR(vt0.c1)))OR('-1864723315')) THEN (rt0.c0 IN (vt0.c0, rt0.c2)) END DESC  NULLS LAST, (((((((((vt0.c0)AND(vt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC, (~ (LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((((rt0.c3)AND(vt0.c1)))AND(rt0.c2))  WHEN ((((((((x'')OR(vt0.c0)))AND(rt0.c4)))OR(vt0.c1)))OR('-1864723315')) THEN (rt0.c0 IN (vt0.c0, rt0.c2)) END DESC  NULLS LAST, (((((((((vt0.c0)AND(vt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC, (~ (LAST_INSERT_ROWID())));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE ((((rt0.c3)AND(vt0.c1)))AND(rt0.c2))  WHEN ((((((((x'')OR(vt0.c0)))AND(rt0.c4)))OR(vt0.c1)))OR('-1864723315')) THEN (rt0.c0 IN (vt0.c0, rt0.c2)) END DESC  NULLS LAST, (((((((((vt0.c0)AND(vt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC, (~ (LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((((rt0.c3)AND(vt0.c1)))AND(rt0.c2))  WHEN ((((((((x'')OR(vt0.c0)))AND(rt0.c4)))OR(vt0.c1)))OR('-1864723315')) THEN (rt0.c0 IN (vt0.c0, rt0.c2)) END DESC  NULLS LAST, (((((((((vt0.c0)AND(vt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC, (~ (LAST_INSERT_ROWID())));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY CASE ((((rt0.c3)AND(vt0.c1)))AND(rt0.c2))  WHEN ((((((((x'')OR(vt0.c0)))AND(rt0.c4)))OR(vt0.c1)))OR('-1864723315')) THEN (rt0.c0 IN (vt0.c0, rt0.c2)) END DESC  NULLS LAST, (((((((((vt0.c0)AND(vt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c3)) IN ()) ASC, (~ (LAST_INSERT_ROWID()));
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL)) ORDER BY (((rt1.c1 IN ()))-(((rt1.c2) NOTNULL))) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c2)|(rt1.c2))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ()))-(((rt1.c2) NOTNULL))) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c2)|(rt1.c2))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL)) ORDER BY (((rt1.c1 IN ()))-(((rt1.c2) NOTNULL))) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c2)|(rt1.c2))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1 IN ()))-(((rt1.c2) NOTNULL))) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c2)|(rt1.c2))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) AS REAL)) ORDER BY (((rt1.c1 IN ()))-(((rt1.c2) NOTNULL))) DESC  NULLS LAST, UPPER(DISTINCT ((rt1.c2)|(rt1.c2))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT * FROM vt0, rt1, rt0 WHERE ((((((+ (rt1.c1)))OR((+ (rt1.c2)))))AND(x'')));
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c1)))OR((+ (rt1.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE ((((((+ (rt1.c1)))OR((+ (rt1.c2)))))AND(x'')));
SELECT SUM(count) FROM (SELECT (((((((+ (rt1.c1)))OR((+ (rt1.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE ((((((+ (rt1.c1)))OR((+ (rt1.c2)))))AND(x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN '-1188037178' THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN '-1188037178' THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN '-1188037178' THEN vt0.c0 ELSE vt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN '-1188037178' THEN vt0.c0 ELSE vt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) DESC  NULLS FIRST, ((((vt0.c1)AND(vt0.c1))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE WHEN '-1188037178' THEN vt0.c0 ELSE vt0.c1 END));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))-(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))-(((rt1.c2)LIKE(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))-(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))-(((rt1.c2)LIKE(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT NULL)) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))-(((rt1.c2)LIKE(rt1.c0)))) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((x'' IN ()))OR(((rt1.c2)IS NOT(rt1.c1)))))AND(x''))) ORDER BY ((((CASE vt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN ()))OR(((rt1.c2)IS NOT(rt1.c1)))))AND(x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CASE vt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((x'' IN ()))OR(((rt1.c2)IS NOT(rt1.c1)))))AND(x''))) ORDER BY ((((CASE vt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN ()))OR(((rt1.c2)IS NOT(rt1.c1)))))AND(x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((CASE vt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((x'' IN ()))OR(((rt1.c2)IS NOT(rt1.c1)))))AND(x''))) ORDER BY ((((CASE vt0.c1  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 END)AND(CASE WHEN rt1.c0 THEN rt1.c2 END)))AND(((vt0.c0) BETWEEN (rt1.c0) AND (rt1.c1)))) ASC;
SELECT ALL * FROM rt0, rt1 WHERE ((- (CASE WHEN 0x4e2770b6 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN 0x4e2770b6 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CASE WHEN 0x4e2770b6 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN 0x4e2770b6 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- (CASE WHEN 0x4e2770b6 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((- ((- (rt1.c2))))) ORDER BY 0.5707240522131954, (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<>((((((0.9587975937097222)OR(0.4854275171258432)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY 0.5707240522131954, (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<>((((((0.9587975937097222)OR(0.4854275171258432)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((- ((- (rt1.c2))))) ORDER BY 0.5707240522131954, (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<>((((((0.9587975937097222)OR(0.4854275171258432)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY 0.5707240522131954, (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<>((((((0.9587975937097222)OR(0.4854275171258432)))AND(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((- ((- (rt1.c2))))) ORDER BY 0.5707240522131954, (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))))<>((((((0.9587975937097222)OR(0.4854275171258432)))AND(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON rt0.c3 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.010692693575990675)  WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) WHEN ((rt0.c3)+(rt1.c2)) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c2)/(rt1.c0)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt0.c3 ORDER BY CASE LIKELIHOOD(rt0.c1, 0.010692693575990675)  WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) WHEN ((rt0.c3)+(rt1.c2)) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c2)/(rt1.c0)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c1 END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON rt0.c3 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.010692693575990675)  WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) WHEN ((rt0.c3)+(rt1.c2)) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c2)/(rt1.c0)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4 COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON rt0.c3 ORDER BY CASE LIKELIHOOD(rt0.c1, 0.010692693575990675)  WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) WHEN ((rt0.c3)+(rt1.c2)) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c2)/(rt1.c0)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c1 END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON rt0.c3 WHERE (rt0.c4 COLLATE NOCASE) ORDER BY CASE LIKELIHOOD(rt0.c1, 0.010692693575990675)  WHEN ((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)) THEN (- (rt1.c1)) WHEN ((rt0.c3)+(rt1.c2)) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c2)/(rt1.c0)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c1 END;
SELECT ALL * FROM vt0, rt0 WHERE (CASE COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3)  WHEN ((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2) IS FALSE) THEN CASE NULL  WHEN 0.26901224953531144 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END WHEN CAST('0.9725488685077144' AS BLOB) THEN ((rt0.c0)<>(rt0.c1)) END) ORDER BY (((rt0.c4, NULL, rt0.c2)) BETWEEN (((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), '-988608920', (('3)') NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((json_extract(vt0.c0, rt0.c2), (((vt0.c1))<>((rt0.c2))), CAST(rt0.c2 AS TEXT)))) DESC, COALESCE((NOT (rt0.c4)), ((rt0.c2)IS NOT(vt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3)  WHEN ((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2) IS FALSE) THEN CASE NULL  WHEN 0.26901224953531144 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END WHEN CAST('0.9725488685077144' AS BLOB) THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c4, NULL, rt0.c2)) BETWEEN (((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), '-988608920', (('3)') NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((json_extract(vt0.c0, rt0.c2), (((vt0.c1))!=((rt0.c2))), CAST(rt0.c2 AS TEXT)))) DESC, COALESCE((NOT (rt0.c4)), ((rt0.c2)IS NOT(vt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3)  WHEN ((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2) IS FALSE) THEN CASE NULL  WHEN 0.26901224953531144 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END WHEN CAST('0.9725488685077144' AS BLOB) THEN ((rt0.c0)<>(rt0.c1)) END) ORDER BY (((rt0.c4, NULL, rt0.c2)) BETWEEN (((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), '-988608920', (('3)') NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((json_extract(vt0.c0, rt0.c2), (((vt0.c1))<>((rt0.c2))), CAST(rt0.c2 AS TEXT)))) DESC, COALESCE((NOT (rt0.c4)), ((rt0.c2)IS NOT(vt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3)  WHEN ((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2) IS FALSE) THEN CASE NULL  WHEN 0.26901224953531144 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END WHEN CAST('0.9725488685077144' AS BLOB) THEN ((rt0.c0)<>(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c4, NULL, rt0.c2)) BETWEEN (((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), '-988608920', (('3)') NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((json_extract(vt0.c0, rt0.c2), (((vt0.c1))!=((rt0.c2))), CAST(rt0.c2 AS TEXT)))) DESC, COALESCE((NOT (rt0.c4)), ((rt0.c2)IS NOT(vt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (CASE COALESCE(DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3)  WHEN ((((vt0.c0)AND(rt0.c4)))AND(vt0.c1)) THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c2) IS FALSE) THEN CASE NULL  WHEN 0.26901224953531144 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c1 END WHEN CAST('0.9725488685077144' AS BLOB) THEN ((rt0.c0)<>(rt0.c1)) END) ORDER BY (((rt0.c4, NULL, rt0.c2)) BETWEEN (((((vt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, vt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))), '-988608920', (('3)') NOT BETWEEN (vt0.c0) AND (rt0.c4)))) AND ((json_extract(vt0.c0, rt0.c2), (((vt0.c1))<>((rt0.c2))), CAST(rt0.c2 AS TEXT)))) DESC, COALESCE((NOT (rt0.c4)), ((rt0.c2)IS NOT(vt0.c1)), CAST(rt0.c1 AS REAL), vt0.c0)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((x'05a3c5db') BETWEEN ((rt0.c3 IN ())) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c2, ((rt0.c3)<<(rt0.c4)), ((rt0.c1)!=(rt0.c4))))>((CASE WHEN rt0.c0 THEN 0.2739469967402709 END, ABS(DISTINCT NULL), ((((rt0.c0)AND(x'')))AND(rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'05a3c5db') BETWEEN ((rt0.c3 IN ())) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, ((rt0.c3)<<(rt0.c4)), ((rt0.c1)!=(rt0.c4))))>((CASE WHEN rt0.c0 THEN 0.2739469967402709 END, ABS(DISTINCT NULL), ((((rt0.c0)AND(x'')))AND(rt0.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'05a3c5db') BETWEEN ((rt0.c3 IN ())) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c2, ((rt0.c3)<<(rt0.c4)), ((rt0.c1)!=(rt0.c4))))>((CASE WHEN rt0.c0 THEN 0.2739469967402709 END, ABS(DISTINCT NULL), ((((rt0.c0)AND(x'')))AND(rt0.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'05a3c5db') BETWEEN ((rt0.c3 IN ())) AND (TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, ((rt0.c3)<<(rt0.c4)), ((rt0.c1)!=(rt0.c4))))>((CASE WHEN rt0.c0 THEN 0.2739469967402709 END, ABS(DISTINCT NULL), ((((rt0.c0)AND(x'')))AND(rt0.c4)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'05a3c5db') BETWEEN ((rt0.c3 IN ())) AND (TRIM(rt0.c3)))) ORDER BY (((rt0.c2, ((rt0.c3)<<(rt0.c4)), ((rt0.c1)!=(rt0.c4))))>((CASE WHEN rt0.c0 THEN 0.2739469967402709 END, ABS(DISTINCT NULL), ((((rt0.c0)AND(x'')))AND(rt0.c4)))))  NULLS FIRST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt1.c1 END IN ()) WHERE ('780151034');
SELECT SUM(count) FROM (SELECT (('780151034') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt1.c1 END IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt1.c1 END IN ()) WHERE ('780151034');
SELECT SUM(count) FROM (SELECT (('780151034') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt1.c1 END IN ()));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON '' CROSS JOIN vt0 ON (CASE WHEN rt0.c2 THEN rt1.c1 END IN ()) WHERE ('780151034');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY rtreenode(x'', rt0.c2) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(x'', rt0.c2) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY rtreenode(x'', rt0.c2) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(x'', rt0.c2) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4) IS FALSE) IN ())) ORDER BY rtreenode(x'', rt0.c2) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((vt0.c1 IN ()))=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))==((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((vt0.c1 IN ()))=((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))==((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE ((((vt0.c1 IN ()))=((NULL IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.28202534173739935);
SELECT SUM(count) FROM (SELECT ALL ((0.28202534173739935) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.28202534173739935);
SELECT SUM(count) FROM (SELECT ALL ((0.28202534173739935) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0.28202534173739935);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>=(((((vt0.c0))<=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))>=(((((vt0.c0))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>=(((((vt0.c0))<=((vt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 COLLATE NOCASE))>=(((((vt0.c0))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE))>=(((((vt0.c0))<=((vt0.c1)))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY CAST((rt0.c1 IN ()) AS BLOB), ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS BLOB), ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c3)) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY CAST((rt0.c1 IN ()) AS BLOB), ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c4 AS TEXT)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((rt0.c1 IN ()) AS BLOB), ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c3)) DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(rt0.c4 AS TEXT)) ORDER BY CAST((rt0.c1 IN ()) AS BLOB), ((((((rt0.c3)AND(rt1.c2)))AND(rt0.c4)))AND(rt0.c3)) DESC;
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((0.2820721499784612)IS NOT(x''))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((0.2820721499784612)IS NOT(x''))) IS FALSE) ASC);
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((0.2820721499784612)IS NOT(x''))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((0.2820721499784612)IS NOT(x''))) IS FALSE) ASC);
SELECT * FROM rt1, rt0 WHERE (rt1.c0) ORDER BY ((((0.2820721499784612)IS NOT(x''))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((rt1.c2 IN ()) AS NUMERIC));
SELECT * FROM rt0, vt0 CROSS JOIN rt1 ON NULL WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(load_extension(rt1.c1, rt1.c0))))AND((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(load_extension(rt1.c1, rt1.c0))))AND((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM rt0, vt0 CROSS JOIN rt1 ON NULL WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(load_extension(rt1.c1, rt1.c0))))AND((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(load_extension(rt1.c1, rt1.c0))))AND((~ (rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM rt0, vt0 CROSS JOIN rt1 ON NULL WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(load_extension(rt1.c1, rt1.c0))))AND((~ (rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)%('')) AS REAL)) ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)%('')) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)%('')) AS REAL)) ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)%('')) AS REAL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST(((rt1.c2)%('')) AS REAL)) ORDER BY ((((((((((rt1.c2)OR(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN TRIM(vt0.c1) THEN vt0.c0 ELSE ((vt0.c0)GLOB(-1569475556)) END) ORDER BY ((((vt0.c1)!=(vt0.c0)))>((((vt0.c1))<>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN ())  WHEN TRIM(vt0.c1) THEN vt0.c0 ELSE ((vt0.c0)GLOB(-1569475556)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<>(vt0.c0)))>((((vt0.c1))!=((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN TRIM(vt0.c1) THEN vt0.c0 ELSE ((vt0.c0)GLOB(-1569475556)) END) ORDER BY ((((vt0.c1)!=(vt0.c0)))>((((vt0.c1))<>((vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN ())  WHEN TRIM(vt0.c1) THEN vt0.c0 ELSE ((vt0.c0)GLOB(-1569475556)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<>(vt0.c0)))>((((vt0.c1))!=((vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN TRIM(vt0.c1) THEN vt0.c0 ELSE ((vt0.c0)GLOB(-1569475556)) END) ORDER BY ((((vt0.c1)!=(vt0.c0)))>((((vt0.c1))<>((vt0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2 COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (0.32510834052089455) ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c1 END THEN rt1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((0.32510834052089455) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c1 END THEN rt1.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (0.32510834052089455) ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c1 END THEN rt1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((0.32510834052089455) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c1 END THEN rt1.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (0.32510834052089455) ORDER BY CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 ELSE vt0.c1 END THEN rt1.c0 COLLATE RTRIM END ASC;
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c4)))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((('kTuQvvﯴ')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c4) IS TRUE) WHERE ((~ (((rt1.c1) ISNULL)))) ORDER BY (((rt1.c0, vt0.c1, rt1.c0)) BETWEEN ((((rt0.c1)IS NOT(vt0.c1)), (((rt0.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c3))), ((rt1.c2)IS(rt0.c1)))) AND ((((rt0.c4)<<(144118242)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), INSTR(rt1.c0, x'8769')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c4)))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((('kTuQvvﯴ')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c4) IS TRUE) ORDER BY (((rt1.c0, vt0.c1, rt1.c0)) BETWEEN ((((rt0.c1)IS NOT(vt0.c1)), (((rt0.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c3))), ((rt1.c2)IS(rt0.c1)))) AND ((((rt0.c4)<<(144118242)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), INSTR(rt1.c0, x'8769')))) ASC  NULLS LAST);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c4)))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((('kTuQvvﯴ')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c4) IS TRUE) WHERE ((~ (((rt1.c1) ISNULL)))) ORDER BY (((rt1.c0, vt0.c1, rt1.c0)) BETWEEN ((((rt0.c1)IS NOT(vt0.c1)), (((rt0.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c3))), ((rt1.c2)IS(rt0.c1)))) AND ((((rt0.c4)<<(144118242)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), INSTR(rt1.c0, x'8769')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c4)))AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(((('kTuQvvﯴ')) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1))))))AND(((((vt0.c1)AND(rt0.c2)))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c4) IS TRUE) ORDER BY (((rt1.c0, vt0.c1, rt1.c0)) BETWEEN ((((rt0.c1)IS NOT(vt0.c1)), (((rt0.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c0, rt0.c3))), ((rt1.c2)IS(rt0.c1)))) AND ((((rt0.c4)<<(144118242)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1)), INSTR(rt1.c0, x'8769')))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((~ ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 CROSS JOIN rt1 ON ((((vt0.c0) IS TRUE))<<(2041698675)) WHERE (vt0.c0) ORDER BY CASE rt0.c4  WHEN NULL THEN 0.960263627754787 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 CROSS JOIN rt1 ON ((((vt0.c0) IS TRUE))<<(2041698675)) ORDER BY CASE rt0.c4  WHEN NULL THEN 0.960263627754787 END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 CROSS JOIN rt1 ON ((((vt0.c0) IS TRUE))<<(2041698675)) WHERE (vt0.c0) ORDER BY CASE rt0.c4  WHEN NULL THEN 0.960263627754787 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 CROSS JOIN rt1 ON ((((vt0.c0) IS TRUE))<<(2041698675)) ORDER BY CASE rt0.c4  WHEN NULL THEN 0.960263627754787 END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 CROSS JOIN rt1 ON ((((vt0.c0) IS TRUE))<<(2041698675)) WHERE (vt0.c0) ORDER BY CASE rt0.c4  WHEN NULL THEN 0.960263627754787 END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON NULL COLLATE NOCASE INNER JOIN rt0 ON ((UPPER(vt0.c0))|((NULL IN ()))) WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (((('0.9859764505373366')OR(rt0.c1)))OR(rt1.c0)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN (~ (rt0.c1)) THEN json_valid(rt0.c3) WHEN ((rt0.c0) NOT NULL) THEN (+ (0x1364b714)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (((('0.9859764505373366')OR(rt0.c1)))OR(rt1.c0)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN (~ (rt0.c1)) THEN json_valid(rt0.c3) WHEN ((rt0.c0) NOT NULL) THEN (+ (0x1364b714)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON NULL COLLATE NOCASE INNER JOIN rt0 ON ((UPPER(vt0.c0))|((NULL IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON NULL COLLATE NOCASE INNER JOIN rt0 ON ((UPPER(vt0.c0))|((NULL IN ()))) WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (((('0.9859764505373366')OR(rt0.c1)))OR(rt1.c0)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN (~ (rt0.c1)) THEN json_valid(rt0.c3) WHEN ((rt0.c0) NOT NULL) THEN (+ (0x1364b714)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (((('0.9859764505373366')OR(rt0.c1)))OR(rt1.c0)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN (~ (rt0.c1)) THEN json_valid(rt0.c3) WHEN ((rt0.c0) NOT NULL) THEN (+ (0x1364b714)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON NULL COLLATE NOCASE INNER JOIN rt0 ON ((UPPER(vt0.c0))|((NULL IN ()))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON NULL COLLATE NOCASE INNER JOIN rt0 ON ((UPPER(vt0.c0))|((NULL IN ()))) WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))  WHEN (((('0.9859764505373366')OR(rt0.c1)))OR(rt1.c0)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN (~ (rt0.c1)) THEN json_valid(rt0.c3) WHEN ((rt0.c0) NOT NULL) THEN (+ (0x1364b714)) END);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0, rt0.c1, rt0.c3))<((rt0.c2, rt0.c2, rt0.c1))))<(((NULL)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, rt0.c1, rt0.c3))<((rt0.c2, rt0.c2, rt0.c1))))<(((NULL)||(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0, rt0.c1, rt0.c3))<((rt0.c2, rt0.c2, rt0.c1))))<(((NULL)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0, rt0.c1, rt0.c3))<((rt0.c2, rt0.c2, rt0.c1))))<(((NULL)||(rt0.c0))))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE ((((((rt1.c0, rt0.c1, rt0.c3))<((rt0.c2, rt0.c2, rt0.c1))))<(((NULL)||(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c2)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR(0.5607215219514425 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR(0.5607215219514425 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c2)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR(0.5607215219514425 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR(0.5607215219514425 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 NOT INDEXED WHERE (((((rt0.c2)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)))))OR(0.5607215219514425 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)>=((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)>=((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)>=((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)>=((((vt0.c0, vt0.c1, vt0.c1))==((vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)>=((((vt0.c0, vt0.c1, vt0.c1))=((vt0.c1, vt0.c0, vt0.c1))))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST('g媲' AS INTEGER)) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST('g媲' AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST('g媲' AS INTEGER)) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST('g媲' AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST('g媲' AS INTEGER)) ORDER BY rt1.c1;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT ALL * FROM rt0, rt1 WHERE (((((((-2.18375756E8)AND(rt0.c1)))AND(rt0.c1)))!=(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((((-2.18375756E8)AND(rt0.c1)))AND(rt0.c1)))!=(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((-2.18375756E8)AND(rt0.c1)))AND(rt0.c1)))!=(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((((-2.18375756E8)AND(rt0.c1)))AND(rt0.c1)))!=(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((-2.18375756E8)AND(rt0.c1)))AND(rt0.c1)))!=(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('e)VOd');
SELECT SUM(count) FROM (SELECT (('e)VOd') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('e)VOd');
SELECT SUM(count) FROM (SELECT (('e)VOd') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('e)VOd');
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((vt0.c1)AND(rt1.c0))))) ORDER BY CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN rt1.c1 END THEN vt0.c0 ELSE ((rt1.c2)/(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((vt0.c1)AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN rt1.c1 END THEN vt0.c0 ELSE ((rt1.c2)/(rt1.c2)) END ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((vt0.c1)AND(rt1.c0))))) ORDER BY CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN rt1.c1 END THEN vt0.c0 ELSE ((rt1.c2)/(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((vt0.c1)AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN rt1.c1 END THEN vt0.c0 ELSE ((rt1.c2)/(rt1.c2)) END ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c1) IS FALSE)) BETWEEN (rt1.c0) AND (((vt0.c1)AND(rt1.c0))))) ORDER BY CASE vt0.c1  WHEN CASE WHEN vt0.c0 THEN rt1.c1 END THEN vt0.c0 ELSE ((rt1.c2)/(rt1.c2)) END ASC;
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (TRIM(DISTINCT (NOT (rt0.c1)), CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (rt0.c1)), CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (TRIM(DISTINCT (NOT (rt0.c1)), CAST(vt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (rt0.c1)), CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (TRIM(DISTINCT (NOT (rt0.c1)), CAST(vt0.c1 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt1, vt0, rt0 NOT INDEXED ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt1, vt0, rt0 NOT INDEXED ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY CAST(((rt1.c1)>>(rt1.c2)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE NULL  WHEN NULL THEN ((((((((rt1.c1)AND(rt0.c3)))OR(-1.71393876E9)))OR(rt0.c2)))OR(rt0.c1)) WHEN LOWER(rt1.c2) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c1 THEN ((rt0.c3)/(rt0.c2)) END DESC  NULLS LAST, (((+ (rt0.c0)))+(CAST(rt0.c4 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE NULL  WHEN NULL THEN ((((((((rt1.c1)AND(rt0.c3)))OR(-1.71393876E9)))OR(rt0.c2)))OR(rt0.c1)) WHEN LOWER(rt1.c2) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c1 THEN ((rt0.c3)/(rt0.c2)) END DESC  NULLS LAST, (((+ (rt0.c0)))+(CAST(rt0.c4 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE NULL  WHEN NULL THEN ((((((((rt1.c1)AND(rt0.c3)))OR(-1.71393876E9)))OR(rt0.c2)))OR(rt0.c1)) WHEN LOWER(rt1.c2) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c1 THEN ((rt0.c3)/(rt0.c2)) END DESC  NULLS LAST, (((+ (rt0.c0)))+(CAST(rt0.c4 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE NULL  WHEN NULL THEN ((((((((rt1.c1)AND(rt0.c3)))OR(-1.71393876E9)))OR(rt0.c2)))OR(rt0.c1)) WHEN LOWER(rt1.c2) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c1 THEN ((rt0.c3)/(rt0.c2)) END DESC  NULLS LAST, (((+ (rt0.c0)))+(CAST(rt0.c4 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (NULL) ORDER BY CASE NULL  WHEN NULL THEN ((((((((rt1.c1)AND(rt0.c3)))OR(-1.71393876E9)))OR(rt0.c2)))OR(rt0.c1)) WHEN LOWER(rt1.c2) THEN CAST(rt1.c1 AS TEXT) WHEN rt0.c1 THEN ((rt0.c3)/(rt0.c2)) END DESC  NULLS LAST, (((+ (rt0.c0)))+(CAST(rt0.c4 AS TEXT))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1, rt0 WHERE ('-367397193') ORDER BY (((rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((NOT (rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (('-367397193') IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((NOT (rt1.c2))))) DESC);
SELECT * FROM vt0, rt1, rt0 WHERE ('-367397193') ORDER BY (((rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((NOT (rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (('-367397193') IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((NOT (rt1.c2))))) DESC);
SELECT * FROM vt0, rt1, rt0 WHERE ('-367397193') ORDER BY (((rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND (((NOT (rt1.c2))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c4 COLLATE BINARY, LIKELY(rt0.c2), rt0.c4 COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((rt0.c0)||(rt0.c1))))<=((rt0.c3, '1994609153', ((rt0.c4)||(rt0.c4)), json_array(rt0.c4, rt0.c4), rt0.c3 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 COLLATE BINARY, LIKELY(rt0.c2), rt0.c4 COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((rt0.c0)||(rt0.c1))))<=((rt0.c3, '1994609153', ((rt0.c4)||(rt0.c4)), json_array(rt0.c4, rt0.c4), rt0.c3 COLLATE NOCASE))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c4 COLLATE BINARY, LIKELY(rt0.c2), rt0.c4 COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((rt0.c0)||(rt0.c1))))<=((rt0.c3, '1994609153', ((rt0.c4)||(rt0.c4)), json_array(rt0.c4, rt0.c4), rt0.c3 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 COLLATE BINARY, LIKELY(rt0.c2), rt0.c4 COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((rt0.c0)||(rt0.c1))))<=((rt0.c3, '1994609153', ((rt0.c4)||(rt0.c4)), json_array(rt0.c4, rt0.c4), rt0.c3 COLLATE NOCASE))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c4 COLLATE BINARY, LIKELY(rt0.c2), rt0.c4 COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))), ((rt0.c0)||(rt0.c1))))<=((rt0.c3, '1994609153', ((rt0.c4)||(rt0.c4)), json_array(rt0.c4, rt0.c4), rt0.c3 COLLATE NOCASE))) ASC;
SELECT * FROM rt0, vt0 INNER JOIN rt1 ON CASE CASE WHEN rt0.c4 THEN rt0.c3 END  WHEN (((rt1.c2, rt0.c4, '-1095879545', rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2, x'', rt1.c1)) AND ((rt1.c2, rt0.c1, rt0.c1, vt0.c0, rt1.c2))) THEN ((0.9274157839374237)>(rt1.c0)) WHEN (+ (rt1.c2)) THEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 END WHEN 1.11778336E8 THEN IFNULL(vt0.c1, rt1.c1) ELSE (NOT (rt0.c0)) END WHERE (rt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, CAST(COALESCE(DISTINCT rt0.c4, rt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON CASE CASE WHEN rt0.c4 THEN rt0.c3 END  WHEN (((rt1.c2, rt0.c4, '-1095879545', rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2, x'', rt1.c1)) AND ((rt1.c2, rt0.c1, rt0.c1, vt0.c0, rt1.c2))) THEN ((0.9274157839374237)>(rt1.c0)) WHEN (+ (rt1.c2)) THEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 END WHEN 1.11778336E8 THEN IFNULL(vt0.c1, rt1.c1) ELSE (NOT (rt0.c0)) END ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, CAST(COALESCE(DISTINCT rt0.c4, rt0.c2) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 INNER JOIN rt1 ON CASE CASE WHEN rt0.c4 THEN rt0.c3 END  WHEN (((rt1.c2, rt0.c4, '-1095879545', rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2, x'', rt1.c1)) AND ((rt1.c2, rt0.c1, rt0.c1, vt0.c0, rt1.c2))) THEN ((0.9274157839374237)>(rt1.c0)) WHEN (+ (rt1.c2)) THEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 END WHEN 1.11778336E8 THEN IFNULL(vt0.c1, rt1.c1) ELSE (NOT (rt0.c0)) END WHERE (rt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, CAST(COALESCE(DISTINCT rt0.c4, rt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON CASE CASE WHEN rt0.c4 THEN rt0.c3 END  WHEN (((rt1.c2, rt0.c4, '-1095879545', rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2, x'', rt1.c1)) AND ((rt1.c2, rt0.c1, rt0.c1, vt0.c0, rt1.c2))) THEN ((0.9274157839374237)>(rt1.c0)) WHEN (+ (rt1.c2)) THEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 END WHEN 1.11778336E8 THEN IFNULL(vt0.c1, rt1.c1) ELSE (NOT (rt0.c0)) END ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, CAST(COALESCE(DISTINCT rt0.c4, rt0.c2) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 INNER JOIN rt1 ON CASE CASE WHEN rt0.c4 THEN rt0.c3 END  WHEN (((rt1.c2, rt0.c4, '-1095879545', rt0.c1, rt1.c1)) NOT BETWEEN ((rt0.c4, vt0.c1, rt0.c2, x'', rt1.c1)) AND ((rt1.c2, rt0.c1, rt0.c1, vt0.c0, rt1.c2))) THEN ((0.9274157839374237)>(rt1.c0)) WHEN (+ (rt1.c2)) THEN CASE rt0.c4  WHEN rt1.c2 THEN rt0.c0 END WHEN 1.11778336E8 THEN IFNULL(vt0.c1, rt1.c1) ELSE (NOT (rt0.c0)) END WHERE (rt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt1.c1 AS NUMERIC))) AND ((((rt0.c3)<<(rt0.c1)))))  NULLS FIRST, CAST(COALESCE(DISTINCT rt0.c4, rt0.c2) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)|(rt0.c3)))OR(((((((((x'')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)|(rt0.c3)))OR(((((((((x'')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)|(rt0.c3)))OR(((((((((x'')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)|(rt0.c3)))OR(((((((((x'')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c4)|(rt0.c3)))OR(((((((((x'')AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))))OR(CAST(rt0.c3 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (vt0.c1 IN (rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END THEN (vt0.c0 IN ()) WHEN (-1783390050 IN ()) THEN ((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN vt0.c1 THEN ((rt0.c0)<>(vt0.c0)) ELSE (('KZ')LIKE(rt0.c0)) END) ORDER BY CAST(((vt0.c1) IS FALSE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN (rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END THEN (vt0.c0 IN ()) WHEN (-1783390050 IN ()) THEN ((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN vt0.c1 THEN ((rt0.c0)!=(vt0.c0)) ELSE (('KZ')LIKE(rt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY CAST(((vt0.c1) IS FALSE) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (vt0.c1 IN (rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END THEN (vt0.c0 IN ()) WHEN (-1783390050 IN ()) THEN ((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN vt0.c1 THEN ((rt0.c0)<>(vt0.c0)) ELSE (('KZ')LIKE(rt0.c0)) END) ORDER BY CAST(((vt0.c1) IS FALSE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN (rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END THEN (vt0.c0 IN ()) WHEN (-1783390050 IN ()) THEN ((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN vt0.c1 THEN ((rt0.c0)!=(vt0.c0)) ELSE (('KZ')LIKE(rt0.c0)) END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY CAST(((vt0.c1) IS FALSE) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (vt0.c1 IN (rt0.c2))  WHEN CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END THEN (vt0.c0 IN ()) WHEN (-1783390050 IN ()) THEN ((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) WHEN vt0.c1 THEN ((rt0.c0)<>(vt0.c0)) ELSE (('KZ')LIKE(rt0.c0)) END) ORDER BY CAST(((vt0.c1) IS FALSE) AS REAL);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))<<(((rt0.c0)&(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))<<(((rt0.c0)&(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))<<(((rt0.c0)&(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))<<(((rt0.c0)&(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1))))<<(((rt0.c0)&(rt0.c4)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-382219890')<<((((rt0.c4)) BETWEEN ((rt1.c0)) AND ((x'967d'))))));
SELECT SUM(count) FROM (SELECT ALL (((('-382219890')<<((((rt0.c4)) BETWEEN ((rt1.c0)) AND ((x'967d')))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-382219890')<<((((rt0.c4)) BETWEEN ((rt1.c0)) AND ((x'967d'))))));
SELECT SUM(count) FROM (SELECT ALL (((('-382219890')<<((((rt0.c4)) BETWEEN ((rt1.c0)) AND ((x'967d')))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-382219890')<<((((rt0.c4)) BETWEEN ((rt1.c0)) AND ((x'967d'))))));
SELECT * FROM rt1, vt0 WHERE ((NOT ((rt1.c2 IN ())))) ORDER BY UNLIKELY((vt0.c0 IN ()))  NULLS LAST, (((('229980326') BETWEEN (vt0.c0) AND (vt0.c1)))<(((rt1.c1)>(vt0.c0)))), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY((vt0.c0 IN ()))  NULLS LAST, (((('229980326') BETWEEN (vt0.c0) AND (vt0.c1)))<(((rt1.c1)>(vt0.c0)))), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((NOT ((rt1.c2 IN ())))) ORDER BY UNLIKELY((vt0.c0 IN ()))  NULLS LAST, (((('229980326') BETWEEN (vt0.c0) AND (vt0.c1)))<(((rt1.c1)>(vt0.c0)))), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1, vt0 ORDER BY UNLIKELY((vt0.c0 IN ()))  NULLS LAST, (((('229980326') BETWEEN (vt0.c0) AND (vt0.c1)))<(((rt1.c1)>(vt0.c0)))), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((NOT ((rt1.c2 IN ())))) ORDER BY UNLIKELY((vt0.c0 IN ()))  NULLS LAST, (((('229980326') BETWEEN (vt0.c0) AND (vt0.c1)))<(((rt1.c1)>(vt0.c0)))), (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c4) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(rt0.c2, rt0.c4) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c4) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(rt0.c2, rt0.c4) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (CAST(json_patch(rt0.c2, rt0.c4) AS INTEGER));
SELECT * FROM rt1, rt0 WHERE (load_extension(rt1.c1, ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) ORDER BY CASE (- (NULL))  WHEN (((rt0.c3, rt0.c4, rt0.c3))<((rt0.c3, rt0.c4, rt1.c0))) THEN rt1.c1 WHEN rt0.c2 THEN ((rt0.c0)<<(rt0.c4)) WHEN ((rt0.c1)IS NOT(rt1.c0)) THEN ((rt1.c0)>>(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c1, ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE (- (NULL))  WHEN (((rt0.c3, rt0.c4, rt0.c3))<((rt0.c3, rt0.c4, rt1.c0))) THEN rt1.c1 WHEN rt0.c2 THEN ((rt0.c0)<<(rt0.c4)) WHEN ((rt0.c1)IS NOT(rt1.c0)) THEN ((rt1.c0)>>(rt1.c2)) END);
SELECT * FROM rt1, rt0 WHERE (load_extension(rt1.c1, ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) ORDER BY CASE (- (NULL))  WHEN (((rt0.c3, rt0.c4, rt0.c3))<((rt0.c3, rt0.c4, rt1.c0))) THEN rt1.c1 WHEN rt0.c2 THEN ((rt0.c0)<<(rt0.c4)) WHEN ((rt0.c1)IS NOT(rt1.c0)) THEN ((rt1.c0)>>(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt1.c1, ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE (- (NULL))  WHEN (((rt0.c3, rt0.c4, rt0.c3))<((rt0.c3, rt0.c4, rt1.c0))) THEN rt1.c1 WHEN rt0.c2 THEN ((rt0.c0)<<(rt0.c4)) WHEN ((rt0.c1)IS NOT(rt1.c0)) THEN ((rt1.c0)>>(rt1.c2)) END);
SELECT * FROM rt1, rt0 WHERE (load_extension(rt1.c1, ((rt0.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))) ORDER BY CASE (- (NULL))  WHEN (((rt0.c3, rt0.c4, rt0.c3))<((rt0.c3, rt0.c4, rt1.c0))) THEN rt1.c1 WHEN rt0.c2 THEN ((rt0.c0)<<(rt0.c4)) WHEN ((rt0.c1)IS NOT(rt1.c0)) THEN ((rt1.c0)>>(rt1.c2)) END;
SELECT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT COUNT(*) FROM rt1 WHERE (HEX((rt1.c1 IN ()))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c1 IN ()))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (HEX((rt1.c1 IN ()))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt1.c1 IN ()))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT COUNT(*) FROM rt1 WHERE (HEX((rt1.c1 IN ()))) ORDER BY rt1.c2 ASC;
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, rt1 WHERE ((- (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, rt1 WHERE ((- (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED, rt1 WHERE ((- (rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND ((((rt1.c0))>=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND ((((rt1.c0))>=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND ((((rt1.c0))>=((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND ((((rt1.c0))>=((rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c1)))AND(rt1.c2))) NOT BETWEEN (rt1.c1) AND ((((rt1.c0))>=((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM vt0 WHERE ('-1445374769') ORDER BY CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) END ASC, CAST(0.35732946389617326 AS INTEGER) ASC, CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (('-1445374769') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) END ASC, CAST(0.35732946389617326 AS INTEGER) ASC, CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ('-1445374769') ORDER BY CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) END ASC, CAST(0.35732946389617326 AS INTEGER) ASC, CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (('-1445374769') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) END ASC, CAST(0.35732946389617326 AS INTEGER) ASC, CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ('-1445374769') ORDER BY CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) END ASC, CAST(0.35732946389617326 AS INTEGER) ASC, CAST(vt0.c1 AS BLOB) COLLATE RTRIM;
SELECT * FROM rt0 CROSS JOIN vt0 ON 0Xb1013e2 INNER JOIN rt1 ON ((((vt0.c1 COLLATE NOCASE)AND(ABS(rt1.c0))))AND(rt1.c1)) WHERE ((((((rt0.c4, rt1.c2, rt1.c1, rt1.c1, rt0.c0))<=((rt0.c0, rt1.c1, rt0.c2, rt1.c2, '')))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) AND (((rt0.c3)<<(rt0.c2))))) ORDER BY (((rt1.c1) BETWEEN (rt0.c4) AND (vt0.c1)) IN ())  NULLS LAST, (((((((x''))<((''))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt1.c2, rt1.c1, rt1.c1, rt0.c0))<=((rt0.c0, rt1.c1, rt0.c2, rt1.c2, '')))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) AND (((rt0.c3)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0Xb1013e2 INNER JOIN rt1 ON ((((vt0.c1 COLLATE NOCASE)AND(ABS(rt1.c0))))AND(rt1.c1)) ORDER BY (((rt1.c1) BETWEEN (rt0.c4) AND (vt0.c1)) IN ())  NULLS LAST, (((((((x''))<((''))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON 0Xb1013e2 INNER JOIN rt1 ON ((((vt0.c1 COLLATE NOCASE)AND(ABS(rt1.c0))))AND(rt1.c1)) WHERE ((((((rt0.c4, rt1.c2, rt1.c1, rt1.c1, rt0.c0))<=((rt0.c0, rt1.c1, rt0.c2, rt1.c2, '')))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) AND (((rt0.c3)<<(rt0.c2))))) ORDER BY (((rt1.c1) BETWEEN (rt0.c4) AND (vt0.c1)) IN ())  NULLS LAST, (((((((x''))<((''))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt1.c2, rt1.c1, rt1.c1, rt0.c0))<=((rt0.c0, rt1.c1, rt0.c2, rt1.c2, '')))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) AND (((rt0.c3)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0Xb1013e2 INNER JOIN rt1 ON ((((vt0.c1 COLLATE NOCASE)AND(ABS(rt1.c0))))AND(rt1.c1)) ORDER BY (((rt1.c1) BETWEEN (rt0.c4) AND (vt0.c1)) IN ())  NULLS LAST, (((((((x''))<((''))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON 0Xb1013e2 INNER JOIN rt1 ON ((((vt0.c1 COLLATE NOCASE)AND(ABS(rt1.c0))))AND(rt1.c1)) WHERE ((((((rt0.c4, rt1.c2, rt1.c1, rt1.c1, rt0.c0))<=((rt0.c0, rt1.c1, rt0.c2, rt1.c2, '')))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt1.c1))) AND (((rt0.c3)<<(rt0.c2))))) ORDER BY (((rt1.c1) BETWEEN (rt0.c4) AND (vt0.c1)) IN ())  NULLS LAST, (((((((x''))<((''))))OR(((rt1.c0)IS NOT(rt0.c1)))))AND(rt0.c1)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY (+ (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY (+ (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c0, rt0.c1, vt0.c1)) BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c2, vt0.c1, rt0.c2))) COLLATE NOCASE) ORDER BY (+ (CASE rt0.c3  WHEN rt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.44230813580984185)IS(CASE rt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((rt0.c1 COLLATE NOCASE))) WHERE ((((rt0.c4 COLLATE BINARY))>((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 COLLATE BINARY))>((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0.44230813580984185)IS(CASE rt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((0.44230813580984185)IS(CASE rt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((rt0.c1 COLLATE NOCASE))) WHERE ((((rt0.c4 COLLATE BINARY))>((rt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 COLLATE BINARY))>((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0.44230813580984185)IS(CASE rt1.c0  WHEN vt0.c1 THEN vt0.c1 END)) INNER JOIN rt1 ON (((rt1.c2)) NOT BETWEEN ((CAST(vt0.c1 AS BLOB))) AND ((rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('02') ORDER BY CAST((NOT (rt1.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('02') IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CAST((NOT (rt1.c2)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('02') ORDER BY CAST((NOT (rt1.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('02') IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY CAST((NOT (rt1.c2)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ('02') ORDER BY CAST((NOT (rt1.c2)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY x'384a' ASC  NULLS LAST, CASE ((rt0.c1)=(rt0.c4))  WHEN NULL THEN rt0.c4 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY x'384a' ASC  NULLS LAST, CASE ((rt0.c1)==(rt0.c4))  WHEN NULL THEN rt0.c4 END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY x'384a' ASC  NULLS LAST, CASE ((rt0.c1)=(rt0.c4))  WHEN NULL THEN rt0.c4 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY x'384a' ASC  NULLS LAST, CASE ((rt0.c1)==(rt0.c4))  WHEN NULL THEN rt0.c4 END DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY x'384a' ASC  NULLS LAST, CASE ((rt0.c1)=(rt0.c4))  WHEN NULL THEN rt0.c4 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))GLOB((NOT (rt1.c0))))) ORDER BY ((rt1.c2)>(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c1)))GLOB((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))GLOB((NOT (rt1.c0))))) ORDER BY ((rt1.c2)>(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<(rt1.c1)))GLOB((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)<(rt1.c1)))GLOB((NOT (rt1.c0))))) ORDER BY ((rt1.c2)>(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt1.c1 IN ()))GLOB(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))GLOB(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt1.c1 IN ()))GLOB(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))GLOB(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE ((((rt1.c1 IN ()))GLOB(((rt0.c0)>=(rt0.c1)))));
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT * FROM rt1 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (('1980997411')*(rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0)/(rt1.c2)) THEN ((rt1.c2)>>(rt1.c0)) WHEN rt1.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN (('1980997411')*(rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0)/(rt1.c2)) THEN ((rt1.c2)>>(rt1.c0)) WHEN rt1.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (('1980997411')*(rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0)/(rt1.c2)) THEN ((rt1.c2)>>(rt1.c0)) WHEN rt1.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN (('1980997411')*(rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0)/(rt1.c2)) THEN ((rt1.c2)>>(rt1.c0)) WHEN rt1.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c0  WHEN (('1980997411')*(rt1.c2)) THEN (rt1.c0 IN ()) WHEN ((rt1.c0)/(rt1.c2)) THEN ((rt1.c2)>>(rt1.c0)) WHEN rt1.c2 COLLATE RTRIM THEN (rt1.c1 IN ()) END);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS TEXT));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((- (rt0.c0)))) WHERE (rt0.c1) ORDER BY ((((rt1.c0)<(rt0.c4)))&((rt1.c0 IN ())))  NULLS LAST, ((((((rt1.c0)AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1) ISNULL))<>(((rt1.c0)<=(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((- (rt0.c0)))) ORDER BY ((((rt1.c0)<(rt0.c4)))&((rt1.c0 IN ())))  NULLS LAST, ((((((rt1.c0)AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1) ISNULL))!=(((rt1.c0)<=(rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((- (rt0.c0)))) WHERE (rt0.c1) ORDER BY ((((rt1.c0)<(rt0.c4)))&((rt1.c0 IN ())))  NULLS LAST, ((((((rt1.c0)AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1) ISNULL))<>(((rt1.c0)<=(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((- (rt0.c0)))) ORDER BY ((((rt1.c0)<(rt0.c4)))&((rt1.c0 IN ())))  NULLS LAST, ((((((rt1.c0)AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1) ISNULL))!=(((rt1.c0)<=(rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (~ ((- (rt0.c0)))) WHERE (rt0.c1) ORDER BY ((((rt1.c0)<(rt0.c4)))&((rt1.c0 IN ())))  NULLS LAST, ((((((rt1.c0)AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) IS TRUE)) AND ((rt1.c0 IN (rt1.c0, rt1.c0)))) ASC  NULLS LAST, ((((rt1.c1) ISNULL))<>(((rt1.c0)<=(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (((((vt0.c0)|(rt0.c0))))<>(((- (rt0.c0))))) WHERE ((~ (((rt0.c4)<>(rt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4)<>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (((((vt0.c0)|(rt0.c0))))!=(((- (rt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END IN ()) DESC);
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (((((vt0.c0)|(rt0.c0))))<>(((- (rt0.c0))))) WHERE ((~ (((rt0.c4)<>(rt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c4)<>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN rt1 ON (((((vt0.c0)|(rt0.c0))))!=(((- (rt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END IN ()) DESC);
SELECT ALL * FROM rt0, vt0 INNER JOIN rt1 ON (((((vt0.c0)|(rt0.c0))))<>(((- (rt0.c0))))) WHERE ((~ (((rt0.c4)<>(rt0.c0))))) ORDER BY (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt1.c0 END IN ()) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR('wX'))) ORDER BY (((((vt0.c0)/(vt0.c0))))>(((+ (vt0.c0)))))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR('wX'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(vt0.c0))))>(((+ (vt0.c0)))))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR('wX'))) ORDER BY (((((vt0.c0)/(vt0.c0))))>(((+ (vt0.c0)))))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR('wX'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/(vt0.c0))))>(((+ (vt0.c0)))))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(vt0.c1 COLLATE RTRIM)))OR('wX'))) ORDER BY (((((vt0.c0)/(vt0.c0))))>(((+ (vt0.c0)))))  NULLS LAST, (CAST(vt0.c0 AS NUMERIC) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)==(rt1.c2)))OR(rt1.c2)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)==(rt1.c2)))OR(rt1.c2)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)==(rt1.c2)))OR(rt1.c2)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)==(rt1.c2)))OR(rt1.c2)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c0)==(rt1.c2)))OR(rt1.c2)))AND(((((rt1.c2)OR(rt1.c0)))AND(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c0))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c0))) THEN rt1.c2 ELSE json_object(rt1.c1, rt1.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c0))) THEN rt1.c2 ELSE json_object(rt1.c1, rt1.c2) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c0))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c0))) THEN rt1.c2 ELSE json_object(rt1.c1, rt1.c2) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c0))) THEN rt1.c2 ELSE json_object(rt1.c1, rt1.c2) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c0))) ORDER BY CASE WHEN (((rt1.c0))>=((rt1.c0))) THEN rt1.c2 ELSE json_object(rt1.c1, rt1.c2) END ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c0)AND(0x32080c73)))AND(rt0.c2)) THEN (vt0.c1 IN (rt0.c1, rt0.c0)) ELSE (- (rt0.c4)) END) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(0x32080c73)))AND(rt0.c2)) THEN (vt0.c1 IN (rt0.c1, rt0.c0)) ELSE (- (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c3)) COLLATE NOCASE COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c0)AND(0x32080c73)))AND(rt0.c2)) THEN (vt0.c1 IN (rt0.c1, rt0.c0)) ELSE (- (rt0.c4)) END) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(0x32080c73)))AND(rt0.c2)) THEN (vt0.c1 IN (rt0.c1, rt0.c0)) ELSE (- (rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (rt0.c3)) COLLATE NOCASE COLLATE BINARY ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((((rt0.c0)AND(0x32080c73)))AND(rt0.c2)) THEN (vt0.c1 IN (rt0.c1, rt0.c0)) ELSE (- (rt0.c4)) END) ORDER BY (NOT (rt0.c3)) COLLATE NOCASE COLLATE BINARY ASC;
SELECT * FROM rt1, rt0 WHERE ('622071287');
SELECT SUM(count) FROM (SELECT (('622071287') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('622071287');
SELECT SUM(count) FROM (SELECT (('622071287') IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ('622071287');
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)>>(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)>>(vt0.c1)) IN ())) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)IS NOT(vt0.c0)))) AND ((x'')));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))))OR((+ (rt0.c3)))))AND(CAST(rt1.c1 AS BLOB))))AND((rt0.c4 IN (rt0.c4)))))OR(((rt1.c0)&(rt0.c4)))))AND((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c3, '')))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)-(CAST(rt0.c4 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))))OR((+ (rt0.c3)))))AND(CAST(rt1.c1 AS BLOB))))AND((rt0.c4 IN (rt0.c4)))))OR(((rt1.c0)&(rt0.c4)))))AND((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c3, '')))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)-(CAST(rt0.c4 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))))OR((+ (rt0.c3)))))AND(CAST(rt1.c1 AS BLOB))))AND((rt0.c4 IN (rt0.c4)))))OR(((rt1.c0)&(rt0.c4)))))AND((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c3, '')))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)-(CAST(rt0.c4 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))))OR((+ (rt0.c3)))))AND(CAST(rt1.c1 AS BLOB))))AND((rt0.c4 IN (rt0.c4)))))OR(((rt1.c0)&(rt0.c4)))))AND((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c3, '')))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)-(CAST(rt0.c4 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((((((((((((rt1.c0) NOT NULL))OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c4)))))OR((+ (rt0.c3)))))AND(CAST(rt1.c1 AS BLOB))))AND((rt0.c4 IN (rt0.c4)))))OR(((rt1.c0)&(rt0.c4)))))AND((((rt1.c2, rt1.c1, rt0.c0)) BETWEEN ((rt0.c1, rt1.c0, rt0.c0)) AND ((rt0.c0, rt0.c3, '')))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)-(CAST(rt0.c4 AS BLOB))) ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE ((NOT (((vt0.c0)<=(vt0.c0)))));
SELECT * FROM rt0, rt1 WHERE (CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CAST(((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (('') NOTNULL) WHERE ((((4.25113012E8 IN (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((4.25113012E8 IN (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (('') NOTNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (('') NOTNULL) WHERE ((((4.25113012E8 IN (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((4.25113012E8 IN (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (('') NOTNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON (('') NOTNULL) WHERE ((((4.25113012E8 IN (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (- ('0.8548750871951326')) LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (((((0.9409817300543548)=(vt0.c1)))<=(CASE WHEN NULL THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((((0.9409817300543548)=(vt0.c1)))<=(CASE WHEN NULL THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ('0.8548750871951326')) LEFT OUTER JOIN rt1 ON rt1.c2);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (- ('0.8548750871951326')) LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (((((0.9409817300543548)=(vt0.c1)))<=(CASE WHEN NULL THEN rt1.c2 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((((0.9409817300543548)=(vt0.c1)))<=(CASE WHEN NULL THEN rt1.c2 ELSE NULL END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (- ('0.8548750871951326')) LEFT OUTER JOIN rt1 ON rt1.c2);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (- ('0.8548750871951326')) LEFT OUTER JOIN rt1 ON rt1.c2 WHERE (((((0.9409817300543548)=(vt0.c1)))<=(CASE WHEN NULL THEN rt1.c2 ELSE NULL END)));
SELECT ALL * FROM vt0 WHERE (CASE WHEN MIN(vt0.c1, vt0.c0) THEN ((('-1132800082')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (vt0.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c1)<=(vt0.c1)) THEN ((vt0.c1)&(vt0.c0)) END) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN MIN(vt0.c1, vt0.c0) THEN ((('-1132800082')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (vt0.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c1)<=(vt0.c1)) THEN ((vt0.c1)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN MIN(vt0.c1, vt0.c0) THEN ((('-1132800082')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (vt0.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c1)<=(vt0.c1)) THEN ((vt0.c1)&(vt0.c0)) END) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN MIN(vt0.c1, vt0.c0) THEN ((('-1132800082')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (vt0.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c1)<=(vt0.c1)) THEN ((vt0.c1)&(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN MIN(vt0.c1, vt0.c0) THEN ((('-1132800082')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN (vt0.c0 IN ()) THEN vt0.c1 WHEN ((vt0.c1)<=(vt0.c1)) THEN ((vt0.c1)&(vt0.c0)) END) ORDER BY ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt0.c1)GLOB(vt0.c0)), ((vt0.c1) IS TRUE)));
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULL)) ORDER BY load_extension(vt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULL)) ORDER BY load_extension(vt0.c0) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0 ORDER BY load_extension(vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULL)) ORDER BY load_extension(vt0.c0) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c0 END)<<(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c0 END)<<(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c0 END)<<(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c0 END)<<(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE rt0.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt0.c0 END)<<(((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)<(vt0.c1)) AS NUMERIC) WHERE (CAST(0.5735192247053352 AS INTEGER)) ORDER BY CASE CASE WHEN rt0.c0 THEN rt1.c1 END  WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((rt0.c3)|(rt0.c0)) WHEN ((rt0.c0) BETWEEN (0.40156535121037507) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt0.c1 THEN rt0.c0 ELSE (rt1.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(0.5735192247053352 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)<(vt0.c1)) AS NUMERIC) ORDER BY CASE CASE WHEN rt0.c0 THEN rt1.c1 END  WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((rt0.c3)|(rt0.c0)) WHEN ((rt0.c0) BETWEEN (0.40156535121037507) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt0.c1 THEN rt0.c0 ELSE (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)<(vt0.c1)) AS NUMERIC) WHERE (CAST(0.5735192247053352 AS INTEGER)) ORDER BY CASE CASE WHEN rt0.c0 THEN rt1.c1 END  WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((rt0.c3)|(rt0.c0)) WHEN ((rt0.c0) BETWEEN (0.40156535121037507) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt0.c1 THEN rt0.c0 ELSE (rt1.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(0.5735192247053352 AS INTEGER)) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)<(vt0.c1)) AS NUMERIC) ORDER BY CASE CASE WHEN rt0.c0 THEN rt1.c1 END  WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((rt0.c3)|(rt0.c0)) WHEN ((rt0.c0) BETWEEN (0.40156535121037507) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt0.c1 THEN rt0.c0 ELSE (rt1.c1 IN ()) END);
SELECT COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c2)<(vt0.c1)) AS NUMERIC) WHERE (CAST(0.5735192247053352 AS INTEGER)) ORDER BY CASE CASE WHEN rt0.c0 THEN rt1.c1 END  WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((rt0.c3)|(rt0.c0)) WHEN ((rt0.c0) BETWEEN (0.40156535121037507) AND (rt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt0.c1 THEN rt0.c0 ELSE (rt1.c1 IN ()) END;
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (0X126f187e) ORDER BY (((((((((((((rt1.c2 IN ()))OR((rt0.c2 IN ()))))AND(((((rt1.c1)AND(vt0.c0)))AND(rt0.c3)))))AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))))AND(((rt1.c0)IS NOT(rt0.c4)))))OR(x'bce8')))OR((+ (rt0.c4))))  NULLS LAST, HEX(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x126f187e) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((((rt1.c2 IN ()))OR((rt0.c2 IN ()))))AND(((((rt1.c1)AND(vt0.c0)))AND(rt0.c3)))))AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))))AND(((rt1.c0)IS NOT(rt0.c4)))))OR(x'bce8')))OR((+ (rt0.c4))))  NULLS LAST, HEX(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c4))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (0X126f187e) ORDER BY (((((((((((((rt1.c2 IN ()))OR((rt0.c2 IN ()))))AND(((((rt1.c1)AND(vt0.c0)))AND(rt0.c3)))))AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))))AND(((rt1.c0)IS NOT(rt0.c4)))))OR(x'bce8')))OR((+ (rt0.c4))))  NULLS LAST, HEX(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c4))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x126f187e) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (((((((((((((rt1.c2 IN ()))OR((rt0.c2 IN ()))))AND(((((rt1.c1)AND(vt0.c0)))AND(rt0.c3)))))AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))))AND(((rt1.c0)IS NOT(rt0.c4)))))OR(x'bce8')))OR((+ (rt0.c4))))  NULLS LAST, HEX(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c4))) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (0X126f187e) ORDER BY (((((((((((((rt1.c2 IN ()))OR((rt0.c2 IN ()))))AND(((((rt1.c1)AND(vt0.c0)))AND(rt0.c3)))))AND(((((((((((((rt0.c3)OR(rt0.c1)))AND(rt1.c0)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c1)))OR(rt1.c0)))))AND(((rt1.c0)IS NOT(rt0.c4)))))OR(x'bce8')))OR((+ (rt0.c4))))  NULLS LAST, HEX(((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c4))) DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((rt0.c4 IN ()) AS BLOB) WHERE (((((rt0.c4)IS(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((rt0.c4 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((rt0.c4 IN ()) AS BLOB) WHERE (((((rt0.c4)IS(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)IS(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((rt0.c4 IN ()) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((rt0.c4 IN ()) AS BLOB) WHERE (((((rt0.c4)IS(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))) WHERE ('1642121812') ORDER BY ((((((((((0.11032977679773426)AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c0)))AND(NULL)))IS(((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (('1642121812') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((((((((((0.11032977679773426)AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c0)))AND(NULL)))IS(((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))) WHERE ('1642121812') ORDER BY ((((((((((0.11032977679773426)AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c0)))AND(NULL)))IS(((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (('1642121812') IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((((((((((0.11032977679773426)AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c0)))AND(NULL)))IS(((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON ((vt0.c1 COLLATE BINARY) NOT BETWEEN ((((rt1.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c0)))) AND (((vt0.c0)IS NOT(vt0.c0)))) WHERE ('1642121812') ORDER BY ((((((((((0.11032977679773426)AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c0)))AND(NULL)))IS(((((((((vt0.c1)AND(rt1.c0)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2)IS NOT(((rt1.c1)-(rt0.c0))))) ORDER BY json_object((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c4))), SQLITE_COMPILEOPTION_USED(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(((rt1.c1)-(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_object((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c4))), SQLITE_COMPILEOPTION_USED(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2)IS NOT(((rt1.c1)-(rt0.c0))))) ORDER BY json_object((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c4))), SQLITE_COMPILEOPTION_USED(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)IS NOT(((rt1.c1)-(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY json_object((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c4))), SQLITE_COMPILEOPTION_USED(NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2)IS NOT(((rt1.c1)-(rt0.c0))))) ORDER BY json_object((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c4))), SQLITE_COMPILEOPTION_USED(NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c3)OR(rt0.c0)))OR(rt1.c1)) COLLATE RTRIM WHERE (CASE WHEN (((vt0.c1))>=((rt1.c1))) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((rt0.c4)=(rt1.c2)) WHEN ((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c1)) THEN (rt1.c1 IN (rt1.c2)) WHEN ((('', rt1.c0, rt0.c4))<((rt1.c0, vt0.c0, rt0.c2))) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1) ISNULL) THEN ('-1227347042' IN ()) ELSE ((rt1.c2) BETWEEN ('-122567510') AND (rt1.c2)) END) ORDER BY ((vt0.c0)||(rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))>=((rt1.c1))) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((rt0.c4)=(rt1.c2)) WHEN ((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c1)) THEN (rt1.c1 IN (rt1.c2)) WHEN ((('', rt1.c0, rt0.c4))<((rt1.c0, vt0.c0, rt0.c2))) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1) ISNULL) THEN ('-1227347042' IN ()) ELSE ((rt1.c2) BETWEEN ('-122567510') AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c3)OR(rt0.c0)))OR(rt1.c1)) COLLATE RTRIM ORDER BY ((vt0.c0)||(rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c3)OR(rt0.c0)))OR(rt1.c1)) COLLATE RTRIM WHERE (CASE WHEN (((vt0.c1))>=((rt1.c1))) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((rt0.c4)=(rt1.c2)) WHEN ((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c1)) THEN (rt1.c1 IN (rt1.c2)) WHEN ((('', rt1.c0, rt0.c4))<((rt1.c0, vt0.c0, rt0.c2))) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1) ISNULL) THEN ('-1227347042' IN ()) ELSE ((rt1.c2) BETWEEN ('-122567510') AND (rt1.c2)) END) ORDER BY ((vt0.c0)||(rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1))>=((rt1.c1))) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN vt0.c1 THEN ((rt0.c4)=(rt1.c2)) WHEN ((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c1)) THEN (rt1.c1 IN (rt1.c2)) WHEN ((('', rt1.c0, rt0.c4))<((rt1.c0, vt0.c0, rt0.c2))) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c1) ISNULL) THEN ('-1227347042' IN ()) ELSE ((rt1.c2) BETWEEN ('-122567510') AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(CASE WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 END AS NUMERIC) CROSS JOIN rt0 ON ((((rt0.c3)OR(rt0.c0)))OR(rt1.c1)) COLLATE RTRIM ORDER BY ((vt0.c0)||(rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))IS NOT(0.24397046159546532)) LEFT OUTER JOIN rt0 ON (~ (0.14112928392294377)) WHERE ((((0X465f3e4d)) BETWEEN (((((rt0.c2, '-2008805869', '315685125')) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c0)) AND ((rt0.c0, rt1.c2, rt0.c0))))) AND ((((rt1.c1)OR(']S'))))));
SELECT SUM(count) FROM (SELECT ALL (((((0x465f3e4d)) BETWEEN (((((rt0.c2, '-2008805869', '315685125')) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c0)) AND ((rt0.c0, rt1.c2, rt0.c0))))) AND ((((rt1.c1)OR(']S')))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))IS NOT(0.24397046159546532)) LEFT OUTER JOIN rt0 ON (~ (0.14112928392294377)));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))IS NOT(0.24397046159546532)) LEFT OUTER JOIN rt0 ON (~ (0.14112928392294377)) WHERE ((((0X465f3e4d)) BETWEEN (((((rt0.c2, '-2008805869', '315685125')) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c0)) AND ((rt0.c0, rt1.c2, rt0.c0))))) AND ((((rt1.c1)OR(']S'))))));
SELECT SUM(count) FROM (SELECT ALL (((((0x465f3e4d)) BETWEEN (((((rt0.c2, '-2008805869', '315685125')) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c0)) AND ((rt0.c0, rt1.c2, rt0.c0))))) AND ((((rt1.c1)OR(']S')))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))IS NOT(0.24397046159546532)) LEFT OUTER JOIN rt0 ON (~ (0.14112928392294377)));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))IS NOT(0.24397046159546532)) LEFT OUTER JOIN rt0 ON (~ (0.14112928392294377)) WHERE ((((0X465f3e4d)) BETWEEN (((((rt0.c2, '-2008805869', '315685125')) NOT BETWEEN ((rt1.c0, rt1.c1, rt0.c0)) AND ((rt0.c0, rt1.c2, rt0.c0))))) AND ((((rt1.c1)OR(']S'))))));
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c1)!=(rt0.c3)))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<>(rt0.c3)))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c1)!=(rt0.c3)))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<>(rt0.c3)))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((vt0.c1)!=(rt0.c3)))OR(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (NULL) ORDER BY LOWER(DISTINCT ((((rt1.c0)OR(rt0.c0)))OR(rt1.c1))) DESC, 0.811544385499546  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY LOWER(DISTINCT ((((rt1.c0)OR(rt0.c0)))OR(rt1.c1))) DESC, 0.811544385499546  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (NULL) ORDER BY LOWER(DISTINCT ((((rt1.c0)OR(rt0.c0)))OR(rt1.c1))) DESC, 0.811544385499546  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY LOWER(DISTINCT ((((rt1.c0)OR(rt0.c0)))OR(rt1.c1))) DESC, 0.811544385499546  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (NULL) ORDER BY LOWER(DISTINCT ((((rt1.c0)OR(rt0.c0)))OR(rt1.c1))) DESC, 0.811544385499546  NULLS LAST;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4) AND ((((rt1.c2))<((rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4) AND ((((rt1.c2))<((rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4) AND ((((rt1.c2))<((rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4) AND ((((rt1.c2))<((rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (CASE ((rt1.c2) NOT NULL)  WHEN ((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c1)) THEN CAST(rt0.c4 AS INTEGER) END) ORDER BY ((((rt0.c2) IS TRUE)) BETWEEN (rt0.c4) AND ((((rt1.c2))<((rt1.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2, vt0.c0, rt1.c0))<=((rt1.c1, rt1.c2, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2, vt0.c0, rt1.c0))<=((rt1.c1, rt1.c2, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2, vt0.c0, rt1.c0))<=((rt1.c1, rt1.c2, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c2, vt0.c0, rt1.c0))<=((rt1.c1, rt1.c2, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CAST((((rt1.c2, vt0.c0, rt1.c0))<=((rt1.c1, rt1.c2, vt0.c0))) AS BLOB));
SELECT * FROM rt0, rt1, vt0 WHERE (UPPER((((rt0.c4, vt0.c0, rt1.c1))>((x'15708481', vt0.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((rt0.c4, vt0.c0, rt1.c1))>((x'15708481', vt0.c1, rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (UPPER((((rt0.c4, vt0.c0, rt1.c1))>((x'15708481', vt0.c1, rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((rt0.c4, vt0.c0, rt1.c1))>((x'15708481', vt0.c1, rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (UPPER((((rt0.c4, vt0.c0, rt1.c1))>((x'15708481', vt0.c1, rt1.c1)))));
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((COALESCE(rt0.c3, ''))+((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c3, ''))+((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((COALESCE(rt0.c3, ''))+((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c3, ''))+((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN vt0);
SELECT * FROM rt0, rt1 NATURAL JOIN vt0 WHERE (((COALESCE(rt0.c3, ''))+((NOT (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1) NOTNULL))AND(((0.044925718721438135) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))AND(((0.044925718721438135) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1) NOTNULL))AND(((0.044925718721438135) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))AND(((0.044925718721438135) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c1) NOTNULL))AND(((0.044925718721438135) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c3)IS(rt1.c0)) THEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)) WHEN ((rt0.c1) ISNULL) THEN ((((((((rt1.c1)OR(rt0.c4)))OR(vt0.c1)))OR(245336999)))AND(rt1.c0)) WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt1.c0 IN (vt0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((rt0.c3)IS(rt1.c0)) THEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)) WHEN ((rt0.c1) ISNULL) THEN ((((((((rt1.c1)OR(rt0.c4)))OR(vt0.c1)))OR(245336999)))AND(rt1.c0)) WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt1.c0 IN (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c3)IS(rt1.c0)) THEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)) WHEN ((rt0.c1) ISNULL) THEN ((((((((rt1.c1)OR(rt0.c4)))OR(vt0.c1)))OR(245336999)))AND(rt1.c0)) WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt1.c0 IN (vt0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((rt0.c3)IS(rt1.c0)) THEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)) WHEN ((rt0.c1) ISNULL) THEN ((((((((rt1.c1)OR(rt0.c4)))OR(vt0.c1)))OR(245336999)))AND(rt1.c0)) WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt1.c0 IN (vt0.c0)) ELSE x'' END) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT ALL COUNT(*) FROM rt1, rt0, vt0 WHERE (CASE NULL  WHEN ((rt0.c3)IS(rt1.c0)) THEN ((rt0.c4) BETWEEN (rt1.c2) AND (rt0.c4)) WHEN ((rt0.c1) ISNULL) THEN ((((((((rt1.c1)OR(rt0.c4)))OR(vt0.c1)))OR(245336999)))AND(rt1.c0)) WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN (rt1.c0 IN (vt0.c0)) ELSE x'' END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(LIKELY(rt0.c2) AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c0)<<(vt0.c1))))) ORDER BY rt0.c3  NULLS LAST, LIKELY(DISTINCT rt0.c3) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS LAST, LIKELY(DISTINCT rt0.c3) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c0)<<(vt0.c1))))) ORDER BY rt0.c3  NULLS LAST, LIKELY(DISTINCT rt0.c3) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS LAST, LIKELY(DISTINCT rt0.c3) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c0)<<(vt0.c1))))) ORDER BY rt0.c3  NULLS LAST, LIKELY(DISTINCT rt0.c3) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt1 WHERE (IFNULL(IFNULL(rt1.c2, rt1.c2), ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(IFNULL(rt1.c2, rt1.c2), ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(IFNULL(rt1.c2, rt1.c2), ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(IFNULL(rt1.c2, rt1.c2), ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(IFNULL(rt1.c2, rt1.c2), ((((rt1.c1)OR(rt1.c2)))OR(rt1.c2))));
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt0.c3, rt0.c3, 0.9114437604303064))<>((rt1.c1, rt1.c1, rt1.c2))))>>((rt0.c1 IN (rt1.c2, rt0.c0))))) ORDER BY (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c3, 0.9114437604303064))<>((rt1.c1, rt1.c1, rt1.c2))))>>((rt0.c1 IN (rt1.c2, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt0.c3, rt0.c3, 0.9114437604303064))<>((rt1.c1, rt1.c1, rt1.c2))))>>((rt0.c1 IN (rt1.c2, rt0.c0))))) ORDER BY (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3, rt0.c3, 0.9114437604303064))<>((rt1.c1, rt1.c1, rt1.c2))))>>((rt0.c1 IN (rt1.c2, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((((rt0.c3, rt0.c3, 0.9114437604303064))<>((rt1.c1, rt1.c1, rt1.c2))))>>((rt0.c1 IN (rt1.c2, rt0.c0))))) ORDER BY (((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt1.c2)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1))<=((rt1.c0))), ((rt1.c1)<(rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, (+ (NULL)), ((rt1.c2)>>(rt1.c1))))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c0, rt1.c0, (rt1.c0 IN ()), (+ (rt1.c2)))))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND((- (rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c0)+(0.4099701544824712)))))OR(COALESCE(rt1.c2, 5.78413618E8))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1))<=((rt1.c0))), ((rt1.c1)<(rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, (+ (NULL)), ((rt1.c2)>>(rt1.c1))))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c0, rt1.c0, (rt1.c0 IN ()), (+ (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c2) NOT NULL))AND((- (rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c0)+(0.4099701544824712)))))OR(COALESCE(rt1.c2, 5.78413618E8))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1))<=((rt1.c0))), ((rt1.c1)<(rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, (+ (NULL)), ((rt1.c2)>>(rt1.c1))))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c0, rt1.c0, (rt1.c0 IN ()), (+ (rt1.c2)))))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND((- (rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c0)+(0.4099701544824712)))))OR(COALESCE(rt1.c2, 5.78413618E8))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1))<=((rt1.c0))), ((rt1.c1)<(rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, (+ (NULL)), ((rt1.c2)>>(rt1.c1))))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c0, rt1.c0, (rt1.c0 IN ()), (+ (rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c2) NOT NULL))AND((- (rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c0)+(0.4099701544824712)))))OR(COALESCE(rt1.c2, 5.78413618E8))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1))<=((rt1.c0))), ((rt1.c1)<(rt1.c1)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END, (+ (NULL)), ((rt1.c2)>>(rt1.c1))))<=(((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))), rt1.c0, rt1.c0, (rt1.c0 IN ()), (+ (rt1.c2)))))) ORDER BY ((((((((((rt1.c2) NOT NULL))AND((- (rt1.c0)))))AND(rt1.c0 COLLATE BINARY)))AND(((rt1.c0)+(0.4099701544824712)))))OR(COALESCE(rt1.c2, 5.78413618E8))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (json_object(CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_object(CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (json_object(CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_object(CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (json_object(CAST(rt1.c2 AS REAL), CAST(rt1.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(CASE WHEN rt1.c1 THEN rt1.c2 END, CAST(rt1.c2 AS BLOB))) ORDER BY ((LOWER(rt1.c1))+(((rt1.c0)<(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c1 THEN rt1.c2 END, CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER(rt1.c1))+(((rt1.c0)<(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(CASE WHEN rt1.c1 THEN rt1.c2 END, CAST(rt1.c2 AS BLOB))) ORDER BY ((LOWER(rt1.c1))+(((rt1.c0)<(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c1 THEN rt1.c2 END, CAST(rt1.c2 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY ((LOWER(rt1.c1))+(((rt1.c0)<(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(CASE WHEN rt1.c1 THEN rt1.c2 END, CAST(rt1.c2 AS BLOB))) ORDER BY ((LOWER(rt1.c1))+(((rt1.c0)<(rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2) IS TRUE), NULL, 0.7385338879707194, ((vt0.c0)<<(rt1.c2)), (~ (rt0.c1))))<((rt1.c2, '', ((vt0.c1) IS TRUE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt1.c1))<=((vt0.c1)))))) WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '552295617' ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '552295617' ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2) IS TRUE), NULL, 0.7385338879707194, ((vt0.c0)<<(rt1.c2)), (~ (rt0.c1))))<((rt1.c2, '', ((vt0.c1) IS TRUE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt1.c1))<=((vt0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2) IS TRUE), NULL, 0.7385338879707194, ((vt0.c0)<<(rt1.c2)), (~ (rt0.c1))))<((rt1.c2, '', ((vt0.c1) IS TRUE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt1.c1))<=((vt0.c1)))))) WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '552295617' ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '552295617' ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2) IS TRUE), NULL, 0.7385338879707194, ((vt0.c0)<<(rt1.c2)), (~ (rt0.c1))))<((rt1.c2, '', ((vt0.c1) IS TRUE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt1.c1))<=((vt0.c1)))))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN rt1 ON (((((rt1.c2) IS TRUE), NULL, 0.7385338879707194, ((vt0.c0)<<(rt1.c2)), (~ (rt0.c1))))<((rt1.c2, '', ((vt0.c1) IS TRUE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (((rt1.c1))<=((vt0.c1)))))) WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '552295617' ELSE (NOT (vt0.c0)) END);
SELECT * FROM rt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt1, rt0, vt0);
SELECT * FROM rt1, rt0, vt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT * FROM vt0, rt0, rt1 WHERE (TRIM((((rt1.c0))<=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c0))<=((rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (TRIM((((rt1.c0))<=((rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((rt1.c0))<=((rt1.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (TRIM((((rt1.c0))<=((rt1.c0)))));
SELECT ALL * FROM rt1 WHERE (0xffffffffc7a1e43d) ORDER BY ((0.4165674955987243) BETWEEN ((rt1.c2 IN (rt1.c0))) AND (((rt1.c1)>>(rt1.c2)))) ASC, ((rt1.c1)AND(LTRIM(0x25140df7)))  NULLS FIRST, (((NOT (rt1.c2))) NOT BETWEEN ('' COLLATE BINARY) AND ((NOT (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0Xffffffffc7a1e43d) IS TRUE)  as count FROM rt1 ORDER BY ((0.4165674955987243) BETWEEN ((rt1.c2 IN (rt1.c0))) AND (((rt1.c1)>>(rt1.c2)))) ASC, ((rt1.c1)AND(LTRIM(0X25140df7)))  NULLS FIRST, (((NOT (rt1.c2))) NOT BETWEEN ('' COLLATE BINARY) AND ((NOT (rt1.c0)))) DESC);
SELECT ALL * FROM rt1 WHERE (0xffffffffc7a1e43d) ORDER BY ((0.4165674955987243) BETWEEN ((rt1.c2 IN (rt1.c0))) AND (((rt1.c1)>>(rt1.c2)))) ASC, ((rt1.c1)AND(LTRIM(0x25140df7)))  NULLS FIRST, (((NOT (rt1.c2))) NOT BETWEEN ('' COLLATE BINARY) AND ((NOT (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0Xffffffffc7a1e43d) IS TRUE)  as count FROM rt1 ORDER BY ((0.4165674955987243) BETWEEN ((rt1.c2 IN (rt1.c0))) AND (((rt1.c1)>>(rt1.c2)))) ASC, ((rt1.c1)AND(LTRIM(0X25140df7)))  NULLS FIRST, (((NOT (rt1.c2))) NOT BETWEEN ('' COLLATE BINARY) AND ((NOT (rt1.c0)))) DESC);
SELECT ALL * FROM rt1 WHERE (0xffffffffc7a1e43d) ORDER BY ((0.4165674955987243) BETWEEN ((rt1.c2 IN (rt1.c0))) AND (((rt1.c1)>>(rt1.c2)))) ASC, ((rt1.c1)AND(LTRIM(0x25140df7)))  NULLS FIRST, (((NOT (rt1.c2))) NOT BETWEEN ('' COLLATE BINARY) AND ((NOT (rt1.c0)))) DESC;
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE 0.17664013541656642  WHEN rt1.c1 THEN rt1.c0 END)) AND ((((rt1.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CASE 0.17664013541656642  WHEN rt1.c1 THEN rt1.c0 END)) AND ((((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE 0.17664013541656642  WHEN rt1.c1 THEN rt1.c0 END)) AND ((((rt1.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((CASE 0.17664013541656642  WHEN rt1.c1 THEN rt1.c0 END)) AND ((((rt1.c1) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE 0.17664013541656642  WHEN rt1.c1 THEN rt1.c0 END)) AND ((((rt1.c1) NOT NULL)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE WHERE (((rt0.c4) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c2))))<>((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c1)==(rt1.c2)))) AND ((UNLIKELY(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c2))))<>((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c1)=(rt1.c2)))) AND ((UNLIKELY(rt1.c1)))) DESC);
SELECT * FROM rt0, rt1 WHERE ((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c2))))<>((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c1)==(rt1.c2)))) AND ((UNLIKELY(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c2))))<>((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c1)=(rt1.c2)))) AND ((UNLIKELY(rt1.c1)))) DESC);
SELECT * FROM rt0, rt1 WHERE ((((((((rt1.c1)OR(rt0.c0)))OR(rt0.c2))))<>((((rt0.c2) BETWEEN (rt1.c2) AND (rt0.c4)))))) ORDER BY (((rt0.c1)) BETWEEN ((((rt1.c1)==(rt1.c2)))) AND ((UNLIKELY(rt1.c1)))) DESC;
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST(rt0.c4 AS TEXT))>>(((rt1.c1)LIKE(vt0.c0))))) ORDER BY (CASE WHEN rt0.c2 THEN NULL ELSE -1313070573 END IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS TEXT))>>(((rt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (CASE WHEN rt0.c2 THEN NULL ELSE -1313070573 END IN ()));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST(rt0.c4 AS TEXT))>>(((rt1.c1)LIKE(vt0.c0))))) ORDER BY (CASE WHEN rt0.c2 THEN NULL ELSE -1313070573 END IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS TEXT))>>(((rt1.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (CASE WHEN rt0.c2 THEN NULL ELSE -1313070573 END IN ()));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (((CAST(rt0.c4 AS TEXT))>>(((rt1.c1)LIKE(vt0.c0))))) ORDER BY (CASE WHEN rt0.c2 THEN NULL ELSE -1313070573 END IN ());
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE TRIM(DISTINCT vt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE TRIM(DISTINCT vt0.c1, vt0.c0) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE TRIM(DISTINCT vt0.c1, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE TRIM(DISTINCT vt0.c1, vt0.c0) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN rt1.c2 ELSE TRIM(DISTINCT vt0.c1, vt0.c0) END);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((((((rt1.c1)OR(vt0.c0)))OR(769114439)))OR(rt1.c1)))AND(x'')))<<(((((((((((((2110110594)AND(rt1.c1)))OR(0.3208233872638663)))AND(rt0.c2)))AND(rt1.c1)))OR(vt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(vt0.c0)))OR(769114439)))OR(rt1.c1)))AND(x'')))<<(((((((((((((2110110594)AND(rt1.c1)))OR(0.3208233872638663)))AND(rt0.c2)))AND(rt1.c1)))OR(vt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((((((rt1.c1)OR(vt0.c0)))OR(769114439)))OR(rt1.c1)))AND(x'')))<<(((((((((((((2110110594)AND(rt1.c1)))OR(0.3208233872638663)))AND(rt0.c2)))AND(rt1.c1)))OR(vt0.c1)))OR(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)OR(vt0.c0)))OR(769114439)))OR(rt1.c1)))AND(x'')))<<(((((((((((((2110110594)AND(rt1.c1)))OR(0.3208233872638663)))AND(rt0.c2)))AND(rt1.c1)))OR(vt0.c1)))OR(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((((((((((rt1.c1)OR(vt0.c0)))OR(769114439)))OR(rt1.c1)))AND(x'')))<<(((((((((((((2110110594)AND(rt1.c1)))OR(0.3208233872638663)))AND(rt0.c2)))AND(rt1.c1)))OR(vt0.c1)))OR(rt0.c4)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (1264502015))) AND (CASE rt0.c1  WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (1264502015))) AND (CASE rt0.c1  WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (1264502015))) AND (CASE rt0.c1  WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (1264502015))) AND (CASE rt0.c1  WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)&(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c4) AND (1264502015))) AND (CASE rt0.c1  WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)%(ABS(rt0.c4)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c4 END)%(ABS(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)%(ABS(rt0.c4)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c4 END)%(ABS(rt0.c4)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END)%(ABS(rt0.c4)))) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) NOT NULL)) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (rt1.c2))) AND (CASE WHEN rt1.c0 THEN vt0.c0 END))) ORDER BY TYPEOF(rt1.c1 COLLATE RTRIM)  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<<(COALESCE(DISTINCT rt1.c2, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (rt1.c2))) AND (CASE WHEN rt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY TYPEOF(rt1.c1 COLLATE RTRIM)  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<<(COALESCE(DISTINCT rt1.c2, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) NOT NULL)) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (rt1.c2))) AND (CASE WHEN rt1.c0 THEN vt0.c0 END))) ORDER BY TYPEOF(rt1.c1 COLLATE RTRIM)  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<<(COALESCE(DISTINCT rt1.c2, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (rt1.c2))) AND (CASE WHEN rt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt1 ORDER BY TYPEOF(rt1.c1 COLLATE RTRIM)  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<<(COALESCE(DISTINCT rt1.c2, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1) NOT NULL)) NOT BETWEEN (((NULL) BETWEEN (vt0.c0) AND (rt1.c2))) AND (CASE WHEN rt1.c0 THEN vt0.c0 END))) ORDER BY TYPEOF(rt1.c1 COLLATE RTRIM)  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))<<(COALESCE(DISTINCT rt1.c2, vt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON (((((rt0.c2))<=((vt0.c1)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END)+(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 END)+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON (((((rt0.c2))<=((vt0.c1)))) NOT NULL));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON (((((rt0.c2))<=((vt0.c1)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END)+(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt0.c0 END)+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN rt0 ON (((((rt0.c2))<=((vt0.c1)))) NOT NULL));
SELECT COUNT(*) FROM rt1, vt0 CROSS JOIN rt0 ON (((((rt0.c2))<=((vt0.c1)))) NOT NULL) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 END)+(rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (0x182019a2);
SELECT SUM(count) FROM (SELECT ALL ((0X182019a2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0x182019a2);
SELECT SUM(count) FROM (SELECT ALL ((0X182019a2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (0x182019a2);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((rt1.c2)AND(rt0.c3)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt0.c3)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((rt1.c2)AND(rt0.c3)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2)AND(rt0.c3)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((((((((rt1.c2)AND(rt0.c3)))AND(NULL)))AND(rt1.c2)))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c1, rt0.c0, 0.8390523361804794, rt0.c2, rt0.c4))==((vt0.c1, rt0.c3, rt0.c4, rt0.c1, x'')))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c1, rt0.c0, 0.8390523361804794, rt0.c2, rt0.c4))==((vt0.c1, rt0.c3, rt0.c4, rt0.c1, x'')))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c1, rt0.c0, 0.8390523361804794, rt0.c2, rt0.c4))==((vt0.c1, rt0.c3, rt0.c4, rt0.c1, x'')))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c1, rt0.c0, 0.8390523361804794, rt0.c2, rt0.c4))==((vt0.c1, rt0.c3, rt0.c4, rt0.c1, x'')))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c1) IS TRUE)) BETWEEN ((((vt0.c1, rt0.c0, 0.8390523361804794, rt0.c2, rt0.c4))==((vt0.c1, rt0.c3, rt0.c4, rt0.c1, x'')))) AND ((vt0.c0 IN ()))));
SELECT * FROM vt0, rt1, rt0 WHERE (((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)))AND(rt1.c2)))OR(vt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)))AND(rt1.c2)))OR(vt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)))AND(rt1.c2)))OR(vt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)))AND(rt1.c2)))OR(vt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (((((((((((rt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)))OR(CASE WHEN rt0.c1 THEN rt1.c0 ELSE rt0.c0 END)))AND(rt1.c2)))OR(vt0.c0)))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c3)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt0.c0)*(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt0.c0)*(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)*(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE ((((rt0.c0)*(rt0.c4)) IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt1.c0))<((rt0.c4))) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c1)))-(((('3CZ'))!=((rt0.c0))))), ((('', COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c1) IS FALSE)))<((CAST(0.1285672033893619 AS REAL), CAST(rt1.c0 AS INTEGER), (+ (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0))<((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c1)))-(((('3CZ'))!=((rt0.c0))))), ((('', COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c1) IS FALSE)))<((CAST(0.1285672033893619 AS REAL), CAST(rt1.c0 AS INTEGER), (+ (rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt1.c0))<((rt0.c4))) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c1)))-(((('3CZ'))!=((rt0.c0))))), ((('', COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c1) IS FALSE)))<((CAST(0.1285672033893619 AS REAL), CAST(rt1.c0 AS INTEGER), (+ (rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c0))<((rt0.c4))) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c1)))-(((('3CZ'))!=((rt0.c0))))), ((('', COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c1) IS FALSE)))<((CAST(0.1285672033893619 AS REAL), CAST(rt1.c0 AS INTEGER), (+ (rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((((rt1.c0))<((rt0.c4))) AS INTEGER)) ORDER BY ((((rt1.c2) BETWEEN (rt0.c4) AND (rt1.c1)))-(((('3CZ'))!=((rt0.c0))))), ((('', COALESCE(DISTINCT rt1.c2, rt0.c0), ((rt1.c1) IS FALSE)))<((CAST(0.1285672033893619 AS REAL), CAST(rt1.c0 AS INTEGER), (+ (rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS NUMERIC))+(((vt0.c1) BETWEEN (x'9e23') AND (rt1.c2)))) WHERE (CASE vt0.c1  WHEN CAST(rt1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)<<(rt1.c1)) END) ORDER BY ((CAST('' AS REAL)) NOT NULL) ASC, ((((rt1.c1) NOT NULL))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN CAST(rt1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)<<(rt1.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS NUMERIC))+(((vt0.c1) BETWEEN (x'9e23') AND (rt1.c2)))) ORDER BY ((CAST('' AS REAL)) NOT NULL) ASC, ((((rt1.c1) NOT NULL))<(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS NUMERIC))+(((vt0.c1) BETWEEN (x'9e23') AND (rt1.c2)))) WHERE (CASE vt0.c1  WHEN CAST(rt1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)<<(rt1.c1)) END) ORDER BY ((CAST('' AS REAL)) NOT NULL) ASC, ((((rt1.c1) NOT NULL))<(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN CAST(rt1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)<<(rt1.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS NUMERIC))+(((vt0.c1) BETWEEN (x'9e23') AND (rt1.c2)))) ORDER BY ((CAST('' AS REAL)) NOT NULL) ASC, ((((rt1.c1) NOT NULL))<(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((CAST(vt0.c0 AS NUMERIC))+(((vt0.c1) BETWEEN (x'9e23') AND (rt1.c2)))) WHERE (CASE vt0.c1  WHEN CAST(rt1.c1 AS TEXT) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c1)<<(rt1.c1)) END) ORDER BY ((CAST('' AS REAL)) NOT NULL) ASC, ((((rt1.c1) NOT NULL))<(vt0.c1));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c4))) AND (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c4))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c4))) AND (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c4))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c4))) AND (((NULL) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c1)) ORDER BY ((((x'')AND(CASE vt0.c0  WHEN '-6440152' THEN rt1.c0 ELSE rt1.c1 END)))OR(((vt0.c1)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt1.c1)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((x'')AND(CASE vt0.c0  WHEN '-6440152' THEN rt1.c0 ELSE rt1.c1 END)))OR(((vt0.c1)/(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c1)) ORDER BY ((((x'')AND(CASE vt0.c0  WHEN '-6440152' THEN rt1.c0 ELSE rt1.c1 END)))OR(((vt0.c1)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt1.c1)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((x'')AND(CASE vt0.c0  WHEN '-6440152' THEN rt1.c0 ELSE rt1.c1 END)))OR(((vt0.c1)/(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UNLIKELY(DISTINCT rt1.c1)) ORDER BY ((((x'')AND(CASE vt0.c0  WHEN '-6440152' THEN rt1.c0 ELSE rt1.c1 END)))OR(((vt0.c1)/(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE ((((rt0.c4)==(rt1.c0)) IN (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)=(rt1.c0)) IN (((NULL) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE ((((rt0.c4)==(rt1.c0)) IN (((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)=(rt1.c0)) IN (((NULL) ISNULL)))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) IS TRUE) WHERE ((((rt0.c4)==(rt1.c0)) IN (((NULL) ISNULL))));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON NULLIF((rt1.c0 IN (vt0.c0, rt0.c0)), ((rt0.c2) BETWEEN (x'') AND (rt1.c0))) FULL OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))) AND (((((rt0.c0)AND(rt1.c2)))AND(vt0.c0)))) WHERE (((rt0.c1) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON NULLIF((rt1.c0 IN (vt0.c0, rt0.c0)), ((rt0.c2) BETWEEN (x'') AND (rt1.c0))) FULL OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))) AND (((((rt0.c0)AND(rt1.c2)))AND(vt0.c0)))));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON NULLIF((rt1.c0 IN (vt0.c0, rt0.c0)), ((rt0.c2) BETWEEN (x'') AND (rt1.c0))) FULL OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))) AND (((((rt0.c0)AND(rt1.c2)))AND(vt0.c0)))) WHERE (((rt0.c1) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON NULLIF((rt1.c0 IN (vt0.c0, rt0.c0)), ((rt0.c2) BETWEEN (x'') AND (rt1.c0))) FULL OUTER JOIN vt0 ON ((NULL) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt1.c2))) AND (((((rt0.c0)AND(rt1.c2)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c1, rt0.c2))) IN (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c2, 0.10859009489172045, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))>>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c2, 0.10859009489172045, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))>>(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c2, 0.10859009489172045, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))>>(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c2, 0.10859009489172045, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))>>(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c1, rt0.c4, rt0.c0)) BETWEEN ((rt0.c2, 0.10859009489172045, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1))))>>(rt0.c2));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 THEN (vt0.c0 IN (rt1.c2, rt0.c0)) ELSE rt1.c2 COLLATE BINARY END INNER JOIN rt1 ON (((((vt0.c0) IS TRUE)))==((rt0.c2))) WHERE (((rt0.c2 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 THEN (vt0.c0 IN (rt1.c2, rt0.c0)) ELSE rt1.c2 COLLATE BINARY END INNER JOIN rt1 ON (((((vt0.c0) IS TRUE)))==((rt0.c2))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 THEN (vt0.c0 IN (rt1.c2, rt0.c0)) ELSE rt1.c2 COLLATE BINARY END INNER JOIN rt1 ON (((((vt0.c0) IS TRUE)))==((rt0.c2))) WHERE (((rt0.c2 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((rt1.c1) IS TRUE)  WHEN rt1.c2 THEN (vt0.c0 IN (rt1.c2, rt0.c0)) ELSE rt1.c2 COLLATE BINARY END INNER JOIN rt1 ON (((((vt0.c0) IS TRUE)))==((rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (0xffffffffd85ea12c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd85ea12c) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (0xffffffffd85ea12c);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffd85ea12c) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (0xffffffffd85ea12c);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY x''  NULLS LAST);
SELECT * FROM rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) AS REAL)) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt0 ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt0 WHERE (NULL) ORDER BY (CAST(vt0.c1 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))*(((rt1.c1)||(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))*(((rt1.c1)||(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))*(((rt1.c1)||(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))*(((rt1.c1)||(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))*(((rt1.c1)||(rt1.c0)))));
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c4))<>((rt0.c2)))) AND (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN 0X60ed1b88 WHEN 0.8689711878595334 THEN rt0.c1 ELSE -1402792607 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c4))!=((rt0.c2)))) AND (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN 0X60ed1b88 WHEN 0.8689711878595334 THEN rt0.c1 ELSE -1402792607 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c4))<>((rt0.c2)))) AND (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN 0X60ed1b88 WHEN 0.8689711878595334 THEN rt0.c1 ELSE -1402792607 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c4))!=((rt0.c2)))) AND (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN 0X60ed1b88 WHEN 0.8689711878595334 THEN rt0.c1 ELSE -1402792607 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0 COLLATE BINARY) ORDER BY ((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c4))<>((rt0.c2)))) AND (CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN 0X60ed1b88 WHEN 0.8689711878595334 THEN rt0.c1 ELSE -1402792607 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c2)) COLLATE BINARY) ORDER BY (((- (rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (rt0.c3))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c2)) COLLATE BINARY) ORDER BY (((- (rt0.c3))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)|(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((- (rt0.c3))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0)|(rt0.c2)) COLLATE BINARY) ORDER BY (((- (rt0.c3))) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1) NOT NULL))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1) NOT NULL))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1) NOT NULL))))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1) NOT NULL))))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1) NOT NULL))))OR((- (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1)&(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)&(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c1)&(rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE ('130929443' COLLATE NOCASE) ORDER BY (json_object(rt0.c2, rt0.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('130929443' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (json_object(rt0.c2, rt0.c1) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('130929443' COLLATE NOCASE) ORDER BY (json_object(rt0.c2, rt0.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('130929443' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (json_object(rt0.c2, rt0.c1) IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('130929443' COLLATE NOCASE) ORDER BY (json_object(rt0.c2, rt0.c1) IN ()) DESC;
SELECT * FROM rt1, vt0, rt0 WHERE ('1579123411');
SELECT SUM(count) FROM (SELECT (('1579123411') IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ('1579123411');
SELECT SUM(count) FROM (SELECT (('1579123411') IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE ('1579123411');
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (LIKELY(DISTINCT UNLIKELY(rt0.c1))) ORDER BY (((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)) IN ((((x'0870b591'))==((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT UNLIKELY(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)) IN ((((x'0870b591'))=((rt0.c1))))) DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (LIKELY(DISTINCT UNLIKELY(rt0.c1))) ORDER BY (((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)) IN ((((x'0870b591'))==((rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT UNLIKELY(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)) IN ((((x'0870b591'))=((rt0.c1))))) DESC);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (LIKELY(DISTINCT UNLIKELY(rt0.c1))) ORDER BY (((((vt0.c0)AND(vt0.c1)))OR(rt1.c0)) IN ((((x'0870b591'))==((rt0.c1))))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, rt1 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((('1720034199')<(rt0.c3)))-(CASE WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (- (((rt0.c3)LIKE(rt0.c1)))) DESC, (((((rt0.c0 IN ('1933274917')))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))))OR(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('1720034199')<(rt0.c3)))-(CASE WHEN rt0.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)LIKE(rt0.c1)))) DESC, (((((rt0.c0 IN ('1933274917')))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))))OR(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((('1720034199')<(rt0.c3)))-(CASE WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (- (((rt0.c3)LIKE(rt0.c1)))) DESC, (((((rt0.c0 IN ('1933274917')))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))))OR(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('1720034199')<(rt0.c3)))-(CASE WHEN rt0.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)LIKE(rt0.c1)))) DESC, (((((rt0.c0 IN ('1933274917')))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))))OR(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((('1720034199')<(rt0.c3)))-(CASE WHEN rt0.c4 THEN rt0.c1 END))) ORDER BY (- (((rt0.c3)LIKE(rt0.c1)))) DESC, (((((rt0.c0 IN ('1933274917')))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c3)))))OR(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c3)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN TOTAL_CHANGES() ELSE UPPER(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN TOTAL_CHANGES() ELSE UPPER(rt0.c2) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN TOTAL_CHANGES() ELSE UPPER(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN TOTAL_CHANGES() ELSE UPPER(rt0.c2) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c1  WHEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN TOTAL_CHANGES() ELSE UPPER(rt0.c2) END);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c4 END AS INTEGER) WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt1.c2))) BETWEEN (rt0.c4) AND (CASE rt1.c2  WHEN rt0.c2 THEN '-1635885702' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c1)))OR(rt1.c2))) BETWEEN (rt0.c4) AND (CASE rt1.c2  WHEN rt0.c2 THEN '-1635885702' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c4 END AS INTEGER));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c4 END AS INTEGER) WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt1.c2))) BETWEEN (rt0.c4) AND (CASE rt1.c2  WHEN rt0.c2 THEN '-1635885702' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c1)))OR(rt1.c2))) BETWEEN (rt0.c4) AND (CASE rt1.c2  WHEN rt0.c2 THEN '-1635885702' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c4 END AS INTEGER));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c2 INNER JOIN vt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c4 END AS INTEGER) WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt1.c2))) BETWEEN (rt0.c4) AND (CASE rt1.c2  WHEN rt0.c2 THEN '-1635885702' ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((NOT (rt0.c3)), (rt1.c1 IN ()), (- (rt0.c3))))=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c1 END, vt0.c1, rt0.c3)))) ORDER BY (((((((rt1.c0, vt0.c0, rt1.c0))<((rt0.c2, rt1.c2, rt0.c4))))AND(vt0.c0)))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3)), (rt1.c1 IN ()), (- (rt0.c3))))=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c1 END, vt0.c1, rt0.c3)))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY (((((((rt1.c0, vt0.c0, rt1.c0))<((rt0.c2, rt1.c2, rt0.c4))))AND(vt0.c0)))AND(rt0.c2)) ASC);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((NOT (rt0.c3)), (rt1.c1 IN ()), (- (rt0.c3))))=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c1 END, vt0.c1, rt0.c3)))) ORDER BY (((((((rt1.c0, vt0.c0, rt1.c0))<((rt0.c2, rt1.c2, rt0.c4))))AND(vt0.c0)))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c3)), (rt1.c1 IN ()), (- (rt0.c3))))=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c1 END, vt0.c1, rt0.c3)))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0 ORDER BY (((((((rt1.c0, vt0.c0, rt1.c0))<((rt0.c2, rt1.c2, rt0.c4))))AND(vt0.c0)))AND(rt0.c2)) ASC);
SELECT COUNT(*) FROM vt0, rt1 NATURAL JOIN rt0 WHERE (((((NOT (rt0.c3)), (rt1.c1 IN ()), (- (rt0.c3))))=((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c1 ELSE rt1.c1 END, vt0.c1, rt0.c3)))) ORDER BY (((((((rt1.c0, vt0.c0, rt1.c0))<((rt0.c2, rt1.c2, rt0.c4))))AND(vt0.c0)))AND(rt0.c2)) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((CAST(rt1.c0 AS REAL))%(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL))%(rt1.c1))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((CAST(rt1.c0 AS REAL))%(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c0 AS REAL))%(rt1.c1))) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT ALL * FROM vt0, rt1, rt0 WHERE (((CAST(rt1.c0 AS REAL))%(rt1.c1)));
SELECT ALL * FROM rt1 WHERE ((+ (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((+ (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (NULL COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((rt0.c2, rt0.c0, vt0.c0))!=((vt0.c0, NULL, rt0.c1)))) BETWEEN (NULL) AND (((rt0.c3)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, vt0.c0))!=((vt0.c0, NULL, rt0.c1)))) BETWEEN (NULL) AND (((rt0.c3)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((rt0.c2, rt0.c0, vt0.c0))!=((vt0.c0, NULL, rt0.c1)))) BETWEEN (NULL) AND (((rt0.c3)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c0, vt0.c0))!=((vt0.c0, NULL, rt0.c1)))) BETWEEN (NULL) AND (((rt0.c3)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ((((((rt0.c2, rt0.c0, vt0.c0))!=((vt0.c0, NULL, rt0.c1)))) BETWEEN (NULL) AND (((rt0.c3)<<(vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(DISTINCT (~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (~ (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(DISTINCT (~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (~ (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (TYPEOF(DISTINCT (~ (rt1.c2))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ('-1161635913') ORDER BY (((vt0.c1) IS TRUE) IN (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1161635913') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((vt0.c1) IS TRUE) IN (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ('-1161635913') ORDER BY (((vt0.c1) IS TRUE) IN (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1161635913') IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((vt0.c1) IS TRUE) IN (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE ('-1161635913') ORDER BY (((vt0.c1) IS TRUE) IN (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c1) ORDER BY (NOT (((rt0.c0)GLOB(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (NOT (((rt0.c0)GLOB(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c1) ORDER BY (NOT (((rt0.c0)GLOB(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY (NOT (((rt0.c0)GLOB(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (rt1.c1) ORDER BY (NOT (((rt0.c0)GLOB(rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT * FROM rt1, vt0, rt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))OR(rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c3)))OR(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))OR(rt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt0.c3)))OR(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (CAST(((((vt0.c0)AND(rt0.c3)))OR(rt1.c0)) AS REAL));
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE WHEN (~ (rt1.c2)) THEN x'' END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN x'' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt0 ORDER BY CASE WHEN (~ (rt1.c2)) THEN x'' END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS NUMERIC)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN x'' END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((- ((rt1.c1 IN ())))) ORDER BY ((vt0.c0)%(rt1.c1)) COLLATE NOCASE  NULLS FIRST, ((((((((((rt1.c2)/(rt1.c0)))AND((vt0.c0 IN ()))))AND((~ (rt0.c2)))))AND((((rt1.c1, rt0.c0, vt0.c1))!=((rt0.c4, rt0.c4, rt1.c2))))))AND(((rt0.c1)IS NOT(rt0.c0)))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((vt0.c0)%(rt1.c1)) COLLATE NOCASE  NULLS FIRST, ((((((((((rt1.c2)/(rt1.c0)))AND((vt0.c0 IN ()))))AND((~ (rt0.c2)))))AND((((rt1.c1, rt0.c0, vt0.c1))!=((rt0.c4, rt0.c4, rt1.c2))))))AND(((rt0.c1)IS NOT(rt0.c0)))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((- ((rt1.c1 IN ())))) ORDER BY ((vt0.c0)%(rt1.c1)) COLLATE NOCASE  NULLS FIRST, ((((((((((rt1.c2)/(rt1.c0)))AND((vt0.c0 IN ()))))AND((~ (rt0.c2)))))AND((((rt1.c1, rt0.c0, vt0.c1))!=((rt0.c4, rt0.c4, rt1.c2))))))AND(((rt0.c1)IS NOT(rt0.c0)))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((vt0.c0)%(rt1.c1)) COLLATE NOCASE  NULLS FIRST, ((((((((((rt1.c2)/(rt1.c0)))AND((vt0.c0 IN ()))))AND((~ (rt0.c2)))))AND((((rt1.c1, rt0.c0, vt0.c1))!=((rt0.c4, rt0.c4, rt1.c2))))))AND(((rt0.c1)IS NOT(rt0.c0)))), (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt1.c2))) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))=(((vt0.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON (~ (((x'5e250efc')+(vt0.c0)))) WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))==(((vt0.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON (~ (((x'5e250efc')+(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))=(((vt0.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON (~ (((x'5e250efc')+(vt0.c0)))) WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))==(((vt0.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON (~ (((x'5e250efc')+(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON (((rt0.c3 IN ()))=(((vt0.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON (~ (((x'5e250efc')+(vt0.c0)))) WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS('W>' COLLATE BINARY)) ORDER BY IFNULL(DISTINCT rt1.c1, CASE WHEN '806843080' THEN rt1.c2 ELSE rt1.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS('W>' COLLATE BINARY)) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT rt1.c1, CASE WHEN '806843080' THEN rt1.c2 ELSE rt1.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS('W>' COLLATE BINARY)) ORDER BY IFNULL(DISTINCT rt1.c1, CASE WHEN '806843080' THEN rt1.c2 ELSE rt1.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS('W>' COLLATE BINARY)) IS TRUE)  as count FROM rt1 ORDER BY IFNULL(DISTINCT rt1.c1, CASE WHEN '806843080' THEN rt1.c2 ELSE rt1.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS('W>' COLLATE BINARY)) ORDER BY IFNULL(DISTINCT rt1.c1, CASE WHEN '806843080' THEN rt1.c2 ELSE rt1.c0 END)  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((TRIM(DISTINCT rt1.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((TRIM(DISTINCT rt1.c1)) ISNULL) DESC);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((TRIM(DISTINCT rt1.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((TRIM(DISTINCT rt1.c1)) ISNULL) DESC);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((TRIM(DISTINCT rt1.c1)) ISNULL) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (CASE TYPEOF(rt0.c4)  WHEN CAST(rt1.c0 AS REAL) THEN 0X2ea62733 ELSE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY ((rt0.c1)LIKE(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(rt0.c4)  WHEN CAST(rt1.c0 AS REAL) THEN 0x2ea62733 ELSE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON NULL ORDER BY ((rt0.c1)LIKE(rt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (CASE TYPEOF(rt0.c4)  WHEN CAST(rt1.c0 AS REAL) THEN 0X2ea62733 ELSE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY ((rt0.c1)LIKE(rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(rt0.c4)  WHEN CAST(rt1.c0 AS REAL) THEN 0x2ea62733 ELSE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt0 ON NULL ORDER BY ((rt0.c1)LIKE(rt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON NULL WHERE (CASE TYPEOF(rt0.c4)  WHEN CAST(rt1.c0 AS REAL) THEN 0X2ea62733 ELSE (((rt1.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) END) ORDER BY ((rt0.c1)LIKE(rt0.c2)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((NOT (vt0.c0))) BETWEEN ((((rt1.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c2, rt0.c3, rt0.c2)) AND ((rt1.c1, rt0.c0, rt0.c4)))) AND ((((rt0.c3, vt0.c1, rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt1.c1, vt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN ((((rt1.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c2, rt0.c3, rt0.c2)) AND ((rt1.c1, rt0.c0, rt0.c4)))) AND ((((rt0.c3, vt0.c1, rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt1.c1, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((NOT (vt0.c0))) BETWEEN ((((rt1.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c2, rt0.c3, rt0.c2)) AND ((rt1.c1, rt0.c0, rt0.c4)))) AND ((((rt0.c3, vt0.c1, rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt1.c1, vt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) BETWEEN ((((rt1.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c2, rt0.c3, rt0.c2)) AND ((rt1.c1, rt0.c0, rt0.c4)))) AND ((((rt0.c3, vt0.c1, rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt1.c1, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((NOT (vt0.c0))) BETWEEN ((((rt1.c0, rt0.c2, rt0.c0)) BETWEEN ((rt1.c2, rt0.c3, rt0.c2)) AND ((rt1.c1, rt0.c0, rt0.c4)))) AND ((((rt0.c3, vt0.c1, rt1.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt1.c1, vt0.c0, rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((((rt0.c1 IN ())) IS FALSE));
SELECT ALL * FROM rt1 WHERE (((((0.49927567333033607)!=(rt1.c1)))<=(((rt1.c2) NOTNULL)))) ORDER BY LOWER(CAST(rt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((((0.49927567333033607)!=(rt1.c1)))<=(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(CAST(rt1.c0 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE (((((0.49927567333033607)!=(rt1.c1)))<=(((rt1.c2) NOTNULL)))) ORDER BY LOWER(CAST(rt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((((((0.49927567333033607)!=(rt1.c1)))<=(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(CAST(rt1.c0 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE (((((0.49927567333033607)!=(rt1.c1)))<=(((rt1.c2) NOTNULL)))) ORDER BY LOWER(CAST(rt1.c0 AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((IFNULL(rt1.c1, vt0.c0))OR(LIKELIHOOD(x'', 0.7907442149130235))))AND(((rt1.c2) ISNULL)))) ORDER BY x'b53b4cd0'  NULLS FIRST, rt1.c0 ASC  NULLS FIRST, rt1.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(rt1.c1, vt0.c0))OR(LIKELIHOOD(x'', 0.7907442149130235))))AND(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'b53b4cd0'  NULLS FIRST, rt1.c0 ASC  NULLS FIRST, rt1.c0 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((IFNULL(rt1.c1, vt0.c0))OR(LIKELIHOOD(x'', 0.7907442149130235))))AND(((rt1.c2) ISNULL)))) ORDER BY x'b53b4cd0'  NULLS FIRST, rt1.c0 ASC  NULLS FIRST, rt1.c0 COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(rt1.c1, vt0.c0))OR(LIKELIHOOD(x'', 0.7907442149130235))))AND(((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'b53b4cd0'  NULLS FIRST, rt1.c0 ASC  NULLS FIRST, rt1.c0 COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((IFNULL(rt1.c1, vt0.c0))OR(LIKELIHOOD(x'', 0.7907442149130235))))AND(((rt1.c2) ISNULL)))) ORDER BY x'b53b4cd0'  NULLS FIRST, rt1.c0 ASC  NULLS FIRST, rt1.c0 COLLATE BINARY DESC;
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) ORDER BY ((rt0.c2) NOTNULL) COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 WHERE ((+ (((rt0.c3)||(rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c1)<<(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)||(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)<<(rt0.c0))) ASC);
SELECT * FROM rt0 WHERE ((+ (((rt0.c3)||(rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c1)<<(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)||(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT ((rt0.c1)<<(rt0.c0))) ASC);
SELECT * FROM rt0 WHERE ((+ (((rt0.c3)||(rt0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c1)<<(rt0.c0))) ASC;
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)&(rt0.c2)) THEN (rt0.c4 IN ()) ELSE (- (rt0.c0)) END) ORDER BY (- (LIKELY(rt0.c2)))  NULLS LAST, (((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)&(rt0.c2)) THEN (rt0.c4 IN ()) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(rt0.c2)))  NULLS LAST, (((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)&(rt0.c2)) THEN (rt0.c4 IN ()) ELSE (- (rt0.c0)) END) ORDER BY (- (LIKELY(rt0.c2)))  NULLS LAST, (((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c4)&(rt0.c2)) THEN (rt0.c4 IN ()) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (- (LIKELY(rt0.c2)))  NULLS LAST, (((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c4)&(rt0.c2)) THEN (rt0.c4 IN ()) ELSE (- (rt0.c0)) END) ORDER BY (- (LIKELY(rt0.c2)))  NULLS LAST, (((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((rt1.c1 COLLATE RTRIM) NOT BETWEEN (((((rt1.c1)AND(rt1.c1)))OR(rt1.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON -620837032 WHERE (((rt0.c2)GLOB(((((rt1.c1)OR(rt0.c3)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((((rt1.c1)OR(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON -620837032);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON -620837032 WHERE (((rt0.c2)GLOB(((((rt1.c1)OR(rt0.c3)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((((rt1.c1)OR(rt0.c3)))AND(rt0.c4))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON -620837032);
SELECT ALL * FROM rt1 CROSS JOIN rt0 ON -620837032 WHERE (((rt0.c2)GLOB(((((rt1.c1)OR(rt0.c3)))AND(rt0.c4)))));
SELECT * FROM rt0, vt0, rt1 WHERE (' S') ORDER BY LENGTH(((rt0.c3)>(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((' S') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY LENGTH(((rt0.c3)>(rt0.c3))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (' S') ORDER BY LENGTH(((rt0.c3)>(rt0.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((' S') IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY LENGTH(((rt0.c3)>(rt0.c3))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, rt1 WHERE (' S') ORDER BY LENGTH(((rt0.c3)>(rt0.c3))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY TYPEOF(((((rt1.c0)AND(rt1.c0)))AND('196214289'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((((rt1.c0)AND(rt1.c0)))AND('196214289'))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY TYPEOF(((((rt1.c0)AND(rt1.c0)))AND('196214289'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(((((rt1.c0)AND(rt1.c0)))AND('196214289'))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY TYPEOF(((((rt1.c0)AND(rt1.c0)))AND('196214289'))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN '* -N' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN '* -N' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN '* -N' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN '* -N' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c1) ORDER BY (NOT (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN '* -N' WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((+ (CASE rt0.c4  WHEN rt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(DISTINCT vt0.c1) ELSE json_patch(vt0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c4  WHEN rt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(DISTINCT vt0.c1) ELSE json_patch(vt0.c0, rt0.c1) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((+ (CASE rt0.c4  WHEN rt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(DISTINCT vt0.c1) ELSE json_patch(vt0.c0, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c4  WHEN rt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(DISTINCT vt0.c1) ELSE json_patch(vt0.c0, rt0.c1) END  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((+ (CASE rt0.c4  WHEN rt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN HEX(DISTINCT vt0.c1) ELSE json_patch(vt0.c0, rt0.c1) END  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) WHERE (((((((vt0.c0)>=(rt1.c1)))AND(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) ORDER BY -1382865882 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>=(rt1.c1)))AND(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) ORDER BY -1382865882 ASC  NULLS LAST);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) WHERE (((((((vt0.c0)>=(rt1.c1)))AND(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) ORDER BY -1382865882 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>=(rt1.c1)))AND(((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)))AND(vt0.c0)))AND(vt0.c0)))))OR(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) ORDER BY -1382865882 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN ']慸{ꔳ>Y*' END, ((vt0.c1)AND(vt0.c0)))) AND (((+ (vt0.c1)), ((vt0.c1) ISNULL), ((((vt0.c1)AND('309270654')))AND(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN ']慸{ꔳ>Y*' END, ((vt0.c1)AND(vt0.c0)))) AND (((+ (vt0.c1)), ((vt0.c1) ISNULL), ((((vt0.c1)AND('309270654')))AND(NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN ']慸{ꔳ>Y*' END, ((vt0.c1)AND(vt0.c0)))) AND (((+ (vt0.c1)), ((vt0.c1) ISNULL), ((((vt0.c1)AND('309270654')))AND(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN ']慸{ꔳ>Y*' END, ((vt0.c1)AND(vt0.c0)))) AND (((+ (vt0.c1)), ((vt0.c1) ISNULL), ((((vt0.c1)AND('309270654')))AND(NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), CASE WHEN vt0.c0 THEN ']慸{ꔳ>Y*' END, ((vt0.c1)AND(vt0.c0)))) AND (((+ (vt0.c1)), ((vt0.c1) ISNULL), ((((vt0.c1)AND('309270654')))AND(NULL))))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULLIF(DISTINCT rt0.c4, rt1.c1))/(CASE rt0.c4  WHEN '1717606678' THEN x'' END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(NULL)))OR(((((vt0.c1)AND(vt0.c1)))OR(0.3941011107734784))))  NULLS FIRST, (- (((((vt0.c1)AND(rt1.c1)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c4, rt1.c1))/(CASE rt0.c4  WHEN '1717606678' THEN x'' END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(NULL)))OR(((((vt0.c1)AND(vt0.c1)))OR(0.3941011107734784))))  NULLS FIRST, (- (((((vt0.c1)AND(rt1.c1)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULLIF(DISTINCT rt0.c4, rt1.c1))/(CASE rt0.c4  WHEN '1717606678' THEN x'' END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(NULL)))OR(((((vt0.c1)AND(vt0.c1)))OR(0.3941011107734784))))  NULLS FIRST, (- (((((vt0.c1)AND(rt1.c1)))OR(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c4, rt1.c1))/(CASE rt0.c4  WHEN '1717606678' THEN x'' END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(NULL)))OR(((((vt0.c1)AND(vt0.c1)))OR(0.3941011107734784))))  NULLS FIRST, (- (((((vt0.c1)AND(rt1.c1)))OR(rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (((NULLIF(DISTINCT rt0.c4, rt1.c1))/(CASE rt0.c4  WHEN '1717606678' THEN x'' END))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c3)))AND(NULL)))OR(((((vt0.c1)AND(vt0.c1)))OR(0.3941011107734784))))  NULLS FIRST, (- (((((vt0.c1)AND(rt1.c1)))OR(rt0.c2)))) ASC;
SELECT * FROM rt1 WHERE (0.31785468552401097) ORDER BY ((x'')/(COALESCE(rt1.c1, rt1.c0, rt1.c0, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.31785468552401097) IS TRUE)  as count FROM rt1 ORDER BY ((x'')/(COALESCE(rt1.c1, rt1.c0, rt1.c0, rt1.c1))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (0.31785468552401097) ORDER BY ((x'')/(COALESCE(rt1.c1, rt1.c0, rt1.c0, rt1.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.31785468552401097) IS TRUE)  as count FROM rt1 ORDER BY ((x'')/(COALESCE(rt1.c1, rt1.c0, rt1.c0, rt1.c1))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (0.31785468552401097) ORDER BY ((x'')/(COALESCE(rt1.c1, rt1.c0, rt1.c0, rt1.c1))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) BETWEEN (-148465924) AND (rt0.c1))) AND (rt1.c1))) ORDER BY ((((0.671701680600454)>(rt0.c1))) BETWEEN (-1170598916) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) BETWEEN (-148465924) AND (rt0.c1))) AND (rt1.c1))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY ((((0.671701680600454)>(rt0.c1))) BETWEEN (-1170598916) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) BETWEEN (-148465924) AND (rt0.c1))) AND (rt1.c1))) ORDER BY ((((0.671701680600454)>(rt0.c1))) BETWEEN (-1170598916) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) BETWEEN (-148465924) AND (rt0.c1))) AND (rt1.c1))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY ((((0.671701680600454)>(rt0.c1))) BETWEEN (-1170598916) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c0) BETWEEN (-148465924) AND (rt0.c1))) AND (rt1.c1))) ORDER BY ((((0.671701680600454)>(rt0.c1))) BETWEEN (-1170598916) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (((rt1.c0)>(((rt0.c1) IS FALSE)))) ORDER BY ((((((('-866005148'))<=((rt1.c2))))OR(rt1.c2 COLLATE RTRIM)))OR((((rt0.c0, rt1.c2, rt0.c0))<((rt0.c3, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((('-866005148'))<=((rt1.c2))))OR(rt1.c2 COLLATE RTRIM)))OR((((rt0.c0, rt1.c2, rt0.c0))<((rt0.c3, rt0.c2, rt0.c2))))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c0)>(((rt0.c1) IS FALSE)))) ORDER BY ((((((('-866005148'))<=((rt1.c2))))OR(rt1.c2 COLLATE RTRIM)))OR((((rt0.c0, rt1.c2, rt0.c0))<((rt0.c3, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((('-866005148'))<=((rt1.c2))))OR(rt1.c2 COLLATE RTRIM)))OR((((rt0.c0, rt1.c2, rt0.c0))<((rt0.c3, rt0.c2, rt0.c2))))));
SELECT * FROM rt0, rt1 WHERE (((rt1.c0)>(((rt0.c1) IS FALSE)))) ORDER BY ((((((('-866005148'))<=((rt1.c2))))OR(rt1.c2 COLLATE RTRIM)))OR((((rt0.c0, rt1.c2, rt0.c0))<((rt0.c3, rt0.c2, rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 NOT INDEXED WHERE (HEX(((('-918146178', rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0)) AND ((rt1.c2, rt1.c2, NULL))))) ORDER BY (((json_type(NULL)))<=(((0xf227d2c IN (vt0.c0))))), rt0.c4;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((('-918146178', rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0)) AND ((rt1.c2, rt1.c2, NULL))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((json_type(NULL)))<=(((0Xf227d2c IN (vt0.c0))))), rt0.c4);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 NOT INDEXED WHERE (HEX(((('-918146178', rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0)) AND ((rt1.c2, rt1.c2, NULL))))) ORDER BY (((json_type(NULL)))<=(((0xf227d2c IN (vt0.c0))))), rt0.c4;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((('-918146178', rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0)) AND ((rt1.c2, rt1.c2, NULL))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((json_type(NULL)))<=(((0Xf227d2c IN (vt0.c0))))), rt0.c4);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 NOT INDEXED WHERE (HEX(((('-918146178', rt0.c1, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0)) AND ((rt1.c2, rt1.c2, NULL))))) ORDER BY (((json_type(NULL)))<=(((0xf227d2c IN (vt0.c0))))), rt0.c4;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)>=(rt1.c0)) IN ()) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)>=(rt1.c0)) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)>=(rt1.c0)) IN ()) WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)>=(rt1.c0)) IN ()));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON (((vt0.c0)>=(rt1.c0)) IN ()) WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((rt0.c3)/(rt1.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (json_insert(rt0.c0, rt0.c3, vt0.c0))) RIGHT OUTER JOIN rt0 ON (+ (0.845220360983563)) COLLATE RTRIM COLLATE BINARY WHERE (CASE WHEN rt0.c3 THEN ((vt0.c0)|(rt0.c3)) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2)<=(vt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND (('-1214429703'))) END) ORDER BY CASE rt0.c3  WHEN (((rt0.c3))<((rt1.c2))) THEN rt1.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((vt0.c0)|(rt0.c3)) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2)<=(vt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND (('-1214429703'))) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt0.c3)/(rt1.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (json_insert(rt0.c0, rt0.c3, vt0.c0))) RIGHT OUTER JOIN rt0 ON (+ (0.845220360983563)) COLLATE RTRIM COLLATE BINARY ORDER BY CASE rt0.c3  WHEN (((rt0.c3))<((rt1.c2))) THEN rt1.c1 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt1 ON ((((rt0.c3)/(rt1.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (json_insert(rt0.c0, rt0.c3, vt0.c0))) RIGHT OUTER JOIN rt0 ON (+ (0.845220360983563)) COLLATE RTRIM COLLATE BINARY WHERE (CASE WHEN rt0.c3 THEN ((vt0.c0)|(rt0.c3)) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2)<=(vt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND (('-1214429703'))) END) ORDER BY CASE rt0.c3  WHEN (((rt0.c3))<((rt1.c2))) THEN rt1.c1 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN ((vt0.c0)|(rt0.c3)) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)>(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2)<=(vt0.c1)) ELSE (((rt0.c3)) BETWEEN ((rt0.c2)) AND (('-1214429703'))) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((rt0.c3)/(rt1.c1))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (json_insert(rt0.c0, rt0.c3, vt0.c0))) RIGHT OUTER JOIN rt0 ON (+ (0.845220360983563)) COLLATE RTRIM COLLATE BINARY ORDER BY CASE rt0.c3  WHEN (((rt0.c3))<((rt1.c2))) THEN rt1.c1 END DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (ABS((0.8945247078017721 IN ()))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN rt1.c0 COLLATE BINARY WHEN ((vt0.c1)=(rt1.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)) THEN CASE WHEN rt1.c0 THEN '-1750629433' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.7443339096899101 END WHEN ((rt1.c1)<(rt1.c1)) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) THEN ((vt0.c1)/(rt1.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((0.8945247078017721 IN ()))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN rt1.c0 COLLATE BINARY WHEN ((vt0.c1)=(rt1.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)) THEN CASE WHEN rt1.c0 THEN '-1750629433' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.7443339096899101 END WHEN ((rt1.c1)<(rt1.c1)) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) THEN ((vt0.c1)/(rt1.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END END DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (ABS((0.8945247078017721 IN ()))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN rt1.c0 COLLATE BINARY WHEN ((vt0.c1)=(rt1.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)) THEN CASE WHEN rt1.c0 THEN '-1750629433' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.7443339096899101 END WHEN ((rt1.c1)<(rt1.c1)) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) THEN ((vt0.c1)/(rt1.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((0.8945247078017721 IN ()))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN rt1.c0 COLLATE BINARY WHEN ((vt0.c1)=(rt1.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)) THEN CASE WHEN rt1.c0 THEN '-1750629433' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.7443339096899101 END WHEN ((rt1.c1)<(rt1.c1)) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) THEN ((vt0.c1)/(rt1.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END END DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (ABS((0.8945247078017721 IN ()))) ORDER BY CASE WHEN CAST(rt1.c2 AS NUMERIC) THEN rt1.c0 COLLATE BINARY WHEN ((vt0.c1)=(rt1.c1)) THEN ((vt0.c0) NOTNULL) WHEN ((((rt1.c1)AND(vt0.c0)))AND(rt1.c0)) THEN CASE WHEN rt1.c0 THEN '-1750629433' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN 0.7443339096899101 END WHEN ((rt1.c1)<(rt1.c1)) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) THEN ((vt0.c1)/(rt1.c0)) ELSE CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END END DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))IS(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))IS(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))IS(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))IS(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0)))IS(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT COUNT(*) FROM rt0, rt1, vt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (((((x'7479')OR(((rt0.c4)<>(rt0.c2)))))AND(CAST(rt0.c4 AS TEXT)))) ORDER BY (((CAST(rt0.c4 AS TEXT), (((rt0.c2, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c1, rt0.c2))), (NOT (rt0.c2))))!=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c3 AS BLOB), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'7479')OR(((rt0.c4)<>(rt0.c2)))))AND(CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c4 AS TEXT), (((rt0.c2, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c1, rt0.c2))), (NOT (rt0.c2))))<>((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c3 AS BLOB), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'7479')OR(((rt0.c4)<>(rt0.c2)))))AND(CAST(rt0.c4 AS TEXT)))) ORDER BY (((CAST(rt0.c4 AS TEXT), (((rt0.c2, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c1, rt0.c2))), (NOT (rt0.c2))))!=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c3 AS BLOB), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'7479')OR(((rt0.c4)<>(rt0.c2)))))AND(CAST(rt0.c4 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c4 AS TEXT), (((rt0.c2, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c1, rt0.c2))), (NOT (rt0.c2))))<>((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c3 AS BLOB), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'7479')OR(((rt0.c4)<>(rt0.c2)))))AND(CAST(rt0.c4 AS TEXT)))) ORDER BY (((CAST(rt0.c4 AS TEXT), (((rt0.c2, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c1, rt0.c2))), (NOT (rt0.c2))))!=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CAST(rt0.c3 AS BLOB), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c0)<=(x''))) AND (((vt0.c0) NOT BETWEEN (x'0621') AND (vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>(CAST(vt0.c0 AS NUMERIC))), CASE TRIM(DISTINCT 0.4524370993228898)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN ((vt0.c0)|(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((vt0.c0)<=(x''))) AND (((vt0.c0) NOT BETWEEN (x'0621') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>(CAST(vt0.c0 AS NUMERIC))), CASE TRIM(DISTINCT 0.4524370993228898)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN ((vt0.c0)|(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1))))));
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c0)<=(x''))) AND (((vt0.c0) NOT BETWEEN (x'0621') AND (vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>(CAST(vt0.c0 AS NUMERIC))), CASE TRIM(DISTINCT 0.4524370993228898)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN ((vt0.c0)|(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (((vt0.c0)<=(x''))) AND (((vt0.c0) NOT BETWEEN (x'0621') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>(CAST(vt0.c0 AS NUMERIC))), CASE TRIM(DISTINCT 0.4524370993228898)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN ((vt0.c0)|(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1))))));
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((vt0.c0)<=(x''))) AND (((vt0.c0) NOT BETWEEN (x'0621') AND (vt0.c0))))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))>(CAST(vt0.c0 AS NUMERIC))), CASE TRIM(DISTINCT 0.4524370993228898)  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE '' END THEN ((vt0.c0)|(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END  NULLS FIRST, (((vt0.c1)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((~ (vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))LIKE(vt0.c0)) WHERE (((rt1.c0)>>(rt1.c2)) COLLATE RTRIM) ORDER BY ('-2008805869' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>>(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))LIKE(vt0.c0)) ORDER BY ('-2008805869' IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))LIKE(vt0.c0)) WHERE (((rt1.c0)>>(rt1.c2)) COLLATE RTRIM) ORDER BY ('-2008805869' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)>>(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 INNER JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))LIKE(vt0.c0)) ORDER BY ('-2008805869' IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))LIKE(vt0.c0)) WHERE (((rt1.c0)>>(rt1.c2)) COLLATE RTRIM) ORDER BY ('-2008805869' IN ()) DESC;
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (- (0.4450640200975273)) WHERE ((((rt1.c0 IN (rt0.c3))) ISNULL)) ORDER BY rt0.c4 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (- (0.4450640200975273)) ORDER BY rt0.c4 COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (- (0.4450640200975273)) WHERE ((((rt1.c0 IN (rt0.c3))) ISNULL)) ORDER BY rt0.c4 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (- (0.4450640200975273)) ORDER BY rt0.c4 COLLATE BINARY);
SELECT ALL * FROM rt0, rt1 RIGHT OUTER JOIN vt0 ON (- (0.4450640200975273)) WHERE ((((rt1.c0 IN (rt0.c3))) ISNULL)) ORDER BY rt0.c4 COLLATE BINARY;
SELECT * FROM rt1 WHERE (((json_insert(rt1.c0, rt1.c0, rt1.c0))<=(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt1.c0, rt1.c0, rt1.c0))<=(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((json_insert(rt1.c0, rt1.c0, rt1.c0))<=(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt1.c0, rt1.c0, rt1.c0))<=(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((json_insert(rt1.c0, rt1.c0, rt1.c0))<=(((rt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(0xffffffffb027ffb0 AS TEXT), (- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c1 END, (('7r	.7Wa83')/(129977372)), ((rt0.c1) ISNULL)))) WHERE (json_array_length((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(0Xffffffffb027ffb0 AS TEXT), (- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c1 END, (('7r	.7Wa83')/(129977372)), ((rt0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(0xffffffffb027ffb0 AS TEXT), (- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c1 END, (('7r	.7Wa83')/(129977372)), ((rt0.c1) ISNULL)))) WHERE (json_array_length((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(0Xffffffffb027ffb0 AS TEXT), (- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c1 END, (('7r	.7Wa83')/(129977372)), ((rt0.c1) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(0xffffffffb027ffb0 AS TEXT), (- (rt0.c3)), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))==((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c1 END, (('7r	.7Wa83')/(129977372)), ((rt0.c1) ISNULL)))) WHERE (json_array_length((- (vt0.c0))));
SELECT * FROM rt0, rt1 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c3))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((+ (rt0.c3)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))OR(((rt0.c4) BETWEEN (x'') AND (rt0.c2)))))OR((((x'cf00736f', rt0.c4, x'f9cb')) BETWEEN ((rt0.c2, 1492657480, vt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))OR(((rt0.c4) BETWEEN (x'') AND (rt0.c2)))))OR((((x'cf00736f', rt0.c4, x'f9cb')) BETWEEN ((rt0.c2, 1492657480, vt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))OR(((rt0.c4) BETWEEN (x'') AND (rt0.c2)))))OR((((x'cf00736f', rt0.c4, x'f9cb')) BETWEEN ((rt0.c2, 1492657480, vt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))OR(((rt0.c4) BETWEEN (x'') AND (rt0.c2)))))OR((((x'cf00736f', rt0.c4, x'f9cb')) BETWEEN ((rt0.c2, 1492657480, vt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c1)))OR(((rt0.c4) BETWEEN (x'') AND (rt0.c2)))))OR((((x'cf00736f', rt0.c4, x'f9cb')) BETWEEN ((rt0.c2, 1492657480, vt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.3790207766146345  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE 0.3790207766146345  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.3790207766146345  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE 0.3790207766146345  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE 0.3790207766146345  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)))AND((((vt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt1.c2, rt0.c4, NULL)))))) ORDER BY CASE (rt0.c2 IN ())  WHEN '' THEN ((rt0.c1) IS FALSE) ELSE ((((rt1.c0)AND(rt0.c1)))OR(rt1.c2)) END, ((UPPER(DISTINCT vt0.c1))/(((rt0.c1)<=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)))AND((((vt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt1.c2, rt0.c4, NULL)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CASE (rt0.c2 IN ())  WHEN '' THEN ((rt0.c1) IS FALSE) ELSE ((((rt1.c0)AND(rt0.c1)))OR(rt1.c2)) END, ((UPPER(DISTINCT vt0.c1))/(((rt0.c1)<=(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)))AND((((vt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt1.c2, rt0.c4, NULL)))))) ORDER BY CASE (rt0.c2 IN ())  WHEN '' THEN ((rt0.c1) IS FALSE) ELSE ((((rt1.c0)AND(rt0.c1)))OR(rt1.c2)) END, ((UPPER(DISTINCT vt0.c1))/(((rt0.c1)<=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)))AND((((vt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt1.c2, rt0.c4, NULL)))))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY CASE (rt0.c2 IN ())  WHEN '' THEN ((rt0.c1) IS FALSE) ELSE ((((rt1.c0)AND(rt0.c1)))OR(rt1.c2)) END, ((UPPER(DISTINCT vt0.c1))/(((rt0.c1)<=(rt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE (((((vt0.c0 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c2 WHEN x'' THEN rt1.c2 WHEN rt0.c3 THEN vt0.c0 END)))AND((((vt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c0, rt0.c1, vt0.c0)) AND ((rt1.c2, rt0.c4, NULL)))))) ORDER BY CASE (rt0.c2 IN ())  WHEN '' THEN ((rt0.c1) IS FALSE) ELSE ((((rt1.c0)AND(rt0.c1)))OR(rt1.c2)) END, ((UPPER(DISTINCT vt0.c1))/(((rt0.c1)<=(rt1.c0)))) ASC;
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((rt1.c1)>=(rt1.c1)))GLOB(CASE rt0.c1  WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (CASE ((((NULL)AND(rt1.c0)))AND(rt0.c4))  WHEN (((x''))<((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt1.c1)) WHEN (rt1.c0 IN ()) THEN LIKELY(rt0.c0) WHEN ((rt0.c3)/(x'')) THEN rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((NULL)AND(rt1.c0)))AND(rt0.c4))  WHEN (((x''))<((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt1.c1)) WHEN (rt1.c0 IN ()) THEN LIKELY(rt0.c0) WHEN ((rt0.c3)/(x'')) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((rt1.c1)>=(rt1.c1)))GLOB(CASE rt0.c1  WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((rt1.c1)>=(rt1.c1)))GLOB(CASE rt0.c1  WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (CASE ((((NULL)AND(rt1.c0)))AND(rt0.c4))  WHEN (((x''))<((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt1.c1)) WHEN (rt1.c0 IN ()) THEN LIKELY(rt0.c0) WHEN ((rt0.c3)/(x'')) THEN rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((((NULL)AND(rt1.c0)))AND(rt0.c4))  WHEN (((x''))<((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt1.c1)) WHEN (rt1.c0 IN ()) THEN LIKELY(rt0.c0) WHEN ((rt0.c3)/(x'')) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((rt1.c1)>=(rt1.c1)))GLOB(CASE rt0.c1  WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((((rt1.c1)>=(rt1.c1)))GLOB(CASE rt0.c1  WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (CASE ((((NULL)AND(rt1.c0)))AND(rt0.c4))  WHEN (((x''))<((rt0.c0))) THEN ((((rt0.c0)OR(rt0.c2)))OR(rt1.c1)) WHEN (rt1.c0 IN ()) THEN LIKELY(rt0.c0) WHEN ((rt0.c3)/(x'')) THEN rt0.c0 COLLATE RTRIM END);
SELECT * FROM vt0 WHERE ((((~ (vt0.c1)))IS((vt0.c1 IN (vt0.c1, vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))IS((vt0.c1 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c1)))IS((vt0.c1 IN (vt0.c1, vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))IS((vt0.c1 IN (vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c1)))IS((vt0.c1 IN (vt0.c1, vt0.c0))))) ORDER BY CAST(vt0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c1, vt0.c1))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('904936829')))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(vt0.c1, vt0.c1))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('904936829')))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c1, vt0.c1))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('904936829')))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(vt0.c1, vt0.c1))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('904936829')))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULLIF(vt0.c1, vt0.c1))OR(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR('904936829')))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (load_extension(((rt1.c0)==(vt0.c1)), ((841684102)&(rt1.c0)))) ORDER BY (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(CAST(rt1.c1 AS REAL))))OR(((vt0.c0)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt1.c0)=(vt0.c1)), ((841684102)&(rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(CAST(rt1.c1 AS REAL))))OR(((vt0.c0)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (load_extension(((rt1.c0)==(vt0.c1)), ((841684102)&(rt1.c0)))) ORDER BY (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(CAST(rt1.c1 AS REAL))))OR(((vt0.c0)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(((rt1.c0)=(vt0.c1)), ((841684102)&(rt1.c0)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(CAST(rt1.c1 AS REAL))))OR(((vt0.c0)IS NOT(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (load_extension(((rt1.c0)==(vt0.c1)), ((841684102)&(rt1.c0)))) ORDER BY (((((((rt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(CAST(rt1.c1 AS REAL))))OR(((vt0.c0)IS NOT(vt0.c1))));
SELECT * FROM vt0, rt1, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT * FROM vt0, rt1, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS NUMERIC));
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE CASE rt0.c3  WHEN rt0.c4 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN TYPEOF(DISTINCT rt1.c1) END) ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c3  WHEN rt0.c4 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN TYPEOF(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE CASE rt0.c3  WHEN rt0.c4 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN TYPEOF(DISTINCT rt1.c1) END) ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c3  WHEN rt0.c4 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN TYPEOF(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, rt1 WHERE (CASE CASE rt0.c3  WHEN rt0.c4 THEN rt1.c1 END  WHEN (((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN TYPEOF(DISTINCT rt1.c1) END) ORDER BY (+ (CAST(rt0.c3 AS REAL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((+ (rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE ((- ((((x'', vt0.c0, x'ec69c782'))<>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((x'', vt0.c0, x'ec69c782'))<>((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((x'', vt0.c0, x'ec69c782'))<>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((x'', vt0.c0, x'ec69c782'))<>((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((- ((((x'', vt0.c0, x'ec69c782'))<>((vt0.c0, vt0.c1, vt0.c0)))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY '-1945008418'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY '-1945008418'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY '-1945008418'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY '-1945008418'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY '-1945008418'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(((((((((((((rt1.c2)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt1.c2)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(((((((((((((rt1.c2)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((((((rt1.c2)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, rt0);
SELECT COUNT(*) FROM vt0, rt1, rt0 WHERE (CAST(((((((((((((rt1.c2)AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt1.c1)))OR(rt0.c4)))OR(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(DISTINCT ''));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT '')) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(DISTINCT ''));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT '')) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (UNLIKELY(DISTINCT ''));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1)%(rt0.c3)))LIKE(((rt1.c1)<<(rt0.c0)))), (((((((rt0.c2)OR(rt1.c0)))AND(rt1.c2))))>((((vt0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c1)%(rt0.c3)))LIKE(((rt1.c1)<<(rt0.c0)))), (((((((rt0.c2)OR(rt1.c0)))AND(rt1.c2))))>((((vt0.c1)/(vt0.c0))))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1)%(rt0.c3)))LIKE(((rt1.c1)<<(rt0.c0)))), (((((((rt0.c2)OR(rt1.c0)))AND(rt1.c2))))>((((vt0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt1, vt0, rt0 ORDER BY ((((rt0.c1)%(rt0.c3)))LIKE(((rt1.c1)<<(rt0.c0)))), (((((((rt0.c2)OR(rt1.c0)))AND(rt1.c2))))>((((vt0.c1)/(vt0.c0))))));
SELECT ALL * FROM rt1, vt0, rt0 WHERE (rt0.c4) ORDER BY ((((rt0.c1)%(rt0.c3)))LIKE(((rt1.c1)<<(rt0.c0)))), (((((((rt0.c2)OR(rt1.c0)))AND(rt1.c2))))>((((vt0.c1)/(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((0.12231697001205999 IN (rt1.c0)))+(CASE 0.9172688031409055  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END))) ORDER BY ((rt1.c1)!=(((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.12231697001205999 IN (rt1.c0)))+(CASE 0.9172688031409055  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c1)!=(((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((0.12231697001205999 IN (rt1.c0)))+(CASE 0.9172688031409055  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END))) ORDER BY ((rt1.c1)!=(((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((0.12231697001205999 IN (rt1.c0)))+(CASE 0.9172688031409055  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY ((rt1.c1)!=(((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE ((((0.12231697001205999 IN (rt1.c0)))+(CASE 0.9172688031409055  WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c1 ELSE rt0.c3 END))) ORDER BY ((rt1.c1)!=(((((rt1.c2)AND(rt1.c1)))OR(vt0.c0)))) ASC;
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON CAST(((rt1.c0) NOT NULL) AS REAL) WHERE ((~ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt0 ON CAST(((rt1.c0) NOT NULL) AS REAL));
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON CAST(((rt1.c0) NOT NULL) AS REAL) WHERE ((~ (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt0 ON CAST(((rt1.c0) NOT NULL) AS REAL));
SELECT * FROM rt1, rt0 CROSS JOIN vt0 ON CAST(((rt1.c0) NOT NULL) AS REAL) WHERE ((~ (CAST(rt0.c3 AS REAL))));
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c0) NOTNULL) AS REAL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS TRUE));
SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE BINARY) ORDER BY LOWER(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE BINARY) ORDER BY LOWER(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY LOWER(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE BINARY) ORDER BY LOWER(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END) DESC  NULLS FIRST;
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE RTRIM WHERE ((((1.311207606E9) IS FALSE) IN (((rt1.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((1.311207606E9) IS FALSE) IN (((rt1.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE RTRIM WHERE ((((1.311207606E9) IS FALSE) IN (((rt1.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((1.311207606E9) IS FALSE) IN (((rt1.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2) NOTNULL) COLLATE RTRIM WHERE ((((1.311207606E9) IS FALSE) IN (((rt1.c2)+(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT COUNT(*) FROM vt0, rt0, rt1 WHERE (ABS(DISTINCT rt0.c1) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>(((rt0.c3) ISNULL)))) ORDER BY STRFTIME(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c4)/(rt0.c1)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))>(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY STRFTIME(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c4)/(rt0.c1)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>(((rt0.c3) ISNULL)))) ORDER BY STRFTIME(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c4)/(rt0.c1)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS FALSE))>(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY STRFTIME(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c4)/(rt0.c1)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS FALSE))>(((rt0.c3) ISNULL)))) ORDER BY STRFTIME(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c4)/(rt0.c1)), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 END);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)IS(x'')))OR(((rt1.c2)IS NOT(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)IS(x'')))OR(((rt1.c2)IS NOT(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)IS(x'')))OR(((rt1.c2)IS NOT(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)IS(x'')))OR(((rt1.c2)IS NOT(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c2)IS(x'')))OR(((rt1.c2)IS NOT(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON (((('-1188037178') IS TRUE))/((+ (rt0.c0)))) WHERE (CAST((rt0.c3 IN (rt0.c2, vt0.c1)) AS TEXT)) ORDER BY (((((- (rt0.c3)))OR((('xP') BETWEEN (rt0.c3) AND (rt0.c3)))))OR((NOT (rt0.c4))))  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN (rt0.c2, vt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON (((('-1188037178') IS TRUE))/((+ (rt0.c0)))) ORDER BY (((((- (rt0.c3)))OR((('xP') BETWEEN (rt0.c3) AND (rt0.c3)))))OR((NOT (rt0.c4))))  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON (((('-1188037178') IS TRUE))/((+ (rt0.c0)))) WHERE (CAST((rt0.c3 IN (rt0.c2, vt0.c1)) AS TEXT)) ORDER BY (((((- (rt0.c3)))OR((('xP') BETWEEN (rt0.c3) AND (rt0.c3)))))OR((NOT (rt0.c4))))  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c3 IN (rt0.c2, vt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON (((('-1188037178') IS TRUE))/((+ (rt0.c0)))) ORDER BY (((((- (rt0.c3)))OR((('xP') BETWEEN (rt0.c3) AND (rt0.c3)))))OR((NOT (rt0.c4))))  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt0 ON NULL FULL OUTER JOIN rt0 ON (((('-1188037178') IS TRUE))/((+ (rt0.c0)))) WHERE (CAST((rt0.c3 IN (rt0.c2, vt0.c1)) AS TEXT)) ORDER BY (((((- (rt0.c3)))OR((('xP') BETWEEN (rt0.c3) AND (rt0.c3)))))OR((NOT (rt0.c4))))  NULLS LAST, NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((~ (0.9760094544589972)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (0.9760094544589972)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((~ (0.9760094544589972)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (0.9760094544589972)) AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST((~ (0.9760094544589972)) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>(CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c4 END))) ORDER BY (CAST(0.6594821617497387 AS TEXT) IN ())  NULLS FIRST, CASE HEX(DISTINCT vt0.c0)  WHEN (((rt0.c0))=((rt0.c0))) THEN CAST(rt0.c4 AS BLOB) ELSE (- (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(0.6594821617497387 AS TEXT) IN ())  NULLS FIRST, CASE HEX(DISTINCT vt0.c0)  WHEN (((rt0.c0))==((rt0.c0))) THEN CAST(rt0.c4 AS BLOB) ELSE (- (vt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>(CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c4 END))) ORDER BY (CAST(0.6594821617497387 AS TEXT) IN ())  NULLS FIRST, CASE HEX(DISTINCT vt0.c0)  WHEN (((rt0.c0))=((rt0.c0))) THEN CAST(rt0.c4 AS BLOB) ELSE (- (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>(CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(0.6594821617497387 AS TEXT) IN ())  NULLS FIRST, CASE HEX(DISTINCT vt0.c0)  WHEN (((rt0.c0))==((rt0.c0))) THEN CAST(rt0.c4 AS BLOB) ELSE (- (vt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3)>(CASE WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c4 END))) ORDER BY (CAST(0.6594821617497387 AS TEXT) IN ())  NULLS FIRST, CASE HEX(DISTINCT vt0.c0)  WHEN (((rt0.c0))=((rt0.c0))) THEN CAST(rt0.c4 AS BLOB) ELSE (- (vt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (~ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (~ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (~ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (~ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2) ISNULL) COLLATE NOCASE ASC, (~ (vt0.c0)) COLLATE RTRIM COLLATE RTRIM;
SELECT COUNT(*) FROM rt0 WHERE (1414601793) ORDER BY x'd8ee' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1414601793) IS TRUE)  as count FROM rt0 ORDER BY x'd8ee' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (1414601793) ORDER BY x'd8ee' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1414601793) IS TRUE)  as count FROM rt0 ORDER BY x'd8ee' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (1414601793) ORDER BY x'd8ee' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)==(rt0.c1)) IN ()) INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((rt1.c2)GLOB(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) WHERE (((((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)))|(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)))|(rt0.c3))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)=(rt0.c1)) IN ()) INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((rt1.c2)GLOB(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)==(rt0.c1)) IN ()) INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((rt1.c2)GLOB(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) WHERE (((((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)))|(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)))|(rt0.c3))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)=(rt0.c1)) IN ()) INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((rt1.c2)GLOB(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON (((rt1.c1)==(rt0.c1)) IN ()) INNER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))OR(((rt1.c2)GLOB(rt0.c0)))))AND(((vt0.c1) NOT BETWEEN (rt0.c4) AND (vt0.c1)))) WHERE (((((((rt1.c1)AND(vt0.c0)))OR(rt1.c1)))|(rt0.c3)));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c4);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c1)IS(rt0.c2)))>>(CASE rt0.c4  WHEN rt0.c3 THEN NULL ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt0.c2)))>>(CASE rt0.c4  WHEN rt0.c3 THEN NULL ELSE rt0.c4 END))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c1)IS(rt0.c2)))>>(CASE rt0.c4  WHEN rt0.c3 THEN NULL ELSE rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)IS(rt0.c2)))>>(CASE rt0.c4  WHEN rt0.c3 THEN NULL ELSE rt0.c4 END))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT * FROM rt1, vt0, rt0 WHERE (((((rt1.c1)IS(rt0.c2)))>>(CASE rt0.c4  WHEN rt0.c3 THEN NULL ELSE rt0.c4 END)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(rt0.c4)))) AND ((((rt0.c0)AND(rt0.c4)))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1 COLLATE BINARY)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0)IS(rt0.c4)))) AND ((((rt0.c0)AND(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1 COLLATE BINARY)))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(rt0.c4)))) AND ((((rt0.c0)AND(rt0.c4)))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1 COLLATE BINARY)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0)IS(rt0.c4)))) AND ((((rt0.c0)AND(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1 COLLATE BINARY)))OR(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)IS(rt0.c4)))) AND ((((rt0.c0)AND(rt0.c4)))))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1 COLLATE BINARY)))OR(NULL)) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (('')||(rt1.c0)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')||(rt1.c0)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (('')||(rt1.c0)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')||(rt1.c0)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN (('')||(rt1.c0)) THEN (rt1.c0 IN (rt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)>>(rt1.c0)))<(CASE WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt0.c1, rt1.c0, rt0.c4)) BETWEEN ((1.719293139E9, rt0.c3, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c1)))) AND (((rt0.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt1.c0)))<(CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt0.c1, rt1.c0, rt0.c4)) BETWEEN ((1.719293139E9, rt0.c3, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c1)))) AND (((rt0.c0)-(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)>>(rt1.c0)))<(CASE WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt0.c1, rt1.c0, rt0.c4)) BETWEEN ((1.719293139E9, rt0.c3, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c1)))) AND (((rt0.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt1.c0)))<(CASE WHEN rt1.c2 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt0.c1, rt1.c0, rt0.c4)) BETWEEN ((1.719293139E9, rt0.c3, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c1)))) AND (((rt0.c0)-(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c0)>>(rt1.c0)))<(CASE WHEN rt1.c2 THEN rt1.c1 END))) ORDER BY (((rt1.c1 IN ())) NOT BETWEEN ((((rt0.c1, rt1.c0, rt0.c4)) BETWEEN ((1.719293139E9, rt0.c3, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c1)))) AND (((rt0.c0)-(rt1.c2))));
SELECT * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c3 AS TEXT))<<((- ('336761262')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))<<((- ('336761262'))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c3 AS TEXT))<<((- ('336761262')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS TEXT))<<((- ('336761262'))))) IS TRUE)  as count FROM vt0, rt0, rt1);
SELECT * FROM vt0, rt0, rt1 WHERE (((CAST(rt0.c3 AS TEXT))<<((- ('336761262')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) NOTNULL), x'')) ORDER BY (~ (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2) NOTNULL), x'')) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) NOTNULL), x'')) ORDER BY (~ (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((rt0.c2) NOTNULL), x'')) IS TRUE)  as count FROM rt0 ORDER BY (~ (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c2) NOTNULL), x'')) ORDER BY (~ (rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'0a66') NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0) ISNULL)))) ORDER BY ((((rt0.c2)AND((+ (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'0a66') NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND((+ (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'0a66') NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0) ISNULL)))) ORDER BY ((((rt0.c2)AND((+ (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((x'0a66') NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND((+ (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'0a66') NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1))) AND (((rt0.c0) ISNULL)))) ORDER BY ((((rt0.c2)AND((+ (rt0.c1)))))OR(((((rt0.c0)OR(rt0.c4)))OR(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN (((NULL) IS TRUE), ((vt0.c1)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN (((NULL) IS TRUE), ((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN (((NULL) IS TRUE), ((vt0.c1)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN (((NULL) IS TRUE), ((vt0.c1)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END IN (((NULL) IS TRUE), ((vt0.c1)<=(vt0.c1)))));
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL * FROM rt0, rt1, vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN (rt1.c1))) ORDER BY ((rt1.c1 IN ()) IN ())  NULLS LAST, (((((rt1.c1)IS(rt1.c0))))>((CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS BLOB) IN (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN ()) IN ())  NULLS LAST, (((((rt1.c1)IS(rt1.c0))))>((CAST(rt1.c2 AS BLOB)))));
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN (rt1.c1))) ORDER BY ((rt1.c1 IN ()) IN ())  NULLS LAST, (((((rt1.c1)IS(rt1.c0))))>((CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS BLOB) IN (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 IN ()) IN ())  NULLS LAST, (((((rt1.c1)IS(rt1.c0))))>((CAST(rt1.c2 AS BLOB)))));
SELECT ALL * FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN (rt1.c1))) ORDER BY ((rt1.c1 IN ()) IN ())  NULLS LAST, (((((rt1.c1)IS(rt1.c0))))>((CAST(rt1.c2 AS BLOB))));
SELECT ALL * FROM rt1 WHERE (((CASE x'4d37'  WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'4d37'  WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE x'4d37'  WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x'4d37'  WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE x'4d37'  WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c0)));
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c3);
SELECT * FROM rt0 WHERE (((0.3659724968107866)-((rt0.c1 IN ())))) ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS FIRST, LTRIM(rt0.c2, (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c4, '_K෰N(T')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3659724968107866)-((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS FIRST, LTRIM(rt0.c2, (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c4, '_K෰N(T')))) DESC);
SELECT * FROM rt0 WHERE (((0.3659724968107866)-((rt0.c1 IN ())))) ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS FIRST, LTRIM(rt0.c2, (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c4, '_K෰N(T')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3659724968107866)-((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS FIRST, LTRIM(rt0.c2, (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c4, '_K෰N(T')))) DESC);
SELECT * FROM rt0 WHERE (((0.3659724968107866)-((rt0.c1 IN ())))) ORDER BY (NOT (((rt0.c3) NOTNULL))) DESC  NULLS FIRST, LTRIM(rt0.c2, (((rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c4, '_K෰N(T')))) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)+(rt1.c1)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)+(rt1.c1)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)+(rt1.c1)) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c2 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)+(rt1.c1)) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE (rt1.c2 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)+(rt1.c1)) ELSE (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (LOWER(DISTINCT (~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (~ (rt0.c2)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (LOWER(DISTINCT (~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (~ (rt0.c2)))) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT ALL COUNT(*) FROM rt0, rt1, vt0 WHERE (LOWER(DISTINCT (~ (rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN ())) ORDER BY CAST((+ (vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1 ORDER BY CAST((+ (vt0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN ())) ORDER BY CAST((+ (vt0.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, rt1 ORDER BY CAST((+ (vt0.c0)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN ())) ORDER BY CAST((+ (vt0.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE 0.5529707151007652 END)) AND ((((rt0.c4) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE 0.5529707151007652 END)) AND ((((rt0.c4) ISNULL))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE 0.5529707151007652 END)) AND ((((rt0.c4) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE 0.5529707151007652 END)) AND ((((rt0.c4) ISNULL))))) IS TRUE)  as count FROM rt1, vt0, rt0);
SELECT COUNT(*) FROM rt1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 ELSE 0.5529707151007652 END)) AND ((((rt0.c4) ISNULL)))));
SELECT * FROM rt1 WHERE (x'f0c2') ORDER BY (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'f0c2') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1))))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (x'f0c2') ORDER BY (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'f0c2') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1))))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (x'f0c2') ORDER BY (((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))))<=((((((rt1.c2)AND(rt1.c0)))OR(rt1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2) BETWEEN (x'3052') AND (rt1.c1)) COLLATE NOCASE) ORDER BY MIN((('425113012') NOT NULL), (NOT (x'')), TRIM(DISTINCT rt1.c0), ((0Xffffffff867d876c)+(rt0.c1))) ASC, ((rt1.c1) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (x'3052') AND (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY MIN((('425113012') NOT NULL), (NOT (x'')), TRIM(DISTINCT rt1.c0), ((0Xffffffff867d876c)+(rt0.c1))) ASC, ((rt1.c1) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2) BETWEEN (x'3052') AND (rt1.c1)) COLLATE NOCASE) ORDER BY MIN((('425113012') NOT NULL), (NOT (x'')), TRIM(DISTINCT rt1.c0), ((0Xffffffff867d876c)+(rt0.c1))) ASC, ((rt1.c1) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (x'3052') AND (rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY MIN((('425113012') NOT NULL), (NOT (x'')), TRIM(DISTINCT rt1.c0), ((0Xffffffff867d876c)+(rt0.c1))) ASC, ((rt1.c1) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (((rt0.c2) BETWEEN (x'3052') AND (rt1.c1)) COLLATE NOCASE) ORDER BY MIN((('425113012') NOT NULL), (NOT (x'')), TRIM(DISTINCT rt1.c0), ((0Xffffffff867d876c)+(rt0.c1))) ASC, ((rt1.c1) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (rt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((+ (0.9276226653038828))) WHERE (((((((rt1.c2)AND(vt0.c1)))AND(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(vt0.c1)))AND(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((+ (0.9276226653038828))));
SELECT ALL * FROM rt1, vt0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((+ (0.9276226653038828))) WHERE (((((((rt1.c2)AND(vt0.c1)))AND(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(vt0.c1)))AND(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((+ (0.9276226653038828))));
SELECT ALL * FROM rt1, vt0 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET((+ (0.9276226653038828))) WHERE (((((((rt1.c2)AND(vt0.c1)))AND(rt0.c4))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((ABS(rt1.c1))==(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) ORDER BY ((json_quote(rt0.c4)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (0X4eb4cbca) AND (rt0.c0))) AND ((('') BETWEEN (rt1.c2) AND (vt0.c0)))), ((- (rt0.c3)) IN ()) ASC  NULLS FIRST, x'2fa1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))=(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((json_quote(rt0.c4)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (0x4eb4cbca) AND (rt0.c0))) AND ((('') BETWEEN (rt1.c2) AND (vt0.c0)))), ((- (rt0.c3)) IN ()) ASC  NULLS FIRST, x'2fa1'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((ABS(rt1.c1))==(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) ORDER BY ((json_quote(rt0.c4)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (0X4eb4cbca) AND (rt0.c0))) AND ((('') BETWEEN (rt1.c2) AND (vt0.c0)))), ((- (rt0.c3)) IN ()) ASC  NULLS FIRST, x'2fa1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(rt1.c1))=(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY ((json_quote(rt0.c4)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (0x4eb4cbca) AND (rt0.c0))) AND ((('') BETWEEN (rt1.c2) AND (vt0.c0)))), ((- (rt0.c3)) IN ()) ASC  NULLS FIRST, x'2fa1'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, rt0 WHERE (((ABS(rt1.c1))==(CASE rt1.c1  WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c1 THEN rt1.c1 WHEN rt0.c3 THEN rt0.c3 ELSE NULL END))) ORDER BY ((json_quote(rt0.c4)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (0X4eb4cbca) AND (rt0.c0))) AND ((('') BETWEEN (rt1.c2) AND (vt0.c0)))), ((- (rt0.c3)) IN ()) ASC  NULLS FIRST, x'2fa1'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND (((- (rt0.c2)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '' END))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND (((- (rt0.c2)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '' END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '' END))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND (((- (rt0.c2)))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) ISNULL))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '' END)));
SELECT * FROM rt1, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((NOT (x'')));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(((rt0.c2)<(rt0.c4)))))AND(((rt0.c4)AND(rt0.c0))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM ASC, ((json_array(rt0.c2, rt0.c2)) BETWEEN (((((((((((((-1.528699729E9)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) AND (((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt0.c1)))AND(((rt0.c2)<(rt0.c4)))))AND(((rt0.c4)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM ASC, ((json_array(rt0.c2, rt0.c2)) BETWEEN (((((((((((((-1.528699729E9)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) AND (((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(x''))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(((rt0.c2)<(rt0.c4)))))AND(((rt0.c4)AND(rt0.c0))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM ASC, ((json_array(rt0.c2, rt0.c2)) BETWEEN (((((((((((((-1.528699729E9)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) AND (((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)>=(rt0.c1)))AND(((rt0.c2)<(rt0.c4)))))AND(((rt0.c4)AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM ASC, ((json_array(rt0.c2, rt0.c2)) BETWEEN (((((((((((((-1.528699729E9)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) AND (((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(x''))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)>=(rt0.c1)))AND(((rt0.c2)<(rt0.c4)))))AND(((rt0.c4)AND(rt0.c0))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM ASC, ((json_array(rt0.c2, rt0.c2)) BETWEEN (((((((((((((-1.528699729E9)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1))) AND (((((((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(x''))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TYPEOF(DISTINCT 0.041769163791605)) ORDER BY CASE WHEN ((rt0.c2)-(vt0.c1)) THEN vt0.c1 END DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.041769163791605)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN ((rt0.c2)-(vt0.c1)) THEN vt0.c1 END DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TYPEOF(DISTINCT 0.041769163791605)) ORDER BY CASE WHEN ((rt0.c2)-(vt0.c1)) THEN vt0.c1 END DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 0.041769163791605)) IS TRUE)  as count FROM rt0, vt0, rt1 ORDER BY CASE WHEN ((rt0.c2)-(vt0.c1)) THEN vt0.c1 END DESC  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (TYPEOF(DISTINCT 0.041769163791605)) ORDER BY CASE WHEN ((rt0.c2)-(vt0.c1)) THEN vt0.c1 END DESC  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((0.08634720844395061)!=(rt0.c0)))OR(vt0.c1)))AND(((rt0.c1)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.08634720844395061)!=(rt0.c0)))OR(vt0.c1)))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((0.08634720844395061)!=(rt0.c0)))OR(vt0.c1)))AND(((rt0.c1)||(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.08634720844395061)!=(rt0.c0)))OR(vt0.c1)))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((0.08634720844395061)!=(rt0.c0)))OR(vt0.c1)))AND(((rt0.c1)||(rt0.c0)))));
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))) AS TEXT));
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN NULL THEN '-2008805869' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2) ISNULL)  WHEN NULL THEN '-2008805869' END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN NULL THEN '-2008805869' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2) ISNULL)  WHEN NULL THEN '-2008805869' END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c2) ISNULL)  WHEN NULL THEN '-2008805869' END);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)>>(rt1.c1))))) ORDER BY (((rt1.c2 IN ())) NOT NULL), (((((rt1.c1))>=((rt1.c2))))>=((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) NOT NULL), (((((rt1.c1))>=((rt1.c2))))>=((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)>>(rt1.c1))))) ORDER BY (((rt1.c2 IN ())) NOT NULL), (((((rt1.c1))>=((rt1.c2))))>=((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)>>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN ())) NOT NULL), (((((rt1.c1))>=((rt1.c2))))>=((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)>>(rt1.c1))))) ORDER BY (((rt1.c2 IN ())) NOT NULL), (((((rt1.c1))>=((rt1.c2))))>=((((rt1.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) BETWEEN (1930164075) AND (rt1.c0)))AND(((vt0.c0) NOT BETWEEN (x'9687') AND (rt1.c1)))))AND(LIKELIHOOD(rt1.c2, 0.025368101919399533))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (1930164075) AND (rt1.c0)))AND(((vt0.c0) NOT BETWEEN (x'9687') AND (rt1.c1)))))AND(LIKELIHOOD(rt1.c2, 0.025368101919399533)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) BETWEEN (1930164075) AND (rt1.c0)))AND(((vt0.c0) NOT BETWEEN (x'9687') AND (rt1.c1)))))AND(LIKELIHOOD(rt1.c2, 0.025368101919399533))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) BETWEEN (1930164075) AND (rt1.c0)))AND(((vt0.c0) NOT BETWEEN (x'9687') AND (rt1.c1)))))AND(LIKELIHOOD(rt1.c2, 0.025368101919399533)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((rt1.c1) BETWEEN (1930164075) AND (rt1.c0)))AND(((vt0.c0) NOT BETWEEN (x'9687') AND (rt1.c1)))))AND(LIKELIHOOD(rt1.c2, 0.025368101919399533))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY GLOB(0X320ec92f, ((rt1.c1)IS(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY GLOB(0x320ec92f, ((rt1.c1)IS(rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY GLOB(0X320ec92f, ((rt1.c1)IS(rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY GLOB(0x320ec92f, ((rt1.c1)IS(rt1.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY GLOB(0X320ec92f, ((rt1.c1)IS(rt1.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-1110938189')&(vt0.c0))))<((((vt0.c1)IS NOT(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('-1110938189')&(vt0.c0))))<((((vt0.c1)IS NOT(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-1110938189')&(vt0.c0))))<((((vt0.c1)IS NOT(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('-1110938189')&(vt0.c0))))<((((vt0.c1)IS NOT(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-1110938189')&(vt0.c0))))<((((vt0.c1)IS NOT(vt0.c1))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c3)>(vt0.c1))))) ORDER BY '1301969934'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1301969934'  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c3)>(vt0.c1))))) ORDER BY '1301969934'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c3)>(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1301969934'  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((rt0.c3)>(vt0.c1))))) ORDER BY '1301969934'  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY '-O^掍j)/]' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY '-O^掍j)/]' DESC);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY '-O^掍j)/]' DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY '-O^掍j)/]' DESC);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE BINARY ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY '-O^掍j)/]' DESC;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((('')OR('')))OR(rt0.c1))) NOT NULL) WHERE (((((CAST(1180646989 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(json_insert(rt0.c0, rt1.c0, rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (rt0.c1) AND (rt1.c0)) DESC, ((((((((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((NOT (rt0.c0)))))AND(-1815387547)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0)/(rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(1180646989 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(json_insert(rt0.c0, rt1.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((('')OR('')))OR(rt0.c1))) NOT NULL) ORDER BY ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (rt0.c1) AND (rt1.c0)) DESC, ((((((((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((NOT (rt0.c0)))))AND(-1815387547)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0)/(rt0.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((('')OR('')))OR(rt0.c1))) NOT NULL) WHERE (((((CAST(1180646989 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(json_insert(rt0.c0, rt1.c0, rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (rt0.c1) AND (rt1.c0)) DESC, ((((((((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((NOT (rt0.c0)))))AND(-1815387547)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0)/(rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(1180646989 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(json_insert(rt0.c0, rt1.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((('')OR('')))OR(rt0.c1))) NOT NULL) ORDER BY ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (rt0.c1) AND (rt1.c0)) DESC, ((((((((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((NOT (rt0.c0)))))AND(-1815387547)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0)/(rt0.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((('')OR('')))OR(rt0.c1))) NOT NULL) WHERE (((((CAST(1180646989 AS TEXT))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(json_insert(rt0.c0, rt1.c0, rt0.c2)))) ORDER BY ((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (rt0.c1) AND (rt1.c0)) DESC, ((((((((((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND((NOT (rt0.c0)))))AND(-1815387547)))AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0)/(rt0.c4)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (0x2279e432) ORDER BY ((rt1.c2 IN ()) IN ()) ASC, CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN 0.34142410963955927 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END AS BLOB), rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0x2279e432) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2 IN ()) IN ()) ASC, CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN 0.34142410963955927 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END AS BLOB), rt1.c0 DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0x2279e432) ORDER BY ((rt1.c2 IN ()) IN ()) ASC, CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN 0.34142410963955927 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END AS BLOB), rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0x2279e432) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c2 IN ()) IN ()) ASC, CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN 0.34142410963955927 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END AS BLOB), rt1.c0 DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (0x2279e432) ORDER BY ((rt1.c2 IN ()) IN ()) ASC, CAST(CASE WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c1 THEN 0.34142410963955927 WHEN rt1.c2 THEN vt0.c1 ELSE vt0.c1 END AS BLOB), rt1.c0 DESC;
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN '' ELSE rt1.c1 END) BETWEEN (vt0.c1) AND (CASE WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 END))) ORDER BY (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt1.c1)|(NULL))) AND (0.3659724968107866)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN '' ELSE rt1.c1 END) BETWEEN (vt0.c1) AND (CASE WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt1.c1)|(NULL))) AND (0.3659724968107866)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN '' ELSE rt1.c1 END) BETWEEN (vt0.c1) AND (CASE WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 END))) ORDER BY (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt1.c1)|(NULL))) AND (0.3659724968107866)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN '' ELSE rt1.c1 END) BETWEEN (vt0.c1) AND (CASE WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt0, rt1 ORDER BY (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt1.c1)|(NULL))) AND (0.3659724968107866)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, rt1 WHERE (((CASE WHEN rt0.c2 THEN '' ELSE rt1.c1 END) BETWEEN (vt0.c1) AND (CASE WHEN vt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt1.c1 END))) ORDER BY (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) BETWEEN (((rt1.c1)|(NULL))) AND (0.3659724968107866)) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE (TIME(NULL, ((rt0.c4)&(rt1.c1)), ((rt0.c4)%(rt1.c0)))) ORDER BY ((NULL)IS(rt1.c1 COLLATE BINARY))  NULLS FIRST, TRIM(DISTINCT (- (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((TIME(NULL, ((rt0.c4)&(rt1.c1)), ((rt0.c4)%(rt1.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED NATURAL JOIN rt1 ORDER BY ((NULL)IS(rt1.c1 COLLATE BINARY))  NULLS FIRST, TRIM(DISTINCT (- (rt0.c0))) DESC);
SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE (TIME(NULL, ((rt0.c4)&(rt1.c1)), ((rt0.c4)%(rt1.c0)))) ORDER BY ((NULL)IS(rt1.c1 COLLATE BINARY))  NULLS FIRST, TRIM(DISTINCT (- (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((TIME(NULL, ((rt0.c4)&(rt1.c1)), ((rt0.c4)%(rt1.c0)))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED NATURAL JOIN rt1 ORDER BY ((NULL)IS(rt1.c1 COLLATE BINARY))  NULLS FIRST, TRIM(DISTINCT (- (rt0.c0))) DESC);
SELECT * FROM vt0, rt0 NATURAL JOIN rt1 WHERE (TIME(NULL, ((rt0.c4)&(rt1.c1)), ((rt0.c4)%(rt1.c0)))) ORDER BY ((NULL)IS(rt1.c1 COLLATE BINARY))  NULLS FIRST, TRIM(DISTINCT (- (rt0.c0))) DESC;
SELECT * FROM rt1, vt0 WHERE (0.19825340527072288) ORDER BY ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>((CAST(rt1.c2 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.19825340527072288) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>((CAST(rt1.c2 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (0.19825340527072288) ORDER BY ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>((CAST(rt1.c2 AS TEXT)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.19825340527072288) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>((CAST(rt1.c2 AS TEXT)))) ASC  NULLS FIRST);
SELECT * FROM rt1, vt0 WHERE (0.19825340527072288) ORDER BY ((((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))>((CAST(rt1.c2 AS TEXT)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c4)) THEN LIKE(rt0.c3, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c4)) THEN LIKE(rt0.c3, rt0.c1) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c4)) THEN LIKE(rt0.c3, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (rt0.c0 IN (rt0.c4)) THEN LIKE(rt0.c3, rt0.c1) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN ())) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c4)) THEN LIKE(rt0.c3, rt0.c1) END;
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c2) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, rt1);
SELECT ALL COUNT(*) FROM rt0, vt0, rt1 WHERE (CAST(((rt0.c2) ISNULL) AS NUMERIC));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c4)))OR(rt1.c0))) IS TRUE) WHERE (NULL) ORDER BY (((((rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt0.c4, rt0.c3, rt1.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt1.c1, '969976979'))))-(RTRIM(''))) ASC, (((((((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c4))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END)))AND((NOT (rt0.c3)))))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c4)))OR(rt1.c0))) IS TRUE) ORDER BY (((((rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt0.c4, rt0.c3, rt1.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt1.c1, '969976979'))))-(RTRIM(''))) ASC, (((((((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c4))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END)))AND((NOT (rt0.c3)))))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1))))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c4)))OR(rt1.c0))) IS TRUE) WHERE (NULL) ORDER BY (((((rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt0.c4, rt0.c3, rt1.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt1.c1, '969976979'))))-(RTRIM(''))) ASC, (((((((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c4))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END)))AND((NOT (rt0.c3)))))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c4)))OR(rt1.c0))) IS TRUE) ORDER BY (((((rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt0.c4, rt0.c3, rt1.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt1.c1, '969976979'))))-(RTRIM(''))) ASC, (((((((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c4))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END)))AND((NOT (rt0.c3)))))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1))))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c4)))OR(rt1.c0))) IS TRUE) WHERE (NULL) ORDER BY (((((rt1.c2, rt0.c3, rt1.c1, rt0.c1, rt1.c2)) BETWEEN ((rt1.c1, rt0.c4, rt0.c3, rt1.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2, rt1.c1, '969976979'))))-(RTRIM(''))) ASC, (((((((((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c4))))OR(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END)))AND((NOT (rt0.c3)))))AND(((((rt0.c4)AND(rt0.c0)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c0) IS TRUE))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((rt0.c1) IS TRUE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c0) IS TRUE))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c1) IS TRUE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c0) IS TRUE))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((rt0.c1) IS TRUE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c0) IS TRUE))))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT ((rt0.c1) IS TRUE)) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))OR(((rt0.c0) IS TRUE))))AND(rt0.c1 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((rt0.c1) IS TRUE)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((x'')OR(rt0.c3)))AND(rt0.c4)) THEN (NOT (rt0.c3)) ELSE 0.2757192688574943 COLLATE RTRIM END) ORDER BY ((((x'cc36') IS FALSE)) BETWEEN ((((rt0.c1)) BETWEEN ((0.3801734287226065)) AND ((rt0.c4)))) AND ((((rt0.c2, rt0.c2, x''))<>((rt0.c0, rt0.c3, rt0.c4))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((x'')OR(rt0.c3)))AND(rt0.c4)) THEN (NOT (rt0.c3)) ELSE 0.2757192688574943 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY ((((x'cc36') IS FALSE)) BETWEEN ((((rt0.c1)) BETWEEN ((0.3801734287226065)) AND ((rt0.c4)))) AND ((((rt0.c2, rt0.c2, x''))<>((rt0.c0, rt0.c3, rt0.c4))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((x'')OR(rt0.c3)))AND(rt0.c4)) THEN (NOT (rt0.c3)) ELSE 0.2757192688574943 COLLATE RTRIM END) ORDER BY ((((x'cc36') IS FALSE)) BETWEEN ((((rt0.c1)) BETWEEN ((0.3801734287226065)) AND ((rt0.c4)))) AND ((((rt0.c2, rt0.c2, x''))<>((rt0.c0, rt0.c3, rt0.c4))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((x'')OR(rt0.c3)))AND(rt0.c4)) THEN (NOT (rt0.c3)) ELSE 0.2757192688574943 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY ((((x'cc36') IS FALSE)) BETWEEN ((((rt0.c1)) BETWEEN ((0.3801734287226065)) AND ((rt0.c4)))) AND ((((rt0.c2, rt0.c2, x''))<>((rt0.c0, rt0.c3, rt0.c4))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((x'')OR(rt0.c3)))AND(rt0.c4)) THEN (NOT (rt0.c3)) ELSE 0.2757192688574943 COLLATE RTRIM END) ORDER BY ((((x'cc36') IS FALSE)) BETWEEN ((((rt0.c1)) BETWEEN ((0.3801734287226065)) AND ((rt0.c4)))) AND ((((rt0.c2, rt0.c2, x''))<>((rt0.c0, rt0.c3, rt0.c4))))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c1)))OR(1.66677168E9)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c1)))OR(1.66677168E9)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c1)))OR(1.66677168E9)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c1)))OR(1.66677168E9)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, vt0);
SELECT * FROM rt0, rt1, vt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c1)))OR(1.66677168E9)) COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (((((rt1.c1)||(rt1.c2)))-(RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c2)))-(RTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (((((rt1.c1)||(rt1.c2)))-(RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c2)))-(RTRIM(vt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON NULL);
SELECT * FROM vt0 CROSS JOIN rt1 ON NULL WHERE (((((rt1.c1)||(rt1.c2)))-(RTRIM(vt0.c1))));
SELECT ALL * FROM rt1 WHERE ((((CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c0 END))<>((('qS)鲔Jv' IN (rt1.c1)))))) ORDER BY (- (COALESCE(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c0 END))<>((('qS)鲔Jv' IN (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (- (COALESCE(rt1.c1, rt1.c2))));
SELECT ALL * FROM rt1 WHERE ((((CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c0 END))<>((('qS)鲔Jv' IN (rt1.c1)))))) ORDER BY (- (COALESCE(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c0 END))<>((('qS)鲔Jv' IN (rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY (- (COALESCE(rt1.c1, rt1.c2))));
SELECT ALL * FROM rt1 WHERE ((((CASE rt1.c0  WHEN x'' THEN rt1.c0 ELSE rt1.c0 END))<>((('qS)鲔Jv' IN (rt1.c1)))))) ORDER BY (- (COALESCE(rt1.c1, rt1.c2)));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '', (((('OXW~61t') BETWEEN (vt0.c0) AND (rt0.c1)))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY '', (((('OXW~61t') BETWEEN (vt0.c0) AND (rt0.c1)))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '', (((('OXW~61t') BETWEEN (vt0.c0) AND (rt0.c1)))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY '', (((('OXW~61t') BETWEEN (vt0.c0) AND (rt0.c1)))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY '', (((('OXW~61t') BETWEEN (vt0.c0) AND (rt0.c1)))OR(rt0.c2 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOTNULL)))) ORDER BY ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (vt0.c1));
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x25140df7);
SELECT SUM(count) FROM (SELECT ALL ((0X25140df7) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x25140df7);
SELECT SUM(count) FROM (SELECT ALL ((0X25140df7) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0x25140df7);
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(rt1.c0)) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER)  NULLS FIRST, ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((((rt1.c2))>((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER)  NULLS FIRST, ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((((rt1.c2))>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(rt1.c0)) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER)  NULLS FIRST, ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((((rt1.c2))>((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0)) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER)  NULLS FIRST, ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((((rt1.c2))>((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (ABS(rt1.c0)) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER)  NULLS FIRST, ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c0))) BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((((rt1.c2))>((rt1.c1)))));
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1 IN (rt1.c0))) BETWEEN (0.6149984923489464) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c0))) BETWEEN (0.6149984923489464) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1 IN (rt1.c0))) BETWEEN (0.6149984923489464) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1 IN (rt1.c0))) BETWEEN (0.6149984923489464) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt0, rt1 NATURAL JOIN rt0 WHERE ((((rt1.c1 IN (rt1.c0))) BETWEEN (0.6149984923489464) AND (((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('1979416538')))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('1979416538')))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('1979416538')))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('1979416538')))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c1) NOTNULL))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END)))OR(((((((((rt0.c1)AND(rt0.c3)))OR('1979416538')))AND(rt0.c2)))AND(rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT * FROM rt1 WHERE ((((((rt1.c1))<=((rt1.c2))))AND('-581768538'))) ORDER BY HEX(DISTINCT (rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))<=((rt1.c2))))AND('-581768538'))) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT (rt1.c2 IN ())));
SELECT * FROM rt1 WHERE ((((((rt1.c1))<=((rt1.c2))))AND('-581768538'))) ORDER BY HEX(DISTINCT (rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))<=((rt1.c2))))AND('-581768538'))) IS TRUE)  as count FROM rt1 ORDER BY HEX(DISTINCT (rt1.c2 IN ())));
SELECT * FROM rt1 WHERE ((((((rt1.c1))<=((rt1.c2))))AND('-581768538'))) ORDER BY HEX(DISTINCT (rt1.c2 IN ()));
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt1.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))  WHEN TRIM(rt1.c0, vt0.c0) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (((x'')) BETWEEN (((((rt1.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c1, vt0.c0))))) AND ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))  WHEN TRIM(rt1.c0, vt0.c0) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((x'')) BETWEEN (((((rt1.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c1, vt0.c0))))) AND ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ASC);
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt1.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))  WHEN TRIM(rt1.c0, vt0.c0) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (((x'')) BETWEEN (((((rt1.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c1, vt0.c0))))) AND ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))  WHEN TRIM(rt1.c0, vt0.c0) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt1, rt0 ORDER BY (((x'')) BETWEEN (((((rt1.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c1, vt0.c0))))) AND ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ASC);
SELECT * FROM vt0, rt1, rt0 WHERE (CASE ((rt1.c1) NOT BETWEEN (vt0.c1) AND (rt1.c0))  WHEN TRIM(rt1.c0, vt0.c0) THEN rt0.c1 COLLATE NOCASE END) ORDER BY (((x'')) BETWEEN (((((rt1.c1, rt0.c3, rt0.c0))>=((rt0.c3, rt0.c1, vt0.c0))))) AND ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (- (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN rt1 ON NULLIF(DISTINCT (vt0.c0 IN ()), rt0.c4) WHERE ((- (CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END))) ORDER BY CASE ((rt1.c0)OR(rt0.c0))  WHEN CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN rt1 ON NULLIF(DISTINCT (vt0.c0 IN ()), rt0.c4) ORDER BY CASE ((rt1.c0)OR(rt0.c0))  WHEN CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (- (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN rt1 ON NULLIF(DISTINCT (vt0.c0 IN ()), rt0.c4) WHERE ((- (CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END))) ORDER BY CASE ((rt1.c0)OR(rt0.c0))  WHEN CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN rt1 ON NULLIF(DISTINCT (vt0.c0 IN ()), rt0.c4) ORDER BY CASE ((rt1.c0)OR(rt0.c0))  WHEN CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (- (((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FULL OUTER JOIN rt1 ON NULLIF(DISTINCT (vt0.c0 IN ()), rt0.c4) WHERE ((- (CASE rt0.c4  WHEN rt0.c3 THEN rt1.c0 END))) ORDER BY CASE ((rt1.c0)OR(rt0.c0))  WHEN CASE rt0.c0  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c4 WHEN vt0.c0 THEN vt0.c0 END THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) END  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS FALSE) WHERE ((((0.8581763448607594))<=((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((0.8581763448607594))<=((rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS FALSE));
SELECT * FROM rt1 INNER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS FALSE) WHERE ((((0.8581763448607594))<=((rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((0.8581763448607594))<=((rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS FALSE));
SELECT * FROM rt1 INNER JOIN vt0 ON ((SQLITE_COMPILEOPTION_GET(vt0.c0)) IS FALSE) WHERE ((((0.8581763448607594))<=((rt1.c1))));
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((x'')IS NOT(rt1.c0)) THEN (NOT (x'3d9e')) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((x'')IS NOT(rt1.c0)) THEN (NOT (x'3d9e')) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((x'')IS NOT(rt1.c0)) THEN (NOT (x'3d9e')) ELSE rt1.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((x'')IS NOT(rt1.c0)) THEN (NOT (x'3d9e')) ELSE rt1.c2 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CAST(rt1.c2 AS NUMERIC)  WHEN ((x'')IS NOT(rt1.c0)) THEN (NOT (x'3d9e')) ELSE rt1.c2 END);
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(rt1.c1 COLLATE NOCASE AS NUMERIC));
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN ('1373484831') AND (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)-(vt0.c0)) END  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((- (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN ('1373484831') AND (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)-(vt0.c0)) END  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((- (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN ('1373484831') AND (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)-(vt0.c0)) END  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((- (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN ('1373484831') AND (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)-(vt0.c0)) END  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((- (vt0.c1))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<((+ (vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(vt0.c0)) THEN ((vt0.c0)||(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN ('1373484831') AND (vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)-(vt0.c0)) END  NULLS FIRST, (((vt0.c0)) BETWEEN ((((vt0.c0)||(vt0.c0)))) AND (((- (vt0.c1))))) ASC;
