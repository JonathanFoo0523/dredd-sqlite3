-- Time: 2024/06/09 20:20:44
-- Database: database47
-- Database version: 3.40.0
-- seed value: 2404518247
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, compress=likely, uncompress=likely); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.052258894730004335 WHERE NULL; -- 0ms;
UPDATE vt0 SET c1=x'' WHERE NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='oX'; -- 0ms;
UPDATE vt0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.932376962108322 WHERE ((((vt0.c1)>(vt0.c0)))IS(((vt0.c1) ISNULL))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=620656878,8');\n; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, tokenize = "porter ascii"); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1873234187 sz=620656878 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '935695241 -1136438059 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'c21e')<=(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.9230832851305832)))IS NOT(COALESCE(DISTINCT -1889935764, 0.7453509824246362))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-455409909')) BETWEEN (((('R')<>(x'')))) AND (((('') BETWEEN (x'') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=935695241'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ('' IN ()), ((x'')+(x'5da9'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xfffffffffbbac7d0)||('-455409909')))||(((NULL)+(989043066)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))<=((CAST(0.01307718367086197 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1204117084') NOT NULL) COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1204117084 2 sz=-1889935764'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '633388417'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1204117084 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1889935764) BETWEEN ('-1136438059') AND (1204117084)))=(TRIM(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('Bm')AND(6.33388417E8)))AND(6.20656878E8)))AND(x'eb49')))OR(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1136438059 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1873234187 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-455409909')AND(0.01307718367086197)))OR(NULL)) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-71645232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULLIF(DISTINCT 'G', x'8fae') THEN (((('1204117084')AND(-1.136438059E9)))AND(-1170415252)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.43634712545831145)AND(0.6877404640692505)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1335698731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-879377583'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2145211885 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=758956299 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1873234187 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('989043066')||(0xffffffffe356c270)) THEN (('-71645232') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=620656878 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=176471090'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-480853392)OR('109898422')))AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4081291410807151; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '633388417' THEN '109898422' END)OR(LIKELY(DISTINCT x''))))AND(((0.401998934596263)=(-1205370462)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-7.1645232E7)<=('935695241'))  WHEN ((((x'6920')OR(6.33388417E8)))OR(0.4081291410807151)) THEN (((('-997837006')OR(0.5491209894343088)))OR(0.46152862284358853)) ELSE (('	8GEafKG?')AND('U')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.42869545917471275 IN ()), x'' COLLATE NOCASE, (('-cU~mS52') BETWEEN (NULL) AND ('109898422'))))<=((CAST(x'fd1d' AS NUMERIC), (((('109898422')OR(0.9483749664032783)))OR(0.5016911121109648)), ('109898422' IN ('-1608195388'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1897040343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1040681806'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2145211885 sz=-1375102010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9838946458609387; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=989043066'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1611773515'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=758956299'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1112876316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1464487449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-cU~mS52'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-305837539'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1391431088'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1873234187')) NOT BETWEEN (((~ ('')))) AND ((((((0Xffffffffe4daff0b)OR('bNg)N')))AND(0.07793285313587028))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-388148728) NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 1611773515 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-197536213 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '<]' COLLATE NOCASE  WHEN (('K|＋/Z')|('')) THEN ((0.47827172831951714)AND('[>텂')) ELSE x'' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.11495819494992743 AS TEXT))AND(UNLIKELY(NULL))))OR((x'' IN (-721088683)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-212945584 -269429048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1996828350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '633388417 393846221 sz=154832623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1328304018 0 sz=1581669347 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=('935695241')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1091261772 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1112876316 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-269429048 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1863483009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-721088683 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.3818310061708068, 0.3357412185289701, '-1136438059'))<=((NULL, NULL, x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('v\r') NOT BETWEEN (0.47827172831951714) AND (0Xffffffffc4863732)) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (json_valid(958649475))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (((x'') NOT BETWEEN (NULL) AND (x'c433'))) AND ((('W!')<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1392974670 unordered'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1637754938'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8093992304658059; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1075130532 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((((((0.30501945434947353)AND('1657437012')))AND('-2021662123')))OR('-269429048')))AND(NULL)))AND(154832623)))OR(x''))  WHEN (('-2021662123')<=(-1.99682835E9)) THEN ((0Xffffffffbc4354d5) ISNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1328604004'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1667510958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<=((x''))) IN (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-707179549)IS('g8'))))==((((x'')=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-244867785 sz=-71645232 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-595931498 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1957235689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-12550834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT('g')))IS NOT(((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1091261772'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=189455428 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5791575784087991 AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-12550834 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1772653437'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1147487739'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1998256195 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1477531589 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-494735239 sz=-549627195 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2031662745') ISNULL)) NOT BETWEEN (0.7453509824246362 COLLATE NOCASE) AND ('b%Y^LN')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-907565254'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1912646155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL)) BETWEEN ((0.29163313486916775 IN ())) AND (((0x52ef8db0)&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x451854d IN (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL, 6.20656878E8, NULL))>(('1e500', x'3a7f', '5w'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'73fe'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=901508094 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((-273158242)OR(1.863483009E9)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-pK*A*X') IS FALSE) THEN ((((NULL)AND(x'')))OR(x'')) ELSE CASE -2.021662123E9  WHEN 109898422 THEN x'' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1608195388 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 364868088 sz=-721088683 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (x'2854') AND (0.43634712545831145)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1950333228 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 -1170415252 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN NULL THEN 'v\r' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1989487765 sz=-455409909 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '935695241 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'7b047b46')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(NULL)))AND(-1.7976931348623157E308)))AND(x'fcef')))OR(0.7317123268482795))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1047446656 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-494856092 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1667510958 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 sz=546893699 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=935695241 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1204117084' THEN '0.42869545917471275' END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1691222851 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('4K')OR(NULL)))AND(0.13382460125522755)) IN ((('y>襔+9}~cA')-(NULL)), CAST(0.1472127516777596 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1136438059 sz=-264567431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 604119256 sz=1015473490 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('-455409909') AND (NULL)))OR((('\n&!')<('D')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1655368981 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1464487449'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(x''))) BETWEEN (((NULL) NOTNULL)) AND (((0.3925185081089523) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-879377583 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1266726595 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1091261772 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1729184252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1074800568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1639463578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '224371854 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (((NULL))<((830907419))), (+ ('4o'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1909096834 1253871282'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-244867785 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2034603973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.09783488253359296))==((0.8123755061753157)))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL(NULL, '1015473490') IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1836854771 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)>=('-305837539')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '920668867 sz=1435734484 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1464487449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-496590486'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3323985084697312 COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4552948727757177) NOTNULL))IS((('1772653437') NOT BETWEEN ('') AND (0Xffffffffc5593365)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1993019589 2 sz=-494735239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=609347060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1355158232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((0.41261115310704144)OR(x'')))AND('')))OR(0.9272075527076379)))OR(NULL)) THEN (((0x562e6def)) NOT BETWEEN ((x'')) AND ((NULL))) ELSE CAST(NULL AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(x''))/(('' IN (-427907376)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0.9978466429705851)<=('')), (+ (-71645232))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(DISTINCT x'b94e')  WHEN 0X67bfbc98 COLLATE BINARY THEN ((x'') IS TRUE) WHEN ((((((((((((0x6464ab60)AND(NULL)))OR('\n&!')))AND(x'3334')))OR('1548850909')))AND('pO')))AND(NULL)) THEN ')t' WHEN (NULL IN ()) THEN NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE NULL  WHEN 609347060 THEN x'' WHEN NULL THEN NULL WHEN x'' THEN '-421837943' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'3241' IN ()))||(CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7819718078281881 AS BLOB))<<((((-1.091261772E9, NULL, x'')) BETWEEN (('901508094', x'3b33', 0.8823791318280293)) AND ((NULL, x'', 'F*ads\n	N'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-427907376 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1464487449 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1081100119 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'd009') BETWEEN (NULL) AND ('1943101219')))OR((+ ('(彇GO~O{')))))OR((((NULL, 3.64868088E8, NULL)) NOT BETWEEN (('1335698731', x'e98f', 72451405)) AND (('2031662745', '', 0.057383144347544324))))))OR(((1.772653437E9) NOT BETWEEN ('2145211885') AND ('c>')))))AND(IFNULL(DISTINCT 0.9864299703601435, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1609542877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=633388417 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-455409909 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((NULL)OR(x'db99')))AND('b%y^ln')))AND(x'')))AND(0.8584795225771239)))AND(x'')))OR(0.3835779482582409)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-291301661 sz=-1695881116'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6555184743815944 THEN '979542164' WHEN NULL THEN 0.7074039019619319 WHEN '272406694' THEN '758956299' WHEN -1.729184252E9 THEN 1709343360 WHEN '-421063016' THEN '' ELSE x'' END) BETWEEN ((('}N{')-('2146028011'))) AND (((('', NULL, x'')) BETWEEN (('c>', x'', 0x61e9ff47)) AND ((0.47827172831951714, '밲狠', -4.55409909E8))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('RB3Q!')) BETWEEN ((x'b397')) AND ((x'5559'))) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1232733466'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-307368799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=786695935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN 0.5016911121109648 THEN '1655368981' ELSE x'c61142c2' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-617081328 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('880270319' AS NUMERIC))AND(CASE WHEN '773066357' THEN '109898422' END)))AND(CASE '1873234187'  WHEN '5w' THEN NULL ELSE '-721088683' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 -1957235689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1241420085 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN 0.9920163936162942 THEN '㐾￿' WHEN x'cab3' THEN NULL WHEN NULL THEN 0X78807210 END)AND(((0x3675819c) IS TRUE))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=556286280 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)AND(x'')))AND('*')))AND(0Xffffffff8f59de6c)))OR(x'7a05'))  WHEN (('3L8%┸') NOT BETWEEN (0X518a646a) AND (x'')) THEN '1993019589' COLLATE NOCASE WHEN ((x'') BETWEEN (0.42869545917471275) AND (0xffffffffbfeacf5c)) THEN (('0.4081291410807151')*(x'')) WHEN NULL THEN ((x'bec7') IS TRUE) ELSE (((x'', -1836854771, x'', 'VO', x''))==((0.09738741762073666, 0.21273723826947621, NULL, NULL, 2031662745))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('830907419')>(0Xffffffff95c065b5)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1269962099 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))+(((0.09738741762073666)||('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1661288420 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('2133870971' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '.oOL' THEN x'' ELSE '0.401998934596263' END)>(((('-1355158232')) BETWEEN ((0.10176429041073565)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1951824536'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1445883375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1170415252') NOT BETWEEN (-1095079561 COLLATE BINARY) AND (((1639463578)*(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'bd8d')) IN ((((0.39685259925832506))>=(('F薳'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(-1.328604004E9))) NOT BETWEEN (((0.7502799795466853)>=(0xffffffffdf644e94))) AND (CAST(0Xffffffff9f3323b5 AS NUMERIC))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOTNULL))AND(CAST('' AS INTEGER))))AND('y厏H&\r2')))AND((NULL IN ()))))OR(((1253735789) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((x'')<(0.9230832851305832)), (((('1015473490')OR(NULL)))AND('b%Y^LN'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE '546893699'  WHEN x'' THEN NULL END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1328304018) BETWEEN (-1.39297467E9) AND ('-1328604004'))) NOT BETWEEN (((NULL)IS('-0.0'))) AND (((x'')&('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=179335716 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(('-1950333228' IN ()), json_patch(NULL, x'e987')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('865219077'))=((0xffffffff8e565530))) THEN '1232362809' ELSE (0.644476164432183 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1598120961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS FALSE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1075130532 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN (((((((('')OR(NULL)))AND('')))AND('901508094')))OR(x'')) THEN LIKELY(DISTINCT x'ccbe') WHEN ((('1047:1945 ')) BETWEEN ((NULL)) AND ((NULL))) THEN CAST('R<' AS TEXT) WHEN CAST(x'' AS TEXT) THEN ((NULL)=(x'')) ELSE ((('-1162520220'))!=((902113988))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(-4.94856092E8)))OR(x'')))AND(x'')))AND(((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=461937038 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-118497510) NOTNULL) IN (UNLIKELY(DISTINCT ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-251131818 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=233827839 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-663217597'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1668823024 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=1505517311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1608195388 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1472861673')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2050047758'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2021516448 sz=-1375102010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=820258326 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-211872939 sz=-1438119605 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1361692771 sz=279220845 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1657437012 sz=1391431088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '876791204 sz=-1203966427 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(0X16ac1b5c))) NOT BETWEEN (((x'')|(NULL))) AND (CASE WHEN 0.9263501109560447 THEN '0iweekdayq' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(('-1608195388' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1335698731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(('VggL%*8\r' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-899330584'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1729184252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=224371854 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('-1277957520')) BETWEEN (('8r')) AND ((0X68ceab6)))  WHEN ('1639463578' IN (x'e879')) THEN (NULL IN (x'')) WHEN CASE 0.46152862284358853  WHEN NULL THEN 0.35296033924448267 ELSE '4[^6m' END THEN (NULL IN ()) WHEN UPPER('72890160') THEN ((0.9586126796871579)%('y厏H&\r2')) ELSE 'aᄤ~Od蕍>C' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-584654016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('1348333924')+('dQP')), ((x'')IS NOT('1574413715'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-196365923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8125563854500321)<=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(LIKE(0.7036300517543476, NULL, '|')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1401672697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=920668867 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-12550834 sz=546893699 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1553942013 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1989487765'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1978563519'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)<=('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS TEXT) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-636483954 609347060'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '391281483 sz=935695241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1276398377) BETWEEN ('蕍鴷') AND ('1040681806')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0.9086214206118665)>('-1690180574'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-723519778'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '0.3835779482582409'  WHEN 0Xffffffffaf44ebc3 THEN '.eRS*' WHEN x'' THEN '>L' WHEN -1557003074 THEN '[{ha)vX' END IN ((NULL IN (NULL, 0.7288236938077612)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1648190305 THEN 0.2283973478978405 ELSE 0.4403271019117063 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1317579014 sz=383993119 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1848267946 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (UNLIKELY(DISTINCT x'')) AND (CASE WHEN '1414443524' THEN '1657437012' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS REAL))OR(CASE WHEN 0.38934037707474434 THEN x'' ELSE '' END)))OR(CAST('' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.6951306959375162 COLLATE BINARY AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -1328304018 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-623289887' IN ()))<=(0.7202757631666692 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '' ELSE -1188654080 END)IS NOT((x'1505' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=72451405 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=800659456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1141772049 sz=1115295938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2031662745'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1058285007 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1591336702 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0x3f3f85d5  WHEN x'' THEN 'F!XR' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1854862465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1744949289 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1122843677 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1912646155')/(NULL)))AND((NULL IN ()))))AND(((0.9563544777589502)-(x'3c39')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '2145211885' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1718863862'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-111737015'))=(('|]m1uHr~'))))IS NOT(((((((((0x562e6def)AND(NULL)))OR(x'')))OR(0X24e43cb3)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.527600691838699 THEN 0.4972567030690862 END)+(((x'')GLOB(1.993019589E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('-1136438059')AND(0.0891750762547654)))OR(0.17955512499935178)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1335698731 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1836854771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2034603973 sz=72451405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-664414582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1581669347 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1335698731 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '650312663 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-98554065 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1943433887 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '605336332 -1371243410 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1858496321 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-745253673 225875085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=109898422'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1785212606'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-156946804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE 0.9272075527076379  WHEN 0.4493054963718329 THEN 7.2451405E7 ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-12550834'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'g' COLLATE NOCASE THEN TYPEOF('-1375102010') ELSE SUBSTR(0.6458706890015159, '-1074871970') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1204117084 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1204117084 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0xffffffffa95231bc, NULL))) BETWEEN (CAST('-1004782931' AS BLOB)) AND ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-935655270 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('^?Q|[vE')OR(('%f' IN (x'')))))AND((NOT ('0.9920163936162942')))))AND((((((((('-1617279636')OR(']')))AND(x'')))AND(x'db78')))OR(0xffffffff9965972a)))))OR(('m' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS TEXT)  WHEN TRIM(DISTINCT '㐾￿', x'') THEN (+ (x'')) ELSE CASE WHEN '154832623' THEN '' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1125515843 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1312323542'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.5508954523575287 COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.15915516992764644)) NOT BETWEEN (('')) AND ((0.9563544777589502)))  WHEN (NOT (0.7307446137648398)) THEN ((0.5846585275744093) IS FALSE) ELSE x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((IFNULL(DISTINCT x'', NULL))OR(CAST('b%Y^LN' AS INTEGER))))OR('bm')))AND('1355480471' COLLATE BINARY)))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1729184252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=866153922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1266726595 -196721431 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' COLLATE BINARY AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'f986'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1776129983'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.8123755061753157 THEN 0.8434383750082429 WHEN NULL THEN NULL WHEN '782599386' THEN '-1074800568' ELSE 0Xfffffffff03b0579 END) NOT BETWEEN (x'') AND (QUOTE(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2122991652 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=572063228 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>=((NULL))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=620656878'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-12550834 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1108346548'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1233396858') BETWEEN (x'') AND (x'c40f1c06')) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) BETWEEN (((x'') NOTNULL)) AND (TRIM(-1.355158232E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-251674987 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-275895538 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-794995493 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2046443949 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7202757631666692) BETWEEN (NULL) AND ('v')))||(CASE WHEN NULL THEN '-385985262' WHEN 1406701557 THEN NULL WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1587751863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=766879083 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1637754938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=620656878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ('989043066'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (NULL)) IN (((1906627880)<<(x'')), ((x'') BETWEEN ('') AND ('1691222851')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1401854586' COLLATE NOCASE THEN (NULL IN ()) WHEN (('-1091261772')IS NOT(-753550831)) THEN (0.5613833554304901 IN ()) WHEN ((('')) NOT BETWEEN ((0.9667351102725756)) AND ((9.58649475E8))) THEN CASE NULL  WHEN 0X2098ef83 THEN 9.58649475E8 WHEN '1253871282' THEN NULL WHEN '' THEN '5w' ELSE '393846221' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.5749335798371569) NOT BETWEEN ('-409044380') AND (0.538895114024353))  WHEN CASE WHEN NULL THEN NULL WHEN 0X6ca6303b THEN '2087665630' WHEN '<]' THEN NULL ELSE '嗭)柏<' END THEN (NOT (0X446545fb)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1655368981 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Z~'  WHEN NULL THEN x'' END) NOT BETWEEN ((~ (NULL))) AND ((('-1897040343') BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>>(444519837)) IN (((((((((x'')OR(x'a216')))AND('609347060')))OR(NULL)))AND('y>襔+9}~PA')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1075130532 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1236530671 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x''  WHEN 0.695482831006598 THEN NULL END THEN CASE WHEN NULL THEN x'' ELSE 'O3OXDG&' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1335698731 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.7147758145254728, NULL, '')) NOT BETWEEN ((NULL, NULL, 0.8933028726549707)) AND ((NULL, 650543765, 0.9920163936162942))))AND(((1.204117084E9) ISNULL))))OR((((('0.8584795225771239')AND(1.445883375E9)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.3898741933479999)OR('bE')))OR('s~')))AND('f}Z*')))AND(176471090)))AND(CASE 9.20668867E8  WHEN 0.14272325627248572 THEN '' ELSE '-1912646155' END)))OR(UNLIKELY('1004715762'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '472417832 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1157180660'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1018087085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1655368981'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))<=(((((((((9.20668867E8)OR('-1693150402')))OR(0.3925185081089523)))AND(NULL)))OR(647958237)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '194561409 sz=1184030124 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4248392894497476 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-907565254 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('620656878')AND(x'e625')))AND('')))AND('0.5508954523575287')))AND('-595931498')))GLOB(((361752402)|(0Xdfd15fc)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1271529756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1740618904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '9223372036854775807 sz=1154835651'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '633388417'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-809829173' COLLATE BINARY) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-934862167 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('5k0PrDWk')) BETWEEN ((0.42869545917471275 COLLATE RTRIM)) AND (((((((((('}X%ZA')OR('')))AND(x'')))OR(0X4d0b3b76)))AND(0.4099997877360986))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')>>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '390781779 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2021662123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-618765144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1772653437 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN '%q[3' WHEN x'f342' THEN NULL WHEN 0xffffffffea974e06 THEN 1482108093 WHEN '1492097709' THEN x'13b4' WHEN x'bbd7' THEN NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '830907419 1213213621 sz=949413206 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1275265615 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOTNULL) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '823642448 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '604119256'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1100142413 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1e500' THEN NULL ELSE 0.9495753297931039 END)*(((x'') NOT BETWEEN ('-351233260') AND (x'98f1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('g' AS NUMERIC))||(CAST(0.521947541737269 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=546893699 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((((x'')OR(x'732c')))OR(NULL)), (0.5893363204407513 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3436428023398077)+(''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1328304018 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1892058443 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.5613833554304901))) BETWEEN (((NULL)!=(x''))) AND ((('2005437344') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1391431088 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0.6440875622825352)))AND(TRIM(0.26395488451093796, NULL))))AND(('' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (x''))  WHEN ((x'')LIKE(x'')) THEN 0.30950545934360185 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1942302184)>(((NULL)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9662116255105339) IS FALSE))AND((('935695241')|('dO')))))AND((('-721088683') IS FALSE))))OR(CASE WHEN x'6eae' THEN 'W{yOlQ!V' END)))OR('1391431088')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('Xc') BETWEEN (0.5815390863256255) AND (-2.12945584E8)) THEN CASE 0.008582020897417886  WHEN -1.912646155E9 THEN x'' ELSE 0.09397798308606109 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((0.7477143794092005 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('357098671'))>=((x'')))  WHEN (- (1445883375)) THEN ((0.9727691425341808)AND(x'')) WHEN '1569468402' THEN (('') NOTNULL) WHEN (((NULL)) NOT BETWEEN (('-1375102010')) AND ((5.46893699E8))) THEN ((NULL)%('uuw!	nL')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-641149013 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=131158662'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '910971574 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-480853392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '464646101'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0x596e1f9d  WHEN NULL THEN 'J	<pD' ELSE 0.14272325627248572 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1968964685 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=958649475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((2.24371854E8)OR('224371854')))OR('-1464487449')))AND(x'')))AND(NULL))) NOT BETWEEN (((x'')&(''))) AND (((0.13382460125522755)IS NOT(0xffffffffebb3463e)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1873234187 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'c2c2') NOT BETWEEN (x'a4975622') AND (x'828c')))OR((('858825572')GLOB(NULL)))))OR(((x'')<('Mo<')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 'f薳' THEN NULL END IN (NULL COLLATE NOCASE, (- (1046941338)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('[>텂')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=393846221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21426971674059903) NOT BETWEEN (-1.836854771E9) AND (''))) NOT BETWEEN (((x'0af7')!=(0.6940750180189076))) AND (((((x'')OR('1709691207')))OR(0.7045245308614613)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-496590486 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-420126606') NOT BETWEEN ('[*~	0Kf') AND ('1134607018')))&(((((((((0X25c0bd81)OR('')))OR('s[\驞mאָ밲VD')))OR('1611773515')))OR('-1950333228')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.3264907017064467)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN (((((1308873112)AND(NULL)))OR(0.7265571393275941)), json(2.034603973E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (NULL) AND ('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(0.39186097706332024))AND((x'' IN ()))))OR(((x'')<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1929584938 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1016548258 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffffaf363e8b THEN 'Cl鰈G]#t6' END) BETWEEN (('-984009883' IN (x''))) AND ((- (x'f6a5')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '290678625 sz=1641111062 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1158763902 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-228427430 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.9263501109560447') IS FALSE)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 426106427; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1836854771 sz=-261646010'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1836854771 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)<((0.03774170362268303 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1567015432 2132691255'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X75fe25e) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1729184252 sz=1299033863'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-2044441348'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=469092535 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1655368981 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UPPER(DISTINCT x''))OR(((x'') IS FALSE))))AND(0X2eb135d3 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7400002043436157) BETWEEN (NULL) AND (0.6992827072338749)))AND(((x'9168') IS FALSE))))OR((('')GLOB(x'')))))AND(((x'3b0d')>>(-496590486)))))AND(((((NULL)AND(NULL)))OR('-879377583')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0.6087110729885059) BETWEEN (0.54762789404783) AND ('	&oQSTu*')), NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1803484523 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2011385406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.4325384315696078  WHEN '-707179549' THEN 0.5791575784087991 END)|((~ ('l⿎')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3287498237577856; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE NULL  WHEN 1.7976931348623157E308 THEN 1544246816 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1971616212 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1921958364'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2067628238 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1411791008') BETWEEN ('127804044') AND ('1657437012')) THEN (('-1957235689') IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-904264803 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '49527400 sz=-1998256195 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-455409909 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1391431088 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.7036300517543476'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1729184252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-774130514'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.266931432683417) BETWEEN (x'') AND (0Xffffffffcf448b6c)) IN ((('') NOT BETWEEN ('') AND (0x6db08c7d)), ((NULL) BETWEEN ('zCE<') AND (0.17955512499935178)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2108591307'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.957235689E9 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-689074737 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6345993268010359) IS FALSE) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8757164194709358; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=2094409766'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-459989360 sz=1040681806'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1430029253 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-496590486 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8093992304658059)%(x'')))AND((((((((('')OR(NULL)))AND(NULL)))OR(NULL)))OR('-1998256195')))))AND(CAST('1170093763' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(0.7307446137648398)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(DISTINCT 1.7647109E8)) BETWEEN ((('-305837539')AND(' Qqui('))) AND (TRIM(0.846830310311044))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 0.695482831006598, -628987161)) NOT BETWEEN ((((((((('⼏Xpe')OR(NULL)))AND(NULL)))AND('')))AND(0.5419652386904709))) AND (((NULL)<<(7.2451405E7)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(PRINTF(642785836, 0.2132262937464302, '	dN*\n*'), (NOT (0x7dbe44ba))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1157679332 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1801512547 sz=-1328604004 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1399406817'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('-778449233' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('鈋stY')))GLOB(CASE '-1102032813'  WHEN NULL THEN 0.4214859893376782 ELSE 0.7267570851798303 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-494735239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2135876119 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1950092418 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-549627195 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1362219562 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 sz=604119256 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1209697844 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1716875523') BETWEEN (NULL) AND (x'')))AND((('A-V&v') NOT BETWEEN (0.6924342702120599) AND (x'')))))AND(((((-1170415252)OR(NULL)))OR('758956299')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-90270935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.18973614849441545)OR(-997837006)))OR(x'')))>=(CASE NULL  WHEN 0.7414782493385021 THEN NULL WHEN '|k' THEN x'd68d' WHEN 0.9565730065658752 THEN x'2dd5' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=713221553 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1391325113 sz=249927439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1897040343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1484471204'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1395768098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('-371323311') AND (1.581669347E9)))|(LOWER('RB3Q!'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((x'')>(NULL)), (('-pK*A*X') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0X36643f25)))GLOB(((NULL) BETWEEN (x'2cb3') AND (0.263661453499619)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1943856465 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1968283314 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -496590486 sz=9223372036854775807 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)%(-1782932161)))OR(((0.6108541355025499)<<(NULL)))))AND('620656878' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '581946664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'892b')GLOB(x'23fa')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1216327473 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS REAL))AND('1467462274')))OR(('0.0' IN ('-1601731035')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN ('RrR檒oEy8o') AND (-5.95931498E8)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=546893699'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2048533274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1135833570'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-439690193 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1637754938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.40625115717834404; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1655368981 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-31023018)<<(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1315131331 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1897040343 2 sz=-1434111449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '971078821 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))+(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN (-997837006)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x''))))>=((((((((((x'')OR(0.4776813073555084)))AND('')))OR('1655368981')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.17271219044678177) NOT BETWEEN ('x{') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS BLOB) THEN '0.47827172831951714' COLLATE NOCASE ELSE json(-510961219) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.6440875622825352 COLLATE BINARY) NOT BETWEEN ((- (x''))) AND (((x'') BETWEEN ('977084712') AND (x'facbdafa')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=-1519226190 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(CAST('' AS TEXT))))AND(CASE WHEN 0.4864939177054116 THEN '%6''ӑ貮I,' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC))&(LIKELIHOOD('609347060', 0.07851130495974934))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-137936281 -73357801'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0x6d0f5c34)) IN (CAST(x'f6d5' AS BLOB))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('wR')) BETWEEN ((x'd156')) AND ((-1266726595))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=894380715 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1123237688')) BETWEEN ((x'')) AND ((-1.608195388E9)))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((0X3b9f3cb1) BETWEEN (NULL) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-274635256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1616900168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (NULL) AND ('1684319072')))GLOB(((((NULL)OR(x'')))AND(0.6720626131543884)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=958649475 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1516946938 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.783544265886621)OR(((0.367395755001075) NOTNULL))))AND(((('1191022986'))>=(('-264567431'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1751743669 sz=-1930044924 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)<((0.7698309796896186 IN (0.46152862284358853, '958649475')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=747468512'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2 sz=-197536213'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR((+ (0.004535306460924482)), ((x'a8dd')||(0X628490fd))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1581452553 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'2678' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((0.7477143794092005)OR('-1074800568')))OR(-882001684)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1989014199 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-471102570 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -8.79377583E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((NULL)) AND (('j_/')))) BETWEEN (CAST(0Xffffffff98eebe04 AS INTEGER)) AND (((-832678323) BETWEEN (x'') AND ('吺u')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((NULL))<=(('Hg')))  WHEN ((((NULL)AND(NULL)))OR(x'a0b6')) THEN ((((NULL)AND(0.5214091070315544)))AND(x'')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-499031489')OR(-1912646155))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2051484546 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.5919584629076124 THEN '-220998043' ELSE 0.4737236975965442 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))AND(((0.017563525285885784)+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-509658809'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR('-1729184252')))OR('')))OR('')))OR('z~')))!=(((0.3436428023398077) BETWEEN (x'd3a5') AND ('1078813406')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1242042961 4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL), (0.8123755061753157), ('1562056221'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR FAIL rt0 SET (c2, c1)=('*', x''); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '36937'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1740618904 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', NULL, x'35e2', NULL)) BETWEEN ((((NULL)!=('')), 0Xffffffffd5050f55 COLLATE NOCASE, (((x'')) BETWEEN ((0.6288929507133546)) AND ((NULL))), (((x'8066'))!=((NULL))), (NULL IN ()))) AND (((('0.2283973478978405') NOT BETWEEN ('LD') AND ('-1187296967')), CAST(8.30907419E8 AS INTEGER), (~ (0xffffffffdf3d5ac5)), CASE ''  WHEN '' THEN x'' WHEN '1615388155' THEN NULL WHEN x'5bef' THEN '#T' END, ('HG' IN (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '9223372036854775807 sz=935695241 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1915055084 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1917237787 2 sz=-2104661053 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1597296778 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1365119552 989043066'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (0.2045684713442142) AND ('|]m1uhr~')))<=(CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1390324180 sz=-113460629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((- (0.8860830890822263)), NULLIF(0.1132140709486863, 0.7866064439257995), 'R'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 904583797 sz=1171450796 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)-('1777464486')) THEN ((-2133464534) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.029369473545955094) IS TRUE)))>(((((x'7515')) BETWEEN (('-459188525')) AND ((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-2091864650 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd518') NOTNULL))/(((0.72995953465542)||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '620656878 sz=1639463578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'5d82')*(x''))))>(((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'30e4'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1463566050 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1639463578 sz=1511443961 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-2.44867785E8)AND(((x'')<=('1627475884')))))AND((~ ('')))))OR((~ ('Lm')))))AND(('' IN (0.1435334490265735, 0.38192414457234514)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff9c9bcd52)AND('vxz)'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-5.49627195E8)*(0.40416287225227177))) BETWEEN ((- ('-498873007'))) AND (((((((((0.7988292826170794)AND('1909096834')))AND(x'2b31')))AND(x'')))OR(0Xfffffffff03b0579)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 -1375102010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '2 sz=1290874527 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1136438059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8133229907489882)AND('1166506946')))OR('176471090')))AND('1253871282')))AND(x''))) NOT BETWEEN (((x'') IS FALSE)) AND ((0X37c59389 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2103125761') NOT BETWEEN (1.740618904E9) AND (-1836854771))) NOT BETWEEN (0.28117312507560366) AND ((NOT (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1752523577 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1089841720 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-21178721 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.44867785E8)AND(NULL)))AND(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1957235689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xd5fa48e IN (NULL, x'36cf'))) BETWEEN ((+ ('w,'))) AND (CASE 0.9086214206118665  WHEN x'9529' THEN NULL ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2065761421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF(''))>=(-1091261772 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE '-1091261772'  WHEN x'' THEN 0.6059592040736894 ELSE NULL END THEN NULL COLLATE NOCASE WHEN (NOT (x'')) THEN ((x'9e0d') IS FALSE) WHEN ((x'') IS TRUE) THEN x'38d2' ELSE ((((((((((((-1392974670)OR(NULL)))OR(NULL)))OR(0.38606989751610843)))AND(1423371478)))OR(0.7493996330457471)))AND(x'164d')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '304854191 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')>=('393846221')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(0x3e078b4e COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ ('0.8933028726549707'))))>(((x'' IN (0.7490555938849536))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '32271194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=243269520 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0.7036300517543476 WHEN NULL THEN '' WHEN 0Xffffffff8eed7629 THEN NULL ELSE x'' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1749402723 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))>>(((NULL) NOT BETWEEN (1.691222851E9) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1074800568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 835031191 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1436604816'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2076195431 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7754980755796675)>>(NULL)))|((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1154029829 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1806133844')OR('-564132797')))AND(x'')))AND(x'')))AND(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'6e15' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT '-2029578289', NULL))+((('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1844483557 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'0858' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1126516619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1657437012') NOTNULL)) BETWEEN ('}2h.') AND ((((('-1930863685')AND('')))OR('-2021662123')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE -2.021662123E9  WHEN 1.445883375E9 THEN 0.9509353820832094 WHEN x'9933' THEN 0.3357412185289701 WHEN '-1278260587' THEN '-1897040343' WHEN NULL THEN '0.5815390863256255' WHEN '1722168433' THEN '.d洇*' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNLIKELY(0.21426971674059903) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (1040681806 IN ())  WHEN (((x'856e'))>=(('-392100830'))) THEN (('M5y') BETWEEN (0.6376781871738292) AND ('')) ELSE ((((0.8381196110941905)AND(0.7741249067357261)))AND('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (0.5492896244957488) AND (0xffffffffc7f574c7)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '2145211885', NULL)) NOT BETWEEN ((x'', '', '{')) AND ((NULL, 0Xffffffffbd8021ac, 1909096834))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-924077950 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1910771216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1974847690'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('r7h')AND(((('ld', '-1205370462', 1812607674))<((x'b6c6fb8b', NULL, NULL))))))AND((((0.4757483962083908, 2.24371854E8, 'ONEy')) BETWEEN (('-879377583', 'W{}N', -1786141781)) AND ((NULL, x'', 0.9421886515369268))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=224015019 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(DISTINCT '154832623'))AND((((NULL, NULL, 'B\', 0.33109073551848567, NULL)) BETWEEN ((0.6093656801235976, '393846221', x'70f5', x'ce9afc9c', 0Xffffffffba3ce16c)) AND ((0.15262581293911537, NULL, NULL, '180863297', x''))))))OR((((-1344639116)) BETWEEN (('1691222851')) AND ((''))))))OR((('1435734484')-('ᖛ	0')))))AND(CASE x''  WHEN x'48f1' THEN x'' WHEN x'' THEN x'' WHEN NULL THEN '830502341' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1288209584'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(((0.08263725312416403) BETWEEN (0.1035077422086319) AND (-8.79377583E8)), 5.46893699E8 COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=938459484 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((0.5815390863256255))!=((x'a0c6'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '750628537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1184496957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE('')))||((((0.6364744970441533)) BETWEEN ((-1912646155)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 1586709587'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1991347556 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1295873969'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1349066147 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((154832623)+(NULL)))AND((((0.9995547162043075))=((x'b3e1'))))))OR((((-1422759225)) BETWEEN ((x'')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5573087189447036)>(NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1335698731'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-549627195'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))IS((0.3793116729948054 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8434383750082429 AS TEXT) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-707179549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.007327521965959538)AND('-305837539')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-391719011 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2059830839'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1853108097 sz=-1746761576 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7046173764718021 COLLATE NOCASE) BETWEEN (TRIM(0X76cb10c5, x'')) AND (((0.721139177646441)>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-51869771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))LIKE(((x'')<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd676')<('')))IS(HEX(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-71645232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=198458752 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-842425659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1996828350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '127532984 609347060 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'9f9c' IN (x'')))||((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1492678154 sz=758956299'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(NULL COLLATE RTRIM, 'd' COLLATE RTRIM, ((0.3397932624210952) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1074800568 sz=604119256 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1136438059 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (0.978235560425394 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1355158232')OR(NULL)))AND(-1.836854771E9)) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1328304018 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<>(('?i[ȃ2yk')))) NOT BETWEEN (CASE WHEN 0X211affa0 THEN -7.07179549E8 END) AND (((x'ceb6')>=(x'44fd87d2')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1211505750 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1772653437 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffbef4aab4)<<(x'e8c6')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1686560224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x28d1d4b8) NOT BETWEEN (1.873234187E9) AND (2141323080)))<=(((((((((((((0.7307446137648398)OR('989043066')))OR(NULL)))OR('1868778600')))AND(NULL)))AND('')))OR(0.1472127516777596)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '935695241 1391431088'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1889935764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) NOT BETWEEN ((NULL)) AND (('[p')))) BETWEEN ((7.2451405E7 IN ())) AND (((((x'')AND(NULL)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1716927417 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1165822219 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '450391883 2 sz=-427907376'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=931229098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((ABS('jd9\Qm'))AND((('')|(x'')))))OR(CASE ''  WHEN 0.19522790866576512 THEN 0.5858745298567597 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN ((x'' IN ())) AND (((NULL)|('YZqN \lz')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ((((('609347060')AND('1477531589')))AND('-1328304018')), ('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-244867785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1363070469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1863459333 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-595931498' COLLATE NOCASE)IS((NOT (0.8061569597543883)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-104647153 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1768785033 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '344651075 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-997837006 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')!=(NULL))) BETWEEN ('0.0' COLLATE BINARY) AND ((('-549627195')GLOB('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1742106712 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(DISTINCT -1746491137, '-1551996239'))OR(((((NULL)AND(x'8371')))AND(NULL)))))OR(((x'e4c8') BETWEEN (0.18458842903107675) AND ('-1729184252')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=633388417'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0X633cfcda)%(x'')))OR(TOTAL_CHANGES())))AND((('0.35296033924448267') BETWEEN (x'') AND (0.18601340727727367)))))OR(((-1439199783)*('-2050561386')))))AND(CAST(0.6931145627896778 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.5613833554304901)/(x'ca07')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN (1.040681806E9, -387375822))  WHEN CAST(-1.074800568E9 AS NUMERIC) THEN (x'' IN ('', 0.48316394716115274)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2031662745 920668867 sz=922002310 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('1628354328')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CASE '0m_0'  WHEN 'z' THEN 'p	' WHEN x'b5d9' THEN x'' WHEN '0.7147758145254728' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1996828350' AS NUMERIC))<(0Xfffffffff4661f91)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1131698212'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=70806945'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1529926949') NOT NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2022411066 1253871282 sz=-449206561 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4350439788353917))<=(('r鮴')))) BETWEEN ((('掳G/	u籁D>')IS('154832623'))) AND ((0.3818310061708068 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'' COLLATE BINARY)OR((x'' IN (0.8503913428525172)))))OR(((((x'')AND('1747092404')))OR(NULL)))))OR(('0.6877404640692505' IN ()))))OR(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=321725202 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1909096834 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>>(NULL)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1573329150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1581669347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'cfd0')AND('-707179549')))OR(NULL)))AND('791032976')))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1200993715 0 0 sz=-907565254'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=1113143452'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-244867785 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1401464425 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN '546893699' THEN '0.6440875622825352' WHEN '' THEN '8b' WHEN 0.45059910857320906 THEN 830907419 ELSE '9+슷?\\_l]' END)OR('-1818403566' COLLATE RTRIM)))AND(x'ccd9' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-269884589 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('') AND (x'0f5d')))==((('	y{}') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.9776988091137497))) BETWEEN (CASE '4^'  WHEN NULL THEN NULL END) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-1729184252) NOT BETWEEN ('-269429048') AND ('iYeF*Bj\r'))  WHEN ((1387254325)OR(0Xffffffff883053ff)) THEN (x'' IN ()) WHEN (('-1112876316') NOT NULL) THEN (0.9950771914006706 IN ()) WHEN CASE WHEN NULL THEN '' WHEN 0Xffffffffe8a92f1b THEN NULL WHEN 1647381192 THEN NULL WHEN x'd79fd222' THEN '1323653806' WHEN x'' THEN '0.057383144347544324' ELSE '615309545' END THEN ((0.11080226057027154)||(0.635999591234351)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1913331217 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7074039019619319)) NOT BETWEEN ((((('wj8	?S{El', 0.4496798812163466, NULL))=(('#', NULL, x'1a8b'))))) AND (((NOT (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'85df')>>(x''))))<((CAST(0xffffffff95f1028f AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '120033701 1569921378 sz=-1355158232'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1477531589 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(CAST('0.5846585275744093' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.328304018E9)) NOT BETWEEN ((((NULL) BETWEEN (0.9563544777589502) AND (NULL)))) AND (((NULL IN ('g8'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'd9c3087f'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (((('H!R')) NOT BETWEEN (('-1867423151')) AND ((x'')))) AND (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x'')), CAST(NULL AS NUMERIC), (-1.97536213E8 IN ())))=(((('<]\')-('')), LOWER(0.8743193477258561), CASE '-997837006'  WHEN 0.7521750302260374 THEN NULL WHEN 0.03740041436839392 THEN '' WHEN NULL THEN 0.0857311917508844 ELSE '714908805' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1691222851 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-1620168378) NOT BETWEEN (x'') AND (x'')) THEN (~ (NULL)) WHEN 0xffffffff957c5dae THEN '-557980021' COLLATE RTRIM WHEN CAST('s[\驞mאָ밲VD' AS INTEGER) THEN (x'' IN ()) ELSE 0.5842263567698281 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1919191851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1472056759 sz=1335698731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1783666183 IN ()) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.20668867E8)!=(x''))) BETWEEN (((0.02115931267993265)+(1.637754938E9))) AND (CAST('1863483009' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('[>}') BETWEEN (x'') AND ('-264567431')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=158469411 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1255357471'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1790596901 2 sz=1955200506 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('604119256')) THEN ((NULL)LIKE(0.7064793542397966)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2091435991 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X559391d4) BETWEEN ('2031662745') AND ('')))+(LIKELIHOOD(DISTINCT NULL, 0.5032354301068419))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.39685259925832506' COLLATE BINARY)&('-984009883')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1608195388'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1591458524 sz=1298273223 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-244867785 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('vW\r,+7')AND(0x9479d2e)))AND(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((0Xffffffffadf64e9a IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1464487449') BETWEEN (NULL) AND (0xffffffffdd5b711d)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '1989487765 sz=1871621626 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN (- ('[*~	0Kf')) THEN CASE WHEN '/{' THEN '604119256' WHEN x'' THEN NULL WHEN '-496590486' THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.3818310061708068')||(0.07919517105054241)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1337969759 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN (x'') AND (0.4123791071839029))  WHEN ((((0.873332095254109)OR(x'')))OR(0xffffffffb47f493d)) THEN ((0.3996661273835559) BETWEEN ('l') AND (x'')) WHEN CAST(0.6193234686031546 AS INTEGER) THEN CASE WHEN 1.909096834E9 THEN NULL ELSE '1060498506' END WHEN NULL THEN ((793949748)=('-1153242931')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1837979973 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1617964297'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1223243012 sz=1044377562 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-423632362 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=326351784'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1699110465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((-983661762)AND(NULL)))OR(0Xffffffff98eebe04)))OR((('-1345051965') BETWEEN ('633388417') AND (0.05237552755560837)))))OR(((-1.608195388E9)IS NOT(x'2731')))))AND(((((NULL)AND(NULL)))OR(NULL)))))AND(0.05739405185440105)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3df3'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))|(((NULL)<=(0x4828a35e)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1479643942'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1477531589 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1096196856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.4160207853592931 IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2021662123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=910950027 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-506833524 sz=1410249550 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-988354380'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=128271663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1609920291'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1638679793 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('545744743') BETWEEN (CASE WHEN 0X62aaed15 THEN x'' ELSE NULL END) AND (CAST('-464269090' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-351087374 723222201'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1009113708 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=176471090 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=72451405 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'fe06')<>(0.20953786020245402)))=((- (0.3357412185289701)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=392884281'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=2135741124 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1445883375 -1222246045 sz=-1815801037 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('0.9838946458609387', x'd884ec39103d', '', NULL, x''))==(('0.4099997877360986', 0.4552948727757177, NULL, NULL, NULL))) THEN CAST(0.9827576717966433 AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))>((x''))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'e3fd' AS REAL), ('176471090' IN (7.58956299E8, 0Xffffffffd7499c4c)), ((x'5c23')IS(-480853392))))<>((((('-1392974670'))>=((''))), ((NULL) ISNULL), CAST('RB3Q!' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '547648339 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=226857797'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (1.611773515E9)) THEN ((('1107937346', '^%', x'4945')) NOT BETWEEN ((NULL, 0.02073255232579707, 0.6940750180189076)) AND ((NULL, '', NULL))) ELSE (x'' IN (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('291288045' COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1363693573 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1685394011 4 sz=-273779837 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))OR((('') NOT BETWEEN ('1873234187') AND (-917115033)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2034603973')) BETWEEN (((('_/R')!=(NULL)))) AND ((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=1691222851 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2.69429048E8 IN ('-595931498'))) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1833271686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1740618904 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=609347060 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1667002904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1136438059 0 sz=553170237 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=698306496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1743134135 sz=-1091261772 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1613415613 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('{')IS(NULL))))==((('' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1873234187 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-427907376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-3250007 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=830907419 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -752322475  WHEN NULL THEN '326350513' ELSE ']趰&>CP' END) NOT BETWEEN (CASE WHEN '-689183551' THEN NULL END) AND (LIKELY(DISTINCT 'E'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1603072252 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE NULL  WHEN '1' THEN 1.863483009E9 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('.oOL' AS BLOB))AND(((NULL) ISNULL))))AND(CASE WHEN 0X50697d90 THEN 0.4335739139592605 ELSE 'w3' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1091261772; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-222295092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-5.95931498E8)IS(0.8880811262335637)))IS NOT(((NULL)==(0.12603818590515825)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1897040343 sz=-1328604004 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL)) BETWEEN ((0.8424599739214018)) AND ((x'86ff'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=55975597 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json('-12550834' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'1de3', '', ''))=((0.4403271019117063, '', 0.42869545917471275)))))==(((('''')GLOB(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-647635127'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1170415252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1347243455 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('-1889935764' AS INTEGER)  WHEN HEX(0.3768152681720287) THEN (0.5082250552648888 IN ()) WHEN (0.28445993349765475 IN ()) THEN (- ('uP')) WHEN 0.9339511613970864 COLLATE BINARY THEN (NOT ('-2097977181')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('iI')-(NULL)))OR(CASE WHEN 0.4736833230023425 THEN NULL END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.21426971674059903)) BETWEEN ((0.10176429041073565)) AND (('-1074800568'))))AND(((((((((0.4972567030690862)AND('0.7477143794092005')))AND(0.5532247705790043)))AND(0.41874620898244674)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-759832896 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1015473490 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=122760090 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR('')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1344837107 sz=1462715412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=625096931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((250505003)=(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0X2451e5f4 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1040681806 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1738673396' IN (((1323499555) NOTNULL), 0.8149955301961472 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.824041701245033)) NOT BETWEEN (('-1665134604')) AND (('-cU~mS52'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.02134099738444739)-(0.030451228384704154)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1444281503'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((NULL) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=588207709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c476')OR(('-1819437463' IN (NULL)))))OR((('Sfd2') NOT BETWEEN (0x3c86e552) AND ('0.2283973478978405')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1637754938 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((((((NULL)AND(NULL)))OR(0.9995231840992278)))AND('')))AND(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE -5.49627195E8  WHEN x'' THEN '1528920251' ELSE '1809996532' END))<(((('-1205370462')AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x'05a72617'  WHEN 0.4220885288241373 THEN x'' END THEN CAST('1810942759' AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1220779947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((0xffffffffe71afb3b IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1748137644 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1090178918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1.691222851E9 AS BLOB))LIKE('''5')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1430930710 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7735187663889332) IS TRUE))IS NOT(((NULL)<>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1940090875' COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') ISNULL))AND((+ ('-187855344')))))AND(CAST(0.05162438044985418 AS NUMERIC))))OR(0.47827172831951714)))OR(((x'549fdb73')==(6.04119256E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) BETWEEN (LENGTH('zu')) AND (CASE WHEN x'e4d1' THEN 0xffffffffd7fcb1c7 WHEN NULL THEN '1863483009' WHEN x'' THEN 0x3a5a53b8 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-673906331 -1266726595 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-90391705 sz=-367861653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.8443525467149476 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('JU^R')) NOT BETWEEN (('1637754938')) AND ((0.7505799136875841))))OR(((((((((x'')AND(x'b3e6')))AND(NULL)))OR(-1136438059)))OR(0.8789242818023045)))))AND(('隄7/gh\n䛔' IN (-570408450)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2142725165'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-62530190 sz=1394965817 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.966070516923792 COLLATE BINARY)-(CASE WHEN x'' THEN x'fb3b' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-635112286 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 368283731'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-12550834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1800093791 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=740267798'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1291170109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (-2007535548 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((x'')) AND ((0.4042563027151175))))!=(((x'')&(-1.889935764E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, 0.0023258910537647948, '1581669347')) BETWEEN (('', NULL, NULL)) AND (('-393659742', x'c6dc', '-984009883'))))AND(((((0.10176429041073565)AND(NULL)))OR(0.8667719109363392)))))AND(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)=(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT BETWEEN (0.03350222385860069) AND ('0.7074039019619319')), CAST(x'' AS NUMERIC), (- ('')), 1.863483009E9, (('&O')&(NULL))))=(((- ('幜~9綻Pjy!s')), CASE '-1610237584'  WHEN 0.46579607242834786 THEN '357153625' WHEN -4.94856092E8 THEN 0.8289146653103856 WHEN NULL THEN x'' ELSE 0x275263a END, (x'' IN ()), ((NULL)AND(0Xffffffffbd0f9a1a)), CAST('aᄤ~Od蕍>C' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-204623692'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2V\rPoo') NOTNULL)) BETWEEN ((+ (NULL))) AND (((((((((0xffffffffd5050f55)OR('-194435962')))OR(6.33388417E8)))AND(0.527600691838699)))AND('937092952')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (0.6944485528934844)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '-1821875325 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2021662123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1989487765 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('끮/{bwd&ᚳ!')-('958649475')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('Jb')))IS(((('<]')) NOT BETWEEN (('w&V+I]')) AND ((0.1004752671861111))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=59323663 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1980394391)>('3B')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE WHEN x'' THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)OR(1e500)))AND(0.3947060848477558)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1494077761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((x'6625') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1702537275 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-216360007' COLLATE BINARY)GLOB(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-374604469 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT 0.420493316344965, NULL))>=(((NULL)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=1442204607 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))==((x'87ee'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-721088683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'e0d095f7' AS INTEGER) THEN ((x'')GLOB(NULL)) ELSE ((x'') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1729184252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1058722568 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1414025115 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('>~vJ*U蛌') NOTNULL))<(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS NUMERIC) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8648042300319623)>('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-636699840 1113350953 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1550496608 sz=-1836854771 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2 sz=-1957235689'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'')OR(x'2b69')))AND(-1.836854771E9))  WHEN (((x'', x'', 0.839019431559907))==((NULL, x'', -1.39297467E9))) THEN (((NULL, 0x535694e3, 'DqH'))<((0.45365964254736735, NULL, x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'f3c0' COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffefac4c91)|('935695241'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1136438059')) NOT BETWEEN ((x'')) AND (('Gt[')))) BETWEEN (CAST('37,' AS TEXT)) AND ((('-1266726595')IS(0.8496869823726624)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=163623587 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1471808266 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1950333228')/(x''))) NOT BETWEEN (x'') AND (CAST(x'5859' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1293310416 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')-(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=321960449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1539260218 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1013821157 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.34779858777650563) BETWEEN (104280216) AND (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.2737567961046401))) BETWEEN (((((NULL)AND('g ')))AND(x'6a604f8e'))) AND ('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1368696015 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('-345172602' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1253871282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-2139716388 1371009275 sz=2070475218 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-388148728', 'n_w_', '')) NOT BETWEEN ((0.7796785119390697, x'9d00', 0xffffffffe443c9de)) AND ((0X5e465be3, NULL, '-1642781580')))) BETWEEN ('0.9086214206118665') AND (CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'a57e8789') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.5440548071724528 AS INTEGER) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1545591228 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.9586126796871579) NOT BETWEEN (NULL) AND ('n{V')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1378275941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-308121288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=224371854 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1992172783 sz=-689286228 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1046146894 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'65b3'))>=((0.0026892320502133193))))||(((((NULL)OR('189455428')))AND('-1170415252')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0X3c86e552 THEN NULL ELSE 0X45879f35 END)>=(((NULL)<=(']჈nr')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-545168406'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-122019917 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1039721384 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1473723013 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'', x'8c7a', x'')) NOT BETWEEN ((0.644476164432183, '-1615381379', NULL)) AND (('1989487765', -1241218555, x'66569a9f')))))<=(((NULL IN (0.9625810972164142))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT '᠟h') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1493967600 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=59935469 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('yU') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1147487739 4 sz=-468908244 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (1909096834 IN (NULL, x'')) THEN ((((0.3626957103009457)AND('ik')))AND('蕍H]i풃|Z')) ELSE 0X13c1d827 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1205370462' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1328604004 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1909645729 sz=-815731475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1678739732 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=189455428'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4403271019117063 AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1392974670 -1860178206 sz=447164552 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X1)IS(((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('gIdEz' COLLATE RTRIM) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-1058722375'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.26395488451093796) NOT BETWEEN (NULL) AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1552657966 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1637754938'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-244867785 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=305332630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND(NULL)))OR(0.13382460125522755)) IN (CASE WHEN NULL THEN x'' ELSE NULL END, ((3.93846221E8)GLOB('M\nJ䝾')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-183245768 sz=909705112 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=2087458340 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.27906399643235325)LIKE(NULL)))GLOB((((x'', '', 0.21545675156205735)) NOT BETWEEN ((NULL, 0.20239360793792427, 0.6870386032183334)) AND (('2042385011', ' 7睍OLbB', '\roh'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('^\' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=546893699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)&(0.22702752572956575)) THEN CAST('dv' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-109861941)GLOB(x''))))>=((CASE 0Xffffffff91214892  WHEN '-1' THEN '1740618904' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((72451405) IS TRUE)) NOT BETWEEN (((NULL)||(0X7c1251a4))) AND (((NULL)|(0.6909128423234464)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LOWER(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '890235161 sz=-1033909788'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-642520741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1909096834 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-997837006 -762905132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-9223372036854775808 1996027441 sz=901008569 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', CASE WHEN '-897947135' THEN 0.5619162251397688 ELSE -7.21088683E8 END, TRIM(x'')))==((CAST('' AS NUMERIC), ((x'')OR(0xffffffffff407d4e)), CAST(x'5501' AS BLOB)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1182747797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-141763843'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'f56c'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (1206014624)))>(((1.993019589E9)IS(0.8266098828376176)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1581669347 sz=-658508829 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1820588508 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.013794310888513905)))>>(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 'b䗕9bn' COLLATE NOCASE  WHEN 0Xffffffffd0970b18 COLLATE RTRIM THEN 0.47457884670594763 WHEN ((0.6240924781420397) IS TRUE) THEN CASE WHEN 0.48620706517040657 THEN 0.31236792490861665 WHEN 'G8' THEN 989043066 WHEN 'W/-^eK6w2' THEN x'' WHEN '989043066' THEN x'f12b' WHEN NULL THEN 0X58bb40ab ELSE x'b207' END WHEN ('716909747' IN (NULL, 0.2861229672310881)) THEN CAST(x'' AS NUMERIC) ELSE ((('-1004181422', 0.6317641429705775, NULL, NULL, NULL, 0Xffffffffaf39ed28, ''))>=((0.3818310061708068, 0.10147983015822504, 0.986070988082831, 0.7152191567305859, 0.5175811367658077, NULL, ''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))%(MIN(-9.07565254E8, '-71645232'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '989043066 sz=1581669347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0Xffffffff85484e80)AND('1989487765')))AND('1765068492')), CAST(0.21426971674059903 AS INTEGER), HEX(NULL), CASE 0.30156603429688655  WHEN 0X72c92ae THEN 0xc6d4278 WHEN x'' THEN '-353237039' WHEN x'' THEN '5S' ELSE x'' END, CASE x'19a5'  WHEN 0xfffffffff1679d37 THEN 0X16a61ce8 END))!=((NULL COLLATE NOCASE, (('') NOT BETWEEN (0.5491209894343088) AND (x'')), ((NULL) IS TRUE), ((x'') BETWEEN (x'') AND ('364868088')), (NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-351567626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN '-494735239' WHEN '' THEN x'' WHEN 0xffffffffff407d4e THEN NULL WHEN '1356200649' THEN '251401856' WHEN '-1674552480' THEN '1793764801' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.503231299997848 AS REAL))OR(((('0.42869545917471275'))<>((0.2992757549473064))))))OR(((-7.07179549E8)<=(x'd5a0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1356761748 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=393846221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('756643812', '{3lM', 0.8134747100216682, x'')) BETWEEN ('#') AND (ABS(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=806111276 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1040681806 sz=-1414814323'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1460071178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1024434495 0 sz=-1912646155'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3856186502155359 IN ())) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((1147487739)) NOT BETWEEN ((NULL)) AND ((NULL))))) AND (((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', '', '㜲J?%(', NULL, x'')) NOT BETWEEN ((')', NULL, NULL, 0.5576197495745415, 6.20656878E8)) AND ((NULL, x'', 0.15429199318525988, NULL, 0.4924861748140854))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN '9223372036854775807' THEN x'' ELSE '989043066' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)IS((NULL IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1904698087 sz=830907419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-984009883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 -2027159776 sz=72451405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1694557863 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1889935764 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1671870000'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM, ((('1845101146')) NOT BETWEEN ((NULL)) AND ((x''))), ('H' IN ())))=(((('-840702932')+(x'')), (('') BETWEEN (x'') AND (0.20796479939920143)), ((('堹R鎉a')) NOT BETWEEN (('0.3835779482582409')) AND ((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')OR(0.9495753297931039)))AND(x'')) IN ((- ('1799212168')), ((('-1'))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-1375102010 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0.07088080943916797)AND(x'')))AND('')))AND(2.145211885E9)))AND(NULL)))AND(0.8964650995951539)))OR(NULL))))<(((~ (1.909096834E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-388148728 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-226733482 sz=-388148728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-740703052 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'1343') IS TRUE), ((2060247352)-(0.2283973478978405))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((1986812396)>(x''))  WHEN ((('910117647'))<=(('ὔ|!z'))) THEN 0.9143103030091669 END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.38934037707474434; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1335698731 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1912646155 sz=-721088683 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))<=((- (0.7445178719994449)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1836854771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((((((('')AND(NULL)))OR(0.13382460125522755)))AND(x'5542')))OR(1800775140)))OR(0.257901559971781)))OR('3s')) THEN (('-427907376') BETWEEN ('a\r') AND (x'ae9b')) ELSE (((885094398, '257835180', '-1109017421')) BETWEEN ((0.03617946104613712, 0x7a65f90d, NULL)) AND ((NULL, 0.0456561502528714, 0.6282917081559554))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '1888383623 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1071683009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1266726595 sz=-1414636928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1515546427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')-(2.24371854E8)))AND(0.49476158871427833)))AND((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1729184252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1391431088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1443650546'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1136438059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-403592245 4 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('61069001') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1344593356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=560326909 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1617473179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-343146994 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.2283973478978405 AS REAL)) BETWEEN (((NULL) NOT BETWEEN ('-244867785') AND (0.6111000746953583))) AND ('1045240831')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))!=((x'6464'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((+ ('1툍O ')), (~ (x'')), ((x'')>>(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2141557854 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND((('-388148728') BETWEEN (NULL) AND (NULL)), (- (0.8661671319723938))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3331213623337339)=(NULL))))<=((LIKELIHOOD(DISTINCT 0.7682577857316931, 0.7730080094172431)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-305837539 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-707179549 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1332406284'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=59018245 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1786326576 sz=633388417 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1328604004 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 946531294 sz=-1408961247 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1075130532') NOT NULL))AND(CASE NULL  WHEN NULL THEN 1.655368981E9 END)))AND('fVKiT40' COLLATE NOCASE)))OR(((0.9113276034394755)!=(NULL)))))AND(((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1654167248'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.06897449643966036) ISNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6215795331659115)<=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-305837539 sz=-1897040343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1047446656 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((0.09332238098830525)>>(0x581157c5))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads = -7372410378433055623; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1341858808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1136438059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))IS((NOT (0.6152739363264953)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=527212580'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (1831258111)))AND((('') NOT BETWEEN (x'0108') AND ('-2130661961')))))AND((+ ('-879377583')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((895123778 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'7d1d') NOTNULL))OR(((-1454301596)GLOB(x'52d7')))))AND((('1318526378')GLOB(NULL)))))AND(((x'f86e') BETWEEN (NULL) AND (-1328304018)))))AND(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1392974670') ISNULL) IN ((((x'725a4b83', '-1136438059', '')) NOT BETWEEN ((x'', NULL, -140756814)) AND ((1113934446, 0.7359601336180466, x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('2108456067') AND (0Xffffffffced029fe)))&((((('-482734916')OR('')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=13421457 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1035765205 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 -1355158232 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-968074545'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1368824010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-2057090225'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', 0.8359202252524243, '-1289666475')) BETWEEN ((-2.73158242E8, x'53fc', 'K_擩S%&}t')) AND (('', 0X68ca3361, 0.3845480434384586))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-984009883 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.291579289502105; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1080149061'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.15932398135751202; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1375102010')) BETWEEN (((72451405 IN ()))) AND (((- (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('J8T9' AS TEXT)) BETWEEN (CAST(x'' AS NUMERIC)) AND ('-1748137644' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=633388417 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.8414729407303835 AS REAL)  WHEN CASE x''  WHEN 'a1~Od蕍>C' THEN NULL END THEN CASE WHEN 393239984 THEN x'1f13' WHEN 0.3638724610290054 THEN 0.028773813319769137 WHEN NULL THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1253083142 sz=-1756278713 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-880708421 sz=-244867785 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9762685648454139 IN ())) BETWEEN (((((((((NULL)AND(0.4054159267833557)))OR(x'')))OR('''1')))OR('0.527600691838699'))) AND (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1355158232'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE -696768281  WHEN 'xiax쿳' THEN '0.8584795225771239' ELSE '' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('EzEGp', '1477531589', x'3651')) NOT BETWEEN (((+ (-7.21088683E8)), (((('0.14272325627248572')AND(473391194)))OR(599581417)), CASE WHEN x'' THEN NULL ELSE NULL END)) AND ((('''' IN ()), ((NULL)>>(x'2024')), NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.24101902538224074 THEN NULL END)OR(CAST('1909096834' AS TEXT))))OR(((0.15635272369858733) NOT BETWEEN (NULL) AND ('*l~ogEqW')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1000801138')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, -1.667510958E9, x'')) NOT BETWEEN ((((x'') NOT NULL), 0.3819796074967503 COLLATE NOCASE, TYPEOF(DISTINCT 0.4621396397551508))) AND ((((-1.328304018E9)&(NULL)), ((0.29306899033341693)==(-1488288833)), (((x''))==((NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1537864963 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.314206971314578; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=940675688 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.6252245086343976 THEN 0X14ae5e8e END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1348528009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOT NULL))AND(('蕍鴷' IN ()))))OR((~ ('VeU燸')))))AND(((x'')IS NOT('-1729184252')))))OR(((0.8823791318280293) NOT BETWEEN ('-1302348447') AND ('-496590486')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-630609484 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1667510958' COLLATE NOCASE)>=((('oX')IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1445883375 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))|((((x'')) NOT BETWEEN (('F1 ')) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '127536723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.19877243542597212) NOTNULL), 0.6924510247497337 COLLATE RTRIM, CASE WHEN '0.21426971674059903' THEN NULL ELSE '1047446656' END))<((NULL, x'7847' COLLATE RTRIM, (('-1836854771')IS NOT('989043066'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-494856092 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (0.32338723576514916))  WHEN ((((0.6157810060087624)OR(-1943725765)))AND('-1696243425')) THEN (('1445883375')+(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2053151685 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=176471090 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('^3') IS TRUE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5893363204407513 IN ('z8'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN NULL ELSE '' END)OR((~ (0.7147758145254728)))))AND(((((x'')AND(1.040681806E9)))AND('')))))AND(((0.5473798066192811) NOT BETWEEN ('-1517702350') AND (NULL)))))AND(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1638773156'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1091261772 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=901508094 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1392974670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('ᐥ~' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-1510792415'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('2026897194')AND('PZ')))AND(1905629765)))AND(0.7448673029654078)))OR(x'7f4a')))<=(json_quote(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '883124146 sz=-1351007406 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-305837539 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-595931498 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-595931498 1253871282'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1707902510 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x'')) NOT BETWEEN (((((0.376086631439024)AND('䦊V')))AND(NULL))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(NULL))AND(((((x'')AND(x'')))AND(x'')))))OR((('W/') IS FALSE))))OR(CAST('' AS BLOB))))AND(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1736414304 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-212945584 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-53638928 -1253291148'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1199574301 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-907565254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=29373129 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')IS NOT('-1657904158')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-4026801') NOT BETWEEN (x'') AND ('')))>>(CAST(x'1969' AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=763632634 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-906226033 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1205370462 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-2021662123 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-1355158232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1333106374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.04211004956618514)&('X|'))) BETWEEN (NULL COLLATE BINARY) AND ('-1667510958')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-1433566083'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (703503952 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-417907950'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=-1502564235 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1750720895 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('gU') NOT BETWEEN (NULL) AND ('-1998256195')))>('_^K')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND(x'')))AND('%6''ӑ貮i,')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-2117201325' AS TEXT)) NOT BETWEEN (((83610029)<>(x''))) AND ((((x''))<=(('0.7074039019619319'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3898741933479999)GLOB(''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=135573430 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-907565254'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS BLOB))OR(x'76a2' COLLATE NOCASE)))OR((- (-375497625)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')&(0.23292394739283528)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1237760130'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.3290534474330634)))||(CASE ''  WHEN '1852725328' THEN 'ukR|Z8>j' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 sz=1993019589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '149727948 1639463578 0 sz=-1688950228 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-932329987 sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('琮2,}fW2' COLLATE RTRIM)AND(CASE '*'  WHEN 0.21957973750262183 THEN '149391374' END)))AND(0.6867392152383708)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1912646155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1951298835'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.5214176689533564 THEN NULL END)>>(((NULL) BETWEEN ('b)') AND (0.8123755061753157)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1015473490') BETWEEN (0x794597c5) AND (0.05200600484305251)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=604119256 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((758956299) IS FALSE))AND(CAST(x'' AS TEXT))))AND(((x'')!=(0.5561466836537847)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1121194344 0 sz=-1198792054'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1130733327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('1435734484' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1331102899 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1650752677 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-822215259 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 0 sz=989324324 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((NULL, 0.38934037707474434, ''))>=((NULL, '', x'9d76'))), (('鴁s')*(x'fcc7'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1904121502 sz=-1464487449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(CAST('utsMO?' AS NUMERIC), ((x'') NOT NULL), ((((0.6171745937493925)AND('0.7819718078281881')))OR('{}'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1091261772 2048687771 sz=-1173833992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('154832623') NOT BETWEEN ('-489557008') AND (x'')))OR(('-571007598' IN (NULL, 0.008582020897417886)))))AND(((0.8084335801411054) NOT BETWEEN (x'da7d4e15') AND (0Xffffffffd5d94be3)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1897040343')<<('0.008582020897417886')), ABS('-1889935764'), 0.5613833554304901 COLLATE NOCASE))>((CASE x''  WHEN NULL THEN 'Y2' WHEN x'4ac5' THEN '1861331756' WHEN -71645232 THEN NULL END, ((((((((0.9562484145801629)AND(x'')))AND(293712864)))OR('350728528')))AND(0.906964241449114)), ((((x'aa66')AND(x'')))OR('-1651889868'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-273158242 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=758956299'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-455409909 sz=-12550834'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE('8r', 'c?!' COLLATE NOCASE, (('823374886')IS NOT(NULL)), 'AY!lg^G', (NULL IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2098499873 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.7488694983056366)) THEN (((x'', '6p', '1e500')) BETWEEN ((0.4826117625945432, x'', '-244867785')) AND ((NULL, NULL, NULL))) WHEN -2.69429048E8 THEN 0x619e283a COLLATE NOCASE WHEN (('-494856092')||(x'')) THEN LAST_INSERT_ROWID() END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((NULL))<((0X24a0a38f))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.0')IS(0.4894697396713872)))-((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=871707188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-388148728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1366673089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE -1112876316  WHEN 0.869392746784611 THEN NULL END  WHEN (('UE,,') NOT BETWEEN (x'') AND (0.26395488451093796)) THEN (NOT (0.7170204599467968)) ELSE (0.29163313486916775 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-907565254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'5852') IS TRUE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1655368981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((1.445883375E9)OR(NULL)))OR(0Xffffffff92fad5d7)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.29803225072365425) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((277643302)>>(0.649629406204326)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1595118403 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('ꙫp[\r譎n')OR(0.19610580657555465)))OR('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS NOT(x'e4c1')))<(-1996828350)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1291350096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', '-388148728'))>=((0Xffffffffc1d2519e, 0Xffffffffacf8e4b2, '-1734375016'))))<=((0.410502846510308 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY('', '-1462391043', NULL, 0X2d1089b4, x'') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1047446656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-273158242 sz=-2143386348 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.40177586917405006) IS TRUE))AND(UPPER('1359430740'))))AND(((NULL) BETWEEN ('*g') AND (0.5389321061254109)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1112876316 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN x'eeb6' THEN '2034603973' WHEN NULL THEN 0x0 WHEN -1462254166 THEN '2132601297' ELSE x'd518' END)AND('' COLLATE RTRIM)))AND((('-512796767')<>(NULL)))))OR(UNLIKELY(x''))))OR(((('0.09783488253359296'))>(('}%8[N!-'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1109912504 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1205370462') ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.45744248017581823) BETWEEN (x'') AND ('-264567431')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '0 sz=154832623 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xffffffff8eed7629)AND(0.007746668702190651)))AND(0x265d613c)))OR('')))AND(x'35e1')))IS NOT(x'd094')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 sz=-986350864 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ('-496189439')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1805041608 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-1112876316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '289075105' COLLATE BINARY THEN COALESCE(NULL, x'', 0.42928426307894985, '0.9272075527076379') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2031662745 sz=-1761639903 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffffaf50664, 0.682680598739071, x'9b2c')) BETWEEN ((json_patch('-1322080480', NULL), ((0.3357412185289701)GLOB('}n{')), NULL)) AND (((0xfffffffff03b0579 IN ()), ((NULL) IS TRUE), ((-1828695394) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1307178382'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json('154832623') AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-4.96590486E8 AS REAL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT(432732628)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('[>텂')OR(0.37671240486226143)))OR(NULL)) THEN ((0x59cd9aaa)-(x'7c51')) ELSE NULL COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2042852698 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1392974670'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2118386120 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT (('y厏H&\r2')%('1147487739'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1391431088 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.950333228E9; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '681955496 sz=518991569 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-675935196 0 sz=-2062143901 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=364868088 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3#') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X6f127e81 AS TEXT)) NOT BETWEEN (CAST('f\r撟7T c' AS INTEGER)) AND ((- ('633388417')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.3818310061708068')AND(1001255667)))AND(NULL)))OR(0.932376962108322)))AND(x'')))>>((((('LD')OR(0.48789973612219595)))AND(0.6883990412855187)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('*ᯚ1~SK]')>(0Xffffffffd4e829ac)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('5w')AND(0.7221638957946246)))<>(x'969a2199')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-525465191 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-967262511 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1587310543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=364868088'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('1394753186')) NOT BETWEEN ((' Q')) AND (('%6''ӑ貮I,'))) THEN CAST(0.932376962108322 AS REAL) WHEN (('-1091261772')<=('1940091849')) THEN (~ (0.9586126796871579)) WHEN ((((x'')OR(0.5846585275744093)))AND('224371854')) THEN (0.20781771004082294 IN (189455428)) ELSE (((0.10669173493488426)) BETWEEN (('')) AND ((0.019286520713721833))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1459178862'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1838462864 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.39072218321220475) NOT BETWEEN (0.6026280299462624) AND (x'2127')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('?d') IS FALSE))>>((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'6499') NOT BETWEEN (NULL) AND (NULL))  WHEN LOWER(0.45087557310875237) THEN (((('2031662745')OR('')))AND(1989487765)) WHEN (('3S.ᡡ⏲!,c') NOT NULL) THEN CAST('xz\' AS INTEGER) WHEN (NOT (0.6940750180189076)) THEN CASE ''  WHEN 0.8196170041966655 THEN '1691222851' ELSE 0.49569326349375475 END ELSE x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '399968726' COLLATE RTRIM  WHEN ((0.8626112496223829) NOT NULL) THEN (('')<>('8B}')) WHEN COALESCE(DISTINCT NULL, 0x3c86e552, NULL, -0.0) THEN ((0x6f34f8ad)|('1197105023')) WHEN ((((((((((((NULL)AND(x'')))AND('-2021662123')))OR('-1328304018')))AND(0x2fbd3672)))OR(NULL)))OR(-1529467016)) THEN ((((2034603973)OR('')))AND('0\v')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('1561679353')OR(0.5491209894343088)))AND(0.3804864552052909)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '695844308 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2108424599'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.34947320803958115)=(x'60f0')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1806518816 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT ('[>텂')) THEN CAST(',' AS BLOB) ELSE (('c\r')OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1581669347 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1266726595 1486436388 sz=-1229087349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER('1477531589'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=176471090 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES() COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1106790065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*⨔zgs' COLLATE RTRIM)OR(((0.8273867284133595) NOT BETWEEN (0.7055612964155586) AND (x'cbfd')))))OR((((1581669347))>=(('tQX}x3W_'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2ebc1b33) NOT BETWEEN ('-2092375072') AND (NULL)))|((('406913421') BETWEEN (NULL) AND ('-427907376')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xfffffffff9f5ae31)OR(NULL)))*((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9edd')||(NULL)))GLOB(((0xffffffff88fad142) BETWEEN ('1597933051') AND (0.26395488451093796)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', '2 sz=224062569 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=546893699 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))OR(COALESCE(NULL, NULL))))AND(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1655368981'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -305837539 sz=-264567431 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1437659303 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1889935764 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-549627195 sz=643477977 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-1240139602 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=604119256'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-965906548')IS NOT(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-24602908 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((2.24371854E8)>=('-2102467390')), 0.764119574491348); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff88fad142 IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1698010253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT NULL)) BETWEEN (CAST('-199312714' AS INTEGER)) AND (CASE '-685334484'  WHEN 0.0439901422261898 THEN '0.3925185081089523' ELSE 0Xffffffffb9aead59 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<((((0.5878200094944377))>=(('-pK*A*X'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1946423364 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(((0Xffffffffaf39ed28)IS NOT(-1.170415252E9)), ((NULL) BETWEEN (NULL) AND (NULL)), CASE WHEN '0.9086214206118665' THEN '103080956' ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(x''))) AND (((((NULL)) NOT BETWEEN ((NULL)) AND ((0.15418586561322833)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8933028726549707; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-879377583 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_quote(0x6d17b337) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.9667351102725756 AS INTEGER)) NOT BETWEEN (('vB^' IN ())) AND (((((0.8385595057360038)AND('')))OR('2028203903')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=341884777 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-328982982 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1466892817 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09482718780871047)+(0.4597413152219897)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-589150288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((0.5183225103858594)<=(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((3.64868088E8)OR(x'e9c5')))AND(1947626381)))AND(0Xffffffffb37727ee)))AND(x'')))OR(NULL)))AND(0.3074781884525465)))OR((((('364868088')OR(0xffffffffa867da8f)))OR(x'')))))AND(((((x'')OR(x'')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(NULL)))OR(0.10221134059179693)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7394016685029022) NOT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=807527884 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2104872297 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'UOrKD''C'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1205370462')<=(0.9838946458609387)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3323985084697312)>=('⠫(I⚹z) gL콗*')))>>((((('')AND('fbqq罿[纁')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((('0.46152862284358853'))>((0.1009124934594583))), 0.7837955847001445); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1052616965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%f')IS(1.09898422E8)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1355158232' COLLATE BINARY THEN ((0.38796312917696874) NOT BETWEEN (NULL) AND (x'')) ELSE CAST(0.9775122699390485 AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.5034022166911564 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1204117084 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1705596680') BETWEEN (NULL) AND (x''))  WHEN (('0.7147758145254728') NOT BETWEEN ('Nl') AND (0.6594148729448385)) THEN ((x'')<('1220654775')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR('-1170415252')))AND(x'd9eb')))AND((- (0Xffffffffaa0154b9)))))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'')AND('1,[''BQ')))AND(0xffffffffb82781a2)) THEN ((x'')+(0.09253293584798061)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0X3e6ec480)) AND (('-1765946840'))))+(((0.4777362018950264)IS NOT('}\rM')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.7828476822239279)GLOB(1245137181)))OR(x'' COLLATE BINARY)))OR(CASE 0.6822026794889187  WHEN 0.09397798308606109 THEN NULL END)))AND(((((((((0.41470209746993336)OR(NULL)))OR('dI7}R\C	')))OR('')))OR('-71645232')))))OR((NULL IN (0.18262635373475644)))))AND(LIKELIHOOD(DISTINCT x'', 0.23596044792049553))))OR(((x'9a67') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=2034603973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0x35bbebfe) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('A-VZv')>>(0x3e078b4e)))LIKE(CASE '-778541344'  WHEN x'' THEN x'98c4' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('')OR('-1170415252')))OR(x'')))OR(609347060)))AND(''))  WHEN (~ (0.37025329308959176)) THEN (((((((('')AND('1611773515')))AND('鈋stY')))OR(x'5c28')))AND('h	')) WHEN -1889935764 THEN (('-1608195388')&(NULL)) WHEN 0.3515112953964671 THEN ((NULL)/(NULL)) ELSE (NULL IN (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-455409909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.695482831006598) NOTNULL)) NOT BETWEEN (((-2.021662123E9) IS TRUE)) AND ((('xIfw') BETWEEN ('-984009883') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=2038313773'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '57685083 sz=-1560924730 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1657437012 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('r<') AND (x'e97a')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-476959554 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1089057957'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (0.401998934596263)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1692751796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch(CAST(0.351253537698491 AS REAL), ((((0.7109183398805096)OR('-494856092')))AND(649155437))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.05561341944554998) ISNULL) THEN CAST(0.09738741762073666 AS TEXT) ELSE LIKELY(0.4248392894497476) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1513130806 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5446319575204909; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1656623655 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN 0x2dbe89d8 WHEN 0.76241494726297 THEN NULL WHEN NULL THEN NULL END)&((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('x5'))  WHEN ((0.09650938043099422) IS FALSE) THEN ((x'') BETWEEN (x'') AND ('173163691')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT (((('-1031263349')OR(0Xfffffffff1679d37)))OR('ʍ㬒%wm벘8#d讬')), IFNULL(DISTINCT NULL, -1833244)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -197536213 sz=2031662745'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))OR(TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1677508272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-335012410'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1335698731'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF(NULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.7307446137648398)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '109939844 -488375826 sz=-879377583 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -1260528539 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-997837006'  WHEN 0.5508954523575287 THEN NULL ELSE 0.34090476601089537 END) NOT BETWEEN ((- (x''))) AND (((x'ed3dd586') BETWEEN (x'622f') AND (0.8986383036937471)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (1.657437012E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (NULL) AND (x'fce0')), (NOT ('8r')), (('-1539263261') BETWEEN (x'1c0f') AND (NULL))))!=((((('-1355158232'))>=((NULL))), ((((((((0.7175387444888708)OR(x'')))OR('g8')))OR(1838936269)))AND('')), ('0.26395488451093796' IN ('609347060'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1691222851 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1772653437', '6[eO4W', '378817573')) BETWEEN (('620656878', 'h&', 0Xffffffffe282f079)) AND (('', x'', 94087124))))LIKE(((0x6b3231fa) NOT BETWEEN ('-1912646155') AND ('-1993933971')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.39696856967160943)=(0xffffffff9897fc98)))AND('')))OR(SUBSTR(0.6458706890015159, x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-97869551 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=393846221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=603222624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-401169698 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1074800568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '0 sz=-516383546 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1748137644 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.17821275867019648)IS NOT('-965402675')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'd073')AND(NULL)))AND('0.15915516992764644')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND((((('jHW')AND(-509871760)))AND(0.314943380961067)))))AND(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1047446656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'cab6') IS TRUE))IS NOT('' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1589445169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'cf9f') NOT BETWEEN (x'') AND (x'3898')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('0.9727691425341808')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('', 0.4927229188032567))>=(CAST(x'' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1083324345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-907565254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS NUMERIC) THEN (((0Xffffffff87ef86aa)) BETWEEN (('-6418827')) AND ((0xffffffffbb02af64))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '355456329 -870295807 sz=-71645232 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((('-468382222'))>((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('1435734484')) THEN 0.5246114018036094 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-964570945 sz=1772653437'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1684319072')OR(CASE WHEN 0.8056735963207946 THEN 0.5406957751239613 END)))OR(('?\n!K)ᇪdT' IN ()))))AND(CASE WHEN 'h\n' THEN NULL WHEN 'c' THEN 'Cd' WHEN ')C営\r5z*(' THEN NULL WHEN '' THEN 0.5613438174937594 WHEN x'' THEN 0.4099997877360986 ELSE x'' END)))AND(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1133981025 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-12550834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(x'', x'877f') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=981164779 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-721088683 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1392974670 sz=-1174186167 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1805686903 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('0.8123755061753157') AND ('')))OR(CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.7486967447828516) NOT BETWEEN (x'') AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'')<('1657437012')), NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1309157813'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=620656878 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1577135091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=1334657129'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-71645232') BETWEEN (0.9719836413363603) AND (NULL)))/(0X7593ac36)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1851113194 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(NULL, 0.026975825100012396) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-494856092 sz=1225149392 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1556378239 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1672709158 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1050259959 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))<<((NOT ('2131547432')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3835779482582409 IN ()))OR(CAST(0.23773444434910174 AS INTEGER))))OR(((0.5064503386064049)+('1435734484')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=805908906 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1000039827 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('0.9495753297931039') AND ('*'''))) NOT BETWEEN (DATETIME(-7.1645232E7, 0.21763049426316217, '-1191856926')) AND (((NULL)-(0.7114861580623001)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1581669347 0 2044884965'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(CASE WHEN NULL THEN '' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||('-1455507998')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-424931806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1608195388 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-992034535')) BETWEEN ((x'718d')) AND ((0.3311922722458097))))IS((+ ('-273158242')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((1.147487739E9))))&(((0.6199544317877649) BETWEEN ('72451405') AND (-1998256195)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (''))))<>((((-1266726595) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.1302333713537318 COLLATE NOCASE THEN ('ﱝ' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1136438059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))>(((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1989487765 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('-2074711230')) NOT BETWEEN ((0.20011748639517035)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2139293898'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=-299585448 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-997837006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1074800568 sz=-1392974670'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-410616151 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=448891826 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=631692794'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1806682841 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1740618904 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X27858d5d)) BETWEEN ((((((((((x'0799')OR('635714799')))AND(NULL)))OR(NULL)))OR('1127070644')))) AND ((((((x'03ea')AND(-853306369)))OR('958649475'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-419853674 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=758956299'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -507125849 sz=1338311133 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=23770337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1748137644'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=620656878 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')=(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(x'', ']e') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1205370462') BETWEEN (x'') AND (0.8827158171501471)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=289667310'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', ((((0.5440004909903164)OR(0.27120284252795235)))AND(NULL)), CASE WHEN -1355158232 THEN x'93c0ff6c' END, rtreenode(0.7288236938077612, 0.25557109025619495), ((x'')IS(NULL))))<=((CASE WHEN NULL THEN 'iW6/OJB哕' ELSE 0.34809725926637025 END, TOTAL_CHANGES(), ((0.2786592017073508)/(x'')), 0X7918b699 COLLATE BINARY, UPPER('oX')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1328304018')) NOT BETWEEN ((NULL)) AND ((1413434510))))OR(((('qW-풃nx3')) BETWEEN (('+-3TP)wd')) AND ((x''))))))AND((('if') NOT BETWEEN ('-388250930') AND ('()')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=472796948 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1445883375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffc9e7a73a) NOT BETWEEN (NULL) AND (x'756d'))) BETWEEN (0.12257552117291348) AND (((('z?29wg')) NOT BETWEEN (('[B')) AND ((0Xffffffff87c1948e))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1863483009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0X455fc408 THEN 0.7288236938077612 WHEN 0.5948383905672183 THEN NULL WHEN -1289310146 THEN NULL END)AND('ax4R' COLLATE BINARY)))AND((('356951008')LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1428041942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1298992650 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=570502443 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=962804571 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3652635097177248) NOT BETWEEN ('') AND ('919822459'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1593543631 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-496590486 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1654154175'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '437854700 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=57565479 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=683990317 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('뇧		4u8x~p')&('4?Ho'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=935695241 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1141279608')AND('	8GEafKG?')))OR(-1.897040343E9))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('|<㎵BU' COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<(('72451405'))), x'3530', ((x'68365093') BETWEEN (-1.729184252E9) AND ('z_bﴠ戲-'))))>(('ꉭQ' COLLATE NOCASE, ((x'') NOT BETWEEN (-1.897040343E9) AND (NULL)), ('' IN (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (0.2127803334822591, 0.401998934596263))) NOT BETWEEN (((0.4056409845980913)||(0X60f1696b))) AND ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULLIF(604119256, '109898422')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2034603973 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=31767493 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' COLLATE BINARY THEN ((x'') IS FALSE) ELSE ((x'') NOT BETWEEN (0.2576317774801741) AND ('A-V&V')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7774671590756361) BETWEEN (x'') AND ('>l')))>=((((NULL))>((0.06287068388976991))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'59f3' AS TEXT) IN ((((0.24619260780345054))>(('-595931498'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1062664041 0 sz=-73077510 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')IS(((0.26443090081242004) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1042979720 sz=-595513901 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4370317554726356)) NOT BETWEEN ((NULL)) AND ((1.611773515E9))))AND(((((((((x'')OR(0.38711961755268687)))AND(NULL)))OR(NULL)))AND(0.8173382641545434)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=352820165 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-264567431 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0xffffffffd82d5890)AND(-1602553888)))AND(NULL)))AND(-992492826)))OR(-1.950333228E9)))AND(x'e8a3')))AND(x'')))AND('830907419' COLLATE BINARY)))AND(CASE '1909096834'  WHEN NULL THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1417114748 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') NOT BETWEEN (NULL) AND (0Xffffffffdf5190be)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1729184252'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=224371854'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((1.445883375E9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1153375042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('546893699') BETWEEN (NULL) AND (0.8408328034570106))  WHEN -1788806801 THEN (NOT (0.17907329329046662)) WHEN ((((0.9537438329431254)OR('do')))AND(NULL)) THEN (((0.14009163254876167))==(('-1392974670'))) WHEN (x'' IN (0.7703631660827007, '')) THEN (+ (0.8810765774163221)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=546893699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1091261772 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CAST(0x7479e661 AS BLOB), 0.1764769835444966); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=-1748137644 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=938028318 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1519557846'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')IS NOT(382911089)))AND(((x'')>=(NULL)))))OR(((NULL)==('-480853392')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-609015027'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2068924253) NOT BETWEEN (0.9667351102725756) AND ('V<')) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '687133657 sz=2005203110'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1266726595 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1391431088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=7926592 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(CAST('f~' AS NUMERIC), (((('1909096834')AND(x'')))AND('!CZ'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=77301417'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=417296988 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2145211885'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(NULL)))>>((((0.4552948727757177)) BETWEEN ((x'')) AND (('RcZ'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'01a69b3b') BETWEEN ('a(UR!)h墜森') AND (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=1294286565 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-480306642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=901508094 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-569097175 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=189455428 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')+(0.4471279172056799)) THEN (('VPᾱ8Ⳮ')=(x'9018')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2081023882'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(x''))AND(CASE NULL  WHEN -2.69429048E8 THEN 1.09898422E8 WHEN x'' THEN x'c3b115d8' WHEN '1015473490' THEN '0.7036300517543476' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-997837006'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((rtreenode(x'', -1501784081))%(((NULL)IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1545857744'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '393846221 2 sz=1637754938 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1509514202 0 sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8066632491609128; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((0.7074039019619319)==('H|b9qw\n_E'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-1392974670 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1335698731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((((0.9950083918846175)AND(x'')))OR(0.9821954902869537)))) AND ((((x'') BETWEEN ('-1136438059') AND (0.7147758145254728))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1463475760 sz=-1845232610 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.335698731E9))=((CASE WHEN '1040681806' THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ((- ('(u)')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0.3665402491788532 THEN 0.08935816739348368 END, (('5K0PRDWK') BETWEEN (0.5613833554304901) AND ('')), CAST(0.09713468078647236 AS NUMERIC), ((x'56cf')/('979900551')), (0.46152862284358853 IN ('1435734484'))))==((NULL, CAST('' AS INTEGER), ((x'') NOT BETWEEN (x'') AND ('櫌On')), (- (x'')), ((('')) NOT BETWEEN (('1335698731')) AND (('	G')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-323400814 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-258013706 sz=364868088'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('혫F}3-)n|\r')GLOB(0.11480899548188417)), (('')+(x'')), CAST(0.10176429041073565 AS NUMERIC), LIKELY('-721088683')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'7ec1')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -1375102010 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL))>(('1608263235'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-197536213 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-305837539') NOTNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1550116661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=423867933 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1655922647 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1328304018 sz=-1497386994 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.4906263809222632)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT NULL COLLATE RTRIM, '淯%>Pi<প'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'0bfd')&(x'85b4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1938983739 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1179928321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1297920418 sz=505861426 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=27433524 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(0Xfffffffff1679d37))OR(CASE 0x562e6def  WHEN 0.6276775812811215 THEN NULL ELSE -707179549 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1464487449 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOT BETWEEN (((2115601010) BETWEEN (NULL) AND (0.5398019519362464))) AND ((- (-4.55409909E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=1435734484'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-890526368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1963388475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))>(((x'') BETWEEN ('0.30501945434947353') AND (0.059139753161603026)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('2066393479')AND(NULL COLLATE RTRIM)))AND(((735424794)|('0.1472127516777596')))))OR(((0.2870892103944278) NOT BETWEEN (x'') AND (0.34119266988287955)))))AND((('r敚	茏A6kwS') BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1375102010') BETWEEN (0X648b2332) AND (x'5adf')))<<(((((0.9108264371784826)OR(NULL)))AND(0.9045767427794428)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('}5~')<(''))  WHEN ((((x'')OR(x'')))AND('f{p')) THEN (+ (NULL)) WHEN CAST(0.40720021509109383 AS INTEGER) THEN CASE WHEN 0.19198503036944248 THEN '1335698731' WHEN '\r~tIWC' THEN NULL WHEN x'' THEN NULL ELSE NULL END WHEN (('f薳') IS FALSE) THEN (- (-494735239)) WHEN ((1435734484)!=(0.7288236938077612)) THEN ((x'e67b') NOT NULL) WHEN (~ (' Qqui(')) THEN ((x'') NOTNULL) ELSE '1611773515' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1659300851 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-2041258502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' sz=1449435338 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=901508094'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'775d')|('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'ae15') NOT BETWEEN (x'22ca') AND ('-1731048354')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-783886985 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1781410955 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-427907376 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.051159641249182486 IN ())) NOT BETWEEN (CAST(0.5121828112599403 AS INTEGER)) AND (UPPER(0.21141027390208733))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1329212091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.2272636142320945)OR(NULL)))AND('䗻'))) NOT BETWEEN (NULL COLLATE RTRIM) AND (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1345169773 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x39871c42, 'FALSE', 'F*ads\n	N'))==((0.3357412185289701, NULL, 0.9763736679293932))) IN ((('P?꯾Ag6y')||('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', '-1327525365 sz=-636457201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1789232750 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (NULL) AND (x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('H,lF')AND(-1328604004)))AND(NULL)))>>((((0.4381352195909751)) BETWEEN ((NULL)) AND ((0.2072041999101496))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((-1.667510958E9)) BETWEEN ((-1.748137644E9)) AND ((0.7822880820925121))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1795212818'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1382513689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.44113429115572056) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('H9I⏊4-W')AND(x'')))OR('1740618904')) IN ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=36255208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1655368981 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2022774883 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1604447548'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1657437012')AND('2145211885')))OR(0.060468868255254105))) NOT BETWEEN ((0.28259142765665823 IN ('-1794831778'))) AND (json_array_length(x'a597', 1335698731))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=368992490 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=263127296 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'2c1047022484'  WHEN '1582042444' THEN NULL WHEN x'' THEN '-1957235689' WHEN x'' THEN NULL ELSE x'' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-480853392 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt0', ' sz=-1007777361 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA mmap_size = -1895198982110833504; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5613'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET (c0)=('-2070980730'); -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
CREATE TABLE t0 (c0 INT ); -- 0ms;
PRAGMA locking_mode; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET c0='1259556404', c0=NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE t0 SET (c0)=('0.26395488451093796') WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('364868088'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t0 SET c0=x''; -- 0ms;
UPDATE rt0 SET (c1)=(0.889709612354481) WHERE ((CAST(rt0.c2 AS BLOB))||(((rt0.c0) ISNULL))); -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR REPLACE vt1 SET c0=0.0972085042887445, c0=x'' WHERE ''; -- 0ms;
VACUUM; -- 2ms;
ANALYZE temp; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 FOR EACH ROW  WHEN CAST((((t0.c0))==((t0.c0))) AS REAL) BEGIN DELETE FROM t0 WHERE (((t0.c0)) NOT BETWEEN (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (t0.c0)))));END; -- 0ms;
UPDATE vt1 SET c0=x'5b33', c0=-1.170415252E9, c0='-826964978', c0=0.9813798670185255; -- 1ms;
UPDATE OR FAIL t0 SET c0=''; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=935695241, c0=NULL; -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL WHERE (~ (CAST(NULL AS INTEGER))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2142178878); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1668038863); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53889'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 958649475);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '25596'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE vt1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c9 REAL; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c1)=('', 0.0891750762547654); -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_size = -4139879591492426784; -- 1ms;
UPDATE OR IGNORE vt0 SET c1=-1464487449, c1=x'', c1=NULL WHERE (((vt0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN 0.10886243064001133 WHEN vt0.c1 THEN vt0.c0 END))); -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(0.5893363204407513, 1.993019589E9, '-244867785') WHERE ((vt1.c0)%(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.6428089807949287 WHERE vt1.c0; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1608195388'); -- 0ms;
END TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, vt1, rt0 WHERE (CAST(LIKELIHOOD(rt0.c2, 0.5008410620962764) AS REAL)) ORDER BY ((((t0.c9)IS(rt0.c1)))IS(t0.c0)), CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(rt0.c2, 0.5008410620962764) AS REAL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((t0.c9)IS(rt0.c1)))IS(t0.c0)), CAST(x'' AS TEXT)  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(LIKELIHOOD(rt0.c2, 0.5008410620962764) AS REAL)) ORDER BY ((((t0.c9)IS(rt0.c1)))IS(t0.c0)), CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(rt0.c2, 0.5008410620962764) AS REAL)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((t0.c9)IS(rt0.c1)))IS(t0.c0)), CAST(x'' AS TEXT)  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CAST(LIKELIHOOD(rt0.c2, 0.5008410620962764) AS REAL)) ORDER BY ((((t0.c9)IS(rt0.c1)))IS(t0.c0)), CAST(x'' AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))>=((0.8591566176846677))))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))>=((0.8591566176846677))))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))>=((0.8591566176846677))))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))>=((0.8591566176846677))))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(((vt0.c0) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1) IS FALSE))))AND((((rt0.c1))>=((0.8591566176846677))))))AND(vt0.c1)));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END)GLOB((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END)GLOB((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END)GLOB((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END)GLOB((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((CASE WHEN vt1.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END)GLOB((~ (t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((vt1.c0)AND(t0.c9))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c9))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((vt1.c0)AND(t0.c9))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(t0.c9))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((vt1.c0)AND(t0.c9))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((x'a53b' IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9844972604596226)) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((x'a53b' IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9844972604596226)) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((x'a53b' IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9844972604596226)) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((x'a53b' IN ())) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9844972604596226)) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((x'a53b' IN ())) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (LIKELIHOOD(vt1.c0, 0.9844972604596226)) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<=(vt1.c0))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((vt0.c0)+(vt0.c1))))=((UNLIKELY(vt1.c0), (vt1.c0 IN ()), json_extract(vt0.c1, vt0.c0))))  NULLS LAST, ((vt1.c0)IS(((vt0.c0)*(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((vt0.c0)+(vt0.c1))))==((UNLIKELY(vt1.c0), (vt1.c0 IN ()), json_extract(vt0.c1, vt0.c0))))  NULLS LAST, ((vt1.c0)IS(((vt0.c0)*(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<=(vt1.c0))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((vt0.c0)+(vt0.c1))))=((UNLIKELY(vt1.c0), (vt1.c0 IN ()), json_extract(vt0.c1, vt0.c0))))  NULLS LAST, ((vt1.c0)IS(((vt0.c0)*(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((vt0.c0)+(vt0.c1))))==((UNLIKELY(vt1.c0), (vt1.c0 IN ()), json_extract(vt0.c1, vt0.c0))))  NULLS LAST, ((vt1.c0)IS(((vt0.c0)*(vt0.c1)))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)<=(vt1.c0))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)), ((vt0.c0)+(vt0.c1))))=((UNLIKELY(vt1.c0), (vt1.c0 IN ()), json_extract(vt0.c1, vt0.c0))))  NULLS LAST, ((vt1.c0)IS(((vt0.c0)*(vt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c1)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, CAST(((vt0.c0)LIKE(t0.c9)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY ((rt0.c1)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, CAST(((vt0.c0)LIKE(t0.c9)) AS REAL) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c1)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, CAST(((vt0.c0)LIKE(t0.c9)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY ((rt0.c1)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, CAST(((vt0.c0)LIKE(t0.c9)) AS REAL) ASC);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((rt0.c1)%(vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, CAST(((vt0.c0)LIKE(t0.c9)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((rt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CAST(t0.c9 AS INTEGER)))) ORDER BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN '-1935196499' END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)|(t0.c9)) THEN CASE t0.c9  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((t0.c0) IS TRUE) ELSE ((((x'')AND(vt0.c0)))OR(t0.c9)) END  NULLS FIRST, ((((((((t0.c0)AND(t0.c9)))AND(t0.c0)))OR((t0.c0 IN ()))))OR(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c9 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN '-1935196499' END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)|(t0.c9)) THEN CASE t0.c9  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((t0.c0) IS TRUE) ELSE ((((x'')AND(vt0.c0)))OR(t0.c9)) END  NULLS FIRST, ((((((((t0.c0)AND(t0.c9)))AND(t0.c0)))OR((t0.c0 IN ()))))OR(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CAST(t0.c9 AS INTEGER)))) ORDER BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN '-1935196499' END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)|(t0.c9)) THEN CASE t0.c9  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((t0.c0) IS TRUE) ELSE ((((x'')AND(vt0.c0)))OR(t0.c9)) END  NULLS FIRST, ((((((((t0.c0)AND(t0.c9)))AND(t0.c0)))OR((t0.c0 IN ()))))OR(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c9 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN '-1935196499' END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)|(t0.c9)) THEN CASE t0.c9  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((t0.c0) IS TRUE) ELSE ((((x'')AND(vt0.c0)))OR(t0.c9)) END  NULLS FIRST, ((((((((t0.c0)AND(t0.c9)))AND(t0.c0)))OR((t0.c0 IN ()))))OR(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((+ (CAST(t0.c9 AS INTEGER)))) ORDER BY CASE WHEN CASE vt0.c0  WHEN t0.c0 THEN '-1935196499' END THEN t0.c0 COLLATE NOCASE WHEN ((t0.c0)|(t0.c9)) THEN CASE t0.c9  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((t0.c0) IS TRUE) ELSE ((((x'')AND(vt0.c0)))OR(t0.c9)) END  NULLS FIRST, ((((((((t0.c0)AND(t0.c9)))AND(t0.c0)))OR((t0.c0 IN ()))))OR(t0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1142143755') ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1142143755') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1142143755') ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1142143755') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1142143755') ORDER BY ((((vt0.c0) IS FALSE)) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS TEXT) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c9 ELSE rt0.c2 END))==(((- (t0.c0)))))) ORDER BY ((((TRIM(rt0.c0))OR((((t0.c9)) BETWEEN ((t0.c9)) AND ((rt0.c0))))))AND(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED((NOT (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN vt0.c1 THEN t0.c9 ELSE rt0.c2 END))=(((- (t0.c0)))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS TEXT) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END ORDER BY ((((TRIM(rt0.c0))OR((((t0.c9)) BETWEEN ((t0.c9)) AND ((rt0.c0))))))AND(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED((NOT (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS TEXT) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c9 ELSE rt0.c2 END))==(((- (t0.c0)))))) ORDER BY ((((TRIM(rt0.c0))OR((((t0.c9)) BETWEEN ((t0.c9)) AND ((rt0.c0))))))AND(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED((NOT (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE t0.c0  WHEN vt0.c1 THEN t0.c9 ELSE rt0.c2 END))=(((- (t0.c0)))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS TEXT) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END ORDER BY ((((TRIM(rt0.c0))OR((((t0.c9)) BETWEEN ((t0.c9)) AND ((rt0.c0))))))AND(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED((NOT (vt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON (CAST(rt0.c0 AS TEXT) IN ()) FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c1)IS(rt0.c1)) ELSE CAST(vt0.c1 AS TEXT) END WHERE ((((CASE t0.c0  WHEN vt0.c1 THEN t0.c9 ELSE rt0.c2 END))==(((- (t0.c0)))))) ORDER BY ((((TRIM(rt0.c0))OR((((t0.c9)) BETWEEN ((t0.c9)) AND ((rt0.c0))))))AND(t0.c0 COLLATE NOCASE)) DESC  NULLS LAST, SQLITE_COMPILEOPTION_USED((NOT (vt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((~ (CASE t0.c9  WHEN vt1.c0 THEN t0.c9 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c9  WHEN vt1.c0 THEN t0.c9 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((~ (CASE t0.c9  WHEN vt1.c0 THEN t0.c9 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t0.c9  WHEN vt1.c0 THEN t0.c9 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((~ (CASE t0.c9  WHEN vt1.c0 THEN t0.c9 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c0)<=(rt0.c0)))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))OR(NULL)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<=(rt0.c0)))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c0)AND(rt0.c0)))OR(NULL)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c0)<=(rt0.c0)))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))OR(NULL)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<=(rt0.c0)))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c0)AND(rt0.c0)))OR(NULL)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c0)<=(rt0.c0)))OR(((rt0.c2)%(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY (((((rt0.c0)AND(rt0.c0)))OR(NULL)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((t0.c9)=(rt0.c1))))) ORDER BY CAST(((t0.c0)-(rt0.c0)) AS REAL), x'340f'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))*(((t0.c9)==(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(((t0.c0)-(rt0.c0)) AS REAL), x'340f'  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((t0.c9)=(rt0.c1))))) ORDER BY CAST(((t0.c0)-(rt0.c0)) AS REAL), x'340f'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))*(((t0.c9)==(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST(((t0.c0)-(rt0.c0)) AS REAL), x'340f'  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((t0.c9)=(rt0.c1))))) ORDER BY CAST(((t0.c0)-(rt0.c0)) AS REAL), x'340f'  NULLS LAST;
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((rt0.c2))<((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((vt1.c0)*(rt0.c1))))=((t0.c0, ((rt0.c0)AND(rt0.c2)), t0.c0 COLLATE BINARY)))) ORDER BY ((((vt1.c0)<>(t0.c0))) BETWEEN ((NOT ('1621286099'))) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((vt1.c0)*(rt0.c1))))==((t0.c0, ((rt0.c0)AND(rt0.c2)), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((vt1.c0)!=(t0.c0))) BETWEEN ((NOT ('1621286099'))) AND (NULL)) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((rt0.c2))<((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((vt1.c0)*(rt0.c1))))=((t0.c0, ((rt0.c0)AND(rt0.c2)), t0.c0 COLLATE BINARY)))) ORDER BY ((((vt1.c0)<>(t0.c0))) BETWEEN ((NOT ('1621286099'))) AND (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((vt1.c0)*(rt0.c1))))==((t0.c0, ((rt0.c0)AND(rt0.c2)), t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((vt1.c0)!=(t0.c0))) BETWEEN ((NOT ('1621286099'))) AND (NULL)) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (((((((rt0.c2))<((rt0.c2))), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), ((vt1.c0)*(rt0.c1))))=((t0.c0, ((rt0.c0)AND(rt0.c2)), t0.c0 COLLATE BINARY)))) ORDER BY ((((vt1.c0)<>(t0.c0))) BETWEEN ((NOT ('1621286099'))) AND (NULL)) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(DATETIME(rt0.c2, vt0.c1, vt0.c0))) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(DATETIME(rt0.c2, vt0.c1, vt0.c0))));
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(DATETIME(rt0.c2, vt0.c1, vt0.c0))) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(DATETIME(rt0.c2, vt0.c1, vt0.c0))));
SELECT ALL * FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))LIKE(DATETIME(rt0.c2, vt0.c1, vt0.c0))) WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (RTRIM((~ (t0.c0)))) ORDER BY (ABS(t0.c0) IN (((((t0.c9)AND(t0.c0)))OR(t0.c0)))) ASC, (((((+ (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c1)LIKE(t0.c9)))) DESC, ((((vt0.c1)/(t0.c9))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((~ (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (ABS(t0.c0) IN (((((t0.c9)AND(t0.c0)))OR(t0.c0)))) ASC, (((((+ (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c1)LIKE(t0.c9)))) DESC, ((((vt0.c1)/(t0.c9))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (RTRIM((~ (t0.c0)))) ORDER BY (ABS(t0.c0) IN (((((t0.c9)AND(t0.c0)))OR(t0.c0)))) ASC, (((((+ (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c1)LIKE(t0.c9)))) DESC, ((((vt0.c1)/(t0.c9))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((RTRIM((~ (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (ABS(t0.c0) IN (((((t0.c9)AND(t0.c0)))OR(t0.c0)))) ASC, (((((+ (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c1)LIKE(t0.c9)))) DESC, ((((vt0.c1)/(t0.c9))) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (RTRIM((~ (t0.c0)))) ORDER BY (ABS(t0.c0) IN (((((t0.c9)AND(t0.c0)))OR(t0.c0)))) ASC, (((((+ (t0.c0)))AND(CAST(vt0.c0 AS BLOB))))OR(((vt0.c1)LIKE(t0.c9)))) DESC, ((((vt0.c1)/(t0.c9))) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))<(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c0)) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((- (rt0.c1)), rt0.c0, rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((- (rt0.c1)), rt0.c0, rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((- (rt0.c1)), rt0.c0, rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((- (rt0.c1)), rt0.c0, rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c0 IN ((- (rt0.c1)), rt0.c0, rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1075130532) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1075130532) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1075130532) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1075130532) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (-1075130532) AND (vt0.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY '-1949393781' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '-1949393781' ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY '-1949393781' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY '-1949393781' ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY '-1949393781' ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((((vt0.c0) IS FALSE))AND((vt1.c0 IN ()))))AND((~ (vt0.c0))))) ORDER BY (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c9 END IN ()) ASC, ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)%((rt0.c0 IN ())))  NULLS LAST, ((((((t0.c0)OR(rt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt1.c0)))OR(rt0.c0)))AND('')))AND(vt0.c1)))AND(t0.c9)))OR(rt0.c0))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND((vt1.c0 IN ()))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c9 END IN ()) ASC, ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)%((rt0.c0 IN ())))  NULLS LAST, ((((((t0.c0)OR(rt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt1.c0)))OR(rt0.c0)))AND('')))AND(vt0.c1)))AND(t0.c9)))OR(rt0.c0))) AND (rt0.c2)) DESC);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((((vt0.c0) IS FALSE))AND((vt1.c0 IN ()))))AND((~ (vt0.c0))))) ORDER BY (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c9 END IN ()) ASC, ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)%((rt0.c0 IN ())))  NULLS LAST, ((((((t0.c0)OR(rt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt1.c0)))OR(rt0.c0)))AND('')))AND(vt0.c1)))AND(t0.c9)))OR(rt0.c0))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND((vt1.c0 IN ()))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c9 END IN ()) ASC, ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)%((rt0.c0 IN ())))  NULLS LAST, ((((((t0.c0)OR(rt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt1.c0)))OR(rt0.c0)))AND('')))AND(vt0.c1)))AND(t0.c9)))OR(rt0.c0))) AND (rt0.c2)) DESC);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((((vt0.c0) IS FALSE))AND((vt1.c0 IN ()))))AND((~ (vt0.c0))))) ORDER BY (CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c9 END IN ()) ASC, ((CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END)%((rt0.c0 IN ())))  NULLS LAST, ((((((t0.c0)OR(rt0.c0)))OR(t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt1.c0)))OR(rt0.c0)))AND('')))AND(vt0.c1)))AND(t0.c9)))OR(rt0.c0))) AND (rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((((vt0.c1))<((x'')))))) RIGHT OUTER JOIN rt0 ON UNLIKELY(((t0.c0)&(rt0.c0))) WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((((vt0.c1))<((x'')))))) RIGHT OUTER JOIN rt0 ON UNLIKELY(((t0.c0)&(rt0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((((vt0.c1))<((x'')))))) RIGHT OUTER JOIN rt0 ON UNLIKELY(((t0.c0)&(rt0.c0))) WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((rt0.c1)) NOT BETWEEN ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND (((((vt0.c1))<((x'')))))) RIGHT OUTER JOIN rt0 ON UNLIKELY(((t0.c0)&(rt0.c0))));
SELECT * FROM t0, vt1, vt0, rt0 WHERE (json_insert((vt0.c1 IN ()), (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, t0.c9)) AND ((rt0.c1, rt0.c1, t0.c9))), 0.859609499398521)) ORDER BY MAX(TRIM(vt0.c0, t0.c9), ((x'')<=(rt0.c2)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((vt0.c1 IN ()), (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, t0.c9)) AND ((rt0.c1, rt0.c1, t0.c9))), 0.859609499398521)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY MAX(TRIM(vt0.c0, t0.c9), ((x'')<=(rt0.c2)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(vt0.c1 AS INTEGER)));
SELECT * FROM t0, vt1, vt0, rt0 WHERE (json_insert((vt0.c1 IN ()), (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, t0.c9)) AND ((rt0.c1, rt0.c1, t0.c9))), 0.859609499398521)) ORDER BY MAX(TRIM(vt0.c0, t0.c9), ((x'')<=(rt0.c2)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((vt0.c1 IN ()), (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, t0.c9)) AND ((rt0.c1, rt0.c1, t0.c9))), 0.859609499398521)) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY MAX(TRIM(vt0.c0, t0.c9), ((x'')<=(rt0.c2)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(vt0.c1 AS INTEGER)));
SELECT * FROM t0, vt1, vt0, rt0 WHERE (json_insert((vt0.c1 IN ()), (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, t0.c9)) AND ((rt0.c1, rt0.c1, t0.c9))), 0.859609499398521)) ORDER BY MAX(TRIM(vt0.c0, t0.c9), ((x'')<=(rt0.c2)), (((vt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))), CAST(vt0.c1 AS INTEGER));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY TIME(((vt0.c1)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1)  NULLS FIRST, ((CASE WHEN NULL THEN rt0.c1 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TIME(((vt0.c1)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1)  NULLS FIRST, ((CASE WHEN NULL THEN rt0.c1 END) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY TIME(((vt0.c1)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1)  NULLS FIRST, ((CASE WHEN NULL THEN rt0.c1 END) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TIME(((vt0.c1)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1)  NULLS FIRST, ((CASE WHEN NULL THEN rt0.c1 END) IS FALSE) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((((vt0.c0) ISNULL)) IS TRUE)) ORDER BY TIME(((vt0.c1)<=(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c1)  NULLS FIRST, ((CASE WHEN NULL THEN rt0.c1 END) IS FALSE) DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-661571382' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-661571382' ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-661571382' ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-661571382' ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-661571382' ASC;
SELECT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY))!=((x'')))) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST, CASE json_quote(rt0.c1)  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE BINARY))!=((x'')))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST, CASE json_quote(rt0.c1)  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY))!=((x'')))) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST, CASE json_quote(rt0.c1)  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE BINARY))!=((x'')))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST, CASE json_quote(rt0.c1)  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY))!=((x'')))) ORDER BY (NOT (rt0.c1)) COLLATE NOCASE  NULLS LAST, CASE json_quote(rt0.c1)  WHEN IFNULL(rt0.c0, rt0.c2) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE (((vt0.c1) IS FALSE)) ORDER BY (((((vt1.c0)<<(rt0.c0))))=((load_extension(rt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((vt1.c0)<<(rt0.c0))))=((load_extension(rt0.c0, rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((vt0.c1) IS FALSE)) ORDER BY (((((vt1.c0)<<(rt0.c0))))=((load_extension(rt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((vt1.c0)<<(rt0.c0))))=((load_extension(rt0.c0, rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((vt0.c1) IS FALSE)) ORDER BY (((((vt1.c0)<<(rt0.c0))))=((load_extension(rt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((t0.c9)OR(rt0.c2)))AND(vt0.c1)))AND(x'')))OR(vt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((0.6708462076010105)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.c1)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c9)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c9)OR(rt0.c2)))AND(vt0.c1)))AND(x'')))OR(vt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((((0.6708462076010105)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.c1)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c9)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((t0.c9)OR(rt0.c2)))AND(vt0.c1)))AND(x'')))OR(vt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((0.6708462076010105)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.c1)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c9)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c9)OR(rt0.c2)))AND(vt0.c1)))AND(x'')))OR(vt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((((((0.6708462076010105)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.c1)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c9)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((((t0.c9)OR(rt0.c2)))AND(vt0.c1)))AND(x'')))OR(vt0.c1))) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c2) IS TRUE)))) ORDER BY ((((((((((((0.6708462076010105)OR(vt0.c1)))AND(rt0.c0)))AND(vt0.c1)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c9)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN vt1 ON 0.6837434383241633 WHERE (((((((((((t0.c9) NOT BETWEEN (rt0.c0) AND ('-123772946')))OR('120355555')))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))OR(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((NULL COLLATE RTRIM, ABS(DISTINCT vt0.c0), CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()), ((vt0.c1)=(vt0.c1)), (((vt0.c1)) NOT BETWEEN (('758956299')) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c9) NOT BETWEEN (rt0.c0) AND ('-123772946')))OR('120355555')))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))OR(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN vt1 ON 0.6837434383241633 ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((NULL COLLATE RTRIM, ABS(DISTINCT vt0.c0), CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()), ((vt0.c1)==(vt0.c1)), (((vt0.c1)) NOT BETWEEN (('758956299')) AND ((vt1.c0)))))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN vt1 ON 0.6837434383241633 WHERE (((((((((((t0.c9) NOT BETWEEN (rt0.c0) AND ('-123772946')))OR('120355555')))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))OR(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((NULL COLLATE RTRIM, ABS(DISTINCT vt0.c0), CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()), ((vt0.c1)=(vt0.c1)), (((vt0.c1)) NOT BETWEEN (('758956299')) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c9) NOT BETWEEN (rt0.c0) AND ('-123772946')))OR('120355555')))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))OR(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN vt1 ON 0.6837434383241633 ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((NULL COLLATE RTRIM, ABS(DISTINCT vt0.c0), CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()), ((vt0.c1)==(vt0.c1)), (((vt0.c1)) NOT BETWEEN (('758956299')) AND ((vt1.c0)))))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ()) RIGHT OUTER JOIN vt1 ON 0.6837434383241633 WHERE (((((((((((t0.c9) NOT BETWEEN (rt0.c0) AND ('-123772946')))OR('120355555')))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))OR(((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))))) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((NULL COLLATE RTRIM, ABS(DISTINCT vt0.c0), CASE WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c1 END)) AND (((rt0.c2 IN ()), ((vt0.c1)=(vt0.c1)), (((vt0.c1)) NOT BETWEEN (('758956299')) AND ((vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) IS FALSE));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))>>(vt1.c0))) ORDER BY ((vt1.c0) NOT NULL) DESC  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))>>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) DESC  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))>>(vt1.c0))) ORDER BY ((vt1.c0) NOT NULL) DESC  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))>>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) NOT NULL) DESC  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))>>(vt1.c0))) ORDER BY ((vt1.c0) NOT NULL) DESC  NULLS LAST, ((CASE WHEN vt1.c0 THEN vt1.c0 END)||((vt1.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<((- (vt1.c0))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))<<((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<((- (vt1.c0))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT))<<((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<<((- (vt1.c0))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) ISNULL);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((((((((vt0.c0, rt0.c0, rt0.c2))<((vt0.c1, t0.c9, 0.711295573256483))))OR(CASE rt0.c2  WHEN t0.c9 THEN vt1.c0 WHEN t0.c9 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)))OR((((vt0.c0))==((rt0.c2))))))AND((rt0.c2 IN ()))))OR(((t0.c0)/(rt0.c0))))) ORDER BY ((((0.4493054963718329)AND(vt0.c0))) BETWEEN ((vt0.c1 IN ('lJX\r', rt0.c1))) AND (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, rt0.c0, rt0.c2))<((vt0.c1, t0.c9, 0.711295573256483))))OR(CASE rt0.c2  WHEN t0.c9 THEN vt1.c0 WHEN t0.c9 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)))OR((((vt0.c0))==((rt0.c2))))))AND((rt0.c2 IN ()))))OR(((t0.c0)/(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((((0.4493054963718329)AND(vt0.c0))) BETWEEN ((vt0.c1 IN ('lJX\r', rt0.c1))) AND (((vt0.c1) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((((((((vt0.c0, rt0.c0, rt0.c2))<((vt0.c1, t0.c9, 0.711295573256483))))OR(CASE rt0.c2  WHEN t0.c9 THEN vt1.c0 WHEN t0.c9 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)))OR((((vt0.c0))==((rt0.c2))))))AND((rt0.c2 IN ()))))OR(((t0.c0)/(rt0.c0))))) ORDER BY ((((0.4493054963718329)AND(vt0.c0))) BETWEEN ((vt0.c1 IN ('lJX\r', rt0.c1))) AND (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0, rt0.c0, rt0.c2))<((vt0.c1, t0.c9, 0.711295573256483))))OR(CASE rt0.c2  WHEN t0.c9 THEN vt1.c0 WHEN t0.c9 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)))OR((((vt0.c0))==((rt0.c2))))))AND((rt0.c2 IN ()))))OR(((t0.c0)/(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((((0.4493054963718329)AND(vt0.c0))) BETWEEN ((vt0.c1 IN ('lJX\r', rt0.c1))) AND (((vt0.c1) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((((((((((vt0.c0, rt0.c0, rt0.c2))<((vt0.c1, t0.c9, 0.711295573256483))))OR(CASE rt0.c2  WHEN t0.c9 THEN vt1.c0 WHEN t0.c9 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE rt0.c2 END)))OR((((vt0.c0))==((rt0.c2))))))AND((rt0.c2 IN ()))))OR(((t0.c0)/(rt0.c0))))) ORDER BY ((((0.4493054963718329)AND(vt0.c0))) BETWEEN ((vt0.c1 IN ('lJX\r', rt0.c1))) AND (((vt0.c1) IS TRUE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (0.5749335798371569) AND (((rt0.c0)/(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (0.5749335798371569) AND (((rt0.c0)/(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (0.5749335798371569) AND (((rt0.c0)/(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (0.5749335798371569) AND (((rt0.c0)/(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c1 AS REAL)  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN rt0.c0 END) ORDER BY ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (0.5749335798371569) AND (((rt0.c0)/(rt0.c1))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN (t0.c0))) IS FALSE));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(rt0.c2))) BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c0)))OR(rt0.c2))) BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY vt0.c0);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(rt0.c2))) BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c0)))OR(rt0.c2))) BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY vt0.c0);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c0)))OR(rt0.c2))) BETWEEN (((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(rt0.c2)))AND(vt1.c0)))AND(vt0.c0)))AND(rt0.c2))) AND (((rt0.c0) IS TRUE)))) ORDER BY vt0.c0;
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('0.008582020897417886')))) IS TRUE)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(-455409909)))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('0.008582020897417886')))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(-455409909)))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('0.008582020897417886')))) IS TRUE)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(-455409909)))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('0.008582020897417886')))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(-455409909)))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('0.008582020897417886')))) IS TRUE)) ORDER BY ((((((((((((vt1.c0)AND(vt1.c0)))AND(-455409909)))OR(vt1.c0)))OR(vt1.c0)))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN (vt1.c0)))) DESC;
SELECT * FROM vt1, vt0, rt0 WHERE ((((((NOT (x'1ca3')))AND(rt0.c1)))AND(LAST_INSERT_ROWID()))) ORDER BY ((((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))-(((((x'6e7c')OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (x'1ca3')))AND(rt0.c1)))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))-(((((x'6e7c')OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((NOT (x'1ca3')))AND(rt0.c1)))AND(LAST_INSERT_ROWID()))) ORDER BY ((((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))-(((((x'6e7c')OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (x'1ca3')))AND(rt0.c1)))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))-(((((x'6e7c')OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((NOT (x'1ca3')))AND(rt0.c1)))AND(LAST_INSERT_ROWID()))) ORDER BY ((((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))-(((((x'6e7c')OR(vt0.c0)))OR(rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((((((vt0.c1) NOTNULL), (~ (rt0.c0)), CAST(rt0.c2 AS INTEGER)))>((((rt0.c1) NOT BETWEEN ('-417938709') AND (vt1.c0)), vt0.c0, CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY (~ (((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL), (~ (rt0.c0)), CAST(rt0.c2 AS INTEGER)))>((((rt0.c1) NOT BETWEEN ('-417938709') AND (vt1.c0)), vt0.c0, CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY (~ (((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((((((vt0.c1) NOTNULL), (~ (rt0.c0)), CAST(rt0.c2 AS INTEGER)))>((((rt0.c1) NOT BETWEEN ('-417938709') AND (vt1.c0)), vt0.c0, CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY (~ (((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOTNULL), (~ (rt0.c0)), CAST(rt0.c2 AS INTEGER)))>((((rt0.c1) NOT BETWEEN ('-417938709') AND (vt1.c0)), vt0.c0, CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY (~ (((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, vt1, t0, vt0 WHERE ((((((vt0.c1) NOTNULL), (~ (rt0.c0)), CAST(rt0.c2 AS INTEGER)))>((((rt0.c1) NOT BETWEEN ('-417938709') AND (vt1.c0)), vt0.c0, CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 END)))) ORDER BY (~ (((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c9 COLLATE BINARY)LIKE(((t0.c9) IS TRUE)))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)/(t0.c0)) THEN CASE WHEN 0.6951306959375162 THEN t0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9 COLLATE BINARY)LIKE(((t0.c9) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)/(t0.c0)) THEN CASE WHEN 0.6951306959375162 THEN t0.c0 END END  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c9 COLLATE BINARY)LIKE(((t0.c9) IS TRUE)))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)/(t0.c0)) THEN CASE WHEN 0.6951306959375162 THEN t0.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9 COLLATE BINARY)LIKE(((t0.c9) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)/(t0.c0)) THEN CASE WHEN 0.6951306959375162 THEN t0.c0 END END  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c9 COLLATE BINARY)LIKE(((t0.c9) IS TRUE)))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM  NULLS FIRST, CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c0)/(t0.c0)) THEN CASE WHEN 0.6951306959375162 THEN t0.c0 END END  NULLS FIRST;
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))OR(((vt1.c0)>>(vt0.c0))))) ORDER BY (((+ (vt0.c0)))==(TRIM(DISTINCT rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))OR(((vt1.c0)>>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (((+ (vt0.c0)))==(TRIM(DISTINCT rt0.c2))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))OR(((vt1.c0)>>(vt0.c0))))) ORDER BY (((+ (vt0.c0)))==(TRIM(DISTINCT rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))OR(((vt1.c0)>>(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (((+ (vt0.c0)))==(TRIM(DISTINCT rt0.c2))) ASC  NULLS LAST);
SELECT * FROM t0, vt0, vt1, rt0 WHERE ((((((- (vt0.c0)))OR(((rt0.c0)/(rt0.c2)))))OR(((vt1.c0)>>(vt0.c0))))) ORDER BY (((+ (vt0.c0)))==(TRIM(DISTINCT rt0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.37763521622779717))AND(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.37763521622779717))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.37763521622779717))AND(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c0, 0.37763521622779717))AND(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c0, 0.37763521622779717))AND(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0 IN ('쉆NNB')) IN ())  NULLS LAST, vt0.c0  NULLS FIRST, ((((t0.c0) NOT NULL))GLOB((((vt0.c1))==((t0.c9)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ('쉆NNB')) IN ())  NULLS LAST, vt0.c0  NULLS FIRST, ((((t0.c0) NOT NULL))GLOB((((vt0.c1))==((t0.c9)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0 IN ('쉆NNB')) IN ())  NULLS LAST, vt0.c0  NULLS FIRST, ((((t0.c0) NOT NULL))GLOB((((vt0.c1))==((t0.c9)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 IN ('쉆NNB')) IN ())  NULLS LAST, vt0.c0  NULLS FIRST, ((((t0.c0) NOT NULL))GLOB((((vt0.c1))==((t0.c9)))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) ORDER BY ((vt0.c0 IN ('쉆NNB')) IN ())  NULLS LAST, vt0.c0  NULLS FIRST, ((((t0.c0) NOT NULL))GLOB((((vt0.c1))==((t0.c9)))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (- (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (- (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (- (CASE WHEN vt1.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((((rt0.c1)OR(t0.c9)))AND(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c9)))AND(NULL))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((((rt0.c1)OR(t0.c9)))AND(NULL))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t0.c9)))AND(NULL))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((((rt0.c1)OR(t0.c9)))AND(NULL))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY (- (CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY (- (CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT NULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT NULL) IN ())) ORDER BY (- (CASE WHEN rt0.c1 THEN rt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE 1015473490  WHEN ((t0.c0)-(t0.c0)) THEN 2.145211885E9 END WHERE (DATE((vt0.c1 IN (vt0.c1, 0X2b213988)), ((((vt0.c0)AND('1863483009')))OR(vt0.c1)), t0.c0));
SELECT SUM(count) FROM (SELECT ((DATE((vt0.c1 IN (vt0.c1, 0X2b213988)), ((((vt0.c0)AND('1863483009')))OR(vt0.c1)), t0.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE 1015473490  WHEN ((t0.c0)-(t0.c0)) THEN 2.145211885E9 END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE 1015473490  WHEN ((t0.c0)-(t0.c0)) THEN 2.145211885E9 END WHERE (DATE((vt0.c1 IN (vt0.c1, 0X2b213988)), ((((vt0.c0)AND('1863483009')))OR(vt0.c1)), t0.c0));
SELECT SUM(count) FROM (SELECT ((DATE((vt0.c1 IN (vt0.c1, 0X2b213988)), ((((vt0.c0)AND('1863483009')))OR(vt0.c1)), t0.c0)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE 1015473490  WHEN ((t0.c0)-(t0.c0)) THEN 2.145211885E9 END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE 1015473490  WHEN ((t0.c0)-(t0.c0)) THEN 2.145211885E9 END WHERE (DATE((vt0.c1 IN (vt0.c1, 0X2b213988)), ((((vt0.c0)AND('1863483009')))OR(vt0.c1)), t0.c0));
SELECT * FROM t0, vt0, rt0 INNER JOIN vt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) BETWEEN (x'1204bca7') AND (((t0.c9) NOT BETWEEN ('1947043312') AND (rt0.c0)))) WHERE ('854274872');
SELECT SUM(count) FROM (SELECT ALL (('854274872') IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0 INNER JOIN vt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) BETWEEN (x'1204bca7') AND (((t0.c9) NOT BETWEEN ('1947043312') AND (rt0.c0)))));
SELECT * FROM t0, vt0, rt0 INNER JOIN vt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) BETWEEN (x'1204bca7') AND (((t0.c9) NOT BETWEEN ('1947043312') AND (rt0.c0)))) WHERE ('854274872');
SELECT SUM(count) FROM (SELECT ALL (('854274872') IS TRUE)  as count FROM t0 NOT INDEXED, vt0, rt0 INNER JOIN vt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) BETWEEN (x'1204bca7') AND (((t0.c9) NOT BETWEEN ('1947043312') AND (rt0.c0)))));
SELECT * FROM t0, vt0, rt0 INNER JOIN vt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) BETWEEN (x'1204bca7') AND (((t0.c9) NOT BETWEEN ('1947043312') AND (rt0.c0)))) WHERE ('854274872');
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))<>(NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))!=(NULLIF(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND('')))OR(vt0.c1))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND('')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND('')))OR(vt0.c1))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c0)AND('')))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (((((vt0.c0)AND('')))OR(vt0.c1))))) ORDER BY ((vt0.c0)==(vt0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON rt0.c1 WHERE (((((((rt0.c2, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c1, vt0.c0))), CAST(x'' AS TEXT), ((vt0.c0) IS FALSE), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c1 IN (rt0.c1)), ((vt0.c1)AND(rt0.c0)), ((vt0.c0)IS NOT(vt0.c1))))<((((rt0.c1) IS FALSE), ((vt1.c0)<>(vt0.c1)), ((vt0.c1) ISNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), IFNULL(vt0.c1, vt0.c1), CASE rt0.c2  WHEN 'EP]eF濪D)\n' THEN rt0.c1 END, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY ((0X4e72a2ad) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c1, vt0.c0))), CAST(x'' AS TEXT), ((vt0.c0) IS FALSE), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c1 IN (rt0.c1)), ((vt0.c1)AND(rt0.c0)), ((vt0.c0)IS NOT(vt0.c1))))<((((rt0.c1) IS FALSE), ((vt1.c0)<>(vt0.c1)), ((vt0.c1) ISNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), IFNULL(vt0.c1, vt0.c1), CASE rt0.c2  WHEN 'EP]eF濪D)\n' THEN rt0.c1 END, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON rt0.c1 ORDER BY ((0X4e72a2ad) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt0.c0)));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON rt0.c1 WHERE (((((((rt0.c2, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c1, vt0.c0))), CAST(x'' AS TEXT), ((vt0.c0) IS FALSE), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c1 IN (rt0.c1)), ((vt0.c1)AND(rt0.c0)), ((vt0.c0)IS NOT(vt0.c1))))<((((rt0.c1) IS FALSE), ((vt1.c0)<>(vt0.c1)), ((vt0.c1) ISNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), IFNULL(vt0.c1, vt0.c1), CASE rt0.c2  WHEN 'EP]eF濪D)\n' THEN rt0.c1 END, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY ((0X4e72a2ad) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c1, vt0.c0))), CAST(x'' AS TEXT), ((vt0.c0) IS FALSE), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c1 IN (rt0.c1)), ((vt0.c1)AND(rt0.c0)), ((vt0.c0)IS NOT(vt0.c1))))<((((rt0.c1) IS FALSE), ((vt1.c0)<>(vt0.c1)), ((vt0.c1) ISNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), IFNULL(vt0.c1, vt0.c1), CASE rt0.c2  WHEN 'EP]eF濪D)\n' THEN rt0.c1 END, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON rt0.c1 ORDER BY ((0X4e72a2ad) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt0.c0)));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON rt0.c1 WHERE (((((((rt0.c2, rt0.c2, vt0.c0))>=((rt0.c0, rt0.c1, vt0.c0))), CAST(x'' AS TEXT), ((vt0.c0) IS FALSE), CASE rt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, (rt0.c1 IN (rt0.c1)), ((vt0.c1)AND(rt0.c0)), ((vt0.c0)IS NOT(vt0.c1))))<((((rt0.c1) IS FALSE), ((vt1.c0)<>(vt0.c1)), ((vt0.c1) ISNULL), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), IFNULL(vt0.c1, vt0.c1), CASE rt0.c2  WHEN 'EP]eF濪D)\n' THEN rt0.c1 END, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) ORDER BY ((0X4e72a2ad) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt0.c0));
SELECT ALL * FROM t0 WHERE (((((t0.c9)AND(t0.c0 COLLATE BINARY)))OR((((t0.c0))=((t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)AND(t0.c0 COLLATE BINARY)))OR((((t0.c0))=((t0.c9)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c9)AND(t0.c0 COLLATE BINARY)))OR((((t0.c0))=((t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)AND(t0.c0 COLLATE BINARY)))OR((((t0.c0))=((t0.c9)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c9)AND(t0.c0 COLLATE BINARY)))OR((((t0.c0))=((t0.c9))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2)LIKE(rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(-1328604004)))), (('Pk wk' COLLATE NOCASE)IS NOT((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)LIKE(rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(-1328604004)))), (('Pk wk' COLLATE NOCASE)IS NOT((+ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2)LIKE(rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(-1328604004)))), (('Pk wk' COLLATE NOCASE)IS NOT((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)LIKE(rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(-1328604004)))), (('Pk wk' COLLATE NOCASE)IS NOT((+ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c2)LIKE(rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(-1328604004)))), (('Pk wk' COLLATE NOCASE)IS NOT((+ (rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) WHERE (UNLIKELY(0.17416556992352517));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.17416556992352517)) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) WHERE (UNLIKELY(0.17416556992352517));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.17416556992352517)) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt0 ON CAST(((t0.c0) IS FALSE) AS NUMERIC) WHERE (UNLIKELY(0.17416556992352517));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c0)) BETWEEN ((t0.c9)) AND ((vt1.c0))) IN ())) ORDER BY (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) BETWEEN ((t0.c9)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (LOWER(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c0)) BETWEEN ((t0.c9)) AND ((vt1.c0))) IN ())) ORDER BY (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)) BETWEEN ((t0.c9)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (LOWER(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c0)) BETWEEN ((t0.c9)) AND ((vt1.c0))) IN ())) ORDER BY (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY CAST(((rt0.c2)||(rt0.c0)) AS TEXT) DESC  NULLS FIRST, 0.4081291410807151  NULLS LAST, ((((vt0.c1) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))  NULLS FIRST, (x'20a9e245' IN ());
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY CAST(((rt0.c2)||(rt0.c0)) AS TEXT) DESC  NULLS FIRST, 0.4081291410807151  NULLS LAST, ((((vt0.c1) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))  NULLS FIRST, (x'20a9e245' IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY CAST(((rt0.c2)||(rt0.c0)) AS TEXT) DESC  NULLS FIRST, 0.4081291410807151  NULLS LAST, ((((vt0.c1) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))  NULLS FIRST, (x'20a9e245' IN ());
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0) ISNULL) COLLATE BINARY ORDER BY CAST(((rt0.c2)||(rt0.c0)) AS TEXT) DESC  NULLS FIRST, 0.4081291410807151  NULLS LAST, ((((vt0.c1) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))  NULLS FIRST, (x'20a9e245' IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0) ISNULL) COLLATE BINARY WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY CAST(((rt0.c2)||(rt0.c0)) AS TEXT) DESC  NULLS FIRST, 0.4081291410807151  NULLS LAST, ((((vt0.c1) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND ((((vt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))  NULLS FIRST, (x'20a9e245' IN ());
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND ('')) COLLATE NOCASE FULL OUTER JOIN vt0 ON 0.015594772677696267 COLLATE RTRIM WHERE (vt0.c1) ORDER BY (((rt0.c1)) BETWEEN (((('380931546') ISNULL))) AND ((CAST(vt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND ('')) COLLATE NOCASE FULL OUTER JOIN vt0 ON 0.015594772677696267 COLLATE RTRIM ORDER BY (((rt0.c1)) BETWEEN (((('380931546') ISNULL))) AND ((CAST(vt0.c1 AS REAL)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND ('')) COLLATE NOCASE FULL OUTER JOIN vt0 ON 0.015594772677696267 COLLATE RTRIM WHERE (vt0.c1) ORDER BY (((rt0.c1)) BETWEEN (((('380931546') ISNULL))) AND ((CAST(vt0.c1 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt0.c0) AND ('')) COLLATE NOCASE FULL OUTER JOIN vt0 ON 0.015594772677696267 COLLATE RTRIM ORDER BY (((rt0.c1)) BETWEEN (((('380931546') ISNULL))) AND ((CAST(vt0.c1 AS REAL)))) DESC);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ())) ORDER BY (((((t0.c9) BETWEEN (t0.c9) AND (t0.c9)), HEX(DISTINCT t0.c9), t0.c9))==((-354893685, ((t0.c0)<(t0.c9)), ((t0.c0)&(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c9) BETWEEN (t0.c9) AND (t0.c9)), HEX(DISTINCT t0.c9), t0.c9))=((-354893685, ((t0.c0)<(t0.c9)), ((t0.c0)&(t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ())) ORDER BY (((((t0.c9) BETWEEN (t0.c9) AND (t0.c9)), HEX(DISTINCT t0.c9), t0.c9))==((-354893685, ((t0.c0)<(t0.c9)), ((t0.c0)&(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c9) BETWEEN (t0.c9) AND (t0.c9)), HEX(DISTINCT t0.c9), t0.c9))=((-354893685, ((t0.c0)<(t0.c9)), ((t0.c0)&(t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ())) ORDER BY (((((t0.c9) BETWEEN (t0.c9) AND (t0.c9)), HEX(DISTINCT t0.c9), t0.c9))==((-354893685, ((t0.c0)<(t0.c9)), ((t0.c0)&(t0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((x'' IN ())) ORDER BY ((x'')!=(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((x'')!=(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((x'' IN ())) ORDER BY ((x'')!=(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((x'')!=(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((x'' IN ())) ORDER BY ((x'')!=(rt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON t0.c9 WHERE ((((rt0.c2)) BETWEEN (((x'' IN (rt0.c0)))) AND ((((t0.c0) NOTNULL))))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) ASC, ((vt0.c1)-('-984009883'))  NULLS LAST, LIKELIHOOD(DISTINCT t0.c0, 0.30365045431147764)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((x'' IN (rt0.c0)))) AND ((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON t0.c9 ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) ASC, ((vt0.c1)-('-984009883'))  NULLS LAST, LIKELIHOOD(DISTINCT t0.c0, 0.30365045431147764)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON t0.c9 WHERE ((((rt0.c2)) BETWEEN (((x'' IN (rt0.c0)))) AND ((((t0.c0) NOTNULL))))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) ASC, ((vt0.c1)-('-984009883'))  NULLS LAST, LIKELIHOOD(DISTINCT t0.c0, 0.30365045431147764)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN (((x'' IN (rt0.c0)))) AND ((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON t0.c9 ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) ASC, ((vt0.c1)-('-984009883'))  NULLS LAST, LIKELIHOOD(DISTINCT t0.c0, 0.30365045431147764)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, t0 FULL OUTER JOIN vt0 ON t0.c9 WHERE ((((rt0.c2)) BETWEEN (((x'' IN (rt0.c0)))) AND ((((t0.c0) NOTNULL))))) ORDER BY ((rt0.c0)>>((rt0.c1 IN ()))) ASC, ((vt0.c1)-('-984009883'))  NULLS LAST, LIKELIHOOD(DISTINCT t0.c0, 0.30365045431147764)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)>=(0.5965765200526751)) END) ORDER BY ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((t0.c0)LIKE(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)>=(0.5965765200526751)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((t0.c0)LIKE(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)>=(0.5965765200526751)) END) ORDER BY ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((t0.c0)LIKE(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)>=(0.5965765200526751)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((t0.c0)LIKE(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(rt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)>=(0.5965765200526751)) END) ORDER BY ((((CASE WHEN rt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((t0.c0)LIKE(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM t0 WHERE ((((((- (t0.c0)))OR(((t0.c9)IS NOT(t0.c9)))))AND('-525754561'))) ORDER BY CASE ((t0.c0)*(t0.c9))  WHEN GLOB(t0.c9, t0.c0) THEN ((t0.c9) BETWEEN (t0.c9) AND (t0.c9)) ELSE ((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))OR(t0.c9)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR(((t0.c9)IS NOT(t0.c9)))))AND('-525754561'))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)*(t0.c9))  WHEN GLOB(t0.c9, t0.c0) THEN ((t0.c9) BETWEEN (t0.c9) AND (t0.c9)) ELSE ((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))OR(t0.c9)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((- (t0.c0)))OR(((t0.c9)IS NOT(t0.c9)))))AND('-525754561'))) ORDER BY CASE ((t0.c0)*(t0.c9))  WHEN GLOB(t0.c9, t0.c0) THEN ((t0.c9) BETWEEN (t0.c9) AND (t0.c9)) ELSE ((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))OR(t0.c9)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR(((t0.c9)IS NOT(t0.c9)))))AND('-525754561'))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)*(t0.c9))  WHEN GLOB(t0.c9, t0.c0) THEN ((t0.c9) BETWEEN (t0.c9) AND (t0.c9)) ELSE ((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))OR(t0.c9)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((- (t0.c0)))OR(((t0.c9)IS NOT(t0.c9)))))AND('-525754561'))) ORDER BY CASE ((t0.c0)*(t0.c9))  WHEN GLOB(t0.c9, t0.c0) THEN ((t0.c9) BETWEEN (t0.c9) AND (t0.c9)) ELSE ((((((((t0.c0)OR(t0.c0)))OR(NULL)))OR(t0.c0)))OR(t0.c9)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt1.c0)!=(vt1.c0)) END) ORDER BY (((vt1.c0 IN ()))-(CAST(t0.c0 AS REAL)))  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt1.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0 IN ()))-(CAST(t0.c0 AS REAL)))  NULLS LAST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt1.c0)!=(vt1.c0)) END) ORDER BY (((vt1.c0 IN ()))-(CAST(t0.c0 AS REAL)))  NULLS LAST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt1.c0)<>(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c0 IN ()))-(CAST(t0.c0 AS REAL)))  NULLS LAST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE ((t0.c0) NOTNULL)  WHEN vt0.c1 THEN ((vt1.c0)!=(vt1.c0)) END) ORDER BY (((vt1.c0 IN ()))-(CAST(t0.c0 AS REAL)))  NULLS LAST, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'3cad');
SELECT SUM(count) FROM (SELECT ALL ((x'3cad') IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'3cad');
SELECT SUM(count) FROM (SELECT ALL ((x'3cad') IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (x'3cad');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN t0.c9 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN t0.c9 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN t0.c9 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN t0.c9 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c1 THEN t0.c9 ELSE rt0.c1 END)));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE ((vt1.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON CAST('1040681806' AS INTEGER) WHERE (((((NULL IN ())))<>((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))<>((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON CAST('1040681806' AS INTEGER));
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON CAST('1040681806' AS INTEGER) WHERE (((((NULL IN ())))<>((rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))<>((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON CAST('1040681806' AS INTEGER));
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON CAST('1040681806' AS INTEGER) WHERE (((((NULL IN ())))<>((rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)&(t0.c9)) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(t0.c9)) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)&(t0.c9)) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(t0.c9)) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1)&(t0.c9)) IN (((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((x'') ISNULL)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((t0.c9) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((t0.c9) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((x'') ISNULL)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((t0.c9) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') ISNULL)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((t0.c9) IS TRUE)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((x'') ISNULL)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (((t0.c9) IS TRUE))));
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((((vt0.c1))>=((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))>=((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((((vt0.c1))>=((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))>=((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT * FROM vt1, rt0, t0, vt0 WHERE (CAST((((vt0.c1))>=((vt1.c0))) AS REAL));
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY (0.3264945437645602 IN (((((((((t0.c9)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR('W	dGk.B'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (0.3264945437645602 IN (((((((((t0.c9)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR('W	dGk.B'))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY (0.3264945437645602 IN (((((((((t0.c9)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR('W	dGk.B'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (0.3264945437645602 IN (((((((((t0.c9)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR('W	dGk.B'))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (vt1.c0) ORDER BY (0.3264945437645602 IN (((((((((t0.c9)OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR('W	dGk.B'))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((vt0.c1)LIKE(t0.c9)))>(((((t0.c9)OR(t0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)LIKE(t0.c9)))>(((((t0.c9)OR(t0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((vt0.c1)LIKE(t0.c9)))>(((((t0.c9)OR(t0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c1)LIKE(t0.c9)))>(((((t0.c9)OR(t0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((vt0.c1)LIKE(t0.c9)))>(((((t0.c9)OR(t0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c9)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c0)OR(t0.c9)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c9)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c0)OR(t0.c9)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c9)))AND(t0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((('!w({' IN ()))OR(((rt0.c0)LIKE(rt0.c1)))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (NULL)))))OR(rt0.c2)))OR(((vt1.c0)<<(vt0.c1))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((('!w({' IN ()))OR(((rt0.c0)LIKE(rt0.c1)))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (NULL)))))OR(rt0.c2)))OR(((vt1.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((('!w({' IN ()))OR(((rt0.c0)LIKE(rt0.c1)))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (NULL)))))OR(rt0.c2)))OR(((vt1.c0)<<(vt0.c1))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((('!w({' IN ()))OR(((rt0.c0)LIKE(rt0.c1)))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (NULL)))))OR(rt0.c2)))OR(((vt1.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((('!w({' IN ()))OR(((rt0.c0)LIKE(rt0.c1)))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (NULL)))))OR(rt0.c2)))OR(((vt1.c0)<<(vt0.c1))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((t0.c0)<>(t0.c9)))))AND(t0.c9)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)OR(((t0.c0)<>(t0.c9)))))AND(t0.c9))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((t0.c0)<>(t0.c9)))))AND(t0.c9)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE RTRIM)OR(((t0.c0)<>(t0.c9)))))AND(t0.c9))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((vt1.c0 COLLATE RTRIM)OR(((t0.c0)<>(t0.c9)))))AND(t0.c9)));
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c9) NOT NULL))) AND ((CASE 0.993023818083926  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN -1.266726595E9 THEN vt0.c0 ELSE t0.c9 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c9) NOT NULL))) AND ((CASE 0.993023818083926  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN -1.266726595E9 THEN vt0.c0 ELSE t0.c9 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c9) NOT NULL))) AND ((CASE 0.993023818083926  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN -1.266726595E9 THEN vt0.c0 ELSE t0.c9 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c9) NOT NULL))) AND ((CASE 0.993023818083926  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN -1.266726595E9 THEN vt0.c0 ELSE t0.c9 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((t0.c9) NOT NULL))) AND ((CASE 0.993023818083926  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN -1.266726595E9 THEN vt0.c0 ELSE t0.c9 END))));
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON json_patch(rt0.c0, rt0.c2) COLLATE BINARY WHERE (CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON json_patch(rt0.c0, rt0.c2) COLLATE BINARY ORDER BY ((((vt1.c0) IS FALSE))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON json_patch(rt0.c0, rt0.c2) COLLATE BINARY WHERE (CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 FULL OUTER JOIN vt0 ON json_patch(rt0.c0, rt0.c2) COLLATE BINARY ORDER BY ((((vt1.c0) IS FALSE))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT * FROM rt0, vt1 FULL OUTER JOIN vt0 ON json_patch(rt0.c0, rt0.c2) COLLATE BINARY WHERE (CAST(((rt0.c0)>>(rt0.c0)) AS NUMERIC)) ORDER BY ((((vt1.c0) IS FALSE))LIKE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)IS(((rt0.c1)/(t0.c9)))) LEFT OUTER JOIN rt0 ON rt0.c2 INNER JOIN vt1 ON ((json_insert(t0.c9, vt0.c1, vt0.c0, vt1.c0, vt0.c1, '', NULL)) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT vt1.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)IS(((rt0.c1)/(t0.c9)))) LEFT OUTER JOIN rt0 ON rt0.c2 INNER JOIN vt1 ON ((json_insert(t0.c9, vt0.c1, vt0.c0, vt1.c0, vt0.c1, '', NULL)) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT vt1.c0))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)IS(((rt0.c1)/(t0.c9)))) LEFT OUTER JOIN rt0 ON rt0.c2 INNER JOIN vt1 ON ((json_insert(t0.c9, vt0.c1, vt0.c0, vt1.c0, vt0.c1, '', NULL)) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT vt1.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END)IS(((rt0.c1)/(t0.c9)))) LEFT OUTER JOIN rt0 ON rt0.c2 INNER JOIN vt1 ON ((json_insert(t0.c9, vt0.c1, vt0.c0, vt1.c0, vt0.c1, '', NULL)) BETWEEN (rt0.c2) AND (LIKELY(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((0.617246557150886)IS(vt0.c1)) THEN ((rt0.c0)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.617246557150886)IS(vt0.c1)) THEN ((rt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((0.617246557150886)IS(vt0.c1)) THEN ((rt0.c0)!=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.617246557150886)IS(vt0.c1)) THEN ((rt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CASE WHEN ((0.617246557150886)IS(vt0.c1)) THEN ((rt0.c0)!=(vt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN (rt0.c2, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c2, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN (rt0.c2, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN (rt0.c2, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 IN (rt0.c2, (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), ((((vt1.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c1, t0.c0, rt0.c1, t0.c9, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0)) AND ((t0.c9, vt1.c0, rt0.c2, vt1.c0, vt0.c0))) IN ())) ORDER BY CASE ((((vt0.c1)OR(x'941c')))AND(rt0.c0))  WHEN (+ (rt0.c1)) THEN NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1, t0.c0, rt0.c1, t0.c9, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0)) AND ((t0.c9, vt1.c0, rt0.c2, vt1.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CASE ((((vt0.c1)OR(x'941c')))AND(rt0.c0))  WHEN (+ (rt0.c1)) THEN NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c1, t0.c0, rt0.c1, t0.c9, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0)) AND ((t0.c9, vt1.c0, rt0.c2, vt1.c0, vt0.c0))) IN ())) ORDER BY CASE ((((vt0.c1)OR(x'941c')))AND(rt0.c0))  WHEN (+ (rt0.c1)) THEN NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1, t0.c0, rt0.c1, t0.c9, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0)) AND ((t0.c9, vt1.c0, rt0.c2, vt1.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CASE ((((vt0.c1)OR(x'941c')))AND(rt0.c0))  WHEN (+ (rt0.c1)) THEN NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE (((((rt0.c1, t0.c0, rt0.c1, t0.c9, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0)) AND ((t0.c9, vt1.c0, rt0.c2, vt1.c0, vt0.c0))) IN ())) ORDER BY CASE ((((vt0.c1)OR(x'941c')))AND(rt0.c0))  WHEN (+ (rt0.c1)) THEN NULL END ASC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT * FROM t0, vt1 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ALL ((t0.c9) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ALL ((t0.c9) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (t0.c9);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((~ ('Yw]')), rt0.c0)) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)<(-9.84009883E8)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ ('Yw]')), rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)<(-9.84009883E8)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((~ ('Yw]')), rt0.c0)) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)<(-9.84009883E8)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ ('Yw]')), rt0.c0)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)<(-9.84009883E8)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((~ ('Yw]')), rt0.c0)) ORDER BY CASE WHEN rt0.c1 THEN ((rt0.c2)<(-9.84009883E8)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) END ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c9)OR(t0.c0)))AND(rt0.c2)))OR(t0.c9)))AND(t0.c9)))IS(json_array_length(rt0.c0)))) ORDER BY ABS(DISTINCT t0.c9) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c9)OR(t0.c0)))AND(rt0.c2)))OR(t0.c9)))AND(t0.c9)))IS(json_array_length(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(DISTINCT t0.c9) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c9)OR(t0.c0)))AND(rt0.c2)))OR(t0.c9)))AND(t0.c9)))IS(json_array_length(rt0.c0)))) ORDER BY ABS(DISTINCT t0.c9) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c9)OR(t0.c0)))AND(rt0.c2)))OR(t0.c9)))AND(t0.c9)))IS(json_array_length(rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ABS(DISTINCT t0.c9) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c9)OR(t0.c0)))AND(rt0.c2)))OR(t0.c9)))AND(t0.c9)))IS(json_array_length(rt0.c0)))) ORDER BY ABS(DISTINCT t0.c9) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE (CASE (vt0.c0 IN ())  WHEN (~ (rt0.c1)) THEN (((('')OR(rt0.c2)))OR(rt0.c2)) WHEN ((t0.c9) NOT NULL) THEN '0.0891750762547654' WHEN ((x'5576')LIKE(vt1.c0)) THEN ((t0.c9) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (0.7420204264559648) AND (0X2efab56c)) END) ORDER BY (load_extension('-2056930217') IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (~ (rt0.c1)) THEN (((('')OR(rt0.c2)))OR(rt0.c2)) WHEN ((t0.c9) NOT NULL) THEN '0.0891750762547654' WHEN ((x'5576')LIKE(vt1.c0)) THEN ((t0.c9) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (0.7420204264559648) AND (0x2efab56c)) END) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t0 ORDER BY (load_extension('-2056930217') IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE (CASE (vt0.c0 IN ())  WHEN (~ (rt0.c1)) THEN (((('')OR(rt0.c2)))OR(rt0.c2)) WHEN ((t0.c9) NOT NULL) THEN '0.0891750762547654' WHEN ((x'5576')LIKE(vt1.c0)) THEN ((t0.c9) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (0.7420204264559648) AND (0X2efab56c)) END) ORDER BY (load_extension('-2056930217') IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN (~ (rt0.c1)) THEN (((('')OR(rt0.c2)))OR(rt0.c2)) WHEN ((t0.c9) NOT NULL) THEN '0.0891750762547654' WHEN ((x'5576')LIKE(vt1.c0)) THEN ((t0.c9) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (0.7420204264559648) AND (0x2efab56c)) END) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t0 ORDER BY (load_extension('-2056930217') IN ()) DESC);
SELECT COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE (CASE (vt0.c0 IN ())  WHEN (~ (rt0.c1)) THEN (((('')OR(rt0.c2)))OR(rt0.c2)) WHEN ((t0.c9) NOT NULL) THEN '0.0891750762547654' WHEN ((x'5576')LIKE(vt1.c0)) THEN ((t0.c9) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((vt1.c0) BETWEEN (0.7420204264559648) AND (0X2efab56c)) END) ORDER BY (load_extension('-2056930217') IN ()) DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0)<<(x'')))))AND(((NULL) BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (NOT (((((',)')AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0)<<(x'')))))AND(((NULL) BETWEEN (vt1.c0) AND (vt0.c1)))) ORDER BY (NOT (((((',)')AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0)<<(x'')))))AND(((NULL) BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (NOT (((((',)')AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0)<<(x'')))))AND(((NULL) BETWEEN (vt1.c0) AND (vt0.c1)))) ORDER BY (NOT (((((',)')AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt0.c0)<<(x'')))))AND(((NULL) BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY (NOT (((((',)')AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY) ORDER BY ((((((((t0.c9)OR(x'bbbc')))OR(t0.c9)))AND(((t0.c9)>(t0.c9)))))AND((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c9)OR(x'bbbc')))OR(t0.c9)))AND(((t0.c9)>(t0.c9)))))AND((t0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID() COLLATE BINARY) ORDER BY ((((((((t0.c9)OR(x'bbbc')))OR(t0.c9)))AND(((t0.c9)>(t0.c9)))))AND((t0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID() COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c9)OR(x'bbbc')))OR(t0.c9)))AND(((t0.c9)>(t0.c9)))))AND((t0.c0 IN ()))) DESC);
SELECT * FROM vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL COLLATE NOCASE);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL)+(((rt0.c0)>=(rt0.c2)))) CROSS JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c9)))) WHERE ((((t0.c9)) BETWEEN (((+ (rt0.c1)))) AND (('1930315887')))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE NULL  WHEN t0.c9 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END END  NULLS LAST, ((rt0.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c9)) BETWEEN (((+ (rt0.c1)))) AND (('1930315887')))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((NULL)+(((rt0.c0)>=(rt0.c2)))) CROSS JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c9)))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE NULL  WHEN t0.c9 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END END  NULLS LAST, ((rt0.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL)+(((rt0.c0)>=(rt0.c2)))) CROSS JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c9)))) WHERE ((((t0.c9)) BETWEEN (((+ (rt0.c1)))) AND (('1930315887')))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE NULL  WHEN t0.c9 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END END  NULLS LAST, ((rt0.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c9)) BETWEEN (((+ (rt0.c1)))) AND (('1930315887')))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((NULL)+(((rt0.c0)>=(rt0.c2)))) CROSS JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c9)))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE NULL  WHEN t0.c9 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END END  NULLS LAST, ((rt0.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((NULL)+(((rt0.c0)>=(rt0.c2)))) CROSS JOIN vt1 ON ((((rt0.c2) NOT NULL))<=(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c9)))) WHERE ((((t0.c9)) BETWEEN (((+ (rt0.c1)))) AND (('1930315887')))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN CASE NULL  WHEN t0.c9 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 END END  NULLS LAST, ((rt0.c0)>>(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL COLLATE RTRIM, NULL DESC, (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, PRINTF(rt0.c0, rt0.c1, rt0.c1), highlight(rt0.c1, rt0.c1, '-984009883', rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM, NULL DESC, (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, PRINTF(rt0.c0, rt0.c1, rt0.c1), highlight(rt0.c1, rt0.c1, '-984009883', rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL COLLATE RTRIM, NULL DESC, (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, PRINTF(rt0.c0, rt0.c1, rt0.c1), highlight(rt0.c1, rt0.c1, '-984009883', rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM, NULL DESC, (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, PRINTF(rt0.c0, rt0.c1, rt0.c1), highlight(rt0.c1, rt0.c1, '-984009883', rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) ORDER BY NULL COLLATE RTRIM, NULL DESC, (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, PRINTF(rt0.c0, rt0.c1, rt0.c1), highlight(rt0.c1, rt0.c1, '-984009883', rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOTNULL)))) ORDER BY ((((((((((t0.c9)OR(rt0.c0)))AND(t0.c9)))AND(t0.c0)))OR(t0.c9)))+(x'249d')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((((((((t0.c9)OR(rt0.c0)))AND(t0.c9)))AND(t0.c0)))OR(t0.c9)))+(x'249d')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOTNULL)))) ORDER BY ((((((((((t0.c9)OR(rt0.c0)))AND(t0.c9)))AND(t0.c0)))OR(t0.c9)))+(x'249d')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((((((((t0.c9)OR(rt0.c0)))AND(t0.c9)))AND(t0.c0)))OR(t0.c9)))+(x'249d')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c1) NOTNULL)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c0) NOTNULL)))) ORDER BY ((((((((((t0.c9)OR(rt0.c0)))AND(t0.c9)))AND(t0.c0)))OR(t0.c9)))+(x'249d')) ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (json_object(vt0.c1, t0.c0)) AND ((- (vt0.c0)))) WHERE ((- ((+ (t0.c9)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (t0.c9))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (json_object(vt0.c1, t0.c0)) AND ((- (vt0.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (json_object(vt0.c1, t0.c0)) AND ((- (vt0.c0)))) WHERE ((- ((+ (t0.c9)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (t0.c9))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (json_object(vt0.c1, t0.c0)) AND ((- (vt0.c0)))));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (json_object(vt0.c1, t0.c0)) AND ((- (vt0.c0)))) WHERE ((- ((+ (t0.c9)))));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)<((vt0.c1 IN ())))) ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)AND(((vt1.c0)IS(vt0.c0)))))OR(vt0.c0)) DESC, ''  NULLS LAST, ((vt0.c0 COLLATE BINARY)>(((0.9741382674886684)<(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)AND(((vt1.c0)IS(vt0.c0)))))OR(vt0.c0)) DESC, ''  NULLS LAST, ((vt0.c0 COLLATE BINARY)>(((0.9741382674886684)<(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)<((vt0.c1 IN ())))) ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)AND(((vt1.c0)IS(vt0.c0)))))OR(vt0.c0)) DESC, ''  NULLS LAST, ((vt0.c0 COLLATE BINARY)>(((0.9741382674886684)<(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)<((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)AND(((vt1.c0)IS(vt0.c0)))))OR(vt0.c0)) DESC, ''  NULLS LAST, ((vt0.c0 COLLATE BINARY)>(((0.9741382674886684)<(vt1.c0)))) DESC);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0)<((vt0.c1 IN ())))) ORDER BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 END)AND(((vt1.c0)IS(vt0.c0)))))OR(vt0.c0)) DESC, ''  NULLS LAST, ((vt0.c0 COLLATE BINARY)>(((0.9741382674886684)<(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)AND(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)AND(vt0.c1)))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0) ORDER BY ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 30129308 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((rt0.c1)=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 30129308 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((rt0.c1)==(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0) ORDER BY ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 30129308 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((rt0.c1)=(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 30129308 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((rt0.c1)==(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt1.c0) ORDER BY ((CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 30129308 WHEN rt0.c1 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((- (vt0.c1))) AND (((rt0.c1)=(vt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE (0.8673867468290031 COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c0)IS(rt0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2)GLOB(t0.c9)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8673867468290031 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON rt0.c0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c0)IS(rt0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2)GLOB(t0.c9)) END ASC);
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE (0.8673867468290031 COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c0)IS(rt0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2)GLOB(t0.c9)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8673867468290031 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON rt0.c0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c0)IS(rt0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2)GLOB(t0.c9)) END ASC);
SELECT * FROM rt0 INNER JOIN t0 ON rt0.c0 WHERE (0.8673867468290031 COLLATE NOCASE) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((t0.c0)IS(rt0.c0)) WHEN (rt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END WHEN (rt0.c2 IN ()) THEN ((rt0.c2)GLOB(t0.c9)) END ASC;
SELECT * FROM vt1, vt0, t0 CROSS JOIN rt0 ON ((LIKELY(rt0.c0)) NOTNULL) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON ((LIKELY(rt0.c0)) NOTNULL));
SELECT * FROM vt1, vt0, t0 CROSS JOIN rt0 ON ((LIKELY(rt0.c0)) NOTNULL) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, t0 CROSS JOIN rt0 ON ((LIKELY(rt0.c0)) NOTNULL));
SELECT * FROM vt1, vt0, t0 CROSS JOIN rt0 ON ((LIKELY(rt0.c0)) NOTNULL) WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CHANGES());
SELECT * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL);
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(LOWER(vt0.c1) AS REAL));
SELECT * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL);
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(LOWER(vt0.c1) AS REAL));
SELECT * FROM t0, vt0 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ())) ORDER BY CAST(LOWER(vt0.c1) AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST((~ (vt0.c0)) AS REAL));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c2) ISNULL))||((('ﲻz~OདྷD*^') NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))||((('ﲻz~OདྷD*^') NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c2) ISNULL))||((('ﲻz~OདྷD*^') NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))||((('ﲻz~OདྷD*^') NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c2) ISNULL))||((('ﲻz~OདྷD*^') NOT BETWEEN (rt0.c1) AND (t0.c0)))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (('W-J㢚O%')<((NOT (t0.c9)))), t0.c9 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (('W-J㢚O%')<((NOT (t0.c9)))), t0.c9 COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (('W-J㢚O%')<((NOT (t0.c9)))), t0.c9 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (('W-J㢚O%')<((NOT (t0.c9)))), t0.c9 COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, t0 WHERE (CAST((~ (t0.c0)) AS REAL)) ORDER BY (('W-J㢚O%')<((NOT (t0.c9)))), t0.c9 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (((vt0.c1)&(vt1.c0)))) INNER JOIN rt0 ON (((((vt0.c1) IS TRUE)))>((((rt0.c2)GLOB(vt0.c0))))) WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c2) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c2) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (((vt0.c1)&(vt1.c0)))) INNER JOIN rt0 ON (((((vt0.c1) IS TRUE)))>((((rt0.c2)GLOB(vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (((vt0.c1)&(vt1.c0)))) INNER JOIN rt0 ON (((((vt0.c1) IS TRUE)))>((((rt0.c2)GLOB(vt0.c0))))) WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c2) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c2) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ (((vt0.c1)&(vt1.c0)))) INNER JOIN rt0 ON (((((vt0.c1) IS TRUE)))>((((rt0.c2)GLOB(vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (+ (((vt0.c1)&(vt1.c0)))) INNER JOIN rt0 ON (((((vt0.c1) IS TRUE)))>((((rt0.c2)GLOB(vt0.c0))))) WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c2) AND ((rt0.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (IFNULL((vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (IFNULL((vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (IFNULL((vt1.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)<(rt0.c1)) IN (((((((((((((rt0.c2)OR(t0.c9)))OR(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(x'')))OR(rt0.c1)), rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(rt0.c1)) IN (((((((((((((rt0.c2)OR(t0.c9)))OR(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(x'')))OR(rt0.c1)), rt0.c0))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)<(rt0.c1)) IN (((((((((((((rt0.c2)OR(t0.c9)))OR(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(x'')))OR(rt0.c1)), rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(rt0.c1)) IN (((((((((((((rt0.c2)OR(t0.c9)))OR(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(x'')))OR(rt0.c1)), rt0.c0))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt1 WHERE ((((t0.c0)<(rt0.c1)) IN (((((((((((((rt0.c2)OR(t0.c9)))OR(rt0.c2)))OR(rt0.c0)))OR(x'')))AND(x'')))OR(rt0.c1)), rt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((0.5033443710378354, vt0.c0, '\cZ㜲	u'))>=((vt0.c0, vt0.c0, vt0.c1))))/((((0.4645785338836601))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.5033443710378354, vt0.c0, '\cZ㜲	u'))>=((vt0.c0, vt0.c0, vt0.c1))))/((((0.4645785338836601))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.5033443710378354, vt0.c0, '\cZ㜲	u'))>=((vt0.c0, vt0.c0, vt0.c1))))/((((0.4645785338836601))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.5033443710378354, vt0.c0, '\cZ㜲	u'))>=((vt0.c0, vt0.c0, vt0.c1))))/((((0.4645785338836601))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((0.5033443710378354, vt0.c0, '\cZ㜲	u'))>=((vt0.c0, vt0.c0, vt0.c1))))/((((0.4645785338836601))<=((vt0.c1))))));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)*(vt0.c0)))-(x'')) WHERE (((t0.c0) ISNULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)*(vt0.c0)))-(x'')));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)*(vt0.c0)))-(x'')) WHERE (((t0.c0) ISNULL) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)*(vt0.c0)))-(x'')));
SELECT * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)*(vt0.c0)))-(x'')) WHERE (((t0.c0) ISNULL) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 NOT INDEXED WHERE (((((vt1.c0)==(rt0.c1)))*((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)==(rt0.c1)))*((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c9)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 NOT INDEXED WHERE (((((vt1.c0)==(rt0.c1)))*((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)==(rt0.c1)))*((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c9)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 NOT INDEXED WHERE (((((vt1.c0)==(rt0.c1)))*((((vt1.c0)) BETWEEN ((t0.c0)) AND ((t0.c9))))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c9 AS INTEGER))AND(CASE WHEN t0.c9 THEN t0.c0 END)))OR(((vt0.c1)GLOB(t0.c0)))) WHERE (x'' COLLATE RTRIM) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c9 AS INTEGER))AND(CASE WHEN t0.c9 THEN t0.c0 END)))OR(((vt0.c1)GLOB(t0.c0)))) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c9 AS INTEGER))AND(CASE WHEN t0.c9 THEN t0.c0 END)))OR(((vt0.c1)GLOB(t0.c0)))) WHERE (x'' COLLATE RTRIM) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c9 AS INTEGER))AND(CASE WHEN t0.c9 THEN t0.c0 END)))OR(((vt0.c1)GLOB(t0.c0)))) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((CAST(t0.c9 AS INTEGER))AND(CASE WHEN t0.c9 THEN t0.c0 END)))OR(((vt0.c1)GLOB(t0.c0)))) WHERE (x'' COLLATE RTRIM) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((vt1.c0)AND(CAST(vt0.c0 AS TEXT))))OR(HEX(DISTINCT rt0.c2)))) ORDER BY ((((vt1.c0)<>(-1197962469))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt0.c0 AS TEXT))))OR(HEX(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt1.c0)!=(-1197962469))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((vt1.c0)AND(CAST(vt0.c0 AS TEXT))))OR(HEX(DISTINCT rt0.c2)))) ORDER BY ((((vt1.c0)<>(-1197962469))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(CAST(vt0.c0 AS TEXT))))OR(HEX(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt1.c0)!=(-1197962469))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((((vt1.c0)AND(CAST(vt0.c0 AS TEXT))))OR(HEX(DISTINCT rt0.c2)))) ORDER BY ((((vt1.c0)<>(-1197962469))) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0))) ISNULL) LEFT OUTER JOIN vt1 ON (((rt0.c0 IN ()))<=(vt0.c0)) WHERE ((json_array_length(t0.c0) IN (((rt0.c0)%(vt0.c1))))) ORDER BY -750274015 DESC;
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(t0.c0) IN (((rt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0))) ISNULL) LEFT OUTER JOIN vt1 ON (((rt0.c0 IN ()))<=(vt0.c0)) ORDER BY -750274015 DESC);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0))) ISNULL) LEFT OUTER JOIN vt1 ON (((rt0.c0 IN ()))<=(vt0.c0)) WHERE ((json_array_length(t0.c0) IN (((rt0.c0)%(vt0.c1))))) ORDER BY -750274015 DESC;
SELECT SUM(count) FROM (SELECT ALL (((json_array_length(t0.c0) IN (((rt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((((((rt0.c0)AND(rt0.c1)))OR(vt1.c0))) ISNULL) LEFT OUTER JOIN vt1 ON (((rt0.c0 IN ()))<=(vt0.c0)) ORDER BY -750274015 DESC);
SELECT * FROM vt0, rt0 WHERE (INSTR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE x'363c' END, ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE x'363c' END, ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (INSTR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE x'363c' END, ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE x'363c' END, ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (INSTR(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE x'363c' END, ((vt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN vt1 ON (((((rt0.c0))=((vt0.c1)))) NOT BETWEEN (((t0.c9) NOTNULL)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))) WHERE (CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN vt1 ON (((((rt0.c0))=((vt0.c1)))) NOT BETWEEN (((t0.c9) NOTNULL)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN vt1 ON (((((rt0.c0))=((vt0.c1)))) NOT BETWEEN (((t0.c9) NOTNULL)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))) WHERE (CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN vt1 ON (((((rt0.c0))=((vt0.c1)))) NOT BETWEEN (((t0.c9) NOTNULL)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t0 ON CAST(rt0.c0 AS BLOB) COLLATE RTRIM COLLATE BINARY FULL OUTER JOIN vt1 ON (((((rt0.c0))=((vt0.c1)))) NOT BETWEEN (((t0.c9) NOTNULL)) AND (((((((((rt0.c1)AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))) WHERE (CASE WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND((((rt0.c2, vt0.c1, x''))==((rt0.c0, NULL, vt1.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND((((rt0.c2, vt0.c1, x''))=((rt0.c0, NULL, vt1.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND((((rt0.c2, vt0.c1, x''))==((rt0.c0, NULL, vt1.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND((((rt0.c2, vt0.c1, x''))=((rt0.c0, NULL, vt1.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND((((rt0.c2, vt0.c1, x''))==((rt0.c0, NULL, vt1.c0))))))AND(CAST(vt0.c0 AS BLOB))))AND(((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((json_insert(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE '1715312175' END, CAST('y' AS REAL), 9.01508094E8 COLLATE RTRIM))<=((NULL, (vt0.c1 IN (NULL)), CAST(t0.c9 AS INTEGER), CAST(vt0.c0 AS TEXT), ((t0.c9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((x'' IN (vt0.c0)) IN ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((json_insert(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE '1715312175' END, CAST('y' AS REAL), 9.01508094E8 COLLATE RTRIM))<=((NULL, (vt0.c1 IN (NULL)), CAST(t0.c9 AS INTEGER), CAST(vt0.c0 AS TEXT), ((t0.c9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 NOT INDEXED ORDER BY ((x'' IN (vt0.c0)) IN ((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((json_insert(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE '1715312175' END, CAST('y' AS REAL), 9.01508094E8 COLLATE RTRIM))<=((NULL, (vt0.c1 IN (NULL)), CAST(t0.c9 AS INTEGER), CAST(vt0.c0 AS TEXT), ((t0.c9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((x'' IN (vt0.c0)) IN ((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((json_insert(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE '1715312175' END, CAST('y' AS REAL), 9.01508094E8 COLLATE RTRIM))<=((NULL, (vt0.c1 IN (NULL)), CAST(t0.c9 AS INTEGER), CAST(vt0.c0 AS TEXT), ((t0.c9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 NOT INDEXED ORDER BY ((x'' IN (vt0.c0)) IN ((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((((json_insert(vt0.c0, vt0.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE '1715312175' END, CAST('y' AS REAL), 9.01508094E8 COLLATE RTRIM))<=((NULL, (vt0.c1 IN (NULL)), CAST(t0.c9 AS INTEGER), CAST(vt0.c0 AS TEXT), ((t0.c9) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((x'' IN (vt0.c0)) IN ((rt0.c2 IN ()))) DESC;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (-1.729184252E9) ORDER BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0.12265448788543243))  NULLS LAST, CASE ((((((((((((vt0.c1)AND(t0.c9)))AND(vt1.c0)))OR(t0.c9)))OR(vt1.c0)))AND(t0.c9)))OR(t0.c9))  WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN (((vt0.c1, t0.c9, t0.c9))>=((vt1.c0, t0.c0, t0.c9))) ELSE CASE WHEN vt1.c0 THEN t0.c9 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((-1.729184252E9) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0.12265448788543243))  NULLS LAST, CASE ((((((((((((vt0.c1)AND(t0.c9)))AND(vt1.c0)))OR(t0.c9)))OR(vt1.c0)))AND(t0.c9)))OR(t0.c9))  WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN (((vt0.c1, t0.c9, t0.c9))>=((vt1.c0, t0.c0, t0.c9))) ELSE CASE WHEN vt1.c0 THEN t0.c9 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END END DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (-1.729184252E9) ORDER BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0.12265448788543243))  NULLS LAST, CASE ((((((((((((vt0.c1)AND(t0.c9)))AND(vt1.c0)))OR(t0.c9)))OR(vt1.c0)))AND(t0.c9)))OR(t0.c9))  WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN (((vt0.c1, t0.c9, t0.c9))>=((vt1.c0, t0.c0, t0.c9))) ELSE CASE WHEN vt1.c0 THEN t0.c9 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((-1.729184252E9) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0.12265448788543243))  NULLS LAST, CASE ((((((((((((vt0.c1)AND(t0.c9)))AND(vt1.c0)))OR(t0.c9)))OR(vt1.c0)))AND(t0.c9)))OR(t0.c9))  WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN (((vt0.c1, t0.c9, t0.c9))>=((vt1.c0, t0.c0, t0.c9))) ELSE CASE WHEN vt1.c0 THEN t0.c9 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END END DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (-1.729184252E9) ORDER BY ((((vt0.c1)<=(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (0.12265448788543243))  NULLS LAST, CASE ((((((((((((vt0.c1)AND(t0.c9)))AND(vt1.c0)))OR(t0.c9)))OR(vt1.c0)))AND(t0.c9)))OR(t0.c9))  WHEN ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) THEN (((vt0.c1, t0.c9, t0.c9))>=((vt1.c0, t0.c0, t0.c9))) ELSE CASE WHEN vt1.c0 THEN t0.c9 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 END END DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))>(ABS(DISTINCT vt0.c0)))) ORDER BY 0.3006923994090446 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((vt0.c1))))>(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.3006923994090446 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))>(ABS(DISTINCT vt0.c0)))) ORDER BY 0.3006923994090446 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((vt0.c1))))>(ABS(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY 0.3006923994090446 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))!=((vt0.c1))))>(ABS(DISTINCT vt0.c0)))) ORDER BY 0.3006923994090446 COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((vt1.c0)==((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)==((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((vt1.c0)==((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)==((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((vt1.c0)==((t0.c0 IN ()))));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (t0.c0) ORDER BY rt0.c2 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY rt0.c2 COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (t0.c0) ORDER BY rt0.c2 COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY rt0.c2 COLLATE RTRIM ASC);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (t0.c0) ORDER BY rt0.c2 COLLATE RTRIM ASC;
SELECT ALL * FROM vt0, rt0 WHERE (x'87c3') ORDER BY (((((vt0.c1)>=(rt0.c2))))<((((rt0.c2)==(''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'87c3') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)>=(rt0.c2))))<((((rt0.c2)==(''))))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (x'87c3') ORDER BY (((((vt0.c1)>=(rt0.c2))))<((((rt0.c2)==(''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'87c3') IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)>=(rt0.c2))))<((((rt0.c2)==(''))))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (x'87c3') ORDER BY (((((vt0.c1)>=(rt0.c2))))<((((rt0.c2)==(''))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (0.004699196540301154) ORDER BY (~ ('-496590486')) ASC  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))) THEN vt0.c1 ELSE ((((NULL)AND(vt0.c1)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.004699196540301154) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-496590486')) ASC  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c1))) THEN vt0.c1 ELSE ((((NULL)AND(vt0.c1)))OR(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.004699196540301154) ORDER BY (~ ('-496590486')) ASC  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))) THEN vt0.c1 ELSE ((((NULL)AND(vt0.c1)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.004699196540301154) IS TRUE)  as count FROM vt0 ORDER BY (~ ('-496590486')) ASC  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c1, vt0.c1))!=((vt0.c1, vt0.c0, vt0.c1))) THEN vt0.c1 ELSE ((((NULL)AND(vt0.c1)))OR(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (0.004699196540301154) ORDER BY (~ ('-496590486')) ASC  NULLS LAST, CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN (((vt0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c0, vt0.c1))) THEN vt0.c1 ELSE ((((NULL)AND(vt0.c1)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c1) NOT BETWEEN ((vt0.c1 IN (rt0.c2, t0.c9))) AND (rt0.c2))) ORDER BY ((((((rt0.c0)IS NOT(rt0.c2)))AND(((t0.c9)AND(t0.c9)))))AND(LIKELIHOOD(vt0.c0, 0.1678985130988464))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((vt0.c1 IN (rt0.c2, t0.c9))) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c0)IS NOT(rt0.c2)))AND(((t0.c9)AND(t0.c9)))))AND(LIKELIHOOD(vt0.c0, 0.1678985130988464))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c1) NOT BETWEEN ((vt0.c1 IN (rt0.c2, t0.c9))) AND (rt0.c2))) ORDER BY ((((((rt0.c0)IS NOT(rt0.c2)))AND(((t0.c9)AND(t0.c9)))))AND(LIKELIHOOD(vt0.c0, 0.1678985130988464))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN ((vt0.c1 IN (rt0.c2, t0.c9))) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((rt0.c0)IS NOT(rt0.c2)))AND(((t0.c9)AND(t0.c9)))))AND(LIKELIHOOD(vt0.c0, 0.1678985130988464))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((vt0.c1) NOT BETWEEN ((vt0.c1 IN (rt0.c2, t0.c9))) AND (rt0.c2))) ORDER BY ((((((rt0.c0)IS NOT(rt0.c2)))AND(((t0.c9)AND(t0.c9)))))AND(LIKELIHOOD(vt0.c0, 0.1678985130988464))) ASC  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- ('-336453823'))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('-336453823'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- ('-336453823'))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('-336453823'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- ('-336453823'))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 END)*(CAST(rt0.c1 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 END)*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 END)*(CAST(rt0.c1 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 END)*(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 END)*(CAST(rt0.c1 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (x'')) DESC, ((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (x'')) DESC, ((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (x'')) DESC, ((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (x'')) DESC, ((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt0.c0))) AND (x'')) DESC, ((((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c9)*(t0.c9)))))OR(((t0.c9) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(((t0.c9)*(t0.c9)))))OR(((t0.c9) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c9)*(t0.c9)))))OR(((t0.c9) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(((t0.c9)*(t0.c9)))))OR(((t0.c9) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(((t0.c9)*(t0.c9)))))OR(((t0.c9) IS TRUE))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>=(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c1)>=(rt0.c2)) AS BLOB));
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOTNULL))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOTNULL))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOTNULL))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c0)<=(vt0.c1)))));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('')) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('')) IN ())) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND ('')) IN ()));
SELECT * FROM vt1, rt0, t0 WHERE (x'acb1');
SELECT SUM(count) FROM (SELECT ALL ((x'acb1') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (x'acb1');
SELECT SUM(count) FROM (SELECT ALL ((x'acb1') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (x'acb1');
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((CAST(rt0.c2 AS REAL), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))>=(((NOT ('-2066503745')), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (((rt0.c1))==((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))>=(((NOT ('-2066503745')), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (((rt0.c1))=((vt0.c0)))))) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((CAST(rt0.c2 AS REAL), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))>=(((NOT ('-2066503745')), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (((rt0.c1))==((vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((CAST(rt0.c2 AS REAL), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))>=(((NOT ('-2066503745')), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (((rt0.c1))=((vt0.c0)))))) ASC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c0) ORDER BY (((CAST(rt0.c2 AS REAL), (vt1.c0 IN ()), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c1))))>=(((NOT ('-2066503745')), CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END, (((rt0.c1))==((vt0.c0)))))) ASC;
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((t0.c0) ISNULL) AS TEXT) WHERE (CAST(772959704 AS BLOB)) ORDER BY ((((vt1.c0)GLOB(t0.c9))) NOTNULL), t0.c9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(772959704 AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CAST(((t0.c0) ISNULL) AS TEXT) ORDER BY ((((vt1.c0)GLOB(t0.c9))) NOTNULL), t0.c9  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((t0.c0) ISNULL) AS TEXT) WHERE (CAST(772959704 AS BLOB)) ORDER BY ((((vt1.c0)GLOB(t0.c9))) NOTNULL), t0.c9  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(772959704 AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON CAST(((t0.c0) ISNULL) AS TEXT) ORDER BY ((((vt1.c0)GLOB(t0.c9))) NOTNULL), t0.c9  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON CAST(((t0.c0) ISNULL) AS TEXT) WHERE (CAST(772959704 AS BLOB)) ORDER BY ((((vt1.c0)GLOB(t0.c9))) NOTNULL), t0.c9  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0) NOT NULL)))!=((((vt0.c1) NOT NULL))))) ORDER BY 0.21395381635675081;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))!=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.21395381635675081);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0) NOT NULL)))!=((((vt0.c1) NOT NULL))))) ORDER BY 0.21395381635675081;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))!=((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.21395381635675081);
SELECT ALL * FROM vt0, t0 WHERE ((((((t0.c0) NOT NULL)))!=((((vt0.c1) NOT NULL))))) ORDER BY 0.21395381635675081;
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((ABS(vt0.c1) IN ((t0.c0 IN (x'', rt0.c0))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c1) IN ((t0.c0 IN (x'', rt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END  NULLS FIRST, vt1.c0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((ABS(vt0.c1) IN ((t0.c0 IN (x'', rt0.c0))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT (((ABS(vt0.c1) IN ((t0.c0 IN (x'', rt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END  NULLS FIRST, vt1.c0);
SELECT * FROM t0, vt1, vt0, rt0 WHERE ((ABS(vt0.c1) IN ((t0.c0 IN (x'', rt0.c0))))) ORDER BY CASE WHEN rt0.c0 COLLATE BINARY THEN (NOT (vt1.c0)) END  NULLS FIRST, vt1.c0;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(t0.c9)))OR(CAST(t0.c9 AS TEXT))))AND(NULLIF(0xffffffffe5eaf25b, vt0.c0))))OR(UNLIKELY(0.6765811800131786))))AND(t0.c9)) WHERE (CASE (vt0.c0 IN (t0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS REAL) WHEN ((vt0.c1)IS(t0.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c9)) THEN (('') NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c1 IN (t0.c9)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN ((t0.c9) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (t0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS REAL) WHEN ((vt0.c1)IS(t0.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c9)) THEN (('') NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c1 IN (t0.c9)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN ((t0.c9) IS FALSE) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(t0.c9)))OR(CAST(t0.c9 AS TEXT))))AND(NULLIF(0Xffffffffe5eaf25b, vt0.c0))))OR(UNLIKELY(0.6765811800131786))))AND(t0.c9)));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(t0.c9)))OR(CAST(t0.c9 AS TEXT))))AND(NULLIF(0xffffffffe5eaf25b, vt0.c0))))OR(UNLIKELY(0.6765811800131786))))AND(t0.c9)) WHERE (CASE (vt0.c0 IN (t0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS REAL) WHEN ((vt0.c1)IS(t0.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c9)) THEN (('') NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c1 IN (t0.c9)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN ((t0.c9) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (t0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS REAL) WHEN ((vt0.c1)IS(t0.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c9)) THEN (('') NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c1 IN (t0.c9)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN ((t0.c9) IS FALSE) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(t0.c9)))OR(CAST(t0.c9 AS TEXT))))AND(NULLIF(0Xffffffffe5eaf25b, vt0.c0))))OR(UNLIKELY(0.6765811800131786))))AND(t0.c9)));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt1.c0)OR(t0.c9)))OR(CAST(t0.c9 AS TEXT))))AND(NULLIF(0xffffffffe5eaf25b, vt0.c0))))OR(UNLIKELY(0.6765811800131786))))AND(t0.c9)) WHERE (CASE (vt0.c0 IN (t0.c0))  WHEN (vt0.c1 IN ()) THEN CAST(vt1.c0 AS REAL) WHEN ((vt0.c1)IS(t0.c0)) THEN vt0.c0 WHEN ((((vt1.c0)OR(vt0.c0)))OR(t0.c9)) THEN (('') NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(vt1.c0 AS INTEGER) THEN (vt0.c1 IN (t0.c9)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN ((t0.c9) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((t0.c0)<(t0.c9))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt0.c0 END))>((CASE t0.c9  WHEN t0.c9 THEN t0.c0 WHEN t0.c9 THEN t0.c9 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)<(t0.c9))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CASE WHEN vt1.c0 THEN vt0.c0 END))>((CASE t0.c9  WHEN t0.c9 THEN t0.c0 WHEN t0.c9 THEN t0.c9 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((t0.c0)<(t0.c9))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt0.c0 END))>((CASE t0.c9  WHEN t0.c9 THEN t0.c0 WHEN t0.c9 THEN t0.c9 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)<(t0.c9))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((CASE WHEN vt1.c0 THEN vt0.c0 END))>((CASE t0.c9  WHEN t0.c9 THEN t0.c0 WHEN t0.c9 THEN t0.c9 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((+ (((t0.c0)<(t0.c9))))) ORDER BY (((CASE WHEN vt1.c0 THEN vt0.c0 END))>((CASE t0.c9  WHEN t0.c9 THEN t0.c0 WHEN t0.c9 THEN t0.c9 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)));
SELECT * FROM vt0 WHERE (((((vt0.c1)==(vt0.c1)))%(vt0.c1))) ORDER BY (((((vt0.c0 IN ()))AND((0.43634712545831145 IN ()))))AND(CASE WHEN '0.9563544777589502' THEN 0.27781631399070317 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), ((json_array(vt0.c1, vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST('0.41261115310704144' AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)==(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND((0.43634712545831145 IN ()))))AND(CASE WHEN '0.9563544777589502' THEN 0.27781631399070317 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), ((json_array(vt0.c1, vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST('0.41261115310704144' AS TEXT) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c1)==(vt0.c1)))%(vt0.c1))) ORDER BY (((((vt0.c0 IN ()))AND((0.43634712545831145 IN ()))))AND(CASE WHEN '0.9563544777589502' THEN 0.27781631399070317 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), ((json_array(vt0.c1, vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST('0.41261115310704144' AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)==(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND((0.43634712545831145 IN ()))))AND(CASE WHEN '0.9563544777589502' THEN 0.27781631399070317 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), ((json_array(vt0.c1, vt0.c0))<(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST('0.41261115310704144' AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON ((((~ (vt0.c0))))!=((CASE WHEN rt0.c0 THEN t0.c9 END))) INNER JOIN vt0 ON (((((rt0.c0, t0.c9, vt0.c1))<=((t0.c9, rt0.c0, rt0.c0))))<(((rt0.c0)-(NULL)))) WHERE ((((((rt0.c2)) BETWEEN (('-394138919')) AND ((t0.c9))))==((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN (('-394138919')) AND ((t0.c9))))==((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON ((((~ (vt0.c0))))!=((CASE WHEN rt0.c0 THEN t0.c9 END))) INNER JOIN vt0 ON (((((rt0.c0, t0.c9, vt0.c1))<=((t0.c9, rt0.c0, rt0.c0))))<(((rt0.c0)-(NULL)))));
SELECT COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt1 ON ((((~ (vt0.c0))))!=((CASE WHEN rt0.c0 THEN t0.c9 END))) INNER JOIN vt0 ON (((((rt0.c0, t0.c9, vt0.c1))<=((t0.c9, rt0.c0, rt0.c0))))<(((rt0.c0)-(NULL)))) WHERE ((((((rt0.c2)) BETWEEN (('-394138919')) AND ((t0.c9))))==((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) BETWEEN (('-394138919')) AND ((t0.c9))))==((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt1 ON ((((~ (vt0.c0))))!=((CASE WHEN rt0.c0 THEN t0.c9 END))) INNER JOIN vt0 ON (((((rt0.c0, t0.c9, vt0.c1))<=((t0.c9, rt0.c0, rt0.c0))))<(((rt0.c0)-(NULL)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (0.03660714346242111) ORDER BY ((rt0.c2)-(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.03660714346242111) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)-(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (0.03660714346242111) ORDER BY ((rt0.c2)-(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.03660714346242111) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c2)-(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (0.03660714346242111) ORDER BY ((rt0.c2)-(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<>(((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))!=(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<>(((rt0.c1)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT))!=(((rt0.c1)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<>(((rt0.c1)LIKE(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((NULL) NOTNULL) WHERE (CASE ((((1.639463578E9)OR(rt0.c2)))OR(t0.c0))  WHEN -1.2550834E7 THEN CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c0 END END) ORDER BY UPPER(IFNULL(t0.c0, vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((1.639463578E9)OR(rt0.c2)))OR(t0.c0))  WHEN -1.2550834E7 THEN CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((NULL) NOTNULL) ORDER BY UPPER(IFNULL(t0.c0, vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((NULL) NOTNULL) WHERE (CASE ((((1.639463578E9)OR(rt0.c2)))OR(t0.c0))  WHEN -1.2550834E7 THEN CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c0 END END) ORDER BY UPPER(IFNULL(t0.c0, vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((1.639463578E9)OR(rt0.c2)))OR(t0.c0))  WHEN -1.2550834E7 THEN CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((NULL) NOTNULL) ORDER BY UPPER(IFNULL(t0.c0, vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((NULL) NOTNULL) WHERE (CASE ((((1.639463578E9)OR(rt0.c2)))OR(t0.c0))  WHEN -1.2550834E7 THEN CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c0 END END) ORDER BY UPPER(IFNULL(t0.c0, vt1.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOTNULL));
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((CAST(vt1.c0 AS REAL)) BETWEEN ((- (t0.c0))) AND (((vt1.c0) NOTNULL))));
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1))))/(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1))))/(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1))))/(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1))))/(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, vt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0, rt0.c1, rt0.c2)) AND ((vt0.c1, rt0.c2, rt0.c0, rt0.c0, rt0.c1))))/(((((((((vt0.c0)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY CAST((((vt0.c0))>((rt0.c1))) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c0)*(rt0.c1))) NOT BETWEEN (MAX(t0.c9, t0.c0)) AND (rt0.c2)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((t0.c9, vt0.c0, t0.c9))=((t0.c9, t0.c9, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((t0.c9, vt0.c0, t0.c9))==((t0.c9, t0.c9, vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c0)*(rt0.c1))) NOT BETWEEN (MAX(t0.c9, t0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c0)*(rt0.c1))) NOT BETWEEN (MAX(t0.c9, t0.c0)) AND (rt0.c2)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((t0.c9, vt0.c0, t0.c9))=((t0.c9, t0.c9, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((t0.c9, vt0.c0, t0.c9))==((t0.c9, t0.c9, vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c0)*(rt0.c1))) NOT BETWEEN (MAX(t0.c9, t0.c0)) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((((rt0.c0)*(rt0.c1))) NOT BETWEEN (MAX(t0.c9, t0.c0)) AND (rt0.c2)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((((t0.c9, vt0.c0, t0.c9))=((t0.c9, t0.c9, vt0.c1))))));
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((0.058069087683785936) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((x'2bac', vt1.c0, rt0.c0, vt0.c1, rt0.c2))<((x'4451', vt1.c0, vt1.c0, vt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.058069087683785936) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((x'2bac', vt1.c0, rt0.c0, vt0.c1, rt0.c2))<((x'4451', vt1.c0, vt1.c0, vt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((0.058069087683785936) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((x'2bac', vt1.c0, rt0.c0, vt0.c1, rt0.c2))<((x'4451', vt1.c0, vt1.c0, vt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.058069087683785936) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((x'2bac', vt1.c0, rt0.c0, vt0.c1, rt0.c2))<((x'4451', vt1.c0, vt1.c0, vt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN rt0 WHERE ((((0.058069087683785936) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((x'2bac', vt1.c0, rt0.c0, vt0.c1, rt0.c2))<((x'4451', vt1.c0, vt1.c0, vt0.c1, rt0.c0))))));
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON ABS(DISTINCT rt0.c1 COLLATE RTRIM) FULL OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS TEXT) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY (+ ((+ (t0.c9)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON ABS(DISTINCT rt0.c1 COLLATE RTRIM) FULL OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS TEXT) ORDER BY (+ ((+ (t0.c9)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 INNER JOIN t0 ON ABS(DISTINCT rt0.c1 COLLATE RTRIM) FULL OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS TEXT) WHERE (((rt0.c0 IN ()) IN ())) ORDER BY (+ ((+ (t0.c9)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON ABS(DISTINCT rt0.c1 COLLATE RTRIM) FULL OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS TEXT) ORDER BY (+ ((+ (t0.c9)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0)) BETWEEN ((x'7427')) AND (((((t0.c0))==((t0.c9))))))) ORDER BY NULL ASC, ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((x'7427')) AND (((((t0.c0))=((t0.c9))))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC, ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0)) BETWEEN ((x'7427')) AND (((((t0.c0))==((t0.c9))))))) ORDER BY NULL ASC, ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((x'7427')) AND (((((t0.c0))=((t0.c9))))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY NULL ASC, ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((t0.c0)) BETWEEN ((x'7427')) AND (((((t0.c0))==((t0.c9))))))) ORDER BY NULL ASC, ((vt0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(NULL AS REAL));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN 0.9392155846629723 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9392155846629723 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN 0.9392155846629723 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9392155846629723 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (CASE WHEN 0.9392155846629723 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((- (vt0.c0)))IS(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((- (vt0.c0)))IS(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 ELSE vt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((- (vt0.c0)))IS(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 ELSE vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((- (vt0.c0)))IS(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 ELSE vt0.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((- (vt0.c0)))IS(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 ELSE vt0.c1 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CHAR(t0.c9))OR(CASE t0.c0  WHEN t0.c9 THEN vt1.c0 END)))OR(LIKE(t0.c0, x'289e', 'C'))));
SELECT SUM(count) FROM (SELECT ((((((CHAR(t0.c9))OR(CASE t0.c0  WHEN t0.c9 THEN vt1.c0 END)))OR(LIKE(t0.c0, x'289e', 'C')))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CHAR(t0.c9))OR(CASE t0.c0  WHEN t0.c9 THEN vt1.c0 END)))OR(LIKE(t0.c0, x'289e', 'C'))));
SELECT SUM(count) FROM (SELECT ((((((CHAR(t0.c9))OR(CASE t0.c0  WHEN t0.c9 THEN vt1.c0 END)))OR(LIKE(t0.c0, x'289e', 'C')))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((CHAR(t0.c9))OR(CASE t0.c0  WHEN t0.c9 THEN vt1.c0 END)))OR(LIKE(t0.c0, x'289e', 'C'))));
SELECT * FROM t0, vt0, rt0 WHERE (highlight(((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (vt0.c0 IN ()), ((rt0.c1)>(t0.c0)), COALESCE(vt0.c1, rt0.c1, rt0.c1, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (vt0.c0 IN ()), ((rt0.c1)>(t0.c0)), COALESCE(vt0.c1, rt0.c1, rt0.c1, vt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (highlight(((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (vt0.c0 IN ()), ((rt0.c1)>(t0.c0)), COALESCE(vt0.c1, rt0.c1, rt0.c1, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (vt0.c0 IN ()), ((rt0.c1)>(t0.c0)), COALESCE(vt0.c1, rt0.c1, rt0.c1, vt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (highlight(((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (vt0.c0 IN ()), ((rt0.c1)>(t0.c0)), COALESCE(vt0.c1, rt0.c1, rt0.c1, vt0.c1)));
SELECT * FROM vt1, vt0, t0 WHERE (((t0.c9) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((t0.c9) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((t0.c9) NOTNULL));
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((0.037239869486734745, rt0.c2, vt1.c0)) AND ((rt0.c2, rt0.c0, vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((vt0.c1)GLOB(rt0.c0)))>>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST, (((rt0.c2 IN ())) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((0.037239869486734745, rt0.c2, vt1.c0)) AND ((rt0.c2, rt0.c0, vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c1)GLOB(rt0.c0)))>>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST, (((rt0.c2 IN ())) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((0.037239869486734745, rt0.c2, vt1.c0)) AND ((rt0.c2, rt0.c0, vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((vt0.c1)GLOB(rt0.c0)))>>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST, (((rt0.c2 IN ())) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((0.037239869486734745, rt0.c2, vt1.c0)) AND ((rt0.c2, rt0.c0, vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c1)GLOB(rt0.c0)))>>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST, (((rt0.c2 IN ())) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((0.037239869486734745, rt0.c2, vt1.c0)) AND ((rt0.c2, rt0.c0, vt1.c0))))AND(CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((vt0.c1)GLOB(rt0.c0)))>>(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) ASC  NULLS FIRST, (((rt0.c2 IN ())) NOT BETWEEN (((vt1.c0)|(vt0.c0))) AND (((rt0.c2) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((t0.c9)OR(((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))))OR('C')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)OR(((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))))OR('C'))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((t0.c9)OR(((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))))OR('C')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)OR(((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))))OR('C'))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((t0.c9)OR(((((vt1.c0)OR(rt0.c2)))OR(vt0.c0)))))OR('C')));
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN t0.c9 THEN x'782a' END, ((rt0.c2)OR(t0.c0)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN t0.c9 THEN x'782a' END, ((rt0.c2)OR(t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0);
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN t0.c9 THEN x'782a' END, ((rt0.c2)OR(t0.c0)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN t0.c9 THEN x'782a' END, ((rt0.c2)OR(t0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c0);
SELECT * FROM rt0, t0 WHERE (TRIM(DISTINCT CASE rt0.c1  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN t0.c9 THEN x'782a' END, ((rt0.c2)OR(t0.c0)))) ORDER BY t0.c0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY '-1112876316';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL))IS NOT((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '-1112876316');
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY '-1112876316';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL))IS NOT((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '-1112876316');
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL))IS NOT((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY '-1112876316';
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c2)))<<(rt0.c0 COLLATE BINARY))) ORDER BY CASE -2.73158242E8  WHEN (~ (t0.c9)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE 1015473490 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE -2.73158242E8  WHEN (~ (t0.c9)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE 1015473490 END  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c2)))<<(rt0.c0 COLLATE BINARY))) ORDER BY CASE -2.73158242E8  WHEN (~ (t0.c9)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE 1015473490 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE -2.73158242E8  WHEN (~ (t0.c9)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE 1015473490 END  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c2)))<<(rt0.c0 COLLATE BINARY))) ORDER BY CASE -2.73158242E8  WHEN (~ (t0.c9)) THEN ((t0.c0)GLOB(rt0.c1)) ELSE 1015473490 END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC, (NOT (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC, (NOT (((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC, (NOT (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC, (NOT (((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0) IS FALSE)))) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC, (NOT (((vt0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9)*(t0.c0)) IN (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9)*(t0.c0)) IN (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9)*(t0.c0)) IN (((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9)*(t0.c0)) IN (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9)*(t0.c0)) IN (((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE ((('I	ux' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) AND ((('1040681806') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((('I	ux' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) AND ((('1040681806') IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE ((('I	ux' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) AND ((('1040681806') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((('I	ux' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) AND ((('1040681806') IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE ((('I	ux' COLLATE RTRIM) BETWEEN (CASE WHEN NULL THEN rt0.c1 ELSE rt0.c2 END) AND ((('1040681806') IS TRUE))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c0) IS TRUE));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c9)<(vt0.c0))) ISNULL) WHERE (CAST(t0.c9 AS BLOB) COLLATE NOCASE) ORDER BY ((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c9 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c9)<(vt0.c0))) ISNULL) ORDER BY ((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c9)<(vt0.c0))) ISNULL) WHERE (CAST(t0.c9 AS BLOB) COLLATE NOCASE) ORDER BY ((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c9 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c9)<(vt0.c0))) ISNULL) ORDER BY ((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c9)<(vt0.c0))) ISNULL) WHERE (CAST(t0.c9 AS BLOB) COLLATE NOCASE) ORDER BY ((vt0.c1)IS NOT(vt0.c1)) COLLATE RTRIM DESC;
SELECT * FROM vt1, rt0, t0 WHERE (x'') ORDER BY ((((((((((t0.c0)OR(t0.c9)))AND(t0.c9)))OR(t0.c0)))OR(rt0.c1)))*(CHAR(vt1.c0, 'Y~|0', t0.c9))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((((t0.c0)OR(t0.c9)))AND(t0.c9)))OR(t0.c0)))OR(rt0.c1)))*(CHAR(vt1.c0, 'Y~|0', t0.c9))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, t0 WHERE (x'') ORDER BY ((((((((((t0.c0)OR(t0.c9)))AND(t0.c9)))OR(t0.c0)))OR(rt0.c1)))*(CHAR(vt1.c0, 'Y~|0', t0.c9))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((((((((t0.c0)OR(t0.c9)))AND(t0.c9)))OR(t0.c0)))OR(rt0.c1)))*(CHAR(vt1.c0, 'Y~|0', t0.c9))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0, t0 WHERE (x'') ORDER BY ((((((((((t0.c0)OR(t0.c9)))AND(t0.c9)))OR(t0.c0)))OR(rt0.c1)))*(CHAR(vt1.c0, 'Y~|0', t0.c9))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((('435176591')AND(((rt0.c1)|(vt0.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((t0.c0) NOT NULL))) CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN ('-\') AND (rt0.c1)))+((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('758956299'))))) INNER JOIN rt0 ON ((JULIANDAY(t0.c9, vt0.c0, rt0.c2, vt1.c0, rt0.c2))OR((rt0.c2 IN ()))) WHERE (TRIM(LIKELY(vt0.c0), ((vt0.c0)AND(rt0.c1)))) ORDER BY UNICODE(((rt0.c2) BETWEEN (rt0.c1) AND ('21982299'))), 0.5923606274170545, CAST(vt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELY(vt0.c0), ((vt0.c0)AND(rt0.c1)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((('435176591')AND(((rt0.c1)|(vt0.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((t0.c0) NOT NULL))) CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN ('-\') AND (rt0.c1)))+((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('758956299'))))) INNER JOIN rt0 ON ((JULIANDAY(t0.c9, vt0.c0, rt0.c2, vt1.c0, rt0.c2))OR((rt0.c2 IN ()))) ORDER BY UNICODE(((rt0.c2) BETWEEN (rt0.c1) AND ('21982299'))), 0.5923606274170545, CAST(vt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((('435176591')AND(((rt0.c1)|(vt0.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((t0.c0) NOT NULL))) CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN ('-\') AND (rt0.c1)))+((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('758956299'))))) INNER JOIN rt0 ON ((JULIANDAY(t0.c9, vt0.c0, rt0.c2, vt1.c0, rt0.c2))OR((rt0.c2 IN ()))) WHERE (TRIM(LIKELY(vt0.c0), ((vt0.c0)AND(rt0.c1)))) ORDER BY UNICODE(((rt0.c2) BETWEEN (rt0.c1) AND ('21982299'))), 0.5923606274170545, CAST(vt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(LIKELY(vt0.c0), ((vt0.c0)AND(rt0.c1)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((((('435176591')AND(((rt0.c1)|(vt0.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((t0.c0) NOT NULL))) CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN ('-\') AND (rt0.c1)))+((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('758956299'))))) INNER JOIN rt0 ON ((JULIANDAY(t0.c9, vt0.c0, rt0.c2, vt1.c0, rt0.c2))OR((rt0.c2 IN ()))) ORDER BY UNICODE(((rt0.c2) BETWEEN (rt0.c1) AND ('21982299'))), 0.5923606274170545, CAST(vt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((((('435176591')AND(((rt0.c1)|(vt0.c0)))))AND((NOT (rt0.c1)))))AND(((rt0.c1) IS FALSE))))AND(((t0.c0) NOT NULL))) CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN ('-\') AND (rt0.c1)))+((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('758956299'))))) INNER JOIN rt0 ON ((JULIANDAY(t0.c9, vt0.c0, rt0.c2, vt1.c0, rt0.c2))OR((rt0.c2 IN ()))) WHERE (TRIM(LIKELY(vt0.c0), ((vt0.c0)AND(rt0.c1)))) ORDER BY UNICODE(((rt0.c2) BETWEEN (rt0.c1) AND ('21982299'))), 0.5923606274170545, CAST(vt0.c0 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND((~ (t0.c9)))))AND(((vt1.c0) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND((~ (t0.c9)))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND((~ (t0.c9)))))AND(((vt1.c0) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS TEXT))AND((~ (t0.c9)))))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (((((CAST(vt1.c0 AS TEXT))AND((~ (t0.c9)))))AND(((vt1.c0) IS FALSE)))) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (CAST(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CAST(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (vt1.c0) ORDER BY (((((t0.c9))<(('-264567431'))))=(((t0.c0)||(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((((t0.c9))<(('-264567431'))))=(((t0.c0)||(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (vt1.c0) ORDER BY (((((t0.c9))<(('-264567431'))))=(((t0.c0)||(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((((t0.c9))<(('-264567431'))))=(((t0.c0)||(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (vt1.c0) ORDER BY (((((t0.c9))<(('-264567431'))))=(((t0.c0)||(rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)<=(rt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt1 INNER JOIN t0 ON (~ (t0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON ((((t0.c0)GLOB(x''))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((t0.c9 IN (393846221)))) RIGHT OUTER JOIN rt0 ON '-83927987' WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (~ (t0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON ((((t0.c0)GLOB(x''))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((t0.c9 IN (393846221)))) RIGHT OUTER JOIN rt0 ON '-83927987');
SELECT ALL * FROM vt1 INNER JOIN t0 ON (~ (t0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON ((((t0.c0)GLOB(x''))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((t0.c9 IN (393846221)))) RIGHT OUTER JOIN rt0 ON '-83927987' WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON (~ (t0.c0)) COLLATE RTRIM CROSS JOIN vt0 ON ((((t0.c0)GLOB(x''))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND ((t0.c9 IN (393846221)))) RIGHT OUTER JOIN rt0 ON '-83927987');
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)!=(t0.c0)))<<(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) ORDER BY ((((vt0.c1)<=(t0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(t0.c0)))<<(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<=(t0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)!=(t0.c0)))<<(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) ORDER BY ((((vt0.c1)<=(t0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(t0.c0)))<<(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<=(t0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)!=(t0.c0)))<<(((((vt0.c0)AND(vt0.c0)))AND(NULL))))) ORDER BY ((((vt0.c1)<=(t0.c0))) BETWEEN (SQLITE_COMPILEOPTION_GET(t0.c0)) AND (vt0.c0 COLLATE RTRIM));
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.4912896447940789  WHEN t0.c9 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)-(vt0.c0)) WHEN ((t0.c9)==(vt0.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 0.4912896447940789  WHEN t0.c9 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)-(vt0.c0)) WHEN ((t0.c9)=(vt0.c0)) THEN NULL END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.4912896447940789  WHEN t0.c9 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)-(vt0.c0)) WHEN ((t0.c9)==(vt0.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE 0.4912896447940789  WHEN t0.c9 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)-(vt0.c0)) WHEN ((t0.c9)=(vt0.c0)) THEN NULL END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE 0.4912896447940789  WHEN t0.c9 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt0.c1)-(vt0.c0)) WHEN ((t0.c9)==(vt0.c0)) THEN NULL END);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (((((rt0.c0))<((rt0.c1)))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0)>(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((rt0.c0))<((rt0.c1)))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0)>(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c1 END END ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (((((rt0.c0))<((rt0.c1)))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0)>(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((((rt0.c0))<((rt0.c1)))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0)>(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c1 END END ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) ORDER BY (((((rt0.c0))<((rt0.c1)))) BETWEEN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0)>(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c1 THEN rt0.c1 END END ASC;
SELECT ALL * FROM t0, vt0 WHERE (1.989487765E9) ORDER BY CAST((t0.c9 IN ()) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((1.989487765E9) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((t0.c9 IN ()) AS BLOB) DESC);
SELECT ALL * FROM t0, vt0 WHERE (1.989487765E9) ORDER BY CAST((t0.c9 IN ()) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((1.989487765E9) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((t0.c9 IN ()) AS BLOB) DESC);
SELECT ALL * FROM t0, vt0 WHERE (1.989487765E9) ORDER BY CAST((t0.c9 IN ()) AS BLOB) DESC;
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON -362596628 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON -362596628 ORDER BY (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON -362596628 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON -362596628 ORDER BY (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON -362596628 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY (((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((vt1.c0 IN ()))LIKE(CASE rt0.c0  WHEN vt0.c1 THEN '0.3818310061708068' ELSE rt0.c2 END))) ORDER BY ((TYPEOF(t0.c9)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))LIKE(CASE rt0.c0  WHEN vt0.c1 THEN '0.3818310061708068' ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((TYPEOF(t0.c9)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((vt1.c0 IN ()))LIKE(CASE rt0.c0  WHEN vt0.c1 THEN '0.3818310061708068' ELSE rt0.c2 END))) ORDER BY ((TYPEOF(t0.c9)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))LIKE(CASE rt0.c0  WHEN vt0.c1 THEN '0.3818310061708068' ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((TYPEOF(t0.c9)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((vt1.c0 IN ()))LIKE(CASE rt0.c0  WHEN vt0.c1 THEN '0.3818310061708068' ELSE rt0.c2 END))) ORDER BY ((TYPEOF(t0.c9)) ISNULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)>>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ (((t0.c0)>>(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((vt1.c0))<=((rt0.c2)))))) ORDER BY ((MAX(rt0.c0, rt0.c0, rt0.c1, rt0.c2))|((((rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c2))<>(('-1392974670', vt1.c0, 'xef', rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((MAX(rt0.c0, rt0.c0, rt0.c1, rt0.c2))|((((rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c2))!=(('-1392974670', vt1.c0, 'xef', rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((vt1.c0))<=((rt0.c2)))))) ORDER BY ((MAX(rt0.c0, rt0.c0, rt0.c1, rt0.c2))|((((rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c2))<>(('-1392974670', vt1.c0, 'xef', rt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))<=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((MAX(rt0.c0, rt0.c0, rt0.c1, rt0.c2))|((((rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c2))!=(('-1392974670', vt1.c0, 'xef', rt0.c0, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((vt1.c0))<=((rt0.c2)))))) ORDER BY ((MAX(rt0.c0, rt0.c0, rt0.c1, rt0.c2))|((((rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c2))<>(('-1392974670', vt1.c0, 'xef', rt0.c0, rt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt1.c0)))<=(((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))<=(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt1.c0)))<=(((vt0.c1)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>(vt1.c0)))<=(((vt0.c1)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0)>(vt1.c0)))<=(((vt0.c1)!=(vt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (CAST((NULL IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((NULL IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((NULL IN ()) AS REAL));
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0)IS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0)IS(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.2840803690817052 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.2840803690817052 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.2840803690817052 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.2840803690817052 ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY 0.2840803690817052 ASC;
SELECT COUNT(*) FROM t0 WHERE ((t0.c9 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c9 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c9 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c9 IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((t0.c9 IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((((vt0.c0)=(vt1.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)&(rt0.c2)))!=((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)=(vt1.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0)&(rt0.c2)))<>((+ (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((((vt0.c0)=(vt1.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)&(rt0.c2)))!=((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)=(vt1.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0)&(rt0.c2)))<>((+ (rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((((vt0.c0)=(vt1.c0)))OR(((vt0.c0)IS NOT(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)&(rt0.c2)))!=((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((CASE WHEN vt0.c1 THEN rt0.c0 END) BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((t0.c9) BETWEEN (rt0.c1) AND (vt0.c0)))AND((+ (x'')))))AND(((rt0.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((((((t0.c9) BETWEEN (rt0.c1) AND (vt0.c0)))AND((+ (x'')))))AND(((rt0.c0)OR(vt1.c0)))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((t0.c9) BETWEEN (rt0.c1) AND (vt0.c0)))AND((+ (x'')))))AND(((rt0.c0)OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((((((t0.c9) BETWEEN (rt0.c1) AND (vt0.c0)))AND((+ (x'')))))AND(((rt0.c0)OR(vt1.c0)))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (vt0.c0) ORDER BY ((((((t0.c9) BETWEEN (rt0.c1) AND (vt0.c0)))AND((+ (x'')))))AND(((rt0.c0)OR(vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((176471090) BETWEEN (load_extension(x'', rt0.c1)) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((176471090) BETWEEN (load_extension(x'', rt0.c1)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((176471090) BETWEEN (load_extension(x'', rt0.c1)) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((176471090) BETWEEN (load_extension(x'', rt0.c1)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((176471090) BETWEEN (load_extension(x'', rt0.c1)) AND (rt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS NUMERIC))OR((rt0.c1 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, ((((rt0.c2 COLLATE BINARY)OR(rt0.c1)))AND(NULL))  NULLS LAST, CASE ((((rt0.c1)OR(0.27637491445371654)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, ((((rt0.c2 COLLATE BINARY)OR(rt0.c1)))AND(NULL))  NULLS LAST, CASE ((((rt0.c1)OR(0.27637491445371654)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS NUMERIC))OR((rt0.c1 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, ((((rt0.c2 COLLATE BINARY)OR(rt0.c1)))AND(NULL))  NULLS LAST, CASE ((((rt0.c1)OR(0.27637491445371654)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, ((((rt0.c2 COLLATE BINARY)OR(rt0.c1)))AND(NULL))  NULLS LAST, CASE ((((rt0.c1)OR(0.27637491445371654)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c1 AS NUMERIC))OR((rt0.c1 IN ())))) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) ASC, ((((rt0.c2 COLLATE BINARY)OR(rt0.c1)))AND(NULL))  NULLS LAST, CASE ((((rt0.c1)OR(0.27637491445371654)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c2)) THEN rt0.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((x'') IS FALSE)))=((SQLITE_COMPILEOPTION_USED(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))!=((((vt0.c1))<((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'') IS FALSE)))=((SQLITE_COMPILEOPTION_USED(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))!=((((vt0.c1))<((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((x'') IS FALSE)))=((SQLITE_COMPILEOPTION_USED(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))!=((((vt0.c1))<((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'') IS FALSE)))=((SQLITE_COMPILEOPTION_USED(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER))!=((((vt0.c1))<((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((x'') IS FALSE)))=((SQLITE_COMPILEOPTION_USED(vt1.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER))!=((((vt0.c1))<((vt0.c0))))) DESC;
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((((((((((t0.c9)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (STRFTIME(t0.c0, vt0.c1, rt0.c0))) FULL OUTER JOIN vt1 ON CHANGES() WHERE (((((+ (vt0.c1)), ((rt0.c0) BETWEEN (NULL) AND (t0.c9)), CASE WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, (~ (t0.c9))))!=((rt0.c0, 0.5462260862391024, ((rt0.c0)OR(vt1.c0)), rt0.c0, ((vt1.c0)<>(rt0.c0)))))) ORDER BY ((((((rt0.c2)>(vt1.c0)))AND((t0.c0 IN ()))))OR(HEX(rt0.c2)))  NULLS LAST, ((((rt0.c2)OR(rt0.c1)))OR(t0.c9)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c1)), ((rt0.c0) BETWEEN (NULL) AND (t0.c9)), CASE WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, (~ (t0.c9))))!=((rt0.c0, 0.5462260862391024, ((rt0.c0)OR(vt1.c0)), rt0.c0, ((vt1.c0)<>(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((((((((t0.c9)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (STRFTIME(t0.c0, vt0.c1, rt0.c0))) FULL OUTER JOIN vt1 ON CHANGES() ORDER BY ((((((rt0.c2)>(vt1.c0)))AND((t0.c0 IN ()))))OR(HEX(rt0.c2)))  NULLS LAST, ((((rt0.c2)OR(rt0.c1)))OR(t0.c9)) COLLATE BINARY ASC);
SELECT * FROM t0, vt0 CROSS JOIN rt0 ON ((((((((((t0.c9)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (STRFTIME(t0.c0, vt0.c1, rt0.c0))) FULL OUTER JOIN vt1 ON CHANGES() WHERE (((((+ (vt0.c1)), ((rt0.c0) BETWEEN (NULL) AND (t0.c9)), CASE WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, (~ (t0.c9))))!=((rt0.c0, 0.5462260862391024, ((rt0.c0)OR(vt1.c0)), rt0.c0, ((vt1.c0)<>(rt0.c0)))))) ORDER BY ((((((rt0.c2)>(vt1.c0)))AND((t0.c0 IN ()))))OR(HEX(rt0.c2)))  NULLS LAST, ((((rt0.c2)OR(rt0.c1)))OR(t0.c9)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c1)), ((rt0.c0) BETWEEN (NULL) AND (t0.c9)), CASE WHEN vt0.c1 THEN vt0.c1 END, vt0.c1, (~ (t0.c9))))!=((rt0.c0, 0.5462260862391024, ((rt0.c0)OR(vt1.c0)), rt0.c0, ((vt1.c0)<>(rt0.c0)))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((((((((t0.c9)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(t0.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (STRFTIME(t0.c0, vt0.c1, rt0.c0))) FULL OUTER JOIN vt1 ON CHANGES() ORDER BY ((((((rt0.c2)>(vt1.c0)))AND((t0.c0 IN ()))))OR(HEX(rt0.c2)))  NULLS LAST, ((((rt0.c2)OR(rt0.c1)))OR(t0.c9)) COLLATE BINARY ASC);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)+('189455428'))) ORDER BY ((x'1ed8' COLLATE RTRIM)IS NOT((~ ('')))), vt1.c0  NULLS LAST, (+ (vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)+('189455428'))) IS TRUE)  as count FROM vt1 ORDER BY ((x'1ed8' COLLATE RTRIM)IS NOT((~ ('')))), vt1.c0  NULLS LAST, (+ (vt1.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)+('189455428'))) ORDER BY ((x'1ed8' COLLATE RTRIM)IS NOT((~ ('')))), vt1.c0  NULLS LAST, (+ (vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)+('189455428'))) IS TRUE)  as count FROM vt1 ORDER BY ((x'1ed8' COLLATE RTRIM)IS NOT((~ ('')))), vt1.c0  NULLS LAST, (+ (vt1.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)+('189455428'))) ORDER BY ((x'1ed8' COLLATE RTRIM)IS NOT((~ ('')))), vt1.c0  NULLS LAST, (+ (vt1.c0 COLLATE BINARY)) DESC;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((rt0.c2)>('?5,벘]' COLLATE RTRIM))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>('?5,벘]' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((rt0.c2)>('?5,벘]' COLLATE RTRIM))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>('?5,벘]' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(rt0.c2 AS NUMERIC)) ISNULL) WHERE (((rt0.c2)>('?5,벘]' COLLATE RTRIM))) ORDER BY rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0)+(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((('-244867785')AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((('-244867785')AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0)+(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((('-244867785')AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((('-244867785')AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0)+(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((('-244867785')AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0))) IS TRUE) WHERE (CASE WHEN NULL THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY (((vt1.c0)) NOT BETWEEN (('-1170415252')) AND (((((vt1.c0))<=((vt0.c0)))))) DESC  NULLS LAST, ((((CASE vt1.c0  WHEN 0.3683743921265815 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) IS FALSE))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) DESC, ((vt0.c0)<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0))) IS TRUE) ORDER BY (((vt1.c0)) NOT BETWEEN (('-1170415252')) AND (((((vt1.c0))<=((vt0.c0)))))) DESC  NULLS LAST, ((((CASE vt1.c0  WHEN 0.3683743921265815 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) IS FALSE))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) DESC, ((vt0.c0)<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0))) IS TRUE) WHERE (CASE WHEN NULL THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY (((vt1.c0)) NOT BETWEEN (('-1170415252')) AND (((((vt1.c0))<=((vt0.c0)))))) DESC  NULLS LAST, ((((CASE vt1.c0  WHEN 0.3683743921265815 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) IS FALSE))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) DESC, ((vt0.c0)<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0))) IS TRUE) ORDER BY (((vt1.c0)) NOT BETWEEN (('-1170415252')) AND (((((vt1.c0))<=((vt0.c0)))))) DESC  NULLS LAST, ((((CASE vt1.c0  WHEN 0.3683743921265815 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) IS FALSE))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) DESC, ((vt0.c0)<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (((+ (vt1.c0))) IS TRUE) WHERE (CASE WHEN NULL THEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) END) ORDER BY (((vt1.c0)) NOT BETWEEN (('-1170415252')) AND (((((vt1.c0))<=((vt0.c0)))))) DESC  NULLS LAST, ((((CASE vt1.c0  WHEN 0.3683743921265815 THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c0) IS FALSE))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) DESC, ((vt0.c0)<<(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((- (rt0.c2)) AS REAL) LEFT OUTER JOIN rt0 ON CAST((+ (rt0.c1)) AS NUMERIC) WHERE ('2031662745');
SELECT SUM(count) FROM (SELECT ALL (('2031662745') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((- (rt0.c2)) AS REAL) LEFT OUTER JOIN rt0 ON CAST((+ (rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((- (rt0.c2)) AS REAL) LEFT OUTER JOIN rt0 ON CAST((+ (rt0.c1)) AS NUMERIC) WHERE ('2031662745');
SELECT SUM(count) FROM (SELECT ALL (('2031662745') IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((- (rt0.c2)) AS REAL) LEFT OUTER JOIN rt0 ON CAST((+ (rt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((- (rt0.c2)) AS REAL) LEFT OUTER JOIN rt0 ON CAST((+ (rt0.c1)) AS NUMERIC) WHERE ('2031662745');
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((vt1.c0 IN ())))==(((vt0.c1 IN ()))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))==(((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((vt1.c0 IN ())))==(((vt0.c1 IN ()))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))==(((vt0.c1 IN ()))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (((((vt1.c0 IN ())))==(((vt0.c1 IN ()))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((((-721088683)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), 0.1319590325052582, ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2))))>=((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)), vt1.c0, ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2))))) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c1)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c1)&(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((((((((-721088683)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), 0.1319590325052582, ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2))))>=((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)), vt1.c0, ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((((-721088683)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), 0.1319590325052582, ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2))))>=((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)), vt1.c0, ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2))))) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c1)&(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c1)&(vt1.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((((((((-721088683)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), 0.1319590325052582, ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2))))>=((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)), vt1.c0, ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((((-721088683)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), 0.1319590325052582, ((((((((rt0.c1)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2))))>=((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)), vt1.c0, ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c2))))) WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))) AND (((rt0.c1)&(vt1.c0)))));
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((((((((((t0.c0)<=(t0.c0)))OR(((vt0.c1)/(NULL)))))AND((vt0.c1 IN (t0.c9)))))AND(LIKELY(DISTINCT t0.c0))))OR(CASE WHEN rt0.c1 THEN vt0.c1 ELSE t0.c9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)<=(t0.c0)))OR(((vt0.c1)/(NULL)))))AND((vt0.c1 IN (t0.c9)))))AND(LIKELY(DISTINCT t0.c0))))OR(CASE WHEN rt0.c1 THEN vt0.c1 ELSE t0.c9 END))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((((((((((t0.c0)<=(t0.c0)))OR(((vt0.c1)/(NULL)))))AND((vt0.c1 IN (t0.c9)))))AND(LIKELY(DISTINCT t0.c0))))OR(CASE WHEN rt0.c1 THEN vt0.c1 ELSE t0.c9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)<=(t0.c0)))OR(((vt0.c1)/(NULL)))))AND((vt0.c1 IN (t0.c9)))))AND(LIKELY(DISTINCT t0.c0))))OR(CASE WHEN rt0.c1 THEN vt0.c1 ELSE t0.c9 END))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT * FROM vt0, t0, rt0, vt1 WHERE (((((((((((t0.c0)<=(t0.c0)))OR(((vt0.c1)/(NULL)))))AND((vt0.c1 IN (t0.c9)))))AND(LIKELY(DISTINCT t0.c0))))OR(CASE WHEN rt0.c1 THEN vt0.c1 ELSE t0.c9 END)));
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE ((~ ((('-1328604004')GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-1328604004')GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((~ ((('-1328604004')GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((('-1328604004')GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((~ ((('-1328604004')GLOB(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (NULL);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN ()))) FULL OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) AS INTEGER) WHERE ((0.6792979559331455 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.6792979559331455 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN ()))) FULL OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) AS INTEGER));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN ()))) FULL OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) AS INTEGER) WHERE ((0.6792979559331455 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.6792979559331455 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (+ ((NULL IN ()))) FULL OUTER JOIN rt0 ON t0.c0 INNER JOIN t0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL END)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL END)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL END)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN NULL END)) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE BINARY)));
SELECT * FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM)OR(vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)OR((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)OR((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY)OR((~ (rt0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c9)>>(t0.c0)))AND(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c9))<((vt1.c0))))OR(t0.c0)))AND(((t0.c9)/(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c9)>>(t0.c0)))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c9))<((vt1.c0))))OR(t0.c0)))AND(((t0.c9)/(t0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c9)>>(t0.c0)))AND(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c9))<((vt1.c0))))OR(t0.c0)))AND(((t0.c9)/(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c9)>>(t0.c0)))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((t0.c9))<((vt1.c0))))OR(t0.c0)))AND(((t0.c9)/(t0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c9)>>(t0.c0)))AND(((t0.c0) NOTNULL)))) ORDER BY (((((((t0.c9))<((vt1.c0))))OR(t0.c0)))AND(((t0.c9)/(t0.c0)))) DESC;
SELECT COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c9 END)) WHERE (((((rt0.c0) BETWEEN (t0.c9) AND (vt0.c1)))LIKE((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c9) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c9) AND (vt0.c1)))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c9 END)) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c9) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c9 END)) WHERE (((((rt0.c0) BETWEEN (t0.c9) AND (vt0.c1)))LIKE((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c9) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (t0.c9) AND (vt0.c1)))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c9 END)) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c9) AND (vt0.c0))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)AND(CASE WHEN '' THEN t0.c0 ELSE t0.c9 END)) WHERE (((((rt0.c0) BETWEEN (t0.c9) AND (vt0.c1)))LIKE((vt0.c0 IN ())))) ORDER BY ((((vt0.c1) NOT BETWEEN (t0.c9) AND (vt0.c0))) IS TRUE)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))==(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))==(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL))=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)OR((vt0.c0 IN (t0.c9)))))OR(rt0.c1))) ORDER BY t0.c0  NULLS FIRST, (((('-603130470')||(vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)OR((vt0.c0 IN (t0.c9)))))OR(rt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY t0.c0  NULLS FIRST, (((('-603130470')||(vt0.c1))) IS FALSE));
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)OR((vt0.c0 IN (t0.c9)))))OR(rt0.c1))) ORDER BY t0.c0  NULLS FIRST, (((('-603130470')||(vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)OR((vt0.c0 IN (t0.c9)))))OR(rt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY t0.c0  NULLS FIRST, (((('-603130470')||(vt0.c1))) IS FALSE));
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)OR((vt0.c0 IN (t0.c9)))))OR(rt0.c1))) ORDER BY t0.c0  NULLS FIRST, (((('-603130470')||(vt0.c1))) IS FALSE);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c9 THEN t0.c0 END THEN ('.o' IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c9 THEN t0.c0 END THEN ('.o' IN (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c9 THEN t0.c0 END THEN ('.o' IN (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c9 THEN t0.c0 END THEN ('.o' IN (t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c9 THEN t0.c0 END THEN ('.o' IN (t0.c0)) END);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<((vt0.c1))))=(((rt0.c2)>=(rt0.c2))))  NULLS FIRST, CAST((t0.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((((vt0.c0))<((vt0.c1))))==(((rt0.c2)>=(rt0.c2))))  NULLS FIRST, CAST((t0.c0 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<((vt0.c1))))=(((rt0.c2)>=(rt0.c2))))  NULLS FIRST, CAST((t0.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY (((((vt0.c0))<((vt0.c1))))==(((rt0.c2)>=(rt0.c2))))  NULLS FIRST, CAST((t0.c0 IN ()) AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE RTRIM) ORDER BY (((((vt0.c0))<((vt0.c1))))=(((rt0.c2)>=(rt0.c2))))  NULLS FIRST, CAST((t0.c0 IN ()) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '-595931498' WHERE ((((t0.c9) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON '-595931498');
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '-595931498' WHERE ((((t0.c9) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON '-595931498');
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '-595931498' WHERE ((((t0.c9) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t0.c9) NOT NULL))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t0.c9) NOT NULL))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t0.c9) NOT NULL))) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t0.c9) NOT NULL))) AND ((rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t0.c9) NOT NULL))) AND ((rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))||(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))||(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))||(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))||(vt0.c0)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY t0.c0 ASC, ((CASE vt1.c0  WHEN t0.c9 THEN vt0.c1 ELSE t0.c9 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY t0.c0 ASC, ((CASE vt1.c0  WHEN t0.c9 THEN vt0.c1 ELSE t0.c9 END) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY t0.c0 ASC, ((CASE vt1.c0  WHEN t0.c9 THEN vt0.c1 ELSE t0.c9 END) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY t0.c0 ASC, ((CASE vt1.c0  WHEN t0.c9 THEN vt0.c1 ELSE t0.c9 END) IS FALSE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) ORDER BY t0.c0 ASC, ((CASE vt1.c0  WHEN t0.c9 THEN vt0.c1 ELSE t0.c9 END) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE (((((((t0.c9)AND(t0.c0)))AND(t0.c0)))IS NOT(CAST(t0.c9 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c9)AND(t0.c0)))AND(t0.c0)))IS NOT(CAST(t0.c9 AS REAL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON NULL);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE (((((((t0.c9)AND(t0.c0)))AND(t0.c0)))IS NOT(CAST(t0.c9 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c9)AND(t0.c0)))AND(t0.c0)))IS NOT(CAST(t0.c9 AS REAL)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON NULL);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON NULL WHERE (((((((t0.c9)AND(t0.c0)))AND(t0.c0)))IS NOT(CAST(t0.c9 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))OR((((t0.c9, t0.c9, t0.c0))>=((t0.c0, t0.c9, t0.c0))))))OR((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) ISNULL))OR((((t0.c9, t0.c9, t0.c0))>=((t0.c0, t0.c9, t0.c0))))))OR((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))OR((((t0.c9, t0.c9, t0.c0))>=((t0.c0, t0.c9, t0.c0))))))OR((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) ISNULL))OR((((t0.c9, t0.c9, t0.c0))>=((t0.c0, t0.c9, t0.c0))))))OR((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0) ISNULL))OR((((t0.c9, t0.c9, t0.c0))>=((t0.c0, t0.c9, t0.c0))))))OR((- (t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (x'a292');
SELECT SUM(count) FROM (SELECT ALL ((x'a292') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (x'a292');
SELECT SUM(count) FROM (SELECT ALL ((x'a292') IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (x'a292');
SELECT * FROM vt0 INNER JOIN vt1 ON (((((rt0.c2)|(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE BINARY))<=((((rt0.c2)|(rt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((vt0.c1, vt1.c0, NULL))<((rt0.c2, vt0.c1, vt0.c1)))))) INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND (('R?'))) WHERE (LIKELIHOOD(DISTINCT 0.932376962108322, 0.43424200239713895));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 0.932376962108322, 0.43424200239713895)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((rt0.c2)|(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE BINARY))<=((((rt0.c2)|(rt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((vt0.c1, vt1.c0, NULL))<((rt0.c2, vt0.c1, vt0.c1)))))) INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND (('R?'))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((((rt0.c2)|(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE BINARY))<=((((rt0.c2)|(rt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((vt0.c1, vt1.c0, NULL))<((rt0.c2, vt0.c1, vt0.c1)))))) INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND (('R?'))) WHERE (LIKELIHOOD(DISTINCT 0.932376962108322, 0.43424200239713895));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT 0.932376962108322, 0.43424200239713895)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((rt0.c2)|(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE BINARY))<=((((rt0.c2)|(rt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((vt0.c1, vt1.c0, NULL))<((rt0.c2, vt0.c1, vt0.c1)))))) INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND (('R?'))));
SELECT * FROM vt0 INNER JOIN vt1 ON (((((rt0.c2)|(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), vt0.c0 COLLATE BINARY))<=((((rt0.c2)|(rt0.c1)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((vt0.c1, vt1.c0, NULL))<((rt0.c2, vt0.c1, vt0.c1)))))) INNER JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND (('R?'))) WHERE (LIKELIHOOD(DISTINCT 0.932376962108322, 0.43424200239713895));
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_patch((((t0.c0))<=((x''))), t0.c0)) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'')))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c9)))), LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((json_patch((((t0.c0))<=((x''))), t0.c0)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'')))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c9)))), LAST_INSERT_ROWID());
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_patch((((t0.c0))<=((x''))), t0.c0)) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'')))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c9)))), LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ((json_patch((((t0.c0))<=((x''))), t0.c0)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'')))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c9)))), LAST_INSERT_ROWID());
SELECT ALL * FROM vt1, t0, vt0 WHERE (json_patch((((t0.c0))<=((x''))), t0.c0)) ORDER BY ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(x'')))AND(vt0.c0 COLLATE BINARY)))AND(CAST(vt0.c0 AS INTEGER))))AND((vt0.c0 IN (t0.c9)))), LAST_INSERT_ROWID();
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE (NULL);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((- (vt1.c0)))) ORDER BY ((((LOWER(DISTINCT vt0.c0))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2)*(t0.c0))))  NULLS LAST, rt0.c2, ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c9)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((- (vt1.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((((LOWER(DISTINCT vt0.c0))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2)*(t0.c0))))  NULLS LAST, rt0.c2, ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c9)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((- (vt1.c0)))) ORDER BY ((((LOWER(DISTINCT vt0.c0))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2)*(t0.c0))))  NULLS LAST, rt0.c2, ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c9)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((- (vt1.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((((LOWER(DISTINCT vt0.c0))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2)*(t0.c0))))  NULLS LAST, rt0.c2, ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c9)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (SQLITE_COMPILEOPTION_GET((- (vt1.c0)))) ORDER BY ((((LOWER(DISTINCT vt0.c0))OR(rt0.c0 COLLATE BINARY)))AND(((rt0.c2)*(t0.c0))))  NULLS LAST, rt0.c2, ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c9)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (-1166446017) ORDER BY ((HEX(DISTINCT rt0.c1))>>('g'));
SELECT SUM(count) FROM (SELECT ((-1166446017) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((HEX(DISTINCT rt0.c1))>>('g')));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (-1166446017) ORDER BY ((HEX(DISTINCT rt0.c1))>>('g'));
SELECT SUM(count) FROM (SELECT ((-1166446017) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((HEX(DISTINCT rt0.c1))>>('g')));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (-1166446017) ORDER BY ((HEX(DISTINCT rt0.c1))>>('g'));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (HEX((((0.5893363204407513)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY vt0.c0  NULLS FIRST, UPPER(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX((((0.5893363204407513)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY vt0.c0  NULLS FIRST, UPPER(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, (- ((+ (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (HEX((((0.5893363204407513)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY vt0.c0  NULLS FIRST, UPPER(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, (- ((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX((((0.5893363204407513)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY vt0.c0  NULLS FIRST, UPPER(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, (- ((+ (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (HEX((((0.5893363204407513)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))) ORDER BY vt0.c0  NULLS FIRST, UPPER(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))  NULLS LAST, (- ((+ (rt0.c1))));
SELECT * FROM t0, vt1, rt0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((rt0.c0)AND('a{뚙I5le1	')))AND(rt0.c0)) THEN vt1.c0 ELSE ((rt0.c1)+(vt1.c0)) END) ORDER BY CASE rt0.c1  WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) ELSE HEX(vt1.c0) END DESC, CAST(NULL AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN ((((rt0.c0)AND('a{뚙I5le1	')))AND(rt0.c0)) THEN vt1.c0 ELSE ((rt0.c1)+(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CASE rt0.c1  WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) ELSE HEX(vt1.c0) END DESC, CAST(NULL AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((rt0.c0)AND('a{뚙I5le1	')))AND(rt0.c0)) THEN vt1.c0 ELSE ((rt0.c1)+(vt1.c0)) END) ORDER BY CASE rt0.c1  WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) ELSE HEX(vt1.c0) END DESC, CAST(NULL AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) IS FALSE)  WHEN ((((rt0.c0)AND('a{뚙I5le1	')))AND(rt0.c0)) THEN vt1.c0 ELSE ((rt0.c1)+(vt1.c0)) END) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY CASE rt0.c1  WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) ELSE HEX(vt1.c0) END DESC, CAST(NULL AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM t0, vt1, rt0 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((((rt0.c0)AND('a{뚙I5le1	')))AND(rt0.c0)) THEN vt1.c0 ELSE ((rt0.c1)+(vt1.c0)) END) ORDER BY CASE rt0.c1  WHEN CASE WHEN vt1.c0 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) ELSE HEX(vt1.c0) END DESC, CAST(NULL AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (CASE (- (t0.c9))  WHEN NULL THEN (+ (t0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c1))>=((t0.c9, vt0.c1, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c9))  WHEN NULL THEN (+ (t0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c1))>=((t0.c9, vt0.c1, vt1.c0))) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (CASE (- (t0.c9))  WHEN NULL THEN (+ (t0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c1))>=((t0.c9, vt0.c1, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c9))  WHEN NULL THEN (+ (t0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c1))>=((t0.c9, vt0.c1, vt1.c0))) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0 NOT INDEXED, vt0 WHERE (CASE (- (t0.c9))  WHEN NULL THEN (+ (t0.c0)) ELSE (((vt0.c1, vt0.c1, vt0.c1))>=((t0.c9, vt0.c1, vt1.c0))) END);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY vt1.c0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((vt0.c1)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((t0.c9)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<(((t0.c0 IN (rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((vt0.c1)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((((t0.c9)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<(((t0.c0 IN (rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((vt0.c1)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((t0.c9)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<(((t0.c0 IN (rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((vt0.c1)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ORDER BY ((((((t0.c9)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<(((t0.c0 IN (rt0.c2))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((vt0.c1)AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE ((CAST(vt0.c1 AS REAL) IN ())) ORDER BY ((((((t0.c9)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))))<(((t0.c0 IN (rt0.c2))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c9);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(t0.c9 AS REAL))IS(vt0.c0 COLLATE NOCASE)) WHERE (CAST(t0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (+ (t0.c9));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(t0.c9 AS REAL))IS(vt0.c0 COLLATE NOCASE)) ORDER BY (+ (t0.c9)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(t0.c9 AS REAL))IS(vt0.c0 COLLATE NOCASE)) WHERE (CAST(t0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (+ (t0.c9));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(t0.c9 AS REAL))IS(vt0.c0 COLLATE NOCASE)) ORDER BY (+ (t0.c9)));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(t0.c9 AS REAL))IS(vt0.c0 COLLATE NOCASE)) WHERE (CAST(t0.c0 COLLATE RTRIM AS BLOB)) ORDER BY (+ (t0.c9));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) IS FALSE))OR(((rt0.c0)+(rt0.c1)))) WHERE (t0.c9) ORDER BY rt0.c2  NULLS LAST, LIKELY(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) IS FALSE))OR(((rt0.c0)+(rt0.c1)))) ORDER BY rt0.c2  NULLS LAST, LIKELY(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) IS FALSE))OR(((rt0.c0)+(rt0.c1)))) WHERE (t0.c9) ORDER BY rt0.c2  NULLS LAST, LIKELY(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) IS FALSE))OR(((rt0.c0)+(rt0.c1)))) ORDER BY rt0.c2  NULLS LAST, LIKELY(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt0.c0) IS FALSE))OR(((rt0.c0)+(rt0.c1)))) WHERE (t0.c9) ORDER BY rt0.c2  NULLS LAST, LIKELY(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) ASC;
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (x'');
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(NULL AS INTEGER) WHERE ((CAST(x'' AS REAL) IN ((((rt0.c1))<((vt0.c0)))))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE NOCASE ASC, rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS REAL) IN ((((rt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(NULL AS INTEGER) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE NOCASE ASC, rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(NULL AS INTEGER) WHERE ((CAST(x'' AS REAL) IN ((((rt0.c1))<((vt0.c0)))))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE NOCASE ASC, rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS REAL) IN ((((rt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(NULL AS INTEGER) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE NOCASE ASC, rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CAST(NULL AS INTEGER) WHERE ((CAST(x'' AS REAL) IN ((((rt0.c1))<((vt0.c0)))))) ORDER BY (((rt0.c2))>=((rt0.c2))) COLLATE NOCASE ASC, rt0.c0 COLLATE RTRIM;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)/(vt0.c1))) AND (((rt0.c0)-(rt0.c0))))) ORDER BY ((((0.7980519114914375)AND(TYPEOF(rt0.c0))))OR((~ (rt0.c0)))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0)+(rt0.c1)))) DESC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)/(vt0.c1))) AND (((rt0.c0)-(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((0.7980519114914375)AND(TYPEOF(rt0.c0))))OR((~ (rt0.c0)))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0)+(rt0.c1)))) DESC, rt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)/(vt0.c1))) AND (((rt0.c0)-(rt0.c0))))) ORDER BY ((((0.7980519114914375)AND(TYPEOF(rt0.c0))))OR((~ (rt0.c0)))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0)+(rt0.c1)))) DESC, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)/(vt0.c1))) AND (((rt0.c0)-(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((0.7980519114914375)AND(TYPEOF(rt0.c0))))OR((~ (rt0.c0)))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0)+(rt0.c1)))) DESC, rt0.c0 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((rt0.c1)/(vt0.c1))) AND (((rt0.c0)-(rt0.c0))))) ORDER BY ((((0.7980519114914375)AND(TYPEOF(rt0.c0))))OR((~ (rt0.c0)))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0)+(rt0.c1)))) DESC, rt0.c0 DESC;
SELECT * FROM t0, rt0, vt1, vt0 NOT INDEXED WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 NOT INDEXED WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT * FROM t0, rt0, vt1, vt0 NOT INDEXED WHERE (x'');
SELECT COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) WHERE ((- (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt1, rt0 CROSS JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) WHERE ((- (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt1, rt0 CROSS JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT COUNT(*) FROM t0, vt1, rt0 CROSS JOIN vt0 ON SQLITE_COMPILEOPTION_USED(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) WHERE ((- (((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c9) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c9) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c9) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c9) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c9) NOT NULL) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (CAST(('-945371902' IN (vt0.c0, t0.c9)) AS REAL)) ORDER BY (t0.c9 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-945371902' IN (vt0.c0, t0.c9)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c9 IN ()) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(('-945371902' IN (vt0.c0, t0.c9)) AS REAL)) ORDER BY (t0.c9 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('-945371902' IN (vt0.c0, t0.c9)) AS REAL)) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c9 IN ()) ASC);
SELECT * FROM vt0, t0 WHERE (CAST(('-945371902' IN (vt0.c0, t0.c9)) AS REAL)) ORDER BY (t0.c9 IN ()) ASC;
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((275124072)AND(t0.c9)))AND(((t0.c9) BETWEEN (x'') AND (vt0.c1))))) ORDER BY ((NOT (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((275124072)AND(t0.c9)))AND(((t0.c9) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((NOT (t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((275124072)AND(t0.c9)))AND(((t0.c9) BETWEEN (x'') AND (vt0.c1))))) ORDER BY ((NOT (t0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((275124072)AND(t0.c9)))AND(((t0.c9) BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((NOT (t0.c0)) IN ())  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (((((275124072)AND(t0.c9)))AND(((t0.c9) BETWEEN (x'') AND (vt0.c1))))) ORDER BY ((NOT (t0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), NULL, CAST(rt0.c2 AS TEXT)))=(((~ (t0.c9)), rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) INNER JOIN vt0 ON (((vt1.c0))<>(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) WHERE (((((rt0.c2) IS FALSE))GLOB(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))GLOB(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), NULL, CAST(rt0.c2 AS TEXT)))=(((~ (t0.c9)), rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) INNER JOIN vt0 ON (((vt1.c0))!=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), NULL, CAST(rt0.c2 AS TEXT)))=(((~ (t0.c9)), rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) INNER JOIN vt0 ON (((vt1.c0))<>(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) WHERE (((((rt0.c2) IS FALSE))GLOB(CAST(t0.c0 AS NUMERIC)))) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))GLOB(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c2 LEFT OUTER JOIN t0 ON (((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)), NULL, CAST(rt0.c2 AS TEXT)))=(((~ (t0.c9)), rt0.c2 COLLATE RTRIM, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) INNER JOIN vt0 ON (((vt1.c0))!=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) ORDER BY ((vt1.c0 COLLATE RTRIM)AND(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((t0.c0) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((t0.c0) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((t0.c0) NOT NULL)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((vt1.c0) IS TRUE))));
SELECT * FROM rt0, vt1 WHERE (((rt0.c2) BETWEEN ((('')AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN '[*~	0Kf' THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN ((rt0.c0)LIKE(NULL)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((('')AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN '[*~	0Kf' THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN ((rt0.c0)LIKE(NULL)) ELSE CAST(rt0.c0 AS TEXT) END ASC);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2) BETWEEN ((('')AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN '[*~	0Kf' THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN ((rt0.c0)LIKE(NULL)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((('')AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN '[*~	0Kf' THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN ((rt0.c0)LIKE(NULL)) ELSE CAST(rt0.c0 AS TEXT) END ASC);
SELECT * FROM rt0, vt1 WHERE (((rt0.c2) BETWEEN ((('')AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c2))))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN '[*~	0Kf' THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN ((rt0.c0)LIKE(NULL)) ELSE CAST(rt0.c0 AS TEXT) END ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (NULL, (rt0.c2 IN (vt0.c1)))) DESC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (NULL, (rt0.c2 IN (vt0.c1)))) DESC  NULLS LAST, rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (NULL, (rt0.c2 IN (vt0.c1)))) DESC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (NULL, (rt0.c2 IN (vt0.c1)))) DESC  NULLS LAST, rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c0))) IS FALSE)) ORDER BY (CAST(rt0.c2 AS NUMERIC) IN (NULL, (rt0.c2 IN (vt0.c1)))) DESC  NULLS LAST, rt0.c2;
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST(NULL AS INTEGER) INNER JOIN t0 ON ((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM WHERE ((+ (0.36064012777268584))) ORDER BY x'', ((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.36064012777268584))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST(NULL AS INTEGER) INNER JOIN t0 ON ((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM ORDER BY x'', ((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST(NULL AS INTEGER) INNER JOIN t0 ON ((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM WHERE ((+ (0.36064012777268584))) ORDER BY x'', ((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0.36064012777268584))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST(NULL AS INTEGER) INNER JOIN t0 ON ((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM ORDER BY x'', ((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 LEFT OUTER JOIN vt0 ON CAST(NULL AS INTEGER) INNER JOIN t0 ON ((vt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM WHERE ((+ (0.36064012777268584))) ORDER BY x'', ((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.5304745296332649 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.5304745296332649 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.5304745296332649 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.5304745296332649 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN 0.5304745296332649 END);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((t0.c9) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c9) IS FALSE) IN ()) ASC);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((t0.c9) IS FALSE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c9) IS FALSE) IN ()) ASC);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((t0.c9) IS FALSE) IN ()) ASC;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((('-1748137644') NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND ((~ (vt1.c0))))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt1.c0)AND(x'')))AND(rt0.c2)))) AND ((((rt0.c1) ISNULL)))) ASC, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1748137644') NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt1.c0)AND(x'')))AND(rt0.c2)))) AND ((((rt0.c1) ISNULL)))) ASC, '' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((('-1748137644') NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND ((~ (vt1.c0))))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt1.c0)AND(x'')))AND(rt0.c2)))) AND ((((rt0.c1) ISNULL)))) ASC, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1748137644') NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt1.c0)AND(x'')))AND(rt0.c2)))) AND ((((rt0.c1) ISNULL)))) ASC, '' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE ((('-1748137644') NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c1))) AND ((~ (vt1.c0))))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt1.c0)AND(x'')))AND(rt0.c2)))) AND ((((rt0.c1) ISNULL)))) ASC, '' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (x'')), ABS(t0.c9), ((vt1.c0)GLOB(t0.c0))))>((vt1.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c9)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)), ((t0.c9)=(t0.c0)))))) ORDER BY ((((~ (vt1.c0))))==((t0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (x'')), ABS(t0.c9), ((vt1.c0)GLOB(t0.c0))))>((vt1.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c9)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)), ((t0.c9)=(t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((~ (vt1.c0))))==((t0.c0 COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (x'')), ABS(t0.c9), ((vt1.c0)GLOB(t0.c0))))>((vt1.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c9)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)), ((t0.c9)=(t0.c0)))))) ORDER BY ((((~ (vt1.c0))))==((t0.c0 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (x'')), ABS(t0.c9), ((vt1.c0)GLOB(t0.c0))))>((vt1.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c9)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)), ((t0.c9)=(t0.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((~ (vt1.c0))))==((t0.c0 COLLATE NOCASE))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((~ (x'')), ABS(t0.c9), ((vt1.c0)GLOB(t0.c0))))>((vt1.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c9)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)), ((t0.c9)=(t0.c0)))))) ORDER BY ((((~ (vt1.c0))))==((t0.c0 COLLATE NOCASE))) ASC;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)OR(((rt0.c0)>=(vt1.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(((rt0.c0)>=(vt1.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)OR(((rt0.c0)>=(vt1.c0)))))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(((rt0.c0)>=(vt1.c0)))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)OR(((rt0.c0)>=(vt1.c0)))))OR(rt0.c1)));
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c1) COLLATE BINARY) ORDER BY (((((rt0.c2 IN ()))AND(rt0.c2)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN ()))AND(rt0.c2)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c1) COLLATE BINARY) ORDER BY (((((rt0.c2 IN ()))AND(rt0.c2)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN ()))AND(rt0.c2)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c1) COLLATE BINARY) ORDER BY (((((rt0.c2 IN ()))AND(rt0.c2)))OR(((((((((rt0.c0)AND(rt0.c2)))AND(x'')))OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST((('')>>(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('')>>(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST((('')>>(vt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((('')>>(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (CAST((('')>>(vt0.c1)) AS REAL));
SELECT * FROM rt0, vt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (1709332494)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (1709332494))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (1709332494)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (1709332494))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (1709332494)));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c9)))OR(rt0.c0)))AND(t0.c9)))AND('G&')))OR((- (vt0.c1)))) LEFT OUTER JOIN t0 ON ((rt0.c1) IS TRUE) WHERE (((rt0.c1)*(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c9)))OR(rt0.c0)))AND(t0.c9)))AND('G&')))OR((- (vt0.c1)))) LEFT OUTER JOIN t0 ON ((rt0.c1) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c9)))OR(rt0.c0)))AND(t0.c9)))AND('G&')))OR((- (vt0.c1)))) LEFT OUTER JOIN t0 ON ((rt0.c1) IS TRUE) WHERE (((rt0.c1)*(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c9)))OR(rt0.c0)))AND(t0.c9)))AND('G&')))OR((- (vt0.c1)))) LEFT OUTER JOIN t0 ON ((rt0.c1) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((',7')&((- (x''))))) ORDER BY CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)) AS INTEGER), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((',7')&((- (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)) AS INTEGER), vt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((',7')&((- (x''))))) ORDER BY CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)) AS INTEGER), vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((',7')&((- (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)) AS INTEGER), vt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((',7')&((- (x''))))) ORDER BY CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c1)) AS INTEGER), vt0.c0 DESC;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((rt0.c2 COLLATE RTRIM))) CROSS JOIN vt0 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN LOWER(rt0.c0) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((t0.c9)OR(0.2163241950467023)))OR(t0.c0)))OR('')))AND(rt0.c1)) WHEN (((rt0.c1))>=((t0.c9))) THEN ((vt0.c0) NOT NULL) END RIGHT OUTER JOIN rt0 ON TRIM(vt0.c1, ((rt0.c0) NOT NULL)) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((NULL)OR(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)))))OR(0.7317123268482795)) ASC, CAST((t0.c9 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((rt0.c2 COLLATE RTRIM))) CROSS JOIN vt0 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN LOWER(rt0.c0) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((t0.c9)OR(0.2163241950467023)))OR(t0.c0)))OR('')))AND(rt0.c1)) WHEN (((rt0.c1))>=((t0.c9))) THEN ((vt0.c0) NOT NULL) END RIGHT OUTER JOIN rt0 ON TRIM(vt0.c1, ((rt0.c0) NOT NULL)) ORDER BY ((((NULL)OR(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)))))OR(0.7317123268482795)) ASC, CAST((t0.c9 IN ()) AS INTEGER)  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((rt0.c2 COLLATE RTRIM))) CROSS JOIN vt0 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN LOWER(rt0.c0) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((t0.c9)OR(0.2163241950467023)))OR(t0.c0)))OR('')))AND(rt0.c1)) WHEN (((rt0.c1))>=((t0.c9))) THEN ((vt0.c0) NOT NULL) END RIGHT OUTER JOIN rt0 ON TRIM(vt0.c1, ((rt0.c0) NOT NULL)) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) ORDER BY ((((NULL)OR(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)))))OR(0.7317123268482795)) ASC, CAST((t0.c9 IN ()) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((vt0.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((rt0.c2 COLLATE RTRIM))) CROSS JOIN vt0 ON CASE WHEN ((rt0.c2)<=(rt0.c2)) THEN LOWER(rt0.c0) WHEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((((((t0.c9)OR(0.2163241950467023)))OR(t0.c0)))OR('')))AND(rt0.c1)) WHEN (((rt0.c1))>=((t0.c9))) THEN ((vt0.c0) NOT NULL) END RIGHT OUTER JOIN rt0 ON TRIM(vt0.c1, ((rt0.c0) NOT NULL)) ORDER BY ((((NULL)OR(((((vt0.c0)OR(t0.c0)))AND(rt0.c0)))))OR(0.7317123268482795)) ASC, CAST((t0.c9 IN ()) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ())))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.03430568778662357))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.03430568778662357)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ())))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.03430568778662357))))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.03430568778662357)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ())))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.03430568778662357))))));
SELECT * FROM t0, rt0, vt0 WHERE (0.9134213080929375);
SELECT SUM(count) FROM (SELECT ALL ((0.9134213080929375) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (0.9134213080929375);
SELECT SUM(count) FROM (SELECT ALL ((0.9134213080929375) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (0.9134213080929375);
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (~ (0Xffffffffdaf20c7f)) INNER JOIN rt0 ON ((x'') IS FALSE) WHERE (((((0.2238526852346474)OR((- (rt0.c0)))))OR((((('')AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0.2238526852346474)OR((- (rt0.c0)))))OR((((('')AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (~ (0Xffffffffdaf20c7f)) INNER JOIN rt0 ON ((x'') IS FALSE));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (~ (0Xffffffffdaf20c7f)) INNER JOIN rt0 ON ((x'') IS FALSE) WHERE (((((0.2238526852346474)OR((- (rt0.c0)))))OR((((('')AND(rt0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0.2238526852346474)OR((- (rt0.c0)))))OR((((('')AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (~ (0Xffffffffdaf20c7f)) INNER JOIN rt0 ON ((x'') IS FALSE));
SELECT * FROM t0, vt0 CROSS JOIN vt1 ON (~ (0Xffffffffdaf20c7f)) INNER JOIN rt0 ON ((x'') IS FALSE) WHERE (((((0.2238526852346474)OR((- (rt0.c0)))))OR((((('')AND(rt0.c2)))AND(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(('-951540186' IN ())))) ORDER BY ((rt0.c1)IS(((rt0.c1)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)OR(('-951540186' IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((rt0.c1)IS(((rt0.c1)|(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(('-951540186' IN ())))) ORDER BY ((rt0.c1)IS(((rt0.c1)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)OR(('-951540186' IN ())))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((rt0.c1)IS(((rt0.c1)|(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)OR(('-951540186' IN ())))) ORDER BY ((rt0.c1)IS(((rt0.c1)|(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)>=(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)>=(rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>=(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)>=(rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((vt0.c0)AND(t0.c9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c9))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((vt0.c0)AND(t0.c9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c9))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((vt0.c0)AND(t0.c9))) ISNULL));
SELECT * FROM t0, rt0 NATURAL JOIN vt1 WHERE (((0xd5fa48e) NOT BETWEEN (((('-997837006'))<=((rt0.c2)))) AND (CASE t0.c0  WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY ((((t0.c9)>(rt0.c1)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((((rt0.c2 COLLATE RTRIM)AND(((vt1.c0) IS TRUE))))AND(((rt0.c0)&(vt1.c0)))) DESC  NULLS FIRST, (((t0.c9 COLLATE BINARY, IFNULL(t0.c0, rt0.c2), rt0.c0))<((CAST(t0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END, (t0.c0 IN (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0xd5fa48e) NOT BETWEEN (((('-997837006'))<=((rt0.c2)))) AND (CASE t0.c0  WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1 ORDER BY ((((t0.c9)>(rt0.c1)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((((rt0.c2 COLLATE RTRIM)AND(((vt1.c0) IS TRUE))))AND(((rt0.c0)&(vt1.c0)))) DESC  NULLS FIRST, (((t0.c9 COLLATE BINARY, IFNULL(t0.c0, rt0.c2), rt0.c0))<((CAST(t0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END, (t0.c0 IN (rt0.c2))))) DESC);
SELECT * FROM t0, rt0 NATURAL JOIN vt1 WHERE (((0xd5fa48e) NOT BETWEEN (((('-997837006'))<=((rt0.c2)))) AND (CASE t0.c0  WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY ((((t0.c9)>(rt0.c1)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((((rt0.c2 COLLATE RTRIM)AND(((vt1.c0) IS TRUE))))AND(((rt0.c0)&(vt1.c0)))) DESC  NULLS FIRST, (((t0.c9 COLLATE BINARY, IFNULL(t0.c0, rt0.c2), rt0.c0))<((CAST(t0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END, (t0.c0 IN (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((0xd5fa48e) NOT BETWEEN (((('-997837006'))<=((rt0.c2)))) AND (CASE t0.c0  WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt1 ORDER BY ((((t0.c9)>(rt0.c1)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((((rt0.c2 COLLATE RTRIM)AND(((vt1.c0) IS TRUE))))AND(((rt0.c0)&(vt1.c0)))) DESC  NULLS FIRST, (((t0.c9 COLLATE BINARY, IFNULL(t0.c0, rt0.c2), rt0.c0))<((CAST(t0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END, (t0.c0 IN (rt0.c2))))) DESC);
SELECT * FROM t0, rt0 NATURAL JOIN vt1 WHERE (((0xd5fa48e) NOT BETWEEN (((('-997837006'))<=((rt0.c2)))) AND (CASE t0.c0  WHEN rt0.c0 THEN vt1.c0 END))) ORDER BY ((((t0.c9)>(rt0.c1)))-(((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))), ((((rt0.c2 COLLATE RTRIM)AND(((vt1.c0) IS TRUE))))AND(((rt0.c0)&(vt1.c0)))) DESC  NULLS FIRST, (((t0.c9 COLLATE BINARY, IFNULL(t0.c0, rt0.c2), rt0.c0))<((CAST(t0.c0 AS BLOB), CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END, (t0.c0 IN (rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))*(((rt0.c1) BETWEEN (t0.c9) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON '1863483009' FULL OUTER JOIN vt0 ON (x'' IN ()) COLLATE RTRIM WHERE (((IFNULL(DISTINCT rt0.c0, 'U'))OR(((((((((rt0.c0)AND(t0.c9)))AND(0.538895114024353)))OR(vt0.c1)))AND(rt0.c0))))) ORDER BY (((((vt0.c1))==((x'')))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c0, 'U'))OR(((((((((rt0.c0)AND(t0.c9)))AND(0.538895114024353)))OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))*(((rt0.c1) BETWEEN (t0.c9) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON '1863483009' FULL OUTER JOIN vt0 ON (x'' IN ()) COLLATE RTRIM ORDER BY (((((vt0.c1))=((x'')))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))*(((rt0.c1) BETWEEN (t0.c9) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON '1863483009' FULL OUTER JOIN vt0 ON (x'' IN ()) COLLATE RTRIM WHERE (((IFNULL(DISTINCT rt0.c0, 'U'))OR(((((((((rt0.c0)AND(t0.c9)))AND(0.538895114024353)))OR(vt0.c1)))AND(rt0.c0))))) ORDER BY (((((vt0.c1))==((x'')))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt0.c0, 'U'))OR(((((((((rt0.c0)AND(t0.c9)))AND(0.538895114024353)))OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))*(((rt0.c1) BETWEEN (t0.c9) AND (rt0.c2)))) RIGHT OUTER JOIN rt0 ON '1863483009' FULL OUTER JOIN vt0 ON (x'' IN ()) COLLATE RTRIM ORDER BY (((((vt0.c1))=((x'')))) ISNULL) ASC);
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT ALL * FROM vt1, t0, vt0, rt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c9 AS TEXT)) NOT NULL) WHERE (((((rt0.c1) IS FALSE))*((((t0.c9, NULL, rt0.c0))!=((rt0.c1, rt0.c2, t0.c0)))))) ORDER BY (((']^[')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE ASC, t0.c9 ASC, (((rt0.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)>=(vt0.c1)), vt0.c0, (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c9)))) AND ((((t0.c9)-(rt0.c0)), ((0.8757536560585091)%(vt0.c1)), ((rt0.c2) NOT NULL), (NOT (rt0.c0)), (((rt0.c2))!=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))*((((t0.c9, NULL, rt0.c0))!=((rt0.c1, rt0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c9 AS TEXT)) NOT NULL) ORDER BY (((']^[')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE ASC, t0.c9 ASC, (((rt0.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)>=(vt0.c1)), vt0.c0, (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c9)))) AND ((((t0.c9)-(rt0.c0)), ((0.8757536560585091)%(vt0.c1)), ((rt0.c2) NOT NULL), (NOT (rt0.c0)), (((rt0.c2))<>((rt0.c2)))))));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c9 AS TEXT)) NOT NULL) WHERE (((((rt0.c1) IS FALSE))*((((t0.c9, NULL, rt0.c0))!=((rt0.c1, rt0.c2, t0.c0)))))) ORDER BY (((']^[')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE ASC, t0.c9 ASC, (((rt0.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)>=(vt0.c1)), vt0.c0, (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c9)))) AND ((((t0.c9)-(rt0.c0)), ((0.8757536560585091)%(vt0.c1)), ((rt0.c2) NOT NULL), (NOT (rt0.c0)), (((rt0.c2))!=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))*((((t0.c9, NULL, rt0.c0))!=((rt0.c1, rt0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c9 AS TEXT)) NOT NULL) ORDER BY (((']^[')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE ASC, t0.c9 ASC, (((rt0.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)>=(vt0.c1)), vt0.c0, (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c9)))) AND ((((t0.c9)-(rt0.c0)), ((0.8757536560585091)%(vt0.c1)), ((rt0.c2) NOT NULL), (NOT (rt0.c0)), (((rt0.c2))<>((rt0.c2)))))));
SELECT ALL * FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c9 AS TEXT)) NOT NULL) WHERE (((((rt0.c1) IS FALSE))*((((t0.c9, NULL, rt0.c0))!=((rt0.c1, rt0.c2, t0.c0)))))) ORDER BY (((']^[')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) COLLATE NOCASE ASC, t0.c9 ASC, (((rt0.c0, vt0.c1, vt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((vt0.c0, ((vt0.c0)>=(vt0.c1)), vt0.c0, (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c9)))) AND ((((t0.c9)-(rt0.c0)), ((0.8757536560585091)%(vt0.c1)), ((rt0.c2) NOT NULL), (NOT (rt0.c0)), (((rt0.c2))!=((rt0.c2))))));
SELECT * FROM vt1 WHERE ((- (json_array('4JAHHQ', vt1.c0, NULL, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.c0 IN ()))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(0.38501912223165347 AS TEXT)) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (json_array('4JAHHQ', vt1.c0, NULL, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.c0 IN ()))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(0.38501912223165347 AS TEXT)) AND ((vt1.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((- (json_array('4JAHHQ', vt1.c0, NULL, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.c0 IN ()))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(0.38501912223165347 AS TEXT)) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (json_array('4JAHHQ', vt1.c0, NULL, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.c0 IN ()))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(0.38501912223165347 AS TEXT)) AND ((vt1.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt1 WHERE ((- (json_array('4JAHHQ', vt1.c0, NULL, vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS BLOB))<=((vt1.c0 IN ()))), ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) BETWEEN (CAST(0.38501912223165347 AS TEXT)) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c9)))OR(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c9)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c9)))OR(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)OR(t0.c9)))OR(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)OR(t0.c9)))OR(t0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 IN ()) IN (((x'')%(vt0.c0)), ((vt1.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((x'')%(vt0.c0)), ((vt1.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 IN ()) IN (((x'')%(vt0.c0)), ((vt1.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN (((x'')%(vt0.c0)), ((vt1.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2 IN ()) IN (((x'')%(vt0.c0)), ((vt1.c0)GLOB(vt0.c1)))));
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((MAX(rt0.c1, rt0.c1))>>(COALESCE(vt1.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c1))>>(COALESCE(vt1.c0, rt0.c0)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((MAX(rt0.c1, rt0.c1))>>(COALESCE(vt1.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c1, rt0.c1))>>(COALESCE(vt1.c0, rt0.c0)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT COUNT(*) FROM vt1, t0, rt0 WHERE (((MAX(rt0.c1, rt0.c1))>>(COALESCE(vt1.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(0.40694309999501344) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.40694309999501344) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(0.40694309999501344) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.40694309999501344) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY(0.40694309999501344) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))!=((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((']jT')AND(vt0.c1)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY TRIM(((vt0.c0)>(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((']jT')AND(vt0.c1)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(((vt0.c0)>(rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((']jT')AND(vt0.c1)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY TRIM(((vt0.c0)>(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((']jT')AND(vt0.c1)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(((vt0.c0)>(rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((((']jT')AND(vt0.c1)))AND(vt0.c0))) AND ((vt0.c0 IN (vt0.c0, vt0.c1))))) ORDER BY TRIM(((vt0.c0)>(rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (+ (CASE '+'  WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((vt0.c0)IS NOT('[{HA)VX')) WHERE ((((rt0.c1 IN ()))/(CAST(vt0.c1 AS TEXT)))) ORDER BY json_array((~ (rt0.c0)), HEX(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))/(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (+ (CASE '+'  WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((vt0.c0)IS NOT('[{HA)VX')) ORDER BY json_array((~ (rt0.c0)), HEX(rt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (+ (CASE '+'  WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((vt0.c0)IS NOT('[{HA)VX')) WHERE ((((rt0.c1 IN ()))/(CAST(vt0.c1 AS TEXT)))) ORDER BY json_array((~ (rt0.c0)), HEX(rt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))/(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (+ (CASE '+'  WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((vt0.c0)IS NOT('[{HA)VX')) ORDER BY json_array((~ (rt0.c0)), HEX(rt0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (+ (CASE '+'  WHEN vt0.c0 THEN rt0.c1 WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) INNER JOIN vt0 ON ((vt0.c0)IS NOT('[{HA)VX')) WHERE ((((rt0.c1 IN ()))/(CAST(vt0.c1 AS TEXT)))) ORDER BY json_array((~ (rt0.c0)), HEX(rt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE (- (rt0.c2))  WHEN ((rt0.c1)%(vt1.c0)) THEN '-193474803' ELSE CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN ((rt0.c1)%(vt1.c0)) THEN '-193474803' ELSE CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE (- (rt0.c2))  WHEN ((rt0.c1)%(vt1.c0)) THEN '-193474803' ELSE CAST(rt0.c2 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c2))  WHEN ((rt0.c1)%(vt1.c0)) THEN '-193474803' ELSE CAST(rt0.c2 AS REAL) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (CASE (- (rt0.c2))  WHEN ((rt0.c1)%(vt1.c0)) THEN '-193474803' ELSE CAST(rt0.c2 AS REAL) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (vt1.c0))) NOT NULL) CROSS JOIN t0 ON t0.c9 WHERE (LIKE((- ('')), CASE WHEN t0.c0 THEN rt0.c0 END, '阒'));
SELECT SUM(count) FROM (SELECT ((LIKE((- ('')), CASE WHEN t0.c0 THEN rt0.c0 END, '阒')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (vt1.c0))) NOT NULL) CROSS JOIN t0 ON t0.c9);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (vt1.c0))) NOT NULL) CROSS JOIN t0 ON t0.c9 WHERE (LIKE((- ('')), CASE WHEN t0.c0 THEN rt0.c0 END, '阒'));
SELECT SUM(count) FROM (SELECT ((LIKE((- ('')), CASE WHEN t0.c0 THEN rt0.c0 END, '阒')) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (vt1.c0))) NOT NULL) CROSS JOIN t0 ON t0.c9);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (vt1.c0))) NOT NULL) CROSS JOIN t0 ON t0.c9 WHERE (LIKE((- ('')), CASE WHEN t0.c0 THEN rt0.c0 END, '阒'));
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((~ (vt1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ('>_ej**0d');
SELECT SUM(count) FROM (SELECT ALL (('>_ej**0d') IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ('>_ej**0d');
SELECT SUM(count) FROM (SELECT ALL (('>_ej**0d') IS TRUE)  as count FROM vt1, vt0, rt0 NOT INDEXED, t0);
SELECT ALL * FROM vt1, vt0, rt0, t0 WHERE ('>_ej**0d');
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((NOT (((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, t0, rt0 LEFT OUTER JOIN vt1 ON ((((NULLIF(DISTINCT vt0.c0, t0.c0))OR(t0.c0)))AND('-1608195388')) WHERE ((((((((((vt0.c0 IN ()))AND(CAST(rt0.c2 AS REAL))))OR(2124434831)))OR(CAST(t0.c9 AS REAL))))OR(((vt1.c0) NOT BETWEEN (0.11854014628952081) AND (t0.c0))))) ORDER BY (UNICODE(t0.c9) IN ()), (((CAST(vt0.c0 AS INTEGER)))==((((((NULL)OR(vt0.c1)))AND(vt1.c0)))))  NULLS FIRST, ((vt0.c0)>=(CASE x''  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(CAST(rt0.c2 AS REAL))))OR(2124434831)))OR(CAST(t0.c9 AS REAL))))OR(((vt1.c0) NOT BETWEEN (0.11854014628952081) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 LEFT OUTER JOIN vt1 ON ((((NULLIF(DISTINCT vt0.c0, t0.c0))OR(t0.c0)))AND('-1608195388')) ORDER BY (UNICODE(t0.c9) IN ()), (((CAST(vt0.c0 AS INTEGER)))=((((((NULL)OR(vt0.c1)))AND(vt1.c0)))))  NULLS FIRST, ((vt0.c0)>=(CASE x''  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0, t0, rt0 LEFT OUTER JOIN vt1 ON ((((NULLIF(DISTINCT vt0.c0, t0.c0))OR(t0.c0)))AND('-1608195388')) WHERE ((((((((((vt0.c0 IN ()))AND(CAST(rt0.c2 AS REAL))))OR(2124434831)))OR(CAST(t0.c9 AS REAL))))OR(((vt1.c0) NOT BETWEEN (0.11854014628952081) AND (t0.c0))))) ORDER BY (UNICODE(t0.c9) IN ()), (((CAST(vt0.c0 AS INTEGER)))==((((((NULL)OR(vt0.c1)))AND(vt1.c0)))))  NULLS FIRST, ((vt0.c0)>=(CASE x''  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND(CAST(rt0.c2 AS REAL))))OR(2124434831)))OR(CAST(t0.c9 AS REAL))))OR(((vt1.c0) NOT BETWEEN (0.11854014628952081) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0 LEFT OUTER JOIN vt1 ON ((((NULLIF(DISTINCT vt0.c0, t0.c0))OR(t0.c0)))AND('-1608195388')) ORDER BY (UNICODE(t0.c9) IN ()), (((CAST(vt0.c0 AS INTEGER)))=((((((NULL)OR(vt0.c1)))AND(vt1.c0)))))  NULLS FIRST, ((vt0.c0)>=(CASE x''  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0, t0, rt0 LEFT OUTER JOIN vt1 ON ((((NULLIF(DISTINCT vt0.c0, t0.c0))OR(t0.c0)))AND('-1608195388')) WHERE ((((((((((vt0.c0 IN ()))AND(CAST(rt0.c2 AS REAL))))OR(2124434831)))OR(CAST(t0.c9 AS REAL))))OR(((vt1.c0) NOT BETWEEN (0.11854014628952081) AND (t0.c0))))) ORDER BY (UNICODE(t0.c9) IN ()), (((CAST(vt0.c0 AS INTEGER)))==((((((NULL)OR(vt0.c1)))AND(vt1.c0)))))  NULLS FIRST, ((vt0.c0)>=(CASE x''  WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2106183386)))) NOT NULL), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2106183386)))) NOT NULL), vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2106183386)))) NOT NULL), vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2106183386)))) NOT NULL), vt0.c0);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2106183386)))) NOT NULL), vt0.c0;
SELECT * FROM vt1, rt0, vt0 WHERE (LIKELY(((((rt0.c1)OR(rt0.c1)))OR(vt0.c1)))) ORDER BY (('1863483009') ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((rt0.c1)OR(rt0.c1)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('1863483009') ISNULL)  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (LIKELY(((((rt0.c1)OR(rt0.c1)))OR(vt0.c1)))) ORDER BY (('1863483009') ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((rt0.c1)OR(rt0.c1)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (('1863483009') ISNULL)  NULLS FIRST);
SELECT * FROM vt1, rt0, vt0 WHERE (LIKELY(((((rt0.c1)OR(rt0.c1)))OR(vt0.c1)))) ORDER BY (('1863483009') ISNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))>>(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY NULL ASC  NULLS LAST, rt0.c1  NULLS FIRST, (((((vt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c1))<=((rt0.c2, rt0.c1, vt0.c0, vt0.c0, vt0.c1)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>>(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST, rt0.c1  NULLS FIRST, (((((vt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c1))<=((rt0.c2, rt0.c1, vt0.c0, vt0.c0, vt0.c1)))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))>>(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY NULL ASC  NULLS LAST, rt0.c1  NULLS FIRST, (((((vt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c1))<=((rt0.c2, rt0.c1, vt0.c0, vt0.c0, vt0.c1)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>>(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST, rt0.c1  NULLS FIRST, (((((vt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c1))<=((rt0.c2, rt0.c1, vt0.c0, vt0.c0, vt0.c1)))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2 IN ()))>>(((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ORDER BY NULL ASC  NULLS LAST, rt0.c1  NULLS FIRST, (((((vt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c1))<=((rt0.c2, rt0.c1, vt0.c0, vt0.c0, vt0.c1)))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0) NOTNULL), rt0.c2, CAST(NULL AS BLOB)))<((((vt0.c1)>>(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((((rt0.c2)OR(vt0.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOTNULL), rt0.c2, CAST(NULL AS BLOB)))<((((vt0.c1)>>(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0) NOTNULL), rt0.c2, CAST(NULL AS BLOB)))<((((vt0.c1)>>(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((((rt0.c2)OR(vt0.c1)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) NOTNULL), rt0.c2, CAST(NULL AS BLOB)))<((((vt0.c1)>>(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((((rt0.c2)OR(vt0.c1)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0) NOTNULL), rt0.c2, CAST(NULL AS BLOB)))<((((vt0.c1)>>(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((((rt0.c2)OR(vt0.c1)))OR(rt0.c2))))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9) NOT NULL))IS NOT(((t0.c9) NOT NULL)))) ORDER BY t0.c9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c9) NOT NULL))IS NOT(((t0.c9) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c9 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9) NOT NULL))IS NOT(((t0.c9) NOT NULL)))) ORDER BY t0.c9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c9) NOT NULL))IS NOT(((t0.c9) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c9 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9) NOT NULL))IS NOT(((t0.c9) NOT NULL)))) ORDER BY t0.c9 ASC  NULLS LAST;
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON CAST(((NULL) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (2017324558) AND (NULL)))>((rt0.c1 IN ()))) WHERE (x'8cc10de4') ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (t0.c9));
SELECT SUM(count) FROM (SELECT ALL ((x'8cc10de4') IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CAST(((NULL) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (2017324558) AND (NULL)))>((rt0.c1 IN ()))) ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (t0.c9)));
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON CAST(((NULL) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (2017324558) AND (NULL)))>((rt0.c1 IN ()))) WHERE (x'8cc10de4') ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (t0.c9));
SELECT SUM(count) FROM (SELECT ALL ((x'8cc10de4') IS TRUE)  as count FROM t0, vt1 CROSS JOIN vt0 ON CAST(((NULL) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (2017324558) AND (NULL)))>((rt0.c1 IN ()))) ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (t0.c9)));
SELECT * FROM t0, vt1 CROSS JOIN vt0 ON CAST(((NULL) NOTNULL) AS REAL) FULL OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (2017324558) AND (NULL)))>((rt0.c1 IN ()))) WHERE (x'8cc10de4') ORDER BY (((NOT (vt1.c0))) NOT BETWEEN (((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (t0.c9));
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN (vt0.c0, vt0.c0)), ((rt0.c2)IS(vt0.c0))))!=((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c2) NOT NULL), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), (vt0.c1 IN (vt0.c0, vt0.c0)), ((rt0.c2)IS(vt0.c0))))<>((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c2) NOT NULL), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN (vt0.c0, vt0.c0)), ((rt0.c2)IS(vt0.c0))))!=((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c2) NOT NULL), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), (vt0.c1 IN (vt0.c0, vt0.c0)), ((rt0.c2)IS(vt0.c0))))<>((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c2) NOT NULL), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt0.c0 IN ()), (vt0.c1 IN (vt0.c0, vt0.c0)), ((rt0.c2)IS(vt0.c0))))!=((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt1.c0 END, ((rt0.c2) NOT NULL), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN TRIM('F*ads\n	N', rt0.c2) THEN json_insert(rt0.c1, rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM('F*ads\n	N', rt0.c2) THEN json_insert(rt0.c1, rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN TRIM('F*ads\n	N', rt0.c2) THEN json_insert(rt0.c1, rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM('F*ads\n	N', rt0.c2) THEN json_insert(rt0.c1, rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN TRIM('F*ads\n	N', rt0.c2) THEN json_insert(rt0.c1, rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS TEXT) THEN (+ (rt0.c0)) WHEN (rt0.c2 IN ()) THEN ((rt0.c2) NOT NULL) END) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))<(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((CASE NULL  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(t0.c9))) ORDER BY ((((rt0.c0)-(rt0.c2))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, '-1950333228')) AND (((t0.c9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(t0.c9))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((rt0.c0)-(rt0.c2))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, '-1950333228')) AND (((t0.c9) IS TRUE))));
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((CASE NULL  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(t0.c9))) ORDER BY ((((rt0.c0)-(rt0.c2))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, '-1950333228')) AND (((t0.c9) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(t0.c9))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((((rt0.c0)-(rt0.c2))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, '-1950333228')) AND (((t0.c9) IS TRUE))));
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((CASE NULL  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END)OR(t0.c9))) ORDER BY ((((rt0.c0)-(rt0.c2))) NOT BETWEEN (TRIM(DISTINCT rt0.c0, '-1950333228')) AND (((t0.c9) IS TRUE)));
SELECT * FROM vt0, vt1, rt0, t0 WHERE ((((((t0.c0, vt1.c0, NULL))>=((rt0.c0, rt0.c1, rt0.c2)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN NULL WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) WHEN (t0.c9 IN ()) THEN (NOT (rt0.c2)) ELSE ((t0.c9) BETWEEN (0.1857035334236522) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt1.c0, NULL))>=((rt0.c0, rt0.c1, rt0.c2)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN NULL WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) WHEN (t0.c9 IN ()) THEN (NOT (rt0.c2)) ELSE ((t0.c9) BETWEEN (0.1857035334236522) AND (rt0.c0)) END ASC);
SELECT * FROM vt0, vt1, rt0, t0 WHERE ((((((t0.c0, vt1.c0, NULL))>=((rt0.c0, rt0.c1, rt0.c2)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN NULL WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) WHEN (t0.c9 IN ()) THEN (NOT (rt0.c2)) ELSE ((t0.c9) BETWEEN (0.1857035334236522) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0, vt1.c0, NULL))>=((rt0.c0, rt0.c1, rt0.c2)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN NULL WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) WHEN (t0.c9 IN ()) THEN (NOT (rt0.c2)) ELSE ((t0.c9) BETWEEN (0.1857035334236522) AND (rt0.c0)) END ASC);
SELECT * FROM vt0, vt1, rt0, t0 WHERE ((((((t0.c0, vt1.c0, NULL))>=((rt0.c0, rt0.c1, rt0.c2)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c2 IN ())))) ORDER BY CASE WHEN ((rt0.c1) IS FALSE) THEN NULL WHEN vt0.c0 THEN ((rt0.c2) NOT BETWEEN (vt0.c1) AND (x'')) WHEN (t0.c9 IN ()) THEN (NOT (rt0.c2)) ELSE ((t0.c9) BETWEEN (0.1857035334236522) AND (rt0.c0)) END ASC;
SELECT * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.1950286243094299)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.1950286243094299))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.1950286243094299)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.1950286243094299))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(0.1950286243094299)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt0.c0)<(rt0.c2))) IS TRUE) CROSS JOIN vt0 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)) AS NUMERIC) WHERE (vt0.c1) ORDER BY ((((vt0.c0) IS FALSE))>((+ (vt0.c0))))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((vt0.c0)<(rt0.c2))) IS TRUE) CROSS JOIN vt0 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)) AS NUMERIC) ORDER BY ((((vt0.c0) IS FALSE))>((+ (vt0.c0))))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt0.c0)<(rt0.c2))) IS TRUE) CROSS JOIN vt0 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)) AS NUMERIC) WHERE (vt0.c1) ORDER BY ((((vt0.c0) IS FALSE))>((+ (vt0.c0))))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((vt0.c0)<(rt0.c2))) IS TRUE) CROSS JOIN vt0 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)) AS NUMERIC) ORDER BY ((((vt0.c0) IS FALSE))>((+ (vt0.c0))))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((vt0.c0)<(rt0.c2))) IS TRUE) CROSS JOIN vt0 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)) AS NUMERIC) WHERE (vt0.c1) ORDER BY ((((vt0.c0) IS FALSE))>((+ (vt0.c0))))  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) NOTNULL);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (- ((((vt0.c0, t0.c9, vt0.c1)) NOT BETWEEN ((t0.c9, vt0.c1, t0.c9)) AND ((t0.c9, t0.c9, vt0.c1))))) WHERE ((((vt0.c1)) NOT BETWEEN (((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((CAST(t0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((CAST(t0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (- ((((vt0.c0, t0.c9, vt0.c1)) NOT BETWEEN ((t0.c9, vt0.c1, t0.c9)) AND ((t0.c9, t0.c9, vt0.c1))))));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (- ((((vt0.c0, t0.c9, vt0.c1)) NOT BETWEEN ((t0.c9, vt0.c1, t0.c9)) AND ((t0.c9, t0.c9, vt0.c1))))) WHERE ((((vt0.c1)) NOT BETWEEN (((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((CAST(t0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN (((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((CAST(t0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (- ((((vt0.c0, t0.c9, vt0.c1)) NOT BETWEEN ((t0.c9, vt0.c1, t0.c9)) AND ((t0.c9, t0.c9, vt0.c1))))));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (- ((((vt0.c0, t0.c9, vt0.c1)) NOT BETWEEN ((t0.c9, vt0.c1, t0.c9)) AND ((t0.c9, t0.c9, vt0.c1))))) WHERE ((((vt0.c1)) NOT BETWEEN (((((x'', vt0.c0, vt0.c1)) BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt0.c1, vt0.c1))))) AND ((CAST(t0.c0 AS INTEGER)))));
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON ((x'4353')*((NOT (vt1.c0)))) WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY, CASE vt1.c0  WHEN ((t0.c0)>>(rt0.c0)) THEN x'' WHEN ((vt1.c0) IS FALSE) THEN 0.7202757631666692 WHEN ((vt1.c0)!=(t0.c0)) THEN rt0.c1 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) THEN ((((((((t0.c0)OR('')))AND(rt0.c0)))AND(vt1.c0)))OR(t0.c0)) WHEN (((''))>((rt0.c2))) THEN (NULL IN ()) END ASC  NULLS FIRST, ((TYPEOF(vt1.c0))/(((vt1.c0) BETWEEN (rt0.c0) AND (t0.c9))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt1 ON ((x'4353')*((NOT (vt1.c0)))) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY, CASE vt1.c0  WHEN ((t0.c0)>>(rt0.c0)) THEN x'' WHEN ((vt1.c0) IS FALSE) THEN 0.7202757631666692 WHEN ((vt1.c0)!=(t0.c0)) THEN rt0.c1 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) THEN ((((((((t0.c0)OR('')))AND(rt0.c0)))AND(vt1.c0)))OR(t0.c0)) WHEN (((''))>((rt0.c2))) THEN (NULL IN ()) END ASC  NULLS FIRST, ((TYPEOF(vt1.c0))/(((vt1.c0) BETWEEN (rt0.c0) AND (t0.c9))))  NULLS LAST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON ((x'4353')*((NOT (vt1.c0)))) WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY, CASE vt1.c0  WHEN ((t0.c0)>>(rt0.c0)) THEN x'' WHEN ((vt1.c0) IS FALSE) THEN 0.7202757631666692 WHEN ((vt1.c0)!=(t0.c0)) THEN rt0.c1 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) THEN ((((((((t0.c0)OR('')))AND(rt0.c0)))AND(vt1.c0)))OR(t0.c0)) WHEN (((''))>((rt0.c2))) THEN (NULL IN ()) END ASC  NULLS FIRST, ((TYPEOF(vt1.c0))/(((vt1.c0) BETWEEN (rt0.c0) AND (t0.c9))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt1 ON ((x'4353')*((NOT (vt1.c0)))) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY, CASE vt1.c0  WHEN ((t0.c0)>>(rt0.c0)) THEN x'' WHEN ((vt1.c0) IS FALSE) THEN 0.7202757631666692 WHEN ((vt1.c0)!=(t0.c0)) THEN rt0.c1 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) THEN ((((((((t0.c0)OR('')))AND(rt0.c0)))AND(vt1.c0)))OR(t0.c0)) WHEN (((''))>((rt0.c2))) THEN (NULL IN ()) END ASC  NULLS FIRST, ((TYPEOF(vt1.c0))/(((vt1.c0) BETWEEN (rt0.c0) AND (t0.c9))))  NULLS LAST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON ((x'4353')*((NOT (vt1.c0)))) WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY ((vt1.c0) IS TRUE) COLLATE BINARY, CASE vt1.c0  WHEN ((t0.c0)>>(rt0.c0)) THEN x'' WHEN ((vt1.c0) IS FALSE) THEN 0.7202757631666692 WHEN ((vt1.c0)!=(t0.c0)) THEN rt0.c1 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) THEN ((((((((t0.c0)OR('')))AND(rt0.c0)))AND(vt1.c0)))OR(t0.c0)) WHEN (((''))>((rt0.c2))) THEN (NULL IN ()) END ASC  NULLS FIRST, ((TYPEOF(vt1.c0))/(((vt1.c0) BETWEEN (rt0.c0) AND (t0.c9))))  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (((((~ (vt0.c0))))>((((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))>((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((~ (vt0.c0))))>((((vt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((~ (vt0.c0))))>((((vt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((~ (vt0.c0))))>((((vt0.c0) NOTNULL)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0, t0.c9, t0.c0))>((t0.c0, -276898833, t0.c9))) IN (-1.836854771E9)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0, t0.c9, t0.c0))>((t0.c0, -276898833, t0.c9))) IN (-1.836854771E9))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0, t0.c9, t0.c0))>((t0.c0, -276898833, t0.c9))) IN (-1.836854771E9)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0, t0.c9, t0.c0))>((t0.c0, -276898833, t0.c9))) IN (-1.836854771E9))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0, t0.c9, t0.c0))>((t0.c0, -276898833, t0.c9))) IN (-1.836854771E9)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c9)) WHEN t0.c0 THEN CAST(rt0.c2 AS REAL) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END INNER JOIN vt0 ON (NOT (((((t0.c9)AND(rt0.c0)))OR(rt0.c0)))) WHERE (CAST(((t0.c9)+(rt0.c2)) AS BLOB)) ORDER BY (((~ (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c9)+(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c9)) WHEN t0.c0 THEN CAST(rt0.c2 AS REAL) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END INNER JOIN vt0 ON (NOT (((((t0.c9)AND(rt0.c0)))OR(rt0.c0)))) ORDER BY (((~ (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c9)) WHEN t0.c0 THEN CAST(rt0.c2 AS REAL) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END INNER JOIN vt0 ON (NOT (((((t0.c9)AND(rt0.c0)))OR(rt0.c0)))) WHERE (CAST(((t0.c9)+(rt0.c2)) AS BLOB)) ORDER BY (((~ (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c9)+(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c9)) WHEN t0.c0 THEN CAST(rt0.c2 AS REAL) WHEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END INNER JOIN vt0 ON (NOT (((((t0.c9)AND(rt0.c0)))OR(rt0.c0)))) ORDER BY (((~ (vt0.c0))) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((vt1.c0)+(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((vt1.c0)<<('w%￿.*S4')))))OR(((t0.c9) IS FALSE))))AND(((t0.c9)*(x''))))) ORDER BY CASE vt1.c0  WHEN CAST(604119256 AS BLOB) THEN (((t0.c9))=((t0.c0))) WHEN TYPEOF(DISTINCT t0.c9) THEN (((t0.c0)) NOT BETWEEN ((t0.c9)) AND ((x''))) WHEN ABS(vt1.c0) THEN ((t0.c9)|(t0.c9)) ELSE t0.c9 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)+(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((vt1.c0)<<('w%￿.*S4')))))OR(((t0.c9) IS FALSE))))AND(((t0.c9)*(x''))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE vt1.c0  WHEN CAST(604119256 AS BLOB) THEN (((t0.c9))==((t0.c0))) WHEN TYPEOF(DISTINCT t0.c9) THEN (((t0.c0)) NOT BETWEEN ((t0.c9)) AND ((x''))) WHEN ABS(vt1.c0) THEN ((t0.c9)|(t0.c9)) ELSE t0.c9 END DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((vt1.c0)+(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((vt1.c0)<<('w%￿.*S4')))))OR(((t0.c9) IS FALSE))))AND(((t0.c9)*(x''))))) ORDER BY CASE vt1.c0  WHEN CAST(604119256 AS BLOB) THEN (((t0.c9))=((t0.c0))) WHEN TYPEOF(DISTINCT t0.c9) THEN (((t0.c0)) NOT BETWEEN ((t0.c9)) AND ((x''))) WHEN ABS(vt1.c0) THEN ((t0.c9)|(t0.c9)) ELSE t0.c9 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)+(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((vt1.c0)<<('w%￿.*S4')))))OR(((t0.c9) IS FALSE))))AND(((t0.c9)*(x''))))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE vt1.c0  WHEN CAST(604119256 AS BLOB) THEN (((t0.c9))==((t0.c0))) WHEN TYPEOF(DISTINCT t0.c9) THEN (((t0.c0)) NOT BETWEEN ((t0.c9)) AND ((x''))) WHEN ABS(vt1.c0) THEN ((t0.c9)|(t0.c9)) ELSE t0.c9 END DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((vt1.c0)+(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE t0.c0 END)))AND(((vt1.c0)<<('w%￿.*S4')))))OR(((t0.c9) IS FALSE))))AND(((t0.c9)*(x''))))) ORDER BY CASE vt1.c0  WHEN CAST(604119256 AS BLOB) THEN (((t0.c9))=((t0.c0))) WHEN TYPEOF(DISTINCT t0.c9) THEN (((t0.c0)) NOT BETWEEN ((t0.c9)) AND ((x''))) WHEN ABS(vt1.c0) THEN ((t0.c9)|(t0.c9)) ELSE t0.c9 END DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 END WHERE (vt0.c1) ORDER BY 0.7109921863589705 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 END ORDER BY 0.7109921863589705 DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 END WHERE (vt0.c1) ORDER BY 0.7109921863589705 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 END ORDER BY 0.7109921863589705 DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE RTRIM THEN vt0.c0 END WHERE (vt0.c1) ORDER BY 0.7109921863589705 DESC;
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END) NOT BETWEEN (((t0.c9)<=(rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) ORDER BY ((((((((vt0.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt0.c0)<(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))OR(((((t0.c9)AND(t0.c0)))OR(t0.c9)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END) NOT BETWEEN (((t0.c9)<=(rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((((((vt0.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt0.c0)<(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))OR(((((t0.c9)AND(t0.c0)))OR(t0.c9)))) ASC);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END) NOT BETWEEN (((t0.c9)<=(rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) ORDER BY ((((((((vt0.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt0.c0)<(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))OR(((((t0.c9)AND(t0.c0)))OR(t0.c9)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END) NOT BETWEEN (((t0.c9)<=(rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((((((vt0.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt0.c0)<(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))OR(((((t0.c9)AND(t0.c0)))OR(t0.c9)))) ASC);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 END) NOT BETWEEN (((t0.c9)<=(rt0.c2))) AND (UPPER(DISTINCT rt0.c1)))) ORDER BY ((((((((vt0.c0)AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt0.c0)<(rt0.c0)))))AND(((rt0.c2)LIKE(rt0.c2)))))OR(((((t0.c9)AND(t0.c0)))OR(t0.c9)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('1611773515'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('1611773515'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('1611773515'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('1611773515'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('1611773515'))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((NOT (t0.c9))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((NOT (t0.c9))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((NOT (t0.c9))) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((NOT (t0.c9))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL * FROM rt0, t0, vt1 WHERE (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((NOT (t0.c9))) AND (CAST(rt0.c0 AS REAL))));
SELECT * FROM vt0, rt0 WHERE (0xffffffff8e8028e1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8e8028e1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, rt0 WHERE (0xffffffff8e8028e1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8e8028e1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0, rt0 WHERE (0xffffffff8e8028e1) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON json_remove(vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.c0))) WHERE (((IFNULL(vt0.c1, vt1.c0)) IS TRUE)) ORDER BY ((((vt0.c0)>=(vt0.c1))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND ((((('-1112876316')AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c1, vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON json_remove(vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.c0))) ORDER BY ((((vt0.c0)>=(vt0.c1))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND ((((('-1112876316')AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON json_remove(vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.c0))) WHERE (((IFNULL(vt0.c1, vt1.c0)) IS TRUE)) ORDER BY ((((vt0.c0)>=(vt0.c1))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND ((((('-1112876316')AND(vt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c1, vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON json_remove(vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.c0))) ORDER BY ((((vt0.c0)>=(vt0.c1))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND ((((('-1112876316')AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON json_remove(vt0.c0 COLLATE BINARY, (vt0.c0 IN (vt1.c0))) WHERE (((IFNULL(vt0.c1, vt1.c0)) IS TRUE)) ORDER BY ((((vt0.c0)>=(vt0.c1))) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))) AND ((((('-1112876316')AND(vt0.c0)))AND(vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY ((rt0.c1)>=(t0.c9)) COLLATE NOCASE ASC, (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS TEXT))), (t0.c9 IN (t0.c9)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c1)>=(t0.c9)) COLLATE NOCASE ASC, (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS TEXT))), (t0.c9 IN (t0.c9)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY ((rt0.c1)>=(t0.c9)) COLLATE NOCASE ASC, (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS TEXT))), (t0.c9 IN (t0.c9)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((TRIM(DISTINCT rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((rt0.c1)>=(t0.c9)) COLLATE NOCASE ASC, (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS TEXT))), (t0.c9 IN (t0.c9)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((TRIM(DISTINCT rt0.c2) IN ())) ORDER BY ((rt0.c1)>=(t0.c9)) COLLATE NOCASE ASC, (((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))AND((vt0.c1 IN ()))))OR(CAST(vt0.c1 AS TEXT))), (t0.c9 IN (t0.c9)) COLLATE BINARY DESC;
SELECT * FROM t0, rt0, vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c9 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)>(((t0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c9 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)>(((t0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c9 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)>(((t0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c9 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)>(((t0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN t0.c9 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)>(((t0.c0)IS(vt0.c0)))));
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c9)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c9 THEN t0.c0 WHEN 0.13059149654368385 THEN t0.c9 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(t0.c9)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c9 THEN t0.c0 WHEN 0.13059149654368385 THEN t0.c9 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c9)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c9 THEN t0.c0 WHEN 0.13059149654368385 THEN t0.c9 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(t0.c9)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c9 THEN t0.c0 WHEN 0.13059149654368385 THEN t0.c9 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)=(t0.c9)))|(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c9 THEN t0.c0 WHEN 0.13059149654368385 THEN t0.c9 END)));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)GLOB(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND ((NOT (vt1.c0))))) ORDER BY (NOT (CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)GLOB(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND ((NOT (vt1.c0))))) ORDER BY (NOT (CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2)GLOB(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) AND ((NOT (vt1.c0))))) ORDER BY (NOT (CAST(rt0.c0 AS REAL)));
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((vt1.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, t0.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((t0.c0, t0.c9, 'vo', t0.c9, rt0.c1, t0.c0, t0.c9)))))) ORDER BY CAST((t0.c9 IN ()) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((vt1.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, t0.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((t0.c0, t0.c9, 'vo', t0.c9, rt0.c1, t0.c0, t0.c9)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST((t0.c9 IN ()) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((vt1.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, t0.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((t0.c0, t0.c9, 'vo', t0.c9, rt0.c1, t0.c0, t0.c9)))))) ORDER BY CAST((t0.c9 IN ()) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((vt1.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, t0.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((t0.c0, t0.c9, 'vo', t0.c9, rt0.c1, t0.c0, t0.c9)))))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY CAST((t0.c9 IN ()) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1, t0, rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((vt1.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, t0.c0, rt0.c2, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((t0.c0, t0.c9, 'vo', t0.c9, rt0.c1, t0.c0, t0.c9)))))) ORDER BY CAST((t0.c9 IN ()) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((NULL)<<(x'7ca3')))||(COALESCE(DISTINCT 0.3818310061708068, rt0.c2)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c2)-(rt0.c1)) THEN ((rt0.c2)<=(rt0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT rt0.c2) WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<<(x'7ca3')))||(COALESCE(DISTINCT 0.3818310061708068, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN ((rt0.c2)-(rt0.c1)) THEN ((rt0.c2)<=(rt0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT rt0.c2) WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) END ASC);
SELECT ALL * FROM rt0 WHERE (((((NULL)<<(x'7ca3')))||(COALESCE(DISTINCT 0.3818310061708068, rt0.c2)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c2)-(rt0.c1)) THEN ((rt0.c2)<=(rt0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT rt0.c2) WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)<<(x'7ca3')))||(COALESCE(DISTINCT 0.3818310061708068, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN ((rt0.c2)-(rt0.c1)) THEN ((rt0.c2)<=(rt0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT rt0.c2) WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) END ASC);
SELECT ALL * FROM rt0 WHERE (((((NULL)<<(x'7ca3')))||(COALESCE(DISTINCT 0.3818310061708068, rt0.c2)))) ORDER BY CASE rt0.c2  WHEN ((rt0.c2)-(rt0.c1)) THEN ((rt0.c2)<=(rt0.c1)) WHEN rt0.c0 THEN HEX(DISTINCT rt0.c2) WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE ((rt0.c1) BETWEEN (NULL) AND (rt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)OR(GLOB(x'd248', vt0.c0))))OR(TRIM(rt0.c0, t0.c9))))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE NOCASE)OR(GLOB(x'd248', vt0.c0))))OR(TRIM(rt0.c0, t0.c9))))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)OR(GLOB(x'd248', vt0.c0))))OR(TRIM(rt0.c0, t0.c9))))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1 COLLATE NOCASE)OR(GLOB(x'd248', vt0.c0))))OR(TRIM(rt0.c0, t0.c9))))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((((((rt0.c1 COLLATE NOCASE)OR(GLOB(x'd248', vt0.c0))))OR(TRIM(rt0.c0, t0.c9))))OR(CAST(rt0.c1 AS NUMERIC))))AND(vt1.c0)));
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(UNLIKELY(DISTINCT rt0.c0))))AND((((vt0.c0))<((rt0.c2))))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR((((0Xffffffffdba6b666)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR((((0xffffffffdba6b666)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(UNLIKELY(DISTINCT rt0.c0))))AND((((vt0.c0))<((rt0.c2))))));
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(UNLIKELY(DISTINCT rt0.c0))))AND((((vt0.c0))<((rt0.c2))))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR((((0Xffffffffdba6b666)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR((((0xffffffffdba6b666)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(UNLIKELY(DISTINCT rt0.c0))))AND((((vt0.c0))<((rt0.c2))))));
SELECT ALL * FROM vt1, vt0, t0 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(UNLIKELY(DISTINCT rt0.c0))))AND((((vt0.c0))<((rt0.c2))))) WHERE (((((vt0.c1 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR((((0Xffffffffdba6b666)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))));
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((CHAR(rt0.c1))OR(((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(t0.c9)))OR(rt0.c0)))))OR((+ (rt0.c2)))) WHERE (ABS(DISTINCT (((vt0.c0))>=((vt0.c1))))) ORDER BY 2068777707 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((vt0.c0))>=((vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((CHAR(rt0.c1))OR(((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(t0.c9)))OR(rt0.c0)))))OR((+ (rt0.c2)))) ORDER BY 2068777707 ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((CHAR(rt0.c1))OR(((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(t0.c9)))OR(rt0.c0)))))OR((+ (rt0.c2)))) WHERE (ABS(DISTINCT (((vt0.c0))>=((vt0.c1))))) ORDER BY 2068777707 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((vt0.c0))>=((vt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((CHAR(rt0.c1))OR(((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(t0.c9)))OR(rt0.c0)))))OR((+ (rt0.c2)))) ORDER BY 2068777707 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))+((((vt1.c0))=((vt1.c0)))))) ORDER BY ((vt1.c0)+(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))+((((vt1.c0))==((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)+(vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))+((((vt1.c0))=((vt1.c0)))))) ORDER BY ((vt1.c0)+(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))+((((vt1.c0))==((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)+(vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE))+((((vt1.c0))=((vt1.c0)))))) ORDER BY ((vt1.c0)+(vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((('0.01307718367086197')) BETWEEN ((((((vt1.c0)AND(0.974467534117715)))AND(vt1.c0)))) AND ((((vt1.c0)==(vt1.c0)))))) ORDER BY x'9c27';
SELECT SUM(count) FROM (SELECT ((((('0.01307718367086197')) BETWEEN ((((((vt1.c0)AND(0.974467534117715)))AND(vt1.c0)))) AND ((((vt1.c0)==(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'9c27');
SELECT ALL COUNT(*) FROM vt1 WHERE (((('0.01307718367086197')) BETWEEN ((((((vt1.c0)AND(0.974467534117715)))AND(vt1.c0)))) AND ((((vt1.c0)==(vt1.c0)))))) ORDER BY x'9c27';
SELECT SUM(count) FROM (SELECT ((((('0.01307718367086197')) BETWEEN ((((((vt1.c0)AND(0.974467534117715)))AND(vt1.c0)))) AND ((((vt1.c0)==(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'9c27');
SELECT ALL COUNT(*) FROM vt1 WHERE (((('0.01307718367086197')) BETWEEN ((((((vt1.c0)AND(0.974467534117715)))AND(vt1.c0)))) AND ((((vt1.c0)==(vt1.c0)))))) ORDER BY x'9c27';
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ('-496590486');
SELECT SUM(count) FROM (SELECT (('-496590486') IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ('-496590486');
SELECT SUM(count) FROM (SELECT (('-496590486') IS TRUE)  as count FROM t0, vt1, rt0);
SELECT COUNT(*) FROM t0, vt1, rt0 WHERE ('-496590486');
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN (((- (NULL)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.3459518508521462 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, ((rt0.c2)%(rt0.c2)))) AND ((TRIM(t0.c0), (t0.c0 IN (rt0.c1)), ((((t0.c9)AND(t0.c9)))OR(rt0.c2)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c9 ELSE vt0.c0 END AS REAL), (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN (((- (NULL)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.3459518508521462 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, ((rt0.c2)%(rt0.c2)))) AND ((TRIM(t0.c0), (t0.c0 IN (rt0.c1)), ((((t0.c9)AND(t0.c9)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c9 ELSE vt0.c0 END AS REAL), (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN (((- (NULL)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.3459518508521462 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, ((rt0.c2)%(rt0.c2)))) AND ((TRIM(t0.c0), (t0.c0 IN (rt0.c1)), ((((t0.c9)AND(t0.c9)))OR(rt0.c2)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c9 ELSE vt0.c0 END AS REAL), (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN (((- (NULL)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.3459518508521462 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, ((rt0.c2)%(rt0.c2)))) AND ((TRIM(t0.c0), (t0.c0 IN (rt0.c1)), ((((t0.c9)AND(t0.c9)))OR(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c9 ELSE vt0.c0 END AS REAL), (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ((((vt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN (((- (NULL)), CASE rt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.3459518508521462 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, ((rt0.c2)%(rt0.c2)))) AND ((TRIM(t0.c0), (t0.c0 IN (rt0.c1)), ((((t0.c9)AND(t0.c9)))OR(rt0.c2)))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c9 ELSE vt0.c0 END AS REAL), (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((0.521947541737269 IN (x'7b7c'))) ORDER BY CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.521947541737269 IN (x'7b7c'))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((0.521947541737269 IN (x'7b7c'))) ORDER BY CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.521947541737269 IN (x'7b7c'))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((0.521947541737269 IN (x'7b7c'))) ORDER BY CAST(CASE WHEN NULL THEN rt0.c1 END AS REAL) DESC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)+(rt0.c2)))|(CAST(rt0.c2 AS TEXT))) WHERE ((((+ (t0.c9))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(t0.c0))) AND (((rt0.c1)|(rt0.c1))))) ORDER BY (rt0.c2 IN (CASE rt0.c0  WHEN t0.c9 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c9))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(t0.c0))) AND (((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)+(rt0.c2)))|(CAST(rt0.c2 AS TEXT))) ORDER BY (rt0.c2 IN (CASE rt0.c0  WHEN t0.c9 THEN rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)+(rt0.c2)))|(CAST(rt0.c2 AS TEXT))) WHERE ((((+ (t0.c9))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(t0.c0))) AND (((rt0.c1)|(rt0.c1))))) ORDER BY (rt0.c2 IN (CASE rt0.c0  WHEN t0.c9 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c9))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(t0.c0))) AND (((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)+(rt0.c2)))|(CAST(rt0.c2 AS TEXT))) ORDER BY (rt0.c2 IN (CASE rt0.c0  WHEN t0.c9 THEN rt0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)+(rt0.c2)))|(CAST(rt0.c2 AS TEXT))) WHERE ((((+ (t0.c9))) BETWEEN (((((rt0.c1)AND(rt0.c0)))AND(t0.c0))) AND (((rt0.c1)|(rt0.c1))))) ORDER BY (rt0.c2 IN (CASE rt0.c0  WHEN t0.c9 THEN rt0.c2 END)) DESC;
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (1852832478);
SELECT SUM(count) FROM (SELECT ALL ((1852832478) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (1852832478);
SELECT SUM(count) FROM (SELECT ALL ((1852832478) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE (1852832478);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<<(vt0.c1))) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<<(vt0.c1))) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<<(vt0.c1))) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<<(vt0.c1))) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)<<(vt0.c1))) BETWEEN (((rt0.c0)<<(vt0.c0))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM t0 WHERE (CAST(x'5e1f' AS REAL) COLLATE RTRIM) ORDER BY UPPER(((t0.c9) NOT BETWEEN (t0.c0) AND (t0.c9)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'5e1f' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY UPPER(((t0.c9) NOT BETWEEN (t0.c0) AND (t0.c9))));
SELECT * FROM t0 WHERE (CAST(x'5e1f' AS REAL) COLLATE RTRIM) ORDER BY UPPER(((t0.c9) NOT BETWEEN (t0.c0) AND (t0.c9)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'5e1f' AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY UPPER(((t0.c9) NOT BETWEEN (t0.c0) AND (t0.c9))));
SELECT * FROM t0 WHERE (CAST(x'5e1f' AS REAL) COLLATE RTRIM) ORDER BY UPPER(((t0.c9) NOT BETWEEN (t0.c0) AND (t0.c9)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c9)AND(vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOTNULL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c9)AND(vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOTNULL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c9)AND(vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOTNULL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c9)AND(vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOTNULL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c9)AND(vt0.c0)))AND(t0.c0)))OR(((vt0.c1) NOTNULL))))OR(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'7c59')))AND(vt1.c0)) IN ()) WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((t0.c0)+(rt0.c0)))))OR((((rt0.c0, t0.c9, t0.c9))<=((rt0.c1, rt0.c2, rt0.c0))))))OR((x'' IN ('-1074800568')))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY (((NULL))>((((rt0.c2) IS FALSE)))) DESC, (CAST(rt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(UNICODE(rt0.c2) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c2)))OR(((t0.c0)+(rt0.c0)))))OR((((rt0.c0, t0.c9, t0.c9))<=((rt0.c1, rt0.c2, rt0.c0))))))OR((x'' IN ('-1074800568')))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'7c59')))AND(vt1.c0)) IN ()) ORDER BY (((NULL))>((((rt0.c2) IS FALSE)))) DESC, (CAST(rt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(UNICODE(rt0.c2) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'7c59')))AND(vt1.c0)) IN ()) WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((t0.c0)+(rt0.c0)))))OR((((rt0.c0, t0.c9, t0.c9))<=((rt0.c1, rt0.c2, rt0.c0))))))OR((x'' IN ('-1074800568')))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY (((NULL))>((((rt0.c2) IS FALSE)))) DESC, (CAST(rt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(UNICODE(rt0.c2) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c2)))OR(((t0.c0)+(rt0.c0)))))OR((((rt0.c0, t0.c9, t0.c9))<=((rt0.c1, rt0.c2, rt0.c0))))))OR((x'' IN ('-1074800568')))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'7c59')))AND(vt1.c0)) IN ()) ORDER BY (((NULL))>((((rt0.c2) IS FALSE)))) DESC, (CAST(rt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(UNICODE(rt0.c2) AS REAL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(x'7c59')))AND(vt1.c0)) IN ()) WHERE (((((((((((rt0.c1)%(rt0.c2)))OR(((t0.c0)+(rt0.c0)))))OR((((rt0.c0, t0.c9, t0.c9))<=((rt0.c1, rt0.c2, rt0.c0))))))OR((x'' IN ('-1074800568')))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY (((NULL))>((((rt0.c2) IS FALSE)))) DESC, (CAST(rt0.c0 AS INTEGER) IN ()) ASC  NULLS FIRST, CAST(UNICODE(rt0.c2) AS REAL)  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CASE CAST(t0.c9 AS NUMERIC)  WHEN (0.9200625931129836 IN ()) THEN ((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FULL OUTER JOIN t0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END IN ((+ (rt0.c1)))) FULL OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)) WHERE (CAST(((t0.c9) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c9) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE CAST(t0.c9 AS NUMERIC)  WHEN (0.9200625931129836 IN ()) THEN ((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FULL OUTER JOIN t0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END IN ((+ (rt0.c1)))) FULL OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON CASE CAST(t0.c9 AS NUMERIC)  WHEN (0.9200625931129836 IN ()) THEN ((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FULL OUTER JOIN t0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END IN ((+ (rt0.c1)))) FULL OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)) WHERE (CAST(((t0.c9) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c9) BETWEEN (rt0.c1) AND (t0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON CASE CAST(t0.c9 AS NUMERIC)  WHEN (0.9200625931129836 IN ()) THEN ((t0.c9) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END FULL OUTER JOIN t0 ON (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c1 END IN ((+ (rt0.c1)))) FULL OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(0.7295700710854067 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) ORDER BY ((((-1996828350)LIKE(vt0.c1)))>((vt0.c1 IN ()))), CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7295700710854067 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((-1996828350)LIKE(vt0.c1)))>((vt0.c1 IN ()))), CHANGES()  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(0.7295700710854067 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) ORDER BY ((((-1996828350)LIKE(vt0.c1)))>((vt0.c1 IN ()))), CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.7295700710854067 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((-1996828350)LIKE(vt0.c1)))>((vt0.c1 IN ()))), CHANGES()  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(0.7295700710854067 AS TEXT))IS(vt0.c1 COLLATE NOCASE))) ORDER BY ((((-1996828350)LIKE(vt0.c1)))>((vt0.c1 IN ()))), CHANGES()  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('364868088'))) BETWEEN (((rt0.c0) NOT NULL)) AND (NULL))) ORDER BY (((((rt0.c2, 0Xffffffffca51f54e, rt0.c0))=((rt0.c1, rt0.c2, rt0.c0))))>>(0X58c2e4c4));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ('364868088'))) BETWEEN (((rt0.c0) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, 0Xffffffffca51f54e, rt0.c0))==((rt0.c1, rt0.c2, rt0.c0))))>>(0X58c2e4c4)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('364868088'))) BETWEEN (((rt0.c0) NOT NULL)) AND (NULL))) ORDER BY (((((rt0.c2, 0Xffffffffca51f54e, rt0.c0))=((rt0.c1, rt0.c2, rt0.c0))))>>(0X58c2e4c4));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ('364868088'))) BETWEEN (((rt0.c0) NOT NULL)) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, 0Xffffffffca51f54e, rt0.c0))==((rt0.c1, rt0.c2, rt0.c0))))>>(0X58c2e4c4)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ('364868088'))) BETWEEN (((rt0.c0) NOT NULL)) AND (NULL))) ORDER BY (((((rt0.c2, 0Xffffffffca51f54e, rt0.c0))=((rt0.c1, rt0.c2, rt0.c0))))>>(0X58c2e4c4));
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) AS REAL));
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE vt0.c1  WHEN 'Lm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE vt0.c1  WHEN 'Lm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE vt0.c1  WHEN 'Lm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE vt0.c1  WHEN 'Lm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt0.c1 END)));
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(((rt0.c2) ISNULL) AS BLOB)) ORDER BY ((((vt0.c1) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE vt0.c1  WHEN 'Lm' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN rt0.c0 END) AND (CASE WHEN vt1.c0 THEN vt0.c1 END));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c9, t0.c9, rt0.c2)) AND ((vt0.c1, t0.c0, rt0.c0)))) NOTNULL) CROSS JOIN rt0 ON NULL WHERE (CHAR(((((t0.c9)AND(t0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((t0.c9)AND(t0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c9, t0.c9, rt0.c2)) AND ((vt0.c1, t0.c0, rt0.c0)))) NOTNULL) CROSS JOIN rt0 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c9, t0.c9, rt0.c2)) AND ((vt0.c1, t0.c0, rt0.c0)))) NOTNULL) CROSS JOIN rt0 ON NULL WHERE (CHAR(((((t0.c9)AND(t0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((t0.c9)AND(t0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((((vt0.c1, rt0.c2, rt0.c2)) BETWEEN ((t0.c9, t0.c9, rt0.c2)) AND ((vt0.c1, t0.c0, rt0.c0)))) NOTNULL) CROSS JOIN rt0 ON NULL);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 END, ((vt0.c0)AND(rt0.c2)), 'e') WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c2)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1)<>(vt0.c0)) THEN ((rt0.c2)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 END, ((vt0.c0)AND(rt0.c2)), 'e'));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 END, ((vt0.c0)AND(rt0.c2)), 'e') WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c2)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1)<>(vt0.c0)) THEN ((rt0.c2)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 END, ((vt0.c0)AND(rt0.c2)), 'e'));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON LIKE(CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c1 END, ((vt0.c0)AND(rt0.c2)), 'e') WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((rt0.c1)!=(vt0.c0)) THEN ((rt0.c2)<>(vt0.c0)) WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 COLLATE BINARY WHEN rt0.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((1147487739)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((1147487739)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((1147487739)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((1147487739)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((1147487739)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (NOT (((rt0.c1)<>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)+(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (NOT (((rt0.c1)<>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)+(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)+(rt0.c2)) THEN ((rt0.c1) IS FALSE) ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END) ORDER BY (NOT (((rt0.c1)<>(rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0)&(vt1.c0)) ELSE ((t0.c9)!=(t0.c0)) END FULL OUTER JOIN vt0 ON 0.5508954523575287 WHERE ((+ (((vt0.c0)-(t0.c9))))) ORDER BY LIKE(t0.c0 COLLATE BINARY, ((vt1.c0)!=(vt0.c0)))  NULLS LAST, ((((((vt1.c0)OR(t0.c9)))OR('DzYdCp'))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(t0.c9))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0)&(vt1.c0)) ELSE ((t0.c9)<>(t0.c0)) END FULL OUTER JOIN vt0 ON 0.5508954523575287 ORDER BY LIKE(t0.c0 COLLATE BINARY, ((vt1.c0)!=(vt0.c0)))  NULLS LAST, ((((((vt1.c0)OR(t0.c9)))OR('DzYdCp'))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0)&(vt1.c0)) ELSE ((t0.c9)!=(t0.c0)) END FULL OUTER JOIN vt0 ON 0.5508954523575287 WHERE ((+ (((vt0.c0)-(t0.c9))))) ORDER BY LIKE(t0.c0 COLLATE BINARY, ((vt1.c0)!=(vt0.c0)))  NULLS LAST, ((((((vt1.c0)OR(t0.c9)))OR('DzYdCp'))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(t0.c9))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0)&(vt1.c0)) ELSE ((t0.c9)<>(t0.c0)) END FULL OUTER JOIN vt0 ON 0.5508954523575287 ORDER BY LIKE(t0.c0 COLLATE BINARY, ((vt1.c0)!=(vt0.c0)))  NULLS LAST, ((((((vt1.c0)OR(t0.c9)))OR('DzYdCp'))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN '-1814483687' WHEN x'' THEN t0.c0 WHEN t0.c9 THEN rt0.c1 END WHEN NULLIF(DISTINCT rt0.c1, t0.c9) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN vt0.c0 THEN CAST(NULL AS INTEGER) END RIGHT OUTER JOIN vt0 ON ((vt0.c1)<>(UNLIKELY(rt0.c0))) FULL OUTER JOIN rt0 ON (t0.c0 IN (rt0.c0, vt1.c0)) COLLATE RTRIM WHERE (((CAST('g8' AS NUMERIC))GLOB((((-1550347357, rt0.c1, rt0.c1, rt0.c1, vt0.c0))<=((rt0.c2, vt0.c0, rt0.c0, t0.c0, vt0.c1)))))) ORDER BY (+ (((rt0.c2)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST('g8' AS NUMERIC))GLOB((((-1550347357, rt0.c1, rt0.c1, rt0.c1, vt0.c0))<=((rt0.c2, vt0.c0, rt0.c0, t0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN '-1814483687' WHEN x'' THEN t0.c0 WHEN t0.c9 THEN rt0.c1 END WHEN NULLIF(DISTINCT rt0.c1, t0.c9) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN vt0.c0 THEN CAST(NULL AS INTEGER) END RIGHT OUTER JOIN vt0 ON ((vt0.c1)!=(UNLIKELY(rt0.c0))) FULL OUTER JOIN rt0 ON (t0.c0 IN (rt0.c0, vt1.c0)) COLLATE RTRIM ORDER BY (+ (((rt0.c2)*(rt0.c1)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN '-1814483687' WHEN x'' THEN t0.c0 WHEN t0.c9 THEN rt0.c1 END WHEN NULLIF(DISTINCT rt0.c1, t0.c9) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN vt0.c0 THEN CAST(NULL AS INTEGER) END RIGHT OUTER JOIN vt0 ON ((vt0.c1)<>(UNLIKELY(rt0.c0))) FULL OUTER JOIN rt0 ON (t0.c0 IN (rt0.c0, vt1.c0)) COLLATE RTRIM WHERE (((CAST('g8' AS NUMERIC))GLOB((((-1550347357, rt0.c1, rt0.c1, rt0.c1, vt0.c0))<=((rt0.c2, vt0.c0, rt0.c0, t0.c0, vt0.c1)))))) ORDER BY (+ (((rt0.c2)*(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((CAST('g8' AS NUMERIC))GLOB((((-1550347357, rt0.c1, rt0.c1, rt0.c1, vt0.c0))<=((rt0.c2, vt0.c0, rt0.c0, t0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (rt0.c0 IN ()) THEN CASE WHEN rt0.c2 THEN '-1814483687' WHEN x'' THEN t0.c0 WHEN t0.c9 THEN rt0.c1 END WHEN NULLIF(DISTINCT rt0.c1, t0.c9) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) WHEN vt0.c0 THEN CAST(NULL AS INTEGER) END RIGHT OUTER JOIN vt0 ON ((vt0.c1)!=(UNLIKELY(rt0.c0))) FULL OUTER JOIN rt0 ON (t0.c0 IN (rt0.c0, vt1.c0)) COLLATE RTRIM ORDER BY (+ (((rt0.c2)*(rt0.c1)))));
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt0.c0))<((vt0.c1))))&(((rt0.c0) NOT BETWEEN (1356858551) AND (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c1))))&(((rt0.c0) NOT BETWEEN (1356858551) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt0.c0))<((vt0.c1))))&(((rt0.c0) NOT BETWEEN (1356858551) AND (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c1))))&(((rt0.c0) NOT BETWEEN (1356858551) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, vt0 WHERE ((((((vt0.c0))<((vt0.c1))))&(((rt0.c0) NOT BETWEEN (1356858551) AND (vt1.c0))))) ORDER BY ((rt0.c0) BETWEEN (((rt0.c1) NOTNULL)) AND ((rt0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((+ (((t0.c9) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c1) NOT NULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c9) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((+ (((t0.c9) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c1) NOT NULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c9) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL)) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((+ (((t0.c9) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((rt0.c1) NOT NULL)) IS FALSE) ASC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)%(t0.c9)) IN (5.912315832908854E-4))) ORDER BY t0.c9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)%(t0.c9)) IN (5.912315832908854E-4))) IS TRUE)  as count FROM t0 ORDER BY t0.c9  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)%(t0.c9)) IN (5.912315832908854E-4))) ORDER BY t0.c9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)%(t0.c9)) IN (5.912315832908854E-4))) IS TRUE)  as count FROM t0 ORDER BY t0.c9  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)%(t0.c9)) IN (5.912315832908854E-4))) ORDER BY t0.c9  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN (+ (vt0.c0)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 COLLATE BINARY ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY x'4389' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN (+ (vt0.c0)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 COLLATE BINARY ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY x'4389' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN (+ (vt0.c0)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 COLLATE BINARY ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY x'4389' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN (+ (vt0.c0)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 COLLATE BINARY ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0 ORDER BY x'4389' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c1 COLLATE NOCASE WHEN (+ (vt0.c1)) THEN (+ (vt0.c0)) WHEN ((vt0.c1) IS TRUE) THEN vt0.c1 COLLATE BINARY ELSE CAST(vt0.c1 AS NUMERIC) END) ORDER BY x'4389' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (((rt0.c1)-(rt0.c0))))) ORDER BY ((rt0.c2) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0))))<<((rt0.c2 IN ()))), rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (((rt0.c1)-(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0))))<<((rt0.c2 IN ()))), rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (((rt0.c1)-(rt0.c0))))) ORDER BY ((rt0.c2) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0))))<<((rt0.c2 IN ()))), rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (((rt0.c1)-(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0))))<<((rt0.c2 IN ()))), rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (((rt0.c1)-(rt0.c0))))) ORDER BY ((rt0.c2) BETWEEN ('') AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) DESC  NULLS LAST, (((((rt0.c0))<>((rt0.c0))))<<((rt0.c2 IN ()))), rt0.c0;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c9)==(t0.c9))))<=((((t0.c9)<=(t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c9)==(t0.c9))))<=((((t0.c9)<=(t0.c9)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c9)==(t0.c9))))<=((((t0.c9)<=(t0.c9))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c9)==(t0.c9))))<=((((t0.c9)<=(t0.c9)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c9)==(t0.c9))))<=((((t0.c9)<=(t0.c9))))));
SELECT * FROM vt1, rt0, t0 WHERE (((((NULL)AND(COALESCE(vt1.c0, rt0.c1))))AND(((rt0.c0) BETWEEN ('1558598038') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(COALESCE(vt1.c0, rt0.c1))))AND(((rt0.c0) BETWEEN ('1558598038') AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((NULL)AND(COALESCE(vt1.c0, rt0.c1))))AND(((rt0.c0) BETWEEN ('1558598038') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(COALESCE(vt1.c0, rt0.c1))))AND(((rt0.c0) BETWEEN ('1558598038') AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE (((((NULL)AND(COALESCE(vt1.c0, rt0.c1))))AND(((rt0.c0) BETWEEN ('1558598038') AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((t0.c9)||(t0.c9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((t0.c9)||(t0.c9)) END) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((t0.c9)||(t0.c9)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((t0.c9)||(t0.c9)) END) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN CAST(rt0.c2 AS NUMERIC) ELSE ((t0.c9)||(t0.c9)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1070565842' END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1070565842' END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1070565842' END));
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1070565842' END)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE '-1070565842' END));
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)==(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)==(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)==(vt1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0) AND (((vt1.c0) IS TRUE)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((-1667510958) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((-1667510958) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0) AND (((vt1.c0) IS TRUE)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((-1667510958) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((-1667510958) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0) AND (((vt1.c0) IS TRUE)))) ORDER BY ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((-1667510958) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0)/(x'')))LIKE(t0.c0))) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(x'')))LIKE(t0.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0)/(x'')))LIKE(t0.c0))) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(x'')))LIKE(t0.c0))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0)/(x'')))LIKE(t0.c0))) ORDER BY (vt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((NULL) BETWEEN (((t0.c0)<>(vt1.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c0)<>(vt1.c0))) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((NULL) BETWEEN (((t0.c0)<>(vt1.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (((t0.c0)<>(vt1.c0))) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((NULL) BETWEEN (((t0.c0)<>(vt1.c0))) AND (CAST(t0.c0 AS BLOB))));
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN (0.5241107398112507)) AS INTEGER)) ORDER BY ((((t0.c9 COLLATE BINARY)AND((((t0.c9))>((t0.c0))))))AND(((t0.c0) NOTNULL))), (((CAST(t0.c0 AS BLOB)))>=(((+ (t0.c9))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN (0.5241107398112507)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c9 COLLATE BINARY)AND((((t0.c9))>((t0.c0))))))AND(((t0.c0) NOTNULL))), (((CAST(t0.c0 AS BLOB)))>=(((+ (t0.c9))))) ASC);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN (0.5241107398112507)) AS INTEGER)) ORDER BY ((((t0.c9 COLLATE BINARY)AND((((t0.c9))>((t0.c0))))))AND(((t0.c0) NOTNULL))), (((CAST(t0.c0 AS BLOB)))>=(((+ (t0.c9))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t0.c0 IN (0.5241107398112507)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c9 COLLATE BINARY)AND((((t0.c9))>((t0.c0))))))AND(((t0.c0) NOTNULL))), (((CAST(t0.c0 AS BLOB)))>=(((+ (t0.c9))))) ASC);
SELECT ALL * FROM t0 WHERE (CAST((t0.c0 IN (0.5241107398112507)) AS INTEGER)) ORDER BY ((((t0.c9 COLLATE BINARY)AND((((t0.c9))>((t0.c0))))))AND(((t0.c0) NOTNULL))), (((CAST(t0.c0 AS BLOB)))>=(((+ (t0.c9))))) ASC;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((t0.c9)) AND ((LENGTH(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((t0.c9)) AND ((LENGTH(vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((t0.c9)) AND ((LENGTH(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((t0.c9)) AND ((LENGTH(vt1.c0)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((t0.c9)) AND ((LENGTH(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))OR(rt0.c2)))OR((~ (rt0.c0)))))OR(NULL)))OR(QUOTE(vt1.c0)))) ORDER BY x'7db0';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS REAL))OR(rt0.c2)))OR((~ (rt0.c0)))))OR(NULL)))OR(QUOTE(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'7db0');
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))OR(rt0.c2)))OR((~ (rt0.c0)))))OR(NULL)))OR(QUOTE(vt1.c0)))) ORDER BY x'7db0';
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS REAL))OR(rt0.c2)))OR((~ (rt0.c0)))))OR(NULL)))OR(QUOTE(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'7db0');
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((CAST(rt0.c1 AS REAL))OR(rt0.c2)))OR((~ (rt0.c0)))))OR(NULL)))OR(QUOTE(vt1.c0)))) ORDER BY x'7db0';
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c0)=(vt1.c0))))<=((((t0.c0)IS NOT(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(vt1.c0))))<=((((t0.c0)IS NOT(t0.c0)))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c0)=(vt1.c0))))<=((((t0.c0)IS NOT(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)=(vt1.c0))))<=((((t0.c0)IS NOT(t0.c0)))))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((rt0.c0)=(vt1.c0))))<=((((t0.c0)IS NOT(t0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (IFNULL(CAST(t0.c0 AS NUMERIC), (t0.c9 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS NUMERIC), (t0.c9 IN ()))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (IFNULL(CAST(t0.c0 AS NUMERIC), (t0.c9 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(t0.c0 AS NUMERIC), (t0.c9 IN ()))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (IFNULL(CAST(t0.c0 AS NUMERIC), (t0.c9 IN ())));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN 8.30907419E8 THEN t0.c9 ELSE vt0.c1 END)/(rt0.c1 COLLATE BINARY)) ASC, 0.0787689671628099 ASC  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE vt0.c0  WHEN 8.30907419E8 THEN t0.c9 ELSE vt0.c1 END)/(rt0.c1 COLLATE BINARY)) ASC, 0.0787689671628099 ASC  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN 8.30907419E8 THEN t0.c9 ELSE vt0.c1 END)/(rt0.c1 COLLATE BINARY)) ASC, 0.0787689671628099 ASC  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))OR(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE vt0.c0  WHEN 8.30907419E8 THEN t0.c9 ELSE vt0.c1 END)/(rt0.c1 COLLATE BINARY)) ASC, 0.0787689671628099 ASC  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))OR(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (x'') ORDER BY ((CASE vt0.c0  WHEN 8.30907419E8 THEN t0.c9 ELSE vt0.c1 END)/(rt0.c1 COLLATE BINARY)) ASC, 0.0787689671628099 ASC  NULLS LAST, (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))OR(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT 'wUib^') RIGHT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT 'wUib^') RIGHT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT 'wUib^') RIGHT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT 'wUib^') RIGHT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT 'wUib^') RIGHT OUTER JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE RTRIM WHERE (NULL);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((- (vt0.c1 COLLATE BINARY))) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((- (vt0.c1 COLLATE BINARY))) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((- (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((- (vt0.c1 COLLATE BINARY))) ORDER BY rt0.c0 COLLATE RTRIM;
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, vt0.c0)) AND (NULLIF(DISTINCT vt0.c1, rt0.c0)))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) ASC  NULLS LAST, json_patch(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE t0.c0  WHEN 'MyCw1퇱' THEN t0.c9 ELSE vt1.c0 END), ((((((0Xffffffff8bc046d4)GLOB(t0.c0)))OR((- (rt0.c1)))))OR(((((((((t0.c9)OR(t0.c0)))OR(0Xffffffffdc2133bf)))OR(t0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, vt0.c0)) AND (NULLIF(DISTINCT vt0.c1, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) ASC  NULLS LAST, json_patch(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE t0.c0  WHEN 'MyCw1퇱' THEN t0.c9 ELSE vt1.c0 END), ((((((0xffffffff8bc046d4)GLOB(t0.c0)))OR((- (rt0.c1)))))OR(((((((((t0.c9)OR(t0.c0)))OR(0xffffffffdc2133bf)))OR(t0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, vt0.c0)) AND (NULLIF(DISTINCT vt0.c1, rt0.c0)))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) ASC  NULLS LAST, json_patch(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE t0.c0  WHEN 'MyCw1퇱' THEN t0.c9 ELSE vt1.c0 END), ((((((0Xffffffff8bc046d4)GLOB(t0.c0)))OR((- (rt0.c1)))))OR(((((((((t0.c9)OR(t0.c0)))OR(0Xffffffffdc2133bf)))OR(t0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, vt0.c0)) AND (NULLIF(DISTINCT vt0.c1, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) ASC  NULLS LAST, json_patch(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE t0.c0  WHEN 'MyCw1퇱' THEN t0.c9 ELSE vt1.c0 END), ((((((0xffffffff8bc046d4)GLOB(t0.c0)))OR((- (rt0.c1)))))OR(((((((((t0.c9)OR(t0.c0)))OR(0xffffffffdc2133bf)))OR(t0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (TRIM(DISTINCT t0.c0, vt0.c0)) AND (NULLIF(DISTINCT vt0.c1, rt0.c0)))) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((~ (vt0.c0)))) ASC  NULLS LAST, json_patch(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), CASE t0.c0  WHEN 'MyCw1퇱' THEN t0.c9 ELSE vt1.c0 END), ((((((0Xffffffff8bc046d4)GLOB(t0.c0)))OR((- (rt0.c1)))))OR(((((((((t0.c9)OR(t0.c0)))OR(0Xffffffffdc2133bf)))OR(t0.c0)))OR(vt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<<(rt0.c1))) NOT NULL) DESC  NULLS LAST, ((((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<<(rt0.c1))) NOT NULL) DESC  NULLS LAST, ((((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<<(rt0.c1))) NOT NULL) DESC  NULLS LAST, ((((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1)<<(rt0.c1))) NOT NULL) DESC  NULLS LAST, ((((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c1)<<(rt0.c1))) NOT NULL) DESC  NULLS LAST, ((((CASE rt0.c2  WHEN rt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c0 AS NUMERIC))))AND(((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE) RIGHT OUTER JOIN vt1 ON (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'x1e5000000' END))<=((CAST(rt0.c1 AS NUMERIC)))) WHERE (((((((rt0.c1)LIKE(vt1.c0)))OR((((t0.c9))<=((rt0.c2))))))OR(t0.c0 COLLATE BINARY))) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(vt1.c0)))OR((((t0.c9))<=((rt0.c2))))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE) RIGHT OUTER JOIN vt1 ON (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'x1e5000000' END))<=((CAST(rt0.c1 AS NUMERIC)))) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE) RIGHT OUTER JOIN vt1 ON (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'x1e5000000' END))<=((CAST(rt0.c1 AS NUMERIC)))) WHERE (((((((rt0.c1)LIKE(vt1.c0)))OR((((t0.c9))<=((rt0.c2))))))OR(t0.c0 COLLATE BINARY))) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(vt1.c0)))OR((((t0.c9))<=((rt0.c2))))))OR(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c0 END) IS TRUE) RIGHT OUTER JOIN vt1 ON (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'x1e5000000' END))<=((CAST(rt0.c1 AS NUMERIC)))) ORDER BY CAST(CAST(rt0.c2 AS BLOB) AS TEXT));
SELECT COUNT(*) FROM t0 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c9);
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c9);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((x''))>=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x''))>=((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((x''))>=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((x''))>=((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((x''))>=((rt0.c2))) IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(NULL))<<(((rt0.c0)==(vt1.c0))))) ORDER BY (((((((0x3b6da547)) BETWEEN ((rt0.c1)) AND ((NULL))))OR(COALESCE(DISTINCT rt0.c2, rt0.c1))))AND(LIKE(rt0.c1, rt0.c0, '0'))) ASC  NULLS LAST, ((vt1.c0 COLLATE BINARY)GLOB(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(NULL))<<(((rt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((0X3b6da547)) BETWEEN ((rt0.c1)) AND ((NULL))))OR(COALESCE(DISTINCT rt0.c2, rt0.c1))))AND(LIKE(rt0.c1, rt0.c0, '0'))) ASC  NULLS LAST, ((vt1.c0 COLLATE BINARY)GLOB(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(NULL))<<(((rt0.c0)==(vt1.c0))))) ORDER BY (((((((0x3b6da547)) BETWEEN ((rt0.c1)) AND ((NULL))))OR(COALESCE(DISTINCT rt0.c2, rt0.c1))))AND(LIKE(rt0.c1, rt0.c0, '0'))) ASC  NULLS LAST, ((vt1.c0 COLLATE BINARY)GLOB(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(NULL))<<(((rt0.c0)==(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((0X3b6da547)) BETWEEN ((rt0.c1)) AND ((NULL))))OR(COALESCE(DISTINCT rt0.c2, rt0.c1))))AND(LIKE(rt0.c1, rt0.c0, '0'))) ASC  NULLS LAST, ((vt1.c0 COLLATE BINARY)GLOB(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((UPPER(NULL))<<(((rt0.c0)==(vt1.c0))))) ORDER BY (((((((0x3b6da547)) BETWEEN ((rt0.c1)) AND ((NULL))))OR(COALESCE(DISTINCT rt0.c2, rt0.c1))))AND(LIKE(rt0.c1, rt0.c0, '0'))) ASC  NULLS LAST, ((vt1.c0 COLLATE BINARY)GLOB(((vt1.c0) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CAST(vt1.c0 AS REAL))&(((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((NULL) BETWEEN (vt0.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))&(((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY ((NULL) BETWEEN (vt0.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CAST(vt1.c0 AS REAL))&(((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((NULL) BETWEEN (vt0.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL))&(((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY ((NULL) BETWEEN (vt0.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((CAST(vt1.c0 AS REAL))&(((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c0))))) ORDER BY ((NULL) BETWEEN (vt0.c1) AND (CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON LENGTH(t0.c9) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt0 ON (((DATE(t0.c9, t0.c0, rt0.c1, t0.c0, t0.c9)))<=((((t0.c9) IS TRUE)))) WHERE ('\MgkGI') ORDER BY ((t0.c9 IN ()) IN ((+ (vt1.c0)), NULL)), LTRIM((NOT (t0.c9))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\MgkGI') IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON LENGTH(t0.c9) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt0 ON (((DATE(t0.c9, t0.c0, rt0.c1, t0.c0, t0.c9)))<=((((t0.c9) IS TRUE)))) ORDER BY ((t0.c9 IN ()) IN ((+ (vt1.c0)), NULL)), LTRIM((NOT (t0.c9))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON LENGTH(t0.c9) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt0 ON (((DATE(t0.c9, t0.c0, rt0.c1, t0.c0, t0.c9)))<=((((t0.c9) IS TRUE)))) WHERE ('\MgkGI') ORDER BY ((t0.c9 IN ()) IN ((+ (vt1.c0)), NULL)), LTRIM((NOT (t0.c9))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\MgkGI') IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON LENGTH(t0.c9) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt0 ON (((DATE(t0.c9, t0.c0, rt0.c1, t0.c0, t0.c9)))<=((((t0.c9) IS TRUE)))) ORDER BY ((t0.c9 IN ()) IN ((+ (vt1.c0)), NULL)), LTRIM((NOT (t0.c9))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON LENGTH(t0.c9) COLLATE RTRIM COLLATE RTRIM CROSS JOIN rt0 ON (((DATE(t0.c9, t0.c0, rt0.c1, t0.c0, t0.c9)))<=((((t0.c9) IS TRUE)))) WHERE ('\MgkGI') ORDER BY ((t0.c9 IN ()) IN ((+ (vt1.c0)), NULL)), LTRIM((NOT (t0.c9))) ASC  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((HEX(DISTINCT x'')) BETWEEN ('758956299' COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((0.8333238274207547)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT x'')) BETWEEN ('758956299' COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((0.8333238274207547)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((HEX(DISTINCT x'')) BETWEEN ('758956299' COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((0.8333238274207547)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT x'')) BETWEEN ('758956299' COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((0.8333238274207547)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((HEX(DISTINCT x'')) BETWEEN ('758956299' COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((0.8333238274207547)) AND ((rt0.c0))))));
SELECT * FROM t0 WHERE ((((t0.c0)<('1047446656')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<('1047446656')) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)<('1047446656')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)<('1047446656')) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)<('1047446656')) IN ()));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0)OR(0.7015613248718329)))AND(vt0.c1)))&(((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(0.7015613248718329)))AND(vt0.c1)))&(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0)OR(0.7015613248718329)))AND(vt0.c1)))&(((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(0.7015613248718329)))AND(vt0.c1)))&(((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((((vt1.c0)OR(0.7015613248718329)))AND(vt0.c1)))&(((vt1.c0)==(vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('1041696824');
SELECT SUM(count) FROM (SELECT (('1041696824') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('1041696824');
SELECT SUM(count) FROM (SELECT (('1041696824') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ('1041696824');
SELECT * FROM vt1 CROSS JOIN rt0 ON ((LIKE(vt0.c1, rt0.c0)) IS TRUE) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) AS TEXT) FULL OUTER JOIN t0 ON ((-12550834)||(vt1.c0)) COLLATE NOCASE WHERE (CASE vt0.c1  WHEN CASE WHEN x'dfab' THEN rt0.c0 END THEN 0xffffffff8f59de6c WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(x'')) WHEN LIKELIHOOD(t0.c0, 0.23741716903918886) THEN (+ (vt0.c0)) END) ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN CASE WHEN x'dfab' THEN rt0.c0 END THEN 0xffffffff8f59de6c WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(x'')) WHEN LIKELIHOOD(t0.c0, 0.23741716903918886) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((LIKE(vt0.c1, rt0.c0)) IS TRUE) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) AS TEXT) FULL OUTER JOIN t0 ON ((-12550834)||(vt1.c0)) COLLATE NOCASE ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOT NULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((LIKE(vt0.c1, rt0.c0)) IS TRUE) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) AS TEXT) FULL OUTER JOIN t0 ON ((-12550834)||(vt1.c0)) COLLATE NOCASE WHERE (CASE vt0.c1  WHEN CASE WHEN x'dfab' THEN rt0.c0 END THEN 0xffffffff8f59de6c WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(x'')) WHEN LIKELIHOOD(t0.c0, 0.23741716903918886) THEN (+ (vt0.c0)) END) ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN CASE WHEN x'dfab' THEN rt0.c0 END THEN 0xffffffff8f59de6c WHEN CASE WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END THEN ((t0.c0)>>(x'')) WHEN LIKELIHOOD(t0.c0, 0.23741716903918886) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((LIKE(vt0.c1, rt0.c0)) IS TRUE) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) AS TEXT) FULL OUTER JOIN t0 ON ((-12550834)||(vt1.c0)) COLLATE NOCASE ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOT NULL));
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS REAL)) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS INTEGER))))OR(((t0.c9) IS TRUE))))OR(((t0.c0) NOT BETWEEN ('0.09783488253359296') AND (vt1.c0)))))AND(((vt1.c0)>>(NULL)))))AND((((t0.c9))!=((x''))))))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ('1l')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS INTEGER))))OR(((t0.c9) IS TRUE))))OR(((t0.c0) NOT BETWEEN ('0.09783488253359296') AND (vt1.c0)))))AND(((vt1.c0)>>(NULL)))))AND((((t0.c9))<>((x''))))))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ('1l')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS INTEGER))))OR(((t0.c9) IS TRUE))))OR(((t0.c0) NOT BETWEEN ('0.09783488253359296') AND (vt1.c0)))))AND(((vt1.c0)>>(NULL)))))AND((((t0.c9))!=((x''))))))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ('1l')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS INTEGER))))OR(((t0.c9) IS TRUE))))OR(((t0.c0) NOT BETWEEN ('0.09783488253359296') AND (vt1.c0)))))AND(((vt1.c0)>>(NULL)))))AND((((t0.c9))<>((x''))))))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ('1l')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS INTEGER))))OR(((t0.c9) IS TRUE))))OR(((t0.c0) NOT BETWEEN ('0.09783488253359296') AND (vt1.c0)))))AND(((vt1.c0)>>(NULL)))))AND((((t0.c9))!=((x''))))))OR((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))) ORDER BY (+ ('1l')) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c9) ORDER BY ((((((t0.c0)OR(t0.c9)))OR(t0.c0)))AND(((((t0.c9)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c9)))OR(t0.c0)))AND(((((t0.c9)OR(t0.c0)))AND(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c9) ORDER BY ((((((t0.c0)OR(t0.c9)))OR(t0.c0)))AND(((((t0.c9)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c9)))OR(t0.c0)))AND(((((t0.c9)OR(t0.c0)))AND(t0.c0)))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c9) ORDER BY ((((((t0.c0)OR(t0.c9)))OR(t0.c0)))AND(((((t0.c9)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (rt0.c0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT ((((t0.c0)OR(t0.c9)))OR(t0.c9)), ((t0.c9)/(t0.c9)), ((t0.c0)AND(t0.c0)), (+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((t0.c0)OR(t0.c9)))OR(t0.c9)), ((t0.c9)/(t0.c9)), ((t0.c0)AND(t0.c0)), (+ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT ((((t0.c0)OR(t0.c9)))OR(t0.c9)), ((t0.c9)/(t0.c9)), ((t0.c0)AND(t0.c0)), (+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT ((((t0.c0)OR(t0.c9)))OR(t0.c9)), ((t0.c9)/(t0.c9)), ((t0.c0)AND(t0.c0)), (+ (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT ((((t0.c0)OR(t0.c9)))OR(t0.c9)), ((t0.c9)/(t0.c9)), ((t0.c0)AND(t0.c0)), (+ (t0.c0))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (NOT (((t0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (NOT (((t0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (SQLITE_SOURCE_ID()) ORDER BY (NOT (((t0.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((- (rt0.c0)))<>(((t0.c0)GLOB(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))!=(((t0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((- (rt0.c0)))<>(((t0.c0)GLOB(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))!=(((t0.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt0 WHERE ((((- (rt0.c0)))<>(((t0.c0)GLOB(vt1.c0))))) ORDER BY (vt1.c0 IN ());
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)+(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST((t0.c9 IN ()) AS TEXT) RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC) WHERE ((((rt0.c1)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST((t0.c9 IN ()) AS TEXT) RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST((t0.c9 IN ()) AS TEXT) RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC) WHERE ((((rt0.c1)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST((t0.c9 IN ()) AS TEXT) RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC));
SELECT ALL * FROM t0, vt0 LEFT OUTER JOIN rt0 ON CAST((t0.c9 IN ()) AS TEXT) RIGHT OUTER JOIN vt1 ON CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC) WHERE ((((rt0.c1)AND(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c9) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c9) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c9) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM t0, rt0 WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT ALL * FROM vt1, t0 WHERE ((((+ (vt1.c0)))==(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((+ (vt1.c0)))==(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))=(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((+ (vt1.c0)))==(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))/(((vt0.c0)=(rt0.c1)))) CROSS JOIN vt1 ON ((((t0.c9)OR(CAST(t0.c0 AS TEXT))))OR(UPPER(NULL))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (CAST(x'' AS TEXT) COLLATE RTRIM) ORDER BY (LIKELIHOOD(t0.c0, 0.11739850181502098) IN (((t0.c9)==(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))/(((vt0.c0)=(rt0.c1)))) CROSS JOIN vt1 ON ((((t0.c9)OR(CAST(t0.c0 AS TEXT))))OR(UPPER(NULL))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ORDER BY (LIKELIHOOD(t0.c0, 0.11739850181502098) IN (((t0.c9)==(vt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))/(((vt0.c0)=(rt0.c1)))) CROSS JOIN vt1 ON ((((t0.c9)OR(CAST(t0.c0 AS TEXT))))OR(UPPER(NULL))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (CAST(x'' AS TEXT) COLLATE RTRIM) ORDER BY (LIKELIHOOD(t0.c0, 0.11739850181502098) IN (((t0.c9)==(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))/(((vt0.c0)=(rt0.c1)))) CROSS JOIN vt1 ON ((((t0.c9)OR(CAST(t0.c0 AS TEXT))))OR(UPPER(NULL))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE ORDER BY (LIKELIHOOD(t0.c0, 0.11739850181502098) IN (((t0.c9)==(vt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))/(((vt0.c0)=(rt0.c1)))) CROSS JOIN vt1 ON ((((t0.c9)OR(CAST(t0.c0 AS TEXT))))OR(UPPER(NULL))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE WHERE (CAST(x'' AS TEXT) COLLATE RTRIM) ORDER BY (LIKELIHOOD(t0.c0, 0.11739850181502098) IN (((t0.c9)==(vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)LIKE(rt0.c1)))IS NOT((~ (vt0.c1)))) RIGHT OUTER JOIN rt0 ON ((((t0.c0)-(vt1.c0)))+(rt0.c0 COLLATE NOCASE)) WHERE (((((((rt0.c1)AND(vt0.c1)))OR(t0.c9))) NOT BETWEEN (((vt1.c0)|(t0.c9))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(vt0.c1)))OR(t0.c9))) NOT BETWEEN (((vt1.c0)|(t0.c9))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)LIKE(rt0.c1)))IS NOT((~ (vt0.c1)))) RIGHT OUTER JOIN rt0 ON ((((t0.c0)-(vt1.c0)))+(rt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) IS TRUE) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)LIKE(rt0.c1)))IS NOT((~ (vt0.c1)))) RIGHT OUTER JOIN rt0 ON ((((t0.c0)-(vt1.c0)))+(rt0.c0 COLLATE NOCASE)) WHERE (((((((rt0.c1)AND(vt0.c1)))OR(t0.c9))) NOT BETWEEN (((vt1.c0)|(t0.c9))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(vt0.c1)))OR(t0.c9))) NOT BETWEEN (((vt1.c0)|(t0.c9))) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON ((((rt0.c0)LIKE(rt0.c1)))IS NOT((~ (vt0.c1)))) RIGHT OUTER JOIN rt0 ON ((((t0.c0)-(vt1.c0)))+(rt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) IS TRUE) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))&((rt0.c1 IN ()))) LEFT OUTER JOIN rt0 ON '766091524' WHERE (CASE (NOT (t0.c0))  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c9 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c0))  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c9 THEN t0.c0 END END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))&((rt0.c1 IN ()))) LEFT OUTER JOIN rt0 ON '766091524');
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))&((rt0.c1 IN ()))) LEFT OUTER JOIN rt0 ON '766091524' WHERE (CASE (NOT (t0.c0))  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c9 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c0))  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c9 THEN t0.c0 END END) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))&((rt0.c1 IN ()))) LEFT OUTER JOIN rt0 ON '766091524');
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c0)))&((rt0.c1 IN ()))) LEFT OUTER JOIN rt0 ON '766091524' WHERE (CASE (NOT (t0.c0))  WHEN (~ (t0.c0)) THEN CASE WHEN t0.c9 THEN t0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, 0.6682919229883985, vt0.c1) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, 0.6682919229883985, vt0.c1) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, 0.6682919229883985, vt0.c1) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, 0.6682919229883985, vt0.c1) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN COALESCE(DISTINCT vt0.c0, vt0.c0, 0.6682919229883985, vt0.c1) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)) ELSE vt0.c1 COLLATE NOCASE END);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) AS INTEGER));
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT CAST(t0.c9 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)) ORDER BY CASE WHEN ('1809622051' IN ()) THEN t0.c9 ELSE ((vt0.c1)>(t0.c9)) END  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(t0.c9 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ('1809622051' IN ()) THEN t0.c9 ELSE ((vt0.c1)>(t0.c9)) END  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT CAST(t0.c9 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)) ORDER BY CASE WHEN ('1809622051' IN ()) THEN t0.c9 ELSE ((vt0.c1)>(t0.c9)) END  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CAST(t0.c9 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ('1809622051' IN ()) THEN t0.c9 ELSE ((vt0.c1)>(t0.c9)) END  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (IFNULL(DISTINCT CAST(t0.c9 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 END)) ORDER BY CASE WHEN ('1809622051' IN ()) THEN t0.c9 ELSE ((vt0.c1)>(t0.c9)) END  NULLS FIRST, NULL  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (LIKELY(DISTINCT ((('938767787', rt0.c1, vt1.c0))<((rt0.c2, vt1.c0, rt0.c1))))) ORDER BY (((vt1.c0))<=((rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((('938767787', rt0.c1, vt1.c0))<((rt0.c2, vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY (((vt1.c0))<=((rt0.c1))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (LIKELY(DISTINCT ((('938767787', rt0.c1, vt1.c0))<((rt0.c2, vt1.c0, rt0.c1))))) ORDER BY (((vt1.c0))<=((rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((('938767787', rt0.c1, vt1.c0))<((rt0.c2, vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) ORDER BY (((vt1.c0))<=((rt0.c1))) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (LIKELY(DISTINCT ((('938767787', rt0.c1, vt1.c0))<((rt0.c2, vt1.c0, rt0.c1))))) ORDER BY (((vt1.c0))<=((rt0.c1))) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)&(rt0.c0))) BETWEEN (((vt1.c0) BETWEEN (rt0.c0) AND ('\r%'))) AND (((NULL) ISNULL)))  NULLS FIRST, TYPEOF(DISTINCT ((((NULL)AND(t0.c0)))OR(rt0.c1))) ASC  NULLS LAST, ((CASE WHEN t0.c9 THEN rt0.c0 ELSE rt0.c2 END)OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((((rt0.c2)&(rt0.c0))) BETWEEN (((vt1.c0) BETWEEN (rt0.c0) AND ('\r%'))) AND (((NULL) ISNULL)))  NULLS FIRST, TYPEOF(DISTINCT ((((NULL)AND(t0.c0)))OR(rt0.c1))) ASC  NULLS LAST, ((CASE WHEN t0.c9 THEN rt0.c0 ELSE rt0.c2 END)OR((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)&(rt0.c0))) BETWEEN (((vt1.c0) BETWEEN (rt0.c0) AND ('\r%'))) AND (((NULL) ISNULL)))  NULLS FIRST, TYPEOF(DISTINCT ((((NULL)AND(t0.c0)))OR(rt0.c1))) ASC  NULLS LAST, ((CASE WHEN t0.c9 THEN rt0.c0 ELSE rt0.c2 END)OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((((rt0.c2)&(rt0.c0))) BETWEEN (((vt1.c0) BETWEEN (rt0.c0) AND ('\r%'))) AND (((NULL) ISNULL)))  NULLS FIRST, TYPEOF(DISTINCT ((((NULL)AND(t0.c0)))OR(rt0.c1))) ASC  NULLS LAST, ((CASE WHEN t0.c9 THEN rt0.c0 ELSE rt0.c2 END)OR((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)&(rt0.c0))) BETWEEN (((vt1.c0) BETWEEN (rt0.c0) AND ('\r%'))) AND (((NULL) ISNULL)))  NULLS FIRST, TYPEOF(DISTINCT ((((NULL)AND(t0.c0)))OR(rt0.c1))) ASC  NULLS LAST, ((CASE WHEN t0.c9 THEN rt0.c0 ELSE rt0.c2 END)OR((- (vt0.c0))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON '8[''u' CROSS JOIN t0 ON CASE WHEN (('') NOT BETWEEN (rt0.c1) AND (t0.c9)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c2)&(rt0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)) END WHERE ((((rt0.c2) BETWEEN (t0.c9) AND (t0.c9)) IN ())) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))GLOB((t0.c9 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c9) AND (t0.c9)) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON '8[''u' CROSS JOIN t0 ON CASE WHEN (('') NOT BETWEEN (rt0.c1) AND (t0.c9)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c2)&(rt0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)) END ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))GLOB((t0.c9 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON '8[''u' CROSS JOIN t0 ON CASE WHEN (('') NOT BETWEEN (rt0.c1) AND (t0.c9)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c2)&(rt0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)) END WHERE ((((rt0.c2) BETWEEN (t0.c9) AND (t0.c9)) IN ())) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))GLOB((t0.c9 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c9) AND (t0.c9)) IN ())) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON '8[''u' CROSS JOIN t0 ON CASE WHEN (('') NOT BETWEEN (rt0.c1) AND (t0.c9)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c2)&(rt0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)) END ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))GLOB((t0.c9 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN vt1 ON '8[''u' CROSS JOIN t0 ON CASE WHEN (('') NOT BETWEEN (rt0.c1) AND (t0.c9)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c2)&(rt0.c0)) THEN t0.c0 COLLATE NOCASE WHEN (vt0.c0 IN ()) THEN ((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)) END WHERE ((((rt0.c2) BETWEEN (t0.c9) AND (t0.c9)) IN ())) ORDER BY ((((vt0.c1) BETWEEN (rt0.c2) AND (vt0.c1)))GLOB((t0.c9 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE BINARY THEN '-1835962796' COLLATE RTRIM ELSE ((t0.c9) IS FALSE) END CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c0)<=(rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((t0.c0) NOT BETWEEN (t0.c9) AND (t0.c0)) END WHERE (((rt0.c0) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c1 IN (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE BINARY THEN '-1835962796' COLLATE RTRIM ELSE ((t0.c9) IS FALSE) END CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c0)<=(rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((t0.c0) NOT BETWEEN (t0.c9) AND (t0.c0)) END ORDER BY (vt0.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE BINARY THEN '-1835962796' COLLATE RTRIM ELSE ((t0.c9) IS FALSE) END CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c0)<=(rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((t0.c0) NOT BETWEEN (t0.c9) AND (t0.c0)) END WHERE (((rt0.c0) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c1 IN (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE BINARY THEN '-1835962796' COLLATE RTRIM ELSE ((t0.c9) IS FALSE) END CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c0)<=(rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((t0.c0) NOT BETWEEN (t0.c9) AND (t0.c0)) END ORDER BY (vt0.c0 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c0 COLLATE BINARY THEN '-1835962796' COLLATE RTRIM ELSE ((t0.c9) IS FALSE) END CROSS JOIN vt0 ON CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c0)<=(rt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((t0.c0) NOT BETWEEN (t0.c9) AND (t0.c0)) END WHERE (((rt0.c0) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c1 IN (vt1.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (IFNULL(DISTINCT vt1.c0, vt0.c1));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt1.c0, vt0.c1)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0, t0);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (IFNULL(DISTINCT vt1.c0, vt0.c1));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt1.c0, vt0.c1)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED, vt0, t0);
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE (IFNULL(DISTINCT vt1.c0, vt0.c1));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((('0' COLLATE NOCASE)+(t0.c9 COLLATE RTRIM))) ORDER BY (- ((((vt0.c1, rt0.c0, rt0.c0))>((x'8358', vt1.c0, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0' COLLATE NOCASE)+(t0.c9 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (- ((((vt0.c1, rt0.c0, rt0.c0))>((x'8358', vt1.c0, rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((('0' COLLATE NOCASE)+(t0.c9 COLLATE RTRIM))) ORDER BY (- ((((vt0.c1, rt0.c0, rt0.c0))>((x'8358', vt1.c0, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('0' COLLATE NOCASE)+(t0.c9 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY (- ((((vt0.c1, rt0.c0, rt0.c0))>((x'8358', vt1.c0, rt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((('0' COLLATE NOCASE)+(t0.c9 COLLATE RTRIM))) ORDER BY (- ((((vt0.c1, rt0.c0, rt0.c0))>((x'8358', vt1.c0, rt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS BLOB) FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) AND (((((vt0.c1)) BETWEEN ((t0.c9)) AND ((rt0.c1)))))) WHERE ((~ (vt0.c1 COLLATE RTRIM))) ORDER BY ((((t0.c0)|(NULL))) BETWEEN (((((t0.c9)OR(rt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS BLOB) FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) AND (((((vt0.c1)) BETWEEN ((t0.c9)) AND ((rt0.c1)))))) ORDER BY ((((t0.c0)|(NULL))) BETWEEN (((((t0.c9)OR(rt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS BLOB) FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) AND (((((vt0.c1)) BETWEEN ((t0.c9)) AND ((rt0.c1)))))) WHERE ((~ (vt0.c1 COLLATE RTRIM))) ORDER BY ((((t0.c0)|(NULL))) BETWEEN (((((t0.c9)OR(rt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS BLOB) FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) AND (((((vt0.c1)) BETWEEN ((t0.c9)) AND ((rt0.c1)))))) ORDER BY ((((t0.c0)|(NULL))) BETWEEN (((((t0.c9)OR(rt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST((- (vt0.c1)) AS BLOB) FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))) AND (((((vt0.c1)) BETWEEN ((t0.c9)) AND ((rt0.c1)))))) WHERE ((~ (vt0.c1 COLLATE RTRIM))) ORDER BY ((((t0.c0)|(NULL))) BETWEEN (((((t0.c9)OR(rt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1)))*(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c9 END))) ORDER BY (((CAST(vt0.c1 AS INTEGER)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c9 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))*(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c9 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c9 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1)))*(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c9 END))) ORDER BY (((CAST(vt0.c1 AS INTEGER)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c9 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))*(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c9 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((CAST(vt0.c1 AS INTEGER)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c9 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE ((((+ (vt0.c1)))*(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 ELSE t0.c9 END))) ORDER BY (((CAST(vt0.c1 AS INTEGER)))>((CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c9 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c9 WHEN vt0.c0 THEN t0.c0 END)));
SELECT * FROM vt0, vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN (('7y' IN ())) AND (load_extension(vt1.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN (('7y' IN ())) AND (load_extension(vt1.c0, NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN (('7y' IN ())) AND (load_extension(vt1.c0, NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN (('7y' IN ())) AND (load_extension(vt1.c0, NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((LIKELY(vt0.c0)) BETWEEN (('7y' IN ())) AND (load_extension(vt1.c0, NULL))));
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (IFNULL(t0.c0 COLLATE RTRIM, ((t0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(t0.c0 COLLATE RTRIM, ((t0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (IFNULL(t0.c0 COLLATE RTRIM, ((t0.c0)IS NOT(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(t0.c0 COLLATE RTRIM, ((t0.c0)IS NOT(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (IFNULL(t0.c0 COLLATE RTRIM, ((t0.c0)IS NOT(vt0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST('XgN<2NOi' AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.973157102996675)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST('XgN<2NOi' AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.973157102996675)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST('XgN<2NOi' AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.973157102996675)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST('XgN<2NOi' AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.973157102996675)) ELSE CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CASE WHEN ((vt0.c0)&(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN CAST('XgN<2NOi' AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))OR(0.973157102996675)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) CROSS JOIN vt0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))|(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN vt1 ON '' WHERE ((NOT ((((rt0.c0, -2021662123, vt1.c0))>((t0.c0, vt1.c0, 0.38021422370881064)))))) ORDER BY CASE WHEN (((t0.c0))<=((vt0.c1))) THEN ((((((((rt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c2)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE RTRIM WHEN 0.8434383750082429 THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c1 AS REAL) END DESC, CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)OR(1.89455428E8)))AND(rt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0, -2021662123, vt1.c0))>((t0.c0, vt1.c0, 0.38021422370881064)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) CROSS JOIN vt0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))|(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN vt1 ON '' ORDER BY CASE WHEN (((t0.c0))<=((vt0.c1))) THEN ((((((((rt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c2)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE RTRIM WHEN 0.8434383750082429 THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c1 AS REAL) END DESC, CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)OR(1.89455428E8)))AND(rt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) CROSS JOIN vt0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))|(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN vt1 ON '' WHERE ((NOT ((((rt0.c0, -2021662123, vt1.c0))>((t0.c0, vt1.c0, 0.38021422370881064)))))) ORDER BY CASE WHEN (((t0.c0))<=((vt0.c1))) THEN ((((((((rt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c2)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE RTRIM WHEN 0.8434383750082429 THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c1 AS REAL) END DESC, CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)OR(1.89455428E8)))AND(rt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0, -2021662123, vt1.c0))>((t0.c0, vt1.c0, 0.38021422370881064)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) CROSS JOIN vt0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))|(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN vt1 ON '' ORDER BY CASE WHEN (((t0.c0))<=((vt0.c1))) THEN ((((((((rt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c2)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE RTRIM WHEN 0.8434383750082429 THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c1 AS REAL) END DESC, CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)OR(1.89455428E8)))AND(rt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) END ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((rt0.c0) BETWEEN (rt0.c2) AND (x'')))) CROSS JOIN vt0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))|(CAST(rt0.c1 AS REAL))) RIGHT OUTER JOIN vt1 ON '' WHERE ((NOT ((((rt0.c0, -2021662123, vt1.c0))>((t0.c0, vt1.c0, 0.38021422370881064)))))) ORDER BY CASE WHEN (((t0.c0))<=((vt0.c1))) THEN ((((((((rt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(rt0.c0)))AND(rt0.c2)) WHEN (+ (vt1.c0)) THEN vt0.c0 COLLATE RTRIM WHEN 0.8434383750082429 THEN ((vt0.c0) NOT NULL) ELSE CAST(vt0.c1 AS REAL) END DESC, CASE vt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)OR(1.89455428E8)))AND(rt0.c0)))AND(t0.c0)))OR(vt0.c0)) THEN LOWER(vt0.c0) END ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((rt0.c0)AND(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(vt1.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((rt0.c0)AND(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c0)AND(vt1.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CAST(((((rt0.c0)AND(vt1.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN (-1.075130532E9))) ORDER BY (('fD') NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN (-1.075130532E9))) IS TRUE)  as count FROM vt1 ORDER BY (('fD') NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN (-1.075130532E9))) ORDER BY (('fD') NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt1.c0)) IN (-1.075130532E9))) IS TRUE)  as count FROM vt1 ORDER BY (('fD') NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN (-1.075130532E9))) ORDER BY (('fD') NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((LOWER(DISTINCT t0.c9))AND((((t0.c9)) NOT BETWEEN ((vt0.c0)) AND ((t0.c9))))))OR(((t0.c0) NOT NULL))))AND(LIKE(vt0.c0, vt0.c0))))AND(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(DISTINCT t0.c9))AND((((t0.c9)) NOT BETWEEN ((vt0.c0)) AND ((t0.c9))))))OR(((t0.c0) NOT NULL))))AND(LIKE(vt0.c0, vt0.c0))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((LOWER(DISTINCT t0.c9))AND((((t0.c9)) NOT BETWEEN ((vt0.c0)) AND ((t0.c9))))))OR(((t0.c0) NOT NULL))))AND(LIKE(vt0.c0, vt0.c0))))AND(CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((((LOWER(DISTINCT t0.c9))AND((((t0.c9)) NOT BETWEEN ((vt0.c0)) AND ((t0.c9))))))OR(((t0.c0) NOT NULL))))AND(LIKE(vt0.c0, vt0.c0))))AND(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((((((((LOWER(DISTINCT t0.c9))AND((((t0.c9)) NOT BETWEEN ((vt0.c0)) AND ((t0.c9))))))OR(((t0.c0) NOT NULL))))AND(LIKE(vt0.c0, vt0.c0))))AND(CAST(t0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c1) BETWEEN (t0.c9) AND (0.06906762614894313)) IN ('f}Z*', ((vt1.c0)=(vt0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (t0.c9) AND (0.06906762614894313)) IN ('f}Z*', ((vt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c1) BETWEEN (t0.c9) AND (0.06906762614894313)) IN ('f}Z*', ((vt1.c0)=(vt0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (t0.c9) AND (0.06906762614894313)) IN ('f}Z*', ((vt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c1) BETWEEN (t0.c9) AND (0.06906762614894313)) IN ('f}Z*', ((vt1.c0)=(vt0.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt1 ON UPPER(vt1.c0 COLLATE BINARY) WHERE (x'') ORDER BY x'd7780cb2';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON UPPER(vt1.c0 COLLATE BINARY) ORDER BY x'd7780cb2');
SELECT * FROM rt0 INNER JOIN vt1 ON UPPER(vt1.c0 COLLATE BINARY) WHERE (x'') ORDER BY x'd7780cb2';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON UPPER(vt1.c0 COLLATE BINARY) ORDER BY x'd7780cb2');
SELECT * FROM rt0 INNER JOIN vt1 ON UPPER(vt1.c0 COLLATE BINARY) WHERE (x'') ORDER BY x'd7780cb2';
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)/(vt0.c0))) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt0.c0))) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)/(vt0.c0))) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt0.c0))) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)/(vt0.c0))) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (+ (CAST(t0.c9 AS NUMERIC))) LEFT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((t0.c0 IN (rt0.c0, vt0.c1)))) AND ((((vt1.c0)|(vt0.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE WHERE (9.89043066E8) ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)) IN ((t0.c9 IN ()), vt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((9.89043066E8) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (+ (CAST(t0.c9 AS NUMERIC))) LEFT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((t0.c0 IN (rt0.c0, vt0.c1)))) AND ((((vt1.c0)|(vt0.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)) IN ((t0.c9 IN ()), vt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1))) NOTNULL));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON (+ (CAST(t0.c9 AS NUMERIC))) LEFT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((t0.c0 IN (rt0.c0, vt0.c1)))) AND ((((vt1.c0)|(vt0.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE WHERE (9.89043066E8) ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)) IN ((t0.c9 IN ()), vt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((9.89043066E8) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (+ (CAST(t0.c9 AS NUMERIC))) LEFT OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN (((t0.c0 IN (rt0.c0, vt0.c1)))) AND ((((vt1.c0)|(vt0.c1))))) FULL OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (t0.c0)) IN ((t0.c9 IN ()), vt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((vt1.c0) BETWEEN (t0.c0) AND (rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))&(SQLITE_VERSION())));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((NULL)==(rt0.c0)))OR(((rt0.c2) IS TRUE))))AND((NOT (rt0.c2)))))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)==(rt0.c0)))OR(((rt0.c2) IS TRUE))))AND((NOT (rt0.c2)))))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((NULL)==(rt0.c0)))OR(((rt0.c2) IS TRUE))))AND((NOT (rt0.c2)))))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)==(rt0.c0)))OR(((rt0.c2) IS TRUE))))AND((NOT (rt0.c2)))))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((NULL)==(rt0.c0)))OR(((rt0.c2) IS TRUE))))AND((NOT (rt0.c2)))))AND(((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))))OR(rt0.c0)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0)IS NOT(x''))) ORDER BY CASE WHEN (('Ufꭎ7')*(vt0.c1)) THEN (((vt1.c0))<((t0.c0))) ELSE ((t0.c9) NOT BETWEEN (t0.c0) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)IS NOT(x''))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN (('Ufꭎ7')*(vt0.c1)) THEN (((vt1.c0))<((t0.c0))) ELSE ((t0.c9) NOT BETWEEN (t0.c0) AND (vt0.c1)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0)IS NOT(x''))) ORDER BY CASE WHEN (('Ufꭎ7')*(vt0.c1)) THEN (((vt1.c0))<((t0.c0))) ELSE ((t0.c9) NOT BETWEEN (t0.c0) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)IS NOT(x''))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN (('Ufꭎ7')*(vt0.c1)) THEN (((vt1.c0))<((t0.c0))) ELSE ((t0.c9) NOT BETWEEN (t0.c0) AND (vt0.c1)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((t0.c0)IS NOT(x''))) ORDER BY CASE WHEN (('Ufꭎ7')*(vt0.c1)) THEN (((vt1.c0))<((t0.c0))) ELSE ((t0.c9) NOT BETWEEN (t0.c0) AND (vt0.c1)) END ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c9 THEN t0.c9 END THEN ((t0.c9) IS FALSE) ELSE ((t0.c9) NOT BETWEEN (t0.c9) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c0  WHEN t0.c9 THEN t0.c9 END THEN ((t0.c9) IS FALSE) ELSE ((t0.c9) NOT BETWEEN (t0.c9) AND (x'')) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c9 THEN t0.c9 END THEN ((t0.c9) IS FALSE) ELSE ((t0.c9) NOT BETWEEN (t0.c9) AND (x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t0.c0  WHEN t0.c9 THEN t0.c9 END THEN ((t0.c9) IS FALSE) ELSE ((t0.c9) NOT BETWEEN (t0.c9) AND (x'')) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN CASE t0.c0  WHEN t0.c9 THEN t0.c9 END THEN ((t0.c9) IS FALSE) ELSE ((t0.c9) NOT BETWEEN (t0.c9) AND (x'')) END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON STRFTIME(ABS(vt0.c0), CAST(vt0.c0 AS INTEGER), (((((((((((('-1387623039')OR(vt0.c0)))OR(vt0.c0)))OR(0.6940750180189076)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1), (((t0.c0))<((vt1.c0)))) CROSS JOIN vt1 ON ((NULL COLLATE BINARY)>=(((vt1.c0)<=(vt1.c0)))) WHERE (((t0.c0 COLLATE RTRIM)<((NOT (vt0.c0))))) ORDER BY ((((vt0.c1)!=(vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, ((TYPEOF(DISTINCT vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE WHEN GLOB('C', vt1.c0) THEN (vt1.c0 IN (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c9)) THEN '	T_㴃!泽' WHEN (((t0.c0))<=((t0.c9))) THEN vt0.c1 WHEN ((vt0.c1)%(vt1.c0)) THEN ((t0.c9) IS FALSE) WHEN ((t0.c9)-(t0.c9)) THEN (vt1.c0 IN ()) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (0.2164683906167164)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON STRFTIME(ABS(vt0.c0), CAST(vt0.c0 AS INTEGER), (((((((((((('-1387623039')OR(vt0.c0)))OR(vt0.c0)))OR(0.6940750180189076)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1), (((t0.c0))<((vt1.c0)))) CROSS JOIN vt1 ON ((NULL COLLATE BINARY)>=(((vt1.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c1)!=(vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, ((TYPEOF(DISTINCT vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE WHEN GLOB('C', vt1.c0) THEN (vt1.c0 IN (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c9)) THEN '	T_㴃!泽' WHEN (((t0.c0))<=((t0.c9))) THEN vt0.c1 WHEN ((vt0.c1)%(vt1.c0)) THEN ((t0.c9) IS FALSE) WHEN ((t0.c9)-(t0.c9)) THEN (vt1.c0 IN ()) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (0.2164683906167164)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON STRFTIME(ABS(vt0.c0), CAST(vt0.c0 AS INTEGER), (((((((((((('-1387623039')OR(vt0.c0)))OR(vt0.c0)))OR(0.6940750180189076)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1), (((t0.c0))<((vt1.c0)))) CROSS JOIN vt1 ON ((NULL COLLATE BINARY)>=(((vt1.c0)<=(vt1.c0)))) WHERE (((t0.c0 COLLATE RTRIM)<((NOT (vt0.c0))))) ORDER BY ((((vt0.c1)!=(vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, ((TYPEOF(DISTINCT vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE WHEN GLOB('C', vt1.c0) THEN (vt1.c0 IN (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c9)) THEN '	T_㴃!泽' WHEN (((t0.c0))<=((t0.c9))) THEN vt0.c1 WHEN ((vt0.c1)%(vt1.c0)) THEN ((t0.c9) IS FALSE) WHEN ((t0.c9)-(t0.c9)) THEN (vt1.c0 IN ()) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (0.2164683906167164)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON STRFTIME(ABS(vt0.c0), CAST(vt0.c0 AS INTEGER), (((((((((((('-1387623039')OR(vt0.c0)))OR(vt0.c0)))OR(0.6940750180189076)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)), highlight(vt0.c0, vt0.c1, t0.c0, vt0.c1), (((t0.c0))<((vt1.c0)))) CROSS JOIN vt1 ON ((NULL COLLATE BINARY)>=(((vt1.c0)<=(vt1.c0)))) ORDER BY ((((vt0.c1)!=(vt1.c0))) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c0 AS REAL))) ASC, ((TYPEOF(DISTINCT vt1.c0)) IS FALSE) DESC  NULLS FIRST, CASE WHEN GLOB('C', vt1.c0) THEN (vt1.c0 IN (t0.c0)) WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c9)) THEN '	T_㴃!泽' WHEN (((t0.c0))<=((t0.c9))) THEN vt0.c1 WHEN ((vt0.c1)%(vt1.c0)) THEN ((t0.c9) IS FALSE) WHEN ((t0.c9)-(t0.c9)) THEN (vt1.c0 IN ()) ELSE ((NULL) NOT BETWEEN (vt0.c0) AND (0.2164683906167164)) END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c9) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN '1147487739' THEN t0.c9 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN '1147487739' THEN t0.c9 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c9) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN '1147487739' THEN t0.c9 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN '1147487739' THEN t0.c9 END)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (t0.c9) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN ((((t0.c0))=((t0.c0)))) AND (CASE WHEN '1147487739' THEN t0.c9 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c9  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c9 WHEN '660975390' THEN t0.c9 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c9  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c9 WHEN '660975390' THEN t0.c9 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c9  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c9 WHEN '660975390' THEN t0.c9 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c9  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c9 WHEN '660975390' THEN t0.c9 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((CASE t0.c9  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN t0.c9 WHEN '660975390' THEN t0.c9 WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c9 END IN ())) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE WHEN 1626370425 THEN vt0.c1 ELSE vt0.c0 END)<=(((vt0.c0)>>(vt0.c1))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (CAST(0.3564472229633663 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1626370425 THEN vt0.c1 ELSE vt0.c0 END)<=(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (CAST(0.3564472229633663 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((CASE WHEN 1626370425 THEN vt0.c1 ELSE vt0.c0 END)<=(((vt0.c0)>>(vt0.c1))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (CAST(0.3564472229633663 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 1626370425 THEN vt0.c1 ELSE vt0.c0 END)<=(((vt0.c0)>>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) BETWEEN (CAST(0.3564472229633663 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((CASE WHEN 1626370425 THEN vt0.c1 ELSE vt0.c0 END)<=(((vt0.c0)>>(vt0.c1))))) ORDER BY (((vt0.c1 IN ())) BETWEEN (CAST(0.3564472229633663 AS TEXT)) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) IS TRUE))%((+ (0.7885734746288531))))) ORDER BY CASE t0.c0  WHEN IFNULL(rt0.c1, rt0.c2) THEN ((t0.c0) ISNULL) ELSE (((rt0.c1))>((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))%((+ (0.7885734746288531))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE t0.c0  WHEN IFNULL(rt0.c1, rt0.c2) THEN ((t0.c0) ISNULL) ELSE (((rt0.c1))>((rt0.c0))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) IS TRUE))%((+ (0.7885734746288531))))) ORDER BY CASE t0.c0  WHEN IFNULL(rt0.c1, rt0.c2) THEN ((t0.c0) ISNULL) ELSE (((rt0.c1))>((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))%((+ (0.7885734746288531))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE t0.c0  WHEN IFNULL(rt0.c1, rt0.c2) THEN ((t0.c0) ISNULL) ELSE (((rt0.c1))>((rt0.c0))) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2) IS TRUE))%((+ (0.7885734746288531))))) ORDER BY CASE t0.c0  WHEN IFNULL(rt0.c1, rt0.c2) THEN ((t0.c0) ISNULL) ELSE (((rt0.c1))>((rt0.c0))) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) ISNULL))+(LIKELY(DISTINCT rt0.c0))) WHERE (830907419);
SELECT SUM(count) FROM (SELECT ALL ((830907419) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) ISNULL))+(LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) ISNULL))+(LIKELY(DISTINCT rt0.c0))) WHERE (830907419);
SELECT SUM(count) FROM (SELECT ALL ((830907419) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) ISNULL))+(LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c0) ISNULL))+(LIKELY(DISTINCT rt0.c0))) WHERE (830907419);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE ((NOT (((t0.c9)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c9)|(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE ((NOT (((t0.c9)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c9)|(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE ((NOT (((t0.c9)|(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c9) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((~ (t0.c0)))OR((('-907565254')OR(t0.c0)))))AND((t0.c9 IN (rt0.c2, t0.c0)))) WHERE ((('')==(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY 0.6458706890015159  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')=(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c9) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((~ (t0.c0)))OR((('-907565254')OR(t0.c0)))))AND((t0.c9 IN (rt0.c2, t0.c0)))) ORDER BY 0.6458706890015159  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c9) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((~ (t0.c0)))OR((('-907565254')OR(t0.c0)))))AND((t0.c9 IN (rt0.c2, t0.c0)))) WHERE ((('')==(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY 0.6458706890015159  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('')=(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c9) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((~ (t0.c0)))OR((('-907565254')OR(t0.c0)))))AND((t0.c9 IN (rt0.c2, t0.c0)))) ORDER BY 0.6458706890015159  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c9) NOT NULL) IN ()) FULL OUTER JOIN rt0 ON (((((~ (t0.c0)))OR((('-907565254')OR(t0.c0)))))AND((t0.c9 IN (rt0.c2, t0.c0)))) WHERE ((('')==(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY 0.6458706890015159  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN 0.6621601410586843 THEN ('' IN ()) WHEN ((rt0.c2)!=(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (vt1.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6621601410586843 THEN ('' IN ()) WHEN ((rt0.c2)<>(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (vt1.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN 0.6621601410586843 THEN ('' IN ()) WHEN ((rt0.c2)!=(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (vt1.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6621601410586843 THEN ('' IN ()) WHEN ((rt0.c2)<>(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (vt1.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN 0.6621601410586843 THEN ('' IN ()) WHEN ((rt0.c2)!=(vt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (vt1.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END ELSE CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END) ORDER BY ((rt0.c0) IS FALSE) COLLATE BINARY;
SELECT ALL * FROM t0 WHERE ((((t0.c0)GLOB(NULL)) IN ())) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER))) AND (((- (t0.c0)), -9.97837006E8, ((t0.c0)IS NOT(t0.c9)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(NULL)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER))) AND (((- (t0.c0)), -9.97837006E8, ((t0.c0)IS NOT(t0.c9)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c0)GLOB(NULL)) IN ())) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER))) AND (((- (t0.c0)), -9.97837006E8, ((t0.c0)IS NOT(t0.c9)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(NULL)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER))) AND (((- (t0.c0)), -9.97837006E8, ((t0.c0)IS NOT(t0.c9)))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c0)GLOB(NULL)) IN ())) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER))) AND (((- (t0.c0)), -9.97837006E8, ((t0.c0)IS NOT(t0.c9)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(2.031662745E9)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((vt1.c0)AND(t0.c9)))OR(vt0.c1)))) WHERE ((NOT ((((t0.c9))>((t0.c9))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c9))>((t0.c9)))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(2.031662745E9)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((vt1.c0)AND(t0.c9)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(2.031662745E9)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((vt1.c0)AND(t0.c9)))OR(vt0.c1)))) WHERE ((NOT ((((t0.c9))>((t0.c9))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c9))>((t0.c9)))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(2.031662745E9)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((vt1.c0)AND(t0.c9)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((LOWER(2.031662745E9)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((vt1.c0)AND(t0.c9)))OR(vt0.c1)))) WHERE ((NOT ((((t0.c9))>((t0.c9))))));
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (CAST(t0.c9 AS INTEGER))) LEFT OUTER JOIN t0 ON (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT CASE vt1.c0  WHEN rt0.c2 THEN t0.c9 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t0.c9 ELSE 's섋' END) WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (CAST(t0.c9 AS INTEGER))) LEFT OUTER JOIN t0 ON (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT CASE vt1.c0  WHEN rt0.c2 THEN t0.c9 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t0.c9 ELSE 's섋' END));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (CAST(t0.c9 AS INTEGER))) LEFT OUTER JOIN t0 ON (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT CASE vt1.c0  WHEN rt0.c2 THEN t0.c9 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t0.c9 ELSE 's섋' END) WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((rt0.c1) BETWEEN (t0.c0) AND (vt1.c0)) ELSE CASE WHEN vt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (CAST(t0.c9 AS INTEGER))) LEFT OUTER JOIN t0 ON (((SQLITE_SOURCE_ID()))==((CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END))) RIGHT OUTER JOIN vt0 ON LOWER(DISTINCT CASE vt1.c0  WHEN rt0.c2 THEN t0.c9 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN t0.c9 ELSE 's섋' END));
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOT BETWEEN (x'') AND (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (t0.c9) ORDER BY (((((t0.c9)AND(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c9)AND(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c9) ORDER BY (((((t0.c9)AND(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c9) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((t0.c9)AND(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c9) ORDER BY (((((t0.c9)AND(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((0x3852fab)-((NOT (rt0.c2))))) ORDER BY ((CAST(NULL AS TEXT)) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST, (((rt0.c0 IN ()))IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0X3852fab)-((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS TEXT)) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST, (((rt0.c0 IN ()))IS NOT(NULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((0x3852fab)-((NOT (rt0.c2))))) ORDER BY ((CAST(NULL AS TEXT)) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST, (((rt0.c0 IN ()))IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0X3852fab)-((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS TEXT)) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST, (((rt0.c0 IN ()))IS NOT(NULL))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((0x3852fab)-((NOT (rt0.c2))))) ORDER BY ((CAST(NULL AS TEXT)) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (CAST(rt0.c2 AS REAL))) DESC  NULLS LAST, (((rt0.c0 IN ()))IS NOT(NULL))  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0 INNER JOIN rt0 ON COALESCE((NOT (rt0.c0)), x'', (- (vt0.c0)), 0.412181154139703) WHERE ((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 INNER JOIN rt0 ON COALESCE((NOT (rt0.c0)), x'', (- (vt0.c0)), 0.412181154139703));
SELECT ALL * FROM vt1, t0, vt0 INNER JOIN rt0 ON COALESCE((NOT (rt0.c0)), x'', (- (vt0.c0)), 0.412181154139703) WHERE ((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0 INNER JOIN rt0 ON COALESCE((NOT (rt0.c0)), x'', (- (vt0.c0)), 0.412181154139703));
SELECT ALL * FROM vt1, t0, vt0 INNER JOIN rt0 ON COALESCE((NOT (rt0.c0)), x'', (- (vt0.c0)), 0.412181154139703) WHERE ((((((rt0.c1)OR(rt0.c1)))AND(t0.c0)) IN ()));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CHANGES() AS INTEGER)) ORDER BY PRINTF(IFNULL(vt1.c0, vt1.c0), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)GLOB(0.1583143907961212)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHANGES() AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY PRINTF(IFNULL(vt1.c0, vt1.c0), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)GLOB(0.1583143907961212))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CHANGES() AS INTEGER)) ORDER BY PRINTF(IFNULL(vt1.c0, vt1.c0), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)GLOB(0.1583143907961212)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CHANGES() AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY PRINTF(IFNULL(vt1.c0, vt1.c0), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)GLOB(0.1583143907961212))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CHANGES() AS INTEGER)) ORDER BY PRINTF(IFNULL(vt1.c0, vt1.c0), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c2)GLOB(0.1583143907961212)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(rt0.c2)) IS TRUE) CROSS JOIN vt1 ON rt0.c2 CROSS JOIN rt0 ON (((((vt0.c0)-(rt0.c0))))<=((CAST(t0.c0 AS NUMERIC)))) WHERE ('830907419') ORDER BY (((0.6480798372307481)) BETWEEN ((((((vt1.c0)OR(t0.c0)))OR(rt0.c1)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS FIRST, (vt0.c0 IN (CASE vt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CASE WHEN rt0.c0 COLLATE BINARY THEN (rt0.c0 IN (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (('830907419') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(rt0.c2)) IS TRUE) CROSS JOIN vt1 ON rt0.c2 CROSS JOIN rt0 ON (((((vt0.c0)-(rt0.c0))))<=((CAST(t0.c0 AS NUMERIC)))) ORDER BY (((0.6480798372307481)) BETWEEN ((((((vt1.c0)OR(t0.c0)))OR(rt0.c1)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS FIRST, (vt0.c0 IN (CASE vt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CASE WHEN rt0.c0 COLLATE BINARY THEN (rt0.c0 IN (vt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(rt0.c2)) IS TRUE) CROSS JOIN vt1 ON rt0.c2 CROSS JOIN rt0 ON (((((vt0.c0)-(rt0.c0))))<=((CAST(t0.c0 AS NUMERIC)))) WHERE ('830907419') ORDER BY (((0.6480798372307481)) BETWEEN ((((((vt1.c0)OR(t0.c0)))OR(rt0.c1)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS FIRST, (vt0.c0 IN (CASE vt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CASE WHEN rt0.c0 COLLATE BINARY THEN (rt0.c0 IN (vt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL (('830907419') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(rt0.c2)) IS TRUE) CROSS JOIN vt1 ON rt0.c2 CROSS JOIN rt0 ON (((((vt0.c0)-(rt0.c0))))<=((CAST(t0.c0 AS NUMERIC)))) ORDER BY (((0.6480798372307481)) BETWEEN ((((((vt1.c0)OR(t0.c0)))OR(rt0.c1)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS FIRST, (vt0.c0 IN (CASE vt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CASE WHEN rt0.c0 COLLATE BINARY THEN (rt0.c0 IN (vt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((ABS(rt0.c2)) IS TRUE) CROSS JOIN vt1 ON rt0.c2 CROSS JOIN rt0 ON (((((vt0.c0)-(rt0.c0))))<=((CAST(t0.c0 AS NUMERIC)))) WHERE ('830907419') ORDER BY (((0.6480798372307481)) BETWEEN ((((((vt1.c0)OR(t0.c0)))OR(rt0.c1)))) AND ((CAST(vt0.c0 AS REAL))))  NULLS FIRST, (vt0.c0 IN (CASE vt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN vt0.c0 THEN x'' END)) DESC  NULLS LAST, CASE WHEN rt0.c0 COLLATE BINARY THEN (rt0.c0 IN (vt0.c1)) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((CHAR(rt0.c2)))>=((0.46534941097703864))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((CHAR(rt0.c2)))>=((0.46534941097703864))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((CHAR(rt0.c2)))>=((0.46534941097703864))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((CHAR(rt0.c2)))>=((0.46534941097703864))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((CHAR(rt0.c2)))>=((0.46534941097703864))) DESC;
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT 0.8748328966845415, rt0.c2) ELSE t0.c0 END INNER JOIN vt0 ON vt1.c0 COLLATE BINARY LEFT OUTER JOIN rt0 ON CAST(((vt0.c0)<<(rt0.c2)) AS TEXT) WHERE (GLOB(CASE WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c9)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(CASE WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c9)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT 0.8748328966845415, rt0.c2) ELSE t0.c0 END INNER JOIN vt0 ON vt1.c0 COLLATE BINARY LEFT OUTER JOIN rt0 ON CAST(((vt0.c0)<<(rt0.c2)) AS TEXT) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT 0.8748328966845415, rt0.c2) ELSE t0.c0 END INNER JOIN vt0 ON vt1.c0 COLLATE BINARY LEFT OUTER JOIN rt0 ON CAST(((vt0.c0)<<(rt0.c2)) AS TEXT) WHERE (GLOB(CASE WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c9)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(CASE WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c9)))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT 0.8748328966845415, rt0.c2) ELSE t0.c0 END INNER JOIN vt0 ON vt1.c0 COLLATE BINARY LEFT OUTER JOIN rt0 ON CAST(((vt0.c0)<<(rt0.c2)) AS TEXT) ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt1 INNER JOIN t0 ON CASE ((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT 0.8748328966845415, rt0.c2) ELSE t0.c0 END INNER JOIN vt0 ON vt1.c0 COLLATE BINARY LEFT OUTER JOIN rt0 ON CAST(((vt0.c0)<<(rt0.c2)) AS TEXT) WHERE (GLOB(CASE WHEN rt0.c0 THEN t0.c9 ELSE t0.c0 END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (t0.c9)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt1, t0 INNER JOIN rt0 ON CASE WHEN ((NULL)>>(rt0.c0)) THEN (((rt0.c1)) BETWEEN (('-1975462177')) AND ((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE ('-1112876316') ORDER BY (((x'204e', rt0.c0, t0.c9)) BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END, t0.c9 COLLATE BINARY, 0.9597265628058377)) AND ((((((((((rt0.c0)AND(t0.c0)))AND(vt1.c0)))OR(NULL)))AND(rt0.c0)), (~ (t0.c0)), vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1112876316') IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON CASE WHEN ((NULL)>>(rt0.c0)) THEN (((rt0.c1)) BETWEEN (('-1975462177')) AND ((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END ORDER BY (((x'204e', rt0.c0, t0.c9)) BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END, t0.c9 COLLATE BINARY, 0.9597265628058377)) AND ((((((((((rt0.c0)AND(t0.c0)))AND(vt1.c0)))OR(NULL)))AND(rt0.c0)), (~ (t0.c0)), vt1.c0 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM vt1, t0 INNER JOIN rt0 ON CASE WHEN ((NULL)>>(rt0.c0)) THEN (((rt0.c1)) BETWEEN (('-1975462177')) AND ((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE ('-1112876316') ORDER BY (((x'204e', rt0.c0, t0.c9)) BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END, t0.c9 COLLATE BINARY, 0.9597265628058377)) AND ((((((((((rt0.c0)AND(t0.c0)))AND(vt1.c0)))OR(NULL)))AND(rt0.c0)), (~ (t0.c0)), vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1112876316') IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON CASE WHEN ((NULL)>>(rt0.c0)) THEN (((rt0.c1)) BETWEEN (('-1975462177')) AND ((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END ORDER BY (((x'204e', rt0.c0, t0.c9)) BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END, t0.c9 COLLATE BINARY, 0.9597265628058377)) AND ((((((((((rt0.c0)AND(t0.c0)))AND(vt1.c0)))OR(NULL)))AND(rt0.c0)), (~ (t0.c0)), vt1.c0 COLLATE BINARY)))  NULLS LAST);
SELECT * FROM vt1, t0 INNER JOIN rt0 ON CASE WHEN ((NULL)>>(rt0.c0)) THEN (((rt0.c1)) BETWEEN (('-1975462177')) AND ((rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0)) END WHERE ('-1112876316') ORDER BY (((x'204e', rt0.c0, t0.c9)) BETWEEN ((CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END, t0.c9 COLLATE BINARY, 0.9597265628058377)) AND ((((((((((rt0.c0)AND(t0.c0)))AND(vt1.c0)))OR(NULL)))AND(rt0.c0)), (~ (t0.c0)), vt1.c0 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT * FROM rt0, vt0, vt1, t0 WHERE ((vt0.c0 IN ()));
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND((+ (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN 1224344542 WHEN t0.c0 THEN t0.c9 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) ORDER BY vt1.c0  NULLS LAST, ((((((((rt0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND((+ (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN 1224344542 WHEN t0.c0 THEN t0.c9 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY vt1.c0  NULLS LAST, ((((((((rt0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND((+ (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN 1224344542 WHEN t0.c0 THEN t0.c9 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) ORDER BY vt1.c0  NULLS LAST, ((((((((rt0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND((+ (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN 1224344542 WHEN t0.c0 THEN t0.c9 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY vt1.c0  NULLS LAST, ((((((((rt0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)))AND((+ (rt0.c2)))))OR(CASE WHEN rt0.c0 THEN 1224344542 WHEN t0.c0 THEN t0.c9 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) ORDER BY vt1.c0  NULLS LAST, ((((((((rt0.c2)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT ((t0.c9)*('')))) ORDER BY ((SQLITE_VERSION())AND(ABS(t0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c9)*('')))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((SQLITE_VERSION())AND(ABS(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT ((t0.c9)*('')))) ORDER BY ((SQLITE_VERSION())AND(ABS(t0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t0.c9)*('')))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((SQLITE_VERSION())AND(ABS(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER(DISTINCT ((t0.c9)*('')))) ORDER BY ((SQLITE_VERSION())AND(ABS(t0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((((((((((((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))AND(LIKELY(DISTINCT rt0.c1))))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c2)))AND((NOT (rt0.c0)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)))AND((((vt0.c1))!=((rt0.c0)))))) ORDER BY (((~ (vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))AND(LIKELY(DISTINCT rt0.c1))))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c2)))AND((NOT (rt0.c0)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)))AND((((vt0.c1))<>((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1 ORDER BY (((~ (vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((((((((((((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))AND(LIKELY(DISTINCT rt0.c1))))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c2)))AND((NOT (rt0.c0)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)))AND((((vt0.c1))!=((rt0.c0)))))) ORDER BY (((~ (vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))AND(LIKELY(DISTINCT rt0.c1))))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c2)))AND((NOT (rt0.c0)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)))AND((((vt0.c1))<>((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1 ORDER BY (((~ (vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN vt1 WHERE (((((((((((((((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))AND(LIKELY(DISTINCT rt0.c1))))OR(ABS(DISTINCT rt0.c1))))OR(rt0.c2)))AND((NOT (rt0.c0)))))OR(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END)))AND((((vt0.c1))!=((rt0.c0)))))) ORDER BY (((~ (vt0.c0))) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN t0.c0 ELSE vt0.c0 END) BETWEEN (t0.c9) AND (((0.05412584725746983) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE BINARY WHERE (CASE WHEN ((rt0.c0)<(rt0.c2)) THEN t0.c0 COLLATE BINARY END) ORDER BY ((vt0.c0)*(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c2)) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN t0.c0 ELSE vt0.c0 END) BETWEEN (t0.c9) AND (((0.05412584725746983) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE BINARY ORDER BY ((vt0.c0)*(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN t0.c0 ELSE vt0.c0 END) BETWEEN (t0.c9) AND (((0.05412584725746983) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE BINARY WHERE (CASE WHEN ((rt0.c0)<(rt0.c2)) THEN t0.c0 COLLATE BINARY END) ORDER BY ((vt0.c0)*(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)<(rt0.c2)) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN t0.c0 ELSE vt0.c0 END) BETWEEN (t0.c9) AND (((0.05412584725746983) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) FULL OUTER JOIN t0 ON LOWER(vt0.c0) COLLATE BINARY ORDER BY ((vt0.c0)*(rt0.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (((vt1.c0)LIKE(((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((TRIM(rt0.c2, rt0.c1)) IS TRUE) ASC, CAST(TRIM(rt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((TRIM(rt0.c2, rt0.c1)) IS TRUE) ASC, CAST(TRIM(rt0.c0) AS REAL) DESC);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (((vt1.c0)LIKE(((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((TRIM(rt0.c2, rt0.c1)) IS TRUE) ASC, CAST(TRIM(rt0.c0) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)LIKE(((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((TRIM(rt0.c2, rt0.c1)) IS TRUE) ASC, CAST(TRIM(rt0.c0) AS REAL) DESC);
SELECT COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (((vt1.c0)LIKE(((rt0.c1) BETWEEN (NULL) AND (t0.c0))))) ORDER BY ((TRIM(rt0.c2, rt0.c1)) IS TRUE) ASC, CAST(TRIM(rt0.c0) AS REAL) DESC;
SELECT COUNT(*) FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c9)) AND ((rt0.c0)))) AND (t0.c0)) WHERE (x'3c92') ORDER BY (NOT (((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3c92') IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c9)) AND ((rt0.c0)))) AND (t0.c0)) ORDER BY (NOT (((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c9)) AND ((rt0.c0)))) AND (t0.c0)) WHERE (x'3c92') ORDER BY (NOT (((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3c92') IS TRUE)  as count FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c9)) AND ((rt0.c0)))) AND (t0.c0)) ORDER BY (NOT (((vt1.c0) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1 LEFT OUTER JOIN rt0 ON (((t0.c0 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c9)) AND ((rt0.c0)))) AND (t0.c0)) WHERE (x'3c92') ORDER BY (NOT (((vt1.c0) NOTNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1)OR(((NULL) NOT NULL))))AND(vt0.c0))) ORDER BY (((CAST(vt0.c1 AS REAL)))<(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))), ((((-8.79377583E8)>=(vt0.c1)))<<(((vt0.c1)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((NULL) NOT NULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CAST(vt0.c1 AS REAL)))<(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))), ((((-8.79377583E8)>=(vt0.c1)))<<(((vt0.c1)OR(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1)OR(((NULL) NOT NULL))))AND(vt0.c0))) ORDER BY (((CAST(vt0.c1 AS REAL)))<(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))), ((((-8.79377583E8)>=(vt0.c1)))<<(((vt0.c1)OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((NULL) NOT NULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((CAST(vt0.c1 AS REAL)))<(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))), ((((-8.79377583E8)>=(vt0.c1)))<<(((vt0.c1)OR(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1)OR(((NULL) NOT NULL))))AND(vt0.c0))) ORDER BY (((CAST(vt0.c1 AS REAL)))<(((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))), ((((-8.79377583E8)>=(vt0.c1)))<<(((vt0.c1)OR(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c2, rt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((t0.c9)OR(t0.c9)))OR(t0.c0)), x'')) AND ((((vt0.c1)<(t0.c0)), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)), (((vt0.c1, t0.c0, rt0.c0, vt1.c0, vt1.c0))>((vt0.c0, t0.c9, rt0.c0, t0.c0, rt0.c0))))))) ORDER BY CASE ((t0.c9)-(t0.c9))  WHEN ((vt0.c1)GLOB(rt0.c1)) THEN ((vt1.c0) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((t0.c9)OR(t0.c9)))OR(t0.c0)), x'')) AND ((((vt0.c1)<(t0.c0)), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)), (((vt0.c1, t0.c0, rt0.c0, vt1.c0, vt1.c0))>((vt0.c0, t0.c9, rt0.c0, t0.c0, rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY CASE ((t0.c9)-(t0.c9))  WHEN ((vt0.c1)GLOB(rt0.c1)) THEN ((vt1.c0) NOT NULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c2, rt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((t0.c9)OR(t0.c9)))OR(t0.c0)), x'')) AND ((((vt0.c1)<(t0.c0)), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)), (((vt0.c1, t0.c0, rt0.c0, vt1.c0, vt1.c0))>((vt0.c0, t0.c9, rt0.c0, t0.c0, rt0.c0))))))) ORDER BY CASE ((t0.c9)-(t0.c9))  WHEN ((vt0.c1)GLOB(rt0.c1)) THEN ((vt1.c0) NOT NULL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((t0.c9)OR(t0.c9)))OR(t0.c0)), x'')) AND ((((vt0.c1)<(t0.c0)), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)), (((vt0.c1, t0.c0, rt0.c0, vt1.c0, vt1.c0))>((vt0.c0, t0.c9, rt0.c0, t0.c0, rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0, vt1 ORDER BY CASE ((t0.c9)-(t0.c9))  WHEN ((vt0.c1)GLOB(rt0.c1)) THEN ((vt1.c0) NOT NULL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1 WHERE ((((rt0.c2, rt0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM, ((((t0.c9)OR(t0.c9)))OR(t0.c0)), x'')) AND ((((vt0.c1)<(t0.c0)), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)), (((vt0.c1, t0.c0, rt0.c0, vt1.c0, vt1.c0))>((vt0.c0, t0.c9, rt0.c0, t0.c0, rt0.c0))))))) ORDER BY CASE ((t0.c9)-(t0.c9))  WHEN ((vt0.c1)GLOB(rt0.c1)) THEN ((vt1.c0) NOT NULL) END DESC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), (((0.004145095365796103))=((vt1.c0))), (((vt0.c0, x'0912', vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))) AND ((vt1.c0 COLLATE NOCASE, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL)))) WHERE (((((vt0.c0)>(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), (((0.004145095365796103))=((vt1.c0))), (((vt0.c0, x'0912', vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))) AND ((vt1.c0 COLLATE NOCASE, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), (((0.004145095365796103))=((vt1.c0))), (((vt0.c0, x'0912', vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))) AND ((vt1.c0 COLLATE NOCASE, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL)))) WHERE (((((vt0.c0)>(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), (((0.004145095365796103))=((vt1.c0))), (((vt0.c0, x'0912', vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))) AND ((vt1.c0 COLLATE NOCASE, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((+ (vt0.c1)), (((0.004145095365796103))=((vt1.c0))), (((vt0.c0, x'0912', vt0.c1))<>((vt0.c0, vt0.c1, vt0.c1))))) AND ((vt1.c0 COLLATE NOCASE, (NOT (vt0.c1)), CAST(vt0.c1 AS REAL)))) WHERE (((((vt0.c0)>(vt0.c1))) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (LIKELY((vt1.c0 IN (rt0.c2, '-1608195388')))) ORDER BY ((653050042)/(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.c0 IN (rt0.c2, '-1608195388')))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((653050042)/(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (LIKELY((vt1.c0 IN (rt0.c2, '-1608195388')))) ORDER BY ((653050042)/(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY((vt1.c0 IN (rt0.c2, '-1608195388')))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((653050042)/(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (LIKELY((vt1.c0 IN (rt0.c2, '-1608195388')))) ORDER BY ((653050042)/(((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))) DESC;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9 IN ())) NOT BETWEEN (((t0.c0)>>(t0.c9))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9 IN ())) NOT BETWEEN (((t0.c0)>>(t0.c9))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9 IN ())) NOT BETWEEN (((t0.c0)>>(t0.c9))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9 IN ())) NOT BETWEEN (((t0.c0)>>(t0.c9))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c9 IN ())) NOT BETWEEN (((t0.c0)>>(t0.c9))) AND ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c1))<=((vt0.c0))))) ORDER BY ((((CASE vt0.c1  WHEN 0.7761516059158603 THEN vt0.c1 END)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND((((('-1328604004')OR(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((vt0.c1))<=((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c1  WHEN 0.7761516059158603 THEN vt0.c1 END)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND((((('-1328604004')OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c1))<=((vt0.c0))))) ORDER BY ((((CASE vt0.c1  WHEN 0.7761516059158603 THEN vt0.c1 END)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND((((('-1328604004')OR(vt0.c1)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((vt0.c1))<=((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c1  WHEN 0.7761516059158603 THEN vt0.c1 END)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND((((('-1328604004')OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((vt0.c1))<=((vt0.c0))))) ORDER BY ((((CASE vt0.c1  WHEN 0.7761516059158603 THEN vt0.c1 END)AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))AND((((('-1328604004')OR(vt0.c1)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN 0.46152862284358853 END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c1) NOT BETWEEN ('⎕''ET') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN 0.46152862284358853 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c1) NOT BETWEEN ('⎕''ET') AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN 0.46152862284358853 END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c1) NOT BETWEEN ('⎕''ET') AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN 0.46152862284358853 END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c1) NOT BETWEEN ('⎕''ET') AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN 0.46152862284358853 END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c1) NOT BETWEEN ('⎕''ET') AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN '' WHEN t0.c9 THEN t0.c9 WHEN t0.c9 THEN t0.c0 ELSE t0.c0 END AS TEXT)) ORDER BY (((((t0.c0 IN ()))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((((t0.c9))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN '' WHEN t0.c9 THEN t0.c9 WHEN t0.c9 THEN t0.c0 ELSE t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((((t0.c9))>=((t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN '' WHEN t0.c9 THEN t0.c9 WHEN t0.c9 THEN t0.c0 ELSE t0.c0 END AS TEXT)) ORDER BY (((((t0.c0 IN ()))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((((t0.c9))>=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t0.c0 THEN '' WHEN t0.c9 THEN t0.c9 WHEN t0.c9 THEN t0.c0 ELSE t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0 IN ()))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((((t0.c9))>=((t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN '' WHEN t0.c9 THEN t0.c9 WHEN t0.c9 THEN t0.c0 ELSE t0.c0 END AS TEXT)) ORDER BY (((((t0.c0 IN ()))OR((((((((('')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR((((t0.c9))>=((t0.c0)))));
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC);
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC);
SELECT * FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ())) NOT NULL) WHERE ((((+ (rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) ORDER BY CAST((- (t0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ())) NOT NULL) ORDER BY CAST((- (t0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ())) NOT NULL) WHERE ((((+ (rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) ORDER BY CAST((- (t0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ())) NOT NULL) ORDER BY CAST((- (t0.c0)) AS REAL));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0) IS FALSE) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c2 IN ())) NOT NULL) WHERE ((((+ (rt0.c1)))IS(CAST(rt0.c0 AS REAL)))) ORDER BY CAST((- (t0.c0)) AS REAL);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((t0.c9) NOT NULL) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c9)))>=(((vt0.c0)>('-2037360187')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c9)))>=(((vt0.c0)>('-2037360187')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((t0.c9) NOT NULL) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c9)))>=(((vt0.c0)>('-2037360187')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c9) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c9)))>=(((vt0.c0)>('-2037360187')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((t0.c9) NOT NULL) COLLATE BINARY) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c9)))>=(((vt0.c0)>('-2037360187')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CAST(vt0.c0 AS REAL))) WHERE (LIKELY((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CAST(vt0.c0 AS REAL))) WHERE (LIKELY((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CAST(vt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt1.c0 IN (vt1.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))OR(CAST(vt0.c0 AS REAL))) WHERE (LIKELY((NOT (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (json_patch(((t0.c9) BETWEEN (vt0.c1) AND (t0.c0)), x'b3a1'));
SELECT SUM(count) FROM (SELECT ((json_patch(((t0.c9) BETWEEN (vt0.c1) AND (t0.c0)), x'b3a1')) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (json_patch(((t0.c9) BETWEEN (vt0.c1) AND (t0.c0)), x'b3a1'));
SELECT SUM(count) FROM (SELECT ((json_patch(((t0.c9) BETWEEN (vt0.c1) AND (t0.c0)), x'b3a1')) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (json_patch(((t0.c9) BETWEEN (vt0.c1) AND (t0.c0)), x'b3a1'));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ABS(t0.c9), t0.c9) RIGHT OUTER JOIN rt0 ON HEX(CAST(t0.c0 AS REAL)) RIGHT OUTER JOIN t0 ON CAST(STRFTIME(t0.c9, NULL, vt1.c0, t0.c0, vt0.c1) AS INTEGER) WHERE (((rt0.c1)>(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ABS(t0.c9), t0.c9) RIGHT OUTER JOIN rt0 ON HEX(CAST(t0.c0 AS REAL)) RIGHT OUTER JOIN t0 ON CAST(STRFTIME(t0.c9, NULL, vt1.c0, t0.c0, vt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ABS(t0.c9), t0.c9) RIGHT OUTER JOIN rt0 ON HEX(CAST(t0.c0 AS REAL)) RIGHT OUTER JOIN t0 ON CAST(STRFTIME(t0.c9, NULL, vt1.c0, t0.c0, vt0.c1) AS INTEGER) WHERE (((rt0.c1)>(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ABS(t0.c9), t0.c9) RIGHT OUTER JOIN rt0 ON HEX(CAST(t0.c0 AS REAL)) RIGHT OUTER JOIN t0 ON CAST(STRFTIME(t0.c9, NULL, vt1.c0, t0.c0, vt0.c1) AS INTEGER));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c2)<<(''))) NOT BETWEEN ((+ (rt0.c2))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(''))) NOT BETWEEN ((+ (rt0.c2))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c2)<<(''))) NOT BETWEEN ((+ (rt0.c2))) AND ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(''))) NOT BETWEEN ((+ (rt0.c2))) AND ((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((rt0.c2)<<(''))) NOT BETWEEN ((+ (rt0.c2))) AND ((t0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0)IS(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0)IS(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0)IS(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0)IS(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ORDER BY (((vt1.c0 IN ()))<=(((vt1.c0)IS(vt1.c0)))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE BINARY WHEN (NOT (vt1.c0)) THEN 0.3436428023398077 WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE BINARY WHEN (NOT (vt1.c0)) THEN 0.3436428023398077 WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE BINARY WHEN (NOT (vt1.c0)) THEN 0.3436428023398077 WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE BINARY WHEN (NOT (vt1.c0)) THEN 0.3436428023398077 WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY CASE WHEN TRIM(vt1.c0) THEN vt1.c0 COLLATE BINARY WHEN (NOT (vt1.c0)) THEN 0.3436428023398077 WHEN CAST(vt1.c0 AS INTEGER) THEN CASE WHEN vt1.c0 THEN vt1.c0 END ELSE ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-1950333228');
SELECT SUM(count) FROM (SELECT ALL (('-1950333228') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-1950333228');
SELECT SUM(count) FROM (SELECT ALL (('-1950333228') IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('-1950333228');
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((- (vt0.c1)))+(((t0.c9)OR(t0.c0)))) WHERE ((((t0.c9 IN (vt0.c1)))LIKE(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9 IN (vt0.c1)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((- (vt0.c1)))+(((t0.c9)OR(t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((- (vt0.c1)))+(((t0.c9)OR(t0.c0)))) WHERE ((((t0.c9 IN (vt0.c1)))LIKE(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c9 IN (vt0.c1)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((- (vt0.c1)))+(((t0.c9)OR(t0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((- (vt0.c1)))+(((t0.c9)OR(t0.c0)))) WHERE ((((t0.c9 IN (vt0.c1)))LIKE(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<<(((rt0.c1)IS NOT(rt0.c1))))) ORDER BY ((x'')<<(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<<(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'')<<(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<<(((rt0.c1)IS NOT(rt0.c1))))) ORDER BY ((x'')<<(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<<(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'')<<(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2))))<<(((rt0.c1)IS NOT(rt0.c1))))) ORDER BY ((x'')<<(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 COLLATE BINARY))>((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) RIGHT OUTER JOIN vt0 ON (((rt0.c2)>>(t0.c9)) IN ()) CROSS JOIN t0 ON (((((rt0.c2) NOT BETWEEN (0Xffffffffa2293b1e) AND (rt0.c0))))<>(((~ (t0.c0))))) WHERE (IFNULL(((((vt0.c1)OR(rt0.c0)))AND(t0.c0)), vt0.c1)) ORDER BY UPPER(t0.c9);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt0.c1)OR(rt0.c0)))AND(t0.c0)), vt0.c1)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 COLLATE BINARY))>((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) RIGHT OUTER JOIN vt0 ON (((rt0.c2)>>(t0.c9)) IN ()) CROSS JOIN t0 ON (((((rt0.c2) NOT BETWEEN (0xffffffffa2293b1e) AND (rt0.c0))))<>(((~ (t0.c0))))) ORDER BY UPPER(t0.c9));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 COLLATE BINARY))>((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) RIGHT OUTER JOIN vt0 ON (((rt0.c2)>>(t0.c9)) IN ()) CROSS JOIN t0 ON (((((rt0.c2) NOT BETWEEN (0Xffffffffa2293b1e) AND (rt0.c0))))<>(((~ (t0.c0))))) WHERE (IFNULL(((((vt0.c1)OR(rt0.c0)))AND(t0.c0)), vt0.c1)) ORDER BY UPPER(t0.c9);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((vt0.c1)OR(rt0.c0)))AND(t0.c0)), vt0.c1)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 COLLATE BINARY))>((((vt0.c1) BETWEEN (t0.c0) AND (rt0.c0))))) RIGHT OUTER JOIN vt0 ON (((rt0.c2)>>(t0.c9)) IN ()) CROSS JOIN t0 ON (((((rt0.c2) NOT BETWEEN (0xffffffffa2293b1e) AND (rt0.c0))))<>(((~ (t0.c0))))) ORDER BY UPPER(t0.c9));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY IFNULL(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY IFNULL(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY IFNULL(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY IFNULL(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (((vt0.c1, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, vt0.c1, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))));
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)/(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)/(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)/(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c1)/(vt0.c0))) IS TRUE));
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(rt0.c1, 0.762511358142561) IN ())) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(rt0.c1, 0.762511358142561) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(rt0.c1, 0.762511358142561) IN ())) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(rt0.c1, 0.762511358142561) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((LIKELIHOOD(rt0.c1, 0.762511358142561) IN ())) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (t0.c0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.8066317209732164 ELSE vt0.c1 END)<=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.8066317209732164 ELSE vt0.c1 END)<=(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.8066317209732164 ELSE vt0.c1 END)<=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN 0.8066317209732164 ELSE vt0.c1 END)<=(vt1.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CASE WHEN vt0.c0 THEN 0.8066317209732164 ELSE vt0.c1 END)<=(vt1.c0)));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('1047:1945 ') ORDER BY (vt0.c1 IN (vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1047:1945 ') IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt0.c1 IN (vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('1047:1945 ') ORDER BY (vt0.c1 IN (vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1047:1945 ') IS TRUE)  as count FROM vt0, vt1 ORDER BY (vt0.c1 IN (vt0.c0)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('1047:1945 ') ORDER BY (vt0.c1 IN (vt0.c0)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t0, rt0, vt1 WHERE (IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)GLOB(rt0.c1)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((0x4b1e8a76) IS TRUE)) AND (json_array(rt0.c1, NULL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)GLOB(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((0x4b1e8a76) IS TRUE)) AND (json_array(rt0.c1, NULL))));
SELECT * FROM t0, rt0, vt1 WHERE (IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)GLOB(rt0.c1)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((0x4b1e8a76) IS TRUE)) AND (json_array(rt0.c1, NULL)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)GLOB(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((0x4b1e8a76) IS TRUE)) AND (json_array(rt0.c1, NULL))));
SELECT * FROM t0, rt0, vt1 WHERE (IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((t0.c0)GLOB(rt0.c1)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) BETWEEN (((0x4b1e8a76) IS TRUE)) AND (json_array(rt0.c1, NULL)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1 IN (rt0.c0, vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (((rt0.c2)/(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1 IN (rt0.c0, vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (((rt0.c2)/(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1 IN (rt0.c0, vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (((rt0.c2)/(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1 IN (rt0.c0, vt0.c1))) NOT BETWEEN (((vt0.c0)*(vt0.c1))) AND (((rt0.c2)/(rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (+ (rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN (rt0.c2 IN (rt0.c2, rt0.c1, rt0.c1)) THEN DATETIME(-1889935764, rt0.c1, x'') ELSE rt0.c2 COLLATE BINARY END) ORDER BY ((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN (+ (rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN (rt0.c2 IN (rt0.c2, rt0.c1, rt0.c1)) THEN DATETIME(-1889935764, rt0.c1, x'') ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (+ (rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN (rt0.c2 IN (rt0.c2, rt0.c1, rt0.c1)) THEN DATETIME(-1889935764, rt0.c1, x'') ELSE rt0.c2 COLLATE BINARY END) ORDER BY ((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN (+ (rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN (rt0.c2 IN (rt0.c2, rt0.c1, rt0.c1)) THEN DATETIME(-1889935764, rt0.c1, x'') ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (+ (rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((rt0.c0) NOTNULL) WHEN (rt0.c2 IN (rt0.c2, rt0.c1, rt0.c1)) THEN DATETIME(-1889935764, rt0.c1, x'') ELSE rt0.c2 COLLATE BINARY END) ORDER BY ((rt0.c0)GLOB(rt0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((0.8320077042237954 IN ())))>=((((t0.c0) NOT NULL)))) CROSS JOIN vt0 ON ((((CAST(t0.c9 AS NUMERIC))AND((((rt0.c2, rt0.c0, t0.c9))<((vt0.c0, rt0.c0, rt0.c1))))))OR((+ (rt0.c0)))) FULL OUTER JOIN t0 ON CASE '0.3436428023398077'  WHEN rt0.c0 THEN IFNULL(DISTINCT t0.c9, t0.c9) END WHERE (x'') ORDER BY (((t0.c9 IN ())) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0)-(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((0.8320077042237954 IN ())))>=((((t0.c0) NOT NULL)))) CROSS JOIN vt0 ON ((((CAST(t0.c9 AS NUMERIC))AND((((rt0.c2, rt0.c0, t0.c9))<((vt0.c0, rt0.c0, rt0.c1))))))OR((+ (rt0.c0)))) FULL OUTER JOIN t0 ON CASE '0.3436428023398077'  WHEN rt0.c0 THEN IFNULL(DISTINCT t0.c9, t0.c9) END ORDER BY (((t0.c9 IN ())) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0)-(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((0.8320077042237954 IN ())))>=((((t0.c0) NOT NULL)))) CROSS JOIN vt0 ON ((((CAST(t0.c9 AS NUMERIC))AND((((rt0.c2, rt0.c0, t0.c9))<((vt0.c0, rt0.c0, rt0.c1))))))OR((+ (rt0.c0)))) FULL OUTER JOIN t0 ON CASE '0.3436428023398077'  WHEN rt0.c0 THEN IFNULL(DISTINCT t0.c9, t0.c9) END WHERE (x'') ORDER BY (((t0.c9 IN ())) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0)-(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((0.8320077042237954 IN ())))>=((((t0.c0) NOT NULL)))) CROSS JOIN vt0 ON ((((CAST(t0.c9 AS NUMERIC))AND((((rt0.c2, rt0.c0, t0.c9))<((vt0.c0, rt0.c0, rt0.c1))))))OR((+ (rt0.c0)))) FULL OUTER JOIN t0 ON CASE '0.3436428023398077'  WHEN rt0.c0 THEN IFNULL(DISTINCT t0.c9, t0.c9) END ORDER BY (((t0.c9 IN ())) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c0)-(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON (((((rt0.c2)<>(rt0.c1)), vt0.c1, ((vt0.c0)>>(vt1.c0))))<>((vt1.c0, (((vt0.c1))<=((NULL))), ((((vt1.c0)AND(rt0.c0)))OR(0xffffffffbdaadae4))))) WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON (((((rt0.c2)<>(rt0.c1)), vt0.c1, ((vt0.c0)>>(vt1.c0))))<>((vt1.c0, (((vt0.c1))<=((NULL))), ((((vt1.c0)AND(rt0.c0)))OR(0xffffffffbdaadae4))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS REAL));
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON (((((rt0.c2)<>(rt0.c1)), vt0.c1, ((vt0.c0)>>(vt1.c0))))<>((vt1.c0, (((vt0.c1))<=((NULL))), ((((vt1.c0)AND(rt0.c0)))OR(0xffffffffbdaadae4))))) WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON (((((rt0.c2)<>(rt0.c1)), vt0.c1, ((vt0.c0)>>(vt1.c0))))<>((vt1.c0, (((vt0.c1))<=((NULL))), ((((vt1.c0)AND(rt0.c0)))OR(0xffffffffbdaadae4))))) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS REAL));
SELECT ALL * FROM vt1, vt0 INNER JOIN rt0 ON (((((rt0.c2)<>(rt0.c1)), vt0.c1, ((vt0.c0)>>(vt1.c0))))<>((vt1.c0, (((vt0.c1))<=((NULL))), ((((vt1.c0)AND(rt0.c0)))OR(0xffffffffbdaadae4))))) WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS NUMERIC)) ORDER BY CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)) AS REAL);
SELECT COUNT(*) FROM vt1, t0, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (LOWER(vt0.c1)) AND ((- (vt0.c1))))) ORDER BY (((t0.c9, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, (((vt0.c0))=((vt1.c0))), (((('-1037530297')OR(vt1.c0)))AND(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))), highlight(vt0.c1, t0.c9, vt1.c0, rt0.c1), CAST(vt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (LOWER(vt0.c1)) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 INNER JOIN rt0 ON rt0.c1 ORDER BY (((t0.c9, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, (((vt0.c0))==((vt1.c0))), (((('-1037530297')OR(vt1.c0)))AND(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))), highlight(vt0.c1, t0.c9, vt1.c0, rt0.c1), CAST(vt0.c0 AS REAL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (LOWER(vt0.c1)) AND ((- (vt0.c1))))) ORDER BY (((t0.c9, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, (((vt0.c0))=((vt1.c0))), (((('-1037530297')OR(vt1.c0)))AND(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))), highlight(vt0.c1, t0.c9, vt1.c0, rt0.c1), CAST(vt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (LOWER(vt0.c1)) AND ((- (vt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 INNER JOIN rt0 ON rt0.c1 ORDER BY (((t0.c9, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, (((vt0.c0))==((vt1.c0))), (((('-1037530297')OR(vt1.c0)))AND(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))), highlight(vt0.c1, t0.c9, vt1.c0, rt0.c1), CAST(vt0.c0 AS REAL)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 INNER JOIN rt0 ON rt0.c1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (LOWER(vt0.c1)) AND ((- (vt0.c1))))) ORDER BY (((t0.c9, vt1.c0, rt0.c1)) BETWEEN ((vt0.c0, (((vt0.c0))=((vt1.c0))), (((('-1037530297')OR(vt1.c0)))AND(vt1.c0)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))), highlight(vt0.c1, t0.c9, vt1.c0, rt0.c1), CAST(vt0.c0 AS REAL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((- (rt0.c1)))AND(CAST(t0.c9 AS REAL))))AND(vt1.c0))) ORDER BY ((x'be9f') ISNULL) DESC, json_array_length(((t0.c0) NOTNULL), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND(CAST(t0.c9 AS REAL))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((x'be9f') ISNULL) DESC, json_array_length(((t0.c0) NOTNULL), TYPEOF(vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((- (rt0.c1)))AND(CAST(t0.c9 AS REAL))))AND(vt1.c0))) ORDER BY ((x'be9f') ISNULL) DESC, json_array_length(((t0.c0) NOTNULL), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c1)))AND(CAST(t0.c9 AS REAL))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY ((x'be9f') ISNULL) DESC, json_array_length(((t0.c0) NOTNULL), TYPEOF(vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((((((- (rt0.c1)))AND(CAST(t0.c9 AS REAL))))AND(vt1.c0))) ORDER BY ((x'be9f') ISNULL) DESC, json_array_length(((t0.c0) NOTNULL), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (HEX(t0.c9)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, IFNULL(DISTINCT load_extension(t0.c0, t0.c9), x'')  NULLS FIRST, ((((((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c9))))))OR(((t0.c9) IS TRUE))))OR(IFNULL(t0.c9, t0.c0))))AND(CAST(t0.c9 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (HEX(t0.c9)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, IFNULL(DISTINCT load_extension(t0.c0, t0.c9), x'')  NULLS FIRST, ((((((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c9))))))OR(((t0.c9) IS TRUE))))OR(IFNULL(t0.c9, t0.c0))))AND(CAST(t0.c9 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (HEX(t0.c9)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, IFNULL(DISTINCT load_extension(t0.c0, t0.c9), x'')  NULLS FIRST, ((((((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c9))))))OR(((t0.c9) IS TRUE))))OR(IFNULL(t0.c9, t0.c0))))AND(CAST(t0.c9 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (HEX(t0.c9)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, IFNULL(DISTINCT load_extension(t0.c0, t0.c9), x'')  NULLS FIRST, ((((((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c9))))))OR(((t0.c9) IS TRUE))))OR(IFNULL(t0.c9, t0.c0))))AND(CAST(t0.c9 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((t0.c0)IS NOT(t0.c0))) BETWEEN (HEX(t0.c9)) AND (t0.c0 COLLATE BINARY))  NULLS FIRST, IFNULL(DISTINCT load_extension(t0.c0, t0.c9), x'')  NULLS FIRST, ((((((((((t0.c0) ISNULL))AND((((t0.c0))!=((t0.c9))))))OR(((t0.c9) IS TRUE))))OR(IFNULL(t0.c9, t0.c0))))AND(CAST(t0.c9 AS NUMERIC)));
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON (((((((vt1.c0, vt0.c0, rt0.c0))=((0.31789355475725967, t0.c9, rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(rt0.c2)) CROSS JOIN t0 ON CAST((NOT (vt1.c0)) AS NUMERIC) WHERE (LIKELY(DISTINCT NULL)) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (t0.c9) AND (t0.c9)), (rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((((((vt1.c0, vt0.c0, rt0.c0))=((0.31789355475725967, t0.c9, rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(rt0.c2)) CROSS JOIN t0 ON CAST((NOT (vt1.c0)) AS NUMERIC) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (t0.c9) AND (t0.c9)), (rt0.c1 IN ())) DESC);
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON (((((((vt1.c0, vt0.c0, rt0.c0))=((0.31789355475725967, t0.c9, rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(rt0.c2)) CROSS JOIN t0 ON CAST((NOT (vt1.c0)) AS NUMERIC) WHERE (LIKELY(DISTINCT NULL)) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (t0.c9) AND (t0.c9)), (rt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((((((vt1.c0, vt0.c0, rt0.c0))=((0.31789355475725967, t0.c9, rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(rt0.c2)) CROSS JOIN t0 ON CAST((NOT (vt1.c0)) AS NUMERIC) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (t0.c9) AND (t0.c9)), (rt0.c1 IN ())) DESC);
SELECT ALL * FROM vt1, rt0 CROSS JOIN vt0 ON (((((((vt1.c0, vt0.c0, rt0.c0))=((0.31789355475725967, t0.c9, rt0.c0))))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(rt0.c2)) CROSS JOIN t0 ON CAST((NOT (vt1.c0)) AS NUMERIC) WHERE (LIKELY(DISTINCT NULL)) ORDER BY IFNULL(((vt0.c1) NOT BETWEEN (t0.c9) AND (t0.c9)), (rt0.c1 IN ())) DESC;
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2 IN ()))OR(((vt1.c0)*(t0.c0)))))AND((rt0.c0 IN ()))) LEFT OUTER JOIN t0 ON (NOT (((vt0.c1) IS FALSE))) WHERE (((((t0.c9) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0))<((t0.c0)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0))<((t0.c0)))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2 IN ()))OR(((vt1.c0)*(t0.c0)))))AND((rt0.c0 IN ()))) LEFT OUTER JOIN t0 ON (NOT (((vt0.c1) IS FALSE))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2 IN ()))OR(((vt1.c0)*(t0.c0)))))AND((rt0.c0 IN ()))) LEFT OUTER JOIN t0 ON (NOT (((vt0.c1) IS FALSE))) WHERE (((((t0.c9) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0))<((t0.c0)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0))<((t0.c0)))) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2 IN ()))OR(((vt1.c0)*(t0.c0)))))AND((rt0.c0 IN ()))) LEFT OUTER JOIN t0 ON (NOT (((vt0.c1) IS FALSE))));
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((rt0.c2 IN ()))OR(((vt1.c0)*(t0.c0)))))AND((rt0.c0 IN ()))) LEFT OUTER JOIN t0 ON (NOT (((vt0.c1) IS FALSE))) WHERE (((((t0.c9) NOT BETWEEN (t0.c0) AND (vt1.c0))) NOT BETWEEN ((((vt1.c0))<((t0.c0)))) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c0)) NOTNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE ('-494856092' COLLATE RTRIM) ORDER BY (((((((vt0.c0))=((vt0.c1))))OR((~ (vt0.c0)))))OR(((t0.c9)*(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-494856092' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((vt0.c0))==((vt0.c1))))OR((~ (vt0.c0)))))OR(((t0.c9)*(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-494856092' COLLATE RTRIM) ORDER BY (((((((vt0.c0))=((vt0.c1))))OR((~ (vt0.c0)))))OR(((t0.c9)*(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-494856092' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((vt0.c0))==((vt0.c1))))OR((~ (vt0.c0)))))OR(((t0.c9)*(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ('-494856092' COLLATE RTRIM) ORDER BY (((((((vt0.c0))=((vt0.c1))))OR((~ (vt0.c0)))))OR(((t0.c9)*(vt0.c0))))  NULLS LAST;
SELECT * FROM t0 WHERE ((t0.c9 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c9 IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c9 IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c9 IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c9 IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN x'f7e6f03c' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN x'f7e6f03c' THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN x'f7e6f03c' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN x'f7e6f03c' THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN x'f7e6f03c' THEN rt0.c0 END)));
SELECT * FROM t0 WHERE (CAST(((NULL)IS(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)IS(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((NULL)IS(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)IS(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((NULL)IS(t0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((((rt0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, rt0.c2, '1684319072')) AND ((vt0.c1, rt0.c0, vt0.c1))))AND(CASE WHEN t0.c9 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN t0.c9 THEN rt0.c2 ELSE t0.c9 END)))AND(vt1.c0)) CROSS JOIN rt0 ON ((x'')-(MIN(rt0.c1, rt0.c2, rt0.c2, vt0.c1))) WHERE (((((CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)AND(LOWER(vt0.c0))))AND(CASE vt0.c0  WHEN '' THEN x'4ef0' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)AND(LOWER(vt0.c0))))AND(CASE vt0.c0  WHEN '' THEN x'4ef0' END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((((rt0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, rt0.c2, '1684319072')) AND ((vt0.c1, rt0.c0, vt0.c1))))AND(CASE WHEN t0.c9 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN t0.c9 THEN rt0.c2 ELSE t0.c9 END)))AND(vt1.c0)) CROSS JOIN rt0 ON ((x'')-(MIN(rt0.c1, rt0.c2, rt0.c2, vt0.c1))));
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((((rt0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, rt0.c2, '1684319072')) AND ((vt0.c1, rt0.c0, vt0.c1))))AND(CASE WHEN t0.c9 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN t0.c9 THEN rt0.c2 ELSE t0.c9 END)))AND(vt1.c0)) CROSS JOIN rt0 ON ((x'')-(MIN(rt0.c1, rt0.c2, rt0.c2, vt0.c1))) WHERE (((((CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)AND(LOWER(vt0.c0))))AND(CASE vt0.c0  WHEN '' THEN x'4ef0' END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END)AND(LOWER(vt0.c0))))AND(CASE vt0.c0  WHEN '' THEN x'4ef0' END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((((((rt0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, rt0.c2, '1684319072')) AND ((vt0.c1, rt0.c0, vt0.c1))))AND(CASE WHEN t0.c9 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN t0.c9 THEN rt0.c2 ELSE t0.c9 END)))AND(vt1.c0)) CROSS JOIN rt0 ON ((x'')-(MIN(rt0.c1, rt0.c2, rt0.c2, vt0.c1))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKE(('71986156' IN ()), ((rt0.c2) NOTNULL))) ORDER BY ((((((rt0.c1) IS FALSE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '0.11495819494992743' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c2)>=(rt0.c1)) IN (CAST(rt0.c1 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(('71986156' IN ()), ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '0.11495819494992743' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c2)>=(rt0.c1)) IN (CAST(rt0.c1 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKE(('71986156' IN ()), ((rt0.c2) NOTNULL))) ORDER BY ((((((rt0.c1) IS FALSE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '0.11495819494992743' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c2)>=(rt0.c1)) IN (CAST(rt0.c1 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(('71986156' IN ()), ((rt0.c2) NOTNULL))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c1) IS FALSE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '0.11495819494992743' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c2)>=(rt0.c1)) IN (CAST(rt0.c1 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKE(('71986156' IN ()), ((rt0.c2) NOTNULL))) ORDER BY ((((((rt0.c1) IS FALSE))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE '0.11495819494992743' END)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c2)>=(rt0.c1)) IN (CAST(rt0.c1 AS NUMERIC), CAST(vt1.c0 AS NUMERIC))) DESC;
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))  WHEN (- (rt0.c2)) THEN ((rt0.c1)OR(t0.c0)) WHEN (((x''))=((t0.c0))) THEN CASE rt0.c1  WHEN t0.c0 THEN vt1.c0 WHEN t0.c9 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END WHEN (((rt0.c0))!=((t0.c9))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (+ (vt0.c0)) END FULL OUTER JOIN rt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND('-0.0')) WHERE (((((((rt0.c1)<(t0.c9)))OR(vt0.c1)))AND((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY CAST(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '''j<' END AS INTEGER) DESC  NULLS LAST, ((((((0.7040972554013499)!=(NULL)))OR(((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(ABS(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<(t0.c9)))OR(vt0.c1)))AND((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))  WHEN (- (rt0.c2)) THEN ((rt0.c1)OR(t0.c0)) WHEN (((x''))==((t0.c0))) THEN CASE rt0.c1  WHEN t0.c0 THEN vt1.c0 WHEN t0.c9 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END WHEN (((rt0.c0))!=((t0.c9))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (+ (vt0.c0)) END FULL OUTER JOIN rt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND('-0.0')) ORDER BY CAST(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '''j<' END AS INTEGER) DESC  NULLS LAST, ((((((0.7040972554013499)!=(NULL)))OR(((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(ABS(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))  WHEN (- (rt0.c2)) THEN ((rt0.c1)OR(t0.c0)) WHEN (((x''))=((t0.c0))) THEN CASE rt0.c1  WHEN t0.c0 THEN vt1.c0 WHEN t0.c9 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END WHEN (((rt0.c0))!=((t0.c9))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (+ (vt0.c0)) END FULL OUTER JOIN rt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND('-0.0')) WHERE (((((((rt0.c1)<(t0.c9)))OR(vt0.c1)))AND((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY CAST(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '''j<' END AS INTEGER) DESC  NULLS LAST, ((((((0.7040972554013499)!=(NULL)))OR(((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(ABS(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)<(t0.c9)))OR(vt0.c1)))AND((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CASE ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))  WHEN (- (rt0.c2)) THEN ((rt0.c1)OR(t0.c0)) WHEN (((x''))==((t0.c0))) THEN CASE rt0.c1  WHEN t0.c0 THEN vt1.c0 WHEN t0.c9 THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END WHEN (((rt0.c0))!=((t0.c9))) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL)) ELSE (+ (vt0.c0)) END FULL OUTER JOIN rt0 ON ((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND('-0.0')) ORDER BY CAST(CASE rt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '''j<' END AS INTEGER) DESC  NULLS LAST, ((((((0.7040972554013499)!=(NULL)))OR(((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(ABS(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))/(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))/(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))/(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)>(vt1.c0)))/(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS FALSE)) NOT NULL)) ORDER BY ((((vt1.c0)>(vt1.c0)))/(x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c1)))IS NOT(-515071379)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c1)))IS NOT(-515071379))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c1)))IS NOT(-515071379)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c1)))IS NOT(-515071379))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)*(rt0.c1)))IS NOT(-515071379)));
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (NULL) AND (LOWER(DISTINCT NULL))) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CAST(t0.c0 AS REAL), vt0.c0))==(((rt0.c0 IN ()), t0.c9, x''))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CAST(t0.c0 AS REAL), vt0.c0))==(((rt0.c0 IN ()), t0.c9, x'')))) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (NULL) AND (LOWER(DISTINCT NULL))));
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (NULL) AND (LOWER(DISTINCT NULL))) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CAST(t0.c0 AS REAL), vt0.c0))==(((rt0.c0 IN ()), t0.c9, x''))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CAST(t0.c0 AS REAL), vt0.c0))==(((rt0.c0 IN ()), t0.c9, x'')))) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (NULL) AND (LOWER(DISTINCT NULL))));
SELECT COUNT(*) FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (NULL) AND (LOWER(DISTINCT NULL))) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, CAST(t0.c0 AS REAL), vt0.c0))==(((rt0.c0 IN ()), t0.c9, x''))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9)<<(t0.c9)))LIKE(CASE t0.c9  WHEN t0.c9 THEN t0.c9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)<<(t0.c9)))LIKE(CASE t0.c9  WHEN t0.c9 THEN t0.c9 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9)<<(t0.c9)))LIKE(CASE t0.c9  WHEN t0.c9 THEN t0.c9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c9)<<(t0.c9)))LIKE(CASE t0.c9  WHEN t0.c9 THEN t0.c9 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c9)<<(t0.c9)))LIKE(CASE t0.c9  WHEN t0.c9 THEN t0.c9 END)));
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))=(((((t0.c0, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c9)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))=(((((t0.c0, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c9))))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))=(((((t0.c0, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c9)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))=(((((t0.c0, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c9))))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))=(((((t0.c0, rt0.c2, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c9)))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 IN ()))*(CASE t0.c9  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON '1512055148' WHERE (NULLIF(rt0.c2, t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 IN ()))*(CASE t0.c9  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON '1512055148');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 IN ()))*(CASE t0.c9  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON '1512055148' WHERE (NULLIF(rt0.c2, t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c2, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 IN ()))*(CASE t0.c9  WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END)) FULL OUTER JOIN t0 ON '1512055148');
SELECT * FROM vt1, rt0 WHERE ((((((x'')OR(0.2103675827217324)))OR(vt1.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((x'')OR(0.2103675827217324)))OR(vt1.c0)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((x'')OR(0.2103675827217324)))OR(vt1.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((x'')OR(0.2103675827217324)))OR(vt1.c0)) IN (UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((((x'')OR(0.2103675827217324)))OR(vt1.c0)) IN (UPPER(DISTINCT rt0.c0))));
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((((t0.c0))<>((x'5301'))) IN ())) ORDER BY INSTR(NULL, (~ (rt0.c0))) DESC, json_array_length(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))OR(vt1.c0)), t0.c9 COLLATE RTRIM), ((((vt0.c1) ISNULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c9)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))!=((x'5301'))) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY INSTR(NULL, (~ (rt0.c0))) DESC, json_array_length(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))OR(vt1.c0)), t0.c9 COLLATE RTRIM), ((((vt0.c1) ISNULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c9)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((((t0.c0))<>((x'5301'))) IN ())) ORDER BY INSTR(NULL, (~ (rt0.c0))) DESC, json_array_length(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))OR(vt1.c0)), t0.c9 COLLATE RTRIM), ((((vt0.c1) ISNULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c9)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0))!=((x'5301'))) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY INSTR(NULL, (~ (rt0.c0))) DESC, json_array_length(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))OR(vt1.c0)), t0.c9 COLLATE RTRIM), ((((vt0.c1) ISNULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c9)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, vt1, t0 WHERE (((((t0.c0))<>((x'5301'))) IN ())) ORDER BY INSTR(NULL, (~ (rt0.c0))) DESC, json_array_length(((((((((vt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(vt0.c1)))OR(vt1.c0)), t0.c9 COLLATE RTRIM), ((((vt0.c1) ISNULL))>=(((rt0.c0) BETWEEN (rt0.c2) AND (t0.c9)))) DESC  NULLS LAST;
