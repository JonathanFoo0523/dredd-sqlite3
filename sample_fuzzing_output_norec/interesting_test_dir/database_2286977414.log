-- Time: 2024/06/09 21:40:31
-- Database: database14
-- Database version: 3.40.0
-- seed value: 2286977414
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='_', c0='Ya^''뵽X뵽u'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE rt0 SET c1=0.7931807528811653, c1='kU' WHERE ((rt0.c2) BETWEEN ((- (rt0.c2))) AND (('-75756398' IN ()))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=''; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 4ms;
VACUUM temp; -- 1ms;
ANALYZE; -- 4ms;
PRAGMA temp.integrity_check; -- 1ms;
UPDATE OR ABORT rt0 SET (c1)=(NULL); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='', c1=0.4463187616179254, c2='' WHERE (((rt0.c1) NOTNULL) IN ((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c1))))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-2009350787'; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.6590147225075104, 0.8518398132544835); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='' WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-75756398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=362737047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.2860293350889648 AS BLOB) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.2860293350889648 AS BLOB)) BETWEEN ((NULL IN ())) AND ('-75756398')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1565383359 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8128614491820799 IN ()))<((~ (0.5172616048424387)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-827405915'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 -722545636 sz=-1576995430'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('0.8518398132544835', '-1466479292', x'0f1a934b')) NOT BETWEEN ((NULL, NULL, x'')) AND ((0.6716684867810264, 0.02311235917171972, 0.933633473175285)))  WHEN CAST(0.2860293350889648 AS TEXT) THEN (('R{䭄E䵄q}q''E') BETWEEN (0.0026011420800883256) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-705412518'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('nu䭄╁')>=('0.5172616048424387')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT '-75756398') COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE) NOT BETWEEN (CAST('2喕c䵄tbE8' AS NUMERIC)) AND (CASE -403511071  WHEN NULL THEN x'c237' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))<>((x''))) THEN UNICODE('nu䭄╁') ELSE (((0.9609576540112561))!=((NULL))) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2145806873 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN NULL WHEN '-705412518' THEN 0Xffffffffceaec9a5 WHEN 'k X㖦)Wq' THEN '-1473017836' ELSE NULL END)||(((x'') NOT BETWEEN ('') AND (0Xffffffffb736852b)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((rtreenode('-1473017836', 0.3532852902752047))AND((1787003391 IN ()))))AND((('')LIKE(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(1787003391, NULL)) NOT BETWEEN ((('(')*(NULL))) AND ((((0.9359909755640153, -1221163733, NULL))>((-7.05412518E8, 0.17201918117583348, -1769235091))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1576995430 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('R{䭄E䵄q}q''E')>>(-1473017836)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1940321913 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-859294298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-859294298') ISNULL)) NOT BETWEEN (CAST(-83088085 AS NUMERIC)) AND (750733641)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1150836028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '30624942 sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ()), ((0.6592808651231229) ISNULL), x'' COLLATE NOCASE, -1473017836, NULL))=((0Xffffffffa8338814, ((((1566437265)OR(7.50733641E8)))AND(NULL)), ((0.4894301912848459) NOTNULL), CASE 0.13131979906468327  WHEN x'' THEN x'' END, 366439023))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1816849880 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'8648' IN (NULL, '-1565383359')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0X47106739 AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-943945204 sz=-608561694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-112948222 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1473017836 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/((~ ('~W')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2124255466 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-251623659'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-792130162 0 sz=-310115081'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1466479292 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1940321913'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -667986426; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((3.0624942E7) IS FALSE))*(TRIM(DISTINCT '('))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2078803701 sz=426863783 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1144025682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1370860139 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1530482677 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''7jz!eS'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1940321913 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a3ec')LIKE(2.078803701E9))) BETWEEN (CAST('-2145806873' AS BLOB)) AND (((('')) NOT BETWEEN ((0xffffffffdbba15e2)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', x'', x'd773', '0.9359909755640153', -943945204)) BETWEEN (('', x'', '-827405915', 'G	', 0.3605256379600008)) AND ((0.46872184383963345, 1192257337, x'', '', 0Xffffffffcc64cc09))))AND(CAST(0xfffffffffb7c0c92 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('	, r')OR('-2009350787')))AND(x'b449')))<<(((907706413)>>('rl')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-923409450'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1329104355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-102517886 sz=1530482677 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1473017836'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2147264332'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1335861994 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '929291435 sz=-452216041'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((json_remove(NULL, 0.06754010976922986))OR(0.6590147225075104 COLLATE BINARY)))OR(x'')))OR((+ (0.21812238468499356)))))OR((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.19526571832994488) NOTNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1311346474 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((x'')AND(x'0abb')))AND('')))OR('0.9359909755640153')))OR('ꮊUJ')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')-(0.4117081221560748))))<=((((((-1.565383359E9)OR(NULL)))AND(0.5642124460135731))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '372267422 sz=643669196 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-162950230 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '339187508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0.39040838151607704)) BETWEEN ((NULL)) AND ((NULL))))OR(CAST(x'97d6' AS TEXT))))OR(((x'8fc4')>>('-251623659')))))AND(CASE WHEN '0.9609576540112561' THEN NULL ELSE 0x4d823495 END)))AND((NOT ('')))))AND((x'c89b' IN ()))))OR(CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '801780642 -112669370 sz=-705412518 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'cecb'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=390009134 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1815316701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC)) BETWEEN ((NULL IN ())) AND (CAST(0.4821428060428572 AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1313678741 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'd2921fd8'))) BETWEEN (IFNULL('-1100241522', 0xffffffff8631acdb)) AND (LTRIM(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1256803725 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1769235091') IS TRUE))IS NOT((('1192257337') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -112948222 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((((NULL)OR(NULL)))AND('-1100241522')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(CAST(NULL AS BLOB), (- (NULL)), CASE WHEN NULL THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'2de2', x'')) NOT BETWEEN (((((x'')) BETWEEN ((',i')) AND ((x''))), ((((x'c51374f0')AND('-258364373')))OR('b,褓7NN⼠')), (~ (NULL)))) AND (((('') NOT BETWEEN ('') AND (x'')), 0.03122583674136481 COLLATE RTRIM, ((NULL)IS(x''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1551000402') NOT BETWEEN (x'b9dc') AND (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1326523001')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'477eba72', NULL)) NOT BETWEEN ((((NULL) IS FALSE), (('8[>Dp') BETWEEN ('-1480742489') AND ('~W')), SQLITE_SOURCE_ID())) AND ((((x'b599')|('-587163255')), CAST('372267422' AS INTEGER), LTRIM(0x31af57f1, 0.40442318315561454)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2094764313 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 0 sz=-1383808183 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('435511121')%('Ҁ+')) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'')OR(1368945641)))OR(x'')))OR(x'')))OR('-2009350787')) THEN x'' COLLATE NOCASE WHEN (-3.10115081E8 IN ()) THEN (('')AND('1816849880')) WHEN ((('-849657660'))>((''))) THEN -276246538 COLLATE NOCASE WHEN INSTR('', -6.08561694E8) THEN ('1816849880' IN ()) WHEN ((NULL) NOT BETWEEN ('Ҁ+') AND (NULL)) THEN NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')|('_')), ((((x'')OR('-1110258068')))AND(1531530052)), (~ ('-193310424'))))!=((x'56e9' COLLATE BINARY, (- ('')), IFNULL(DISTINCT 0.5437114932307798, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -1132391899 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE BINARY))=((IFNULL(x'', 0xffffffffe7f2e8e1)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(DATETIME(NULL, x'e9da', x'c4fe') AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1541695033 sz=1530482677 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE RTRIM)AND('-363516847')))OR(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '109088433 -9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=285576750 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1938245835'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((('', ']7KEE~N{', x'')) NOT BETWEEN (('Ya^''뵽X뵽u', 'YcUiHn', 0xffffffff84b4aec0)) AND (('159302256', x'bdfd', 'Xv')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-587163255'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0xffffffffe1d9d0af))>=((x''))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1132391899 sz=1775827253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffc86e11cc; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.811177947448097 AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-258364373 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1566437265' AS REAL))<=(TRIM(DISTINCT '-923409450', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=314633166 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.40442318315561454 COLLATE NOCASE  WHEN TRIM(0.976338667788933, NULL) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1565383359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.933633473175285)) NOT BETWEEN ((x'')) AND ((0Xffffffff98a07220))))-(((0.13095113031643513) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1206490536'  WHEN 'F#' THEN 0.5603840699073966 COLLATE RTRIM WHEN LTRIM(0.06754010976922986) THEN ((((x'c992')OR('-999173209')))AND(x'32d2')) WHEN (('-865809399')<<(0.9358974054267952)) THEN ((0.9601568823992298)=(0Xffffffff84b4aec0)) WHEN (('1194351635')/(-1388393976)) THEN ((((((((NULL)OR(NULL)))AND(x'')))AND(x'')))OR(0.19498624682538646)) WHEN ((x'') NOTNULL) THEN CASE WHEN '-900488922' THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1992698627 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1311346474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1946141553') BETWEEN (x'bb8b') AND ('Zs'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL))))>=(((+ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-324105186 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('	N| s8' AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN (NULL) AND ((('1081647265') BETWEEN (0xffffffffef907d3a) AND ('1746883450')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1752022257') NOT NULL), LIKELY(DISTINCT NULL), -2.58364373E8 COLLATE RTRIM))<=(((0xffffffffbcd66899 IN (x'6524', 0.8550439630125536)), ((-9.99173209E8) BETWEEN (0.8330109352630236) AND (0.7931807528811653)), ('1530482677' IN (0.1950813586714515))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -452216041 sz=907706413 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=128983468 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-957881240 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2043329475 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((((x'5a58')AND(x'')))OR(x'')), (((('-1917081799')OR(x'')))OR(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1110258068 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1477904406 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 0 sz=970332919 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN '1l,{f' THEN 0.2416875384761772 END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7d0f') NOT BETWEEN ('') AND (x''))) NOT BETWEEN ('-403511071') AND ((+ (x'cb6a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1228152829', 0.19498624682538646, '-251623659')) BETWEEN ((((0.49159927194016184) NOT BETWEEN (NULL) AND (NULL)), ((0.3532852902752047) BETWEEN (NULL) AND (-945361710)), ((NULL) ISNULL))) AND (((~ (x'')), (('') IS TRUE), ((((((((0.24667477986569641)AND(-19899042)))OR(2129746073)))AND(x'')))OR(x'da4504eb'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)GLOB(0xffffffffca53a126)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6266108134177473; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')LIKE(NULL)))OR(highlight('1311346474', x'', NULL, ''))))OR((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-344172184')IS NOT(-1932471388))))<(((('')IS NOT(-1.370860139E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1734039738 sz=499461920 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-583183072'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1421386700, 'rl', 'xD'))<((NULL, NULL, x'636f')))) NOT BETWEEN (CAST(x'' AS BLOB)) AND ((('-1466479292')>('-932310580')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=339187508'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) BETWEEN ((0x0)) AND ((-1045348699))))OR((('kU')||(0.12577599654606064)))))AND((('')>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(0.6590147225075104)))%(CASE 0.5555281952217495  WHEN NULL THEN '''7jz!es' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1221163733 sz=1203343750 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1587452043 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=372267422'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0Xffffffffe50bbb17) AND (0.4306217137530828))) NOT BETWEEN (((((0.8299059711981369)AND(NULL)))OR('283054615'))) AND ((('598072718') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1908149214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5642124460135731)OR(NULL)))OR(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2094764313 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-932497820 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-112669370 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))GLOB((0xffffffffbcf27d50 IN ()))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('ᚳ|')==(NULL)))OR((NULL IN ()))))AND(0.17930227084134887 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1150836028' AS REAL))*((((x'', x'', x''))<((-702689410, x'', ''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))<((('-900488922')>=(-909355692)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('p[*pvP')OR(NULL)))OR(0x6da01e0)))|(((0.5362396370777519) BETWEEN ('B,褓7NN⼠') AND ('-75756398')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (STRFTIME(NULL, x'', 0x943dc93, '	, R', x'', x'3137', 0Xb9a070d, x'8bc3', '鳛^lAr', NULL, '907706413'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1062406043'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1146566483 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'5cd4')OR('-1565383359')))AND(NULL)))OR(((x'd173')LIKE('-251623659')))))OR(((NULL)<>(NULL)))))AND(('䉚LQ1J>,' IN (0.7279908124096688)))))AND((((0.1501758410311853))!=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN ()) THEN ((NULL)&(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-257950050 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1760660934') NOT BETWEEN (-677793326) AND (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=970871730 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (((x'')GLOB(NULL))) AND (((0.933633473175285) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN NULL THEN '0.811177947448097' ELSE '1520577966' END)==('0.9609576540112561')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((NULL))<=((x''))))) AND (((('1118707386') NOT BETWEEN (NULL) AND (0.08230934049173799))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=1983405553 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1235532185 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-864516520 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-227966540 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1150836028 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1739050719 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2108806366 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-112948222 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1132391899 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-475921659 sz=-602924325 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL)) NOT BETWEEN (('-1473017836')) AND (('!<>YG*3'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(0.31915732627254767 COLLATE RTRIM, CASE WHEN '%' THEN '0.06754010976922986' WHEN x'' THEN 0.9359909755640153 WHEN 0xb7b464 THEN '-452216041' WHEN -1992698627 THEN 1.815316701E9 WHEN x'' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.627699023863399)AND(1.946141553E9)))AND(NULL)))OR(ABS(DISTINCT 0.8855766654604375))))AND((NOT ('-1734315488')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=366439023 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=272974179 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.48424063587849187)>=(0.970116656025509)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1256803725 -1690187706'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2144092086 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-434614524 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1972899812 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1681419764 unordered'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8854387213060414  WHEN -98600815 THEN ((0.20746481640857017) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1615797221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1498024675 sz=366138739 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=107486682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-562332060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1370860139 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(0.339048301832684)))AND(NULL)))AND(x'4b828825')))AND(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=81579514 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6273951295034536 AS BLOB))<>(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1451913402'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_extract(0.977858248214095, 0.5367187637208785, NULL, '0.6590147225075104') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2013335787'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('T')) BETWEEN ((0Xffffffffccc835a6)) AND ((NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1159894822 0 sz=-329562321'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=280795896'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.39488964578630736))<>(('0.9609576540112561'))))OR((('OZ') NOTNULL))))OR(((x'7cc6') BETWEEN (NULL) AND (-1.100241522E9)))))OR(((0.972303579220151) BETWEEN (NULL) AND (435511121)))))AND(((x'') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN (((0.24904445477669945) NOT BETWEEN (x'') AND ('G')), (0.2416875384761772 IN (0.6141297047833743, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-2094764313')) NOT BETWEEN (('-1132391899')) AND (('1094406953'))))LIKE((((0x3d6882b0, -664071489, x'8a55752d')) NOT BETWEEN ((NULL, 0.7817978011254534, 0Xffffffffda3d94d3)) AND ((NULL, NULL, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2119513134 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6151202868624516)==(x'')))IS(((('991743288', NULL, 0.7916733075117478)) BETWEEN ((1.311346474E9, 0.30030720325980464, x'e874')) AND ((NULL, '8mFhx8F*5', 0.07210141728894615))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' Jat%	#r')) NOT BETWEEN ((UPPER(x''))) AND (((- (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2034084746 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1718607493'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(NULL) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.23145388641678533 IN ())) BETWEEN ((~ (x''))) AND ((('zs') NOT BETWEEN (0.82197226738574) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ' k18\rG.'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-999173209'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(-1221163733)))OR(0.13037246603870234))) NOT BETWEEN ((0.8281048766800027 IN ())) AND ('-1100241522' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-404633388 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '428381540 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1437511218') ISNULL) IN (('NW' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1276810123 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-736264606'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1758651717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-2094764313 2072630820 sz=1186888787'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0X159eed97)-(''))  WHEN (((('0.5367187637208785')OR(0.08230934049173799)))AND('-1329104355')) THEN ROUND('_', x'') ELSE (x'' IN ('929291435')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('o(i&') NOT BETWEEN (x'') AND (x'ed85fb45')))LIKE((~ ('907706413')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=407104618 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1480742489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2034084746'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-265560108'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-455706327 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1084333605 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2015633101 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'c410'))>((0Xa777e51))) THEN (0.8996512675156445 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1996959641'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-399785771 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-162950230 sz=793890584 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('', x'', 'Yl', 0.07793363748662441, ''))<((x'ffb5', 0X40be89e5, NULL, NULL, NULL)))  WHEN ((x'')=(NULL)) THEN (((x''))>((x''))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')OR(NULL)))*((298742706 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((8.33574897E8) BETWEEN (0.977858248214095) AND (0.09454549448264682))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('nWcQn^f'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(0.3279488766391503)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1279101368 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-333268422)*((('滧K') NOT BETWEEN ('9223372036854775807') AND (1300378773)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-998498639 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('-1544625326' AS TEXT))AND(((NULL) NOT BETWEEN (NULL) AND (0.500717249453994)))))OR(NULL)))AND(((0.8846297637891409) IS FALSE))))AND(((((NULL)OR(x'')))AND('-130392281')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1940321913 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffffc5d1ed8 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-50740647'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1851706460 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=350144756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 499461920; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5272181927353163 IN ()) IN (('3\nmffIZ썉' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1772691228 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07793363748662441) IS FALSE))OR(LIKELIHOOD(DISTINCT 0.7263616492818948, 0.5500048958147873))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_array(x'', 'AA', 0xffffffffcd659a5b, '8{5&R8tA'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(NULL, NULL)) BETWEEN (((((((((x'')OR(0.3534218229176601)))AND(x'')))OR(NULL)))OR(NULL))) AND (((((((((x'')OR(NULL)))OR(x'9591')))AND(0xffffffffd99f67d0)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1013988869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-190269355 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1311097021 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(NULL))IS(((((NULL)OR('Yl')))AND('-1388393976')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-251623659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1115692261 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=113251390 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-59100086 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9490747147999744))<=((0.7944658833683736))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1430310710'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0.5501548570513809)AND(-706752990)))AND('30624942')) THEN ((((NULL)AND('')))OR('')) WHEN (('-1221341637') NOT NULL) THEN CAST('-943945204' AS NUMERIC) WHEN NULL COLLATE NOCASE THEN ('' IN ()) ELSE (('')<=(0X977622b)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1311346474 0 sz=-981847656'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '854317050 -897201622 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0X3e8ff98d AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-722545636 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1796908251 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND('-999173209')))OR(0.6832418395029974)))OR(0.9157512178596964)))AND(0.4835580594850455)))OR('-452421708' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(('亳BEf' IN ()))))AND(CAST(-1329104355 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=665960541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=2115669056 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.47730978445703665 COLLATE NOCASE)AND(((x'') IS FALSE))))OR((((('-792130162')OR('-827405915')))AND(0.1316330350676591)))))AND(CASE WHEN NULL THEN 0.955328152893504 ELSE NULL END)))OR((- (0.4581791064421409)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-517907073 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS FALSE) IN ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2035916246'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1702030612 -32369522 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1491126217'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1335861994 4 sz=-1144025682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'67294fe0fcc4'))!=((1292898755))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-173385164'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffbd1e5c72 IN ())) NOT BETWEEN ((x'' IN ())) AND ((((x'2d3342f1')) BETWEEN ((NULL)) AND (('1722770743'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=1631556028 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>=(((((NULL)OR(x'')))AND(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=527312215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -472550186 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=-505290693'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, '749344133', '0.24904445477669945', ''))+((((('滧k')OR('-2017280848')))OR(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '563960289 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('b')||(0.994187769011687)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (-2.76246538E8)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x26a3a2ab) BETWEEN ((('1730054248') NOT BETWEEN ('W9ph') AND (''))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1776287800')|(0.27663547699238533)))<(('G亟6y' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=502144286 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=998208276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1696199802 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2001208619 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN UNLIKELY('') WHEN json_insert(-552148998, 0.87125106552105, -251623659) THEN ((((x'87144d5d')AND(x'')))AND(0.15796247940851116)) WHEN ((NULL)>(0.42689195104939603)) THEN CASE ''  WHEN 9.29291435E8 THEN x'' END ELSE (((('')AND(0X3462bcbe)))OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=483231763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1298694537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(CAST(0X3f695cc5 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=833574897 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-792130162'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1473017836'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-595793225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3415536411147304) ISNULL))LIKE((((NULL)) BETWEEN ((1557064104)) AND (('362737047'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(CASE 0.3703159674343339  WHEN x'' THEN 'z2HP' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('1114390825')))OR(x'')) IN (((0xffffffffbbcf8dae)+('615333837')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1967523936 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-608561694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7931807528811653)OR(x'54cf')))AND('')))LIKE(NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1753198374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1165993638 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=18339466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1921862992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.9761035238705809)AND('E]NC')))OR('1253410610')))OR(((0.10161366000109495)*(x'')))))AND(CAST('1888186410' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'776e') AND (x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0X97ec270)<(3.39187508E8)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 844496514 sz=-326655105'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2006808337 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1234924747 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('g1') BETWEEN (NULL) AND (x'')) THEN '734547600' COLLATE RTRIM WHEN ABS(DISTINCT NULL) THEN (((0xffffffffc758306c))>((NULL))) WHEN ((('1664963707')) NOT BETWEEN ((-310115081)) AND (('611954419'))) THEN ((((((((((((0.19624312348144912)OR('0.3279488766391503')))OR('1948042837')))OR(2078803701)))AND(NULL)))AND('-1561522059')))OR(NULL)) ELSE ((x'') BETWEEN (x'') AND ('F#')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.21579688467847313; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(0x34a24d7e))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('-1992698627')) BETWEEN ((NULL COLLATE RTRIM)) AND (((('') BETWEEN (0.34531279025332107) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1530482677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1382404495 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1466479292 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')OR(0.9825684460575279)))OR(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 435511121 339187508 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-705412518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2078803701 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)/('-56381935')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1371689128 -1473017836 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=855609602 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<(0X30205c2d)))<<(CASE x''  WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1311346474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((8.01780642E8 IN ()) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -5.05818961E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '6 sz=980719685 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6473475768545618)) BETWEEN ((((1787003391)GLOB(NULL)))) AND ((((x'') ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=174921594'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 964420591'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (866055642 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELY('0.0026011420800883256') THEN (+ (x'75e9')) ELSE CASE 0.10668213630089374  WHEN '5b' THEN '' WHEN NULL THEN x'' WHEN NULL THEN x'' ELSE '-943945204' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '79153122 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '663296163 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '314633166 2 sz=13446558'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((x'') BETWEEN (0X7ffca74c) AND ('&OzXa'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1569700260 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.31915732627254767' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-79204143 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1220121788 -116894881 sz=426863783 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))>(((~ (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))>>(((NULL)IS NOT(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '2147264332' END) NOT BETWEEN ((('-1440472833') BETWEEN (-1769235091) AND (0.1950813586714515))) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((0.14631079123971125)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)AND(0.1364431810802077)) IN (CAST(8.01780642E8 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)OR(TOTAL_CHANGES())))AND((('b,褓7NN⼠')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1765206736 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=737775565'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2013239043'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('538753738')%(0.4899530741389262)) IN (((0.320162184960995) NOT BETWEEN ('S-u೧c+') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-900488922 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=285576750 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('992787851' IN ())  WHEN '-1473017836' THEN (('-386446123')/(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1864889678 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('') BETWEEN (NULL) AND (x'9162')) THEN (('䷋') NOT BETWEEN ('3誻um3>J') AND (0X1bcb8af1)) ELSE '1299003957' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '685967570 sz=993300364 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-82018998 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((NOT (0.7517665680985658)), (~ (2129960223))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.718931629449801 THEN 0.17813606823749495 END) BETWEEN (0.029790353109422907) AND ((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (x'') AND (NULL)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1217124734 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1565383359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1388393976 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1571049153 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2027466198 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-310115081 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((-1059079344 IN (1891777542)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.8461843731510711 IN ('', -1949305539)) THEN ((0.7970864663501704) NOT BETWEEN (x'') AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-849657660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1383808183 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-827405915) BETWEEN (0.6526575811355269) AND (0.8303968846400066)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1281782994 sz=-245558221 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0Xffffffffa200f59a)OR(0xffffffffc958e4f4)))AND(x'')))AND('R{ᇌ+4^9!,')))OR('&ozxa')))/((('-78004449')+('-859294298')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2111365907 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=1878325959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-107477286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffe1d9d0af; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '775804952 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2059613224 unordered'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('㤫S')>>(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-962687583 0 sz=348559045 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-403511071'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'75ad' COLLATE RTRIM)OR(((-8.4965766E8)*('-705412518')))))AND(((0X33c4079c) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1378940407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOT BETWEEN (x'') AND ('	, R')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.13095803239871118)IS NOT(CAST('' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.40761008970218027  WHEN '-584039092' THEN x'' WHEN 0.518131569393632 THEN x'' WHEN 0.9758093730747528 THEN x'' ELSE '''x' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('159302256' AS NUMERIC)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=1668107321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-92712892 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1734315488 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(('L4qq' IN (x'd465')), ((-2.76246538E8) ISNULL), '1566437265', ((NULL)=(0.8231791503846118))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '643669196 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1698889585' AS TEXT) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-162950230'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.13704332583952017; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1049085884'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=864100056'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2013369790'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'ed50' AS TEXT)  WHEN json_array_length(NULL) THEN '' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*('-347728221')))*(CAST('滧k' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1854447309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-95046468 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array(0.1361044073711538, '1678674019'))+((~ (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('8[>dp')/('929291435')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1526706346 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)*('')))AND(((NULL)OR(x'')))))OR(((('-258364373'))>=((-9.00488922E8))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1382176294'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('-1153540111') NOT BETWEEN (NULL) AND (0xffffffffd4eed41c)))AND(((NULL) BETWEEN ('24728069') AND (0.6266108134177473)))))AND(NULL COLLATE RTRIM)))OR((NOT (0.8018231587559017)))))AND((NOT ('p+곪釼')))))AND(((x'd133')>>(NULL)))))OR(CASE WHEN NULL THEN 0.1199892532953668 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '855982697 sz=1141102472 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE '-2094764313'  WHEN 'k.YPK>	Q' THEN 0.10976146368259088 END)AND(NULL COLLATE RTRIM)))AND(((0.1950813586714515)%('1916009674')))))AND(CAST(NULL AS BLOB))))AND((NOT (x'da77')))))AND(((NULL)&(x'')))))OR('0.19498624682538646' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-310115081 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_type((('-1577927959')<>('''x'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'b37b') NOTNULL)))<=(('' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X4f9fa2ea AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('-276246538'))  WHEN ((((x'')AND(x'')))OR(x'')) THEN CAST(x'7f2c' AS TEXT) WHEN ((NULL) NOT NULL) THEN (('썉R?\r')OR(NULL)) WHEN CASE x''  WHEN x'' THEN NULL END THEN (+ (x'')) ELSE CASE -7.22545636E8  WHEN -112948222 THEN '640918903' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-305298279 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'88ef')AND('')))OR(-60077165)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -75756398 0 sz=-1870097320 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1736266372 2 0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.08602290742789842)%('K+1')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))=((0.8201229585132738)))))<=((((((x'')AND('')))AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-695985803 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'8364') NOTNULL) THEN ABS('-77972318') ELSE (('3\nmffiz썉')-(0.531991958521935)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=633393920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1475005011 sz=386782345 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)+(CASE x''  WHEN '339187508' THEN 1.566437265E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('kJ4{') NOT BETWEEN ('ba~#xz') AND (NULL)) IN ((('1192257337')!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1653388690 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=600271131 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-61004580 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7661193071220925; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=366439023 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-462954613 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1053845236 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1787003391 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1676572473 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1419288359 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((750733641)&(0x6fcba5ce)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1321054849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=430925265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-900488922 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -403511071 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.46840656852236207 THEN NULL END) NOT BETWEEN (CASE '-54064661'  WHEN 0.2778382627437438 THEN x'' END) AND (((((0xffffffffdbc31529)OR(0xffffffff95b90b39)))OR(0X47d44ca9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2016734093 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('S-u೧c+')OR(1499628088)))OR(NULL)))AND(-3.10115081E8)))AND('-1132391899')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=38140092'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' END)LIKE(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '2147264332' THEN x'' END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9685677128146357 IN ('-1694241973'))) BETWEEN (('2m镈W' IN ())) AND (((0.5641883981004955) BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=615221467 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.8666320626514192 COLLATE RTRIM IN (((((NULL)OR(0.47722328596585595)))AND('-1315624012')), CASE x''  WHEN 586090813 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.2416875384761772 COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1680155467 234930827 sz=1205233552 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-27048359 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1734315488 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-2094919057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (-865809399) AND ('-66616628')) THEN ((-1826580478) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-735026782 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((x'')) AND ((((('', 0.6855845585747657, '-859294298')) NOT BETWEEN ((0.9438711420777744, '}	', -543134244)) AND ((NULL, 'jN', 0.21419132614868797)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.8042517918195914 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1329104355 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1313678741 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-908708461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=643669196 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.0517679592393967 IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('435511121')-(NULL)))+((((NULL, -253207452, x''))>=((NULL, NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1204746704'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=350598264'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1089908270 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((4.35511121E8)!=(x''))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1513663923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1009977393 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.6522986812081983 IN ()) IN ((('')GLOB(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)|(CHAR(0.17930227084134887))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=13016513 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'026b' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 2069427050 sz=1298624494 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1434803144 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'12ce' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<<(0.6509194379552972)) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-840735082 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11188504114595854)) BETWEEN ((((0.3946282911784087)<>(x'')))) AND ((NULL COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0xffffffffe8edd212)))<>((((0.9915535508613179)) NOT BETWEEN (('F{i/9ⱦ{}>}')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '159302256 -1236013156 sz=-590947638 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '71937036 sz=-94266642'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-605032249 1787003391 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2118222542 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(0x12c0ebce COLLATE BINARY, (((0Xffffffffbc811225)) BETWEEN ((x'')) AND (('-403511071'))), 't'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=-1769235091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-466360840 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-705412518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2094764313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0xffffffffc471d3a7)AND(0xffffffffcd5b40c4)))AND('!&	^\nfD')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2009350787 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (x'') AND (0.9186420033763059)))GLOB(x'd8572dba' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-894261880 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.2411422241801776)) NOT BETWEEN ((((0.07210141728894615) IS FALSE))) AND (((('857674596')LIKE('589459224'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN '-2068533568' THEN 7.50733641E8 ELSE -723867624 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1757712109 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1342803130 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, x''))<((NULL, NULL, x''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '2025185632' THEN -8.59294298E8 WHEN NULL THEN 2.078803701E9 WHEN 'ZH(XIU%bD' THEN 0.05353560959783077 WHEN '-0.0' THEN '-251623659' WHEN 0X91c0a53 THEN x'bfc7' ELSE 0Xffffffffa8338814 END)>(0.24233008720970206)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'be08') IS TRUE)) BETWEEN ((('-633153986')<>(NULL))) AND (((x'fdeb') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1917149263 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN x'' END) NOT BETWEEN (CASE 1326523001  WHEN x'' THEN 0.9263721247753716 END) AND (((x'')/('-2009350787')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1311346474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1118873616 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1508080730'))) NOT BETWEEN (((x'') NOT BETWEEN (x'2063') AND (x'71a7'))) AND ((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4123268165957862 IN ('', 0X53072a12, x''))) BETWEEN (((NULL)/(x'c8af'))) AND (((NULL) NOT BETWEEN (0.49268066213465334) AND (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 sz=165704550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((372267422) NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-943945204 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1118452015 sz=-900488922 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-667986426 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-75756398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>=(0x7ccb9666))))<((((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=474267918'); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-59915198 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(CHAR(NULL)); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL, c0=x'', c0=x'd0f5a302'; -- 0ms;
VACUUM; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 BLOB , c2 BLOB ); -- 0ms;
UPDATE OR IGNORE t0 SET c1=-1223999886 WHERE CAST(t0.c0 AS REAL); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL) WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE vt0 SET c0='-403511071', c0=0.977858248214095, c0=x''; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0x23327dbd; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.0234598889934986, c0=0.15983207070300876; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
REINDEX  t0; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-21888502 noskipscan'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1324279272') WHERE CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.c0)) WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN 0.473121965173241 WHEN ((vt0.c0)>>(vt0.c0)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c0, vt0.c0))) END; -- 0ms;
UPDATE rt0 SET (c1)=(NULL) WHERE (((rt0.c2, rt0.c1, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c2) NOT NULL), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((rt0.c0)|(rt0.c1)), rt0.c0 COLLATE NOCASE)) AND ((0.8062759802320685, (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1)IS(rt0.c1)), COALESCE(DISTINCT '-1132391899', rt0.c0), '-193310424'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7955994289621897))<((NULL)))) IS FALSE); -- 0ms;
PRAGMA temp.threads = -5912284905649115313; -- 1ms;
UPDATE rt0 SET (c1, c0)=('2046184642', 0.058754823414577606) WHERE ((rt0.c1) ISNULL) COLLATE RTRIM; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.3605256379600008); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (1411400843); -- 21ms;
PRAGMA threads; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(x'ecb1') WHERE (((NOT (vt0.c0)))%(NULL)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0, c2)=(-1.551000402E9, NULL, 0.035046603821186184) WHERE rt0.c1; -- 0ms;
CREATE INDEX i89 ON t0(((((NULL COLLATE NOCASE)AND(((((c2)AND(c1)))AND(c2)))))AND(0.9504656950988157)) COLLATE BINARY,((TIME(c0, c1, c0)) NOT NULL) COLLATE RTRIM,c2 DESC); -- 23ms;
UPDATE OR IGNORE t0 SET (c0, c2)=(NULL, 0.37436274529378355) WHERE CASE x''  WHEN (NOT (t0.c2)) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN t0.c2 COLLATE BINARY WHEN (((t0.c1)) BETWEEN ((NULL)) AND ((t0.c2))) THEN t0.c2 ELSE CAST(t0.c1 AS BLOB) END; -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'645b' IN ())) NOT BETWEEN (-1383808183) AND (TRIM('1403576961'))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=(NULL, x'24ed') WHERE ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(NULL)))OR(vt0.c0))) NOT NULL); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
PRAGMA main.legacy_file_format = true; -- 1ms;
UPDATE OR FAIL t0 SET c0='\\nASz%D馉7', c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c2='+*G~盵'; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-1150458340'; -- 8ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE ((rt0.c1)<>(rt0.c1)) COLLATE RTRIM; -- 0ms;
END TRANSACTION; -- 14ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX i89; -- 4ms;
PRAGMA main.secure_delete = false; -- 0ms;
REINDEX RTRIM; -- 0ms;
DELETE FROM t0 WHERE IFNULL(t0.c1, t0.c0) COLLATE NOCASE; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 1ms;
PRAGMA temp.default_cache_size = -310115081; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i1 ON t0(((((c0)&(c0))) BETWEEN ((NOT (c2))) AND (json_remove(c2, c0, c1, c2))),((((CASE WHEN '%J' THEN c2 ELSE c1 END)OR(((x'a5ef') NOT BETWEEN (c2) AND (c2)))))OR(CAST(c1 AS REAL))) COLLATE RTRIM DESC,c2 COLLATE RTRIM); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i12 ON t0(c0 COLLATE BINARY DESC,0.8351655717380966 COLLATE RTRIM,((((CASE WHEN c1 THEN c1 WHEN c0 THEN x'' WHEN c1 THEN c1 ELSE c1 END)OR(NULLIF(DISTINCT c2, c0))))OR(c1)) COLLATE RTRIM ASC) WHERE ((-1.769235091E9)<=(c1)); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0x6d71d09b) WHERE CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '688716851' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN -9.3231058E8 ELSE ((vt0.c0)|(0.6527795551012087)) END; -- 4ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON (json_quote('-608561694') IN (rt0.c2)) WHERE ('0.40442318315561454') ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN ()) DESC, (((((rt0.c1)&(t0.c1)), t0.c0 COLLATE BINARY, ((t0.c1)>>(t0.c1)), (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0) IS FALSE)))!=((((rt0.c2) BETWEEN (0.5172616048424387) AND (rt0.c0)), CAST(rt0.c2 AS REAL), CASE WHEN vt0.c0 THEN 'm3100470111353853183 552:647 6287005718799005145:282:80--554547788774896294-5688429733770751281 1568 v' WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c2 END, (- (rt0.c1)), 1224607651))) ASC;
SELECT SUM(count) FROM (SELECT (('0.40442318315561454') IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (json_quote('-608561694') IN (rt0.c2)) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN ()) DESC, (((((rt0.c1)&(t0.c1)), t0.c0 COLLATE BINARY, ((t0.c1)>>(t0.c1)), (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0) IS FALSE)))<>((((rt0.c2) BETWEEN (0.5172616048424387) AND (rt0.c0)), CAST(rt0.c2 AS REAL), CASE WHEN vt0.c0 THEN 'm3100470111353853183 552:647 6287005718799005145:282:80--554547788774896294-5688429733770751281 1568 v' WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c2 END, (- (rt0.c1)), 1224607651))) ASC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON (json_quote('-608561694') IN (rt0.c2)) WHERE ('0.40442318315561454') ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN ()) DESC, (((((rt0.c1)&(t0.c1)), t0.c0 COLLATE BINARY, ((t0.c1)>>(t0.c1)), (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0) IS FALSE)))!=((((rt0.c2) BETWEEN (0.5172616048424387) AND (rt0.c0)), CAST(rt0.c2 AS REAL), CASE WHEN vt0.c0 THEN 'm3100470111353853183 552:647 6287005718799005145:282:80--554547788774896294-5688429733770751281 1568 v' WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c2 END, (- (rt0.c1)), 1224607651))) ASC;
SELECT SUM(count) FROM (SELECT (('0.40442318315561454') IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON (json_quote('-608561694') IN (rt0.c2)) ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN ()) DESC, (((((rt0.c1)&(t0.c1)), t0.c0 COLLATE BINARY, ((t0.c1)>>(t0.c1)), (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0) IS FALSE)))<>((((rt0.c2) BETWEEN (0.5172616048424387) AND (rt0.c0)), CAST(rt0.c2 AS REAL), CASE WHEN vt0.c0 THEN 'm3100470111353853183 552:647 6287005718799005145:282:80--554547788774896294-5688429733770751281 1568 v' WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c2 END, (- (rt0.c1)), 1224607651))) ASC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN t0 ON (json_quote('-608561694') IN (rt0.c2)) WHERE ('0.40442318315561454') ORDER BY (((rt0.c0)IS NOT(rt0.c0)) IN ()) DESC, (((((rt0.c1)&(t0.c1)), t0.c0 COLLATE BINARY, ((t0.c1)>>(t0.c1)), (((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))), ((rt0.c0) IS FALSE)))!=((((rt0.c2) BETWEEN (0.5172616048424387) AND (rt0.c0)), CAST(rt0.c2 AS REAL), CASE WHEN vt0.c0 THEN 'm3100470111353853183 552:647 6287005718799005145:282:80--554547788774896294-5688429733770751281 1568 v' WHEN t0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c2 END, (- (rt0.c1)), 1224607651))) ASC;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c0))>=((t0.c0))))>(((rt0.c2)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((t0.c0))))>(((rt0.c2)<(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c0))>=((t0.c0))))>(((rt0.c2)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))>=((t0.c0))))>(((rt0.c2)<(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((rt0.c0))>=((t0.c0))))>(((rt0.c2)<(rt0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN NULL WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0)IS NOT('z9')) ELSE CASE WHEN x'1cfe' THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN NULL WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0)IS NOT('z9')) ELSE CASE WHEN x'1cfe' THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN NULL WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0)IS NOT('z9')) ELSE CASE WHEN x'1cfe' THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN NULL WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0)IS NOT('z9')) ELSE CASE WHEN x'1cfe' THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN NULL WHEN CAST(t0.c2 AS NUMERIC) THEN ((t0.c0)IS NOT('z9')) ELSE CASE WHEN x'1cfe' THEN t0.c0 END END);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))|(x'5630'))) ORDER BY RTRIM(t0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))|(x'5630'))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY RTRIM(t0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))|(x'5630'))) ORDER BY RTRIM(t0.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))|(x'5630'))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY RTRIM(t0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((((NOT (rt0.c0)))|(x'5630'))) ORDER BY RTRIM(t0.c2 COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)>>('564360766'))) AND (vt0.c0 COLLATE RTRIM)) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)>>('564360766'))) AND (vt0.c0 COLLATE RTRIM)) ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)>>('564360766'))) AND (vt0.c0 COLLATE RTRIM)) ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)>>('564360766'))) AND (vt0.c0 COLLATE RTRIM)) ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((QUOTE(vt0.c0)) BETWEEN (((vt0.c0)>>('564360766'))) AND (vt0.c0 COLLATE RTRIM)) ASC, vt0.c0;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c1, t0.c1, rt0.c2)) BETWEEN (((~ (t0.c2)), ((((((((((((t0.c2)AND(rt0.c1)))AND('-742238557')))AND(t0.c0)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)), (rt0.c0 IN ()))) AND ((((t0.c0)-(vt0.c0)), ((rt0.c1)>=(t0.c1)), (~ (t0.c2)))))) ORDER BY CAST(NULL AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c1, rt0.c2)) BETWEEN (((~ (t0.c2)), ((((((((((((t0.c2)AND(rt0.c1)))AND('-742238557')))AND(t0.c0)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)), (rt0.c0 IN ()))) AND ((((t0.c0)-(vt0.c0)), ((rt0.c1)>=(t0.c1)), (~ (t0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(NULL AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c1, t0.c1, rt0.c2)) BETWEEN (((~ (t0.c2)), ((((((((((((t0.c2)AND(rt0.c1)))AND('-742238557')))AND(t0.c0)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)), (rt0.c0 IN ()))) AND ((((t0.c0)-(vt0.c0)), ((rt0.c1)>=(t0.c1)), (~ (t0.c2)))))) ORDER BY CAST(NULL AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c1, rt0.c2)) BETWEEN (((~ (t0.c2)), ((((((((((((t0.c2)AND(rt0.c1)))AND('-742238557')))AND(t0.c0)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)), (rt0.c0 IN ()))) AND ((((t0.c0)-(vt0.c0)), ((rt0.c1)>=(t0.c1)), (~ (t0.c2)))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CAST(NULL AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((((t0.c1, t0.c1, rt0.c2)) BETWEEN (((~ (t0.c2)), ((((((((((((t0.c2)AND(rt0.c1)))AND('-742238557')))AND(t0.c0)))OR(rt0.c2)))OR(t0.c1)))AND(vt0.c0)), (rt0.c0 IN ()))) AND ((((t0.c0)-(vt0.c0)), ((rt0.c1)>=(t0.c1)), (~ (t0.c2)))))) ORDER BY CAST(NULL AS BLOB)  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN (((rt0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t0.c1)) AND ((NULL, 0.7780609950711478, rt0.c0))) THEN rt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t0.c1)) AND ((NULL, 0.7780609950711478, rt0.c0))) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN (((rt0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t0.c1)) AND ((NULL, 0.7780609950711478, rt0.c0))) THEN rt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t0.c1)) AND ((NULL, 0.7780609950711478, rt0.c0))) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE WHEN (((rt0.c0, t0.c2, vt0.c0)) NOT BETWEEN ((rt0.c2, vt0.c0, t0.c1)) AND ((NULL, 0.7780609950711478, rt0.c0))) THEN rt0.c0 COLLATE NOCASE END) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c0, t0.c1, rt0.c1, t0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c1, NULL, rt0.c1)) AND ((t0.c2, rt0.c2, t0.c0, t0.c0, vt0.c0))))>>(((t0.c2)-(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c0, t0.c1, rt0.c1, t0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c1, NULL, rt0.c1)) AND ((t0.c2, rt0.c2, t0.c0, t0.c0, vt0.c0))))>>(((t0.c2)-(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c0, t0.c1, rt0.c1, t0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c1, NULL, rt0.c1)) AND ((t0.c2, rt0.c2, t0.c0, t0.c0, vt0.c0))))>>(((t0.c2)-(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((rt0.c0, t0.c1, rt0.c1, t0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c1, NULL, rt0.c1)) AND ((t0.c2, rt0.c2, t0.c0, t0.c0, vt0.c0))))>>(((t0.c2)-(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (NULL) ORDER BY (((((rt0.c0, t0.c1, rt0.c1, t0.c1, rt0.c2)) BETWEEN ((rt0.c2, t0.c2, t0.c1, NULL, rt0.c1)) AND ((t0.c2, rt0.c2, t0.c0, t0.c0, vt0.c0))))>>(((t0.c2)-(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)IS NOT(rt0.c1)) IN ()) WHERE (((((CASE rt0.c2  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)OR(RTRIM('now'))))AND((((0X5984c2e1, rt0.c1, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((((t0.c0)AND(t0.c0)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)OR(RTRIM('now'))))AND((((0X5984c2e1, rt0.c1, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)IS NOT(rt0.c1)) IN ()) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((((t0.c0)AND(t0.c0)))OR(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)IS NOT(rt0.c1)) IN ()) WHERE (((((CASE rt0.c2  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)OR(RTRIM('now'))))AND((((0X5984c2e1, rt0.c1, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((((t0.c0)AND(t0.c0)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)OR(RTRIM('now'))))AND((((0X5984c2e1, rt0.c1, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)IS NOT(rt0.c1)) IN ()) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((((t0.c0)AND(t0.c0)))OR(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON (((t0.c2)IS NOT(rt0.c1)) IN ()) WHERE (((((CASE rt0.c2  WHEN t0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)OR(RTRIM('now'))))AND((((0X5984c2e1, rt0.c1, rt0.c2)) BETWEEN ((t0.c0, rt0.c2, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) ORDER BY (CAST(t0.c0 AS INTEGER) IN (((((t0.c0)AND(t0.c0)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c2)<=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c2)<=(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((t0.c2)<=(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c2)<=(rt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS NUMERIC))+((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))+((t0.c2 IN ()))) ASC);
SELECT * FROM vt0, t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS NUMERIC))+((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c0 AS NUMERIC))+((t0.c2 IN ()))) ASC);
SELECT * FROM vt0, t0 WHERE ((NOT (CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY ((CAST(t0.c0 AS NUMERIC))+((t0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(t0.c2 AS NUMERIC) COLLATE NOCASE);
SELECT * FROM vt0, t0 INDEXED BY i1 WHERE (((vt0.c0)+(x'4206'))) ORDER BY (((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c1, vt0.c0, t0.c0)))) NOT BETWEEN (COALESCE(DISTINCT '', t0.c2)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(x'4206'))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i1 ORDER BY (((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c1, vt0.c0, t0.c0)))) NOT BETWEEN (COALESCE(DISTINCT '', t0.c2)) AND (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 INDEXED BY i1 WHERE (((vt0.c0)+(x'4206'))) ORDER BY (((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c1, vt0.c0, t0.c0)))) NOT BETWEEN (COALESCE(DISTINCT '', t0.c2)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)+(x'4206'))) IS TRUE)  as count FROM vt0, t0 INDEXED BY i1 ORDER BY (((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c1, vt0.c0, t0.c0)))) NOT BETWEEN (COALESCE(DISTINCT '', t0.c2)) AND (t0.c0)) ASC  NULLS FIRST);
SELECT * FROM vt0, t0 INDEXED BY i1 WHERE (((vt0.c0)+(x'4206'))) ORDER BY (((((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, NULL)) AND ((t0.c1, vt0.c0, t0.c0)))) NOT BETWEEN (COALESCE(DISTINCT '', t0.c2)) AND (t0.c0)) ASC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (- (t0.c0)) THEN (~ ('-363516847')) END) ORDER BY (((NOT (t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN (- (t0.c0)) THEN (~ ('-363516847')) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((NOT (t0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (- (t0.c0)) THEN (~ ('-363516847')) END) ORDER BY (((NOT (t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN (- (t0.c0)) THEN (~ ('-363516847')) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((NOT (t0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN (- (t0.c0)) THEN (~ ('-363516847')) END) ORDER BY (((NOT (t0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (NULL COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (NULL COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT * FROM vt0, t0 WHERE (268048261) ORDER BY '}FU!t9';
SELECT SUM(count) FROM (SELECT ((268048261) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY '}FU!t9');
SELECT * FROM vt0, t0 WHERE (268048261) ORDER BY '}FU!t9';
SELECT SUM(count) FROM (SELECT ((268048261) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY '}FU!t9');
SELECT * FROM vt0, t0 WHERE (268048261) ORDER BY '}FU!t9';
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c1)))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((('▕^' IN (t0.c1)))))) ORDER BY ((((((((t0.c0)OR(x'')))OR(t0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((('▕^' IN (t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((t0.c0)OR(x'')))OR(t0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((('▕^' IN (t0.c1)))))) ORDER BY ((((((((t0.c0)OR(x'')))OR(t0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((('▕^' IN (t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((t0.c0)OR(x'')))OR(t0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((('▕^' IN (t0.c1)))))) ORDER BY ((((((((t0.c0)OR(x'')))OR(t0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0))>=(vt0.c0))) ORDER BY CAST(vt0.c0 AS TEXT) ASC, (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0))>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC, (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0))>=(vt0.c0))) ORDER BY CAST(vt0.c0 AS TEXT) ASC, (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0))>=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS TEXT) ASC, (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0))>=(vt0.c0))) ORDER BY CAST(vt0.c0 AS TEXT) ASC, (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(LIKELY(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(LIKELY(vt0.c0))) ASC);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(LIKELY(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(LIKELY(vt0.c0))) ASC);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()), ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))OR(LIKELY(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))<=((x'a7e1', vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))<=((x'a7e1', vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))<=((x'a7e1', vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))<=((x'a7e1', vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))<=((x'a7e1', vt0.c0, vt0.c0)))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB)) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND(rt0.c0)))AND(rt0.c2 COLLATE NOCASE)), ((UPPER(rt0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND(rt0.c0)))AND(rt0.c2 COLLATE NOCASE)), ((UPPER(rt0.c2)) ISNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB)) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND(rt0.c0)))AND(rt0.c2 COLLATE NOCASE)), ((UPPER(rt0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND(rt0.c0)))AND(rt0.c2 COLLATE NOCASE)), ((UPPER(rt0.c2)) ISNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END AS BLOB)) ORDER BY CAST(((rt0.c2) IS FALSE) AS BLOB)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)AND(rt0.c0)))AND(rt0.c2 COLLATE NOCASE)), ((UPPER(rt0.c2)) ISNULL) ASC;
SELECT * FROM rt0, vt0, t0 WHERE ((CASE WHEN rt0.c0 THEN t0.c0 END IN ())) ORDER BY ((((t0.c1) IS TRUE))=(rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c1) IS TRUE))==(rt0.c2 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((CASE WHEN rt0.c0 THEN t0.c0 END IN ())) ORDER BY ((((t0.c1) IS TRUE))=(rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN t0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c1) IS TRUE))==(rt0.c2 COLLATE BINARY))  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE ((CASE WHEN rt0.c0 THEN t0.c0 END IN ())) ORDER BY ((((t0.c1) IS TRUE))=(rt0.c2 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOTNULL));
SELECT * FROM t0 WHERE (((HEX(t0.c2)) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (0.09454549448264682)));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c2)) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (0.09454549448264682))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((HEX(t0.c2)) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (0.09454549448264682)));
SELECT SUM(count) FROM (SELECT ((((HEX(t0.c2)) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (0.09454549448264682))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((HEX(t0.c2)) NOT BETWEEN (((t0.c0)&(t0.c2))) AND (0.09454549448264682)));
SELECT * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (rt0.c0) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (rt0.c0) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c1 ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0))))) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON rt0.c1 WHERE (rt0.c0) ORDER BY (((vt0.c0 COLLATE RTRIM))>=((((((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt0.c0))))) DESC;
SELECT * FROM t0, vt0 WHERE (((('439312349')>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('439312349')>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((('439312349')>=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((('439312349')>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((('439312349')>=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB)) ORDER BY (- ((t0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY (- ((t0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB)) ORDER BY (- ((t0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY (- ((t0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST((t0.c1 IN ()) AS BLOB)) ORDER BY (- ((t0.c1 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (CHAR(vt0.c0) IN (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CHAR(vt0.c0) IN (((vt0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (CHAR(vt0.c0) IN (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY (CHAR(vt0.c0) IN (((vt0.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY (CHAR(vt0.c0) IN (((vt0.c0) IS TRUE))) ASC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (0.11348531842709109 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.11348531842709109 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (0.11348531842709109 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((0.11348531842709109 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (0.11348531842709109 COLLATE NOCASE);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR(0.6726636389522033 COLLATE RTRIM)))AND(((t0.c0)<<(vt0.c0)))))AND(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE x'' END)) RIGHT OUTER JOIN t0 ON (NOT ((((rt0.c1, t0.c2, t0.c2, t0.c2, rt0.c0))!=((rt0.c2, t0.c1, t0.c2, rt0.c1, t0.c0))))) WHERE (UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, (+ (CHAR(t0.c2, rt0.c2, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR(0.6726636389522033 COLLATE RTRIM)))AND(((t0.c0)<<(vt0.c0)))))AND(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE x'' END)) RIGHT OUTER JOIN t0 ON (NOT ((((rt0.c1, t0.c2, t0.c2, t0.c2, rt0.c0))!=((rt0.c2, t0.c1, t0.c2, rt0.c1, t0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, (+ (CHAR(t0.c2, rt0.c2, t0.c2)))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR(0.6726636389522033 COLLATE RTRIM)))AND(((t0.c0)<<(vt0.c0)))))AND(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE x'' END)) RIGHT OUTER JOIN t0 ON (NOT ((((rt0.c1, t0.c2, t0.c2, t0.c2, rt0.c0))!=((rt0.c2, t0.c1, t0.c2, rt0.c1, t0.c0))))) WHERE (UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, (+ (CHAR(t0.c2, rt0.c2, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT ((rt0.c2) BETWEEN (t0.c2) AND (t0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((rt0.c0 COLLATE NOCASE)OR(((vt0.c0) IS FALSE))))OR(0.6726636389522033 COLLATE RTRIM)))AND(((t0.c0)<<(vt0.c0)))))AND(CASE t0.c1  WHEN t0.c2 THEN vt0.c0 ELSE x'' END)) RIGHT OUTER JOIN t0 ON (NOT ((((rt0.c1, t0.c2, t0.c2, t0.c2, rt0.c0))!=((rt0.c2, t0.c1, t0.c2, rt0.c1, t0.c0))))) ORDER BY CASE WHEN vt0.c0 THEN rt0.c1 END COLLATE BINARY, (+ (CHAR(t0.c2, rt0.c2, t0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (LIKELY(0.1316330350676591)) AND (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOT BETWEEN (LIKELY(0.1316330350676591)) AND (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (LIKELY(0.1316330350676591)) AND (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c0))) NOT BETWEEN (LIKELY(0.1316330350676591)) AND (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (LIKELY(0.1316330350676591)) AND (((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)))));
SELECT * FROM vt0, t0, rt0 WHERE (((('9H')%(t0.c1)) IN (COALESCE(t0.c2, rt0.c2, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((('9H')%(t0.c1)) IN (COALESCE(t0.c2, rt0.c2, t0.c0, t0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((('9H')%(t0.c1)) IN (COALESCE(t0.c2, rt0.c2, t0.c0, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((('9H')%(t0.c1)) IN (COALESCE(t0.c2, rt0.c2, t0.c0, t0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((('9H')%(t0.c1)) IN (COALESCE(t0.c2, rt0.c2, t0.c0, t0.c1))));
SELECT ALL * FROM t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT ALL * FROM rt0 WHERE (((((x'b1cc')IS NOT(rt0.c2)))IS NOT(TYPEOF(rt0.c1)))) ORDER BY TRIM(json_array(rt0.c1, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'b1cc')IS NOT(rt0.c2)))IS NOT(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(json_array(rt0.c1, rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'b1cc')IS NOT(rt0.c2)))IS NOT(TYPEOF(rt0.c1)))) ORDER BY TRIM(json_array(rt0.c1, rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'b1cc')IS NOT(rt0.c2)))IS NOT(TYPEOF(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(json_array(rt0.c1, rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((x'b1cc')IS NOT(rt0.c2)))IS NOT(TYPEOF(rt0.c1)))) ORDER BY TRIM(json_array(rt0.c1, rt0.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (DATETIME(rt0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c2, t0.c1, t0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (DATETIME(rt0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((DATETIME(rt0.c2, t0.c1, t0.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (DATETIME(rt0.c2, t0.c1, t0.c1) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 INDEXED BY i89 WHERE (HEX(t0.c2 COLLATE BINARY)) ORDER BY ((((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c2));
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i89 ORDER BY ((((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c2)));
SELECT COUNT(*) FROM t0, vt0 INDEXED BY i89 WHERE (HEX(t0.c2 COLLATE BINARY)) ORDER BY ((((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c2));
SELECT SUM(count) FROM (SELECT ((HEX(t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, vt0 INDEXED BY i89 ORDER BY ((((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOT BETWEEN ((t0.c1 IN ())) AND (t0.c2)));
SELECT * FROM vt0, t0, rt0 WHERE (((NULL)<(((((rt0.c2)OR(t0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)))AND(((t0.c2)+(rt0.c2)))))AND(PRINTF(rt0.c1, t0.c1, rt0.c1))))OR(((x'')GLOB(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('pVy'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<(((((rt0.c2)OR(t0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)))AND(((t0.c2)+(rt0.c2)))))AND(PRINTF(rt0.c1, t0.c1, rt0.c1))))OR(((x'')GLOB(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('pVy'))))  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE (((NULL)<(((((rt0.c2)OR(t0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)))AND(((t0.c2)+(rt0.c2)))))AND(PRINTF(rt0.c1, t0.c1, rt0.c1))))OR(((x'')GLOB(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('pVy'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)<(((((rt0.c2)OR(t0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)))AND(((t0.c2)+(rt0.c2)))))AND(PRINTF(rt0.c1, t0.c1, rt0.c1))))OR(((x'')GLOB(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('pVy'))))  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE (((NULL)<(((((rt0.c2)OR(t0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1)))AND(((t0.c2)+(rt0.c2)))))AND(PRINTF(rt0.c1, t0.c1, rt0.c1))))OR(((x'')GLOB(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('pVy'))))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (986723850);
SELECT SUM(count) FROM (SELECT ((986723850) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (986723850);
SELECT SUM(count) FROM (SELECT ((986723850) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (986723850);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), (t0.c0 IN ()), CAST(t0.c2 AS INTEGER), ((((t0.c2)OR('1940186960')))AND(t0.c2)), t0.c1 COLLATE RTRIM, (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((DATE(t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), (t0.c0 IN ()), CAST(t0.c2 AS INTEGER), ((((t0.c2)OR('1940186960')))AND(t0.c2)), t0.c1 COLLATE RTRIM, (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), (t0.c0 IN ()), CAST(t0.c2 AS INTEGER), ((((t0.c2)OR('1940186960')))AND(t0.c2)), t0.c1 COLLATE RTRIM, (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT SUM(count) FROM (SELECT ((DATE(t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), (t0.c0 IN ()), CAST(t0.c2 AS INTEGER), ((((t0.c2)OR('1940186960')))AND(t0.c2)), t0.c1 COLLATE RTRIM, (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (DATE(t0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT), (t0.c0 IN ()), CAST(t0.c2 AS INTEGER), ((((t0.c2)OR('1940186960')))AND(t0.c2)), t0.c1 COLLATE RTRIM, (((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c2)))));
SELECT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c2)) AS REAL)) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)<(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c2)) AS REAL)) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)<(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(((t0.c1)<(t0.c2)) AS REAL)) ORDER BY t0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((t0.c2, t0.c1, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c0) AND (vt0.c0)), x'', x'0177')) AND (((((rt0.c1))>((t0.c2))), CASE WHEN rt0.c0 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))) WHERE ((((((rt0.c2) NOTNULL)))>((((rt0.c0)IS NOT(t0.c1)))))) ORDER BY ((json(t0.c2)) NOT BETWEEN (CASE 'xOjJe*^_'  WHEN t0.c0 THEN rt0.c1 ELSE '750733641' END) AND (CASE WHEN vt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOTNULL)))>((((rt0.c0)IS NOT(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((t0.c2, t0.c1, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c0) AND (vt0.c0)), x'', x'0177')) AND (((((rt0.c1))>((t0.c2))), CASE WHEN rt0.c0 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))) ORDER BY ((json(t0.c2)) NOT BETWEEN (CASE 'xOjJe*^_'  WHEN t0.c0 THEN rt0.c1 ELSE '750733641' END) AND (CASE WHEN vt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((t0.c2, t0.c1, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c0) AND (vt0.c0)), x'', x'0177')) AND (((((rt0.c1))>((t0.c2))), CASE WHEN rt0.c0 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))) WHERE ((((((rt0.c2) NOTNULL)))>((((rt0.c0)IS NOT(t0.c1)))))) ORDER BY ((json(t0.c2)) NOT BETWEEN (CASE 'xOjJe*^_'  WHEN t0.c0 THEN rt0.c1 ELSE '750733641' END) AND (CASE WHEN vt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOTNULL)))>((((rt0.c0)IS NOT(t0.c1)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((t0.c2, t0.c1, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c0) AND (vt0.c0)), x'', x'0177')) AND (((((rt0.c1))>((t0.c2))), CASE WHEN rt0.c0 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))) ORDER BY ((json(t0.c2)) NOT BETWEEN (CASE 'xOjJe*^_'  WHEN t0.c0 THEN rt0.c1 ELSE '750733641' END) AND (CASE WHEN vt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((t0.c2, t0.c1, rt0.c2)) NOT BETWEEN (((('') NOT BETWEEN (rt0.c0) AND (vt0.c0)), x'', x'0177')) AND (((((rt0.c1))>((t0.c2))), CASE WHEN rt0.c0 THEN rt0.c0 END, rt0.c2 COLLATE BINARY))) WHERE ((((((rt0.c2) NOTNULL)))>((((rt0.c0)IS NOT(t0.c1)))))) ORDER BY ((json(t0.c2)) NOT BETWEEN (CASE 'xOjJe*^_'  WHEN t0.c0 THEN rt0.c1 ELSE '750733641' END) AND (CASE WHEN vt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)!=(t0.c1))))>((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)!=(t0.c1))))>((t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)!=(t0.c1))))>((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)!=(t0.c1))))>((t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((t0.c0)!=(t0.c1))))>((t0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN QUOTE(rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN ((rt0.c0)AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN QUOTE(rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN ((rt0.c0)AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN QUOTE(rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN ((rt0.c0)AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN QUOTE(rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN ((rt0.c0)AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (NOT (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)) THEN QUOTE(rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (~ (rt0.c1)) WHEN ((rt0.c0)AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (NOT (rt0.c2)) END) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS NOT(t0.c2)) AS NUMERIC)) ORDER BY CASE ((t0.c2)<<(t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(x'3efa')))OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC, CAST(((t0.c2)%(t0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)IS NOT(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c2)<<(t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(x'3efa')))OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC, CAST(((t0.c2)%(t0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS NOT(t0.c2)) AS NUMERIC)) ORDER BY CASE ((t0.c2)<<(t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(x'3efa')))OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC, CAST(((t0.c2)%(t0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)IS NOT(t0.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c2)<<(t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(x'3efa')))OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC, CAST(((t0.c2)%(t0.c1)) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c1)IS NOT(t0.c2)) AS NUMERIC)) ORDER BY CASE ((t0.c2)<<(t0.c1))  WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN ((((t0.c0)OR(x'3efa')))OR(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC, CAST(((t0.c2)%(t0.c1)) AS NUMERIC)  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))=(CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 END)) WHERE (((((((rt0.c0)>(t0.c0)))OR(TRIM(t0.c1))))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>(t0.c0)))OR(TRIM(t0.c1))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))==(CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 END)));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))=(CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 END)) WHERE (((((((rt0.c0)>(t0.c0)))OR(TRIM(t0.c1))))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)>(t0.c0)))OR(TRIM(t0.c1))))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))==(CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 END)));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))=(CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 END)) WHERE (((((((rt0.c0)>(t0.c0)))OR(TRIM(t0.c1))))AND(rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0, vt0, t0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((NOT (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0);
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c1)IS NOT(rt0.c0))) NOTNULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END  WHEN ((t0.c0) NOTNULL) THEN (rt0.c2 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS TEXT) THEN (t0.c1 IN ()) END ASC  NULLS LAST, CAST(((t0.c2)|(rt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)IS NOT(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END  WHEN ((t0.c0) NOTNULL) THEN (rt0.c2 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS TEXT) THEN (t0.c1 IN ()) END ASC  NULLS LAST, CAST(((t0.c2)|(rt0.c0)) AS NUMERIC) ASC);
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c1)IS NOT(rt0.c0))) NOTNULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END  WHEN ((t0.c0) NOTNULL) THEN (rt0.c2 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS TEXT) THEN (t0.c1 IN ()) END ASC  NULLS LAST, CAST(((t0.c2)|(rt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)IS NOT(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END  WHEN ((t0.c0) NOTNULL) THEN (rt0.c2 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS TEXT) THEN (t0.c1 IN ()) END ASC  NULLS LAST, CAST(((t0.c2)|(rt0.c0)) AS NUMERIC) ASC);
SELECT * FROM rt0, t0, vt0 WHERE (((((t0.c1)IS NOT(rt0.c0))) NOTNULL)) ORDER BY CASE CASE WHEN rt0.c2 THEN rt0.c0 ELSE '' END  WHEN ((t0.c0) NOTNULL) THEN (rt0.c2 IN ()) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS TEXT) THEN (t0.c1 IN ()) END ASC  NULLS LAST, CAST(((t0.c2)|(rt0.c0)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((('1313678741') NOT BETWEEN ((- (t0.c1))) AND (TRIM(rt0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT (((('1313678741') NOT BETWEEN ((- (t0.c1))) AND (TRIM(rt0.c1, t0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((('1313678741') NOT BETWEEN ((- (t0.c1))) AND (TRIM(rt0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT (((('1313678741') NOT BETWEEN ((- (t0.c1))) AND (TRIM(rt0.c1, t0.c1)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((('1313678741') NOT BETWEEN ((- (t0.c1))) AND (TRIM(rt0.c1, t0.c1))));
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1) ISNULL)))) ORDER BY 374512459;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY 374512459);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1) ISNULL)))) ORDER BY 374512459;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY 374512459);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.24205429995769556)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((- (0.24205429995769556)))LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.24205429995769556)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((- (0.24205429995769556)))LIKE(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (0.24205429995769556)))LIKE(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0)/((- (rt0.c1))))) ORDER BY (0.325859186761878 IN ()) DESC, LIKELIHOOD(((rt0.c1) IS TRUE), 0.052732001027170905)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)/((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (0.325859186761878 IN ()) DESC, LIKELIHOOD(((rt0.c1) IS TRUE), 0.052732001027170905)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0)/((- (rt0.c1))))) ORDER BY (0.325859186761878 IN ()) DESC, LIKELIHOOD(((rt0.c1) IS TRUE), 0.052732001027170905)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)/((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (0.325859186761878 IN ()) DESC, LIKELIHOOD(((rt0.c1) IS TRUE), 0.052732001027170905)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c0)/((- (rt0.c1))))) ORDER BY (0.325859186761878 IN ()) DESC, LIKELIHOOD(((rt0.c1) IS TRUE), 0.052732001027170905)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(LTRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((HEX(LTRIM(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(LTRIM(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((HEX(LTRIM(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (HEX(LTRIM(rt0.c1)));
SELECT ALL * FROM t0, vt0 WHERE (json_insert(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END, (((t0.c0))>=((t0.c1))), t0.c2 COLLATE RTRIM)) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END, (((t0.c0))>=((t0.c1))), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM t0, vt0 WHERE (json_insert(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END, (((t0.c0))>=((t0.c1))), t0.c2 COLLATE RTRIM)) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END, (((t0.c0))>=((t0.c1))), t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM t0, vt0 WHERE (json_insert(CASE vt0.c0  WHEN t0.c2 THEN vt0.c0 END, (((t0.c0))>=((t0.c1))), t0.c2 COLLATE RTRIM)) ORDER BY t0.c2 ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c0)*(x'f33c58a3')) THEN CASE WHEN t0.c1 THEN rt0.c0 END ELSE CASE t0.c1  WHEN t0.c0 THEN 0xffffffff83246ee7 ELSE t0.c2 END END) ORDER BY CAST(JULIANDAY(rt0.c1, t0.c1, t0.c0) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)*(x'f33c58a3')) THEN CASE WHEN t0.c1 THEN rt0.c0 END ELSE CASE t0.c1  WHEN t0.c0 THEN 0Xffffffff83246ee7 ELSE t0.c2 END END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(JULIANDAY(rt0.c1, t0.c1, t0.c0) AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c0)*(x'f33c58a3')) THEN CASE WHEN t0.c1 THEN rt0.c0 END ELSE CASE t0.c1  WHEN t0.c0 THEN 0xffffffff83246ee7 ELSE t0.c2 END END) ORDER BY CAST(JULIANDAY(rt0.c1, t0.c1, t0.c0) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)*(x'f33c58a3')) THEN CASE WHEN t0.c1 THEN rt0.c0 END ELSE CASE t0.c1  WHEN t0.c0 THEN 0Xffffffff83246ee7 ELSE t0.c2 END END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CAST(JULIANDAY(rt0.c1, t0.c1, t0.c0) AS NUMERIC) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN ((rt0.c0)*(x'f33c58a3')) THEN CASE WHEN t0.c1 THEN rt0.c0 END ELSE CASE t0.c1  WHEN t0.c0 THEN 0xffffffff83246ee7 ELSE t0.c2 END END) ORDER BY CAST(JULIANDAY(rt0.c1, t0.c1, t0.c0) AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0X702ba84d) ORDER BY (((((+ (t0.c1)))OR(((t0.c2)IS NOT(rt0.c1)))))AND((rt0.c1 IN (rt0.c0)))) DESC, t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((0X702ba84d) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((+ (t0.c1)))OR(((t0.c2)IS NOT(rt0.c1)))))AND((rt0.c1 IN (rt0.c0)))) DESC, t0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0X702ba84d) ORDER BY (((((+ (t0.c1)))OR(((t0.c2)IS NOT(rt0.c1)))))AND((rt0.c1 IN (rt0.c0)))) DESC, t0.c2;
SELECT SUM(count) FROM (SELECT ALL ((0X702ba84d) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((+ (t0.c1)))OR(((t0.c2)IS NOT(rt0.c1)))))AND((rt0.c1 IN (rt0.c0)))) DESC, t0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0X702ba84d) ORDER BY (((((+ (t0.c1)))OR(((t0.c2)IS NOT(rt0.c1)))))AND((rt0.c1 IN (rt0.c0)))) DESC, t0.c2;
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c1)>(rt0.c1)), CAST(rt0.c1 AS REAL), (x'9414' IN ())))>=((PRINTF(t0.c2), t0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)>(rt0.c1)), CAST(rt0.c1 AS REAL), (x'9414' IN ())))>=((PRINTF(t0.c2), t0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c1)>(rt0.c1)), CAST(rt0.c1 AS REAL), (x'9414' IN ())))>=((PRINTF(t0.c2), t0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1)>(rt0.c1)), CAST(rt0.c1 AS REAL), (x'9414' IN ())))>=((PRINTF(t0.c2), t0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((t0.c1)>(rt0.c1)), CAST(rt0.c1 AS REAL), (x'9414' IN ())))>=((PRINTF(t0.c2), t0.c2 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c1 END))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c1 IN ()) THEN rt0.c1 END) ORDER BY PRINTF(rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c1 IN ()) THEN rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY PRINTF(rt0.c1));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c1 IN ()) THEN rt0.c1 END) ORDER BY PRINTF(rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c1 IN ()) THEN rt0.c1 END) IS TRUE)  as count FROM rt0 ORDER BY PRINTF(rt0.c1));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))  WHEN (rt0.c1 IN ()) THEN rt0.c1 END) ORDER BY PRINTF(rt0.c1);
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((0Xffffffffa518cf63) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((+ (rt0.c1)))))AND(rt0.c0)))OR('')))OR(json_array(rt0.c0, rt0.c1)))) ORDER BY ((rt0.c1)==(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffa518cf63) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((+ (rt0.c1)))))AND(rt0.c0)))OR('')))OR(json_array(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)=(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((0Xffffffffa518cf63) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((+ (rt0.c1)))))AND(rt0.c0)))OR('')))OR(json_array(rt0.c0, rt0.c1)))) ORDER BY ((rt0.c1)==(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((0xffffffffa518cf63) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((+ (rt0.c1)))))AND(rt0.c0)))OR('')))OR(json_array(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)=(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((0Xffffffffa518cf63) NOT BETWEEN (rt0.c2) AND (vt0.c0)))OR((+ (rt0.c1)))))AND(rt0.c0)))OR('')))OR(json_array(rt0.c0, rt0.c1)))) ORDER BY ((rt0.c1)==(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, vt0 INDEXED BY i89, t0 WHERE (0.6822753945522863) ORDER BY (((~ (t0.c1)))<<(CAST(t0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6822753945522863) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i89, t0 ORDER BY (((~ (t0.c1)))<<(CAST(t0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM rt0, vt0 INDEXED BY i89, t0 WHERE (0.6822753945522863) ORDER BY (((~ (t0.c1)))<<(CAST(t0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.6822753945522863) IS TRUE)  as count FROM rt0, vt0 INDEXED BY i89, t0 ORDER BY (((~ (t0.c1)))<<(CAST(t0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((t0.c0)>=(rt0.c1)))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c1, (((((- (rt0.c1)))AND(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>=(rt0.c1)))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c1, (((((- (rt0.c1)))AND(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((t0.c0)>=(rt0.c1)))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c1, (((((- (rt0.c1)))AND(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>=(rt0.c1)))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY t0.c1, (((((- (rt0.c1)))AND(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((t0.c0)>=(rt0.c1)))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(vt0.c0 AS REAL)))) ORDER BY t0.c1, (((((- (rt0.c1)))AND(rt0.c2)))AND(rt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY t0.c1 ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY t0.c1 ASC  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE (CAST((rt0.c2 IN (vt0.c0, t0.c2)) AS TEXT)) ORDER BY t0.c1 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN 0.39040838151607704 THEN (+ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.39040838151607704 THEN (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN 0.39040838151607704 THEN (+ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.39040838151607704 THEN (+ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN 0.39040838151607704 THEN (+ (rt0.c0)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE (((((((rt0.c2))<(('-1206490536')))))<>((((rt0.c1)<<(rt0.c0)))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<(('-1206490536')))))<>((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE (((((((rt0.c2))<(('-1206490536')))))<>((((rt0.c1)<<(rt0.c0)))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<(('-1206490536')))))<>((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (UPPER(DISTINCT vt0.c0)) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE (((((((rt0.c2))<(('-1206490536')))))<>((((rt0.c1)<<(rt0.c0)))))) ORDER BY rt0.c1 DESC;
SELECT * FROM t0, vt0 WHERE (CAST(json_patch(t0.c1, t0.c1) AS BLOB)) ORDER BY CAST(t0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(t0.c1, t0.c1) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS BLOB));
SELECT * FROM t0, vt0 WHERE (CAST(json_patch(t0.c1, t0.c1) AS BLOB)) ORDER BY CAST(t0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(t0.c1, t0.c1) AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS BLOB));
SELECT * FROM t0, vt0 WHERE (CAST(json_patch(t0.c1, t0.c1) AS BLOB)) ORDER BY CAST(t0.c0 AS BLOB);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)>(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)>(rt0.c2)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (('-2094764313' IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-2094764313' IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (('-2094764313' IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-2094764313' IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (('-2094764313' IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (LIKE(TRIM(DISTINCT rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC, CAST(((rt0.c2) BETWEEN ('OZ') AND (rt0.c0)) AS BLOB) ASC  NULLS FIRST, x'9060a775' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(TRIM(DISTINCT rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC, CAST(((rt0.c2) BETWEEN ('OZ') AND (rt0.c0)) AS BLOB) ASC  NULLS FIRST, x'9060a775' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKE(TRIM(DISTINCT rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC, CAST(((rt0.c2) BETWEEN ('OZ') AND (rt0.c0)) AS BLOB) ASC  NULLS FIRST, x'9060a775' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(TRIM(DISTINCT rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC, CAST(((rt0.c2) BETWEEN ('OZ') AND (rt0.c0)) AS BLOB) ASC  NULLS FIRST, x'9060a775' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (LIKE(TRIM(DISTINCT rt0.c0), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC, CAST(((rt0.c2) BETWEEN ('OZ') AND (rt0.c0)) AS BLOB) ASC  NULLS FIRST, x'9060a775' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((('-1383808183', rt0.c2, t0.c2, -1.992698627E9, vt0.c0)) BETWEEN (((~ (rt0.c0)), (- (t0.c0)), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)OR(t0.c2)))OR(0.16611228017157365)))OR(rt0.c2)))OR(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))) AND ((json_array(t0.c2, t0.c1), ((t0.c0)<(vt0.c0)), ((rt0.c1)%(t0.c1)), (t0.c0 IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0)))) WHERE ((((+ (t0.c2))) BETWEEN ((((rt0.c2))<((t0.c0)))) AND (x'588b')));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) BETWEEN ((((rt0.c2))<((t0.c0)))) AND (x'588b'))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((('-1383808183', rt0.c2, t0.c2, -1.992698627E9, vt0.c0)) BETWEEN (((~ (rt0.c0)), (- (t0.c0)), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)OR(t0.c2)))OR(0.16611228017157365)))OR(rt0.c2)))OR(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))) AND ((json_array(t0.c2, t0.c1), ((t0.c0)<(vt0.c0)), ((rt0.c1)%(t0.c1)), (t0.c0 IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((('-1383808183', rt0.c2, t0.c2, -1.992698627E9, vt0.c0)) BETWEEN (((~ (rt0.c0)), (- (t0.c0)), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)OR(t0.c2)))OR(0.16611228017157365)))OR(rt0.c2)))OR(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))) AND ((json_array(t0.c2, t0.c1), ((t0.c0)<(vt0.c0)), ((rt0.c1)%(t0.c1)), (t0.c0 IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0)))) WHERE ((((+ (t0.c2))) BETWEEN ((((rt0.c2))<((t0.c0)))) AND (x'588b')));
SELECT SUM(count) FROM (SELECT (((((+ (t0.c2))) BETWEEN ((((rt0.c2))<((t0.c0)))) AND (x'588b'))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((('-1383808183', rt0.c2, t0.c2, -1.992698627E9, vt0.c0)) BETWEEN (((~ (rt0.c0)), (- (t0.c0)), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)OR(t0.c2)))OR(0.16611228017157365)))OR(rt0.c2)))OR(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))) AND ((json_array(t0.c2, t0.c1), ((t0.c0)<(vt0.c0)), ((rt0.c1)%(t0.c1)), (t0.c0 IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((('-1383808183', rt0.c2, t0.c2, -1.992698627E9, vt0.c0)) BETWEEN (((~ (rt0.c0)), (- (t0.c0)), TYPEOF(DISTINCT vt0.c0), ((((((((vt0.c0)OR(t0.c2)))OR(0.16611228017157365)))OR(rt0.c2)))OR(vt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (t0.c1)))) AND ((json_array(t0.c2, t0.c1), ((t0.c0)<(vt0.c0)), ((rt0.c1)%(t0.c1)), (t0.c0 IN ()), SQLITE_COMPILEOPTION_GET(vt0.c0)))) WHERE ((((+ (t0.c2))) BETWEEN ((((rt0.c2))<((t0.c0)))) AND (x'588b')));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) IN ())) ORDER BY CASE WHEN rt0.c1 THEN t0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(rt0.c1)))%((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(rt0.c1)))%((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(rt0.c1)))%((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(rt0.c1)))%((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)*(rt0.c1)))%((+ (rt0.c1)))));
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c0)<>(t0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(t0.c1)) THEN ABS(DISTINCT t0.c1) END;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c0)/(t0.c1)) THEN ABS(DISTINCT t0.c1) END);
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c0)<>(t0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(t0.c1)) THEN ABS(DISTINCT t0.c1) END;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)!=(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((vt0.c0)/(t0.c1)) THEN ABS(DISTINCT t0.c1) END);
SELECT * FROM t0, vt0 WHERE ((~ (((t0.c0)<>(t0.c0))))) ORDER BY CASE WHEN ((vt0.c0)/(t0.c1)) THEN ABS(DISTINCT t0.c1) END;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c2)OR((t0.c2 IN (t0.c2)))))OR(t0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c2)OR((t0.c2 IN (t0.c2)))))OR(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c2)OR((t0.c2 IN (t0.c2)))))OR(t0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c2)OR((t0.c2 IN (t0.c2)))))OR(t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((t0.c2)OR((t0.c2 IN (t0.c2)))))OR(t0.c0 COLLATE NOCASE)) WHERE (rt0.c0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((~ (CAST(0.1812449670497428 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.1812449670497428 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((~ (CAST(0.1812449670497428 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.1812449670497428 AS INTEGER)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((~ (CAST(0.1812449670497428 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt0, t0 WHERE (((((((((CAST(NULL AS NUMERIC))AND(((vt0.c0)GLOB(vt0.c0)))))OR(UNLIKELY(t0.c2))))OR(t0.c2)))AND(((((t0.c1)AND(t0.c2)))OR(t0.c1))))) ORDER BY ((((((vt0.c0)AND('')))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS NUMERIC))AND(((vt0.c0)GLOB(vt0.c0)))))OR(UNLIKELY(t0.c2))))OR(t0.c2)))AND(((((t0.c1)AND(t0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND('')))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((((CAST(NULL AS NUMERIC))AND(((vt0.c0)GLOB(vt0.c0)))))OR(UNLIKELY(t0.c2))))OR(t0.c2)))AND(((((t0.c1)AND(t0.c2)))OR(t0.c1))))) ORDER BY ((((((vt0.c0)AND('')))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(NULL AS NUMERIC))AND(((vt0.c0)GLOB(vt0.c0)))))OR(UNLIKELY(t0.c2))))OR(t0.c2)))AND(((((t0.c1)AND(t0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)AND('')))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((((((CAST(NULL AS NUMERIC))AND(((vt0.c0)GLOB(vt0.c0)))))OR(UNLIKELY(t0.c2))))OR(t0.c2)))AND(((((t0.c1)AND(t0.c2)))OR(t0.c1))))) ORDER BY ((((((vt0.c0)AND('')))OR(vt0.c0))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (x'5336f82a')) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (((t0.c0, t0.c1, vt0.c0))==((t0.c1, t0.c2, t0.c0))) WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) WHEN t0.c0 THEN ((('1194351635', t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN ((vt0.c0) NOT NULL) THEN (- (t0.c2)) WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN LIKELIHOOD(DISTINCT t0.c0, 0.024247428254169257) ELSE ((t0.c2)<<(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (vt0.c0) AND (x'5336f82a')) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (((t0.c0, t0.c1, vt0.c0))=((t0.c1, t0.c2, t0.c0))) WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) WHEN t0.c0 THEN ((('1194351635', t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN ((vt0.c0) NOT NULL) THEN (- (t0.c2)) WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN LIKELIHOOD(DISTINCT t0.c0, 0.024247428254169257) ELSE ((t0.c2)<<(vt0.c0)) END DESC);
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (x'5336f82a')) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (((t0.c0, t0.c1, vt0.c0))==((t0.c1, t0.c2, t0.c0))) WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) WHEN t0.c0 THEN ((('1194351635', t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN ((vt0.c0) NOT NULL) THEN (- (t0.c2)) WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN LIKELIHOOD(DISTINCT t0.c0, 0.024247428254169257) ELSE ((t0.c2)<<(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (vt0.c0) AND (x'5336f82a')) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (((t0.c0, t0.c1, vt0.c0))=((t0.c1, t0.c2, t0.c0))) WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) WHEN t0.c0 THEN ((('1194351635', t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN ((vt0.c0) NOT NULL) THEN (- (t0.c2)) WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN LIKELIHOOD(DISTINCT t0.c0, 0.024247428254169257) ELSE ((t0.c2)<<(vt0.c0)) END DESC);
SELECT * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (x'5336f82a')) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (((t0.c0, t0.c1, vt0.c0))==((t0.c1, t0.c2, t0.c0))) WHEN t0.c0 COLLATE NOCASE THEN ((((vt0.c0)OR(vt0.c0)))AND(t0.c0)) WHEN t0.c0 THEN ((('1194351635', t0.c2, t0.c0)) BETWEEN ((t0.c1, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, t0.c0))) WHEN ((vt0.c0) NOT NULL) THEN (- (t0.c2)) WHEN CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN LIKELIHOOD(DISTINCT t0.c0, 0.024247428254169257) ELSE ((t0.c2)<<(vt0.c0)) END DESC;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE RTRIM INNER JOIN t0 ON (- (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE RTRIM INNER JOIN t0 ON (- (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE RTRIM INNER JOIN t0 ON (- (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE RTRIM INNER JOIN t0 ON (- (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((vt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE RTRIM INNER JOIN t0 ON (- (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c2)))|(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))|(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c2)))|(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2)))|(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c2)))|(rt0.c1)));
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5172616048424387) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5172616048424387) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5172616048424387) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5172616048424387) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN ((0.5172616048424387) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c2 AS REAL))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) WHERE (435511121) ORDER BY (NOT (x''));
SELECT SUM(count) FROM (SELECT ALL ((435511121) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c2 AS REAL))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) ORDER BY (NOT (x'')));
SELECT * FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c2 AS REAL))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) WHERE (435511121) ORDER BY (NOT (x''));
SELECT SUM(count) FROM (SELECT ALL ((435511121) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c2 AS REAL))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) ORDER BY (NOT (x'')));
SELECT * FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c2 AS REAL))/(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c0)))) WHERE (435511121) ORDER BY (NOT (x''));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) IN (((t0.c2) IS TRUE)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) IN (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((NOT (t0.c1)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) IN (((t0.c2) IS TRUE)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) IN (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((NOT (t0.c1)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) IN (((t0.c2) IS TRUE)))) ORDER BY CAST((NOT (t0.c1)) AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (((vt0.c0)<=(-1.02517886E8)), (+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN (((vt0.c0)<=(-1.02517886E8)), (+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (((vt0.c0)<=(-1.02517886E8)), (+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT NULL) IN (((vt0.c0)<=(-1.02517886E8)), (+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN (((vt0.c0)<=(-1.02517886E8)), (+ (vt0.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((((t0.c2)<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((t0.c2)<(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((((t0.c2)<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((t0.c2)<(rt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS TEXT)) ORDER BY ((((t0.c2)<(rt0.c1))) IS FALSE)  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (CASE (((t0.c0))==((t0.c2)))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((rt0.c2) NOT NULL) WHEN 0.977858248214095 THEN CAST(t0.c0 AS INTEGER) WHEN (rt0.c1 IN ()) THEN t0.c1 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c0) ISNULL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN 0.36723183120561553 ELSE ((t0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0))=((t0.c2)))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((rt0.c2) NOT NULL) WHEN 0.977858248214095 THEN CAST(t0.c0 AS INTEGER) WHEN (rt0.c1 IN ()) THEN t0.c1 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c0) ISNULL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN 0.36723183120561553 ELSE ((t0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE (((t0.c0))==((t0.c2)))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((rt0.c2) NOT NULL) WHEN 0.977858248214095 THEN CAST(t0.c0 AS INTEGER) WHEN (rt0.c1 IN ()) THEN t0.c1 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c0) ISNULL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN 0.36723183120561553 ELSE ((t0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0))=((t0.c2)))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((rt0.c2) NOT NULL) WHEN 0.977858248214095 THEN CAST(t0.c0 AS INTEGER) WHEN (rt0.c1 IN ()) THEN t0.c1 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c0) ISNULL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN 0.36723183120561553 ELSE ((t0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE (((t0.c0))==((t0.c2)))  WHEN ((rt0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((rt0.c2) NOT NULL) WHEN 0.977858248214095 THEN CAST(t0.c0 AS INTEGER) WHEN (rt0.c1 IN ()) THEN t0.c1 COLLATE BINARY WHEN rt0.c1 THEN ((rt0.c0) ISNULL) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN 0.36723183120561553 ELSE ((t0.c1) ISNULL) END);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))) DESC);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))) DESC);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT)) ORDER BY (((t0.c0 IN (t0.c0))) NOT BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END) AND (((((t0.c1)AND(t0.c2)))OR(t0.c1)))) DESC;
SELECT * FROM t0, rt0 WHERE ('UA\rob ./');
SELECT SUM(count) FROM (SELECT (('UA\rob ./') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('UA\rob ./');
SELECT SUM(count) FROM (SELECT (('UA\rob ./') IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ('UA\rob ./');
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i89, vt0 WHERE ((((rt0.c2)%(t0.c0)) IN (((rt0.c1) ISNULL)))) ORDER BY 0Xffffffffbe6ba58e;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(t0.c0)) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i89, vt0 ORDER BY 0Xffffffffbe6ba58e);
SELECT COUNT(*) FROM t0, rt0 INDEXED BY i89, vt0 WHERE ((((rt0.c2)%(t0.c0)) IN (((rt0.c1) ISNULL)))) ORDER BY 0Xffffffffbe6ba58e;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(t0.c0)) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM t0, rt0 INDEXED BY i89, vt0 ORDER BY 0Xffffffffbe6ba58e);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)==(vt0.c0)) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c2 ELSE '' END) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c1))))) ORDER BY t0.c1 DESC  NULLS LAST, ((((CAST(t0.c0 AS TEXT))AND(((t0.c2)LIKE(t0.c0)))))OR((~ (t0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c2 ELSE '' END) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS LAST, ((((CAST(t0.c0 AS TEXT))AND(((t0.c2)LIKE(t0.c0)))))OR((~ (t0.c2)))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c2 ELSE '' END) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c1))))) ORDER BY t0.c1 DESC  NULLS LAST, ((((CAST(t0.c0 AS TEXT))AND(((t0.c2)LIKE(t0.c0)))))OR((~ (t0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN t0.c2 ELSE '' END) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1 DESC  NULLS LAST, ((((CAST(t0.c0 AS TEXT))AND(((t0.c2)LIKE(t0.c0)))))OR((~ (t0.c2)))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c2 ELSE '' END) BETWEEN (((((t0.c0)AND(t0.c1)))AND(t0.c1))) AND (((((t0.c2)AND(t0.c1)))OR(t0.c1))))) ORDER BY t0.c1 DESC  NULLS LAST, ((((CAST(t0.c0 AS TEXT))AND(((t0.c2)LIKE(t0.c0)))))OR((~ (t0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((- (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((((t0.c0, t0.c2, t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c1, t0.c0, vt0.c0))))||((((t0.c1, t0.c1, t0.c2))>=((t0.c1, t0.c2, 'dvEloYui-')))))  NULLS LAST, (~ (((t0.c2)IS(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0, t0.c2, t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c1, t0.c0, vt0.c0))))||((((t0.c1, t0.c1, t0.c2))>=((t0.c1, t0.c2, 'dvEloYui-')))))  NULLS LAST, (~ (((t0.c2)IS(t0.c2))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((((t0.c0, t0.c2, t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c1, t0.c0, vt0.c0))))||((((t0.c1, t0.c1, t0.c2))>=((t0.c1, t0.c2, 'dvEloYui-')))))  NULLS LAST, (~ (((t0.c2)IS(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c0, t0.c2, t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c1, t0.c0, vt0.c0))))||((((t0.c1, t0.c1, t0.c2))>=((t0.c1, t0.c2, 'dvEloYui-')))))  NULLS LAST, (~ (((t0.c2)IS(t0.c2))))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((((t0.c0, t0.c2, t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c2, t0.c0, vt0.c0, t0.c0, t0.c0)) AND ((vt0.c0, t0.c0, t0.c1, t0.c0, vt0.c0))))||((((t0.c1, t0.c1, t0.c2))>=((t0.c1, t0.c2, 'dvEloYui-')))))  NULLS LAST, (~ (((t0.c2)IS(t0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(t0.c1))) NOT BETWEEN ('fhgJJT-W' COLLATE NOCASE) AND (((NULL)>(t0.c2))))) ORDER BY (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(t0.c1))) NOT BETWEEN ('fhgJJT-W' COLLATE NOCASE) AND (((NULL)>(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(t0.c1))) NOT BETWEEN ('fhgJJT-W' COLLATE NOCASE) AND (((NULL)>(t0.c2))))) ORDER BY (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(t0.c1))) NOT BETWEEN ('fhgJJT-W' COLLATE NOCASE) AND (((NULL)>(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))OR(t0.c0)))AND(t0.c1))) NOT BETWEEN ('fhgJJT-W' COLLATE NOCASE) AND (((NULL)>(t0.c2))))) ORDER BY (- (CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE rt0.c1 END WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(t0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE rt0.c1 END ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE rt0.c1 END WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(t0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE rt0.c1 END ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN ((t0.c2) NOT BETWEEN (NULL) AND (vt0.c0)) THEN CAST(t0.c2 AS TEXT) ELSE rt0.c1 END WHERE ((((rt0.c0)) BETWEEN ((((((rt0.c0)AND(t0.c1)))OR(rt0.c0)))) AND ((((((rt0.c2)AND(t0.c0)))AND(t0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(t0.c2)))==(((((((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((t0.c1)<(rt0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND ((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(t0.c2)))=(((((((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c1)<(rt0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND ((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(t0.c2)))==(((((((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((t0.c1)<(rt0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND ((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(t0.c2)))=(((((((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c1)<(rt0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND ((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))OR(t0.c0)))AND(t0.c2)))==(((((((((((((t0.c0)AND(x'')))OR(t0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((t0.c1)<(rt0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND ((((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) ASC;
SELECT * FROM vt0, t0, rt0 WHERE ((t0.c0 COLLATE BINARY IN ('%%'))) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((((((NULL)OR(t0.c1)))AND(t0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))))))AND(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)%(rt0.c1)))))OR(((vt0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN ('%%'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((((((NULL)OR(t0.c1)))AND(t0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))))))AND(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)%(rt0.c1)))))OR(((vt0.c0)|(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((t0.c0 COLLATE BINARY IN ('%%'))) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((((((NULL)OR(t0.c1)))AND(t0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))))))AND(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)%(rt0.c1)))))OR(((vt0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 COLLATE BINARY IN ('%%'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((((((NULL)OR(t0.c1)))AND(t0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))))))AND(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)%(rt0.c1)))))OR(((vt0.c0)|(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0, rt0 WHERE ((t0.c0 COLLATE BINARY IN ('%%'))) ORDER BY UPPER(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))), ((((((((((((((((NULL)OR(t0.c1)))AND(t0.c1)))AND(vt0.c0)))AND(rt0.c0)))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c0))))))AND(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)%(rt0.c1)))))OR(((vt0.c0)|(rt0.c2)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-1448193062' THEN t0.c1 END) FULL OUTER JOIN vt0 ON CASE ((t0.c0)-(rt0.c1))  WHEN 0.196841863703051 THEN ((t0.c1)||(rt0.c2)) ELSE CASE x''  WHEN t0.c1 THEN vt0.c0 END END WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY ((t0.c2)+(CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, '-1383808183' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-1448193062' THEN t0.c1 END) FULL OUTER JOIN vt0 ON CASE ((t0.c0)-(rt0.c1))  WHEN 0.196841863703051 THEN ((t0.c1)||(rt0.c2)) ELSE CASE x''  WHEN t0.c1 THEN vt0.c0 END END ORDER BY ((t0.c2)+(CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, '-1383808183' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-1448193062' THEN t0.c1 END) FULL OUTER JOIN vt0 ON CASE ((t0.c0)-(rt0.c1))  WHEN 0.196841863703051 THEN ((t0.c1)||(rt0.c2)) ELSE CASE x''  WHEN t0.c1 THEN vt0.c0 END END WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY ((t0.c2)+(CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, '-1383808183' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-1448193062' THEN t0.c1 END) FULL OUTER JOIN vt0 ON CASE ((t0.c0)-(rt0.c1))  WHEN 0.196841863703051 THEN ((t0.c1)||(rt0.c2)) ELSE CASE x''  WHEN t0.c1 THEN vt0.c0 END END ORDER BY ((t0.c2)+(CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, '-1383808183' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON HEX(DISTINCT CASE t0.c0  WHEN t0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN '-1448193062' THEN t0.c1 END) FULL OUTER JOIN vt0 ON CASE ((t0.c0)-(rt0.c1))  WHEN 0.196841863703051 THEN ((t0.c1)||(rt0.c2)) ELSE CASE x''  WHEN t0.c1 THEN vt0.c0 END END WHERE ((+ (((rt0.c1) NOTNULL)))) ORDER BY ((t0.c2)+(CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST, '-1383808183' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN ((t0.c1)!=(x'')) THEN (NOT (t0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE t0.c2  WHEN ((t0.c1)!=(x'')) THEN (NOT (t0.c2)) END ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN ((t0.c1)!=(x'')) THEN (NOT (t0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE t0.c2  WHEN ((t0.c1)!=(x'')) THEN (NOT (t0.c2)) END ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN ((t0.c1)!=(x'')) THEN (NOT (t0.c2)) END ASC;
SELECT * FROM t0 WHERE ((((((((-1066531975)AND(t0.c0)))AND(t0.c1))))>((CAST(t0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((-1066531975)AND(t0.c0)))AND(t0.c1))))>((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((-1066531975)AND(t0.c0)))AND(t0.c1))))>((CAST(t0.c2 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((-1066531975)AND(t0.c0)))AND(t0.c1))))>((CAST(t0.c2 AS REAL))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((-1066531975)AND(t0.c0)))AND(t0.c1))))>((CAST(t0.c2 AS REAL)))));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((t0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) ISNULL)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((t0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c1) ISNULL)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (((t0.c1) ISNULL));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2)IS NOT('-1400098245')))LIKE(((t0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT('-1400098245')))LIKE(((t0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2)IS NOT('-1400098245')))LIKE(((t0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT('-1400098245')))LIKE(((t0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2)IS NOT('-1400098245')))LIKE(((t0.c0)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))))|(((vt0.c0)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))))|(((vt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))))|(((vt0.c0)|(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))))|(((vt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))))|(((vt0.c0)|(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_patch(vt0.c0, t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c0, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_patch(vt0.c0, t0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((json_patch(vt0.c0, t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_patch(vt0.c0, t0.c0) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN (~ (t0.c1)) THEN ((((x'')OR(vt0.c0)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN 0.6615154228238467 THEN t0.c1 WHEN '' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN (((vt0.c0, rt0.c1, vt0.c0, rt0.c1, t0.c0))>((rt0.c2, NULL, rt0.c2, t0.c1, t0.c2))) THEN (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) END) ORDER BY ((CASE t0.c1  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END)<=((NOT (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c1)) THEN ((((x'')OR(vt0.c0)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN 0.6615154228238467 THEN t0.c1 WHEN '' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN (((vt0.c0, rt0.c1, vt0.c0, rt0.c1, t0.c0))>((rt0.c2, NULL, rt0.c2, t0.c1, t0.c2))) THEN (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CASE t0.c1  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END)<=((NOT (t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN (~ (t0.c1)) THEN ((((x'')OR(vt0.c0)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN 0.6615154228238467 THEN t0.c1 WHEN '' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN (((vt0.c0, rt0.c1, vt0.c0, rt0.c1, t0.c0))>((rt0.c2, NULL, rt0.c2, t0.c1, t0.c2))) THEN (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) END) ORDER BY ((CASE t0.c1  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END)<=((NOT (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c1)) THEN ((((x'')OR(vt0.c0)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN 0.6615154228238467 THEN t0.c1 WHEN '' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN (((vt0.c0, rt0.c1, vt0.c0, rt0.c1, t0.c0))>((rt0.c2, NULL, rt0.c2, t0.c1, t0.c2))) THEN (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CASE t0.c1  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END)<=((NOT (t0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN (~ (t0.c1)) THEN ((((x'')OR(vt0.c0)))AND(rt0.c2)) WHEN CASE rt0.c0  WHEN 0.6615154228238467 THEN t0.c1 WHEN '' THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN (rt0.c0 IN ()) WHEN (((vt0.c0, rt0.c1, vt0.c0, rt0.c1, t0.c0))>((rt0.c2, NULL, rt0.c2, t0.c1, t0.c2))) THEN (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))) END) ORDER BY ((CASE t0.c1  WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END)<=((NOT (t0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((((t0.c0)<(t0.c0)) IN (((t0.c0)AND(t0.c2))))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1)>=(t0.c0)) WHEN 0.274736147273832 THEN CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END WHEN ((((vt0.c0)OR(t0.c2)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c0)) IN (((t0.c0)AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1)>=(t0.c0)) WHEN 0.274736147273832 THEN CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END WHEN ((((vt0.c0)OR(t0.c2)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)<(t0.c0)) IN (((t0.c0)AND(t0.c2))))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1)>=(t0.c0)) WHEN 0.274736147273832 THEN CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END WHEN ((((vt0.c0)OR(t0.c2)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)<(t0.c0)) IN (((t0.c0)AND(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1)>=(t0.c0)) WHEN 0.274736147273832 THEN CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END WHEN ((((vt0.c0)OR(t0.c2)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0)<(t0.c0)) IN (((t0.c0)AND(t0.c2))))) ORDER BY CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c1)>=(t0.c0)) WHEN 0.274736147273832 THEN CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END WHEN ((((vt0.c0)OR(t0.c2)))OR(vt0.c0)) THEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)<=(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)<=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)<=(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<<(((vt0.c0)<=(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((((((((((t0.c2)AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c2)))AND(NULL))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-193310424')) BETWEEN ((LTRIM(rt0.c1, vt0.c0))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('-193310424')) BETWEEN ((LTRIM(rt0.c1, vt0.c0))) AND ((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-193310424')) BETWEEN ((LTRIM(rt0.c1, vt0.c0))) AND ((rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((('-193310424')) BETWEEN ((LTRIM(rt0.c1, vt0.c0))) AND ((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((('-193310424')) BETWEEN ((LTRIM(rt0.c1, vt0.c0))) AND ((rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c0) IS TRUE), ((rt0.c1)>=(rt0.c0)), (~ (rt0.c1)), (~ (rt0.c0)))) ORDER BY TRIM(DISTINCT x'' COLLATE RTRIM, ((rt0.c2)LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c0) IS TRUE), ((rt0.c1)>=(rt0.c0)), (~ (rt0.c1)), (~ (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT x'' COLLATE RTRIM, ((rt0.c2)LIKE(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c0) IS TRUE), ((rt0.c1)>=(rt0.c0)), (~ (rt0.c1)), (~ (rt0.c0)))) ORDER BY TRIM(DISTINCT x'' COLLATE RTRIM, ((rt0.c2)LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt0.c0) IS TRUE), ((rt0.c1)>=(rt0.c0)), (~ (rt0.c1)), (~ (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT x'' COLLATE RTRIM, ((rt0.c2)LIKE(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(((rt0.c0) IS TRUE), ((rt0.c1)>=(rt0.c0)), (~ (rt0.c1)), (~ (rt0.c0)))) ORDER BY TRIM(DISTINCT x'' COLLATE RTRIM, ((rt0.c2)LIKE(rt0.c1)));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '-590043054' THEN t0.c2 END  WHEN CAST(t0.c2 AS NUMERIC) THEN ((((rt0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '-590043054' THEN t0.c2 END  WHEN CAST(t0.c2 AS NUMERIC) THEN ((((rt0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '-590043054' THEN t0.c2 END  WHEN CAST(t0.c2 AS NUMERIC) THEN ((((rt0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '-590043054' THEN t0.c2 END  WHEN CAST(t0.c2 AS NUMERIC) THEN ((((rt0.c2)OR(t0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN '-590043054' THEN t0.c2 END  WHEN CAST(t0.c2 AS NUMERIC) THEN ((((rt0.c2)OR(t0.c1)))OR(t0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c2)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))GLOB(((rt0.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c2)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))GLOB(((rt0.c2)IS NOT(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c2)IS NOT(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(vt0.c0, TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(vt0.c0, TRIM(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(vt0.c0, TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR(vt0.c0, TRIM(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SUBSTR(vt0.c0, TRIM(DISTINCT vt0.c0)));
SELECT * FROM rt0, vt0 WHERE (((COALESCE(0.24622386887873038, rt0.c1))<(((((0.46305782310810184)AND(rt0.c2)))OR(NULL))))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(0x5649a77a)))AND((~ (rt0.c0)))))AND('⼜ZN8&x'))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (('')) AND ((CASE rt0.c1  WHEN 0.14189860729006154 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(0.24622386887873038, rt0.c1))<(((((0.46305782310810184)AND(rt0.c2)))OR(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(0X5649a77a)))AND((~ (rt0.c0)))))AND('⼜ZN8&x'))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (('')) AND ((CASE rt0.c1  WHEN 0.14189860729006154 THEN rt0.c2 END))));
SELECT * FROM rt0, vt0 WHERE (((COALESCE(0.24622386887873038, rt0.c1))<(((((0.46305782310810184)AND(rt0.c2)))OR(NULL))))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(0x5649a77a)))AND((~ (rt0.c0)))))AND('⼜ZN8&x'))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (('')) AND ((CASE rt0.c1  WHEN 0.14189860729006154 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(0.24622386887873038, rt0.c1))<(((((0.46305782310810184)AND(rt0.c2)))OR(NULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(0X5649a77a)))AND((~ (rt0.c0)))))AND('⼜ZN8&x'))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (('')) AND ((CASE rt0.c1  WHEN 0.14189860729006154 THEN rt0.c2 END))));
SELECT * FROM rt0, vt0 WHERE (((COALESCE(0.24622386887873038, rt0.c1))<(((((0.46305782310810184)AND(rt0.c2)))OR(NULL))))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c0, rt0.c1, rt0.c0))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))))OR(0x5649a77a)))AND((~ (rt0.c0)))))AND('⼜ZN8&x'))  NULLS LAST, (((vt0.c0)) NOT BETWEEN (('')) AND ((CASE rt0.c1  WHEN 0.14189860729006154 THEN rt0.c2 END)));
SELECT ALL * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))OR(((t0.c0) ISNULL))))OR(UPPER(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) ISNULL))OR(((t0.c0) ISNULL))))OR(UPPER(DISTINCT t0.c0))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))OR(((t0.c0) ISNULL))))OR(UPPER(DISTINCT t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1) ISNULL))OR(((t0.c0) ISNULL))))OR(UPPER(DISTINCT t0.c0))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c1) BETWEEN (t0.c0) AND (t0.c2))) ISNULL)) ORDER BY ((((((t0.c1) ISNULL))OR(((t0.c0) ISNULL))))OR(UPPER(DISTINCT t0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((x'' IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((x'' IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN ((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (MIN(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (MIN(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (MIN(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (MIN(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((- (MIN(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)!=(rt0.c1)))AND(t0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)<=(((rt0.c0) IS FALSE))) WHERE (HEX(0.972303579220151));
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.972303579220151)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)!=(rt0.c1)))AND(t0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)<=(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)!=(rt0.c1)))AND(t0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)<=(((rt0.c0) IS FALSE))) WHERE (HEX(0.972303579220151));
SELECT SUM(count) FROM (SELECT ALL ((HEX(0.972303579220151)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)!=(rt0.c1)))AND(t0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)<=(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((t0.c0)!=(rt0.c1)))AND(t0.c2)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)) LEFT OUTER JOIN vt0 ON ((t0.c0 COLLATE RTRIM)<=(((rt0.c0) IS FALSE))) WHERE (HEX(0.972303579220151));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((t0.c2, 0.6840922661242975, t0.c1))<((t0.c0, x'', rt0.c1)))) NOT BETWEEN ((+ (t0.c2))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (TRIM(DISTINCT rt0.c1, t0.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, 0.6840922661242975, t0.c1))<((t0.c0, x'', rt0.c1)))) NOT BETWEEN ((+ (t0.c2))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (TRIM(DISTINCT rt0.c1, t0.c2) IN ()) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((t0.c2, 0.6840922661242975, t0.c1))<((t0.c0, x'', rt0.c1)))) NOT BETWEEN ((+ (t0.c2))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (TRIM(DISTINCT rt0.c1, t0.c2) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, 0.6840922661242975, t0.c1))<((t0.c0, x'', rt0.c1)))) NOT BETWEEN ((+ (t0.c2))) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (TRIM(DISTINCT rt0.c1, t0.c2) IN ()) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((((t0.c2, 0.6840922661242975, t0.c1))<((t0.c0, x'', rt0.c1)))) NOT BETWEEN ((+ (t0.c2))) AND (rt0.c2 COLLATE BINARY))) ORDER BY (TRIM(DISTINCT rt0.c1, t0.c2) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON JULIANDAY((- (t0.c1)), t0.c1, (vt0.c0 IN ())) WHERE (((((((rt0.c1)AND(t0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON JULIANDAY((- (t0.c1)), t0.c1, (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON JULIANDAY((- (t0.c1)), t0.c1, (vt0.c0 IN ())) WHERE (((((((rt0.c1)AND(t0.c1)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c1)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON JULIANDAY((- (t0.c1)), t0.c1, (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt0 ON JULIANDAY((- (t0.c1)), t0.c1, (vt0.c0 IN ())) WHERE (((((((rt0.c1)AND(t0.c1)))AND(rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))))==(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))))==(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))))==(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))))==(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c0))))==(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (CASE WHEN rt0.c1 THEN t0.c0 ELSE x'4481' END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN t0.c0 ELSE x'4481' END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (CASE WHEN rt0.c1 THEN t0.c0 ELSE x'4481' END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c1 THEN t0.c0 ELSE x'4481' END))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((- (CASE WHEN rt0.c1 THEN t0.c0 ELSE x'4481' END)));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ('') AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (CASE WHEN 0X79c2eb54 THEN 0.8330109352630236 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN ('') AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN 0x79c2eb54 THEN 0.8330109352630236 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ('') AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (CASE WHEN 0X79c2eb54 THEN 0.8330109352630236 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) BETWEEN ('') AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN 0x79c2eb54 THEN 0.8330109352630236 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN ('') AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ORDER BY (CASE WHEN 0X79c2eb54 THEN 0.8330109352630236 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN NULL WHEN 0.14576087786803504 THEN rt0.c2 END, ((t0.c1) BETWEEN (rt0.c0) AND (t0.c2)), (0.5771022071538474 IN ()), '-1388393976', CASE rt0.c0  WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR((((t0.c0))>=((rt0.c1))))))AND((((vt0.c0, t0.c2, rt0.c2))<((t0.c0, t0.c2, '-1576995430')))));
SELECT SUM(count) FROM (SELECT ((DATE(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN NULL WHEN 0.14576087786803504 THEN rt0.c2 END, ((t0.c1) BETWEEN (rt0.c0) AND (t0.c2)), (0.5771022071538474 IN ()), '-1388393976', CASE rt0.c0  WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR((((t0.c0))>=((rt0.c1))))))AND((((vt0.c0, t0.c2, rt0.c2))<((t0.c0, t0.c2, '-1576995430'))))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN NULL WHEN 0.14576087786803504 THEN rt0.c2 END, ((t0.c1) BETWEEN (rt0.c0) AND (t0.c2)), (0.5771022071538474 IN ()), '-1388393976', CASE rt0.c0  WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR((((t0.c0))>=((rt0.c1))))))AND((((vt0.c0, t0.c2, rt0.c2))<((t0.c0, t0.c2, '-1576995430')))));
SELECT SUM(count) FROM (SELECT ((DATE(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN NULL WHEN 0.14576087786803504 THEN rt0.c2 END, ((t0.c1) BETWEEN (rt0.c0) AND (t0.c2)), (0.5771022071538474 IN ()), '-1388393976', CASE rt0.c0  WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR((((t0.c0))>=((rt0.c1))))))AND((((vt0.c0, t0.c2, rt0.c2))<((t0.c0, t0.c2, '-1576995430'))))));
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (DATE(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN NULL WHEN 0.14576087786803504 THEN rt0.c2 END, ((t0.c1) BETWEEN (rt0.c0) AND (t0.c2)), (0.5771022071538474 IN ()), '-1388393976', CASE rt0.c0  WHEN rt0.c2 THEN t0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END)) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR((((t0.c0))>=((rt0.c1))))))AND((((vt0.c0, t0.c2, rt0.c2))<((t0.c0, t0.c2, '-1576995430')))));
SELECT * FROM t0, vt0, rt0 WHERE (((x'')+(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((x'')+(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')+(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((x'')+(((t0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c1)GLOB(t0.c2))) AND (t0.c2 COLLATE BINARY))) ORDER BY ((NULL) BETWEEN ((((NULL))==((rt0.c1)))) AND (0Xfffffffff948cd46))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((rt0.c1)GLOB(t0.c2))) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((NULL) BETWEEN ((((NULL))=((rt0.c1)))) AND (0xfffffffff948cd46))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c1)GLOB(t0.c2))) AND (t0.c2 COLLATE BINARY))) ORDER BY ((NULL) BETWEEN ((((NULL))==((rt0.c1)))) AND (0Xfffffffff948cd46))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (((rt0.c1)GLOB(t0.c2))) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((NULL) BETWEEN ((((NULL))=((rt0.c1)))) AND (0xfffffffff948cd46))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c1)GLOB(t0.c2))) AND (t0.c2 COLLATE BINARY))) ORDER BY ((NULL) BETWEEN ((((NULL))==((rt0.c1)))) AND (0Xfffffffff948cd46))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((rt0.c2)LIKE(rt0.c1)))))AND(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((((((((-1.734315488E9)AND(vt0.c0)))OR(0x462d60f1)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((-1.734315488E9)AND(vt0.c0)))OR(0x462d60f1)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((((((((-1.734315488E9)AND(vt0.c0)))OR(0x462d60f1)))AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((((((((-1.734315488E9)AND(vt0.c0)))OR(0x462d60f1)))AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((((((((-1.734315488E9)AND(vt0.c0)))OR(0x462d60f1)))AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt0 ON ((((t0.c2))<((rt0.c0))) IN ()) WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt0 ON ((((t0.c2))<((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt0 ON ((((t0.c2))<((rt0.c0))) IN ()) WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt0 ON ((((t0.c2))<((rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON '' FULL OUTER JOIN rt0 ON ((((t0.c2))<((rt0.c0))) IN ()) WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ ((x'' IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ ((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ ((x'' IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE NOCASE) ORDER BY (~ ((x'' IN ())));
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((((vt0.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((((vt0.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<>((((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))!=((((vt0.c0)>>(vt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)>(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)>(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)>(t0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(NULL))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(LIKELIHOOD(rt0.c2, 0.9181588046360605))))OR(((rt0.c1)IS NOT(-1.256803725E9)))))AND(LIKELY(DISTINCT rt0.c2))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(LIKELIHOOD(rt0.c2, 0.9181588046360605))))OR(((rt0.c1)IS NOT(-1.256803725E9)))))AND(LIKELY(DISTINCT rt0.c2))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(NULL))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(LIKELIHOOD(rt0.c2, 0.9181588046360605))))OR(((rt0.c1)IS NOT(-1.256803725E9)))))AND(LIKELY(DISTINCT rt0.c2))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(LIKELIHOOD(rt0.c2, 0.9181588046360605))))OR(((rt0.c1)IS NOT(-1.256803725E9)))))AND(LIKELY(DISTINCT rt0.c2))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))))OR(NULL))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(LIKELIHOOD(rt0.c2, 0.9181588046360605))))OR(((rt0.c1)IS NOT(-1.256803725E9)))))AND(LIKELY(DISTINCT rt0.c2))))AND(((rt0.c0) NOT NULL))))OR(((rt0.c2) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((NULL) IS TRUE)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0)<<(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((NULL) IS TRUE)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0)<<(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((NULL) IS TRUE)) ORDER BY (NOT (((rt0.c0)<<(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c2))) BETWEEN (((rt0.c2)/(rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2))) BETWEEN (((rt0.c2)/(rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c2))) BETWEEN (((rt0.c2)/(rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2))) BETWEEN (((rt0.c2)/(rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)|(rt0.c2))) BETWEEN (((rt0.c2)/(rt0.c1))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c2)-(t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)-(t0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c2)-(t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)-(t0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c2)-(t0.c1)))) ASC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (x'83cd');
SELECT SUM(count) FROM (SELECT ((x'83cd') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (x'83cd');
SELECT SUM(count) FROM (SELECT ((x'83cd') IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (x'83cd');
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ABS((rt0.c0 IN (rt0.c1))) WHERE ((((((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0xffffffff968b9d6d, x'461f')) AND ((rt0.c2, rt0.c2, vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0xffffffff968b9d6d, x'461f')) AND ((rt0.c2, rt0.c2, vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ABS((rt0.c0 IN (rt0.c1))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ABS((rt0.c0 IN (rt0.c1))) WHERE ((((((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0xffffffff968b9d6d, x'461f')) AND ((rt0.c2, rt0.c2, vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0xffffffff968b9d6d, x'461f')) AND ((rt0.c2, rt0.c2, vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ABS((rt0.c0 IN (rt0.c1))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ABS((rt0.c0 IN (rt0.c1))) WHERE ((((((NULL, vt0.c0, rt0.c0)) BETWEEN ((rt0.c1, 0xffffffff968b9d6d, x'461f')) AND ((rt0.c2, rt0.c2, vt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((rt0.c1)OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((((t0.c1)OR(vt0.c0)))AND(t0.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((t0.c1)OR(vt0.c0)))AND(t0.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((((t0.c1)OR(vt0.c0)))AND(t0.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((((t0.c1)OR(vt0.c0)))AND(t0.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (t0.c0) ORDER BY ((((((t0.c1)OR(vt0.c0)))AND(t0.c2))) BETWEEN ((rt0.c2 IN ())) AND (CAST(t0.c0 AS INTEGER))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((((t0.c2)AND(x'')))AND(t0.c2))) NOT BETWEEN ((('H/')<>(vt0.c0))) AND (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN 'K0r1>A-u3' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(x'')))AND(t0.c2))) NOT BETWEEN ((('H/')<>(vt0.c0))) AND (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN 'K0r1>A-u3' THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c2)AND(x'')))AND(t0.c2))) NOT BETWEEN ((('H/')<>(vt0.c0))) AND (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN 'K0r1>A-u3' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(x'')))AND(t0.c2))) NOT BETWEEN ((('H/')<>(vt0.c0))) AND (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN 'K0r1>A-u3' THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c2)AND(x'')))AND(t0.c2))) NOT BETWEEN ((('H/')<>(vt0.c0))) AND (CASE t0.c1  WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 WHEN 'K0r1>A-u3' THEN t0.c0 END)));
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>=(COALESCE(DISTINCT vt0.c0, t0.c0, x'', t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>=(COALESCE(DISTINCT vt0.c0, t0.c0, x'', t0.c0)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>=(COALESCE(DISTINCT vt0.c0, t0.c0, x'', t0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>=(COALESCE(DISTINCT vt0.c0, t0.c0, x'', t0.c0)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c2 AS NUMERIC))>=(COALESCE(DISTINCT vt0.c0, t0.c0, x'', t0.c0))));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (0.997242908236381 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (0.997242908236381 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (0.997242908236381 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (0.997242908236381 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))) BETWEEN (rt0.c0) AND (0.997242908236381 COLLATE RTRIM));
SELECT * FROM t0, vt0 WHERE (((((t0.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c2) IS FALSE)) NOTNULL));
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN NULL END) AND (((NULL)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN NULL END) AND (((NULL)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN NULL END) AND (((NULL)!=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN NULL END) AND (((NULL)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0 NOT INDEXED, vt0 WHERE (((rt0.c2) BETWEEN (CASE WHEN rt0.c1 THEN NULL END) AND (((NULL)!=(rt0.c1)))));
SELECT * FROM t0 WHERE ('1823144317') ORDER BY CASE (- (t0.c1))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST, ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))||(NULL));
SELECT SUM(count) FROM (SELECT ALL (('1823144317') IS TRUE)  as count FROM t0 ORDER BY CASE (- (t0.c1))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST, ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))||(NULL)));
SELECT * FROM t0 WHERE ('1823144317') ORDER BY CASE (- (t0.c1))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST, ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))||(NULL));
SELECT SUM(count) FROM (SELECT ALL (('1823144317') IS TRUE)  as count FROM t0 ORDER BY CASE (- (t0.c1))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST, ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))||(NULL)));
SELECT * FROM t0 WHERE ('1823144317') ORDER BY CASE (- (t0.c1))  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE WHEN t0.c0 THEN NULL WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END ELSE t0.c0 COLLATE NOCASE END  NULLS FIRST, ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))||(NULL));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN CAST(rt0.c0 AS REAL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE TRIM(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c2))  WHEN CAST(rt0.c0 AS REAL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE TRIM(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN CAST(rt0.c0 AS REAL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE TRIM(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)!=(rt0.c2))  WHEN CAST(rt0.c0 AS REAL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE TRIM(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0)!=(rt0.c2))  WHEN CAST(rt0.c0 AS REAL) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END ELSE TRIM(rt0.c2) END);
SELECT * FROM t0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY (- (((rt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((rt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY (- (((rt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((rt0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((rt0.c2 IN ())) ORDER BY (- (((rt0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(t0.c1)))OR(rt0.c1)) THEN ((t0.c1) NOTNULL) ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((+ (t0.c0)) IN (((rt0.c1) NOT NULL))) WHERE (((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (((0X4f9fa2ea) NOT NULL)) AND ((NOT (rt0.c1))))) ORDER BY ',	61'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (((0x4f9fa2ea) NOT NULL)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(t0.c1)))OR(rt0.c1)) THEN ((t0.c1) NOTNULL) ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((+ (t0.c0)) IN (((rt0.c1) NOT NULL))) ORDER BY ',	61'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(t0.c1)))OR(rt0.c1)) THEN ((t0.c1) NOTNULL) ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((+ (t0.c0)) IN (((rt0.c1) NOT NULL))) WHERE (((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (((0X4f9fa2ea) NOT NULL)) AND ((NOT (rt0.c1))))) ORDER BY ',	61'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c0))) NOT BETWEEN (((0x4f9fa2ea) NOT NULL)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c0)OR(t0.c1)))OR(rt0.c1)) THEN ((t0.c1) NOTNULL) ELSE ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((+ (t0.c0)) IN (((rt0.c1) NOT NULL))) ORDER BY ',	61'  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (2.034084746E9)));
SELECT SUM(count) FROM (SELECT (((~ (2.034084746E9))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (2.034084746E9)));
SELECT SUM(count) FROM (SELECT (((~ (2.034084746E9))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (2.034084746E9)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((- ((+ (t0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((-1.329104355E9) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((-1.329104355E9) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((-1.329104355E9) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((-1.329104355E9) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((-1.329104355E9) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((0xfffffffff68d5028))<((t0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((0xfffffffff68d5028))<((t0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((0xfffffffff68d5028))<((t0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((0xfffffffff68d5028))<((t0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((0xfffffffff68d5028))<((t0.c2))) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))OR(vt0.c0)))AND(t0.c0))) BETWEEN ((- (vt0.c0))) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))OR(vt0.c0)))AND(t0.c0))) BETWEEN ((- (vt0.c0))) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))OR(vt0.c0)))AND(t0.c0))) BETWEEN ((- (vt0.c0))) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))OR(vt0.c0)))AND(t0.c0))) BETWEEN ((- (vt0.c0))) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c1)))OR(vt0.c0)))AND(t0.c0))) BETWEEN ((- (vt0.c0))) AND (((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON DATETIME(TOTAL_CHANGES(), ((vt0.c0) IS FALSE), NULL COLLATE RTRIM, CASE WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END, IFNULL(t0.c1, -2128366913)) FULL OUTER JOIN t0 ON ((((CAST(rt0.c1 AS TEXT))OR((- (0.09108790445628512)))))AND((rt0.c1 IN ()))) WHERE ((((t0.c0))>((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c0))>((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON DATETIME(TOTAL_CHANGES(), ((vt0.c0) IS FALSE), NULL COLLATE RTRIM, CASE WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END, IFNULL(t0.c1, -2128366913)) FULL OUTER JOIN t0 ON ((((CAST(rt0.c1 AS TEXT))OR((- (0.09108790445628512)))))AND((rt0.c1 IN ()))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON DATETIME(TOTAL_CHANGES(), ((vt0.c0) IS FALSE), NULL COLLATE RTRIM, CASE WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END, IFNULL(t0.c1, -2128366913)) FULL OUTER JOIN t0 ON ((((CAST(rt0.c1 AS TEXT))OR((- (0.09108790445628512)))))AND((rt0.c1 IN ()))) WHERE ((((t0.c0))>((rt0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c0))>((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON DATETIME(TOTAL_CHANGES(), ((vt0.c0) IS FALSE), NULL COLLATE RTRIM, CASE WHEN rt0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 WHEN vt0.c0 THEN t0.c2 END, IFNULL(t0.c1, -2128366913)) FULL OUTER JOIN t0 ON ((((CAST(rt0.c1 AS TEXT))OR((- (0.09108790445628512)))))AND((rt0.c1 IN ()))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c0)))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(rt0.c0)))>>(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c0)|(rt0.c0)))>>(((rt0.c2) ISNULL))));
SELECT ALL * FROM rt0 WHERE (JULIANDAY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((NULL)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((NULL)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (JULIANDAY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((NULL)OR(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((NULL)OR(rt0.c2)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (JULIANDAY(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c0 AS INTEGER), ((((NULL)OR(rt0.c2)))OR(rt0.c1))));
SELECT COUNT(*) FROM vt0 INDEXED BY i89, rt0 WHERE (((+ (rt0.c2)) IN ())) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i89, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INDEXED BY i89, rt0 WHERE (((+ (rt0.c2)) IN ())) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i89, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((rt0.c0 IN (rt0.c2, rt0.c1)))))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((rt0.c0 IN (rt0.c2, rt0.c1)))))OR('')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((rt0.c0 IN (rt0.c2, rt0.c1)))))OR('')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((rt0.c0 IN (rt0.c2, rt0.c1)))))OR('')) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((rt0.c0 IN (rt0.c2, rt0.c1)))))OR('')) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((+ (t0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END)) WHERE (((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))IS(CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))IS(CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((+ (t0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END)) WHERE (((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))IS(CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))IS(CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((+ (t0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END)));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((+ (t0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 END)) WHERE (((((((vt0.c0)AND(vt0.c0)))OR(t0.c1)))IS(CASE vt0.c0  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY GLOB((((rt0.c1))!=((rt0.c0))), ((rt0.c0)+(rt0.c2))) ASC  NULLS LAST, ((((rt0.c2) IS FALSE))GLOB(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY GLOB((((rt0.c1))<>((rt0.c0))), ((rt0.c0)+(rt0.c2))) ASC  NULLS LAST, ((((rt0.c2) IS FALSE))GLOB(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY GLOB((((rt0.c1))!=((rt0.c0))), ((rt0.c0)+(rt0.c2))) ASC  NULLS LAST, ((((rt0.c2) IS FALSE))GLOB(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY GLOB((((rt0.c1))<>((rt0.c0))), ((rt0.c0)+(rt0.c2))) ASC  NULLS LAST, ((((rt0.c2) IS FALSE))GLOB(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY) ORDER BY GLOB((((rt0.c1))!=((rt0.c0))), ((rt0.c0)+(rt0.c2))) ASC  NULLS LAST, ((((rt0.c2) IS FALSE))GLOB(((rt0.c1) IS TRUE)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL)))))AND((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL)))))AND((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL)))))AND((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL)))))AND((- (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0 IN ()))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL)))))AND((- (vt0.c0)))) DESC;
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((- (rt0.c1)))LIKE(LIKELY(t0.c2)))) ORDER BY CASE t0.c0  WHEN (rt0.c0 IN (t0.c1, rt0.c0)) THEN ((t0.c1)*(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))LIKE(LIKELY(t0.c2)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE t0.c0  WHEN (rt0.c0 IN (t0.c1, rt0.c0)) THEN ((t0.c1)*(rt0.c2)) END ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((- (rt0.c1)))LIKE(LIKELY(t0.c2)))) ORDER BY CASE t0.c0  WHEN (rt0.c0 IN (t0.c1, rt0.c0)) THEN ((t0.c1)*(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1)))LIKE(LIKELY(t0.c2)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE t0.c0  WHEN (rt0.c0 IN (t0.c1, rt0.c0)) THEN ((t0.c1)*(rt0.c2)) END ASC);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((- (rt0.c1)))LIKE(LIKELY(t0.c2)))) ORDER BY CASE t0.c0  WHEN (rt0.c0 IN (t0.c1, rt0.c0)) THEN ((t0.c1)*(rt0.c2)) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT * FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c2))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) ORDER BY UPPER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c2))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c2))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) ORDER BY UPPER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT rt0.c2))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) IS TRUE)  as count FROM rt0 ORDER BY UPPER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c2))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE NULL END))) ORDER BY UPPER(((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (t0.c2 IN ()) THEN (((t0.c1, NULL, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, vt0.c0, NULL))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN (((t0.c1, NULL, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, vt0.c0, NULL))) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (t0.c2 IN ()) THEN (((t0.c1, NULL, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, vt0.c0, NULL))) END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (t0.c2 IN ()) THEN (((t0.c1, NULL, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, vt0.c0, NULL))) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(t0.c2)))OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (t0.c2 IN ()) THEN (((t0.c1, NULL, t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c1, t0.c1, vt0.c0, NULL))) END;
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN (LTRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN (LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN (LTRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE BINARY IN (LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN (LTRIM(rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))) COLLATE BINARY) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))) COLLATE BINARY) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c0, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (CAST(rt0.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))) COLLATE BINARY) ORDER BY ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (CAST(rt0.c0 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(0.7304786548881099, rt0.c2, ((rt0.c1)|(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOTNULL))) DESC, ((rt0.c2 COLLATE RTRIM)IS(((rt0.c2) BETWEEN (0.657099539511464) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(0.7304786548881099, rt0.c2, ((rt0.c1)|(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c0) NOTNULL))) DESC, ((rt0.c2 COLLATE RTRIM)IS(((rt0.c2) BETWEEN (0.657099539511464) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(0.7304786548881099, rt0.c2, ((rt0.c1)|(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOTNULL))) DESC, ((rt0.c2 COLLATE RTRIM)IS(((rt0.c2) BETWEEN (0.657099539511464) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((CHAR(0.7304786548881099, rt0.c2, ((rt0.c1)|(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c0) NOTNULL))) DESC, ((rt0.c2 COLLATE RTRIM)IS(((rt0.c2) BETWEEN (0.657099539511464) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CHAR(0.7304786548881099, rt0.c2, ((rt0.c1)|(rt0.c2)))) ORDER BY (+ (((rt0.c0) NOTNULL))) DESC, ((rt0.c2 COLLATE RTRIM)IS(((rt0.c2) BETWEEN (0.657099539511464) AND (rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '-2131718207' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '-2131718207' END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '-2131718207' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '-2131718207' END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN '-2131718207' END END);
SELECT * FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) IS TRUE) ELSE rt0.c2 COLLATE BINARY END) ORDER BY CASE 0.17281920904403614  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0)|(rt0.c0)) ELSE ((rt0.c2)=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) IS TRUE) ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY CASE 0.17281920904403614  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0)|(rt0.c0)) ELSE ((rt0.c2)==(rt0.c2)) END);
SELECT * FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) IS TRUE) ELSE rt0.c2 COLLATE BINARY END) ORDER BY CASE 0.17281920904403614  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0)|(rt0.c0)) ELSE ((rt0.c2)=(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) IS TRUE) ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0 ORDER BY CASE 0.17281920904403614  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0)|(rt0.c0)) ELSE ((rt0.c2)==(rt0.c2)) END);
SELECT * FROM rt0 WHERE (CASE (- (rt0.c0))  WHEN x'' THEN ((rt0.c0) IS TRUE) ELSE rt0.c2 COLLATE BINARY END) ORDER BY CASE 0.17281920904403614  WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0)|(rt0.c0)) ELSE ((rt0.c2)=(rt0.c2)) END;
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))AND(rt0.c1))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c2)AND(rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN STRFTIME(rt0.c0, rt0.c0, rt0.c1) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)|(0.3875174992707813)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c2)AND(rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN STRFTIME(rt0.c0, rt0.c0, rt0.c1) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)|(0.3875174992707813)))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))AND(rt0.c1))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c2)AND(rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN STRFTIME(rt0.c0, rt0.c0, rt0.c1) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)|(0.3875174992707813)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c2)AND(rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN STRFTIME(rt0.c0, rt0.c0, rt0.c1) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)|(0.3875174992707813)))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2) IS FALSE))AND(rt0.c1))) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN ((rt0.c2)AND(rt0.c1)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN STRFTIME(rt0.c0, rt0.c0, rt0.c1) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c0 AS INTEGER) END  NULLS LAST, (((- (rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND (((rt0.c1)|(0.3875174992707813)))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (json_type(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json_type(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (json_type(CAST(rt0.c1 AS BLOB)));
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)AND(((vt0.c0) ISNULL))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)AND(((vt0.c0) ISNULL))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((vt0.c0) ISNULL))))AND(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)AND(((vt0.c0) ISNULL))))AND(vt0.c0)));
SELECT * FROM t0, vt0, rt0 WHERE (0.5135923263927827);
SELECT SUM(count) FROM (SELECT ((0.5135923263927827) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (0.5135923263927827);
SELECT SUM(count) FROM (SELECT ((0.5135923263927827) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (0.5135923263927827);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN ()) WHERE (((((0.7279908124096688) BETWEEN (t0.c0) AND (t0.c0)))&(CASE t0.c0  WHEN '' THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7279908124096688) BETWEEN (t0.c0) AND (t0.c0)))&(CASE t0.c0  WHEN '' THEN t0.c2 END))) IS TRUE)  as count FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN ()) WHERE (((((0.7279908124096688) BETWEEN (t0.c0) AND (t0.c0)))&(CASE t0.c0  WHEN '' THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.7279908124096688) BETWEEN (t0.c0) AND (t0.c0)))&(CASE t0.c0  WHEN '' THEN t0.c2 END))) IS TRUE)  as count FROM t0 NOT INDEXED LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN ()));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN t0.c1 WHEN x'' THEN t0.c2 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END IN ()) WHERE (((((0.7279908124096688) BETWEEN (t0.c0) AND (t0.c0)))&(CASE t0.c0  WHEN '' THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB(json_array_length(t0.c2, t0.c1)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)GLOB(json_array_length(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB(json_array_length(t0.c2, t0.c1)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)GLOB(json_array_length(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0)GLOB(json_array_length(t0.c2, t0.c1)))) ORDER BY t0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2 IN (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((rt0.c2 IN (vt0.c0))) NOTNULL));
SELECT * FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c0, t0.c0)) NOTNULL)) ORDER BY (NOT ((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT ((~ (rt0.c0)))));
SELECT * FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c0, t0.c0)) NOTNULL)) ORDER BY (NOT ((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, t0.c0)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT ((~ (rt0.c0)))));
SELECT * FROM t0, vt0, rt0 WHERE (((ROUND(rt0.c0, t0.c0)) NOTNULL)) ORDER BY (NOT ((~ (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL IN (rt0.c1, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((('1816849880')>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt0.c1, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((('1816849880')>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL IN (rt0.c1, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((('1816849880')>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (rt0.c1, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((('1816849880')>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL IN (rt0.c1, rt0.c0))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND ((('1816849880')>=(rt0.c1)))));
SELECT * FROM rt0 INDEXED BY i89, vt0 CROSS JOIN t0 ON ((((0.3292582064064764)IS NOT(t0.c0))) IS FALSE) WHERE (((((((((t0.c0)AND(((t0.c0)<<(t0.c1)))))OR(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 ELSE '-318116861' END)))OR(NULL)))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(((t0.c0)<<(t0.c1)))))OR(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 ELSE '-318116861' END)))OR(NULL)))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 INDEXED BY i89, vt0 CROSS JOIN t0 ON ((((0.3292582064064764)IS NOT(t0.c0))) IS FALSE));
SELECT * FROM rt0 INDEXED BY i89, vt0 CROSS JOIN t0 ON ((((0.3292582064064764)IS NOT(t0.c0))) IS FALSE) WHERE (((((((((t0.c0)AND(((t0.c0)<<(t0.c1)))))OR(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 ELSE '-318116861' END)))OR(NULL)))AND(CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)AND(((t0.c0)<<(t0.c1)))))OR(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 ELSE '-318116861' END)))OR(NULL)))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 INDEXED BY i89, vt0 CROSS JOIN t0 ON ((((0.3292582064064764)IS NOT(t0.c0))) IS FALSE));
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON CASE TOTAL_CHANGES()  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 COLLATE RTRIM END WHERE (((+ (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CASE TOTAL_CHANGES()  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 COLLATE RTRIM END ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END IN ()));
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON CASE TOTAL_CHANGES()  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 COLLATE RTRIM END WHERE (((+ (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CASE TOTAL_CHANGES()  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 COLLATE RTRIM END ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END IN ()));
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON CASE TOTAL_CHANGES()  WHEN ((t0.c0) IS FALSE) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c1 COLLATE RTRIM END WHERE (((+ (rt0.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END IN ());
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE));
SELECT * FROM vt0, t0 WHERE (LENGTH(((t0.c0)==(t0.c0)))) ORDER BY 0xfffffffffb7c0c92  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c0)=(t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0xfffffffffb7c0c92  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (LENGTH(((t0.c0)==(t0.c0)))) ORDER BY 0xfffffffffb7c0c92  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((t0.c0)=(t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0xfffffffffb7c0c92  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (LENGTH(((t0.c0)==(t0.c0)))) ORDER BY 0xfffffffffb7c0c92  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((RTRIM(0.05413919645674381))==(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))*(LOWER(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(0.05413919645674381))==(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))*(LOWER(rt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((RTRIM(0.05413919645674381))==(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))*(LOWER(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((RTRIM(0.05413919645674381))==(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))*(LOWER(rt0.c2))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((RTRIM(0.05413919645674381))==(((((rt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))*(LOWER(rt0.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(rt0.c1)))OR(TYPEOF(DISTINCT rt0.c2))))OR(((rt0.c0) ISNULL))))OR(((rt0.c0)OR(rt0.c2)))))OR(((((((((vt0.c0)OR('''e')))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(rt0.c1)))OR(TYPEOF(DISTINCT rt0.c2))))OR(((rt0.c0) ISNULL))))OR(((rt0.c0)OR(rt0.c2)))))OR(((((((((vt0.c0)OR('''e')))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(rt0.c1)))OR(TYPEOF(DISTINCT rt0.c2))))OR(((rt0.c0) ISNULL))))OR(((rt0.c0)OR(rt0.c2)))))OR(((((((((vt0.c0)OR('''e')))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(rt0.c1)))OR(TYPEOF(DISTINCT rt0.c2))))OR(((rt0.c0) ISNULL))))OR(((rt0.c0)OR(rt0.c2)))))OR(((((((((vt0.c0)OR('''e')))AND(t0.c1)))AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((((((((rt0.c0)OR(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))AND(rt0.c1)))OR(TYPEOF(DISTINCT rt0.c2))))OR(((rt0.c0) ISNULL))))OR(((rt0.c0)OR(rt0.c2)))))OR(((((((((vt0.c0)OR('''e')))AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))));
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT vt0.c0))*(LIKELY(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((TYPEOF(DISTINCT vt0.c0))*(LIKELY(DISTINCT rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT vt0.c0))*(LIKELY(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((TYPEOF(DISTINCT vt0.c0))*(LIKELY(DISTINCT rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))) ORDER BY ((TYPEOF(DISTINCT vt0.c0))*(LIKELY(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((t0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((t0.c0)==(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(rt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((~ (((t0.c0)==(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR('-1924266403')))AND(vt0.c0))) ISNULL), 0.9378006680603564, CASE ((vt0.c0)>(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR('-1924266403')))AND(vt0.c0))) ISNULL), 0.9378006680603564, CASE ((vt0.c0)>(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR('-1924266403')))AND(vt0.c0))) ISNULL), 0.9378006680603564, CASE ((vt0.c0)>(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR('-1924266403')))AND(vt0.c0))) ISNULL), 0.9378006680603564, CASE ((vt0.c0)>(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0))))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR('-1924266403')))AND(vt0.c0))) ISNULL), 0.9378006680603564, CASE ((vt0.c0)>(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0)))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0)))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>=((vt0.c0)))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))>(((vt0.c0) NOTNULL)));
SELECT ALL * FROM vt0 WHERE ((((((((((~ (vt0.c0)))AND('673316409')))AND(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (vt0.c0)))AND('673316409')))AND(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((~ (vt0.c0)))AND('673316409')))AND(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (vt0.c0)))AND('673316409')))AND(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((~ (vt0.c0)))AND('673316409')))AND(((vt0.c0)||(vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CASE CASE '*kF4'  WHEN t0.c1 THEN t0.c1 END  WHEN ((t0.c2) IS FALSE) THEN (t0.c2 IN ()) END, (TRIM(t0.c0, 1326523001) IN (0.583227692510827)) ASC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE CASE '*kF4'  WHEN t0.c1 THEN t0.c1 END  WHEN ((t0.c2) IS FALSE) THEN (t0.c2 IN ()) END, (TRIM(t0.c0, 1326523001) IN (0.583227692510827)) ASC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CASE CASE '*kF4'  WHEN t0.c1 THEN t0.c1 END  WHEN ((t0.c2) IS FALSE) THEN (t0.c2 IN ()) END, (TRIM(t0.c0, 1326523001) IN (0.583227692510827)) ASC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE CASE '*kF4'  WHEN t0.c1 THEN t0.c1 END  WHEN ((t0.c2) IS FALSE) THEN (t0.c2 IN ()) END, (TRIM(t0.c0, 1326523001) IN (0.583227692510827)) ASC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY CASE CASE '*kF4'  WHEN t0.c1 THEN t0.c1 END  WHEN ((t0.c2) IS FALSE) THEN (t0.c2 IN ()) END, (TRIM(t0.c0, 1326523001) IN (0.583227692510827)) ASC, (((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR('1229438470'))) ORDER BY CAST(vt0.c0 AS BLOB), ((((vt0.c0)>>(x'9442'))) NOT BETWEEN (((vt0.c0)IS NOT('862372695'))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('2042424336'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR('1229438470'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB), ((((vt0.c0)>>(x'9442'))) NOT BETWEEN (((vt0.c0)IS NOT('862372695'))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('2042424336')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR('1229438470'))) ORDER BY CAST(vt0.c0 AS BLOB), ((((vt0.c0)>>(x'9442'))) NOT BETWEEN (((vt0.c0)IS NOT('862372695'))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('2042424336'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR('1229438470'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB), ((((vt0.c0)>>(x'9442'))) NOT BETWEEN (((vt0.c0)IS NOT('862372695'))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('2042424336')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR('1229438470'))) ORDER BY CAST(vt0.c0 AS BLOB), ((((vt0.c0)>>(x'9442'))) NOT BETWEEN (((vt0.c0)IS NOT('862372695'))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR('2042424336'))));
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(vt0.c0, x'736c', vt0.c0, vt0.c0) WHEN 0.4609399847762299 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1e500')) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(vt0.c0, x'736c', vt0.c0, vt0.c0) WHEN 0.4609399847762299 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1e500')) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(vt0.c0, x'736c', vt0.c0, vt0.c0) WHEN 0.4609399847762299 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1e500')) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(vt0.c0, x'736c', vt0.c0, vt0.c0) WHEN 0.4609399847762299 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1e500')) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN COALESCE(vt0.c0, x'736c', vt0.c0, vt0.c0) WHEN 0.4609399847762299 THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1e500')) THEN (NOT (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c2 ASC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (((t0.c1) BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY t0.c2 ASC;
SELECT * FROM t0 CROSS JOIN vt0 ON CASE CASE WHEN '-435742815' THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN ('-827405915')) END WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE CASE WHEN '-435742815' THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN ('-827405915')) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE CASE WHEN '-435742815' THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN ('-827405915')) END WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE CASE WHEN '-435742815' THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN ('-827405915')) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE CASE WHEN '-435742815' THEN t0.c2 WHEN vt0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN vt0.c0 END  WHEN t0.c0 COLLATE RTRIM THEN (t0.c2 IN ('-827405915')) END WHERE ((~ ((t0.c0 IN ()))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON '\s. 2睜' WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((rt0.c1 IN ())))<=((CASE WHEN '1219857708' THEN NULL ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '\s. 2睜' ORDER BY ((((rt0.c1 IN ())))<=((CASE WHEN '1219857708' THEN NULL ELSE rt0.c0 END))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON '\s. 2睜' WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((rt0.c1 IN ())))<=((CASE WHEN '1219857708' THEN NULL ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '\s. 2睜' ORDER BY ((((rt0.c1 IN ())))<=((CASE WHEN '1219857708' THEN NULL ELSE rt0.c0 END))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON '\s. 2睜' WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((rt0.c1 IN ())))<=((CASE WHEN '1219857708' THEN NULL ELSE rt0.c0 END)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((x'')AND(139952198)))OR(((t0.c2)IS(t0.c1)))))OR((+ (t0.c0)))))OR(TOTAL_CHANGES()))  NULLS LAST, ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)))&(((rt0.c0) ISNULL))), (('+*G~盵')+(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((x'')AND(139952198)))OR(((t0.c2)IS(t0.c1)))))OR((+ (t0.c0)))))OR(TOTAL_CHANGES()))  NULLS LAST, ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)))&(((rt0.c0) ISNULL))), (('+*G~盵')+(((t0.c0)GLOB(t0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((x'')AND(139952198)))OR(((t0.c2)IS(t0.c1)))))OR((+ (t0.c0)))))OR(TOTAL_CHANGES()))  NULLS LAST, ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)))&(((rt0.c0) ISNULL))), (('+*G~盵')+(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((((x'')AND(139952198)))OR(((t0.c2)IS(t0.c1)))))OR((+ (t0.c0)))))OR(TOTAL_CHANGES()))  NULLS LAST, ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)))&(((rt0.c0) ISNULL))), (('+*G~盵')+(((t0.c0)GLOB(t0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((NULL) NOT NULL)) ORDER BY ((((((((x'')AND(139952198)))OR(((t0.c2)IS(t0.c1)))))OR((+ (t0.c0)))))OR(TOTAL_CHANGES()))  NULLS LAST, ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)))&(((rt0.c0) ISNULL))), (('+*G~盵')+(((t0.c0)GLOB(t0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c2) IS FALSE)) IS TRUE)) ORDER BY json_insert(rt0.c0 COLLATE BINARY, t0.c2 COLLATE NOCASE, ((((t0.c0)OR(rt0.c1)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY json_insert(rt0.c0 COLLATE BINARY, t0.c2 COLLATE NOCASE, ((((t0.c0)OR(rt0.c1)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c2) IS FALSE)) IS TRUE)) ORDER BY json_insert(rt0.c0 COLLATE BINARY, t0.c2 COLLATE NOCASE, ((((t0.c0)OR(rt0.c1)))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY json_insert(rt0.c0 COLLATE BINARY, t0.c2 COLLATE NOCASE, ((((t0.c0)OR(rt0.c1)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((t0.c2) IS FALSE)) IS TRUE)) ORDER BY json_insert(rt0.c0 COLLATE BINARY, t0.c2 COLLATE NOCASE, ((((t0.c0)OR(rt0.c1)))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt0, t0 WHERE ((((((vt0.c0))==((rt0.c1))))LIKE(((rt0.c0) IS FALSE)))) ORDER BY ((CAST(rt0.c2 AS REAL))>=(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((rt0.c1))))LIKE(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL))>=(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt0, vt0, t0 WHERE ((((((vt0.c0))==((rt0.c1))))LIKE(((rt0.c0) IS FALSE)))) ORDER BY ((CAST(rt0.c2 AS REAL))>=(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((rt0.c1))))LIKE(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CAST(rt0.c2 AS REAL))>=(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt0, vt0, t0 WHERE ((((((vt0.c0))==((rt0.c1))))LIKE(((rt0.c0) IS FALSE)))) ORDER BY ((CAST(rt0.c2 AS REAL))>=(((rt0.c0) NOTNULL))) DESC;
SELECT * FROM rt0, vt0, t0 WHERE ((- (CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((- (CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((- (CAST(t0.c1 AS INTEGER))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1, 'q[<'))) IS FALSE) RIGHT OUTER JOIN t0 ON (((((t0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ((rt0.c2 IN ()))) WHERE (((((t0.c1))=((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c1))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1, 'q[<'))) IS FALSE) RIGHT OUTER JOIN t0 ON (((((t0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ((rt0.c2 IN ()))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1, 'q[<'))) IS FALSE) RIGHT OUTER JOIN t0 ON (((((t0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ((rt0.c2 IN ()))) WHERE (((((t0.c1))=((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t0.c1))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1, 'q[<'))) IS FALSE) RIGHT OUTER JOIN t0 ON (((((t0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ((rt0.c2 IN ()))));
SELECT * FROM rt0 INNER JOIN vt0 ON (((rt0.c1 IN (rt0.c1, 'q[<'))) IS FALSE) RIGHT OUTER JOIN t0 ON (((((t0.c2)AND(rt0.c2)))AND(rt0.c2)) IN ((rt0.c2 IN ()))) WHERE (((((t0.c1))=((rt0.c1))) IN ()));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN t0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c2  WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END))) ORDER BY ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, 0.6898778236413692, rt0.c2))) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN t0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c2  WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, 0.6898778236413692, rt0.c2))) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN t0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c2  WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END))) ORDER BY ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, 0.6898778236413692, rt0.c2))) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN t0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c2  WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, 0.6898778236413692, rt0.c2))) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c1 THEN t0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c2  WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END))) ORDER BY ((((vt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, 0.6898778236413692, rt0.c2))) IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c0)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c0)))) ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2);
SELECT ALL COUNT(*) FROM t0 WHERE (IFNULL((~ (t0.c2)), ((((t0.c2)OR(t0.c1)))AND(t0.c0)))) ORDER BY t0.c2;
SELECT COUNT(*) FROM rt0 WHERE (((((x'1502')>(rt0.c1)))&(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((x'2679')<<(rt0.c1))) AND ((+ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'1502')>(rt0.c1)))&(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((x'2679')<<(rt0.c1))) AND ((+ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((x'1502')>(rt0.c1)))&(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((x'2679')<<(rt0.c1))) AND ((+ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((x'1502')>(rt0.c1)))&(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((x'2679')<<(rt0.c1))) AND ((+ (rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((x'1502')>(rt0.c1)))&(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((x'2679')<<(rt0.c1))) AND ((+ (rt0.c1)))) DESC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2, rt0.c2, 0xffffffff803e8cb4, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1))) THEN ((NULL) NOTNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) WHEN TRIM(rt0.c0, rt0.c0) THEN ((rt0.c2)>(vt0.c0)) END WHERE (CASE WHEN vt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c1)) THEN CAST('' AS INTEGER) WHEN (((rt0.c1, rt0.c2, vt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c1)) THEN CAST('' AS INTEGER) WHEN (((rt0.c1, rt0.c2, vt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2, rt0.c2, 0Xffffffff803e8cb4, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1))) THEN ((NULL) NOTNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) WHEN TRIM(rt0.c0, rt0.c0) THEN ((rt0.c2)>(vt0.c0)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2, rt0.c2, 0xffffffff803e8cb4, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1))) THEN ((NULL) NOTNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) WHEN TRIM(rt0.c0, rt0.c0) THEN ((rt0.c2)>(vt0.c0)) END WHERE (CASE WHEN vt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c1)) THEN CAST('' AS INTEGER) WHEN (((rt0.c1, rt0.c2, vt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c1)) THEN CAST('' AS INTEGER) WHEN (((rt0.c1, rt0.c2, vt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c1) NOT NULL) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2, rt0.c2, 0Xffffffff803e8cb4, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1))) THEN ((NULL) NOTNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) WHEN TRIM(rt0.c0, rt0.c0) THEN ((rt0.c2)>(vt0.c0)) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN (((rt0.c2, rt0.c2, 0xffffffff803e8cb4, rt0.c0, rt0.c0))>=((rt0.c1, rt0.c2, rt0.c1, rt0.c0, rt0.c1))) THEN ((NULL) NOTNULL) WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN ((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) WHEN TRIM(rt0.c0, rt0.c0) THEN ((rt0.c2)>(vt0.c0)) END WHERE (CASE WHEN vt0.c0 THEN (- (rt0.c0)) WHEN (~ (rt0.c1)) THEN CAST('' AS INTEGER) WHEN (((rt0.c1, rt0.c2, vt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c1) NOT NULL) END);
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c2  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE t0.c2  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) ELSE (t0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE rt0.c2  WHEN COALESCE(t0.c2, t0.c1, t0.c1, t0.c2) THEN (t0.c1 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))>(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN COALESCE(t0.c2, t0.c1, t0.c1, t0.c2) THEN (t0.c1 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))>(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE rt0.c2  WHEN COALESCE(t0.c2, t0.c1, t0.c1, t0.c2) THEN (t0.c1 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))>(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN COALESCE(t0.c2, t0.c1, t0.c1, t0.c2) THEN (t0.c1 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))>(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (CASE rt0.c2  WHEN COALESCE(t0.c2, t0.c1, t0.c1, t0.c2) THEN (t0.c1 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))))>(((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ('0b ~MO/') ORDER BY x'85a2eafb' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0b ~MO/') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'85a2eafb' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ('0b ~MO/') ORDER BY x'85a2eafb' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0b ~MO/') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY x'85a2eafb' ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ('0b ~MO/') ORDER BY x'85a2eafb' ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((('0.19498624682538646')OR(rt0.c1)))AND(vt0.c0)))OR(HEX(t0.c1))) FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM WHERE (((x'' IN ()) IN ())) ORDER BY CASE WHEN json_extract(t0.c2, t0.c2) THEN ((rt0.c1)GLOB(vt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ ('281670660')) WHEN (('\r') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (('Q,') NOT BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)%(t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((('0.19498624682538646')OR(rt0.c1)))AND(vt0.c0)))OR(HEX(t0.c1))) FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM ORDER BY CASE WHEN json_extract(t0.c2, t0.c2) THEN ((rt0.c1)GLOB(vt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ ('281670660')) WHEN (('\r') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (('Q,') NOT BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)%(t0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((((('0.19498624682538646')OR(rt0.c1)))AND(vt0.c0)))OR(HEX(t0.c1))) FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM WHERE (((x'' IN ()) IN ())) ORDER BY CASE WHEN json_extract(t0.c2, t0.c2) THEN ((rt0.c1)GLOB(vt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ ('281670660')) WHEN (('\r') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (('Q,') NOT BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)%(t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN ()) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((('0.19498624682538646')OR(rt0.c1)))AND(vt0.c0)))OR(HEX(t0.c1))) FULL OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) COLLATE RTRIM ORDER BY CASE WHEN json_extract(t0.c2, t0.c2) THEN ((rt0.c1)GLOB(vt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ ('281670660')) WHEN (('\r') NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (('Q,') NOT BETWEEN (rt0.c2) AND (t0.c0)) ELSE ((rt0.c2)%(t0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT ALL * FROM rt0 NOT INDEXED WHERE ('') ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ('') ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END AS INTEGER)  NULLS LAST);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ('') ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE NULL END AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_insert(rt0.c1, rt0.c1, NULL)))) DESC  NULLS LAST, 0.14146581162112704 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_insert(rt0.c1, rt0.c1, NULL)))) DESC  NULLS LAST, 0.14146581162112704 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_insert(rt0.c1, rt0.c1, NULL)))) DESC  NULLS LAST, 0.14146581162112704 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_insert(rt0.c1, rt0.c1, NULL)))) DESC  NULLS LAST, 0.14146581162112704 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST(CAST(rt0.c2 AS BLOB) AS BLOB)) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((json_insert(rt0.c1, rt0.c1, NULL)))) DESC  NULLS LAST, 0.14146581162112704 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (NULL)))>(CASE WHEN t0.c0 THEN rt0.c0 END)) WHERE (json_valid(t0.c0)) ORDER BY (((((t0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c2)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (NULL)))>(CASE WHEN t0.c0 THEN rt0.c0 END)) ORDER BY (((((t0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c2)))) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (NULL)))>(CASE WHEN t0.c0 THEN rt0.c0 END)) WHERE (json_valid(t0.c0)) ORDER BY (((((t0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c2)))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c0)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (NULL)))>(CASE WHEN t0.c0 THEN rt0.c0 END)) ORDER BY (((((t0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c2)))) NOTNULL)  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((+ (NULL)))>(CASE WHEN t0.c0 THEN rt0.c0 END)) WHERE (json_valid(t0.c0)) ORDER BY (((((t0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((t0.c2, t0.c1, rt0.c2)) AND ((t0.c0, t0.c0, t0.c2)))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c0)/(0.9947479397260016)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((((vt0.c0)GLOB(vt0.c0)))AND(NULL)))OR((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4615957050477336 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(0.9947479397260016)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((((vt0.c0)GLOB(vt0.c0)))AND(NULL)))OR((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4615957050477336 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c0)/(0.9947479397260016)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((((vt0.c0)GLOB(vt0.c0)))AND(NULL)))OR((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4615957050477336 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)/(0.9947479397260016)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((((vt0.c0)GLOB(vt0.c0)))AND(NULL)))OR((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4615957050477336 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|((((vt0.c0))<=((vt0.c0)))))) ORDER BY ((((vt0.c0)/(0.9947479397260016)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((((vt0.c0)GLOB(vt0.c0)))AND(NULL)))OR((vt0.c0 IN ())))  NULLS FIRST, CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (NOT (vt0.c0)) WHEN (((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS NUMERIC) WHEN 0.4615957050477336 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c0)) END ASC;
SELECT * FROM rt0, t0 WHERE (((CASE ''  WHEN t0.c0 THEN rt0.c0 ELSE 0.1413097159758423 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN t0.c0 THEN rt0.c0 ELSE 0.1413097159758423 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE ''  WHEN t0.c0 THEN rt0.c0 ELSE 0.1413097159758423 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN t0.c0 THEN rt0.c0 ELSE 0.1413097159758423 END) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE ''  WHEN t0.c0 THEN rt0.c0 ELSE 0.1413097159758423 END) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)IS NOT(vt0.c0)))/(t0.c0))) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))))%(((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt0.c0)))/(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))))%(((t0.c2) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)IS NOT(vt0.c0)))/(t0.c0))) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))))%(((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(vt0.c0)))/(t0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))))%(((t0.c2) IS TRUE)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0)IS NOT(vt0.c0)))/(t0.c0))) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1))))%(((t0.c2) IS TRUE)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((vt0.c0) NOT NULL))));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c0)) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)LIKE(rt0.c0)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c0)) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)LIKE(rt0.c0)) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)LIKE(rt0.c0)) THEN vt0.c0 COLLATE RTRIM END);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((0.47194509375857385)>=('尓j(v')) DESC  NULLS FIRST, LENGTH(((vt0.c0)<=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.47194509375857385)>=('尓j(v')) DESC  NULLS FIRST, LENGTH(((vt0.c0)<=(vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((0.47194509375857385)>=('尓j(v')) DESC  NULLS FIRST, LENGTH(((vt0.c0)<=(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.47194509375857385)>=('尓j(v')) DESC  NULLS FIRST, LENGTH(((vt0.c0)<=(vt0.c0))) DESC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))<((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((0.47194509375857385)>=('尓j(v')) DESC  NULLS FIRST, LENGTH(((vt0.c0)<=(vt0.c0))) DESC;
SELECT * FROM rt0, vt0, t0 WHERE (CASE ((rt0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))  WHEN '],' THEN (((rt0.c0))>=((t0.c1))) ELSE ((((rt0.c1)OR(NULL)))OR(vt0.c0)) END) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))  WHEN '],' THEN (((rt0.c0))>=((t0.c1))) ELSE ((((rt0.c1)OR(NULL)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE ((rt0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))  WHEN '],' THEN (((rt0.c0))>=((t0.c1))) ELSE ((((rt0.c1)OR(NULL)))OR(vt0.c0)) END) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))  WHEN '],' THEN (((rt0.c0))>=((t0.c1))) ELSE ((((rt0.c1)OR(NULL)))OR(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c1 DESC  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (CASE ((rt0.c2) NOT BETWEEN (t0.c1) AND (vt0.c0))  WHEN '],' THEN (((rt0.c0))>=((t0.c1))) ELSE ((((rt0.c1)OR(NULL)))OR(vt0.c0)) END) ORDER BY t0.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))) AND (''))) ORDER BY ((rt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))) AND (''))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c0) NOTNULL) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))) AND (''))) ORDER BY ((rt0.c0) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))) AND (''))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((rt0.c0) NOTNULL) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c2) AND (t0.c0))) AND (''))) ORDER BY ((rt0.c0) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN LIKELY(DISTINCT t0.c2) THEN ((rt0.c1) IS TRUE) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS FALSE) WHEN t0.c1 COLLATE NOCASE THEN ((((rt0.c0)OR(vt0.c0)))AND(-1679760426)) WHEN t0.c1 THEN ((((t0.c2)OR('qk7BZXkbw')))OR(rt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((t0.c1)OR(vt0.c0)))AND(rt0.c0)))OR('G	')))AND(vt0.c0)) ELSE (~ (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(DISTINCT t0.c2) THEN ((rt0.c1) IS TRUE) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS FALSE) WHEN t0.c1 COLLATE NOCASE THEN ((((rt0.c0)OR(vt0.c0)))AND(-1679760426)) WHEN t0.c1 THEN ((((t0.c2)OR('qk7BZXkbw')))OR(rt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((t0.c1)OR(vt0.c0)))AND(rt0.c0)))OR('G	')))AND(vt0.c0)) ELSE (~ (t0.c2)) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN LIKELY(DISTINCT t0.c2) THEN ((rt0.c1) IS TRUE) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS FALSE) WHEN t0.c1 COLLATE NOCASE THEN ((((rt0.c0)OR(vt0.c0)))AND(-1679760426)) WHEN t0.c1 THEN ((((t0.c2)OR('qk7BZXkbw')))OR(rt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((t0.c1)OR(vt0.c0)))AND(rt0.c0)))OR('G	')))AND(vt0.c0)) ELSE (~ (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(DISTINCT t0.c2) THEN ((rt0.c1) IS TRUE) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS FALSE) WHEN t0.c1 COLLATE NOCASE THEN ((((rt0.c0)OR(vt0.c0)))AND(-1679760426)) WHEN t0.c1 THEN ((((t0.c2)OR('qk7BZXkbw')))OR(rt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((t0.c1)OR(vt0.c0)))AND(rt0.c0)))OR('G	')))AND(vt0.c0)) ELSE (~ (t0.c2)) END) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE (CASE WHEN LIKELY(DISTINCT t0.c2) THEN ((rt0.c1) IS TRUE) WHEN UNLIKELY(rt0.c0) THEN ((rt0.c1) IS FALSE) WHEN t0.c1 COLLATE NOCASE THEN ((((rt0.c0)OR(vt0.c0)))AND(-1679760426)) WHEN t0.c1 THEN ((((t0.c2)OR('qk7BZXkbw')))OR(rt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((t0.c1)OR(vt0.c0)))AND(rt0.c0)))OR('G	')))AND(vt0.c0)) ELSE (~ (t0.c2)) END);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (NULL) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((t0.c1)-(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)-(t0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((t0.c1)-(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1)-(t0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL) COLLATE RTRIM) ORDER BY ((t0.c1)-(t0.c2)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((t0.c2 COLLATE NOCASE)==(((((((((t0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(x'a06d')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)=(((((((((t0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(x'a06d')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((t0.c2 COLLATE NOCASE)==(((((((((t0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(x'a06d')))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE NOCASE)=(((((((((t0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(x'a06d')))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((t0.c2 COLLATE NOCASE)==(((((((((t0.c2)AND(rt0.c0)))AND(rt0.c1)))AND(x'a06d')))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((t0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((t0.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((t0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((t0.c0) ISNULL) END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN ((t0.c0) ISNULL) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL) DESC  NULLS FIRST, '.QaS' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL) DESC  NULLS FIRST, '.QaS' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL) DESC  NULLS FIRST, '.QaS' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL) DESC  NULLS FIRST, '.QaS' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL) DESC  NULLS FIRST, '.QaS' DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (UPPER(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (UPPER(t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UPPER(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (UPPER(t0.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))), x'', ((vt0.c0)*(vt0.c0))))>=((((t0.c1) NOT NULL), IFNULL(t0.c0, t0.c0), (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY CASE t0.c0  WHEN '' THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (NOT (1851029929)) WHEN ((((vt0.c0)AND(0.9601568823992298)))OR(t0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))<=((t0.c1, t0.c1, t0.c2))) END DESC, TRIM(vt0.c0 COLLATE RTRIM) DESC, (('0.49159927194016184') NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END) AND ((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))), x'', ((vt0.c0)*(vt0.c0))))>=((((t0.c1) NOT NULL), IFNULL(t0.c0, t0.c0), (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE t0.c0  WHEN '' THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (NOT (1851029929)) WHEN ((((vt0.c0)AND(0.9601568823992298)))OR(t0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))<=((t0.c1, t0.c1, t0.c2))) END DESC, TRIM(vt0.c0 COLLATE RTRIM) DESC, (('0.49159927194016184') NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END) AND ((t0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))), x'', ((vt0.c0)*(vt0.c0))))>=((((t0.c1) NOT NULL), IFNULL(t0.c0, t0.c0), (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY CASE t0.c0  WHEN '' THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (NOT (1851029929)) WHEN ((((vt0.c0)AND(0.9601568823992298)))OR(t0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))<=((t0.c1, t0.c1, t0.c2))) END DESC, TRIM(vt0.c0 COLLATE RTRIM) DESC, (('0.49159927194016184') NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END) AND ((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))), x'', ((vt0.c0)*(vt0.c0))))>=((((t0.c1) NOT NULL), IFNULL(t0.c0, t0.c0), (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE t0.c0  WHEN '' THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (NOT (1851029929)) WHEN ((((vt0.c0)AND(0.9601568823992298)))OR(t0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))<=((t0.c1, t0.c1, t0.c2))) END DESC, TRIM(vt0.c0 COLLATE RTRIM) DESC, (('0.49159927194016184') NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END) AND ((t0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((NULL)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))), x'', ((vt0.c0)*(vt0.c0))))>=((((t0.c1) NOT NULL), IFNULL(t0.c0, t0.c0), (((t0.c1)) BETWEEN ((vt0.c0)) AND ((t0.c0))))))) ORDER BY CASE t0.c0  WHEN '' THEN ((vt0.c0)IS(vt0.c0)) WHEN t0.c0 COLLATE BINARY THEN (NOT (1851029929)) WHEN ((((vt0.c0)AND(0.9601568823992298)))OR(t0.c0)) THEN (((t0.c0, vt0.c0, vt0.c0))<=((t0.c1, t0.c1, t0.c2))) END DESC, TRIM(vt0.c0 COLLATE RTRIM) DESC, (('0.49159927194016184') NOT BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c1 END) AND ((t0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c0)OR(vt0.c0)))OR(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt0.c0)))OR(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c0)OR(vt0.c0)))OR(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt0.c0)))OR(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c0)OR(vt0.c0)))OR(t0.c1))) NOT NULL));
SELECT * FROM rt0 WHERE ((- (((x'') BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((x'') BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((x'') BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((x'') BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((x'') BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ ((((t0.c2))<=((0X11ba1d40))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2))<=((0x11ba1d40)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ ((((t0.c2))<=((0X11ba1d40))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2))<=((0x11ba1d40)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((~ ((((t0.c2))<=((0X11ba1d40))))));
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM vt0 WHERE ((('397171027') IS TRUE)) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('397171027') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((('397171027') IS TRUE)) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('397171027') IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((('397171027') IS TRUE)) ORDER BY ((((((vt0.c0)!=(vt0.c0)))AND(vt0.c0 COLLATE BINARY)))OR((NOT (vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)&(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)&(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)&(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c0)&(t0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE (LIKE(CAST(t0.c0 AS INTEGER), NULL, 'G')) ORDER BY (((NOT (rt0.c0)))*((+ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t0.c0 AS INTEGER), NULL, 'G')) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (((NOT (rt0.c0)))*((+ (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (LIKE(CAST(t0.c0 AS INTEGER), NULL, 'G')) ORDER BY (((NOT (rt0.c0)))*((+ (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKE(CAST(t0.c0 AS INTEGER), NULL, 'G')) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (((NOT (rt0.c0)))*((+ (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (LIKE(CAST(t0.c0 AS INTEGER), NULL, 'G')) ORDER BY (((NOT (rt0.c0)))*((+ (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((TRIM(DISTINCT rt0.c2))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((TRIM(DISTINCT rt0.c2))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((TRIM(DISTINCT rt0.c2))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((TRIM(DISTINCT rt0.c2))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c1) ORDER BY ((TRIM(DISTINCT rt0.c2))>>(((vt0.c0) NOT NULL))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))/(ABS(DISTINCT t0.c2))) INNER JOIN t0 ON CASE ((t0.c2)!=(vt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END WHERE (((((x'e84c03f4')AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CASE WHEN ((t0.c2)<=(rt0.c1)) THEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c2)))OR(0.02673113292233653)))OR(t0.c1)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END THEN t0.c2 WHEN ((((NULL)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))AND(t0.c2)))OR(vt0.c0)) WHEN rt0.c1 THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c1)))OR(vt0.c0)))AND(rt0.c2)) WHEN x'' THEN ((t0.c0)>=(vt0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END DESC, ((((((((((vt0.c0)<=(t0.c0)))AND(CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END)))OR(t0.c1 COLLATE BINARY)))AND(CASE t0.c2  WHEN rt0.c0 THEN x'0c59' ELSE NULL END)))AND(((((-1972949587)AND(t0.c0)))OR(rt0.c2)))), ((CASE WHEN t0.c1 THEN rt0.c2 ELSE vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((x'e84c03f4')AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))/(ABS(DISTINCT t0.c2))) INNER JOIN t0 ON CASE ((t0.c2)!=(vt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END ORDER BY CASE WHEN ((t0.c2)<=(rt0.c1)) THEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c2)))OR(0.02673113292233653)))OR(t0.c1)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END THEN t0.c2 WHEN ((((NULL)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))AND(t0.c2)))OR(vt0.c0)) WHEN rt0.c1 THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c1)))OR(vt0.c0)))AND(rt0.c2)) WHEN x'' THEN ((t0.c0)>=(vt0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END DESC, ((((((((((vt0.c0)<=(t0.c0)))AND(CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END)))OR(t0.c1 COLLATE BINARY)))AND(CASE t0.c2  WHEN rt0.c0 THEN x'0c59' ELSE NULL END)))AND(((((-1972949587)AND(t0.c0)))OR(rt0.c2)))), ((CASE WHEN t0.c1 THEN rt0.c2 ELSE vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))/(ABS(DISTINCT t0.c2))) INNER JOIN t0 ON CASE ((t0.c2)!=(vt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END WHERE (((((x'e84c03f4')AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CASE WHEN ((t0.c2)<=(rt0.c1)) THEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c2)))OR(0.02673113292233653)))OR(t0.c1)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END THEN t0.c2 WHEN ((((NULL)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))AND(t0.c2)))OR(vt0.c0)) WHEN rt0.c1 THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c1)))OR(vt0.c0)))AND(rt0.c2)) WHEN x'' THEN ((t0.c0)>=(vt0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END DESC, ((((((((((vt0.c0)<=(t0.c0)))AND(CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END)))OR(t0.c1 COLLATE BINARY)))AND(CASE t0.c2  WHEN rt0.c0 THEN x'0c59' ELSE NULL END)))AND(((((-1972949587)AND(t0.c0)))OR(rt0.c2)))), ((CASE WHEN t0.c1 THEN rt0.c2 ELSE vt0.c0 END) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((x'e84c03f4')AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))/(ABS(DISTINCT t0.c2))) INNER JOIN t0 ON CASE ((t0.c2)!=(vt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END ORDER BY CASE WHEN ((t0.c2)<=(rt0.c1)) THEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c2)))OR(0.02673113292233653)))OR(t0.c1)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END THEN t0.c2 WHEN ((((NULL)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))AND(t0.c2)))OR(vt0.c0)) WHEN rt0.c1 THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c1)))OR(vt0.c0)))AND(rt0.c2)) WHEN x'' THEN ((t0.c0)>=(vt0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END DESC, ((((((((((vt0.c0)<=(t0.c0)))AND(CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END)))OR(t0.c1 COLLATE BINARY)))AND(CASE t0.c2  WHEN rt0.c0 THEN x'0c59' ELSE NULL END)))AND(((((-1972949587)AND(t0.c0)))OR(rt0.c2)))), ((CASE WHEN t0.c1 THEN rt0.c2 ELSE vt0.c0 END) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((rt0.c0 IN ()))/(ABS(DISTINCT t0.c2))) INNER JOIN t0 ON CASE ((t0.c2)!=(vt0.c0))  WHEN ((rt0.c2) IS FALSE) THEN (t0.c1 IN ()) ELSE t0.c2 COLLATE RTRIM END WHERE (((((x'e84c03f4')AND((rt0.c1 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY CASE WHEN ((t0.c2)<=(rt0.c1)) THEN ((((((((t0.c2)AND(t0.c2)))AND(rt0.c2)))OR(0.02673113292233653)))OR(t0.c1)) WHEN CASE t0.c2  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END THEN t0.c2 WHEN ((((NULL)OR(rt0.c0)))AND(rt0.c1)) THEN ((((((((rt0.c0)AND(t0.c2)))AND(vt0.c0)))AND(t0.c2)))OR(vt0.c0)) WHEN rt0.c1 THEN ((((((((t0.c0)AND(vt0.c0)))AND(t0.c1)))OR(vt0.c0)))AND(rt0.c2)) WHEN x'' THEN ((t0.c0)>=(vt0.c0)) ELSE ((t0.c1) NOT BETWEEN (vt0.c0) AND (t0.c1)) END DESC, ((((((((((vt0.c0)<=(t0.c0)))AND(CASE rt0.c2  WHEN t0.c2 THEN rt0.c2 END)))OR(t0.c1 COLLATE BINARY)))AND(CASE t0.c2  WHEN rt0.c0 THEN x'0c59' ELSE NULL END)))AND(((((-1972949587)AND(t0.c0)))OR(rt0.c2)))), ((CASE WHEN t0.c1 THEN rt0.c2 ELSE vt0.c0 END) NOTNULL);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (rt0.c2))) IS TRUE)) ORDER BY ((t0.c0 COLLATE RTRIM)&(CASE WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)&(CASE WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (rt0.c2))) IS TRUE)) ORDER BY ((t0.c0 COLLATE RTRIM)&(CASE WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c0 COLLATE RTRIM)&(CASE WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (rt0.c2))) IS TRUE)) ORDER BY ((t0.c0 COLLATE RTRIM)&(CASE WHEN rt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c1 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)&(rt0.c0))) IS TRUE) WHERE ((((((- (x'')))AND(rt0.c0)))OR((((('')OR(t0.c0)))AND(t0.c2))))) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))))OR((+ (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (x'')))AND(rt0.c0)))OR((((('')OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)&(rt0.c0))) IS TRUE) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))))OR((+ (t0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)&(rt0.c0))) IS TRUE) WHERE ((((((- (x'')))AND(rt0.c0)))OR((((('')OR(t0.c0)))AND(t0.c2))))) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))))OR((+ (t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (x'')))AND(rt0.c0)))OR((((('')OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)&(rt0.c0))) IS TRUE) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))))OR((+ (t0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c1)&(rt0.c0))) IS TRUE) WHERE ((((((- (x'')))AND(rt0.c0)))OR((((('')OR(t0.c0)))AND(t0.c2))))) ORDER BY ((((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c1))))))OR((+ (t0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(NULL)))AND(vt0.c0))) ORDER BY (((862390568) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(NULL)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((862390568) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(NULL)))AND(vt0.c0))) ORDER BY (((862390568) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))AND(NULL)))AND(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((862390568) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))AND(NULL)))AND(vt0.c0))) ORDER BY (((862390568) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c0)) AS INTEGER) WHERE (CAST(STRFTIME(vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c0)) AS INTEGER) WHERE (CAST(STRFTIME(vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(STRFTIME(vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c0)) AS INTEGER) WHERE (CAST(STRFTIME(vt0.c0, rt0.c2, NULL, rt0.c0, vt0.c0) AS BLOB));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (('', (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) AND ((rt0.c2, (rt0.c2 IN (rt0.c1, rt0.c2)), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (('', (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) AND ((rt0.c2, (rt0.c2 IN (rt0.c1, rt0.c2)), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (('', (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) AND ((rt0.c2, (rt0.c2 IN (rt0.c1, rt0.c2)), ((rt0.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (('', (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) AND ((rt0.c2, (rt0.c2 IN (rt0.c1, rt0.c2)), ((rt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN (('', (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))), ((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))) AND ((rt0.c2, (rt0.c2 IN (rt0.c1, rt0.c2)), ((rt0.c1) IS FALSE)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((('TRUE') NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((('TRUE') NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((('TRUE') NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((('TRUE') NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((('TRUE') NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c0) IS TRUE))));
SELECT * FROM t0, vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((((t0.c0)AND(x'')))AND(t0.c1)) THEN ((vt0.c0)<<(t0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END) ORDER BY '362737047' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN ((((t0.c0)AND(x'')))AND(t0.c1)) THEN ((vt0.c0)<<(t0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '362737047' DESC);
SELECT * FROM t0, vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((((t0.c0)AND(x'')))AND(t0.c1)) THEN ((vt0.c0)<<(t0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END) ORDER BY '362737047' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN ((((t0.c0)AND(x'')))AND(t0.c1)) THEN ((vt0.c0)<<(t0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY '362737047' DESC);
SELECT * FROM t0, vt0 WHERE (CASE (~ (vt0.c0))  WHEN ((((t0.c0)AND(x'')))AND(t0.c1)) THEN ((vt0.c0)<<(t0.c0)) ELSE (((vt0.c0))<=((vt0.c0))) END) ORDER BY '362737047' DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE), rt0.c0, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((NULLIF(rt0.c2, rt0.c0), (((rt0.c2))=((rt0.c1))), ((rt0.c1)|(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE), rt0.c0, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((NULLIF(rt0.c2, rt0.c0), (((rt0.c2))=((rt0.c1))), ((rt0.c1)|(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE), rt0.c0, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((NULLIF(rt0.c2, rt0.c0), (((rt0.c2))=((rt0.c1))), ((rt0.c1)|(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) IS FALSE), rt0.c0, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((NULLIF(rt0.c2, rt0.c0), (((rt0.c2))=((rt0.c1))), ((rt0.c1)|(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) IS FALSE), rt0.c0, ((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))))<=((NULLIF(rt0.c2, rt0.c0), (((rt0.c2))=((rt0.c1))), ((rt0.c1)|(rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((rt0.c0))<>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((rt0.c0))<>((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((rt0.c0))<>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((rt0.c0))<>((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<=(((((rt0.c0))<>((vt0.c0)))))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c2 ELSE NULL END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c2 ELSE NULL END AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c2 ELSE NULL END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c2 ELSE NULL END AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c2 ELSE NULL END AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1, t0.c1, ',i'))<=((vt0.c0, t0.c1, rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t0.c1, ',i'))<=((vt0.c0, t0.c1, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1, t0.c1, ',i'))<=((vt0.c0, t0.c1, rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, t0.c1, ',i'))<=((vt0.c0, t0.c1, rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c1, t0.c1, ',i'))<=((vt0.c0, t0.c1, rt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE ('-128924148') ORDER BY ((rt0.c2 IN (rt0.c2)) IN ()) DESC  NULLS FIRST, ((((rt0.c0) IS FALSE)) IS FALSE) ASC, (((rt0.c2) BETWEEN (x'') AND (rt0.c0)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL (('-128924148') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN (rt0.c2)) IN ()) DESC  NULLS FIRST, ((((rt0.c0) IS FALSE)) IS FALSE) ASC, (((rt0.c2) BETWEEN (x'') AND (rt0.c0)) IN (NULL)));
SELECT COUNT(*) FROM rt0 WHERE ('-128924148') ORDER BY ((rt0.c2 IN (rt0.c2)) IN ()) DESC  NULLS FIRST, ((((rt0.c0) IS FALSE)) IS FALSE) ASC, (((rt0.c2) BETWEEN (x'') AND (rt0.c0)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL (('-128924148') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 IN (rt0.c2)) IN ()) DESC  NULLS FIRST, ((((rt0.c0) IS FALSE)) IS FALSE) ASC, (((rt0.c2) BETWEEN (x'') AND (rt0.c0)) IN (NULL)));
SELECT COUNT(*) FROM rt0 WHERE ('-128924148') ORDER BY ((rt0.c2 IN (rt0.c2)) IN ()) DESC  NULLS FIRST, ((((rt0.c0) IS FALSE)) IS FALSE) ASC, (((rt0.c2) BETWEEN (x'') AND (rt0.c0)) IN (NULL));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1)*(rt0.c0)))>=(CASE WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c2 END))) ORDER BY CAST(INSTR(t0.c2, t0.c1) AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)*(rt0.c0)))>=(CASE WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(INSTR(t0.c2, t0.c1) AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1)*(rt0.c0)))>=(CASE WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c2 END))) ORDER BY CAST(INSTR(t0.c2, t0.c1) AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1)*(rt0.c0)))>=(CASE WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(INSTR(t0.c2, t0.c1) AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1)*(rt0.c0)))>=(CASE WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN x'' WHEN x'' THEN rt0.c2 END))) ORDER BY CAST(INSTR(t0.c2, t0.c1) AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ASC;
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (NULL);
SELECT * FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c1))) COLLATE NOCASE WHERE (CASE ((0.14071077164090595)LIKE(t0.c0))  WHEN (((t0.c1))<((t0.c2))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.14071077164090595)LIKE(t0.c0))  WHEN (((t0.c1))<((t0.c2))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c1))) COLLATE NOCASE);
SELECT * FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c1))) COLLATE NOCASE WHERE (CASE ((0.14071077164090595)LIKE(t0.c0))  WHEN (((t0.c1))<((t0.c2))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.14071077164090595)LIKE(t0.c0))  WHEN (((t0.c1))<((t0.c2))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c1))) COLLATE NOCASE);
SELECT * FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c1)) BETWEEN ((t0.c1)) AND ((rt0.c1))) COLLATE NOCASE WHERE (CASE ((0.14071077164090595)LIKE(t0.c0))  WHEN (((t0.c1))<((t0.c2))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)GLOB(t0.c1)))AND((~ (t0.c0)))))OR(((t0.c1)IS NOT(t0.c2)))))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c2, NULL)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)GLOB(t0.c1)))AND((~ (t0.c0)))))OR(((t0.c1)IS NOT(t0.c2)))))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c2, NULL)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)GLOB(t0.c1)))AND((~ (t0.c0)))))OR(((t0.c1)IS NOT(t0.c2)))))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c2, NULL)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)GLOB(t0.c1)))AND((~ (t0.c0)))))OR(((t0.c1)IS NOT(t0.c2)))))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c2, NULL)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c2)GLOB(t0.c1)))AND((~ (t0.c0)))))OR(((t0.c1)IS NOT(t0.c2)))))OR(t0.c0 COLLATE NOCASE)))AND((((t0.c0, t0.c2, NULL)) NOT BETWEEN ((t0.c1, t0.c0, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((CAST(t0.c0 AS TEXT)))<=((((t0.c1)>>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))<=((((t0.c1)>>(t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((CAST(t0.c0 AS TEXT)))<=((((t0.c1)>>(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))<=((((t0.c1)>>(t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((CAST(t0.c0 AS TEXT)))<=((((t0.c1)>>(t0.c0))))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE RTRIM);
SELECT * FROM rt0, t0 WHERE ((((((~ (NULL)))OR(NULL)))AND('1615264584')));
SELECT SUM(count) FROM (SELECT (((((((~ (NULL)))OR(NULL)))AND('1615264584'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((~ (NULL)))OR(NULL)))AND('1615264584')));
SELECT SUM(count) FROM (SELECT (((((((~ (NULL)))OR(NULL)))AND('1615264584'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((~ (NULL)))OR(NULL)))AND('1615264584')));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY TRIM(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)), rt0.c0);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TRIM(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)), rt0.c0));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY TRIM(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)), rt0.c0);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TRIM(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)), rt0.c0));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY TRIM(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)), rt0.c0);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON load_extension((((x'35d5'))>((rt0.c2)))) WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(t0.c2 AS TEXT) THEN ((rt0.c2) IS FALSE) WHEN CASE rt0.c1  WHEN '-258364373' THEN t0.c0 WHEN rt0.c0 THEN x'5e274cfc' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1) NOT NULL) WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE (+ (x'41bfeb71')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON load_extension((((x'35d5'))>((rt0.c2)))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(t0.c2 AS TEXT) THEN ((rt0.c2) IS FALSE) WHEN CASE rt0.c1  WHEN '-258364373' THEN t0.c0 WHEN rt0.c0 THEN x'5e274cfc' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1) NOT NULL) WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE (+ (x'41bfeb71')) END DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON load_extension((((x'35d5'))>((rt0.c2)))) WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(t0.c2 AS TEXT) THEN ((rt0.c2) IS FALSE) WHEN CASE rt0.c1  WHEN '-258364373' THEN t0.c0 WHEN rt0.c0 THEN x'5e274cfc' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1) NOT NULL) WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE (+ (x'41bfeb71')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON load_extension((((x'35d5'))>((rt0.c2)))) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(t0.c2 AS TEXT) THEN ((rt0.c2) IS FALSE) WHEN CASE rt0.c1  WHEN '-258364373' THEN t0.c0 WHEN rt0.c0 THEN x'5e274cfc' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1) NOT NULL) WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE (+ (x'41bfeb71')) END DESC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t0 ON load_extension((((x'35d5'))>((rt0.c2)))) WHERE ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ORDER BY CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(t0.c2 AS TEXT) THEN ((rt0.c2) IS FALSE) WHEN CASE rt0.c1  WHEN '-258364373' THEN t0.c0 WHEN rt0.c0 THEN x'5e274cfc' WHEN t0.c0 THEN t0.c0 END THEN ((rt0.c1) NOT NULL) WHEN CAST(t0.c0 AS BLOB) THEN ((rt0.c1)GLOB(rt0.c2)) ELSE (+ (x'41bfeb71')) END DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (JULIANDAY(CASE WHEN t0.c2 THEN t0.c1 END, (('-1930961737') NOTNULL), CASE WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, rt0.c0 COLLATE NOCASE)) ORDER BY (((rt0.c0)/(t0.c2)) IN (json_array(t0.c2, vt0.c0), t0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE WHEN t0.c2 THEN t0.c1 END, (('-1930961737') NOTNULL), CASE WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c0)/(t0.c2)) IN (json_array(t0.c2, vt0.c0), t0.c2)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (JULIANDAY(CASE WHEN t0.c2 THEN t0.c1 END, (('-1930961737') NOTNULL), CASE WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, rt0.c0 COLLATE NOCASE)) ORDER BY (((rt0.c0)/(t0.c2)) IN (json_array(t0.c2, vt0.c0), t0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(CASE WHEN t0.c2 THEN t0.c1 END, (('-1930961737') NOTNULL), CASE WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (((rt0.c0)/(t0.c2)) IN (json_array(t0.c2, vt0.c0), t0.c2)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t0 WHERE (JULIANDAY(CASE WHEN t0.c2 THEN t0.c1 END, (('-1930961737') NOTNULL), CASE WHEN t0.c0 THEN t0.c1 END, CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END, rt0.c0 COLLATE NOCASE)) ORDER BY (((rt0.c0)/(t0.c2)) IN (json_array(t0.c2, vt0.c0), t0.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))>=(vt0.c0)));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2))) ISNULL));
SELECT * FROM vt0, rt0 WHERE ((((((('-1483910964'))>=((vt0.c0)))))<=((('1311346474' IN ()))))) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((('-1483910964'))>=((vt0.c0)))))<=((('1311346474' IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB) DESC);
SELECT * FROM vt0, rt0 WHERE ((((((('-1483910964'))>=((vt0.c0)))))<=((('1311346474' IN ()))))) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((('-1483910964'))>=((vt0.c0)))))<=((('1311346474' IN ()))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB) DESC);
SELECT * FROM vt0, rt0 WHERE ((((((('-1483910964'))>=((vt0.c0)))))<=((('1311346474' IN ()))))) ORDER BY CAST(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 END AS BLOB) DESC;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(((((rt0.c2)AND(rt0.c2)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(((((rt0.c2)AND(rt0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(((((rt0.c2)AND(rt0.c2)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(((((rt0.c2)AND(rt0.c2)))OR(t0.c1))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(((((rt0.c2)AND(rt0.c2)))OR(t0.c1)))));
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0 COLLATE BINARY)))OR(x'')))OR(vt0.c0)))OR((- (vt0.c0)))))AND(vt0.c0)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0 COLLATE BINARY)))OR(x'')))OR(vt0.c0)))OR((- (vt0.c0)))))AND(vt0.c0)))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0 COLLATE BINARY)))OR(x'')))OR(vt0.c0)))OR((- (vt0.c0)))))AND(vt0.c0)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0 COLLATE BINARY)))OR(x'')))OR(vt0.c0)))OR((- (vt0.c0)))))AND(vt0.c0)))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0 COLLATE BINARY)))OR(x'')))OR(vt0.c0)))OR((- (vt0.c0)))))AND(vt0.c0)))OR(x'')));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT)) ORDER BY UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT)) ORDER BY UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT)) ORDER BY UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (rt0.c2) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (rt0.c2) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c0) BETWEEN (rt0.c2) AND (((t0.c0) IS FALSE))));
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c2 END COLLATE NOCASE);
SELECT * FROM t0 WHERE ((+ (((((t0.c0)OR(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((((t0.c0)OR(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((((t0.c0)OR(t0.c0)))AND(t0.c1)))));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ()));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<>((t0.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (TYPEOF(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((t0.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (TYPEOF(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<>((t0.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (TYPEOF(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<>((t0.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (TYPEOF(t0.c2)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c0))<>((t0.c1)))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (TYPEOF(t0.c2))));
SELECT * FROM t0, rt0, vt0 WHERE ((((('G퓽PI즰c2') IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('G퓽PI즰c2') IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((('G퓽PI즰c2') IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('G퓽PI즰c2') IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((((('G퓽PI즰c2') IS FALSE)) NOTNULL));
SELECT ALL * FROM vt0, rt0, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM vt0, rt0 INDEXED BY i12, t0 WHERE (((IFNULL(t0.c1, t0.c0))=(((rt0.c2)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c1, t0.c0))=(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, t0);
SELECT COUNT(*) FROM vt0, rt0 INDEXED BY i12, t0 WHERE (((IFNULL(t0.c1, t0.c0))=(((rt0.c2)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c1, t0.c0))=(((rt0.c2)<=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, t0);
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)>(rt0.c1))))) ORDER BY (- (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)|(vt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)>(rt0.c1))))) ORDER BY (- (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)|(vt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (((((((vt0.c0)|(vt0.c0)))AND(CAST(rt0.c1 AS TEXT))))AND(((rt0.c2)>(rt0.c1))))) ORDER BY (- (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(0.049702191448739996)))OR(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(0.049702191448739996)))OR(vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(0.049702191448739996)))OR(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(0.049702191448739996)))OR(vt0.c0))) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((vt0.c0)OR(0.049702191448739996)))OR(vt0.c0))) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0 IN ()), (~ (vt0.c0)), (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), NULL, json_array_length(x'', 0.440753978125464))))) ORDER BY SUBSTR(((NULL)|(t0.c0)), ((t0.c1)>=(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), (~ (vt0.c0)), (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), NULL, json_array_length(x'', 0.440753978125464))))) IS TRUE)  as count FROM t0, vt0 ORDER BY SUBSTR(((NULL)|(t0.c0)), ((t0.c1)>=(t0.c2))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0 IN ()), (~ (vt0.c0)), (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), NULL, json_array_length(x'', 0.440753978125464))))) ORDER BY SUBSTR(((NULL)|(t0.c0)), ((t0.c1)>=(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 IN ()), (~ (vt0.c0)), (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), NULL, json_array_length(x'', 0.440753978125464))))) IS TRUE)  as count FROM t0, vt0 ORDER BY SUBSTR(((NULL)|(t0.c0)), ((t0.c1)>=(t0.c2))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0 IN ()), (~ (vt0.c0)), (((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0)))))>=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)), NULL, json_array_length(x'', 0.440753978125464))))) ORDER BY SUBSTR(((NULL)|(t0.c0)), ((t0.c1)>=(t0.c2))) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)>=((NOT (rt0.c1)))) LEFT OUTER JOIN t0 ON (0x4a1ecf60 IN ()) WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 THEN vt0.c0 END) ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c2 IN ())  WHEN t0.c0 THEN vt0.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULL)>=((NOT (rt0.c1)))) LEFT OUTER JOIN t0 ON (0X4a1ecf60 IN ()) ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)>=((NOT (rt0.c1)))) LEFT OUTER JOIN t0 ON (0x4a1ecf60 IN ()) WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 THEN vt0.c0 END) ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c2 IN ())  WHEN t0.c0 THEN vt0.c0 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULL)>=((NOT (rt0.c1)))) LEFT OUTER JOIN t0 ON (0X4a1ecf60 IN ()) ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((NULL)>=((NOT (rt0.c1)))) LEFT OUTER JOIN t0 ON (0x4a1ecf60 IN ()) WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 THEN vt0.c0 END) ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((t0.c1) NOTNULL) ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))) END;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0, vt0.c0, -547232102)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0X34a95825 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((HEX(rt0.c0), (rt0.c2 IN (rt0.c0)), (~ (rt0.c2)))))) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, -547232102)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0x34a95825 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((HEX(rt0.c0), (rt0.c2 IN (rt0.c0)), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0, vt0.c0, -547232102)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0X34a95825 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((HEX(rt0.c0), (rt0.c2 IN (rt0.c0)), (~ (rt0.c2)))))) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, -547232102)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0x34a95825 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((HEX(rt0.c0), (rt0.c2 IN (rt0.c0)), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0, vt0.c0, -547232102)) NOT BETWEEN ((vt0.c0 COLLATE BINARY, (rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0X34a95825 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN NULL WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END)) AND ((HEX(rt0.c0), (rt0.c2 IN (rt0.c0)), (~ (rt0.c2)))))) ORDER BY (((~ (rt0.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0)))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (ABS(DISTINCT 0.37548002276253356)))) ORDER BY NULL, (((rt0.c1)<=(rt0.c1)) IN (0.8856085174569936 COLLATE RTRIM))  NULLS LAST, ((((((((((rt0.c2) ISNULL))OR(TRIM(rt0.c0, rt0.c2))))OR((x'15de7859' IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0)))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (ABS(DISTINCT 0.37548002276253356)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, (((rt0.c1)<=(rt0.c1)) IN (0.8856085174569936 COLLATE RTRIM))  NULLS LAST, ((((((((((rt0.c2) ISNULL))OR(TRIM(rt0.c0, rt0.c2))))OR((x'15de7859' IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0)))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (ABS(DISTINCT 0.37548002276253356)))) ORDER BY NULL, (((rt0.c1)<=(rt0.c1)) IN (0.8856085174569936 COLLATE RTRIM))  NULLS LAST, ((((((((((rt0.c2) ISNULL))OR(TRIM(rt0.c0, rt0.c2))))OR((x'15de7859' IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0)))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (ABS(DISTINCT 0.37548002276253356)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, (((rt0.c1)<=(rt0.c1)) IN (0.8856085174569936 COLLATE RTRIM))  NULLS LAST, ((((((((((rt0.c2) ISNULL))OR(TRIM(rt0.c0, rt0.c2))))OR((x'15de7859' IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c0)))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (ABS(DISTINCT 0.37548002276253356)))) ORDER BY NULL, (((rt0.c1)<=(rt0.c1)) IN (0.8856085174569936 COLLATE RTRIM))  NULLS LAST, ((((((((((rt0.c2) ISNULL))OR(TRIM(rt0.c0, rt0.c2))))OR((x'15de7859' IN (rt0.c1)))))OR((vt0.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0) IS FALSE));
SELECT * FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((t0.c1)>=(t0.c2))) NOT NULL) WHERE (IFNULL(DISTINCT t0.c0, rt0.c0) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((vt0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c0, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((t0.c1)>=(t0.c2))) NOT NULL) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((vt0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((t0.c1)>=(t0.c2))) NOT NULL) WHERE (IFNULL(DISTINCT t0.c0, rt0.c0) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((vt0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT t0.c0, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((t0.c1)>=(t0.c2))) NOT NULL) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((vt0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON ((((t0.c1)>=(t0.c2))) NOT NULL) WHERE (IFNULL(DISTINCT t0.c0, rt0.c0) COLLATE BINARY) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((vt0.c0)&(t0.c0))));
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)IS NOT(NULL)), json_insert(t0.c2, t0.c0, t0.c1), ((((t0.c1)AND(t0.c2)))OR(x''))))>=((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)), (~ (t0.c2)), UPPER(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))) AND ((((t0.c2)=(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 END))), UPPER(DISTINCT ((t0.c1) ISNULL)) ASC  NULLS FIRST, ABS(DISTINCT t0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)IS NOT(NULL)), json_insert(t0.c2, t0.c0, t0.c1), ((((t0.c1)AND(t0.c2)))OR(x''))))>=((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)), (~ (t0.c2)), UPPER(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))) AND ((((t0.c2)=(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 END))), UPPER(DISTINCT ((t0.c1) ISNULL)) ASC  NULLS FIRST, ABS(DISTINCT t0.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)IS NOT(NULL)), json_insert(t0.c2, t0.c0, t0.c1), ((((t0.c1)AND(t0.c2)))OR(x''))))>=((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)), (~ (t0.c2)), UPPER(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))) AND ((((t0.c2)=(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 END))), UPPER(DISTINCT ((t0.c1) ISNULL)) ASC  NULLS FIRST, ABS(DISTINCT t0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)IS NOT(NULL)), json_insert(t0.c2, t0.c0, t0.c1), ((((t0.c1)AND(t0.c2)))OR(x''))))>=((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)), (~ (t0.c2)), UPPER(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))) AND ((((t0.c2)=(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 END))), UPPER(DISTINCT ((t0.c1) ISNULL)) ASC  NULLS FIRST, ABS(DISTINCT t0.c0) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c1)IS NOT(NULL)), json_insert(t0.c2, t0.c0, t0.c1), ((((t0.c1)AND(t0.c2)))OR(x''))))>=((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)), (~ (t0.c2)), UPPER(t0.c2))))) ORDER BY (((t0.c0, t0.c0, t0.c2)) BETWEEN ((((t0.c0)IS(t0.c0)), ((t0.c2) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c2)) NOT BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))))) AND ((((t0.c2)=(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN t0.c1 THEN t0.c2 END))), UPPER(DISTINCT ((t0.c1) ISNULL)) ASC  NULLS FIRST, ABS(DISTINCT t0.c0) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((((rt0.c0)OR((NOT (rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c0)OR((NOT (rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((((rt0.c0)OR((NOT (rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((rt0.c0)OR((NOT (rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((- (rt0.c0)) IN ())) ORDER BY ((((rt0.c0)OR((NOT (rt0.c0)))))AND(((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(rt0.c2))));
SELECT COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('{}' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('{}' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('{}' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('{}' COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL) BETWEEN (CASE t0.c2  WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END) AND ('{}' COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('690726649') ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (('690726649') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('690726649') ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (('690726649') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('690726649') ORDER BY CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT) DESC;
SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT * FROM vt0, t0 NATURAL JOIN rt0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c1 IN (rt0.c2)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(vt0.c0))) ORDER BY CASE WHEN ((t0.c0)>(rt0.c0)) THEN rt0.c0 ELSE ((t0.c0) IS TRUE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1 IN (rt0.c2)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((t0.c0)>(rt0.c0)) THEN rt0.c0 ELSE ((t0.c0) IS TRUE) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c1 IN (rt0.c2)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(vt0.c0))) ORDER BY CASE WHEN ((t0.c0)>(rt0.c0)) THEN rt0.c0 ELSE ((t0.c0) IS TRUE) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1 IN (rt0.c2)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN ((t0.c0)>(rt0.c0)) THEN rt0.c0 ELSE ((t0.c0) IS TRUE) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c1 IN (rt0.c2)))OR(((NULL) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR(vt0.c0))) ORDER BY CASE WHEN ((t0.c0)>(rt0.c0)) THEN rt0.c0 ELSE ((t0.c0) IS TRUE) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))=(ABS(t0.c2))) WHERE (-5.87163255E8) ORDER BY ((((t0.c1) IS TRUE))LIKE(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-5.87163255E8) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))==(ABS(t0.c2))) ORDER BY ((((t0.c1) IS TRUE))LIKE(NULL))  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))=(ABS(t0.c2))) WHERE (-5.87163255E8) ORDER BY ((((t0.c1) IS TRUE))LIKE(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-5.87163255E8) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))==(ABS(t0.c2))) ORDER BY ((((t0.c1) IS TRUE))LIKE(NULL))  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))=(ABS(t0.c2))) WHERE (-5.87163255E8) ORDER BY ((((t0.c1) IS TRUE))LIKE(NULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN LIKE(rt0.c2, rt0.c0) THEN ((rt0.c0)OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('0.8281048766800027')) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c0)-(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(rt0.c2, rt0.c0) THEN ((rt0.c0)OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('0.8281048766800027')) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c0)-(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN LIKE(rt0.c2, rt0.c0) THEN ((rt0.c0)OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('0.8281048766800027')) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c0)-(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKE(rt0.c2, rt0.c0) THEN ((rt0.c0)OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('0.8281048766800027')) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c0)-(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN LIKE(rt0.c2, rt0.c0) THEN ((rt0.c0)OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN rt0.c1 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND ('0.8281048766800027')) THEN ((rt0.c1) NOTNULL) ELSE ((rt0.c0)-(rt0.c0)) END);
SELECT ALL * FROM rt0, vt0, t0 WHERE (IFNULL(DISTINCT 0.10656883170907927, HEX(t0.c1))) ORDER BY 'G4QIℨy9', ((t0.c1)LIKE(((NULL) BETWEEN (rt0.c2) AND (t0.c0))))  NULLS FIRST, (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT 0.10656883170907927, HEX(t0.c1))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 'G4QIℨy9', ((t0.c1)LIKE(((NULL) BETWEEN (rt0.c2) AND (t0.c0))))  NULLS FIRST, (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((rt0.c2) IS TRUE))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (IFNULL(DISTINCT 0.10656883170907927, HEX(t0.c1))) ORDER BY 'G4QIℨy9', ((t0.c1)LIKE(((NULL) BETWEEN (rt0.c2) AND (t0.c0))))  NULLS FIRST, (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT 0.10656883170907927, HEX(t0.c1))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY 'G4QIℨy9', ((t0.c1)LIKE(((NULL) BETWEEN (rt0.c2) AND (t0.c0))))  NULLS FIRST, (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((rt0.c2) IS TRUE))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (IFNULL(DISTINCT 0.10656883170907927, HEX(t0.c1))) ORDER BY 'G4QIℨy9', ((t0.c1)LIKE(((NULL) BETWEEN (rt0.c2) AND (t0.c0))))  NULLS FIRST, (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((rt0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('', vt0.c0, t0.c1, t0.c2, 'O\n悦NUR')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c0 IN ()), ((t0.c0) IS TRUE), t0.c2 COLLATE NOCASE, 0.097354134176306)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(t0.c1 AS INTEGER), ((t0.c0)<>(t0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), '-276246538'))));
SELECT SUM(count) FROM (SELECT ((((('', vt0.c0, t0.c1, t0.c2, 'O\n悦NUR')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c0 IN ()), ((t0.c0) IS TRUE), t0.c2 COLLATE NOCASE, 0.097354134176306)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(t0.c1 AS INTEGER), ((t0.c0)!=(t0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), '-276246538')))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('', vt0.c0, t0.c1, t0.c2, 'O\n悦NUR')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c0 IN ()), ((t0.c0) IS TRUE), t0.c2 COLLATE NOCASE, 0.097354134176306)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(t0.c1 AS INTEGER), ((t0.c0)<>(t0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), '-276246538'))));
SELECT SUM(count) FROM (SELECT ((((('', vt0.c0, t0.c1, t0.c2, 'O\n悦NUR')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c0 IN ()), ((t0.c0) IS TRUE), t0.c2 COLLATE NOCASE, 0.097354134176306)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(t0.c1 AS INTEGER), ((t0.c0)!=(t0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), '-276246538')))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((('', vt0.c0, t0.c1, t0.c2, 'O\n悦NUR')) BETWEEN ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)), (t0.c0 IN ()), ((t0.c0) IS TRUE), t0.c2 COLLATE NOCASE, 0.097354134176306)) AND ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(t0.c1 AS INTEGER), ((t0.c0)<>(t0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)), '-276246538'))));
SELECT ALL * FROM vt0, rt0 INDEXED BY i12, t0 WHERE (rtreenode(CASE t0.c2  WHEN t0.c0 THEN rt0.c1 END, RTRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE t0.c2  WHEN t0.c0 THEN rt0.c1 END, RTRIM(t0.c2))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, t0);
SELECT ALL * FROM vt0, rt0 INDEXED BY i12, t0 WHERE (rtreenode(CASE t0.c2  WHEN t0.c0 THEN rt0.c1 END, RTRIM(t0.c2)));
SELECT SUM(count) FROM (SELECT ((rtreenode(CASE t0.c2  WHEN t0.c0 THEN rt0.c1 END, RTRIM(t0.c2))) IS TRUE)  as count FROM vt0, rt0 INDEXED BY i12, t0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1)*(0.41604992063483537)) IN ())) ORDER BY ((((t0.c2) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((t0.c2)%(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(0.41604992063483537)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c2) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((t0.c2)%(rt0.c2)))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1)*(0.41604992063483537)) IN ())) ORDER BY ((((t0.c2) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((t0.c2)%(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*(0.41604992063483537)) IN ())) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((t0.c2) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((t0.c2)%(rt0.c2)))) ASC);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((rt0.c1)*(0.41604992063483537)) IN ())) ORDER BY ((((t0.c2) IS FALSE)) BETWEEN ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((t0.c2)%(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (((t0.c2) BETWEEN (rt0.c2) AND (0Xffffffffccb8fd40))) AND (((t0.c1)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN (((t0.c2) BETWEEN (rt0.c2) AND (0xffffffffccb8fd40))) AND (((t0.c1)/(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (((t0.c2) BETWEEN (rt0.c2) AND (0Xffffffffccb8fd40))) AND (((t0.c1)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN (((t0.c2) BETWEEN (rt0.c2) AND (0xffffffffccb8fd40))) AND (((t0.c1)/(t0.c2))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (((t0.c2) BETWEEN (rt0.c2) AND (0Xffffffffccb8fd40))) AND (((t0.c1)/(t0.c2)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)&(rt0.c2))))<=((((t0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))))) WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN (rt0.c0 IN ()) THEN t0.c2 WHEN ((t0.c1)||(t0.c0)) THEN ((rt0.c2) IS FALSE) ELSE (- (t0.c1)) END) ORDER BY (((((t0.c1))==((rt0.c2)))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c1))>=((''))))), x'f5cc';
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN (rt0.c0 IN ()) THEN t0.c2 WHEN ((t0.c1)||(t0.c0)) THEN ((rt0.c2) IS FALSE) ELSE (- (t0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)&(rt0.c2))))<=((((t0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((((t0.c1))==((rt0.c2)))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c1))>=((''))))), x'f5cc');
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)&(rt0.c2))))<=((((t0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))))) WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN (rt0.c0 IN ()) THEN t0.c2 WHEN ((t0.c1)||(t0.c0)) THEN ((rt0.c2) IS FALSE) ELSE (- (t0.c1)) END) ORDER BY (((((t0.c1))==((rt0.c2)))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c1))>=((''))))), x'f5cc';
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN (rt0.c0 IN ()) THEN t0.c2 WHEN ((t0.c1)||(t0.c0)) THEN ((rt0.c2) IS FALSE) ELSE (- (t0.c1)) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)&(rt0.c2))))<=((((t0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((((t0.c1))==((rt0.c2)))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c1))>=((''))))), x'f5cc');
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)&(rt0.c2))))<=((((t0.c2) NOT BETWEEN (rt0.c1) AND (t0.c0))))) WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN (rt0.c0 IN ()) THEN t0.c2 WHEN ((t0.c1)||(t0.c0)) THEN ((rt0.c2) IS FALSE) ELSE (- (t0.c1)) END) ORDER BY (((((t0.c1))==((rt0.c2)))) NOT BETWEEN ((t0.c0 IN ())) AND ((((t0.c1))>=((''))))), x'f5cc';
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((((~ (vt0.c0))))>((((((x'')OR(vt0.c0)))AND(0.5931272444541076)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>((((((x'')OR(vt0.c0)))AND(0.5931272444541076))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((((~ (vt0.c0))))>((((((x'')OR(vt0.c0)))AND(0.5931272444541076)))));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((~ (vt0.c0))))>((((((x'')OR(vt0.c0)))AND(0.5931272444541076))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY ((((~ (vt0.c0))))>((((((x'')OR(vt0.c0)))AND(0.5931272444541076)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c1, '0.9490747147999744')) AND ((rt0.c1, rt0.c0, '*w')))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c1, '0.9490747147999744')) AND ((rt0.c1, rt0.c0, '*w')))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c1, '0.9490747147999744')) AND ((rt0.c1, rt0.c0, '*w')))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c1, '0.9490747147999744')) AND ((rt0.c1, rt0.c0, '*w')))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c1, '0.9490747147999744')) AND ((rt0.c1, rt0.c0, '*w')))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))%(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))%(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))%(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))%(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((rt0.c1)AND(t0.c0)))AND(rt0.c0)))%(((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c2)) AND (('-983273090')))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2))))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c2 AS NUMERIC) ELSE ((((((((t0.c1)AND(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c2)) AND (('-983273090')))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 COLLATE RTRIM ORDER BY CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c2 AS NUMERIC) ELSE ((((((((t0.c1)AND(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c2)) AND (('-983273090')))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2))))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c2 AS NUMERIC) ELSE ((((((((t0.c1)AND(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c2)) AND (('-983273090')))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 COLLATE RTRIM ORDER BY CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c2 AS NUMERIC) ELSE ((((((((t0.c1)AND(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 COLLATE RTRIM WHERE (((t0.c0 COLLATE NOCASE) BETWEEN ((((vt0.c0)) BETWEEN ((t0.c2)) AND (('-983273090')))) AND (((((t0.c2)AND(t0.c0)))OR(t0.c2))))) ORDER BY CASE ((t0.c0) ISNULL)  WHEN t0.c1 COLLATE BINARY THEN CAST(t0.c2 AS NUMERIC) ELSE ((((((((t0.c1)AND(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.3034297746610102 ELSE rt0.c1 END)+(json_insert(t0.c2, '390009134', rt0.c0, vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.3034297746610102 ELSE rt0.c1 END)+(json_insert(t0.c2, '390009134', rt0.c0, vt0.c0, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.3034297746610102 ELSE rt0.c1 END)+(json_insert(t0.c2, '390009134', rt0.c0, vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.3034297746610102 ELSE rt0.c1 END)+(json_insert(t0.c2, '390009134', rt0.c0, vt0.c0, rt0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN t0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN 0.3034297746610102 ELSE rt0.c1 END)+(json_insert(t0.c2, '390009134', rt0.c0, vt0.c0, rt0.c0))));
SELECT ALL * FROM vt0, rt0, t0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 NOT INDEXED WHERE (NULL);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS TEXT)) IS FALSE));
SELECT * FROM vt0 INNER JOIN t0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((t0.c2 IN ()) AS NUMERIC));
SELECT * FROM vt0 INNER JOIN t0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST((t0.c2 IN ()) AS NUMERIC));
SELECT * FROM vt0 INNER JOIN t0 ON CAST((t0.c2 IN ()) AS NUMERIC) WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1))>((t0.c0, t0.c2, t0.c0))) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 END WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) IS FALSE) WHEN ((t0.c2) IS FALSE) THEN ((t0.c2)IS(t0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY 0xffffffffb736852b ASC  NULLS LAST, ((t0.c1 COLLATE RTRIM)!=(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1, t0.c2, t0.c1))>((t0.c0, t0.c2, t0.c0))) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 END WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) IS FALSE) WHEN ((t0.c2) IS FALSE) THEN ((t0.c2)IS(t0.c1)) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffb736852b ASC  NULLS LAST, ((t0.c1 COLLATE RTRIM)!=(CAST(t0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1))>((t0.c0, t0.c2, t0.c0))) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 END WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) IS FALSE) WHEN ((t0.c2) IS FALSE) THEN ((t0.c2)IS(t0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY 0xffffffffb736852b ASC  NULLS LAST, ((t0.c1 COLLATE RTRIM)!=(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1, t0.c2, t0.c1))>((t0.c0, t0.c2, t0.c0))) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 END WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) IS FALSE) WHEN ((t0.c2) IS FALSE) THEN ((t0.c2)IS(t0.c1)) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY 0Xffffffffb736852b ASC  NULLS LAST, ((t0.c1 COLLATE RTRIM)!=(CAST(t0.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1))>((t0.c0, t0.c2, t0.c0))) THEN CASE t0.c0  WHEN t0.c1 THEN t0.c2 END WHEN ((t0.c0) IS TRUE) THEN ((t0.c1) IS FALSE) WHEN ((t0.c2) IS FALSE) THEN ((t0.c2)IS(t0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY 0xffffffffb736852b ASC  NULLS LAST, ((t0.c1 COLLATE RTRIM)!=(CAST(t0.c2 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((-1.12948222E8)!=(t0.c2)) IN (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1.12948222E8)<>(t0.c2)) IN (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((-1.12948222E8)!=(t0.c2)) IN (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((-1.12948222E8)<>(t0.c2)) IN (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((-1.12948222E8)!=(t0.c2)) IN (((t0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i89 WHERE (ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)) ORDER BY '-83088085' DESC, (((t0.c2, rt0.c1, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT), CAST(rt0.c2 AS BLOB), (rt0.c0 IN (t0.c0)), RTRIM(t0.c1), (((t0.c2))<=((rt0.c0))))) AND ((t0.c0, ((((rt0.c1)AND(rt0.c2)))OR(t0.c2)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2 COLLATE NOCASE, TRIM(DISTINCT t0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)) IS TRUE)  as count FROM t0, rt0 INDEXED BY i89 ORDER BY '-83088085' DESC, (((t0.c2, rt0.c1, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT), CAST(rt0.c2 AS BLOB), (rt0.c0 IN (t0.c0)), RTRIM(t0.c1), (((t0.c2))<=((rt0.c0))))) AND ((t0.c0, ((((rt0.c1)AND(rt0.c2)))OR(t0.c2)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2 COLLATE NOCASE, TRIM(DISTINCT t0.c1, t0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 INDEXED BY i89 WHERE (ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)) ORDER BY '-83088085' DESC, (((t0.c2, rt0.c1, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT), CAST(rt0.c2 AS BLOB), (rt0.c0 IN (t0.c0)), RTRIM(t0.c1), (((t0.c2))<=((rt0.c0))))) AND ((t0.c0, ((((rt0.c1)AND(rt0.c2)))OR(t0.c2)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2 COLLATE NOCASE, TRIM(DISTINCT t0.c1, t0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(CASE t0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN x'' THEN t0.c0 WHEN t0.c0 THEN rt0.c1 END)) IS TRUE)  as count FROM t0, rt0 INDEXED BY i89 ORDER BY '-83088085' DESC, (((t0.c2, rt0.c1, t0.c1, t0.c0, t0.c0)) NOT BETWEEN ((CAST(t0.c1 AS TEXT), CAST(rt0.c2 AS BLOB), (rt0.c0 IN (t0.c0)), RTRIM(t0.c1), (((t0.c2))<=((rt0.c0))))) AND ((t0.c0, ((((rt0.c1)AND(rt0.c2)))OR(t0.c2)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2 COLLATE NOCASE, TRIM(DISTINCT t0.c1, t0.c2)))));
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((~ (rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (CAST((~ (t0.c0)) AS NUMERIC)) ORDER BY t0.c0  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) ORDER BY ((t0.c0)==(CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)==(CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) ORDER BY ((t0.c0)==(CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0)==(CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) ORDER BY ((t0.c0)==(CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN t0.c1 THEN ((t0.c0)IS NOT(t0.c0)) ELSE rt0.c0 END WHERE (((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>>(CAST(t0.c0 AS REAL)))) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>>(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN t0.c1 THEN ((t0.c0)IS NOT(t0.c0)) ELSE rt0.c0 END ORDER BY (- (rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN t0.c1 THEN ((t0.c0)IS NOT(t0.c0)) ELSE rt0.c0 END WHERE (((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>>(CAST(t0.c0 AS REAL)))) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>>(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN t0.c1 THEN ((t0.c0)IS NOT(t0.c0)) ELSE rt0.c0 END ORDER BY (- (rt0.c2)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN t0.c1 THEN ((t0.c0)IS NOT(t0.c0)) ELSE rt0.c0 END WHERE (((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>>(CAST(t0.c0 AS REAL)))) ORDER BY (- (rt0.c2)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((vt0.c0) NOT NULL)));
SELECT ALL * FROM t0 INNER JOIN vt0 ON t0.c2 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((((((((t0.c2)OR(vt0.c0)))AND(t0.c2)))AND(1.311346474E9)))OR(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((((((((t0.c2)OR(vt0.c0)))AND(t0.c2)))AND(1.311346474E9)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c2);
SELECT ALL * FROM t0 INNER JOIN vt0 ON t0.c2 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((((((((t0.c2)OR(vt0.c0)))AND(t0.c2)))AND(1.311346474E9)))OR(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((((((((t0.c2)OR(vt0.c0)))AND(t0.c2)))AND(1.311346474E9)))OR(t0.c2)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c2);
SELECT ALL * FROM t0 INNER JOIN vt0 ON t0.c2 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) NOTNULL))) AND ((((((((((t0.c2)OR(vt0.c0)))AND(t0.c2)))AND(1.311346474E9)))OR(t0.c2))))));
SELECT ALL * FROM vt0, t0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE))/(highlight(rt0.c2, rt0.c1, '1410217428', t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2) IS FALSE))/(highlight(rt0.c2, rt0.c1, '1410217428', t0.c2))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE))/(highlight(rt0.c2, rt0.c1, '1410217428', t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2) IS FALSE))/(highlight(rt0.c2, rt0.c1, '1410217428', t0.c2))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS FALSE))/(highlight(rt0.c2, rt0.c1, '1410217428', t0.c2)));
SELECT * FROM rt0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (LENGTH(vt0.c0)) AND (TRIM(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (LENGTH(vt0.c0)) AND (TRIM(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (LENGTH(vt0.c0)) AND (TRIM(rt0.c2, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOT BETWEEN (LENGTH(vt0.c0)) AND (TRIM(rt0.c2, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (LENGTH(vt0.c0)) AND (TRIM(rt0.c2, rt0.c2))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((x'', t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c0))))<>(t0.c1))) ORDER BY TYPEOF(DISTINCT t0.c1) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((x'', t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c0))))<>(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(DISTINCT t0.c1) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((x'', t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c0))))<>(t0.c1))) ORDER BY TYPEOF(DISTINCT t0.c1) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((x'', t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c0))))<>(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(DISTINCT t0.c1) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c1)) NOT BETWEEN ((x'', t0.c1, t0.c0)) AND ((t0.c0, t0.c1, t0.c0))))<>(t0.c1))) ORDER BY TYPEOF(DISTINCT t0.c1) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN vt0 WHERE (t0.c1);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)|(((((0.08230934049173799)OR('1000754845')))OR(t0.c0)))) WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0)OR(vt0.c0))) NOTNULL) ASC  NULLS LAST, (((t0.c0, rt0.c0, t0.c0)) BETWEEN ((((t0.c2)%(t0.c2)), (t0.c0 IN (t0.c1, t0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (('-428095913', CAST(t0.c1 AS INTEGER), ((rt0.c1) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)|(((((0.08230934049173799)OR('1000754845')))OR(t0.c0)))) ORDER BY ((((t0.c0)OR(vt0.c0))) NOTNULL) ASC  NULLS LAST, (((t0.c0, rt0.c0, t0.c0)) BETWEEN ((((t0.c2)%(t0.c2)), (t0.c0 IN (t0.c1, t0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (('-428095913', CAST(t0.c1 AS INTEGER), ((rt0.c1) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)|(((((0.08230934049173799)OR('1000754845')))OR(t0.c0)))) WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0)OR(vt0.c0))) NOTNULL) ASC  NULLS LAST, (((t0.c0, rt0.c0, t0.c0)) BETWEEN ((((t0.c2)%(t0.c2)), (t0.c0 IN (t0.c1, t0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (('-428095913', CAST(t0.c1 AS INTEGER), ((rt0.c1) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)|(((((0.08230934049173799)OR('1000754845')))OR(t0.c0)))) ORDER BY ((((t0.c0)OR(vt0.c0))) NOTNULL) ASC  NULLS LAST, (((t0.c0, rt0.c0, t0.c0)) BETWEEN ((((t0.c2)%(t0.c2)), (t0.c0 IN (t0.c1, t0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (('-428095913', CAST(t0.c1 AS INTEGER), ((rt0.c1) ISNULL)))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt0 ON ((CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)|(((((0.08230934049173799)OR('1000754845')))OR(t0.c0)))) WHERE (CAST(t0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY ((((t0.c0)OR(vt0.c0))) NOTNULL) ASC  NULLS LAST, (((t0.c0, rt0.c0, t0.c0)) BETWEEN ((((t0.c2)%(t0.c2)), (t0.c0 IN (t0.c1, t0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (('-428095913', CAST(t0.c1 AS INTEGER), ((rt0.c1) ISNULL)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ())) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ())) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)*(rt0.c2)) IN ())) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((('1644715959'))>=((t0.c2))))) AND ((((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((('1644715959'))>=((t0.c2))))) AND ((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((('1644715959'))>=((t0.c2))))) AND ((((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((('1644715959'))>=((t0.c2))))) AND ((((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((('1644715959'))>=((t0.c2))))) AND ((((rt0.c0) IS FALSE)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ('BtKk');
SELECT SUM(count) FROM (SELECT ALL (('BtKk') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('BtKk');
SELECT SUM(count) FROM (SELECT ALL (('BtKk') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ('BtKk');
SELECT ALL * FROM rt0 WHERE (((rt0.c2)<=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffa9bc54d9 END))  NULLS FIRST, ((rt0.c2)GLOB(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffa9bc54d9 END))  NULLS FIRST, ((rt0.c2)GLOB(rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)<=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffa9bc54d9 END))  NULLS FIRST, ((rt0.c2)GLOB(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffa9bc54d9 END))  NULLS FIRST, ((rt0.c2)GLOB(rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)<=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END))) ORDER BY (- (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN 0Xffffffffa9bc54d9 END))  NULLS FIRST, ((rt0.c2)GLOB(rt0.c0))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)OR(0.13242633824906602)))OR((t0.c2 IN (t0.c2)))) ASC  NULLS FIRST, (~ (((((((((t0.c1)OR(vt0.c0)))OR(rt0.c2)))AND('0.39488964578630736')))OR(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)OR(0.13242633824906602)))OR((t0.c2 IN (t0.c2)))) ASC  NULLS FIRST, (~ (((((((((t0.c1)OR(vt0.c0)))OR(rt0.c2)))AND('0.39488964578630736')))OR(t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)OR(0.13242633824906602)))OR((t0.c2 IN (t0.c2)))) ASC  NULLS FIRST, (~ (((((((((t0.c1)OR(vt0.c0)))OR(rt0.c2)))AND('0.39488964578630736')))OR(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)OR(0.13242633824906602)))OR((t0.c2 IN (t0.c2)))) ASC  NULLS FIRST, (~ (((((((((t0.c1)OR(vt0.c0)))OR(rt0.c2)))AND('0.39488964578630736')))OR(t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c2) ORDER BY ((((CASE rt0.c1  WHEN rt0.c2 THEN x'' END)OR(0.13242633824906602)))OR((t0.c2 IN (t0.c2)))) ASC  NULLS FIRST, (~ (((((((((t0.c1)OR(vt0.c0)))OR(rt0.c2)))AND('0.39488964578630736')))OR(t0.c1))))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((((-1.1266937E8) BETWEEN (rt0.c2) AND (NULL)))IS(((((((((rt0.c0)OR('u述')))OR(t0.c0)))AND(t0.c1)))AND(t0.c2))))) ORDER BY rt0.c0 DESC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((NULL)OR((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((-1.1266937E8) BETWEEN (rt0.c2) AND (NULL)))IS(((((((((rt0.c0)OR('u述')))OR(t0.c0)))AND(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 DESC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((NULL)OR((- (rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((-1.1266937E8) BETWEEN (rt0.c2) AND (NULL)))IS(((((((((rt0.c0)OR('u述')))OR(t0.c0)))AND(t0.c1)))AND(t0.c2))))) ORDER BY rt0.c0 DESC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((NULL)OR((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((-1.1266937E8) BETWEEN (rt0.c2) AND (NULL)))IS(((((((((rt0.c0)OR('u述')))OR(t0.c0)))AND(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 DESC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((NULL)OR((- (rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((-1.1266937E8) BETWEEN (rt0.c2) AND (NULL)))IS(((((((((rt0.c0)OR('u述')))OR(t0.c0)))AND(t0.c1)))AND(t0.c2))))) ORDER BY rt0.c0 DESC  NULLS FIRST, t0.c0 ASC  NULLS FIRST, ((NULL)OR((- (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (TRIM(rt0.c1)) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((+ (rt0.c1)), NULL, ABS(rt0.c2))) AND (('-1726077357', '-704486600', '344071031'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((+ (rt0.c1)), NULL, ABS(rt0.c2))) AND (('-1726077357', '-704486600', '344071031'))) DESC);
SELECT ALL * FROM rt0 WHERE (TRIM(rt0.c1)) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((+ (rt0.c1)), NULL, ABS(rt0.c2))) AND (('-1726077357', '-704486600', '344071031'))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c1)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((+ (rt0.c1)), NULL, ABS(rt0.c2))) AND (('-1726077357', '-704486600', '344071031'))) DESC);
SELECT ALL * FROM rt0 WHERE (TRIM(rt0.c1)) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN (((+ (rt0.c1)), NULL, ABS(rt0.c2))) AND (('-1726077357', '-704486600', '344071031'))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOT BETWEEN (rt0.c2) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE (((t0.c2))>((t0.c0)))  WHEN (t0.c1 IN ()) THEN ((rt0.c1)>>(t0.c2)) WHEN CAST(t0.c0 AS TEXT) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c1 THEN (t0.c2 IN (t0.c2)) END RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE '827477079' END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (x'e7ae2cd6')) WHEN ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((t0.c0)<>(vt0.c0)) ELSE (t0.c1 IN ()) END WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)/(rt0.c2))) AND ((((vt0.c0, rt0.c2, t0.c1))==((rt0.c1, t0.c0, 'u1**ざt6'))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)/(rt0.c2))) AND ((((vt0.c0, rt0.c2, t0.c1))==((rt0.c1, t0.c0, 'u1**ざt6')))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((t0.c2))>((t0.c0)))  WHEN (t0.c1 IN ()) THEN ((rt0.c1)>>(t0.c2)) WHEN CAST(t0.c0 AS TEXT) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c1 THEN (t0.c2 IN (t0.c2)) END RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE '827477079' END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (x'e7ae2cd6')) WHEN ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((t0.c0)<>(vt0.c0)) ELSE (t0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE (((t0.c2))>((t0.c0)))  WHEN (t0.c1 IN ()) THEN ((rt0.c1)>>(t0.c2)) WHEN CAST(t0.c0 AS TEXT) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c1 THEN (t0.c2 IN (t0.c2)) END RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE '827477079' END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (x'e7ae2cd6')) WHEN ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((t0.c0)<>(vt0.c0)) ELSE (t0.c1 IN ()) END WHERE ((((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)/(rt0.c2))) AND ((((vt0.c0, rt0.c2, t0.c1))==((rt0.c1, t0.c0, 'u1**ざt6'))))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT BETWEEN (((rt0.c2)/(rt0.c2))) AND ((((vt0.c0, rt0.c2, t0.c1))==((rt0.c1, t0.c0, 'u1**ざt6')))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((t0.c2))>((t0.c0)))  WHEN (t0.c1 IN ()) THEN ((rt0.c1)>>(t0.c2)) WHEN CAST(t0.c0 AS TEXT) THEN (((rt0.c2))<((rt0.c0))) WHEN rt0.c1 THEN (t0.c2 IN (t0.c2)) END RIGHT OUTER JOIN t0 ON CASE WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c1 WHEN rt0.c2 THEN t0.c2 ELSE '827477079' END THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (x'e7ae2cd6')) WHEN ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((t0.c0)<>(vt0.c0)) ELSE (t0.c1 IN ()) END);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 END)|((vt0.c0 IN ('')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 END)|((vt0.c0 IN ('')))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 END)|((vt0.c0 IN ('')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 END)|((vt0.c0 IN ('')))) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c1 END)|((vt0.c0 IN ('')))) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c1) ORDER BY ((((((t0.c2)IS(rt0.c0)))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))))AND(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((t0.c2)IS(rt0.c0)))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))))AND(rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c1) ORDER BY ((((((t0.c2)IS(rt0.c0)))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))))AND(rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((((((t0.c2)IS(rt0.c0)))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))))AND(rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 NOT INDEXED WHERE (rt0.c1) ORDER BY ((((((t0.c2)IS(rt0.c0)))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c1)))))AND(rt0.c0)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (UNLIKELY('畱5.\+b~'));
SELECT SUM(count) FROM (SELECT ((UNLIKELY('畱5.\+b~')) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY('畱5.\+b~'));
SELECT SUM(count) FROM (SELECT ((UNLIKELY('畱5.\+b~')) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (UNLIKELY('畱5.\+b~'));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY 'l*7[|e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'l*7[|e'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY 'l*7[|e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'l*7[|e'  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0) ORDER BY 'l*7[|e'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0) AND (((rt0.c0) BETWEEN ('-1002139448') AND (t0.c2)))) WHERE (CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0) AND (((rt0.c0) BETWEEN ('-1002139448') AND (t0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0) AND (((rt0.c0) BETWEEN ('-1002139448') AND (t0.c2)))) WHERE (CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0) AND (((rt0.c0) BETWEEN ('-1002139448') AND (t0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0) AND (((rt0.c0) BETWEEN ('-1002139448') AND (t0.c2)))) WHERE (CAST(((((t0.c0)AND(rt0.c1)))OR(rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN (t0.c1)) IN (t0.c2, t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c1)GLOB(t0.c0)))GLOB(STRFTIME(1530482677, 0Xffffffffb313c3b3, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN (t0.c1)) IN (t0.c2, t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c0)))GLOB(STRFTIME(1530482677, 0xffffffffb313c3b3, t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN (t0.c1)) IN (t0.c2, t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c1)GLOB(t0.c0)))GLOB(STRFTIME(1530482677, 0Xffffffffb313c3b3, t0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 IN (t0.c1)) IN (t0.c2, t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c0)))GLOB(STRFTIME(1530482677, 0xffffffffb313c3b3, t0.c2)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN (t0.c1)) IN (t0.c2, t0.c1 COLLATE NOCASE))) ORDER BY ((((t0.c1)GLOB(t0.c0)))GLOB(STRFTIME(1530482677, 0Xffffffffb313c3b3, t0.c2)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.163465645450674)) AS INTEGER)) ORDER BY ((((((rt0.c1)<(rt0.c0)))OR(((rt0.c2)*(rt0.c1)))))OR(NULL)) ASC, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, json_object(rt0.c0 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.163465645450674)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<(rt0.c0)))OR(((rt0.c2)*(rt0.c1)))))OR(NULL)) ASC, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, json_object(rt0.c0 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.163465645450674)) AS INTEGER)) ORDER BY ((((((rt0.c1)<(rt0.c0)))OR(((rt0.c2)*(rt0.c1)))))OR(NULL)) ASC, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, json_object(rt0.c0 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.163465645450674)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<(rt0.c0)))OR(((rt0.c2)*(rt0.c1)))))OR(NULL)) ASC, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, json_object(rt0.c0 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.163465645450674)) AS INTEGER)) ORDER BY ((((((rt0.c1)<(rt0.c0)))OR(((rt0.c2)*(rt0.c1)))))OR(NULL)) ASC, ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) ISNULL) DESC, json_object(rt0.c0 COLLATE BINARY, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY '331087293', ((vt0.c0) NOT NULL), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '331087293', ((vt0.c0) NOT NULL), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY '331087293', ((vt0.c0) NOT NULL), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '331087293', ((vt0.c0) NOT NULL), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c0))))) ORDER BY '331087293', ((vt0.c0) NOT NULL), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1 COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0) IS TRUE) COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2) NOT NULL))OR(vt0.c0)))AND(t0.c0)))OR(((((vt0.c0)OR(0.9795793915099066)))AND(rt0.c2)))))OR(NULLIF('-1473017836', rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) NOT NULL))OR(vt0.c0)))AND(t0.c0)))OR(((((vt0.c0)OR(0.9795793915099066)))AND(rt0.c2)))))OR(NULLIF('-1473017836', rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2) NOT NULL))OR(vt0.c0)))AND(t0.c0)))OR(((((vt0.c0)OR(0.9795793915099066)))AND(rt0.c2)))))OR(NULLIF('-1473017836', rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c2) NOT NULL))OR(vt0.c0)))AND(t0.c0)))OR(((((vt0.c0)OR(0.9795793915099066)))AND(rt0.c2)))))OR(NULLIF('-1473017836', rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2) NOT NULL))OR(vt0.c0)))AND(t0.c0)))OR(((((vt0.c0)OR(0.9795793915099066)))AND(rt0.c2)))))OR(NULLIF('-1473017836', rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE ((((0.811177947448097) NOTNULL) IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR('-1090716324')))&(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, (+ (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.811177947448097) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR('-1090716324')))&(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, (+ (rt0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((0.811177947448097) NOTNULL) IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR('-1090716324')))&(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, (+ (rt0.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.811177947448097) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR('-1090716324')))&(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, (+ (rt0.c2)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((0.811177947448097) NOTNULL) IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR('-1090716324')))&(CAST(rt0.c1 AS BLOB)))  NULLS FIRST, (+ (rt0.c2)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST('0.5367187637208785' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('0.5367187637208785' AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST('0.5367187637208785' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('0.5367187637208785' AS REAL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST('0.5367187637208785' AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((((rt0.c0)<=(t0.c0)), (NOT (0.666374892975082)), (rt0.c1 IN ()))) AND (('' COLLATE BINARY, rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((((rt0.c0)<=(t0.c0)), (NOT (0.666374892975082)), (rt0.c1 IN ()))) AND (('' COLLATE BINARY, rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((((rt0.c0)<=(t0.c0)), (NOT (0.666374892975082)), (rt0.c1 IN ()))) AND (('' COLLATE BINARY, rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((((rt0.c0)<=(t0.c0)), (NOT (0.666374892975082)), (rt0.c1 IN ()))) AND (('' COLLATE BINARY, rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((((rt0.c0)<=(t0.c0)), (NOT (0.666374892975082)), (rt0.c1 IN ()))) AND (('' COLLATE BINARY, rt0.c1, ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))))));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (TRIM(t0.c1) IN ()) WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)LIKE(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)LIKE(t0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (TRIM(t0.c1) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (TRIM(t0.c1) IN ()) WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)LIKE(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)LIKE(t0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (TRIM(t0.c1) IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN t0 ON (TRIM(t0.c1) IN ()) WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)LIKE(t0.c1)) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (rt0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN (NULL) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c0 COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN 'zW7' THEN rt0.c0 ELSE rt0.c2 END))!=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN 'zW7' THEN rt0.c0 ELSE rt0.c2 END))!=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN 'zW7' THEN rt0.c0 ELSE rt0.c2 END))!=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN 'zW7' THEN rt0.c0 ELSE rt0.c2 END))!=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN 'zW7' THEN rt0.c0 ELSE rt0.c2 END))!=((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0))))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)>(t0.c1)), (t0.c0 IN ()), '750733641'))<>((LTRIM(vt0.c0), ((t0.c1) IS FALSE), ((t0.c1) IS FALSE)))) WHERE ((((t0.c1) NOTNULL) IN (NULL))) ORDER BY ((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)|(t0.c1))) AND (((t0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULLIF(t0.c0, t0.c0), (~ ('0.6266108134177473')), (t0.c2 IN ()))) AND ((t0.c2 COLLATE BINARY, NULL, 0.3007577594570837 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) NOTNULL) IN (NULL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)>(t0.c1)), (t0.c0 IN ()), '750733641'))!=((LTRIM(vt0.c0), ((t0.c1) IS FALSE), ((t0.c1) IS FALSE)))) ORDER BY ((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)|(t0.c1))) AND (((t0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULLIF(t0.c0, t0.c0), (~ ('0.6266108134177473')), (t0.c2 IN ()))) AND ((t0.c2 COLLATE BINARY, NULL, 0.3007577594570837 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)>(t0.c1)), (t0.c0 IN ()), '750733641'))<>((LTRIM(vt0.c0), ((t0.c1) IS FALSE), ((t0.c1) IS FALSE)))) WHERE ((((t0.c1) NOTNULL) IN (NULL))) ORDER BY ((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)|(t0.c1))) AND (((t0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULLIF(t0.c0, t0.c0), (~ ('0.6266108134177473')), (t0.c2 IN ()))) AND ((t0.c2 COLLATE BINARY, NULL, 0.3007577594570837 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) NOTNULL) IN (NULL))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)>(t0.c1)), (t0.c0 IN ()), '750733641'))!=((LTRIM(vt0.c0), ((t0.c1) IS FALSE), ((t0.c1) IS FALSE)))) ORDER BY ((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)|(t0.c1))) AND (((t0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULLIF(t0.c0, t0.c0), (~ ('0.6266108134177473')), (t0.c2 IN ()))) AND ((t0.c2 COLLATE BINARY, NULL, 0.3007577594570837 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((t0.c0)>(t0.c1)), (t0.c0 IN ()), '750733641'))<>((LTRIM(vt0.c0), ((t0.c1) IS FALSE), ((t0.c1) IS FALSE)))) WHERE ((((t0.c1) NOTNULL) IN (NULL))) ORDER BY ((CASE t0.c2  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)|(t0.c1))) AND (((t0.c2) ISNULL))) DESC  NULLS LAST, (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULLIF(t0.c0, t0.c0), (~ ('0.6266108134177473')), (t0.c2 IN ()))) AND ((t0.c2 COLLATE BINARY, NULL, 0.3007577594570837 COLLATE RTRIM))) ASC;
SELECT * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY (+ (LIKELIHOOD(DISTINCT vt0.c0, 0.784930285385901))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY (+ (LIKELIHOOD(DISTINCT vt0.c0, 0.784930285385901))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY (+ (LIKELIHOOD(DISTINCT vt0.c0, 0.784930285385901))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 ORDER BY (+ (LIKELIHOOD(DISTINCT vt0.c0, 0.784930285385901))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (TYPEOF(CAST(vt0.c0 AS NUMERIC))) ORDER BY (+ (LIKELIHOOD(DISTINCT vt0.c0, 0.784930285385901))) DESC, (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((t0.c0))<((rt0.c0))))==(((t0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((rt0.c0))))==(((t0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((t0.c0))<((rt0.c0))))==(((t0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((rt0.c0))))==(((t0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((t0.c0))<((rt0.c0))))==(((t0.c2)IS NOT(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((~ (t0.c0)))!=((+ (rt0.c1))))) ORDER BY ((((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c1)))>=(((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))<>((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c1)))>=(((t0.c1) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((~ (t0.c0)))!=((+ (rt0.c1))))) ORDER BY ((((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c1)))>=(((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))<>((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c1)))>=(((t0.c1) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((~ (t0.c0)))!=((+ (rt0.c1))))) ORDER BY ((((((((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c1)))>=(((t0.c1) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2))&(((rt0.c0) IS FALSE))) WHERE (NULL) ORDER BY (('') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2))&(((rt0.c0) IS FALSE))) ORDER BY (('') IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2))&(((rt0.c0) IS FALSE))) WHERE (NULL) ORDER BY (('') IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2))&(((rt0.c0) IS FALSE))) ORDER BY (('') IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((json_insert(rt0.c2, rt0.c0, vt0.c0, rt0.c1, rt0.c2))&(((rt0.c0) IS FALSE))) WHERE (NULL) ORDER BY (('') IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) ORDER BY ((rt0.c1 IN (rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) ORDER BY ((rt0.c1 IN (rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) ISNULL)) ORDER BY ((rt0.c1 IN (rt0.c1)) IN (CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((((((LIKELIHOOD(rt0.c2, 0.5210753893006669))AND(UPPER(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LIKELIHOOD(rt0.c2, 0.5210753893006669))AND(UPPER(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((((((LIKELIHOOD(rt0.c2, 0.5210753893006669))AND(UPPER(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LIKELIHOOD(rt0.c2, 0.5210753893006669))AND(UPPER(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((((((((LIKELIHOOD(rt0.c2, 0.5210753893006669))AND(UPPER(rt0.c0))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(CAST(rt0.c1 AS REAL))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) NOT BETWEEN (x'') AND (rt0.c2)));
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))IS NOT(((t0.c1)-(t0.c1))))) ORDER BY NULLIF(t0.c2, (- (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))IS NOT(((t0.c1)-(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c2, (- (t0.c1))) ASC);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))IS NOT(((t0.c1)-(t0.c1))))) ORDER BY NULLIF(t0.c2, (- (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))IS NOT(((t0.c1)-(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c2, (- (t0.c1))) ASC);
SELECT * FROM t0 WHERE ((((t0.c1 IN ()))IS NOT(((t0.c1)-(t0.c1))))) ORDER BY NULLIF(t0.c2, (- (t0.c1))) ASC;
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN (((('')AND(vt0.c0)))OR(rt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c2)) WHEN t0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((('')AND(vt0.c0)))OR(rt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c2)) WHEN t0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN (((('')AND(vt0.c0)))OR(rt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c2)) WHEN t0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((('')AND(vt0.c0)))OR(rt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c2)) WHEN t0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt0 WHERE (CASE WHEN (((('')AND(vt0.c0)))OR(rt0.c0)) THEN ((t0.c0) NOT NULL) WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))AND(t0.c2)) WHEN t0.c2 COLLATE BINARY THEN vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>>(t0.c0))) IS TRUE)) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))OR(t0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>>(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((vt0.c0)AND(t0.c1)))OR(t0.c0)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>>(t0.c0))) IS TRUE)) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))OR(t0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>>(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(((((vt0.c0)AND(t0.c1)))OR(t0.c0)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c2)>>(t0.c0))) IS TRUE)) ORDER BY CAST(((((vt0.c0)AND(t0.c1)))OR(t0.c0)) AS TEXT);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY '0.30030720325980464' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY '0.30030720325980464' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY '0.30030720325980464' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY '0.30030720325980464' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND (((vt0.c0 IN ()))))) ORDER BY '0.30030720325980464' DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) ISNULL)) ORDER BY CAST(((vt0.c0)<(x'')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(x'')) AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) ISNULL)) ORDER BY CAST(((vt0.c0)<(x'')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(x'')) AS REAL)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) ISNULL)) ORDER BY CAST(((vt0.c0)<(x'')) AS REAL)  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((- (((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((- (((((vt0.c0)AND(rt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (UPPER(t0.c2)))) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (UPPER(t0.c2)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (UPPER(t0.c2)))) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (UPPER(t0.c2)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, rt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((CAST(t0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (UPPER(t0.c2)))) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0Xffffffffe64d2ef4) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe64d2ef4) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0Xffffffffe64d2ef4) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe64d2ef4) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0Xffffffffe64d2ef4) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt0.c2)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt0.c2)) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt0.c2)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt0.c2)) AND (CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(DISTINCT rt0.c2)) AND (CAST(t0.c1 AS INTEGER)))) ORDER BY (- ((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (('L*US,綩╉	')-((rt0.c2 IN ()))) INNER JOIN rt0 ON (~ ((rt0.c2 IN (rt0.c2, t0.c2)))) WHERE (1328247205);
SELECT SUM(count) FROM (SELECT ALL ((1328247205) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('L*US,綩╉	')-((rt0.c2 IN ()))) INNER JOIN rt0 ON (~ ((rt0.c2 IN (rt0.c2, t0.c2)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (('L*US,綩╉	')-((rt0.c2 IN ()))) INNER JOIN rt0 ON (~ ((rt0.c2 IN (rt0.c2, t0.c2)))) WHERE (1328247205);
SELECT SUM(count) FROM (SELECT ALL ((1328247205) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (('L*US,綩╉	')-((rt0.c2 IN ()))) INNER JOIN rt0 ON (~ ((rt0.c2 IN (rt0.c2, t0.c2)))));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (('L*US,綩╉	')-((rt0.c2 IN ()))) INNER JOIN rt0 ON (~ ((rt0.c2 IN (rt0.c2, t0.c2)))) WHERE (1328247205);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE (TOTAL_CHANGES()) ORDER BY IFNULL(NULL, x'9f05')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c0 ORDER BY IFNULL(NULL, x'9f05')  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE (TOTAL_CHANGES()) ORDER BY IFNULL(NULL, x'9f05')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c0 ORDER BY IFNULL(NULL, x'9f05')  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE (TOTAL_CHANGES()) ORDER BY IFNULL(NULL, x'9f05')  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT NULL)), (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) NOT NULL)), (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT NULL)), (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY LOWER(((vt0.c0) NOT NULL)), (vt0.c0 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE) ORDER BY LOWER(((vt0.c0) NOT NULL)), (vt0.c0 IN ()) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (json_insert(x'' COLLATE RTRIM, UNLIKELY(DISTINCT rt0.c2), ((((t0.c2)OR(rt0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(x'' COLLATE RTRIM, UNLIKELY(DISTINCT rt0.c2), ((((t0.c2)OR(rt0.c2)))OR(t0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (json_insert(x'' COLLATE RTRIM, UNLIKELY(DISTINCT rt0.c2), ((((t0.c2)OR(rt0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json_insert(x'' COLLATE RTRIM, UNLIKELY(DISTINCT rt0.c2), ((((t0.c2)OR(rt0.c2)))OR(t0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (json_insert(x'' COLLATE RTRIM, UNLIKELY(DISTINCT rt0.c2), ((((t0.c2)OR(rt0.c2)))OR(t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) NOTNULL)) ORDER BY ((((('\\nasz%d馉7')) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((('\\nasz%d馉7')) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) NOTNULL)) ORDER BY ((((('\\nasz%d馉7')) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((('\\nasz%d馉7')) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) NOTNULL)) ORDER BY ((((('\\nasz%d馉7')) NOT BETWEEN ((t0.c2)) AND ((t0.c2)))) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END));
SELECT ALL * FROM t0, vt0 WHERE ((('0.0') BETWEEN ((((t0.c2, vt0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('0.0') BETWEEN ((((t0.c2, vt0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((('0.0') BETWEEN ((((t0.c2, vt0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('0.0') BETWEEN ((((t0.c2, vt0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((('0.0') BETWEEN ((((t0.c2, vt0.c0, t0.c0))>((vt0.c0, t0.c0, t0.c0)))) AND (t0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN (NOT (t0.c0)) THEN (((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))) ELSE 0x7367660d END WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN (NOT (t0.c0)) THEN (((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))) ELSE 0x7367660d END);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN (NOT (t0.c0)) THEN (((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))) ELSE 0x7367660d END WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c2) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE BINARY INNER JOIN vt0 ON CASE WHEN (NOT (t0.c0)) THEN (((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c1))) ELSE 0x7367660d END);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'')>>(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c2))))) ORDER BY 0xffffffffa63d6e21 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0Xffffffffa63d6e21 ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'')>>(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c2))))) ORDER BY 0xffffffffa63d6e21 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY 0Xffffffffa63d6e21 ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((x'')>>(((((((((((((rt0.c1)AND(rt0.c0)))AND(t0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(t0.c2))))) ORDER BY 0xffffffffa63d6e21 ASC;
SELECT * FROM vt0, rt0 WHERE (CAST('3~+SxI2q' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('3~+SxI2q' AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST('3~+SxI2q' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('3~+SxI2q' AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST('3~+SxI2q' AS TEXT));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((~ ('-2068533568' COLLATE RTRIM))) ORDER BY -155655901  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ('-2068533568' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY -155655901  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE ((~ ('-2068533568' COLLATE RTRIM))) ORDER BY -155655901  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ('-2068533568' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY -155655901  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((((((((0.8996512675156445)AND('-1552021183')))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(('%J' IN ())))) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8680795842000225 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((0.8996512675156445)AND('-1552021183')))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(('%J' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8680795842000225 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((((((((((((((0.8996512675156445)AND('-1552021183')))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(('%J' IN ())))) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8680795842000225 WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((0.8996512675156445)AND('-1552021183')))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(('%J' IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8680795842000225 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (((((((((((((((((0.8996512675156445)AND('-1552021183')))OR(vt0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND((~ (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))AND((- (vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(('%J' IN ())))) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.8680795842000225 WHEN vt0.c0 THEN vt0.c0 END));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c2 ELSE rt0.c0 END THEN CAST(t0.c1 AS INTEGER) WHEN ((((t0.c0)OR(t0.c1)))OR(t0.c2)) THEN ((rt0.c1)>(vt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN ((vt0.c0)==(t0.c1)) ELSE (vt0.c0 IN ()) END RIGHT OUTER JOIN t0 ON 0.14221446842825936 WHERE ((rt0.c1 IN ())) ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c2 ELSE rt0.c0 END THEN CAST(t0.c1 AS INTEGER) WHEN ((((t0.c0)OR(t0.c1)))OR(t0.c2)) THEN ((rt0.c1)>(vt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN ((vt0.c0)==(t0.c1)) ELSE (vt0.c0 IN ()) END RIGHT OUTER JOIN t0 ON 0.14221446842825936 ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c2 ELSE rt0.c0 END THEN CAST(t0.c1 AS INTEGER) WHEN ((((t0.c0)OR(t0.c1)))OR(t0.c2)) THEN ((rt0.c1)>(vt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN ((vt0.c0)==(t0.c1)) ELSE (vt0.c0 IN ()) END RIGHT OUTER JOIN t0 ON 0.14221446842825936 WHERE ((rt0.c1 IN ())) ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t0.c1 THEN t0.c2 ELSE rt0.c0 END THEN CAST(t0.c1 AS INTEGER) WHEN ((((t0.c0)OR(t0.c1)))OR(t0.c2)) THEN ((rt0.c1)>(vt0.c0)) WHEN rt0.c2 COLLATE RTRIM THEN ((vt0.c0)==(t0.c1)) ELSE (vt0.c0 IN ()) END RIGHT OUTER JOIN t0 ON 0.14221446842825936 ORDER BY ((((((t0.c1)AND(t0.c0)))OR(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0))<>((t0.c1, t0.c1, t0.c2))))))OR(json_type(t0.c1)))) ORDER BY ((((((t0.c2) NOT NULL))AND(NULL)))AND(((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0))<>((t0.c1, t0.c1, t0.c2))))))OR(json_type(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) NOT NULL))AND(NULL)))AND(((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0))<>((t0.c1, t0.c1, t0.c2))))))OR(json_type(t0.c1)))) ORDER BY ((((((t0.c2) NOT NULL))AND(NULL)))AND(((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c2 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0))<>((t0.c1, t0.c1, t0.c2))))))OR(json_type(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2) NOT NULL))AND(NULL)))AND(((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((CAST(t0.c2 AS INTEGER))OR((((t0.c0, t0.c0, t0.c0))<>((t0.c1, t0.c1, t0.c2))))))OR(json_type(t0.c1)))) ORDER BY ((((((t0.c2) NOT NULL))AND(NULL)))AND(((t0.c0) BETWEEN (t0.c2) AND (t0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c0)))!=(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY 0Xffffffffd3ee4737 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c0)))<>(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffd3ee4737 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c0)))!=(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY 0Xffffffffd3ee4737 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c0)))<>(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY 0Xffffffffd3ee4737 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)>(rt0.c0)))!=(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))) ORDER BY 0Xffffffffd3ee4737 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<>((vt0.c0))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) ELSE ((vt0.c0)-(314633166)) END) ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))!=((vt0.c0))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) ELSE ((vt0.c0)-(314633166)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<>((vt0.c0))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) ELSE ((vt0.c0)-(314633166)) END) ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))!=((vt0.c0))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) ELSE ((vt0.c0)-(314633166)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<>((vt0.c0))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) ELSE ((vt0.c0)-(314633166)) END) ORDER BY CAST(x'' AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN vt0);
SELECT * FROM rt0, t0 NATURAL JOIN vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c1)<(t0.c1)))>(((rt0.c2)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(t0.c1)))>(((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c1)<(t0.c1)))>(((rt0.c2)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(t0.c1)))>(((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c1)<(t0.c1)))>(((rt0.c2)!=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((NULL)IS NOT(((rt0.c0)+(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)IS NOT(((rt0.c0)+(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((NULL)IS NOT(((rt0.c0)+(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)IS NOT(((rt0.c0)+(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c2))) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((NULL)IS NOT(((rt0.c0)+(rt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)&(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)IS(((rt0.c1)+(x''))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(((rt0.c1)+(x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (((rt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)IS(((rt0.c1)+(x''))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS(((rt0.c1)+(x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN (((rt0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)IS(((rt0.c1)+(x''))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN (((rt0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((NULL) ISNULL) THEN PRINTF(t0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) ISNULL) THEN PRINTF(t0.c2) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((NULL) ISNULL) THEN PRINTF(t0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) ISNULL) THEN PRINTF(t0.c2) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN ((NULL) ISNULL) THEN PRINTF(t0.c2) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END COLLATE BINARY) ORDER BY (((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE BINARY COLLATE NOCASE DESC, CASE WHEN '185068855' THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((0xffffffffb4ec6efe)<(t0.c1)) THEN t0.c0 WHEN (t0.c2 IN ('-1256803725')) THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE BINARY COLLATE NOCASE DESC, CASE WHEN '185068855' THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((0Xffffffffb4ec6efe)<(t0.c1)) THEN t0.c0 WHEN (t0.c2 IN ('-1256803725')) THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END COLLATE BINARY) ORDER BY (((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE BINARY COLLATE NOCASE DESC, CASE WHEN '185068855' THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((0xffffffffb4ec6efe)<(t0.c1)) THEN t0.c0 WHEN (t0.c2 IN ('-1256803725')) THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY (((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE BINARY COLLATE NOCASE DESC, CASE WHEN '185068855' THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((0Xffffffffb4ec6efe)<(t0.c1)) THEN t0.c0 WHEN (t0.c2 IN ('-1256803725')) THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END COLLATE BINARY) ORDER BY (((t0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) COLLATE BINARY COLLATE NOCASE DESC, CASE WHEN '185068855' THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((0xffffffffb4ec6efe)<(t0.c1)) THEN t0.c0 WHEN (t0.c2 IN ('-1256803725')) THEN t0.c2 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c2) ORDER BY CASE WHEN 0.41750165465363254 THEN (((rt0.c2))>((t0.c0))) WHEN LIKELIHOOD(rt0.c2, 0.004000622051490765) THEN (NOT (rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN ((x'')GLOB(t0.c2)) ELSE (((rt0.c2))<=((vt0.c0))) END, IFNULL(DISTINCT CAST(rt0.c1 AS REAL), t0.c1) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN 0.41750165465363254 THEN (((rt0.c2))>((t0.c0))) WHEN LIKELIHOOD(rt0.c2, 0.004000622051490765) THEN (NOT (rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN ((x'')GLOB(t0.c2)) ELSE (((rt0.c2))<=((vt0.c0))) END, IFNULL(DISTINCT CAST(rt0.c1 AS REAL), t0.c1) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c2) ORDER BY CASE WHEN 0.41750165465363254 THEN (((rt0.c2))>((t0.c0))) WHEN LIKELIHOOD(rt0.c2, 0.004000622051490765) THEN (NOT (rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN ((x'')GLOB(t0.c2)) ELSE (((rt0.c2))<=((vt0.c0))) END, IFNULL(DISTINCT CAST(rt0.c1 AS REAL), t0.c1) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN 0.41750165465363254 THEN (((rt0.c2))>((t0.c0))) WHEN LIKELIHOOD(rt0.c2, 0.004000622051490765) THEN (NOT (rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN ((x'')GLOB(t0.c2)) ELSE (((rt0.c2))<=((vt0.c0))) END, IFNULL(DISTINCT CAST(rt0.c1 AS REAL), t0.c1) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (t0.c2) ORDER BY CASE WHEN 0.41750165465363254 THEN (((rt0.c2))>((t0.c0))) WHEN LIKELIHOOD(rt0.c2, 0.004000622051490765) THEN (NOT (rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN ((x'')GLOB(t0.c2)) ELSE (((rt0.c2))<=((vt0.c0))) END, IFNULL(DISTINCT CAST(rt0.c1 AS REAL), t0.c1) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULLIF((~ (t0.c1)), ((t0.c1)OR(t0.c0)))) ORDER BY t0.c1  NULLS LAST, ((((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR((NOT (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (t0.c1)), ((t0.c1)OR(t0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY t0.c1  NULLS LAST, ((((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR((NOT (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULLIF((~ (t0.c1)), ((t0.c1)OR(t0.c0)))) ORDER BY t0.c1  NULLS LAST, ((((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR((NOT (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((~ (t0.c1)), ((t0.c1)OR(t0.c0)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY t0.c1  NULLS LAST, ((((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR((NOT (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, rt0 WHERE (NULLIF((~ (t0.c1)), ((t0.c1)OR(t0.c0)))) ORDER BY t0.c1  NULLS LAST, ((((((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 END)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)))))AND(((rt0.c2)OR(rt0.c2)))))AND(((rt0.c2) NOT NULL))))OR((NOT (t0.c2)))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1, t0.c0, t0.c0))==((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c0))) THEN (rt0.c1 IN (vt0.c0, rt0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1, t0.c2, t0.c1, t0.c0, t0.c0))==((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c0))) THEN (rt0.c1 IN (vt0.c0, rt0.c0)) ELSE x'' END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1, t0.c0, t0.c0))==((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c0))) THEN (rt0.c1 IN (vt0.c0, rt0.c0)) ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1, t0.c2, t0.c1, t0.c0, t0.c0))==((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c0))) THEN (rt0.c1 IN (vt0.c0, rt0.c0)) ELSE x'' END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (CASE WHEN (((t0.c1, t0.c2, t0.c1, t0.c0, t0.c0))==((rt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c0))) THEN (rt0.c1 IN (vt0.c0, rt0.c0)) ELSE x'' END);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) ISNULL)) ORDER BY ((ABS(DISTINCT rt0.c1))OR(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS LAST, (((UNLIKELY(rt0.c1), ((((vt0.c0)OR(rt0.c0)))OR(0X71944a7a)), (('') NOTNULL), ((rt0.c0)<=(t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))<=(((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), ((rt0.c2)>>(t0.c1)), (t0.c2 IN ()), ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0)<<(t0.c0))))), t0.c2;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((ABS(DISTINCT rt0.c1))OR(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS LAST, (((UNLIKELY(rt0.c1), ((((vt0.c0)OR(rt0.c0)))OR(0X71944a7a)), (('') NOTNULL), ((rt0.c0)<=(t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))<=(((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), ((rt0.c2)>>(t0.c1)), (t0.c2 IN ()), ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0)<<(t0.c0))))), t0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) ISNULL)) ORDER BY ((ABS(DISTINCT rt0.c1))OR(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS LAST, (((UNLIKELY(rt0.c1), ((((vt0.c0)OR(rt0.c0)))OR(0X71944a7a)), (('') NOTNULL), ((rt0.c0)<=(t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))<=(((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), ((rt0.c2)>>(t0.c1)), (t0.c2 IN ()), ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0)<<(t0.c0))))), t0.c2;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((ABS(DISTINCT rt0.c1))OR(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS LAST, (((UNLIKELY(rt0.c1), ((((vt0.c0)OR(rt0.c0)))OR(0X71944a7a)), (('') NOTNULL), ((rt0.c0)<=(t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))<=(((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), ((rt0.c2)>>(t0.c1)), (t0.c2 IN ()), ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0)<<(t0.c0))))), t0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((NULL) ISNULL)) ORDER BY ((ABS(DISTINCT rt0.c1))OR(UNLIKELY(DISTINCT rt0.c2))) ASC  NULLS LAST, (((UNLIKELY(rt0.c1), ((((vt0.c0)OR(rt0.c0)))OR(0X71944a7a)), (('') NOTNULL), ((rt0.c0)<=(t0.c0)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))<=(((((rt0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c1))), ((rt0.c2)>>(t0.c1)), (t0.c2 IN ()), ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)), ((rt0.c0)<<(t0.c0))))), t0.c2;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((2147264332)) BETWEEN ((((rt0.c0) ISNULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) ORDER BY TYPEOF(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((2147264332)) BETWEEN ((((rt0.c0) ISNULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TYPEOF(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2))) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((2147264332)) BETWEEN ((((rt0.c0) ISNULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) ORDER BY TYPEOF(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((2147264332)) BETWEEN ((((rt0.c0) ISNULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY TYPEOF(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2))) ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((((2147264332)) BETWEEN ((((rt0.c0) ISNULL))) AND (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) ORDER BY TYPEOF(((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2))) ASC;
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2)AND(t0.c1)))OR(rt0.c2)))OR(0.5304629397678726)))OR(t0.c1)))-(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(t0.c1)))OR(rt0.c2)))OR(0.5304629397678726)))OR(t0.c1)))-(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2)AND(t0.c1)))OR(rt0.c2)))OR(0.5304629397678726)))OR(t0.c1)))-(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(t0.c1)))OR(rt0.c2)))OR(0.5304629397678726)))OR(t0.c1)))-(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((((((((t0.c2)AND(t0.c1)))OR(rt0.c2)))OR(0.5304629397678726)))OR(t0.c1)))-(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))LIKE(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))LIKE(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY DESC);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))LIKE(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))LIKE(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c2 IN ()) COLLATE BINARY DESC);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))LIKE(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))) ORDER BY (rt0.c2 IN ()) COLLATE BINARY DESC;
SELECT * FROM t0, vt0 WHERE (0.9584798357266223) ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (t0.c0 COLLATE BINARY)) ASC, (((((t0.c2))==((t0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((0.9584798357266223) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (t0.c0 COLLATE BINARY)) ASC, (((((t0.c2))==((t0.c1)))) IS FALSE) DESC);
SELECT * FROM t0, vt0 WHERE (0.9584798357266223) ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (t0.c0 COLLATE BINARY)) ASC, (((((t0.c2))==((t0.c1)))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((0.9584798357266223) IS TRUE)  as count FROM t0, vt0 ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (t0.c0 COLLATE BINARY)) ASC, (((((t0.c2))==((t0.c1)))) IS FALSE) DESC);
SELECT * FROM t0, vt0 WHERE (0.9584798357266223) ORDER BY ((x'') NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (t0.c0 COLLATE BINARY)) ASC, (((((t0.c2))==((t0.c1)))) IS FALSE) DESC;
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UNICODE(((t0.c2)=(rt0.c2))) WHERE (((((((rt0.c1)AND(t0.c1)))OR(x'')))LIKE(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c1)))OR(x'')))LIKE(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON UNICODE(((t0.c2)=(rt0.c2))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UNICODE(((t0.c2)=(rt0.c2))) WHERE (((((((rt0.c1)AND(t0.c1)))OR(x'')))LIKE(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(t0.c1)))OR(x'')))LIKE(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON UNICODE(((t0.c2)=(rt0.c2))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN rt0 ON UNICODE(((t0.c2)=(rt0.c2))) WHERE (((((((rt0.c1)AND(t0.c1)))OR(x'')))LIKE(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN -934501545 THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN (((x'8c87'))>((rt0.c0))) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12577599654606064)) THEN CAST(rt0.c1 AS REAL) END ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -934501545 THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN (((x'8c87'))>((rt0.c0))) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12577599654606064)) THEN CAST(rt0.c1 AS REAL) END ASC, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN -934501545 THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN (((x'8c87'))>((rt0.c0))) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12577599654606064)) THEN CAST(rt0.c1 AS REAL) END ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN -934501545 THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN (((x'8c87'))>((rt0.c0))) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12577599654606064)) THEN CAST(rt0.c1 AS REAL) END ASC, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN -934501545 THEN CAST(rt0.c1 AS TEXT) ELSE ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (NOT (rt0.c2)) THEN (((x'8c87'))>((rt0.c0))) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c1)AND(rt0.c2)) WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (0.12577599654606064)) THEN CAST(rt0.c1 AS REAL) END ASC, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(30624942 AS BLOB))<(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((t0.c2 IN ()) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(30624942 AS BLOB))<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST((t0.c2 IN ()) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(30624942 AS BLOB))<(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((t0.c2 IN ()) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(30624942 AS BLOB))<(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY CAST((t0.c2 IN ()) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (((CAST(30624942 AS BLOB))<(vt0.c0 COLLATE RTRIM))) ORDER BY CAST((t0.c2 IN ()) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c1))) BETWEEN (vt0.c0) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c1))) BETWEEN (vt0.c0) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c1))) BETWEEN (vt0.c0) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c1))) BETWEEN (vt0.c0) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((- (t0.c1))) BETWEEN (vt0.c0) AND ((NULL IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((NULL)<=(NULL)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((vt0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(NULL)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((vt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((NULL)<=(NULL)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((vt0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)<=(NULL)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((vt0.c0)IS NOT(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((NULL)<=(NULL)))AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((vt0.c0)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c2) NOTNULL))||(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOTNULL))||(((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c2) NOTNULL))||(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOTNULL))||(((rt0.c0) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c2) NOTNULL))||(((rt0.c0) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE t0.c2  WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE t0.c2  WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE t0.c2  WHEN t0.c2 COLLATE RTRIM THEN ((rt0.c2) NOTNULL) ELSE rt0.c0 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (x'') AND (vt0.c0))) IS FALSE)) ORDER BY ((x'')<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (x'') AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'')<(CAST(rt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (x'') AND (vt0.c0))) IS FALSE)) ORDER BY ((x'')<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (x'') AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'')<(CAST(rt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (x'') AND (vt0.c0))) IS FALSE)) ORDER BY ((x'')<(CAST(rt0.c0 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY 1.938245835E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 1.938245835E9  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY 1.938245835E9  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 1.938245835E9  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY 1.938245835E9  NULLS LAST;
SELECT * FROM t0 CROSS JOIN rt0 ON (((rt0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c1) ISNULL), CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND ((json_array(rt0.c0, '1530482677', rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)), ((((((((t0.c0)OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))AND(rt0.c1))))) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c0)) AS NUMERIC) WHERE (((((((rt0.c1) NOTNULL))OR(NULL)))AND((((t0.c2))>=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOTNULL))OR(NULL)))AND((((t0.c2))>=((t0.c1)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c1) ISNULL), CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND ((json_array(rt0.c0, '1530482677', rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)), ((((((((t0.c0)OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))AND(rt0.c1))))) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c0)) AS NUMERIC));
SELECT * FROM t0 CROSS JOIN rt0 ON (((rt0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c1) ISNULL), CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND ((json_array(rt0.c0, '1530482677', rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)), ((((((((t0.c0)OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))AND(rt0.c1))))) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c0)) AS NUMERIC) WHERE (((((((rt0.c1) NOTNULL))OR(NULL)))AND((((t0.c2))>=((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOTNULL))OR(NULL)))AND((((t0.c2))>=((t0.c1)))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c1) ISNULL), CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND ((json_array(rt0.c0, '1530482677', rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)), ((((((((t0.c0)OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))AND(rt0.c1))))) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c0)) AS NUMERIC));
SELECT * FROM t0 CROSS JOIN rt0 ON (((rt0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((((t0.c1) ISNULL), CAST(t0.c0 AS REAL), CAST(vt0.c0 AS BLOB))) AND ((json_array(rt0.c0, '1530482677', rt0.c0, rt0.c2), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c2)), ((((((((t0.c0)OR(t0.c1)))OR(rt0.c0)))AND(t0.c1)))AND(rt0.c1))))) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)&(t0.c0)) AS NUMERIC) WHERE (((((((rt0.c1) NOTNULL))OR(NULL)))AND((((t0.c2))>=((t0.c1))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE ((+ (((rt0.c1) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (1.300378773E9)));
SELECT SUM(count) FROM (SELECT ALL (((+ (1.300378773E9))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (1.300378773E9)));
SELECT SUM(count) FROM (SELECT ALL (((+ (1.300378773E9))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((+ (1.300378773E9)));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(t0.c0)))|(UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt0.c0)))OR(t0.c0)))|(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(t0.c0)))|(UPPER(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(vt0.c0)))OR(t0.c0)))|(UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((((((rt0.c2)OR(vt0.c0)))OR(t0.c0)))|(UPPER(rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN '187869092' END)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS TRUE)  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN '187869092' END)))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) IS TRUE)  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN '187869092' END)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS TRUE)  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN '187869092' END)))AND(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) IS TRUE)  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(CASE WHEN vt0.c0 THEN '187869092' END)))AND(((vt0.c0)/(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) IS TRUE)  NULLS LAST, CAST((vt0.c0 IN (vt0.c0)) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)%(rt0.c0))))) ORDER BY (- (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)%(rt0.c0))))) ORDER BY (- (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c0 IN ()))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)%(rt0.c0))))) ORDER BY (- (rt0.c2)) COLLATE NOCASE;
SELECT * FROM rt0, vt0, t0 WHERE (CASE (((((((('0.07793363748662441')OR(NULL)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((((((('0.07793363748662441')OR(NULL)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CASE (((((((('0.07793363748662441')OR(NULL)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((((((('0.07793363748662441')OR(NULL)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (CASE (((((((('0.07793363748662441')OR(NULL)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c1))  WHEN (t0.c1 IN ()) THEN UPPER(DISTINCT vt0.c0) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<<('698488825'))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(vt0.c0)))<<('698488825'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<<('698488825'))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(vt0.c0)))<<('698488825'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (((((rt0.c0)AND(vt0.c0)))<<('698488825'))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c2))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT NULL))*(LOWER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL))*(LOWER(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT NULL))*(LOWER(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL))*(LOWER(t0.c2)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c2) NOT NULL))*(LOWER(t0.c2))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (((('0.3605256379600008') IS TRUE))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((('0.3605256379600008') IS TRUE))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (((('0.3605256379600008') IS TRUE))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((('0.3605256379600008') IS TRUE))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) ORDER BY (((('0.3605256379600008') IS TRUE))<=(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))<>(0.339048301832684))) ORDER BY (((((rt0.c0) BETWEEN ('-678440140') AND (rt0.c2))))<>((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))!=(0.339048301832684))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0) BETWEEN ('-678440140') AND (rt0.c2))))!=((((vt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))<>(0.339048301832684))) ORDER BY (((((rt0.c0) BETWEEN ('-678440140') AND (rt0.c2))))<>((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))!=(0.339048301832684))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0) BETWEEN ('-678440140') AND (rt0.c2))))!=((((vt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))<>(0.339048301832684))) ORDER BY (((((rt0.c0) BETWEEN ('-678440140') AND (rt0.c2))))<>((((vt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS TEXT))OR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c1 END)))AND((rt0.c1 IN ()))) WHERE (((((((((((vt0.c0)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))||(((rt0.c2)IS(rt0.c2))))) ORDER BY highlight(UNLIKELY(DISTINCT rt0.c0), t0.c1 COLLATE RTRIM, 0.2015800113086339, CASE WHEN t0.c0 THEN rt0.c1 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))||(((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS TEXT))OR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c1 END)))AND((rt0.c1 IN ()))) ORDER BY highlight(UNLIKELY(DISTINCT rt0.c0), t0.c1 COLLATE RTRIM, 0.2015800113086339, CASE WHEN t0.c0 THEN rt0.c1 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS TEXT))OR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c1 END)))AND((rt0.c1 IN ()))) WHERE (((((((((((vt0.c0)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))||(((rt0.c2)IS(rt0.c2))))) ORDER BY highlight(UNLIKELY(DISTINCT rt0.c0), t0.c1 COLLATE RTRIM, 0.2015800113086339, CASE WHEN t0.c0 THEN rt0.c1 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))||(((rt0.c2)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS TEXT))OR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c1 END)))AND((rt0.c1 IN ()))) ORDER BY highlight(UNLIKELY(DISTINCT rt0.c0), t0.c1 COLLATE RTRIM, 0.2015800113086339, CASE WHEN t0.c0 THEN rt0.c1 END) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((CAST(rt0.c1 AS TEXT))OR(CASE t0.c0  WHEN rt0.c1 THEN t0.c0 ELSE t0.c1 END)))AND((rt0.c1 IN ()))) WHERE (((((((((((vt0.c0)AND(t0.c0)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0)))||(((rt0.c2)IS(rt0.c2))))) ORDER BY highlight(UNLIKELY(DISTINCT rt0.c0), t0.c1 COLLATE RTRIM, 0.2015800113086339, CASE WHEN t0.c0 THEN rt0.c1 END) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0)>>(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0)>>(t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0)>>(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0)>>(t0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((rt0.c2)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0)>>(t0.c0))))));
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(t0.c1, t0.c2) THEN ((t0.c1) NOT NULL) WHEN CASE t0.c0  WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c1) ISNULL) WHEN IFNULL(t0.c1, t0.c1) THEN (((t0.c0, 'Pn cZ', '.l', t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2, 0x7dbf363, t0.c2)) AND ((t0.c0, t0.c0, t0.c1, t0.c0, '-112669370'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(t0.c1, t0.c2) THEN ((t0.c1) NOT NULL) WHEN CASE t0.c0  WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c1) ISNULL) WHEN IFNULL(t0.c1, t0.c1) THEN (((t0.c0, 'Pn cZ', '.l', t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2, 0x7dbf363, t0.c2)) AND ((t0.c0, t0.c0, t0.c1, t0.c0, '-112669370'))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(t0.c1, t0.c2) THEN ((t0.c1) NOT NULL) WHEN CASE t0.c0  WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c1) ISNULL) WHEN IFNULL(t0.c1, t0.c1) THEN (((t0.c0, 'Pn cZ', '.l', t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2, 0x7dbf363, t0.c2)) AND ((t0.c0, t0.c0, t0.c1, t0.c0, '-112669370'))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(t0.c1, t0.c2) THEN ((t0.c1) NOT NULL) WHEN CASE t0.c0  WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c1) ISNULL) WHEN IFNULL(t0.c1, t0.c1) THEN (((t0.c0, 'Pn cZ', '.l', t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2, 0x7dbf363, t0.c2)) AND ((t0.c0, t0.c0, t0.c1, t0.c0, '-112669370'))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN COALESCE(t0.c1, t0.c2) THEN ((t0.c1) NOT NULL) WHEN CASE t0.c0  WHEN NULL THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN ((t0.c1) ISNULL) WHEN IFNULL(t0.c1, t0.c1) THEN (((t0.c0, 'Pn cZ', '.l', t0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2, 0x7dbf363, t0.c2)) AND ((t0.c0, t0.c0, t0.c1, t0.c0, '-112669370'))) END);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELY(HEX(t0.c1)));
SELECT SUM(count) FROM (SELECT ((LIKELY(HEX(t0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELY(HEX(t0.c1)));
SELECT SUM(count) FROM (SELECT ((LIKELY(HEX(t0.c1))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (LIKELY(HEX(t0.c1)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ('623209736');
SELECT SUM(count) FROM (SELECT ALL (('623209736') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ('623209736');
SELECT SUM(count) FROM (SELECT ALL (('623209736') IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ('623209736');
SELECT * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))|(UPPER(DISTINCT vt0.c0)))) ORDER BY ((((((((CAST(x'' AS REAL))AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)/(vt0.c0)))))OR(rt0.c1)))AND((rt0.c2 IN (x'', 686061593)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))|(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CAST(x'' AS REAL))AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)/(vt0.c0)))))OR(rt0.c1)))AND((rt0.c2 IN (x'', 686061593)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))|(UPPER(DISTINCT vt0.c0)))) ORDER BY ((((((((CAST(x'' AS REAL))AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)/(vt0.c0)))))OR(rt0.c1)))AND((rt0.c2 IN (x'', 686061593)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))|(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CAST(x'' AS REAL))AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)/(vt0.c0)))))OR(rt0.c1)))AND((rt0.c2 IN (x'', 686061593)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))|(UPPER(DISTINCT vt0.c0)))) ORDER BY ((((((((CAST(x'' AS REAL))AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)/(vt0.c0)))))OR(rt0.c1)))AND((rt0.c2 IN (x'', 686061593)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 1.938245835E9)) AND ((vt0.c0, vt0.c0, '0.8846297637891409', vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 1.938245835E9)) AND ((vt0.c0, vt0.c0, '0.8846297637891409', vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 1.938245835E9)) AND ((vt0.c0, vt0.c0, '0.8846297637891409', vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 1.938245835E9)) AND ((vt0.c0, vt0.c0, '0.8846297637891409', vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, x'', vt0.c0, 1.938245835E9)) AND ((vt0.c0, vt0.c0, '0.8846297637891409', vt0.c0, vt0.c0))))>(((vt0.c0) IS TRUE))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (CAST(t0.c1 AS REAL)) ORDER BY ((t0.c0)|(t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((t0.c0)|(t0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (CAST(t0.c1 AS REAL)) ORDER BY ((t0.c0)|(t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS REAL)) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((t0.c0)|(t0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (CAST(t0.c1 AS REAL)) ORDER BY ((t0.c0)|(t0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((t0.c0) IS FALSE) COLLATE RTRIM);
SELECT * FROM rt0, t0, vt0 WHERE ('-1286265455') ORDER BY (((((('D㗖')OR(t0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)||(rt0.c2))) AND ((((0.138471123435859, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c1, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (('-1286265455') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((('D㗖')OR(t0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)||(rt0.c2))) AND ((((0.138471123435859, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c1, t0.c0))))));
SELECT * FROM rt0, t0, vt0 WHERE ('-1286265455') ORDER BY (((((('D㗖')OR(t0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)||(rt0.c2))) AND ((((0.138471123435859, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c1, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (('-1286265455') IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((('D㗖')OR(t0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)||(rt0.c2))) AND ((((0.138471123435859, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c1, t0.c0))))));
SELECT * FROM rt0, t0, vt0 WHERE ('-1286265455') ORDER BY (((((('D㗖')OR(t0.c1)))AND(rt0.c0))) NOT BETWEEN (((rt0.c1)||(rt0.c2))) AND ((((0.138471123435859, rt0.c1, rt0.c0)) BETWEEN ((t0.c0, t0.c1, t0.c1)) AND ((rt0.c1, rt0.c1, t0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((0.5603840699073966, t0.c1, t0.c0)) AND ((vt0.c0, t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER)) BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((0.5603840699073966, t0.c1, t0.c0)) AND ((vt0.c0, t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((0.5603840699073966, t0.c1, t0.c0)) AND ((vt0.c0, t0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS INTEGER)) BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((0.5603840699073966, t0.c1, t0.c0)) AND ((vt0.c0, t0.c2, t0.c2)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((CAST(t0.c1 AS INTEGER)) BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((0.5603840699073966, t0.c1, t0.c0)) AND ((vt0.c0, t0.c2, t0.c2))))));
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))*(((vt0.c0)%(x'3b2bcea1'))))) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(-608561694))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN json_extract(vt0.c0, vt0.c0) THEN x'' ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST, (NOT (',i')) ASC, CAST(((vt0.c0)<=(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c0))*(((vt0.c0)%(x'3b2bcea1'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(-608561694))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN json_extract(vt0.c0, vt0.c0) THEN x'' ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST, (NOT (',i')) ASC, CAST(((vt0.c0)<=(vt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))*(((vt0.c0)%(x'3b2bcea1'))))) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(-608561694))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN json_extract(vt0.c0, vt0.c0) THEN x'' ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST, (NOT (',i')) ASC, CAST(((vt0.c0)<=(vt0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((GLOB(vt0.c0, vt0.c0))*(((vt0.c0)%(x'3b2bcea1'))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(-608561694))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN json_extract(vt0.c0, vt0.c0) THEN x'' ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST, (NOT (',i')) ASC, CAST(((vt0.c0)<=(vt0.c0)) AS BLOB) DESC);
SELECT ALL * FROM vt0 WHERE (((GLOB(vt0.c0, vt0.c0))*(((vt0.c0)%(x'3b2bcea1'))))) ORDER BY CASE ((((vt0.c0)OR(vt0.c0)))AND(-608561694))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN ((vt0.c0) ISNULL) WHEN json_extract(vt0.c0, vt0.c0) THEN x'' ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST, (NOT (',i')) ASC, CAST(((vt0.c0)<=(vt0.c0)) AS BLOB) DESC;
SELECT ALL * FROM t0 INNER JOIN rt0 ON '' WHERE ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c2) IS FALSE))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2, x''))) AND ((0xffffffffb8636513))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '' ORDER BY (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2, x''))) AND ((0Xffffffffb8636513))) ASC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON '' WHERE ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c2) IS FALSE))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2, x''))) AND ((0xffffffffb8636513))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON '' ORDER BY (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2, x''))) AND ((0Xffffffffb8636513))) ASC);
SELECT ALL * FROM t0 INNER JOIN rt0 ON '' WHERE ((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((((rt0.c2) IS FALSE))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((TRIM(DISTINCT rt0.c2, x''))) AND ((0xffffffffb8636513))) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ROUND((((x'33d5'))<=((vt0.c0))), CASE vt0.c0  WHEN rt0.c2 THEN 0.04702368861472461 ELSE t0.c1 END) INNER JOIN t0 ON (- (vt0.c0 COLLATE NOCASE)) WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ROUND((((x'33d5'))<=((vt0.c0))), CASE vt0.c0  WHEN rt0.c2 THEN 0.04702368861472461 ELSE t0.c1 END) INNER JOIN t0 ON (- (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ROUND((((x'33d5'))<=((vt0.c0))), CASE vt0.c0  WHEN rt0.c2 THEN 0.04702368861472461 ELSE t0.c1 END) INNER JOIN t0 ON (- (vt0.c0 COLLATE NOCASE)) WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ROUND((((x'33d5'))<=((vt0.c0))), CASE vt0.c0  WHEN rt0.c2 THEN 0.04702368861472461 ELSE t0.c1 END) INNER JOIN t0 ON (- (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ROUND((((x'33d5'))<=((vt0.c0))), CASE vt0.c0  WHEN rt0.c2 THEN 0.04702368861472461 ELSE t0.c1 END) INNER JOIN t0 ON (- (vt0.c0 COLLATE NOCASE)) WHERE ((((((~ (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((t0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC, (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(load_extension(vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC, (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(load_extension(vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC, (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(load_extension(vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC, (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(load_extension(vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC, (((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(load_extension(vt0.c0))))AND((vt0.c0 IN (vt0.c0)))))OR(((vt0.c0)%(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)+(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)+(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)+(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)+(rt0.c0)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((rt0.c2)+(rt0.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_patch(((rt0.c1)GLOB(rt0.c2)), ((rt0.c0) NOTNULL))) ORDER BY TRIM(CASE WHEN ']벗{' THEN rt0.c2 END, rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt0.c1)GLOB(rt0.c2)), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY TRIM(CASE WHEN ']벗{' THEN rt0.c2 END, rt0.c1) ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_patch(((rt0.c1)GLOB(rt0.c2)), ((rt0.c0) NOTNULL))) ORDER BY TRIM(CASE WHEN ']벗{' THEN rt0.c2 END, rt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((rt0.c1)GLOB(rt0.c2)), ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY TRIM(CASE WHEN ']벗{' THEN rt0.c2 END, rt0.c1) ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (json_patch(((rt0.c1)GLOB(rt0.c2)), ((rt0.c0) NOTNULL))) ORDER BY TRIM(CASE WHEN ']벗{' THEN rt0.c2 END, rt0.c1) ASC;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((0.27355162819444956) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((t0.c0 COLLATE RTRIM)OR(((t0.c2)<>(rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) WHERE (((((((t0.c1) IS FALSE))AND((t0.c1 IN (rt0.c0)))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((CAST('-1668020086' AS TEXT))<>(((t0.c2)AND(t0.c0))))  NULLS FIRST, ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) IS FALSE))AND((t0.c1 IN (rt0.c0)))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((0.27355162819444956) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((t0.c0 COLLATE RTRIM)OR(((t0.c2)<>(rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) ORDER BY ((CAST('-1668020086' AS TEXT))<>(((t0.c2)AND(t0.c0))))  NULLS FIRST, ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((0.27355162819444956) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((t0.c0 COLLATE RTRIM)OR(((t0.c2)<>(rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) WHERE (((((((t0.c1) IS FALSE))AND((t0.c1 IN (rt0.c0)))))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((CAST('-1668020086' AS TEXT))<>(((t0.c2)AND(t0.c0))))  NULLS FIRST, ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1) IS FALSE))AND((t0.c1 IN (rt0.c0)))))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((rt0.c1)OR(((0.27355162819444956) NOT NULL))) RIGHT OUTER JOIN rt0 ON ((((((((t0.c0 COLLATE RTRIM)OR(((t0.c2)<>(rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((((t0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) ORDER BY ((CAST('-1668020086' AS TEXT))<>(((t0.c2)AND(t0.c0))))  NULLS FIRST, ((t0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(']a3YYZN<')))OR(vt0.c0)))OR(0x5ef94db0)), 1541695033))==(((((((((((((('')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)), x'', ((vt0.c0) IS TRUE), (vt0.c0 IN ()), (+ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(']a3YYZN<')))OR(vt0.c0)))OR(0x5ef94db0)), 1541695033))==(((((((((((((('')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)), x'', ((vt0.c0) IS TRUE), (vt0.c0 IN ()), (+ (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(']a3YYZN<')))OR(vt0.c0)))OR(0x5ef94db0)), 1541695033))==(((((((((((((('')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)), x'', ((vt0.c0) IS TRUE), (vt0.c0 IN ()), (+ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(']a3YYZN<')))OR(vt0.c0)))OR(0x5ef94db0)), 1541695033))==(((((((((((((('')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)), x'', ((vt0.c0) IS TRUE), (vt0.c0 IN ()), (+ (vt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt0.c0)))AND(']a3YYZN<')))OR(vt0.c0)))OR(0x5ef94db0)), 1541695033))==(((((((((((((('')AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(x'')))OR(vt0.c0)), x'', ((vt0.c0) IS TRUE), (vt0.c0 IN ()), (+ (vt0.c0))))) ASC;
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c1)))OR(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(rt0.c1)))OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c1)))OR(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(rt0.c1)))OR(t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(rt0.c1)))OR(t0.c0))) NOT NULL));
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))==(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE x'6348'  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(x'')))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))==(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE x'6348'  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(x'')))OR(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))==(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE x'6348'  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(x'')))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))==(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE x'6348'  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(x'')))OR(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))==(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE x'6348'  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c0)AND(x'')))OR(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (t0.c2) AND ('1192257337')) IN (json_type(t0.c2), ((0.3813585009900714) NOT NULL)))) ORDER BY ((((rt0.c2)>=(t0.c0)))>=(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (t0.c2) AND ('1192257337')) IN (json_type(t0.c2), ((0.3813585009900714) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)>=(t0.c0)))>=(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (t0.c2) AND ('1192257337')) IN (json_type(t0.c2), ((0.3813585009900714) NOT NULL)))) ORDER BY ((((rt0.c2)>=(t0.c0)))>=(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (t0.c2) AND ('1192257337')) IN (json_type(t0.c2), ((0.3813585009900714) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c2)>=(t0.c0)))>=(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (t0.c2) AND ('1192257337')) IN (json_type(t0.c2), ((0.3813585009900714) NOT NULL)))) ORDER BY ((((rt0.c2)>=(t0.c0)))>=(CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (rt0.c0 COLLATE BINARY IN ()) WHERE (NULL);
SELECT * FROM t0, vt0 WHERE (CAST('Y#NsR~m-' AS BLOB)) ORDER BY TYPEOF(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('Y#NsR~m-' AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST('Y#NsR~m-' AS BLOB)) ORDER BY TYPEOF(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('Y#NsR~m-' AS BLOB)) IS TRUE)  as count FROM t0, vt0 ORDER BY TYPEOF(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt0 WHERE (CAST('Y#NsR~m-' AS BLOB)) ORDER BY TYPEOF(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('');
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT UNLIKELY(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT UNLIKELY(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (TRIM(DISTINCT t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (TRIM(DISTINCT t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (TRIM(DISTINCT t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (TRIM(DISTINCT t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (TRIM(DISTINCT t0.c1)) AND (((((t0.c0)AND(t0.c1)))OR(t0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x'')))) NOTNULL)) ORDER BY ((((rt0.c1, '-112948222', rt0.c0))<=((rt0.c1, NULL, rt0.c1))) IN (SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x'')))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1, '-112948222', rt0.c0))<=((rt0.c1, NULL, rt0.c1))) IN (SQLITE_VERSION()))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x'')))) NOTNULL)) ORDER BY ((((rt0.c1, '-112948222', rt0.c0))<=((rt0.c1, NULL, rt0.c1))) IN (SQLITE_VERSION()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x'')))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1, '-112948222', rt0.c0))<=((rt0.c1, NULL, rt0.c1))) IN (SQLITE_VERSION()))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x'')))) NOTNULL)) ORDER BY ((((rt0.c1, '-112948222', rt0.c0))<=((rt0.c1, NULL, rt0.c1))) IN (SQLITE_VERSION()))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (highlight(((t0.c2)LIKE(rt0.c0)), ((vt0.c0)%(rt0.c2)), (NOT (t0.c0)), rt0.c2 COLLATE BINARY)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c2)LIKE(rt0.c0)), ((vt0.c0)%(rt0.c2)), (NOT (t0.c0)), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (highlight(((t0.c2)LIKE(rt0.c0)), ((vt0.c0)%(rt0.c2)), (NOT (t0.c0)), rt0.c2 COLLATE BINARY)) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((t0.c2)LIKE(rt0.c0)), ((vt0.c0)%(rt0.c2)), (NOT (t0.c0)), rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (highlight(((t0.c2)LIKE(rt0.c0)), ((vt0.c0)%(rt0.c2)), (NOT (t0.c0)), rt0.c2 COLLATE BINARY)) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ((((rt0.c0)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND((((rt0.c1))<((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND((((rt0.c1))<((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ((((rt0.c0)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND((((rt0.c1))<((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND((((rt0.c1))<((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c1)))OR(rt0.c1))) NOT NULL)) ORDER BY ((((rt0.c0)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND((((rt0.c1))<((vt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (- (NULL COLLATE RTRIM)) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (- (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (- (NULL COLLATE RTRIM)) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (- (NULL COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (- (NULL COLLATE RTRIM)) WHERE (t0.c2);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE ((((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) IN ())) ORDER BY JULIANDAY(rt0.c2, UPPER(rt0.c1), (t0.c1 IN (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c0 ORDER BY JULIANDAY(rt0.c2, UPPER(rt0.c1), (t0.c1 IN (t0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE ((((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) IN ())) ORDER BY JULIANDAY(rt0.c2, UPPER(rt0.c1), (t0.c1 IN (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c0 ORDER BY JULIANDAY(rt0.c2, UPPER(rt0.c1), (t0.c1 IN (t0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c0 WHERE ((((t0.c1) BETWEEN (rt0.c2) AND (t0.c2)) IN ())) ORDER BY JULIANDAY(rt0.c2, UPPER(rt0.c1), (t0.c1 IN (t0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS TEXT), vt0.c0 ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS TEXT), vt0.c0 ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS TEXT), vt0.c0 ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS TEXT), vt0.c0 ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)>=(vt0.c0)) AS BLOB)) ORDER BY CAST(vt0.c0 COLLATE BINARY AS TEXT), vt0.c0 ASC  NULLS LAST, CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((-461297014 COLLATE NOCASE)AND(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((-461297014 COLLATE NOCASE)AND(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((-461297014 COLLATE NOCASE)AND(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((-461297014 COLLATE NOCASE)AND(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((-461297014 COLLATE NOCASE)AND(((rt0.c1)AND(rt0.c2)))))OR(((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((((rt0.c2) IS TRUE)) BETWEEN (((((vt0.c0)OR(t0.c1)))AND(rt0.c2))) AND ((((t0.c0))<((rt0.c0))))) WHERE (NULL) ORDER BY (((- (t0.c1)))IS NOT(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((rt0.c2) IS TRUE)) BETWEEN (((((vt0.c0)OR(t0.c1)))AND(rt0.c2))) AND ((((t0.c0))<((rt0.c0))))) ORDER BY (((- (t0.c1)))IS NOT(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((((rt0.c2) IS TRUE)) BETWEEN (((((vt0.c0)OR(t0.c1)))AND(rt0.c2))) AND ((((t0.c0))<((rt0.c0))))) WHERE (NULL) ORDER BY (((- (t0.c1)))IS NOT(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON ((((rt0.c2) IS TRUE)) BETWEEN (((((vt0.c0)OR(t0.c1)))AND(rt0.c2))) AND ((((t0.c0))<((rt0.c0))))) ORDER BY (((- (t0.c1)))IS NOT(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, vt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((((rt0.c2) IS TRUE)) BETWEEN (((((vt0.c0)OR(t0.c1)))AND(rt0.c2))) AND ((((t0.c0))<((rt0.c0))))) WHERE (NULL) ORDER BY (((- (t0.c1)))IS NOT(t0.c0 COLLATE BINARY)) DESC  NULLS LAST, vt0.c0  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) ISNULL)))<((((((rt0.c2)OR(rt0.c1)))OR(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL)))<((((((rt0.c2)OR(rt0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) ISNULL)))<((((((rt0.c2)OR(rt0.c1)))OR(t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL)))<((((((rt0.c2)OR(rt0.c1)))OR(t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c2) ISNULL)))<((((((rt0.c2)OR(rt0.c1)))OR(t0.c1))))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE BINARY IN ()) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE BINARY IN ()) ASC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (rt0.c0 COLLATE BINARY IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))&(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS INTEGER))&(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER))&(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c1))=((t0.c1))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((t0.c0, (NOT (rt0.c1)), '801780642'))=(((((t0.c1))<((rt0.c0))), CAST(rt0.c0 AS REAL), NULL))) WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c1))=((t0.c1))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((t0.c0, (NOT (rt0.c1)), '801780642'))==(((((t0.c1))<((rt0.c0))), CAST(rt0.c0 AS REAL), NULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c1))=((t0.c1))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((t0.c0, (NOT (rt0.c1)), '801780642'))=(((((t0.c1))<((rt0.c0))), CAST(rt0.c0 AS REAL), NULL))) WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c1))=((t0.c1))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((t0.c0, (NOT (rt0.c1)), '801780642'))==(((((t0.c1))<((rt0.c0))), CAST(rt0.c0 AS REAL), NULL))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((t0.c1))=((t0.c1))) COLLATE NOCASE FULL OUTER JOIN rt0 ON (((t0.c0, (NOT (rt0.c1)), '801780642'))=(((((t0.c1))<((rt0.c0))), CAST(rt0.c0 AS REAL), NULL))) WHERE ((NOT (x'')));
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c2 IN (rt0.c2))))>=(((((t0.c2))>((t0.c2))))))) ORDER BY CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c2 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN (rt0.c2))))>=(((((t0.c2))>((t0.c2))))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c2 END COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c2 IN (rt0.c2))))>=(((((t0.c2))>((t0.c2))))))) ORDER BY CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c2 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN (rt0.c2))))>=(((((t0.c2))>((t0.c2))))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c2 END COLLATE RTRIM);
SELECT * FROM t0, vt0, rt0 WHERE (((((t0.c2 IN (rt0.c2))))>=(((((t0.c2))>((t0.c2))))))) ORDER BY CASE WHEN t0.c2 THEN vt0.c0 ELSE rt0.c2 END COLLATE RTRIM;
SELECT ALL * FROM t0 WHERE (0xffffffff83246ee7 COLLATE BINARY) ORDER BY ((((((t0.c1)OR(t0.c2)))AND(t0.c0)))*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffff83246ee7 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)OR(t0.c2)))AND(t0.c0)))*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0xffffffff83246ee7 COLLATE BINARY) ORDER BY ((((((t0.c1)OR(t0.c2)))AND(t0.c0)))*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffff83246ee7 COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)OR(t0.c2)))AND(t0.c0)))*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0xffffffff83246ee7 COLLATE BINARY) ORDER BY ((((((t0.c1)OR(t0.c2)))AND(t0.c0)))*(((((t0.c0)OR(t0.c2)))AND(t0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))AND(((t0.c2)GLOB(rt0.c0)))))AND(((((rt0.c1)AND(x'')))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c1)OR(rt0.c2)))AND(((t0.c2)GLOB(rt0.c0)))))AND(((((rt0.c1)AND(x'')))AND(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))AND(((t0.c2)GLOB(rt0.c0)))))AND(((((rt0.c1)AND(x'')))AND(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c1)OR(rt0.c2)))AND(((t0.c2)GLOB(rt0.c0)))))AND(((((rt0.c1)AND(x'')))AND(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ (((rt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))AND(((t0.c2)GLOB(rt0.c0)))))AND(((((rt0.c1)AND(x'')))AND(t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN (('-999173209') BETWEEN (rt0.c2) AND (t0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((+ (rt0.c1)))+(((t0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (('-999173209') BETWEEN (rt0.c2) AND (t0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (rt0.c1)))+(((t0.c1)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN (('-999173209') BETWEEN (rt0.c2) AND (t0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((+ (rt0.c1)))+(((t0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN (('-999173209') BETWEEN (rt0.c2) AND (t0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (rt0.c1)))+(((t0.c1)%(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN (('-999173209') BETWEEN (rt0.c2) AND (t0.c0)) ELSE CAST(rt0.c1 AS BLOB) END) ORDER BY (((+ (rt0.c1)))+(((t0.c1)%(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (t0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0) ISNULL))*((('-1329104355') NOT BETWEEN (0.08611036015637574) AND (rt0.c1))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c0), CAST(rt0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))*((('-1329104355') NOT BETWEEN (0.08611036015637574) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (t0.c0 COLLATE NOCASE)) ORDER BY LIKE(LOWER(DISTINCT rt0.c0), CAST(rt0.c0 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (t0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0) ISNULL))*((('-1329104355') NOT BETWEEN (0.08611036015637574) AND (rt0.c1))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c0), CAST(rt0.c0 AS BLOB))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))*((('-1329104355') NOT BETWEEN (0.08611036015637574) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (t0.c0 COLLATE NOCASE)) ORDER BY LIKE(LOWER(DISTINCT rt0.c0), CAST(rt0.c0 AS BLOB))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (t0.c0 COLLATE NOCASE)) WHERE (((((vt0.c0) ISNULL))*((('-1329104355') NOT BETWEEN (0.08611036015637574) AND (rt0.c1))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c0), CAST(rt0.c0 AS BLOB))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY 'C쉰';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY 'C쉰');
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY 'C쉰';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) END) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY 'C쉰');
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1)) END) ORDER BY 'C쉰';
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((+ (rt0.c1)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE ((((UNLIKELY(DISTINCT t0.c2)))<((CAST(t0.c2 AS INTEGER))))) ORDER BY (~ (((((t0.c2)AND(vt0.c0)))OR(t0.c1)))) ASC  NULLS FIRST, ((((((t0.c1)OR('1368945641')))AND(t0.c1)))<<((('1530482677') NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, '{gw1''\n0', t0.c1)) AND ((t0.c1, t0.c2, vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT t0.c2)))<((CAST(t0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((((t0.c2)AND(vt0.c0)))OR(t0.c1)))) ASC  NULLS FIRST, ((((((t0.c1)OR('1368945641')))AND(t0.c1)))<<((('1530482677') NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, '{gw1''\n0', t0.c1)) AND ((t0.c1, t0.c2, vt0.c0))) END DESC);
SELECT * FROM t0, vt0 WHERE ((((UNLIKELY(DISTINCT t0.c2)))<((CAST(t0.c2 AS INTEGER))))) ORDER BY (~ (((((t0.c2)AND(vt0.c0)))OR(t0.c1)))) ASC  NULLS FIRST, ((((((t0.c1)OR('1368945641')))AND(t0.c1)))<<((('1530482677') NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, '{gw1''\n0', t0.c1)) AND ((t0.c1, t0.c2, vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((UNLIKELY(DISTINCT t0.c2)))<((CAST(t0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((((t0.c2)AND(vt0.c0)))OR(t0.c1)))) ASC  NULLS FIRST, ((((((t0.c1)OR('1368945641')))AND(t0.c1)))<<((('1530482677') NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, '{gw1''\n0', t0.c1)) AND ((t0.c1, t0.c2, vt0.c0))) END DESC);
SELECT * FROM t0, vt0 WHERE ((((UNLIKELY(DISTINCT t0.c2)))<((CAST(t0.c2 AS INTEGER))))) ORDER BY (~ (((((t0.c2)AND(vt0.c0)))OR(t0.c1)))) ASC  NULLS FIRST, ((((((t0.c1)OR('1368945641')))AND(t0.c1)))<<((('1530482677') NOTNULL))) ASC  NULLS FIRST, CASE WHEN ((t0.c0) NOT NULL) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c1, '{gw1''\n0', t0.c1)) AND ((t0.c1, t0.c2, vt0.c0))) END DESC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS NUMERIC))));
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)IS(x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)IS(x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)IS(x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)IS(x'' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c0 COLLATE NOCASE)IS(x'' COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(((vt0.c0) NOT NULL))) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(((vt0.c0) NOT NULL))) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(((vt0.c0) NOT NULL))) IS TRUE)  as count FROM vt0 ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LENGTH(((vt0.c0) NOT NULL))) ORDER BY CAST(NULL AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) NOT BETWEEN (0.756257047042349) AND (t0.c0)))) AND ((((t0.c1)>>(t0.c2)), ((t0.c0) IS TRUE), (('')IS(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) NOT BETWEEN (0.756257047042349) AND (t0.c0)))) AND ((((t0.c1)>>(t0.c2)), ((t0.c0) IS TRUE), (('')IS(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) NOT BETWEEN (0.756257047042349) AND (t0.c0)))) AND ((((t0.c1)>>(t0.c2)), ((t0.c0) IS TRUE), (('')IS(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) NOT BETWEEN (0.756257047042349) AND (t0.c0)))) AND ((((t0.c1)>>(t0.c2)), ((t0.c0) IS TRUE), (('')IS(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) BETWEEN ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END, ((t0.c0) BETWEEN (t0.c0) AND (t0.c2)), ((t0.c1) NOT BETWEEN (0.756257047042349) AND (t0.c0)))) AND ((((t0.c1)>>(t0.c2)), ((t0.c0) IS TRUE), (('')IS(t0.c2))))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((x'b556')) AND ((vt0.c0)))))==((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((x'b556')) AND ((vt0.c0)))))==((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((x'b556')) AND ((vt0.c0)))))==((TYPEOF(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) BETWEEN ((x'b556')) AND ((vt0.c0)))))==((TYPEOF(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) BETWEEN ((x'b556')) AND ((vt0.c0)))))==((TYPEOF(vt0.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((((((((0.5007157646497236)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((((((((0.5007157646497236)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((((((((0.5007157646497236)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((((((((0.5007157646497236)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, vt0.c0)))) NOT BETWEEN (((((((((0.5007157646497236)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (0.14477251722214657);
SELECT SUM(count) FROM (SELECT ((0.14477251722214657) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (0.14477251722214657);
SELECT SUM(count) FROM (SELECT ((0.14477251722214657) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (0.14477251722214657);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS NUMERIC) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY CAST(((rt0.c2)&(rt0.c0)) AS NUMERIC) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%((x'' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%((x'' IN ()))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%((x'' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%((x'' IN ()))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))%((x'' IN ()))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE (CASE ((rt0.c2)<=(t0.c2))  WHEN (rt0.c1 IN (t0.c2)) THEN CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)<=(t0.c2))  WHEN (rt0.c1 IN (t0.c2)) THEN CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CASE ((rt0.c2)<=(t0.c2))  WHEN (rt0.c1 IN (t0.c2)) THEN CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)<=(t0.c2))  WHEN (rt0.c1 IN (t0.c2)) THEN CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE (CASE ((rt0.c2)<=(t0.c2))  WHEN (rt0.c1 IN (t0.c2)) THEN CASE vt0.c0  WHEN t0.c0 THEN rt0.c2 END ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) END);
SELECT COUNT(*) FROM t0 INDEXED BY i1, vt0 INDEXED BY i12, rt0 WHERE (COALESCE(((t0.c1)||(t0.c0)), x'', (((rt0.c0))<=((t0.c2))), ((rt0.c2) IS TRUE), CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (582280183)))) ORDER BY (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((t0.c1)||(t0.c0)), x'', (((rt0.c0))<=((t0.c2))), ((rt0.c2) IS TRUE), CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (582280183)))) IS TRUE)  as count FROM t0 INDEXED BY i1, vt0 INDEXED BY i12, rt0 ORDER BY (rt0.c0 IN ()));
SELECT COUNT(*) FROM t0 INDEXED BY i1, vt0 INDEXED BY i12, rt0 WHERE (COALESCE(((t0.c1)||(t0.c0)), x'', (((rt0.c0))<=((t0.c2))), ((rt0.c2) IS TRUE), CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (582280183)))) ORDER BY (rt0.c0 IN ());
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((t0.c1)||(t0.c0)), x'', (((rt0.c0))<=((t0.c2))), ((rt0.c2) IS TRUE), CAST(rt0.c2 AS NUMERIC), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (582280183)))) IS TRUE)  as count FROM t0 INDEXED BY i1, vt0 INDEXED BY i12, rt0 ORDER BY (rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c1) NOT NULL), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(0.970116656025509)))AND(rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c1)*(rt0.c1)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c1) NOT NULL), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(0.970116656025509)))AND(rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c1)*(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c1) NOT NULL), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(0.970116656025509)))AND(rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c1)*(rt0.c1)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c1) NOT NULL), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(0.970116656025509)))AND(rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c1)*(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array(((rt0.c1) NOT NULL), ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(0.970116656025509)))AND(rt0.c2)), ((rt0.c0) NOTNULL), ((rt0.c1)*(rt0.c1)))) ORDER BY NULL ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS REAL)))) ORDER BY (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>(((vt0.c0 IN ()), (vt0.c0 IN ()), ((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((((((- (rt0.c0)))AND(t0.c1 COLLATE NOCASE)))AND(CAST(t0.c1 AS INTEGER))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (-1388393976)))))OR((((t0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (t0.c1) AND ('1110619928')) THEN CAST(t0.c0 AS BLOB) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))AND(t0.c1 COLLATE NOCASE)))AND(CAST(t0.c1 AS INTEGER))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (-1388393976)))))OR((((t0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (t0.c1) AND ('1110619928')) THEN CAST(t0.c0 AS BLOB) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((((((- (rt0.c0)))AND(t0.c1 COLLATE NOCASE)))AND(CAST(t0.c1 AS INTEGER))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (-1388393976)))))OR((((t0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (t0.c1) AND ('1110619928')) THEN CAST(t0.c0 AS BLOB) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))AND(t0.c1 COLLATE NOCASE)))AND(CAST(t0.c1 AS INTEGER))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (-1388393976)))))OR((((t0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (t0.c1) AND ('1110619928')) THEN CAST(t0.c0 AS BLOB) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END ASC);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((((((((((- (rt0.c0)))AND(t0.c1 COLLATE NOCASE)))AND(CAST(t0.c1 AS INTEGER))))AND(((rt0.c1) BETWEEN (vt0.c0) AND (-1388393976)))))OR((((t0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (t0.c1) AND ('1110619928')) THEN CAST(t0.c0 AS BLOB) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 WHEN (- (rt0.c1)) THEN CAST(rt0.c1 AS BLOB) END ASC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (t0.c2);
SELECT * FROM rt0 NOT INDEXED, vt0, t0 WHERE (vt0.c0) ORDER BY t0.c2, CAST((((rt0.c1, t0.c1, NULL))<>((rt0.c0, rt0.c0, t0.c2))) AS REAL) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c2, CAST((((rt0.c1, t0.c1, NULL))<>((rt0.c0, rt0.c0, t0.c2))) AS REAL) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, vt0, t0 WHERE (vt0.c0) ORDER BY t0.c2, CAST((((rt0.c1, t0.c1, NULL))<>((rt0.c0, rt0.c0, t0.c2))) AS REAL) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY t0.c2, CAST((((rt0.c1, t0.c1, NULL))<>((rt0.c0, rt0.c0, t0.c2))) AS REAL) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0 NOT INDEXED, vt0, t0 WHERE (vt0.c0) ORDER BY t0.c2, CAST((((rt0.c1, t0.c1, NULL))<>((rt0.c0, rt0.c0, t0.c2))) AS REAL) ASC  NULLS LAST, t0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (-1412115776) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1412115776) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1412115776) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1412115776) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (-1412115776) ORDER BY vt0.c0  NULLS LAST;
