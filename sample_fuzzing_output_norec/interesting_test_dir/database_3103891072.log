-- Time: 2024/06/09 10:08:59
-- Database: database72
-- Database version: 3.40.0
-- seed value: 3103891072
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
UPDATE OR IGNORE rt0 SET c0='-1489059865', c0=0.7429384982241705, c2=x'' WHERE CASE WHEN (~ (rt0.c0)) THEN ((rt0.c2)|(rt0.c2)) ELSE rt0.c0 END; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 INT ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET (c1)=('-1489059865'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('0.7429384982241705'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES (1129335179, x''); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c1, c3) VALUES (x'd78c', 0Xffffffffbce26401); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '2675'); -- 3ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (x'697b', -1126013951), (0.5860704767289485, 0.22638675322048785), (x'186a', -1489059865); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
REINDEX  rt1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 8ms;
PRAGMA temp.recursive_triggers; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'b0e9' WHERE ((((rt0.c0 IN (rt0.c0))))<((CAST(rt0.c2 AS NUMERIC)))); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(NULL) WHERE (((('1272903445') IS FALSE)) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c1, c2) VALUES (0.7249010533070622, NULL, '-1126013951'); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (''), (1.7976931348623157E308), ('Z>50x*ﭟ'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('0.7429384982241705', 'a', '1092745354', 1319984671), ('1184556482', x'4511fcce', '', 0.4358955229348549), (-993099714, 0.7429384982241705, 0.2976096271540343, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1184556482') WHERE ((ABS(vt1.c0)) NOT BETWEEN (x'' COLLATE BINARY) AND (((vt1.c0) ISNULL))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2115919856 sz=-1213278770 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c0, c1) VALUES (0x1b143e00, '', 147933297, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (0.3763693035532193), (x''), (x''); -- 0ms;
UPDATE rt1 SET (c1)=(1092745354); -- 0ms;
UPDATE vt1 SET (c0)=(0.6646433843144558); -- 0ms;
UPDATE OR REPLACE rt0 SET c1=NULL WHERE CAST(0.08929939756174488 AS REAL); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (NULL, '1272903445'); -- 0ms;
UPDATE rt1 SET (c3, c3, c0)=(0xffffffff89bcedb4, x'', x''); -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('2000508063'); -- 0ms;
UPDATE vt1 SET (c0)=(x'ee1f3953'); -- 0ms;
UPDATE vt1 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2115919856);\n; -- 1ms;
REINDEX; -- 0ms;
VACUUM; -- 2ms;
INSERT OR IGNORE INTO vt1 VALUES ('672240911'); -- 0ms;
BEGIN  TRANSACTION; -- 8ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE ((CAST(vt1.c0 AS TEXT)) NOT NULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c1, c3, c2) VALUES (0x4ead5e1f, NULL, '', 0.6722701282446466), (x'', NULL, x'f14550d7f6c2', '1184556482'), (NULL, '1751897387', NULL, '+C'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('.S X)뻠|/'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2000508063') NOT BETWEEN (((-1159697644) BETWEEN ('''~') AND (0.4536925963526405))) AND (('{|}' IN ('1438886523', 2132197454)))); -- 1ms;
INSERT OR ABORT INTO rt1(c2, c0, c1) VALUES (0xffffffffda116f88, x'', ''), (NULL, NULL, 0.656713753874981), ('751427963', 4.54311424E8, '454311424'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'c739', 't{'); -- 11ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET (c3, c1)=('1665430951', NULL) WHERE (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((NULL))) COLLATE RTRIM; -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
END; -- 1ms;
UPDATE vt1 SET c0=x'' WHERE ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR((vt1.c0 IN ()))))AND(((vt1.c0)IS(vt1.c0)))))AND((~ (vt1.c0)))))OR(((vt1.c0)!=(vt1.c0)))); -- 11ms;
REINDEX; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (x'', 0.4488241109765101, 0.5924201447096205), (-1.159697644E9, 0.5864231343721613, '458142180'), (x'1827', '0.4488241109765101', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES ('2000508063', x'', x''); -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
UPDATE OR ABORT rt1 SET (c3)=(0.9679633586117357); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES (0xed371e8, 0.5860704767289485, '+C'); -- 6ms;
PRAGMA main.automatic_index = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE TRIM(DISTINCT vt1.c0) COLLATE BINARY; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (x''); -- 1ms;
UPDATE OR IGNORE vt1 SET c0='1129335179', c0=0x72eaf21e WHERE CASE ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0)OR(vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (vt1.c0 IN ('\r~5 %z8.*')) END; -- 0ms;
UPDATE OR FAIL rt1 SET (c0, c3)=('147933297', 1.438886523E9); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(0.7429384982241705, '', x'') WHERE LIKELIHOOD(DISTINCT vt1.c0, 0.6501228897020228); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (''); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE rt1 SET (c0)=(x'bb1f'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0X58365757; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.3203354947670348, c0='Z᙭ |', c1='-636391544' WHERE NULL; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('248738280', NULL); -- 1ms;
DELETE FROM rt1 WHERE (((((rt1.c1 IN (rt1.c1, '')))OR(((((rt1.c0)OR(rt1.c1)))AND(x'')))))AND(((rt1.c1)IS NOT(rt1.c3)))); -- 0ms;
UPDATE rt0 SET (c0)=(x'') WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.6048906838354121; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2111599726);\n; -- 1ms;
UPDATE vt1 SET (c0)=('\f'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x''), (''), (0.6722701282446466), (x''), ('h'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 9ms;
BEGIN EXCLUSIVE TRANSACTION; -- 5ms;
INSERT OR ABORT INTO rt1(c2, c1, c3) VALUES (672240911, 0.5646922176623945, '],'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (1751897387), (0.9438243711126436), (NULL); -- 0ms;
UPDATE vt1 SET c0=0.7602309956567277, c0=0.012265008641414887; -- 0ms;
UPDATE OR FAIL rt1 SET c1=0Xffffffffb15dae7c, c3=0.265734519227277; -- 0ms;
UPDATE vt1 SET c0=0.7723356920049077 WHERE CAST(((NULL)=(vt1.c0)) AS REAL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c3='.S X)뻠|/'; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7794642779817937); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=('1701772127', x''); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (x'b9b0'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', x''); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (0.3787317288831754, x'7645', NULL, NULL); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt1 WHERE (((rt1.c2)==(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)==(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2)==(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2)==(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2)==(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(((rt0.c0)IS(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (0.7439717370141303))))) ORDER BY LIKELY(((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c2)))OR(((rt0.c0)IS(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (0.7439717370141303))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(((rt0.c0)IS(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (0.7439717370141303))))) ORDER BY LIKELY(((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c2)))OR(((rt0.c0)IS(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (0.7439717370141303))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(((rt0.c0)IS(rt0.c1)))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (0.7439717370141303))))) ORDER BY LIKELY(((rt0.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((rt1.c0 IN ())) IS FALSE));
SELECT * FROM rt1 WHERE ((rt1.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((rt1.c3 IN ()));
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) IS TRUE) WHERE (((rt0.c1 COLLATE NOCASE)!=(((rt0.c1)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)!=(((rt0.c1)OR(NULL))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) IS TRUE));
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) IS TRUE) WHERE (((rt0.c1 COLLATE NOCASE)!=(((rt0.c1)OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)!=(((rt0.c1)OR(NULL))))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) IS TRUE));
SELECT * FROM rt1, rt0 FULL OUTER JOIN vt1 ON ((((((((((rt1.c0)AND(rt1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))) IS TRUE) WHERE (((rt0.c1 COLLATE NOCASE)!=(((rt0.c1)OR(NULL)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))-(rt1.c0)) WHERE (('-1760992316' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1760992316' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))-(rt1.c0)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))-(rt1.c0)) WHERE (('-1760992316' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1760992316' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))-(rt1.c0)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))-(rt1.c0)) WHERE (('-1760992316' IN ()));
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c1 END))>(((vt1.c0 IN (rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c1 END))>(((vt1.c0 IN (rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c1 END))>(((vt1.c0 IN (rt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c1 END))>(((vt1.c0 IN (rt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE ((((CASE WHEN rt1.c2 THEN NULL ELSE rt1.c1 END))>(((vt1.c0 IN (rt1.c0, rt1.c1))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON json_valid('1	7') WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid('1	7'));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON json_valid('1	7') WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON json_valid('1	7'));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON json_valid('1	7') WHERE ((rt0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST((+ (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST((+ (rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST((+ (rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c001') ORDER BY ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM ASC, ((NOT (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'c001') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM ASC, ((NOT (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c001') ORDER BY ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM ASC, ((NOT (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'c001') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM ASC, ((NOT (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'c001') ORDER BY ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM ASC, ((NOT (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((((0xffffffffb38c2bbd) ISNULL)))!=((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xffffffffb38c2bbd) ISNULL)))<>((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((0xffffffffb38c2bbd) ISNULL)))!=((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0xffffffffb38c2bbd) ISNULL)))<>((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((0xffffffffb38c2bbd) ISNULL)))!=((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0))))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (x'') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0)))>=(LOWER(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0)))>=(LOWER(rt1.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (x'') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0)))>=(LOWER(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0)))>=(LOWER(rt1.c3)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (x'') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c0)))>=(LOWER(rt1.c3)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))))AND((((0.3203354947670348, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt1.c1, 0Xffffffff921e5222, rt1.c3)))))) ORDER BY json_array_length(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))))AND((((0.3203354947670348, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt1.c1, 0xffffffff921e5222, rt1.c3)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY json_array_length(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))))AND((((0.3203354947670348, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt1.c1, 0Xffffffff921e5222, rt1.c3)))))) ORDER BY json_array_length(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))))AND((((0.3203354947670348, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt1.c1, 0xffffffff921e5222, rt1.c3)))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY json_array_length(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (((((CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN NULL THEN rt1.c2 END)OR(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)))))AND((((0.3203354947670348, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c2, rt0.c0)) AND ((rt1.c1, 0Xffffffff921e5222, rt1.c3)))))) ORDER BY json_array_length(((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)));
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (- (rt1.c2)) THEN (rt1.c1 IN (vt1.c0, rt1.c1)) WHEN rt1.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((NULL)|(rt0.c0)) THEN ((vt1.c0)IS NOT(rt0.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c2)) THEN (rt1.c1 IN (vt1.c0, rt1.c1)) WHEN rt1.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((NULL)|(rt0.c0)) THEN ((vt1.c0)IS NOT(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (- (rt1.c2)) THEN (rt1.c1 IN (vt1.c0, rt1.c1)) WHEN rt1.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((NULL)|(rt0.c0)) THEN ((vt1.c0)IS NOT(rt0.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt1.c2)) THEN (rt1.c1 IN (vt1.c0, rt1.c1)) WHEN rt1.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((NULL)|(rt0.c0)) THEN ((vt1.c0)IS NOT(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN (- (rt1.c2)) THEN (rt1.c1 IN (vt1.c0, rt1.c1)) WHEN rt1.c0 COLLATE NOCASE THEN rt0.c0 COLLATE NOCASE WHEN ((NULL)|(rt0.c0)) THEN ((vt1.c0)IS NOT(rt0.c0)) END) ORDER BY ((CAST(rt1.c1 AS NUMERIC)) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)GLOB(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)GLOB(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((NULL)GLOB(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (('匂vIW\n)%')GLOB(x'')) THEN (+ (vt1.c0)) END) ORDER BY (- (((vt1.c0)*('0.3203354947670348')))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('匂vIW\n)%')GLOB(x'')) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)*('0.3203354947670348')))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (('匂vIW\n)%')GLOB(x'')) THEN (+ (vt1.c0)) END) ORDER BY (- (((vt1.c0)*('0.3203354947670348')))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('匂vIW\n)%')GLOB(x'')) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0)*('0.3203354947670348')))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (('匂vIW\n)%')GLOB(x'')) THEN (+ (vt1.c0)) END) ORDER BY (- (((vt1.c0)*('0.3203354947670348')))) DESC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(((rt0.c0) ISNULL) AS BLOB) LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END  WHEN (rt0.c2 IN ()) THEN (vt1.c0 IN ()) ELSE CASE WHEN rt1.c2 THEN '*헎gYX6揄o!' ELSE rt0.c1 END END WHERE (0.5887608438911333);
SELECT SUM(count) FROM (SELECT ((0.5887608438911333) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(((rt0.c0) ISNULL) AS BLOB) LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END  WHEN (rt0.c2 IN ()) THEN (vt1.c0 IN ()) ELSE CASE WHEN rt1.c2 THEN '*헎gYX6揄o!' ELSE rt0.c1 END END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(((rt0.c0) ISNULL) AS BLOB) LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END  WHEN (rt0.c2 IN ()) THEN (vt1.c0 IN ()) ELSE CASE WHEN rt1.c2 THEN '*헎gYX6揄o!' ELSE rt0.c1 END END WHERE (0.5887608438911333);
SELECT SUM(count) FROM (SELECT ((0.5887608438911333) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(((rt0.c0) ISNULL) AS BLOB) LEFT OUTER JOIN rt0 ON CASE CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END  WHEN (rt0.c2 IN ()) THEN (vt1.c0 IN ()) ELSE CASE WHEN rt1.c2 THEN '*헎gYX6揄o!' ELSE rt0.c1 END END);
SELECT COUNT(*) FROM rt1, rt0 WHERE ('-706967236');
SELECT SUM(count) FROM (SELECT (('-706967236') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ('-706967236');
SELECT SUM(count) FROM (SELECT (('-706967236') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ('-706967236');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c2 IN (vt1.c0, rt1.c1)) IN ()) RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c3 AS REAL), ((x'')IS(rt1.c1)), NULL))<((((x'')|(rt0.c1)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END))) WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c2 IN (vt1.c0, rt1.c1)) IN ()) RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c3 AS REAL), ((x'')IS(rt1.c1)), NULL))<((((x'')|(rt0.c1)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c2 IN (vt1.c0, rt1.c1)) IN ()) RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c3 AS REAL), ((x'')IS(rt1.c1)), NULL))<((((x'')|(rt0.c1)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END))) WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c2 IN (vt1.c0, rt1.c1)) IN ()) RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c3 AS REAL), ((x'')IS(rt1.c1)), NULL))<((((x'')|(rt0.c1)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt1.c2 IN (vt1.c0, rt1.c1)) IN ()) RIGHT OUTER JOIN rt1 ON (((CAST(rt1.c3 AS REAL), ((x'')IS(rt1.c1)), NULL))<((((x'')|(rt0.c1)), ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)), CASE rt0.c0  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c1 END))) WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt1.c1)AND(rt0.c0)))OR(rt1.c1)))) AND ((LTRIM(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (+ (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0)) THEN (+ (vt1.c0)) END);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON 0.95501966030728 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON 0.95501966030728);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON 0.95501966030728 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON 0.95501966030728);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON 0.95501966030728 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT * FROM rt1 WHERE ('2082000851');
SELECT SUM(count) FROM (SELECT ALL (('2082000851') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('2082000851');
SELECT SUM(count) FROM (SELECT ALL (('2082000851') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('2082000851');
SELECT ALL * FROM rt0, rt1 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((- ((rt0.c0 IN ()))));
SELECT * FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c2)<<(rt1.c2))  WHEN IFNULL(DISTINCT rt1.c1, rt1.c0) THEN ((vt1.c0)>(rt1.c2)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (- (rt1.c2)) WHEN (- (rt1.c2)) THEN CAST(vt1.c0 AS INTEGER) END FULL OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(1.92800003E9)) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((rt1.c1)>>(NULL)) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt1.c1)<>(rt0.c2)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE ((rt1.c3)GLOB(rt1.c2)) END WHERE ((((((- (rt0.c2)))OR(rt1.c2 COLLATE RTRIM)))AND((~ (rt0.c1))))) ORDER BY ((rt1.c1 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(rt1.c2 COLLATE RTRIM)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c2)<<(rt1.c2))  WHEN IFNULL(DISTINCT rt1.c1, rt1.c0) THEN ((vt1.c0)>(rt1.c2)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (- (rt1.c2)) WHEN (- (rt1.c2)) THEN CAST(vt1.c0 AS INTEGER) END FULL OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(1.92800003E9)) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((rt1.c1)>>(NULL)) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt1.c1)!=(rt0.c2)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE ((rt1.c3)GLOB(rt1.c2)) END ORDER BY ((rt1.c1 COLLATE BINARY) NOT NULL) DESC);
SELECT * FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c2)<<(rt1.c2))  WHEN IFNULL(DISTINCT rt1.c1, rt1.c0) THEN ((vt1.c0)>(rt1.c2)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (- (rt1.c2)) WHEN (- (rt1.c2)) THEN CAST(vt1.c0 AS INTEGER) END FULL OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(1.92800003E9)) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((rt1.c1)>>(NULL)) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt1.c1)<>(rt0.c2)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE ((rt1.c3)GLOB(rt1.c2)) END WHERE ((((((- (rt0.c2)))OR(rt1.c2 COLLATE RTRIM)))AND((~ (rt0.c1))))) ORDER BY ((rt1.c1 COLLATE BINARY) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR(rt1.c2 COLLATE RTRIM)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c2)<<(rt1.c2))  WHEN IFNULL(DISTINCT rt1.c1, rt1.c0) THEN ((vt1.c0)>(rt1.c2)) WHEN ((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)) THEN (- (rt1.c2)) WHEN (- (rt1.c2)) THEN CAST(vt1.c0 AS INTEGER) END FULL OUTER JOIN vt1 ON CASE WHEN ((vt1.c0)<>(1.92800003E9)) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((rt1.c1)>>(NULL)) THEN CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt1.c1)!=(rt0.c2)) THEN ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) ELSE ((rt1.c3)GLOB(rt1.c2)) END ORDER BY ((rt1.c1 COLLATE BINARY) NOT NULL) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>((rt0.c0 IN ()))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>((rt0.c0 IN ()))) DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>((rt0.c0 IN ()))) DESC;
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c1) ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC, CAST(rt0.c2 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC, CAST(rt0.c2 AS TEXT) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c1) ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC, CAST(rt0.c2 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC, CAST(rt0.c2 AS TEXT) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c1) ORDER BY CAST((- (rt0.c0)) AS BLOB) DESC, CAST(rt0.c2 AS TEXT) ASC;
SELECT * FROM rt0, vt1, rt1 WHERE ((((0.6774471036059209, ((rt0.c0)AND(rt1.c3)), (- (rt0.c1))))<=(((('C?')LIKE(rt1.c0)), ((rt0.c2)|(vt1.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))))))) ORDER BY CAST(CASE rt1.c3  WHEN rt0.c2 THEN x'' END AS BLOB)  NULLS FIRST, (((((rt1.c3))>=((rt0.c2))))>>(((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6774471036059209, ((rt0.c0)AND(rt1.c3)), (- (rt0.c1))))<=(((('C?')LIKE(rt1.c0)), ((rt0.c2)|(vt1.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CAST(CASE rt1.c3  WHEN rt0.c2 THEN x'' END AS BLOB)  NULLS FIRST, (((((rt1.c3))>=((rt0.c2))))>>(((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, rt1 WHERE ((((0.6774471036059209, ((rt0.c0)AND(rt1.c3)), (- (rt0.c1))))<=(((('C?')LIKE(rt1.c0)), ((rt0.c2)|(vt1.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))))))) ORDER BY CAST(CASE rt1.c3  WHEN rt0.c2 THEN x'' END AS BLOB)  NULLS FIRST, (((((rt1.c3))>=((rt0.c2))))>>(((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.6774471036059209, ((rt0.c0)AND(rt1.c3)), (- (rt0.c1))))<=(((('C?')LIKE(rt1.c0)), ((rt0.c2)|(vt1.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY CAST(CASE rt1.c3  WHEN rt0.c2 THEN x'' END AS BLOB)  NULLS FIRST, (((((rt1.c3))>=((rt0.c2))))>>(((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1, rt1 WHERE ((((0.6774471036059209, ((rt0.c0)AND(rt1.c3)), (- (rt0.c1))))<=(((('C?')LIKE(rt1.c0)), ((rt0.c2)|(vt1.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c1))))))) ORDER BY CAST(CASE rt1.c3  WHEN rt0.c2 THEN x'' END AS BLOB)  NULLS FIRST, (((((rt1.c3))>=((rt0.c2))))>>(((((rt1.c1)AND(rt1.c3)))AND(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0))==(vt1.c0))) ORDER BY (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0 COLLATE NOCASE, ((vt1.c0)<>(x'6539')))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST, (((((vt1.c0)+(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0))==(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0 COLLATE NOCASE, ((vt1.c0)!=(x'6539')))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST, (((((vt1.c0)+(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0))==(vt1.c0))) ORDER BY (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0 COLLATE NOCASE, ((vt1.c0)<>(x'6539')))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST, (((((vt1.c0)+(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((RTRIM(vt1.c0))==(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0 COLLATE NOCASE, ((vt1.c0)!=(x'6539')))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST, (((((vt1.c0)+(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((RTRIM(vt1.c0))==(vt1.c0))) ORDER BY (((vt1.c0, vt1.c0, NULL)) NOT BETWEEN ((((vt1.c0) ISNULL), vt1.c0 COLLATE NOCASE, ((vt1.c0)<>(x'6539')))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS FIRST, (((((vt1.c0)+(vt1.c0))))>=(((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))  NULLS LAST;
SELECT * FROM vt1 WHERE (x'') ORDER BY 0.3451017268199861 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY 0.3451017268199861 ASC);
SELECT * FROM vt1 WHERE (x'') ORDER BY 0.3451017268199861 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 ORDER BY 0.3451017268199861 ASC);
SELECT * FROM vt1 WHERE (x'') ORDER BY 0.3451017268199861 ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN ()))||(rt1.c1))) ORDER BY ((((rt1.c0)!=(rt1.c0))) ISNULL) ASC  NULLS FIRST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))||(rt1.c1))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c0)<>(rt1.c0))) ISNULL) ASC  NULLS FIRST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN ()))||(rt1.c1))) ORDER BY ((((rt1.c0)!=(rt1.c0))) ISNULL) ASC  NULLS FIRST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))||(rt1.c1))) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((rt1.c0)<>(rt1.c0))) ISNULL) ASC  NULLS FIRST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c1 IN ()))||(rt1.c1))) ORDER BY ((((rt1.c0)!=(rt1.c0))) ISNULL) ASC  NULLS FIRST, ((((rt1.c3) BETWEEN (rt1.c1) AND (vt1.c0))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0.3039977846687112) ISNULL))<<(json_array_length(vt1.c0)))) ORDER BY x'1ec1', CAST(NULL AS TEXT) ASC, CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END, ((x'')<=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3039977846687112) ISNULL))<<(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'1ec1', CAST(NULL AS TEXT) ASC, CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END, ((x'')<=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((0.3039977846687112) ISNULL))<<(json_array_length(vt1.c0)))) ORDER BY x'1ec1', CAST(NULL AS TEXT) ASC, CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END, ((x'')<=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3039977846687112) ISNULL))<<(json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'1ec1', CAST(NULL AS TEXT) ASC, CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END, ((x'')<=(((vt1.c0)+(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (x'');
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((-1.843506654E9))) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((-1.843506654E9))) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((-1.843506654E9))) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((-1.843506654E9))) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((-1.843506654E9))) THEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY NULL  NULLS LAST;
SELECT * FROM vt1, rt0 INNER JOIN rt1 ON rt0.c2 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt0.c2);
SELECT * FROM vt1, rt0 INNER JOIN rt1 ON rt0.c2 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt0.c2);
SELECT * FROM vt1, rt0 INNER JOIN rt1 ON rt0.c2 WHERE (rt0.c1 COLLATE NOCASE);
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt0.c2)LIKE(rt0.c2)))<=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY (('0.4536925963526405') NOT BETWEEN ((- (rt1.c2))) AND (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c2)))<=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY (('0.4536925963526405') NOT BETWEEN ((- (rt1.c2))) AND (CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt0.c2)LIKE(rt0.c2)))<=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY (('0.4536925963526405') NOT BETWEEN ((- (rt1.c2))) AND (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(rt0.c2)))<=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) IS TRUE)  as count FROM vt1, rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY (('0.4536925963526405') NOT BETWEEN ((- (rt1.c2))) AND (CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM vt1, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt0.c2)LIKE(rt0.c2)))<=(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))) ORDER BY (('0.4536925963526405') NOT BETWEEN ((- (rt1.c2))) AND (CAST(vt1.c0 AS BLOB)));
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY NULLIF(rt0.c1, rt0.c1 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(rt0.c1, rt0.c1 COLLATE RTRIM) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY NULLIF(rt0.c1, rt0.c1 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY NULLIF(rt0.c1, rt0.c1 COLLATE RTRIM) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (NULL) ORDER BY NULLIF(rt0.c1, rt0.c1 COLLATE RTRIM) ASC;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((0.6810349074096153))!=((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((0.6810349074096153))<>((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((0.6810349074096153))!=((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((0.6810349074096153))<>((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3)))))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((0.6810349074096153))!=((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c3))))));
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN rt1.c1 END);
SELECT ALL * FROM rt1, rt0 WHERE (((ABS(DISTINCT rt0.c1))+(IFNULL(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c1))+(IFNULL(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((ABS(DISTINCT rt0.c1))+(IFNULL(rt1.c1, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c1))+(IFNULL(rt1.c1, rt1.c2)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((ABS(DISTINCT rt0.c1))+(IFNULL(rt1.c1, rt1.c2))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))>>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))>>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))>>(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))>>(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN ()))>>(vt1.c0 COLLATE NOCASE)));
SELECT * FROM rt1 WHERE (((((((rt1.c0)*(rt1.c1)))OR(LIKELY(DISTINCT rt1.c1))))AND(((rt1.c0)*(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)*(rt1.c1)))OR(LIKELY(DISTINCT rt1.c1))))AND(((rt1.c0)*(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c0)*(rt1.c1)))OR(LIKELY(DISTINCT rt1.c1))))AND(((rt1.c0)*(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)*(rt1.c1)))OR(LIKELY(DISTINCT rt1.c1))))AND(((rt1.c0)*(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c0)*(rt1.c1)))OR(LIKELY(DISTINCT rt1.c1))))AND(((rt1.c0)*(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c1)>=(rt1.c0)))<<(((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))), (((((((rt0.c2, rt0.c1, rt0.c0))>=((rt1.c1, rt0.c2, rt1.c0))))AND(((rt0.c2) ISNULL))))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1)>=(rt1.c0)))<<(((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))), (((((((rt0.c2, rt0.c1, rt0.c0))>=((rt1.c1, rt0.c2, rt1.c0))))AND(((rt0.c2) ISNULL))))OR(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c1)>=(rt1.c0)))<<(((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))), (((((((rt0.c2, rt0.c1, rt0.c0))>=((rt1.c1, rt0.c2, rt1.c0))))AND(((rt0.c2) ISNULL))))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c1)>=(rt1.c0)))<<(((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))), (((((((rt0.c2, rt0.c1, rt0.c0))>=((rt1.c1, rt0.c2, rt1.c0))))AND(((rt0.c2) ISNULL))))OR(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY ((((rt0.c1)>=(rt1.c0)))<<(((((rt0.c2)AND(rt1.c2)))AND(rt0.c2)))), (((((((rt0.c2, rt0.c1, rt0.c0))>=((rt1.c1, rt0.c2, rt1.c0))))AND(((rt0.c2) ISNULL))))OR(x''))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((x'148a', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'148a', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((x'148a', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((x'148a', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((x'148a', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (IFNULL(DISTINCT rt1.c0, '-1950981176') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c0, '-1950981176') COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (IFNULL(DISTINCT rt1.c0, '-1950981176') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c0, '-1950981176') COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (IFNULL(DISTINCT rt1.c0, '-1950981176') COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((rt1.c2 IN ())))<((NULL COLLATE BINARY)))) ORDER BY ((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN ())))<((NULL COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((rt1.c2 IN ())))<((NULL COLLATE BINARY)))) ORDER BY ((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN ())))<((NULL COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((rt1.c2 IN ())))<((NULL COLLATE BINARY)))) ORDER BY ((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c1))>((rt1.c2, rt1.c3, rt1.c2))) COLLATE BINARY) ORDER BY ((((rt1.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST, CAST(rt1.c2 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c3, rt1.c1))>((rt1.c2, rt1.c3, rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST, CAST(rt1.c2 COLLATE BINARY AS REAL));
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c1))>((rt1.c2, rt1.c3, rt1.c2))) COLLATE BINARY) ORDER BY ((((rt1.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST, CAST(rt1.c2 COLLATE BINARY AS REAL);
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c3, rt1.c1))>((rt1.c2, rt1.c3, rt1.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST, CAST(rt1.c2 COLLATE BINARY AS REAL));
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c1))>((rt1.c2, rt1.c3, rt1.c2))) COLLATE BINARY) ORDER BY ((((rt1.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST, CAST(rt1.c2 COLLATE BINARY AS REAL);
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt0.c0)%(rt1.c0)))/((((rt0.c0))>((rt1.c1)))))) ORDER BY ((((rt0.c2)%(rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (LIKE(rt1.c0, '2000508063', '1')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt1.c0)))/((((rt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((rt0.c2)%(rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (LIKE(rt1.c0, '2000508063', '1')))  NULLS LAST);
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt0.c0)%(rt1.c0)))/((((rt0.c0))>((rt1.c1)))))) ORDER BY ((((rt0.c2)%(rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (LIKE(rt1.c0, '2000508063', '1')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt1.c0)))/((((rt0.c0))>((rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((rt0.c2)%(rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (LIKE(rt1.c0, '2000508063', '1')))  NULLS LAST);
SELECT * FROM rt1, rt0, vt1 WHERE (((((rt0.c0)%(rt1.c0)))/((((rt0.c0))>((rt1.c1)))))) ORDER BY ((((rt0.c2)%(rt1.c0))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (LIKE(rt1.c0, '2000508063', '1')))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c3) IS FALSE))))OR(((rt1.c1) ISNULL)))) ORDER BY rt1.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c3) IS FALSE))))OR(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt1.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c3) IS FALSE))))OR(((rt1.c1) ISNULL)))) ORDER BY rt1.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c3) IS FALSE))))OR(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY rt1.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c3) IS FALSE))))OR(((rt1.c1) ISNULL)))) ORDER BY rt1.c3 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) FULL OUTER JOIN rt0 ON ((((LOWER(DISTINCT rt0.c2))AND(CAST(0.6227871720090886 AS INTEGER))))AND(((vt1.c0)*(rt0.c2)))) WHERE ('h' COLLATE RTRIM) ORDER BY (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) IN ()) ASC, CAST(rt0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('h' COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) FULL OUTER JOIN rt0 ON ((((LOWER(DISTINCT rt0.c2))AND(CAST(0.6227871720090886 AS INTEGER))))AND(((vt1.c0)*(rt0.c2)))) ORDER BY (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) IN ()) ASC, CAST(rt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) FULL OUTER JOIN rt0 ON ((((LOWER(DISTINCT rt0.c2))AND(CAST(0.6227871720090886 AS INTEGER))))AND(((vt1.c0)*(rt0.c2)))) WHERE ('h' COLLATE RTRIM) ORDER BY (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) IN ()) ASC, CAST(rt0.c0 COLLATE NOCASE AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('h' COLLATE RTRIM) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) FULL OUTER JOIN rt0 ON ((((LOWER(DISTINCT rt0.c2))AND(CAST(0.6227871720090886 AS INTEGER))))AND(((vt1.c0)*(rt0.c2)))) ORDER BY (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) IN ()) ASC, CAST(rt0.c0 COLLATE NOCASE AS REAL));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON LIKELY(DISTINCT vt1.c0) FULL OUTER JOIN rt0 ON ((((LOWER(DISTINCT rt0.c2))AND(CAST(0.6227871720090886 AS INTEGER))))AND(((vt1.c0)*(rt0.c2)))) WHERE ('h' COLLATE RTRIM) ORDER BY (((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)) IN ()) ASC, CAST(rt0.c0 COLLATE NOCASE AS REAL);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS INTEGER)))) ORDER BY (((rt1.c0 COLLATE BINARY))=((CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) DESC  NULLS FIRST, ((CAST(rt1.c3 AS INTEGER))==((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 COLLATE BINARY))==((CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) DESC  NULLS FIRST, ((CAST(rt1.c3 AS INTEGER))==((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS INTEGER)))) ORDER BY (((rt1.c0 COLLATE BINARY))=((CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) DESC  NULLS FIRST, ((CAST(rt1.c3 AS INTEGER))==((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 COLLATE BINARY))==((CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) DESC  NULLS FIRST, ((CAST(rt1.c3 AS INTEGER))==((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c3)AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(CAST(rt1.c1 AS INTEGER)))) ORDER BY (((rt1.c0 COLLATE BINARY))=((CASE WHEN rt1.c3 THEN x'' WHEN rt1.c0 THEN '' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) DESC  NULLS FIRST, ((CAST(rt1.c3 AS INTEGER))==((rt1.c1 IN ())));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM ASC, CASE WHEN ((rt0.c2)<=(0.5924201447096205)) THEN CAST(-9223372036854775808 AS INTEGER) ELSE ((rt0.c1)<<(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM ASC, CASE WHEN ((rt0.c2)<=(0.5924201447096205)) THEN CAST(-9223372036854775808 AS INTEGER) ELSE ((rt0.c1)<<(rt0.c2)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM ASC, CASE WHEN ((rt0.c2)<=(0.5924201447096205)) THEN CAST(-9223372036854775808 AS INTEGER) ELSE ((rt0.c1)<<(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM ASC, CASE WHEN ((rt0.c2)<=(0.5924201447096205)) THEN CAST(-9223372036854775808 AS INTEGER) ELSE ((rt0.c1)<<(rt0.c2)) END ASC);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY ((rt0.c1) NOTNULL) COLLATE RTRIM ASC, CASE WHEN ((rt0.c2)<=(0.5924201447096205)) THEN CAST(-9223372036854775808 AS INTEGER) ELSE ((rt0.c1)<<(rt0.c2)) END ASC;
SELECT * FROM rt0, rt1 WHERE (CAST((~ (rt1.c3)) AS TEXT)) ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END) BETWEEN (highlight(rt1.c0, rt0.c0, 0.07702054916721746, rt0.c1)) AND (((rt1.c1)>(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END) BETWEEN (highlight(rt1.c0, rt0.c0, 0.07702054916721746, rt0.c1)) AND (((rt1.c1)>(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (CAST((~ (rt1.c3)) AS TEXT)) ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END) BETWEEN (highlight(rt1.c0, rt0.c0, 0.07702054916721746, rt0.c1)) AND (((rt1.c1)>(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE rt1.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END) BETWEEN (highlight(rt1.c0, rt0.c0, 0.07702054916721746, rt0.c1)) AND (((rt1.c1)>(rt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((x'')IS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((((vt1.c0))<=((rt0.c1)))) AND ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((((vt1.c0))<=((rt0.c1)))) AND ((~ (rt1.c0)))));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((x'')IS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((((vt1.c0))<=((rt0.c1)))) AND ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((((vt1.c0))<=((rt0.c1)))) AND ((~ (rt1.c0)))));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((x'')IS(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c0 END))) ORDER BY ((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((((vt1.c0))<=((rt0.c1)))) AND ((~ (rt1.c0))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt1.c1)%(rt0.c1)))AND(LIKELIHOOD(rt0.c2, 0.8930839397020848))))AND('c&C }')));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)%(rt0.c1)))AND(LIKELIHOOD(rt0.c2, 0.8930839397020848))))AND('c&C }'))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt1.c1)%(rt0.c1)))AND(LIKELIHOOD(rt0.c2, 0.8930839397020848))))AND('c&C }')));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)%(rt0.c1)))AND(LIKELIHOOD(rt0.c2, 0.8930839397020848))))AND('c&C }'))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((((((rt1.c1)%(rt0.c1)))AND(LIKELIHOOD(rt0.c2, 0.8930839397020848))))AND('c&C }')));
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) AND ((((vt1.c0) NOT NULL)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1) ORDER BY ((COALESCE(DISTINCT 0Xffffffffc5e22a9d, '.O''zu['))-(((((rt1.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((COALESCE(DISTINCT 0xffffffffc5e22a9d, '.O''zu['))-(((((rt1.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1) ORDER BY ((COALESCE(DISTINCT 0Xffffffffc5e22a9d, '.O''zu['))-(((((rt1.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((COALESCE(DISTINCT 0xffffffffc5e22a9d, '.O''zu['))-(((((rt1.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1) ORDER BY ((COALESCE(DISTINCT 0Xffffffffc5e22a9d, '.O''zu['))-(((((rt1.c1)OR(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((rt1.c3, rt1.c2, rt1.c3))>=((rt1.c2, rt1.c1, rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c0)!=(rt0.c2)))<((((rt1.c1)) BETWEEN ((rt1.c3)) AND (('.I')))))  NULLS LAST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c3))>=((rt1.c2, rt1.c1, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((rt0.c0)!=(rt0.c2)))<((((rt1.c1)) BETWEEN ((rt1.c3)) AND (('.I')))))  NULLS LAST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((rt1.c3, rt1.c2, rt1.c3))>=((rt1.c2, rt1.c1, rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c0)!=(rt0.c2)))<((((rt1.c1)) BETWEEN ((rt1.c3)) AND (('.I')))))  NULLS LAST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, rt1.c2, rt1.c3))>=((rt1.c2, rt1.c1, rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((rt0.c0)!=(rt0.c2)))<((((rt1.c1)) BETWEEN ((rt1.c3)) AND (('.I')))))  NULLS LAST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((rt1.c3, rt1.c2, rt1.c3))>=((rt1.c2, rt1.c1, rt0.c0))) COLLATE NOCASE) ORDER BY ((((rt0.c0)!=(rt0.c2)))<((((rt1.c1)) BETWEEN ((rt1.c3)) AND (('.I')))))  NULLS LAST, ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt1 ON (((rt1.c3 IN ()))+(CAST(rt1.c1 AS REAL))) WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN 0.18658121533958238 WHEN rt1.c1 THEN rt1.c3 WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c3  WHEN rt1.c2 THEN 0.18658121533958238 WHEN rt1.c1 THEN rt1.c3 WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((rt1.c3 IN ()))+(CAST(rt1.c1 AS REAL))) ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON (((rt1.c3 IN ()))+(CAST(rt1.c1 AS REAL))) WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN 0.18658121533958238 WHEN rt1.c1 THEN rt1.c3 WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c3  WHEN rt1.c2 THEN 0.18658121533958238 WHEN rt1.c1 THEN rt1.c3 WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((rt1.c3 IN ()))+(CAST(rt1.c1 AS REAL))) ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN vt1 ON (((rt1.c3 IN ()))+(CAST(rt1.c1 AS REAL))) WHERE (CAST(CASE rt1.c3  WHEN rt1.c2 THEN 0.18658121533958238 WHEN rt1.c1 THEN rt1.c3 WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT)) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt1 WHERE (CASE '픫t^'  WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END ELSE ((rt1.c2)<<(rt1.c3)) END) ORDER BY ((((rt1.c1)<(rt1.c3)))AND((rt1.c3 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '픫t^'  WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END ELSE ((rt1.c2)<<(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c1)<(rt1.c3)))AND((rt1.c3 IN (rt1.c2)))) ASC);
SELECT ALL * FROM rt1, vt1 WHERE (CASE '픫t^'  WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END ELSE ((rt1.c2)<<(rt1.c3)) END) ORDER BY ((((rt1.c1)<(rt1.c3)))AND((rt1.c3 IN (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '픫t^'  WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END ELSE ((rt1.c2)<<(rt1.c3)) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c1)<(rt1.c3)))AND((rt1.c3 IN (rt1.c2)))) ASC);
SELECT ALL * FROM rt1, vt1 WHERE (CASE '픫t^'  WHEN ((rt1.c0) NOT NULL) THEN CASE rt1.c3  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END ELSE ((rt1.c2)<<(rt1.c3)) END) ORDER BY ((((rt1.c1)<(rt1.c3)))AND((rt1.c3 IN (rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CAST('1751897387' AS REAL) AS INTEGER)) ORDER BY ((((rt1.c2)<<(rt1.c0))) NOT NULL), CASE WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST('1751897387' AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c2)<<(rt1.c0))) NOT NULL), CASE WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CAST('1751897387' AS REAL) AS INTEGER)) ORDER BY ((((rt1.c2)<<(rt1.c0))) NOT NULL), CASE WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST('1751897387' AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c2)<<(rt1.c0))) NOT NULL), CASE WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST(CAST('1751897387' AS REAL) AS INTEGER)) ORDER BY ((((rt1.c2)<<(rt1.c0))) NOT NULL), CASE WHEN rt1.c2 COLLATE RTRIM THEN rt1.c1 END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE (- (rt0.c0))  WHEN (vt1.c0 IN (rt1.c1)) THEN ((rt0.c1)>=(rt0.c1)) END) ORDER BY rt1.c2 DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)), CAST(rt0.c1 AS REAL), (+ (vt1.c0))))>=(((((0.3512953080920178)) BETWEEN ((rt0.c2)) AND ((rt1.c1))), rt1.c1, (~ (vt1.c0))))) ASC, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((-1.843506654E9)OR(rt0.c0)))AND('1092745354')))OR(rt0.c2)))OR(vt1.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (vt1.c0 IN (rt1.c1)) THEN ((rt0.c1)>=(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1 ORDER BY rt1.c2 DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)), CAST(rt0.c1 AS REAL), (+ (vt1.c0))))>=(((((0.3512953080920178)) BETWEEN ((rt0.c2)) AND ((rt1.c1))), rt1.c1, (~ (vt1.c0))))) ASC, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((-1.843506654E9)OR(rt0.c0)))AND('1092745354')))OR(rt0.c2)))OR(vt1.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE (- (rt0.c0))  WHEN (vt1.c0 IN (rt1.c1)) THEN ((rt0.c1)>=(rt0.c1)) END) ORDER BY rt1.c2 DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)), CAST(rt0.c1 AS REAL), (+ (vt1.c0))))>=(((((0.3512953080920178)) BETWEEN ((rt0.c2)) AND ((rt1.c1))), rt1.c1, (~ (vt1.c0))))) ASC, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((-1.843506654E9)OR(rt0.c0)))AND('1092745354')))OR(rt0.c2)))OR(vt1.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (vt1.c0 IN (rt1.c1)) THEN ((rt0.c1)>=(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN rt1 ORDER BY rt1.c2 DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)), CAST(rt0.c1 AS REAL), (+ (vt1.c0))))>=(((((0.3512953080920178)) BETWEEN ((rt0.c2)) AND ((rt1.c1))), rt1.c1, (~ (vt1.c0))))) ASC, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((-1.843506654E9)OR(rt0.c0)))AND('1092745354')))OR(rt0.c2)))OR(vt1.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN rt1 WHERE (CASE (- (rt0.c0))  WHEN (vt1.c0 IN (rt1.c1)) THEN ((rt0.c1)>=(rt0.c1)) END) ORDER BY rt1.c2 DESC  NULLS LAST, (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)), CAST(rt0.c1 AS REAL), (+ (vt1.c0))))>=(((((0.3512953080920178)) BETWEEN ((rt0.c2)) AND ((rt1.c1))), rt1.c1, (~ (vt1.c0))))) ASC, ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((((((((-1.843506654E9)OR(rt0.c0)))AND('1092745354')))OR(rt0.c2)))OR(vt1.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt1.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) END) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE LIKELIHOOD(rt0.c0, 0.8396334650745287)  WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt1.c1, rt0.c2)) WHEN ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)) THEN (vt1.c0 IN ()) WHEN rt1.c2 COLLATE BINARY THEN (((rt0.c0)) NOT BETWEEN (('0.3039977846687112')) AND ((NULL))) WHEN x'' THEN (rt1.c0 IN ()) WHEN HEX(rt1.c0) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY -1.043523987E9  NULLS FIRST, CASE ((NULL)IS(rt1.c2))  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN rt1.c3 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c0, 0.8396334650745287)  WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt1.c1, rt0.c2)) WHEN ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)) THEN (vt1.c0 IN ()) WHEN rt1.c2 COLLATE BINARY THEN (((rt0.c0)) NOT BETWEEN (('0.3039977846687112')) AND ((NULL))) WHEN x'' THEN (rt1.c0 IN ()) WHEN HEX(rt1.c0) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY -1.043523987E9  NULLS FIRST, CASE ((NULL)IS(rt1.c2))  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN rt1.c3 END DESC);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE LIKELIHOOD(rt0.c0, 0.8396334650745287)  WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt1.c1, rt0.c2)) WHEN ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)) THEN (vt1.c0 IN ()) WHEN rt1.c2 COLLATE BINARY THEN (((rt0.c0)) NOT BETWEEN (('0.3039977846687112')) AND ((NULL))) WHEN x'' THEN (rt1.c0 IN ()) WHEN HEX(rt1.c0) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY -1.043523987E9  NULLS FIRST, CASE ((NULL)IS(rt1.c2))  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN rt1.c3 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt0.c0, 0.8396334650745287)  WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt1.c1, rt0.c2)) WHEN ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)) THEN (vt1.c0 IN ()) WHEN rt1.c2 COLLATE BINARY THEN (((rt0.c0)) NOT BETWEEN (('0.3039977846687112')) AND ((NULL))) WHEN x'' THEN (rt1.c0 IN ()) WHEN HEX(rt1.c0) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY -1.043523987E9  NULLS FIRST, CASE ((NULL)IS(rt1.c2))  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN rt1.c3 END DESC);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE LIKELIHOOD(rt0.c0, 0.8396334650745287)  WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt1.c1 THEN rt0.c0 END THEN (rt0.c2 IN (rt1.c1, rt0.c2)) WHEN ((rt1.c3) NOT BETWEEN (x'') AND (rt1.c2)) THEN (vt1.c0 IN ()) WHEN rt1.c2 COLLATE BINARY THEN (((rt0.c0)) NOT BETWEEN (('0.3039977846687112')) AND ((NULL))) WHEN x'' THEN (rt1.c0 IN ()) WHEN HEX(rt1.c0) THEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY -1.043523987E9  NULLS FIRST, CASE ((NULL)IS(rt1.c2))  WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)) THEN rt1.c3 END DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2)AND(0.010981694209563853)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(0.010981694209563853)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2)AND(0.010981694209563853)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(0.010981694209563853)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CAST(((rt0.c2)AND(0.010981694209563853)) AS TEXT));
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY ((((((((((vt1.c0)/('-65116720')))AND((vt1.c0 IN ()))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)/('-65116720')))AND((vt1.c0 IN ()))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY ((((((((((vt1.c0)/('-65116720')))AND((vt1.c0 IN ()))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)/('-65116720')))AND((vt1.c0 IN ()))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) IS TRUE)) ORDER BY ((((((((((vt1.c0)/('-65116720')))AND((vt1.c0 IN ()))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c3 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c3 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((CAST(rt1.c3 AS TEXT)) ISNULL));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt1.c2) ORDER BY ((((0Xffffffffd880bd72)==(rt1.c3)))*(ABS(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((0xffffffffd880bd72)==(rt1.c3)))*(ABS(DISTINCT rt1.c0))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt1.c2) ORDER BY ((((0Xffffffffd880bd72)==(rt1.c3)))*(ABS(DISTINCT rt1.c0)));
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((0xffffffffd880bd72)==(rt1.c3)))*(ABS(DISTINCT rt1.c0))));
SELECT ALL * FROM rt1, rt0, vt1 WHERE (rt1.c2) ORDER BY ((((0Xffffffffd880bd72)==(rt1.c3)))*(ABS(DISTINCT rt1.c0)));
SELECT * FROM rt0 WHERE (((CAST(0X1beba1f6 AS INTEGER)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0X1beba1f6 AS INTEGER)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)IS NOT(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(0X1beba1f6 AS INTEGER)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0X1beba1f6 AS INTEGER)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)IS NOT(NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(0X1beba1f6 AS INTEGER)) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c1)IS NOT(NULL)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2 COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt1 FULL OUTER JOIN rt0 ON (~ (CAST(rt1.c0 AS INTEGER))) WHERE (((- (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON (~ (CAST(rt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt1 FULL OUTER JOIN rt0 ON (~ (CAST(rt1.c0 AS INTEGER))) WHERE (((- (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON (~ (CAST(rt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1, vt1 FULL OUTER JOIN rt0 ON (~ (CAST(rt1.c0 AS INTEGER))) WHERE (((- (rt1.c1)) IN ()));
SELECT ALL * FROM rt0, rt1 WHERE (load_extension((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension((~ (rt0.c1)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (load_extension((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension((~ (rt0.c1)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((((((((rt1.c3, rt1.c3, NULL, rt1.c3, vt1.c0))>((rt1.c0, rt1.c2, rt1.c2, vt1.c0, rt1.c3))))OR(((((0.7196227935734175)OR(rt1.c3)))AND(vt1.c0)))))AND(((vt1.c0)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, x'49a5')) AND ((NULL, rt1.c2, rt1.c3)))) BETWEEN (((rt1.c1) NOTNULL)) AND ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3, rt1.c3, NULL, rt1.c3, vt1.c0))>((rt1.c0, rt1.c2, rt1.c2, vt1.c0, rt1.c3))))OR(((((0.7196227935734175)OR(rt1.c3)))AND(vt1.c0)))))AND(((vt1.c0)IS NOT(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, x'49a5')) AND ((NULL, rt1.c2, rt1.c3)))) BETWEEN (((rt1.c1) NOTNULL)) AND ((~ (rt1.c0)))));
SELECT ALL * FROM vt1, rt1 WHERE ((((((((rt1.c3, rt1.c3, NULL, rt1.c3, vt1.c0))>((rt1.c0, rt1.c2, rt1.c2, vt1.c0, rt1.c3))))OR(((((0.7196227935734175)OR(rt1.c3)))AND(vt1.c0)))))AND(((vt1.c0)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, x'49a5')) AND ((NULL, rt1.c2, rt1.c3)))) BETWEEN (((rt1.c1) NOTNULL)) AND ((~ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c3, rt1.c3, NULL, rt1.c3, vt1.c0))>((rt1.c0, rt1.c2, rt1.c2, vt1.c0, rt1.c3))))OR(((((0.7196227935734175)OR(rt1.c3)))AND(vt1.c0)))))AND(((vt1.c0)IS NOT(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, x'49a5')) AND ((NULL, rt1.c2, rt1.c3)))) BETWEEN (((rt1.c1) NOTNULL)) AND ((~ (rt1.c0)))));
SELECT ALL * FROM vt1, rt1 WHERE ((((((((rt1.c3, rt1.c3, NULL, rt1.c3, vt1.c0))>((rt1.c0, rt1.c2, rt1.c2, vt1.c0, rt1.c3))))OR(((((0.7196227935734175)OR(rt1.c3)))AND(vt1.c0)))))AND(((vt1.c0)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c0, rt1.c0, rt1.c1)) BETWEEN ((rt1.c0, rt1.c2, x'49a5')) AND ((NULL, rt1.c2, rt1.c3)))) BETWEEN (((rt1.c1) NOTNULL)) AND ((~ (rt1.c0))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (vt1.c0 IN ()) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN ((vt1.c0)LIKE(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c1) IS TRUE) THEN (+ (rt0.c0)) WHEN (~ (rt0.c0)) THEN ((vt1.c0)*(rt0.c1)) ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (vt1.c0 IN ()) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN ((vt1.c0)LIKE(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c1) IS TRUE) THEN (+ (rt0.c0)) WHEN (~ (rt0.c0)) THEN ((vt1.c0)*(rt0.c1)) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (vt1.c0 IN ()) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN ((vt1.c0)LIKE(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c1) IS TRUE) THEN (+ (rt0.c0)) WHEN (~ (rt0.c0)) THEN ((vt1.c0)*(rt0.c1)) ELSE vt1.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (vt1.c0 IN ()) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN ((vt1.c0)LIKE(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c1) IS TRUE) THEN (+ (rt0.c0)) WHEN (~ (rt0.c0)) THEN ((vt1.c0)*(rt0.c1)) ELSE vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END THEN (vt1.c0 IN ()) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c0) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN ((vt1.c0)LIKE(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c1) IS TRUE) THEN (+ (rt0.c0)) WHEN (~ (rt0.c0)) THEN ((vt1.c0)*(rt0.c1)) ELSE vt1.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)) AS TEXT));
SELECT COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (LOWER(rt1.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (LOWER(rt1.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((LOWER(rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 NOT INDEXED WHERE (LOWER(rt1.c2) COLLATE NOCASE);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt0.c0)<=(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt0.c0)<=(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (((((rt0.c0)<=(rt1.c0))) NOT NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)AND(rt0.c2)))AND(rt1.c2)) IN (rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON PRINTF((NOT (rt1.c3))) WHERE (((load_extension(rt0.c0, rt1.c1))OR(((rt0.c2)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0, rt1.c1))OR(((rt0.c2)=(rt1.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)AND(rt0.c2)))AND(rt1.c2)) IN (rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON PRINTF((NOT (rt1.c3))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)AND(rt0.c2)))AND(rt1.c2)) IN (rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON PRINTF((NOT (rt1.c3))) WHERE (((load_extension(rt0.c0, rt1.c1))OR(((rt0.c2)==(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(rt0.c0, rt1.c1))OR(((rt0.c2)=(rt1.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)AND(rt0.c2)))AND(rt1.c2)) IN (rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt1 ON PRINTF((NOT (rt1.c3))));
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'6872') ORDER BY (- (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'6872') IS TRUE)  as count FROM vt1, rt1 ORDER BY (- (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'6872') ORDER BY (- (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'6872') IS TRUE)  as count FROM vt1, rt1 ORDER BY (- (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'6872') ORDER BY (- (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ('k(');
SELECT SUM(count) FROM (SELECT (('k(') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('k(');
SELECT SUM(count) FROM (SELECT (('k(') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('k(');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1)))IS(((rt0.c0)+(''))))) ORDER BY NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, '0.7196227935734175');
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1)))IS(((rt0.c0)+(''))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, '0.7196227935734175'));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1)))IS(((rt0.c0)+(''))))) ORDER BY NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, '0.7196227935734175');
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1)))IS(((rt0.c0)+(''))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, '0.7196227935734175'));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1)))IS(((rt0.c0)+(''))))) ORDER BY NULLIF(DISTINCT rt0.c0 COLLATE NOCASE, '0.7196227935734175');
SELECT COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON ((TRIM(rt1.c3))/((('A様ng麧5<뜥') IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c2 END)%(((((rt0.c1)AND(rt0.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt1.c2 END)%(((((rt0.c1)AND(rt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON ((TRIM(rt1.c3))/((('A様ng麧5<뜥') IS TRUE))));
SELECT COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON ((TRIM(rt1.c3))/((('A様ng麧5<뜥') IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c2 END)%(((((rt0.c1)AND(rt0.c1)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt1.c2 END)%(((((rt0.c1)AND(rt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON ((TRIM(rt1.c3))/((('A様ng麧5<뜥') IS TRUE))));
SELECT COUNT(*) FROM vt1, rt1 FULL OUTER JOIN rt0 ON ((TRIM(rt1.c3))/((('A様ng麧5<뜥') IS TRUE))) WHERE (((CASE WHEN rt0.c2 THEN rt1.c2 END)%(((((rt0.c1)AND(rt0.c1)))AND(rt1.c2)))));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY (NOT (CAST(rt0.c0 AS TEXT))) ASC, (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c0 AS TEXT))) ASC, (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c0)));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY (NOT (CAST(rt0.c0 AS TEXT))) ASC, (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c0));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c0 AS TEXT))) ASC, (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c0)));
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))) ORDER BY (NOT (CAST(rt0.c0 AS TEXT))) ASC, (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN (rt0.c0));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CAST(x'' AS TEXT)))) ORDER BY (~ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (~ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CAST(x'' AS TEXT)))) ORDER BY (~ (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(x'' AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (~ (NULL))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((~ (CAST(x'' AS TEXT)))) ORDER BY (~ (NULL))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN ()));
SELECT ALL * FROM rt1, vt1 WHERE (CASE ((rt1.c2)/(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN TRIM(vt1.c0) END) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CASE ((rt1.c2)/(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN TRIM(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN TRIM(vt1.c0) END) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CASE ((rt1.c2)/(rt1.c1))  WHEN ((rt1.c1) NOTNULL) THEN TRIM(vt1.c0) END);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM vt1, rt0 WHERE ('') ORDER BY (((x'e0c2' COLLATE BINARY, rt0.c0 COLLATE BINARY, (rt0.c1 IN ())))>=((((((rt0.c0)AND(rt0.c2)))AND(600131197)), ((vt1.c0)OR(vt1.c0)), QUOTE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY (((x'e0c2' COLLATE BINARY, rt0.c0 COLLATE BINARY, (rt0.c1 IN ())))>=((((((rt0.c0)AND(rt0.c2)))AND(600131197)), ((vt1.c0)OR(vt1.c0)), QUOTE(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ('') ORDER BY (((x'e0c2' COLLATE BINARY, rt0.c0 COLLATE BINARY, (rt0.c1 IN ())))>=((((((rt0.c0)AND(rt0.c2)))AND(600131197)), ((vt1.c0)OR(vt1.c0)), QUOTE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY (((x'e0c2' COLLATE BINARY, rt0.c0 COLLATE BINARY, (rt0.c1 IN ())))>=((((((rt0.c0)AND(rt0.c2)))AND(600131197)), ((vt1.c0)OR(vt1.c0)), QUOTE(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ('') ORDER BY (((x'e0c2' COLLATE BINARY, rt0.c0 COLLATE BINARY, (rt0.c1 IN ())))>=((((((rt0.c0)AND(rt0.c2)))AND(600131197)), ((vt1.c0)OR(vt1.c0)), QUOTE(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOT NULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)GLOB(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOT NULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c0)GLOB(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT NULL)) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (COALESCE(DISTINCT LIKELIHOOD(rt1.c0, 0.9817493620480813), NULL));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT LIKELIHOOD(rt1.c0, 0.9817493620480813), NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (COALESCE(DISTINCT LIKELIHOOD(rt1.c0, 0.9817493620480813), NULL));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT LIKELIHOOD(rt1.c0, 0.9817493620480813), NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (COALESCE(DISTINCT LIKELIHOOD(rt1.c0, 0.9817493620480813), NULL));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0xffffffff99b3a8ce WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0xffffffff99b3a8ce WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0xffffffff99b3a8ce WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0xffffffff99b3a8ce WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN ((rt0.c2 IN (rt0.c1))) AND (CASE WHEN rt0.c2 THEN 0xffffffff99b3a8ce WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)) WHERE (rt0.c2);
SELECT ALL * FROM rt1 WHERE ((((('')<=(rt1.c2))) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')<=(rt1.c2))) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((('')<=(rt1.c2))) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END) AND ((NOT (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('')<=(rt1.c2))) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END) AND ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((('')<=(rt1.c2))) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END) AND ((NOT (rt1.c0)))));
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST((((rt1.c1))<((rt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))<((rt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST((((rt1.c1))<((rt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))<((rt1.c0))) AS REAL)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CAST((((rt1.c1))<((rt1.c0))) AS REAL));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (json_remove(0.39301713365108315, ((((rt0.c2)AND(NULL)))OR(rt0.c1)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((json_remove(0.39301713365108315, ((((rt0.c2)AND(NULL)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY rt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (json_remove(0.39301713365108315, ((((rt0.c2)AND(NULL)))OR(rt0.c1)))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((json_remove(0.39301713365108315, ((((rt0.c2)AND(NULL)))OR(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt1.c1) IS FALSE))AND(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) IS FALSE))AND(rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt1.c1) IS FALSE))AND(rt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c1) IS FALSE))AND(rt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt1.c1) IS FALSE))AND(rt0.c0))  NULLS FIRST;
SELECT * FROM rt0, rt1, vt1 WHERE (((PRINTF(rt0.c2))OR((((rt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c2))OR((((rt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((PRINTF(rt0.c2))OR((((rt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c2))OR((((rt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((PRINTF(rt0.c2))OR((((rt1.c0))>((vt1.c0))))));
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT * FROM rt1, vt1, rt0 WHERE ('!\') ORDER BY ((((((((x'')OR(CAST(rt1.c1 AS INTEGER))))OR(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c1, rt1.c1, rt1.c2))>=((rt1.c0, vt1.c0, rt1.c3)))));
SELECT SUM(count) FROM (SELECT (('!\') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((((x'')OR(CAST(rt1.c1 AS INTEGER))))OR(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c1, rt1.c1, rt1.c2))>=((rt1.c0, vt1.c0, rt1.c3))))));
SELECT * FROM rt1, vt1, rt0 WHERE ('!\') ORDER BY ((((((((x'')OR(CAST(rt1.c1 AS INTEGER))))OR(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c1, rt1.c1, rt1.c2))>=((rt1.c0, vt1.c0, rt1.c3)))));
SELECT SUM(count) FROM (SELECT (('!\') IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY ((((((((x'')OR(CAST(rt1.c1 AS INTEGER))))OR(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c1, rt1.c1, rt1.c2))>=((rt1.c0, vt1.c0, rt1.c3))))));
SELECT * FROM rt1, vt1, rt0 WHERE ('!\') ORDER BY ((((((((x'')OR(CAST(rt1.c1 AS INTEGER))))OR(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c1, rt1.c1, rt1.c2))>=((rt1.c0, vt1.c0, rt1.c3)))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS INTEGER))AND(((((NULL)AND(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON ((rt1.c0) BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS INTEGER))AND(((((NULL)AND(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON ((rt1.c0) BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS INTEGER))AND(((((NULL)AND(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON ((rt1.c0) BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS INTEGER))AND(((((NULL)AND(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON ((rt1.c0) BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c0)OR(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((((CAST(rt1.c2 AS INTEGER))AND(((((NULL)AND(rt1.c3)))AND(rt1.c2)))))OR(CAST(rt0.c0 AS NUMERIC))) LEFT OUTER JOIN vt1 ON ((rt1.c0) BETWEEN (((rt1.c3)>(rt0.c2))) AND (((((rt1.c0)OR(rt0.c0)))OR(rt0.c0)))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((rt1.c0)==(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) IS FALSE)  WHEN ((rt1.c0)==(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((rt1.c0)==(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) IS FALSE)  WHEN ((rt1.c0)==(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CASE ((rt1.c2) IS FALSE)  WHEN ((rt1.c0)==(rt0.c2)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((rt0.c2)LIKE(rt0.c0))) AND (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c3))) IS TRUE)) ORDER BY CASE WHEN ((rt1.c3)GLOB(rt1.c3)) THEN CAST(0.6746323083722935 AS NUMERIC) WHEN (+ (rt1.c1)) THEN (rt1.c0 IN (-417751385)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) THEN LOWER(rt1.c1) END ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c3)GLOB(rt1.c3)) THEN CAST(0.6746323083722935 AS NUMERIC) WHEN (+ (rt1.c1)) THEN (rt1.c0 IN (-417751385)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) THEN LOWER(rt1.c1) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c3))) IS TRUE)) ORDER BY CASE WHEN ((rt1.c3)GLOB(rt1.c3)) THEN CAST(0.6746323083722935 AS NUMERIC) WHEN (+ (rt1.c1)) THEN (rt1.c0 IN (-417751385)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) THEN LOWER(rt1.c1) END ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c3)GLOB(rt1.c3)) THEN CAST(0.6746323083722935 AS NUMERIC) WHEN (+ (rt1.c1)) THEN (rt1.c0 IN (-417751385)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) THEN LOWER(rt1.c1) END ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((- (rt1.c3))) IS TRUE)) ORDER BY CASE WHEN ((rt1.c3)GLOB(rt1.c3)) THEN CAST(0.6746323083722935 AS NUMERIC) WHEN (+ (rt1.c1)) THEN (rt1.c0 IN (-417751385)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) THEN LOWER(rt1.c1) END ASC;
SELECT * FROM rt1 WHERE (((((NULL)/(rt1.c1)))+((((rt1.c2)) BETWEEN ((rt1.c0)) AND (('-1843506654')))))) ORDER BY CASE WHEN LIKELY(DISTINCT x'') THEN rt1.c1 COLLATE RTRIM ELSE rt1.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(rt1.c1)))+((((rt1.c2)) BETWEEN ((rt1.c0)) AND (('-1843506654')))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN LIKELY(DISTINCT x'') THEN rt1.c1 COLLATE RTRIM ELSE rt1.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((NULL)/(rt1.c1)))+((((rt1.c2)) BETWEEN ((rt1.c0)) AND (('-1843506654')))))) ORDER BY CASE WHEN LIKELY(DISTINCT x'') THEN rt1.c1 COLLATE RTRIM ELSE rt1.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)/(rt1.c1)))+((((rt1.c2)) BETWEEN ((rt1.c0)) AND (('-1843506654')))))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN LIKELY(DISTINCT x'') THEN rt1.c1 COLLATE RTRIM ELSE rt1.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT * FROM rt1 WHERE (((((NULL)/(rt1.c1)))+((((rt1.c2)) BETWEEN ((rt1.c0)) AND (('-1843506654')))))) ORDER BY CASE WHEN LIKELY(DISTINCT x'') THEN rt1.c1 COLLATE RTRIM ELSE rt1.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((((2141290576, rt1.c2, x''))!=((rt0.c2, rt0.c1, vt1.c0)))))<=((((rt1.c0) IS TRUE)))) WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((((2141290576, rt1.c2, x''))!=((rt0.c2, rt0.c1, vt1.c0)))))<=((((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((((2141290576, rt1.c2, x''))!=((rt0.c2, rt0.c1, vt1.c0)))))<=((((rt1.c0) IS TRUE)))) WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((((2141290576, rt1.c2, x''))!=((rt0.c2, rt0.c1, vt1.c0)))))<=((((rt1.c0) IS TRUE)))) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON ((((((2141290576, rt1.c2, x''))!=((rt0.c2, rt0.c1, vt1.c0)))))<=((((rt1.c0) IS TRUE)))) WHERE (TRIM((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))) ORDER BY ((rt1.c1) NOT NULL) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN vt1 ON ((0.20957096720163504)OR(vt1.c0)) COLLATE RTRIM WHERE (((rt0.c0) NOT BETWEEN (json_remove(rt0.c2, vt1.c0)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (json_remove(rt0.c2, vt1.c0)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((0.20957096720163504)OR(vt1.c0)) COLLATE RTRIM);
SELECT * FROM rt0 CROSS JOIN vt1 ON ((0.20957096720163504)OR(vt1.c0)) COLLATE RTRIM WHERE (((rt0.c0) NOT BETWEEN (json_remove(rt0.c2, vt1.c0)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (json_remove(rt0.c2, vt1.c0)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((0.20957096720163504)OR(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END)AND(rt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))))) ORDER BY CAST(((vt1.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST, vt1.c0, ((((rt1.c1) IS TRUE))IS NOT(((rt1.c0)IS(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END)AND(rt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST, vt1.c0, ((((rt1.c1) IS TRUE))IS NOT(((rt1.c0)IS(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END)AND(rt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))))) ORDER BY CAST(((vt1.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST, vt1.c0, ((((rt1.c1) IS TRUE))IS NOT(((rt1.c0)IS(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END)AND(rt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((vt1.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST, vt1.c0, ((((rt1.c1) IS TRUE))IS NOT(((rt1.c0)IS(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (((((CASE rt1.c1  WHEN vt1.c0 THEN rt1.c0 ELSE NULL END)AND(rt1.c0 COLLATE RTRIM)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c0))))) ORDER BY CAST(((vt1.c0) NOTNULL) AS NUMERIC) ASC  NULLS FIRST, vt1.c0, ((((rt1.c1) IS TRUE))IS NOT(((rt1.c0)IS(vt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)GLOB(rt0.c2))) WHERE (((0.3841707456006558)>=(json_insert(rt0.c1, vt1.c0, rt0.c2)))) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3841707456006558)>=(json_insert(rt0.c1, vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)GLOB(rt0.c2))) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)  NULLS FIRST);
SELECT * FROM vt1 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)GLOB(rt0.c2))) WHERE (((0.3841707456006558)>=(json_insert(rt0.c1, vt1.c0, rt0.c2)))) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3841707456006558)>=(json_insert(rt0.c1, vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c1)GLOB(rt0.c2))) ORDER BY ABS(DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))))) ORDER BY ((NOT (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>(((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))))) ORDER BY ((NOT (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1))>(((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY ((NOT (rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1))>(((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c2))))))) ORDER BY ((NOT (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((((((rt1.c3, rt1.c2, rt1.c1))=((x'', rt1.c3, rt1.c0))))AND(json_remove(rt1.c2, rt1.c1))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) WHERE ((((vt1.c0 IN ()))+((NOT (rt1.c0))))) ORDER BY (((((rt1.c2))>=((vt1.c0)))) NOT BETWEEN (((vt1.c0)/(rt1.c3))) AND (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((((((rt1.c3, rt1.c2, rt1.c1))==((x'', rt1.c3, rt1.c0))))AND(json_remove(rt1.c2, rt1.c1))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY (((((rt1.c2))>=((vt1.c0)))) NOT BETWEEN (((vt1.c0)/(rt1.c3))) AND (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((((((rt1.c3, rt1.c2, rt1.c1))=((x'', rt1.c3, rt1.c0))))AND(json_remove(rt1.c2, rt1.c1))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) WHERE ((((vt1.c0 IN ()))+((NOT (rt1.c0))))) ORDER BY (((((rt1.c2))>=((vt1.c0)))) NOT BETWEEN (((vt1.c0)/(rt1.c3))) AND (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((((((rt1.c3, rt1.c2, rt1.c1))==((x'', rt1.c3, rt1.c0))))AND(json_remove(rt1.c2, rt1.c1))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) ORDER BY (((((rt1.c2))>=((vt1.c0)))) NOT BETWEEN (((vt1.c0)/(rt1.c3))) AND (vt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON (((((((rt1.c3, rt1.c2, rt1.c1))=((x'', rt1.c3, rt1.c0))))AND(json_remove(rt1.c2, rt1.c1))))OR(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END)) WHERE ((((vt1.c0 IN ()))+((NOT (rt1.c0))))) ORDER BY (((((rt1.c2))>=((vt1.c0)))) NOT BETWEEN (((vt1.c0)/(rt1.c3))) AND (vt1.c0 COLLATE BINARY));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))%(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (CAST('V' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('V' AS REAL)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))%(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))%(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (CAST('V' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('V' AS REAL)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))%(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))%(((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (CAST('V' AS REAL));
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON x'3f4f' WHERE (((CAST(rt1.c2 AS NUMERIC))||((((rt1.c3))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC))||((((rt1.c3))>=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON x'3f4f');
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON x'3f4f' WHERE (((CAST(rt1.c2 AS NUMERIC))||((((rt1.c3))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC))||((((rt1.c3))>=((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON x'3f4f');
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN rt1 ON x'3f4f' WHERE (((CAST(rt1.c2 AS NUMERIC))||((((rt1.c3))>=((rt0.c2))))));
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>=(vt1.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c1))<=((rt0.c0))))<>((((vt1.c0, rt0.c0, rt0.c1))>((vt1.c0, rt0.c0, 2.082000851E9))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))<=((rt0.c0))))<>((((vt1.c0, rt0.c0, rt0.c1))>((vt1.c0, rt0.c0, 2.082000851E9))))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>=(vt1.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c1))<=((rt0.c0))))<>((((vt1.c0, rt0.c0, rt0.c1))>((vt1.c0, rt0.c0, 2.082000851E9))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>=(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1))<=((rt0.c0))))<>((((vt1.c0, rt0.c0, rt0.c1))>((vt1.c0, rt0.c0, 2.082000851E9))))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>=(vt1.c0)) COLLATE RTRIM) ORDER BY (((((rt0.c1))<=((rt0.c0))))<>((((vt1.c0, rt0.c0, rt0.c1))>((vt1.c0, rt0.c0, 2.082000851E9))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((('mb	㸀')) BETWEEN (('147933297')) AND ((((rt0.c2)=(rt1.c2)))))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((('mb	㸀')) BETWEEN (('147933297')) AND ((((rt0.c2)==(rt1.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((('mb	㸀')) BETWEEN (('147933297')) AND ((((rt0.c2)=(rt1.c2)))))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((('mb	㸀')) BETWEEN (('147933297')) AND ((((rt0.c2)==(rt1.c2)))))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((('mb	㸀')) BETWEEN (('147933297')) AND ((((rt0.c2)=(rt1.c2)))))) ORDER BY (((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) DESC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)LIKE(vt1.c0)))>>(vt1.c0 COLLATE NOCASE)) WHERE (('-1950981176' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1950981176' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)LIKE(vt1.c0)))>>(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)LIKE(vt1.c0)))>>(vt1.c0 COLLATE NOCASE)) WHERE (('-1950981176' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1950981176' COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)LIKE(vt1.c0)))>>(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON ((((rt1.c0)LIKE(vt1.c0)))>>(vt1.c0 COLLATE NOCASE)) WHERE (('-1950981176' COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('5[d\nJ,jI') ISNULL)) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN '-1063013266' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('5[d\nJ,jI') ISNULL)) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN '-1063013266' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('5[d\nJ,jI') ISNULL)) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN '-1063013266' ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('5[d\nJ,jI') ISNULL)) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN '-1063013266' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('5[d\nJ,jI') ISNULL)) NOT BETWEEN ((+ (rt0.c2))) AND (CASE rt0.c1  WHEN rt0.c1 THEN '-1063013266' ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<<(CAST(rt0.c2 AS TEXT)))) ORDER BY MAX(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c1)||(rt1.c2)), ((vt1.c0) IS FALSE), ((((vt1.c0)AND(rt1.c0)))OR(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<<(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY MAX(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c1)||(rt1.c2)), ((vt1.c0) IS FALSE), ((((vt1.c0)AND(rt1.c0)))OR(rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<<(CAST(rt0.c2 AS TEXT)))) ORDER BY MAX(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c1)||(rt1.c2)), ((vt1.c0) IS FALSE), ((((vt1.c0)AND(rt1.c0)))OR(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT vt1.c0))<<(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY MAX(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c1)||(rt1.c2)), ((vt1.c0) IS FALSE), ((((vt1.c0)AND(rt1.c0)))OR(rt0.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (((LOWER(DISTINCT vt1.c0))<<(CAST(rt0.c2 AS TEXT)))) ORDER BY MAX(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c1)||(rt1.c2)), ((vt1.c0) IS FALSE), ((((vt1.c0)AND(rt1.c0)))OR(rt0.c1)))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(NULL)))AND(rt1.c3))) IS TRUE)) ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((0.424307982733124)) AND ((rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(NULL)))AND(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((0.424307982733124)) AND ((rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(NULL)))AND(rt1.c3))) IS TRUE)) ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((0.424307982733124)) AND ((rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)OR(NULL)))AND(rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((0.424307982733124)) AND ((rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE (((((((rt1.c1)OR(NULL)))AND(rt1.c3))) IS TRUE)) ORDER BY ((rt1.c3 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND ((((rt1.c2)) NOT BETWEEN ((0.424307982733124)) AND ((rt1.c1))))) ASC;
SELECT ALL * FROM rt1, vt1 WHERE (((((rt1.c0)>=(rt1.c0)))<<(((rt1.c1) ISNULL)))) ORDER BY IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt1.c0) AND (x'')), (rt1.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c0)))<<(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt1.c0) AND (x'')), (rt1.c2 IN ()))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((((rt1.c0)>=(rt1.c0)))<<(((rt1.c1) ISNULL)))) ORDER BY IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt1.c0) AND (x'')), (rt1.c2 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>=(rt1.c0)))<<(((rt1.c1) ISNULL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt1.c0) AND (x'')), (rt1.c2 IN ()))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((((rt1.c0)>=(rt1.c0)))<<(((rt1.c1) ISNULL)))) ORDER BY IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt1.c0) AND (x'')), (rt1.c2 IN ()))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 IN ()) IN ())) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((rt0.c1 IN (rt0.c1, rt1.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 IN ()) IN ())) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST((rt0.c1 IN (rt0.c1, rt1.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt1.c2 IN ()) IN ())) ORDER BY CAST((rt0.c1 IN (rt0.c1, rt1.c0)) AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (LOWER(LIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELY(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(LIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LIKELY(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(LIKELY(vt1.c0)));
SELECT ALL * FROM rt0 WHERE (((x'')IS(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(((rt0.c2)==(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((x'')IS(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(((rt0.c2)==(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((x'')IS(((rt0.c2)==(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS NUMERIC) IN ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY (((~ (rt0.c1)))>=(1.092745354E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1, rt0 NOT INDEXED ORDER BY (((~ (rt0.c1)))>=(1.092745354E9)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY (((~ (rt0.c1)))>=(1.092745354E9)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1, rt0 NOT INDEXED ORDER BY (((~ (rt0.c1)))>=(1.092745354E9)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CAST((NOT (rt0.c0)) AS NUMERIC)) ORDER BY (((~ (rt0.c1)))>=(1.092745354E9)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)OR(rt1.c2)) COLLATE BINARY WHERE (HEX(DISTINCT CAST(rt1.c1 AS REAL))) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt1.c1 AS REAL))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)OR(rt1.c2)) COLLATE BINARY ORDER BY (rt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)OR(rt1.c2)) COLLATE BINARY WHERE (HEX(DISTINCT CAST(rt1.c1 AS REAL))) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(rt1.c1 AS REAL))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)OR(rt1.c2)) COLLATE BINARY ORDER BY (rt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c0)OR(rt1.c2)) COLLATE BINARY WHERE (HEX(DISTINCT CAST(rt1.c1 AS REAL))) ORDER BY (rt1.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (((rt1.c1) NOTNULL)))) ORDER BY (((((NULL IN ()))AND(CASE WHEN '2082000851' THEN vt1.c0 END)))OR(TYPEOF(rt1.c3))) ASC, (- (ABS(DISTINCT rt1.c3)))  NULLS LAST, SQLITE_COMPILEOPTION_GET(rt1.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((NULL IN ()))AND(CASE WHEN '2082000851' THEN vt1.c0 END)))OR(TYPEOF(rt1.c3))) ASC, (- (ABS(DISTINCT rt1.c3)))  NULLS LAST, SQLITE_COMPILEOPTION_GET(rt1.c0 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (((rt1.c1) NOTNULL)))) ORDER BY (((((NULL IN ()))AND(CASE WHEN '2082000851' THEN vt1.c0 END)))OR(TYPEOF(rt1.c3))) ASC, (- (ABS(DISTINCT rt1.c3)))  NULLS LAST, SQLITE_COMPILEOPTION_GET(rt1.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((NULL IN ()))AND(CASE WHEN '2082000851' THEN vt1.c0 END)))OR(TYPEOF(rt1.c3))) ASC, (- (ABS(DISTINCT rt1.c3)))  NULLS LAST, SQLITE_COMPILEOPTION_GET(rt1.c0 COLLATE BINARY) ASC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((+ (((rt1.c1) NOTNULL)))) ORDER BY (((((NULL IN ()))AND(CASE WHEN '2082000851' THEN vt1.c0 END)))OR(TYPEOF(rt1.c3))) ASC, (- (ABS(DISTINCT rt1.c3)))  NULLS LAST, SQLITE_COMPILEOPTION_GET(rt1.c0 COLLATE BINARY) ASC;
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS INTEGER), 0.18876393524897894)) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))>((0.42977293452712606 IN (rt1.c1, rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c3 AS INTEGER), 0.18876393524897894)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))>((0.42977293452712606 IN (rt1.c1, rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS INTEGER), 0.18876393524897894)) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))>((0.42977293452712606 IN (rt1.c1, rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt1.c3 AS INTEGER), 0.18876393524897894)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))>((0.42977293452712606 IN (rt1.c1, rt1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (LIKELIHOOD(DISTINCT CAST(rt1.c3 AS INTEGER), 0.18876393524897894)) ORDER BY ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))>((0.42977293452712606 IN (rt1.c1, rt1.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (json_insert(CAST(rt1.c3 AS REAL), rt1.c2, x'')) ORDER BY ((((CAST(rt1.c0 AS BLOB))AND(CASE WHEN rt1.c0 THEN NULL ELSE '-1556892557' END)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((rt1.c3))!=((x'')))  NULLS LAST, (((rt1.c1) ISNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(rt1.c3 AS REAL), rt1.c2, x'')) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((CAST(rt1.c0 AS BLOB))AND(CASE WHEN rt1.c0 THEN NULL ELSE '-1556892557' END)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((rt1.c3))<>((x'')))  NULLS LAST, (((rt1.c1) ISNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (json_insert(CAST(rt1.c3 AS REAL), rt1.c2, x'')) ORDER BY ((((CAST(rt1.c0 AS BLOB))AND(CASE WHEN rt1.c0 THEN NULL ELSE '-1556892557' END)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((rt1.c3))!=((x'')))  NULLS LAST, (((rt1.c1) ISNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(CAST(rt1.c3 AS REAL), rt1.c2, x'')) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((CAST(rt1.c0 AS BLOB))AND(CASE WHEN rt1.c0 THEN NULL ELSE '-1556892557' END)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((rt1.c3))<>((x'')))  NULLS LAST, (((rt1.c1) ISNULL) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (json_insert(CAST(rt1.c3 AS REAL), rt1.c2, x'')) ORDER BY ((((CAST(rt1.c0 AS BLOB))AND(CASE WHEN rt1.c0 THEN NULL ELSE '-1556892557' END)))AND(vt1.c0 COLLATE BINARY)) ASC  NULLS LAST, (((rt1.c3))!=((x'')))  NULLS LAST, (((rt1.c1) ISNULL) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c2)%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c2)%(rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c2)%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c2)%(rt1.c2)))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((rt1.c3)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c2)%(rt1.c2))))));
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY TYPEOF(rt1.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(rt1.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY TYPEOF(rt1.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY TYPEOF(rt1.c0) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (x'') ORDER BY TYPEOF(rt1.c0) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE ((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((((((((rt1.c3)OR(rt0.c2)))AND(rt0.c2)))AND(rt1.c2)))AND(rt1.c0)) IN ()));
SELECT * FROM rt1, vt1 WHERE ((((rt1.c3 IN ()))+(((((rt1.c0)OR(NULL)))AND(vt1.c0))))) ORDER BY HEX(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ()))+(((((rt1.c0)OR(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY HEX(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c3 IN ()))+(((((rt1.c0)OR(NULL)))AND(vt1.c0))))) ORDER BY HEX(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ()))+(((((rt1.c0)OR(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY HEX(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((rt1.c3 IN ()))+(((((rt1.c0)OR(NULL)))AND(vt1.c0))))) ORDER BY HEX(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (rt1.c1)));
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((rt0.c0)OR(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE CAST(856338923 AS INTEGER)  WHEN (rt0.c2 IN (rt0.c2, rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) END WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE CAST(856338923 AS INTEGER)  WHEN (rt0.c2 IN (rt0.c2, rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE CAST(856338923 AS INTEGER)  WHEN (rt0.c2 IN (rt0.c2, rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) END WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE CAST(856338923 AS INTEGER)  WHEN (rt0.c2 IN (rt0.c2, rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON CASE CAST(856338923 AS INTEGER)  WHEN (rt0.c2 IN (rt0.c2, rt1.c0)) THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2)) END WHERE (CAST(((rt0.c2) ISNULL) AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE (CAST(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)) AS BLOB)) ORDER BY ((rt1.c0) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2)|(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ORDER BY ((rt1.c0) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2)|(rt1.c3)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE (CAST(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)) AS BLOB)) ORDER BY ((rt1.c0) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2)|(rt1.c3))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) ORDER BY ((rt1.c0) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2)|(rt1.c3)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt1 ON ((CAST(rt1.c2 AS TEXT))OR(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))) WHERE (CAST(((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c3)))OR(rt1.c1)))OR(rt1.c2)) AS BLOB)) ORDER BY ((rt1.c0) BETWEEN ((rt1.c3 IN ())) AND (((rt1.c2)|(rt1.c3))));
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c3)|(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c3)|(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c3)|(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c3)|(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c3)|(rt1.c1))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((NOT (rt1.c3))) IS FALSE) RIGHT OUTER JOIN rt1 ON (((((NOT (rt0.c0)))AND(((rt1.c2)/(rt1.c2)))))OR(((rt1.c0) ISNULL))) WHERE (((QUOTE(vt1.c0)) BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (CAST(x'c49b' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt1.c0)) BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (CAST(x'c49b' AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((NOT (rt1.c3))) IS FALSE) RIGHT OUTER JOIN rt1 ON (((((NOT (rt0.c0)))AND(((rt1.c2)/(rt1.c2)))))OR(((rt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (((NOT (rt1.c3))) IS FALSE) RIGHT OUTER JOIN rt1 ON (((((NOT (rt0.c0)))AND(((rt1.c2)/(rt1.c2)))))OR(((rt1.c0) ISNULL))) WHERE (((QUOTE(vt1.c0)) BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (CAST(x'c49b' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((QUOTE(vt1.c0)) BETWEEN (CASE WHEN rt1.c1 THEN vt1.c0 END) AND (CAST(x'c49b' AS INTEGER)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((NOT (rt1.c3))) IS FALSE) RIGHT OUTER JOIN rt1 ON (((((NOT (rt0.c0)))AND(((rt1.c2)/(rt1.c2)))))OR(((rt1.c0) ISNULL))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (NULL IN (((((rt0.c2)OR('-1709857461')))AND(rt0.c1)), vt1.c0 COLLATE RTRIM)) WHERE (CASE 0.7696373605902141  WHEN rt0.c0 THEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (+ ('')) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) ELSE ((NULL)=(rt0.c0)) END) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM, CASE WHEN ((((vt1.c0)OR(0.952053561506859)))OR(vt1.c0)) THEN (((rt0.c1))<=((rt0.c1))) WHEN ((rt0.c1)|('-234045288')) THEN (+ (rt0.c0)) WHEN HEX(vt1.c0) THEN ((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.33948677920337744) BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST, (((((((rt0.c1)OR(vt1.c0)))OR(NULL))))==((rt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.7696373605902141  WHEN rt0.c0 THEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (+ ('')) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) ELSE ((NULL)=(rt0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (NULL IN (((((rt0.c2)OR('-1709857461')))AND(rt0.c1)), vt1.c0 COLLATE RTRIM)) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM, CASE WHEN ((((vt1.c0)OR(0.952053561506859)))OR(vt1.c0)) THEN (((rt0.c1))<=((rt0.c1))) WHEN ((rt0.c1)|('-234045288')) THEN (+ (rt0.c0)) WHEN HEX(vt1.c0) THEN ((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.33948677920337744) BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST, (((((((rt0.c1)OR(vt1.c0)))OR(NULL))))=((rt0.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (NULL IN (((((rt0.c2)OR('-1709857461')))AND(rt0.c1)), vt1.c0 COLLATE RTRIM)) WHERE (CASE 0.7696373605902141  WHEN rt0.c0 THEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (+ ('')) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) ELSE ((NULL)=(rt0.c0)) END) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM, CASE WHEN ((((vt1.c0)OR(0.952053561506859)))OR(vt1.c0)) THEN (((rt0.c1))<=((rt0.c1))) WHEN ((rt0.c1)|('-234045288')) THEN (+ (rt0.c0)) WHEN HEX(vt1.c0) THEN ((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.33948677920337744) BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST, (((((((rt0.c1)OR(vt1.c0)))OR(NULL))))==((rt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 0.7696373605902141  WHEN rt0.c0 THEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (+ ('')) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) ELSE ((NULL)=(rt0.c0)) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (NULL IN (((((rt0.c2)OR('-1709857461')))AND(rt0.c1)), vt1.c0 COLLATE RTRIM)) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM, CASE WHEN ((((vt1.c0)OR(0.952053561506859)))OR(vt1.c0)) THEN (((rt0.c1))<=((rt0.c1))) WHEN ((rt0.c1)|('-234045288')) THEN (+ (rt0.c0)) WHEN HEX(vt1.c0) THEN ((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.33948677920337744) BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST, (((((((rt0.c1)OR(vt1.c0)))OR(NULL))))=((rt0.c0 COLLATE BINARY))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (NULL IN (((((rt0.c2)OR('-1709857461')))AND(rt0.c1)), vt1.c0 COLLATE RTRIM)) WHERE (CASE 0.7696373605902141  WHEN rt0.c0 THEN ((x'') BETWEEN (vt1.c0) AND (rt0.c2)) WHEN (+ ('')) THEN CAST(vt1.c0 AS NUMERIC) WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c2) IS TRUE) ELSE ((NULL)=(rt0.c0)) END) ORDER BY COALESCE(rt0.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM, CASE WHEN ((((vt1.c0)OR(0.952053561506859)))OR(vt1.c0)) THEN (((rt0.c1))<=((rt0.c1))) WHEN ((rt0.c1)|('-234045288')) THEN (+ (rt0.c0)) WHEN HEX(vt1.c0) THEN ((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)) ELSE ((0.33948677920337744) BETWEEN (rt0.c2) AND (rt0.c2)) END  NULLS FIRST, (((((((rt0.c1)OR(vt1.c0)))OR(NULL))))==((rt0.c0 COLLATE BINARY))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (PRINTF(((rt0.c1) ISNULL), NULL, vt1.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0 IN ()), NULL, ((rt0.c1) NOTNULL)))=((ABS(rt0.c0), ((x'')AND(0.3387742376573186)), (((x''))<>((vt1.c0)))))) ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c1) ISNULL), NULL, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0 IN ()), NULL, ((rt0.c1) NOTNULL)))==((ABS(rt0.c0), ((x'')AND(0.3387742376573186)), (((x''))<>((vt1.c0)))))) ASC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (PRINTF(((rt0.c1) ISNULL), NULL, vt1.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0 IN ()), NULL, ((rt0.c1) NOTNULL)))=((ABS(rt0.c0), ((x'')AND(0.3387742376573186)), (((x''))<>((vt1.c0)))))) ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((rt0.c1) ISNULL), NULL, vt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0 IN ()), NULL, ((rt0.c1) NOTNULL)))==((ABS(rt0.c0), ((x'')AND(0.3387742376573186)), (((x''))<>((vt1.c0)))))) ASC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (PRINTF(((rt0.c1) ISNULL), NULL, vt1.c0 COLLATE NOCASE)) ORDER BY ((((rt0.c0 IN ()), NULL, ((rt0.c1) NOTNULL)))=((ABS(rt0.c0), ((x'')AND(0.3387742376573186)), (((x''))<>((vt1.c0)))))) ASC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))+(x'f8d50e24')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0)))+(x'f8d50e24'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))+(x'f8d50e24')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0)))+(x'f8d50e24'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0)))+(x'f8d50e24')));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (0.3483262356059442))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (0.3483262356059442))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (0.3483262356059442))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (0.3483262356059442))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (vt1.c0) AND (0.3483262356059442))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS BLOB))<(x'0bbd'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<(x'0bbd'))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS BLOB))<(x'0bbd'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))<(x'0bbd'))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS BLOB))<(x'0bbd'))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (NOT (2.000508063E9)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((((((rt0.c2)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY ((0.0)>>(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (NOT (2.000508063E9)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE ORDER BY ((0.0)>>(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (NOT (2.000508063E9)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((((((rt0.c2)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY ((0.0)>>(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (NOT (2.000508063E9)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE ORDER BY ((0.0)>>(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (NOT (2.000508063E9)) FULL OUTER JOIN vt1 ON CAST(vt1.c0 AS BLOB) COLLATE NOCASE WHERE (((((((rt0.c2)OR(rt1.c1)))AND(rt1.c0))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY ((0.0)>>(rt0.c2)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((((rt1.c3))<>((vt1.c0))))<=(CAST(rt1.c3 AS TEXT))) WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN 2082000851 ELSE ((vt1.c0)LIKE(rt1.c3)) END) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((rt1.c3)) BETWEEN (((((vt1.c0))>=((rt1.c3))))) AND ((TRIM(DISTINCT rt1.c1, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN 2082000851 ELSE ((vt1.c0)LIKE(rt1.c3)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((((rt1.c3))<>((vt1.c0))))<=(CAST(rt1.c3 AS TEXT))) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((rt1.c3)) BETWEEN (((((vt1.c0))>=((rt1.c3))))) AND ((TRIM(DISTINCT rt1.c1, vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((((rt1.c3))<>((vt1.c0))))<=(CAST(rt1.c3 AS TEXT))) WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN 2082000851 ELSE ((vt1.c0)LIKE(rt1.c3)) END) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((rt1.c3)) BETWEEN (((((vt1.c0))>=((rt1.c3))))) AND ((TRIM(DISTINCT rt1.c1, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c3 COLLATE BINARY THEN 2082000851 ELSE ((vt1.c0)LIKE(rt1.c3)) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (((((rt1.c3))<>((vt1.c0))))<=(CAST(rt1.c3 AS TEXT))) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((rt1.c3)) BETWEEN (((((vt1.c0))>=((rt1.c3))))) AND ((TRIM(DISTINCT rt1.c1, vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (((((rt1.c3))<>((vt1.c0))))<=(CAST(rt1.c3 AS TEXT))) WHERE (CASE WHEN rt1.c3 COLLATE BINARY THEN 2082000851 ELSE ((vt1.c0)LIKE(rt1.c3)) END) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((rt1.c3)) BETWEEN (((((vt1.c0))>=((rt1.c3))))) AND ((TRIM(DISTINCT rt1.c1, vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '{GFPv7#}'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '{GFPv7#}'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '{GFPv7#}'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '{GFPv7#}'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '{GFPv7#}'  NULLS LAST, CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c0)) COLLATE RTRIM) ORDER BY ((1610011108) BETWEEN (rt0.c2) AND (((NULL)-(rt0.c1))))  NULLS LAST, ((((vt1.c0)AND(rt0.c2 COLLATE RTRIM)))AND((rt0.c1 IN ()))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((1610011108) BETWEEN (rt0.c2) AND (((NULL)-(rt0.c1))))  NULLS LAST, ((((vt1.c0)AND(rt0.c2 COLLATE RTRIM)))AND((rt0.c1 IN ()))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c0)) COLLATE RTRIM) ORDER BY ((1610011108) BETWEEN (rt0.c2) AND (((NULL)-(rt0.c1))))  NULLS LAST, ((((vt1.c0)AND(rt0.c2 COLLATE RTRIM)))AND((rt0.c1 IN ()))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((1610011108) BETWEEN (rt0.c2) AND (((NULL)-(rt0.c1))))  NULLS LAST, ((((vt1.c0)AND(rt0.c2 COLLATE RTRIM)))AND((rt0.c1 IN ()))) ASC  NULLS LAST, SQLITE_COMPILEOPTION_USED((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c0)>>(rt1.c3)) THEN 0X361c1495 WHEN TRIM(DISTINCT rt1.c0, rt1.c0) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN JULIANDAY(rt0.c2, rt1.c1, rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY x'', CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'5e554445' WHEN 0.2801281833258068 THEN '-1159697644' ELSE rt1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)>>(rt1.c3)) THEN 0X361c1495 WHEN TRIM(DISTINCT rt1.c0, rt1.c0) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN JULIANDAY(rt0.c2, rt1.c1, rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'', CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'5e554445' WHEN 0.2801281833258068 THEN '-1159697644' ELSE rt1.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c0)>>(rt1.c3)) THEN 0X361c1495 WHEN TRIM(DISTINCT rt1.c0, rt1.c0) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN JULIANDAY(rt0.c2, rt1.c1, rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY x'', CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'5e554445' WHEN 0.2801281833258068 THEN '-1159697644' ELSE rt1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)>>(rt1.c3)) THEN 0X361c1495 WHEN TRIM(DISTINCT rt1.c0, rt1.c0) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN JULIANDAY(rt0.c2, rt1.c1, rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt1, rt0 ORDER BY x'', CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'5e554445' WHEN 0.2801281833258068 THEN '-1159697644' ELSE rt1.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c0)>>(rt1.c3)) THEN 0X361c1495 WHEN TRIM(DISTINCT rt1.c0, rt1.c0) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE BINARY THEN JULIANDAY(rt0.c2, rt1.c1, rt1.c0) ELSE (((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY x'', CAST(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c0 THEN x'5e554445' WHEN 0.2801281833258068 THEN '-1159697644' ELSE rt1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE ((((~ (rt1.c3)))AND((((rt1.c2))<=((vt1.c0)))))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c2)))) IS FALSE)  NULLS FIRST, ((((rt1.c3)>=(rt1.c0))) IS TRUE)  NULLS FIRST, ((((((((((rt1.c2) NOTNULL))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))))AND(((rt1.c0)==(rt1.c3)))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c3)))AND((((rt1.c2))<=((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c2)))) IS FALSE)  NULLS FIRST, ((((rt1.c3)>=(rt1.c0))) IS TRUE)  NULLS FIRST, ((((((((((rt1.c2) NOTNULL))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))))AND(((rt1.c0)==(rt1.c3)))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((~ (rt1.c3)))AND((((rt1.c2))<=((vt1.c0)))))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c2)))) IS FALSE)  NULLS FIRST, ((((rt1.c3)>=(rt1.c0))) IS TRUE)  NULLS FIRST, ((((((((((rt1.c2) NOTNULL))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))))AND(((rt1.c0)==(rt1.c3)))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c3)))AND((((rt1.c2))<=((vt1.c0)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c2)))) IS FALSE)  NULLS FIRST, ((((rt1.c3)>=(rt1.c0))) IS TRUE)  NULLS FIRST, ((((((((((rt1.c2) NOTNULL))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))))AND(((rt1.c0)==(rt1.c3)))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((((~ (rt1.c3)))AND((((rt1.c2))<=((vt1.c0)))))) ORDER BY (((((rt1.c2, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c2)) AND ((rt1.c3, rt1.c1, rt1.c2)))) IS FALSE)  NULLS FIRST, ((((rt1.c3)>=(rt1.c0))) IS TRUE)  NULLS FIRST, ((((((((((rt1.c2) NOTNULL))OR(((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))))AND(((((rt1.c2)AND(rt1.c3)))OR(rt1.c2)))))AND(((rt1.c0)==(rt1.c3)))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0 IN ()))OR(JULIANDAY(rt1.c1, rt1.c2, rt1.c1))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY (((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1))))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(JULIANDAY(rt1.c1, rt1.c2, rt1.c1))))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0 IN ()))OR(JULIANDAY(rt1.c1, rt1.c2, rt1.c1))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY (((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1))))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(JULIANDAY(rt1.c1, rt1.c2, rt1.c1))))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1))))!=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c0 IN ()))OR(JULIANDAY(rt1.c1, rt1.c2, rt1.c1))))OR(CAST(rt1.c0 AS INTEGER)))) ORDER BY (((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1))))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c3)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('')>>(rt0.c1))) BETWEEN (((rt0.c2)!=(rt1.c3))) AND ((rt1.c1 IN ())))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')>>(rt0.c1))) BETWEEN (((rt0.c2)<>(rt1.c3))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('')>>(rt0.c1))) BETWEEN (((rt0.c2)!=(rt1.c3))) AND ((rt1.c1 IN ())))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('')>>(rt0.c1))) BETWEEN (((rt0.c2)<>(rt1.c3))) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('')>>(rt0.c1))) BETWEEN (((rt0.c2)!=(rt1.c3))) AND ((rt1.c1 IN ())))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ (((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)))OR(rt1.c3))))) ORDER BY ((((((rt1.c0)OR(rt0.c1)))OR(rt1.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((rt1.c0)OR(rt0.c1)))OR(rt1.c2))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ (((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)))OR(rt1.c3))))) ORDER BY ((((((rt1.c0)OR(rt0.c1)))OR(rt1.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)))OR(rt1.c3))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((rt1.c0)OR(rt0.c1)))OR(rt1.c2))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE ((+ (((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt1.c2)))OR(rt1.c3))))) ORDER BY ((((((rt1.c0)OR(rt0.c1)))OR(rt1.c2))) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN rt0.c0 THEN 'L|*' WHEN '1184556482' THEN (~ (vt1.c0)) WHEN NULL THEN CAST(rt0.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN rt0.c0 THEN 'L|*' WHEN '1184556482' THEN (~ (vt1.c0)) WHEN NULL THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN rt0.c0 THEN 'L|*' WHEN '1184556482' THEN (~ (vt1.c0)) WHEN NULL THEN CAST(rt0.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN rt0.c0 THEN 'L|*' WHEN '1184556482' THEN (~ (vt1.c0)) WHEN NULL THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0))  WHEN rt0.c0 THEN 'L|*' WHEN '1184556482' THEN (~ (vt1.c0)) WHEN NULL THEN CAST(rt0.c1 AS REAL) END) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(TYPEOF(vt1.c0), ((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(TYPEOF(vt1.c0), ((vt1.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(TYPEOF(vt1.c0), ((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(TYPEOF(vt1.c0), ((vt1.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(TYPEOF(vt1.c0), ((vt1.c0)IS NOT(vt1.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY TYPEOF(rt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY TYPEOF(rt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY TYPEOF(rt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY TYPEOF(rt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY TYPEOF(rt0.c1) COLLATE BINARY COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND(HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND(HEX(rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND(HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND(HEX(rt0.c2)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt0.c0)))AND(HEX(rt0.c2))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CASE 0xffffffff9a15a54b  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) AND ((LIKELY(DISTINCT rt1.c2))))) ORDER BY (((((rt1.c0))>((rt1.c1))))%(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((CASE 0Xffffffff9a15a54b  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) AND ((LIKELY(DISTINCT rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0))>((rt1.c1))))%(NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CASE 0xffffffff9a15a54b  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) AND ((LIKELY(DISTINCT rt1.c2))))) ORDER BY (((((rt1.c0))>((rt1.c1))))%(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((CASE 0Xffffffff9a15a54b  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) AND ((LIKELY(DISTINCT rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0))>((rt1.c1))))%(NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((CASE 0xffffffff9a15a54b  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END)) AND ((LIKELY(DISTINCT rt1.c2))))) ORDER BY (((((rt1.c0))>((rt1.c1))))%(NULL)) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c0)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST((+ (rt1.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))))>((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))))>((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))))>((rt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))))>((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0, vt1 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(rt1.c2))))>((rt1.c0 COLLATE BINARY))));
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))AND((rt1.c3 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))AND((rt1.c3 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))AND((rt1.c3 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))AND((rt1.c3 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))OR(((rt0.c0) IS TRUE))))AND((rt1.c3 IN ()))))AND(rt1.c2 COLLATE NOCASE)))AND(((rt1.c1) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(rt0.c1 COLLATE RTRIM)))OR(((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((vt1.c0 IN ())))<((CAST(rt0.c1 AS BLOB))))) ORDER BY x'' DESC  NULLS FIRST, CASE WHEN (rt1.c0 IN ('R	Fvn꣎*\rw')) THEN ((rt0.c0)>=(rt0.c2)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) END  NULLS LAST, CAST((((rt1.c3, rt0.c2, rt0.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c2)) AND ((NULL, x'f318', rt0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ())))<((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY x'' DESC  NULLS FIRST, CASE WHEN (rt1.c0 IN ('R	Fvn꣎*\rw')) THEN ((rt0.c0)>=(rt0.c2)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) END  NULLS LAST, CAST((((rt1.c3, rt0.c2, rt0.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c2)) AND ((NULL, x'f318', rt0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((vt1.c0 IN ())))<((CAST(rt0.c1 AS BLOB))))) ORDER BY x'' DESC  NULLS FIRST, CASE WHEN (rt1.c0 IN ('R	Fvn꣎*\rw')) THEN ((rt0.c0)>=(rt0.c2)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) END  NULLS LAST, CAST((((rt1.c3, rt0.c2, rt0.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c2)) AND ((NULL, x'f318', rt0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ())))<((CAST(rt0.c1 AS BLOB))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY x'' DESC  NULLS FIRST, CASE WHEN (rt1.c0 IN ('R	Fvn꣎*\rw')) THEN ((rt0.c0)>=(rt0.c2)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) END  NULLS LAST, CAST((((rt1.c3, rt0.c2, rt0.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c2)) AND ((NULL, x'f318', rt0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (((((vt1.c0 IN ())))<((CAST(rt0.c1 AS BLOB))))) ORDER BY x'' DESC  NULLS FIRST, CASE WHEN (rt1.c0 IN ('R	Fvn꣎*\rw')) THEN ((rt0.c0)>=(rt0.c2)) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)) END  NULLS LAST, CAST((((rt1.c3, rt0.c2, rt0.c2)) BETWEEN ((rt1.c1, rt1.c2, rt0.c2)) AND ((NULL, x'f318', rt0.c1))) AS BLOB);
SELECT * FROM rt1, vt1, rt0 WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((+ (rt1.c3)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(rt1.c0 COLLATE BINARY AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((+ (rt0.c0)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((JULIANDAY(rt1.c3, rt1.c3, rt1.c1))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((JULIANDAY(rt1.c3, rt1.c3, rt1.c1))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((JULIANDAY(rt1.c3, rt1.c3, rt1.c1))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((JULIANDAY(rt1.c3, rt1.c3, rt1.c1))) AND ((rt1.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((JULIANDAY(rt1.c3, rt1.c3, rt1.c1))) AND ((rt1.c2 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt1, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL * FROM rt0, vt1, rt1 WHERE (rt1.c2);
SELECT * FROM rt1, rt0, vt1 WHERE ((((NOT ('锏BUH1TP'))) BETWEEN ((+ (rt0.c1))) AND (((rt1.c2)-(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('锏BUH1TP'))) BETWEEN ((+ (rt0.c1))) AND (((rt1.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE ((((NOT ('锏BUH1TP'))) BETWEEN ((+ (rt0.c1))) AND (((rt1.c2)-(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT ('锏BUH1TP'))) BETWEEN ((+ (rt0.c1))) AND (((rt1.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE ((((NOT ('锏BUH1TP'))) BETWEEN ((+ (rt0.c1))) AND (((rt1.c2)-(rt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c0)))IS NOT(((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS REAL));
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)))) AND (((rt1.c0 IN ()))))) ORDER BY NULLIF(rt1.c2, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY NULLIF(rt1.c2, rt0.c1) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)))) AND (((rt1.c0 IN ()))))) ORDER BY NULLIF(rt1.c2, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)))) AND (((rt1.c0 IN ()))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY NULLIF(rt1.c2, rt0.c1) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)))) AND (((rt1.c0 IN ()))))) ORDER BY NULLIF(rt1.c2, rt0.c1) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((x'')<<(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((x'')<<(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'')<<(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((x'')<<(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CASE 0.9899548589033449  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CASE 0.9899548589033449  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CASE 0.9899548589033449  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CASE 0.9899548589033449  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CASE 0.9899548589033449  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END) AND (((rt0.c0)AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR('')))OR((((rt0.c2))<((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0 COLLATE BINARY)OR('')))OR((((rt0.c2))<((rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR('')))OR((((rt0.c2))<((rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0 COLLATE BINARY)OR('')))OR((((rt0.c2))<((rt0.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((((vt1.c0 COLLATE BINARY)OR('')))OR((((rt0.c2))<((rt0.c2)))))  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE INNER JOIN rt1 ON x'' WHERE ((((rt0.c2)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (NULL)))) AND ((rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (NULL)))) AND ((rt1.c3)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE INNER JOIN rt1 ON x'');
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE INNER JOIN rt1 ON x'' WHERE ((((rt0.c2)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (NULL)))) AND ((rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (NULL)))) AND ((rt1.c3)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE INNER JOIN rt1 ON x'');
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 COLLATE NOCASE INNER JOIN rt1 ON x'' WHERE ((((rt0.c2)) BETWEEN ((((rt1.c1) BETWEEN (rt1.c1) AND (NULL)))) AND ((rt1.c3))));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt1, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ('');
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (54495688) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (54495688) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (54495688) AND (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (54495688) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) BETWEEN (54495688) AND (vt1.c0))) IS FALSE));
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) BETWEEN (vt1.c0) AND (x'2b04')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt1.c0)) BETWEEN (vt1.c0) AND (x'2b04'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) BETWEEN (vt1.c0) AND (x'2b04')));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt1.c0, vt1.c0)) BETWEEN (vt1.c0) AND (x'2b04'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0)) BETWEEN (vt1.c0) AND (x'2b04')));
SELECT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c0, rt1.c3, vt1.c0))<=((rt1.c1, rt1.c1, rt1.c3)))))) ORDER BY (('-1121810800')!=(((vt1.c0)IS(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0, rt1.c3, vt1.c0))<=((rt1.c1, rt1.c1, rt1.c3)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (('-1121810800')<>(((vt1.c0)IS(rt1.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c0, rt1.c3, vt1.c0))<=((rt1.c1, rt1.c1, rt1.c3)))))) ORDER BY (('-1121810800')!=(((vt1.c0)IS(rt1.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt1.c0, rt1.c3, vt1.c0))<=((rt1.c1, rt1.c1, rt1.c3)))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (('-1121810800')<>(((vt1.c0)IS(rt1.c3)))) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE ((NOT ((((rt1.c0, rt1.c3, vt1.c0))<=((rt1.c1, rt1.c1, rt1.c3)))))) ORDER BY (('-1121810800')!=(((vt1.c0)IS(rt1.c3)))) DESC  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (rt1.c1) AND (LIKELY(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (rt1.c1) AND (LIKELY(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (rt1.c1) AND (LIKELY(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (rt1.c1) AND (LIKELY(DISTINCT rt1.c2)))) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOT BETWEEN (rt1.c1) AND (LIKELY(DISTINCT rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((CAST(rt0.c2 AS TEXT))AND(SQLITE_COMPILEOPTION_GET(rt1.c3))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))AND(SQLITE_COMPILEOPTION_GET(rt1.c3))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((CAST(rt0.c2 AS TEXT))AND(SQLITE_COMPILEOPTION_GET(rt1.c3))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS TEXT))AND(SQLITE_COMPILEOPTION_GET(rt1.c3))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((CAST(rt0.c2 AS TEXT))AND(SQLITE_COMPILEOPTION_GET(rt1.c3))))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (JULIANDAY(((rt0.c2)>(rt0.c2)), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt0.c2)>(rt0.c2)), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (JULIANDAY(((rt0.c2)>(rt0.c2)), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((rt0.c2)>(rt0.c2)), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (JULIANDAY(((rt0.c2)>(rt0.c2)), ((rt0.c1)>(rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((CAST(rt0.c0 AS REAL))*(0xffffffff9a15a54b)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))*(0Xffffffff9a15a54b))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((CAST(rt0.c0 AS REAL))*(0xffffffff9a15a54b)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL))*(0Xffffffff9a15a54b))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE (((CAST(rt0.c0 AS REAL))*(0xffffffff9a15a54b)));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE BINARY)AND(rt0.c1 COLLATE RTRIM)))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL * FROM rt0, rt1 WHERE ('') ORDER BY rt1.c3  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN NULL WHEN rt0.c1 THEN 0.6646433843144558 WHEN rt1.c3 THEN -737066103 END)IS(highlight(rt0.c2, rt1.c1, rt0.c1, rt0.c0)))  NULLS LAST, rt1.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN NULL WHEN rt0.c1 THEN 0.6646433843144558 WHEN rt1.c3 THEN -737066103 END)IS(highlight(rt0.c2, rt1.c1, rt0.c1, rt0.c0)))  NULLS LAST, rt1.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM rt0, rt1 WHERE ('') ORDER BY rt1.c3  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN NULL WHEN rt0.c1 THEN 0.6646433843144558 WHEN rt1.c3 THEN -737066103 END)IS(highlight(rt0.c2, rt1.c1, rt0.c1, rt0.c0)))  NULLS LAST, rt1.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3  NULLS FIRST, ((CASE rt1.c2  WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c0 WHEN rt1.c0 THEN NULL WHEN rt0.c1 THEN 0.6646433843144558 WHEN rt1.c3 THEN -737066103 END)IS(highlight(rt0.c2, rt1.c1, rt0.c1, rt0.c0)))  NULLS LAST, rt1.c0 COLLATE NOCASE ASC);
SELECT * FROM vt1, rt0, rt1 WHERE (rt1.c1) ORDER BY (('')GLOB(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN 468427254 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (('')GLOB(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN 468427254 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, rt1 WHERE (rt1.c1) ORDER BY (('')GLOB(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN 468427254 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (('')GLOB(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN 468427254 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, rt0, rt1 WHERE (rt1.c1) ORDER BY (('')GLOB(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 WHEN 468427254 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '-1789237608' THEN vt1.c0 ELSE rt0.c2 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR(((vt1.c0)&(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN NULL END) IS FALSE) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))+(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '-1789237608' THEN vt1.c0 ELSE rt0.c2 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR(((vt1.c0)&(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN NULL END) IS FALSE) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))+(((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '-1789237608' THEN vt1.c0 ELSE rt0.c2 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR(((vt1.c0)&(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN NULL END) IS FALSE) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))+(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '-1789237608' THEN vt1.c0 ELSE rt0.c2 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR(((vt1.c0)&(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN NULL END) IS FALSE) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))+(((rt0.c2) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ORDER BY ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN '-1789237608' THEN vt1.c0 ELSE rt0.c2 END)OR(((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)))))OR(((vt1.c0)&(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN NULL END) IS FALSE) ASC  NULLS LAST, ((((rt0.c2) IS TRUE))+(((rt0.c2) NOTNULL)))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1)||(NULL)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY rt0.c0, ((CAST(vt1.c0 AS TEXT))|(TYPEOF(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1)||(NULL)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0, ((CAST(vt1.c0 AS TEXT))|(TYPEOF(rt0.c0))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1)||(NULL)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY rt0.c0, ((CAST(vt1.c0 AS TEXT))|(TYPEOF(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1)||(NULL)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0, ((CAST(vt1.c0 AS TEXT))|(TYPEOF(rt0.c0))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1)||(NULL)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY rt0.c0, ((CAST(vt1.c0 AS TEXT))|(TYPEOF(rt0.c0)));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN (~ (rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE WHEN (~ (rt1.c2)) THEN (~ (rt1.c0)) END);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN (~ (rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY CASE WHEN (~ (rt1.c2)) THEN (~ (rt1.c0)) END);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS TEXT)) ORDER BY CASE WHEN (~ (rt1.c2)) THEN (~ (rt1.c0)) END;
SELECT * FROM rt1, rt0, vt1 WHERE (NULL) ORDER BY UNLIKELY((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY UNLIKELY((rt1.c0 IN ())));
SELECT * FROM rt1, rt0, vt1 WHERE (NULL) ORDER BY UNLIKELY((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY UNLIKELY((rt1.c0 IN ())));
SELECT * FROM rt1, rt0, vt1 WHERE (NULL) ORDER BY UNLIKELY((rt1.c0 IN ()));
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((((rt0.c1) ISNULL)))) WHERE (rt0.c2) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((((rt0.c1) ISNULL)))) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC);
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((((rt0.c1) ISNULL)))) WHERE (rt0.c2) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((((rt0.c1) ISNULL)))) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC);
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((((rt0.c1) ISNULL)))) WHERE (rt0.c2) ORDER BY (rt0.c2 IN ()) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(json_extract(rt1.c2, rt1.c1))))OR((rt1.c0 IN ())))) ORDER BY TRIM(DISTINCT ((vt1.c0)>(rt1.c3)), '讬L%''7U﹂') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(json_extract(rt1.c2, rt1.c1))))OR((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY TRIM(DISTINCT ((vt1.c0)>(rt1.c3)), '讬L%''7U﹂') ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(json_extract(rt1.c2, rt1.c1))))OR((rt1.c0 IN ())))) ORDER BY TRIM(DISTINCT ((vt1.c0)>(rt1.c3)), '讬L%''7U﹂') ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))OR(json_extract(rt1.c2, rt1.c1))))OR((rt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY TRIM(DISTINCT ((vt1.c0)>(rt1.c3)), '讬L%''7U﹂') ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x'');
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY x'');
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY x'';
SELECT * FROM rt0, rt1, vt1 WHERE (NULL) ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS TEXT) ASC);
SELECT * FROM rt0, rt1, vt1 WHERE (NULL) ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS TEXT) ASC);
SELECT * FROM rt0, rt1, vt1 WHERE (NULL) ORDER BY CAST(CAST(rt1.c0 AS INTEGER) AS TEXT) ASC;
SELECT * FROM rt1 WHERE (0.2618891732774884);
SELECT SUM(count) FROM (SELECT ALL ((0.2618891732774884) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0.2618891732774884);
SELECT SUM(count) FROM (SELECT ALL ((0.2618891732774884) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0.2618891732774884);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), ((((vt1.c0)*(vt1.c0)))*((~ (vt1.c0))))  NULLS FIRST, ((NULL) BETWEEN (NULL) AND (NULL));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), ((((vt1.c0)*(vt1.c0)))*((~ (vt1.c0))))  NULLS FIRST, ((NULL) BETWEEN (NULL) AND (NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), ((((vt1.c0)*(vt1.c0)))*((~ (vt1.c0))))  NULLS FIRST, ((NULL) BETWEEN (NULL) AND (NULL));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), ((((vt1.c0)*(vt1.c0)))*((~ (vt1.c0))))  NULLS FIRST, ((NULL) BETWEEN (NULL) AND (NULL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((- (vt1.c0)))AND(vt1.c0)))OR(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN (vt1.c0 COLLATE BINARY)), ((((vt1.c0)*(vt1.c0)))*((~ (vt1.c0))))  NULLS FIRST, ((NULL) BETWEEN (NULL) AND (NULL));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt1.c3)AND(rt1.c1)))AND(0.35062684715769177))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt0.c0) NOTNULL))) WHERE ((((rt1.c3))>=((x''))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3))>=((x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((rt1.c3)AND(rt1.c1)))AND(0.35062684715769177))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt1.c3)AND(rt1.c1)))AND(0.35062684715769177))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt0.c0) NOTNULL))) WHERE ((((rt1.c3))>=((x''))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3))>=((x'')))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((rt1.c3)AND(rt1.c1)))AND(0.35062684715769177))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((rt1.c3)AND(rt1.c1)))AND(0.35062684715769177))) NOT BETWEEN (((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c0))) AND (((rt0.c0) NOTNULL))) WHERE ((((rt1.c3))>=((x''))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)||(rt1.c3)))OR((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)||(rt1.c3)))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)||(rt1.c3)))OR((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)||(rt1.c3)))OR((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2)||(rt1.c3)))OR((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2654458398900328);
SELECT SUM(count) FROM (SELECT ((0.2654458398900328) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2654458398900328);
SELECT SUM(count) FROM (SELECT ((0.2654458398900328) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.2654458398900328);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (JULIANDAY((((vt1.c0))<=((rt1.c0))), LIKELIHOOD(NULL, 0.6330258594017871), rt0.c2, (((rt1.c3, rt1.c0, x''))>((rt1.c2, rt1.c3, vt1.c0))), x''));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((((vt1.c0))<=((rt1.c0))), LIKELIHOOD(NULL, 0.6330258594017871), rt0.c2, (((rt1.c3, rt1.c0, x''))>((rt1.c2, rt1.c3, vt1.c0))), x'')) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (JULIANDAY((((vt1.c0))<=((rt1.c0))), LIKELIHOOD(NULL, 0.6330258594017871), rt0.c2, (((rt1.c3, rt1.c0, x''))>((rt1.c2, rt1.c3, vt1.c0))), x''));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY((((vt1.c0))<=((rt1.c0))), LIKELIHOOD(NULL, 0.6330258594017871), rt0.c2, (((rt1.c3, rt1.c0, x''))>((rt1.c2, rt1.c3, vt1.c0))), x'')) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (JULIANDAY((((vt1.c0))<=((rt1.c0))), LIKELIHOOD(NULL, 0.6330258594017871), rt0.c2, (((rt1.c3, rt1.c0, x''))>((rt1.c2, rt1.c3, vt1.c0))), x''));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((('2097869807')AND(((((rt1.c3)AND(rt1.c0)))AND(rt1.c0)))))OR((((rt1.c0))!=((rt0.c0))))) WHERE ((((rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))) ORDER BY ((((x'') NOTNULL)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((('2097869807')AND(((((rt1.c3)AND(rt1.c0)))AND(rt1.c0)))))OR((((rt1.c0))<>((rt0.c0))))) ORDER BY ((((x'') NOTNULL)) ISNULL) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((('2097869807')AND(((((rt1.c3)AND(rt1.c0)))AND(rt1.c0)))))OR((((rt1.c0))!=((rt0.c0))))) WHERE ((((rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))) ORDER BY ((((x'') NOTNULL)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((('2097869807')AND(((((rt1.c3)AND(rt1.c0)))AND(rt1.c0)))))OR((((rt1.c0))<>((rt0.c0))))) ORDER BY ((((x'') NOTNULL)) ISNULL) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((('2097869807')AND(((((rt1.c3)AND(rt1.c0)))AND(rt1.c0)))))OR((((rt1.c0))!=((rt0.c0))))) WHERE ((((rt1.c0)) NOT BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1)))))) ORDER BY ((((x'') NOTNULL)) ISNULL) DESC;
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((-938327192)*(rt1.c2)) IN ()) WHERE (LIKELIHOOD((rt0.c0 IN ()), 0.8452714793235868));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c0 IN ()), 0.8452714793235868)) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((-938327192)*(rt1.c2)) IN ()));
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((-938327192)*(rt1.c2)) IN ()) WHERE (LIKELIHOOD((rt0.c0 IN ()), 0.8452714793235868));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt0.c0 IN ()), 0.8452714793235868)) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((-938327192)*(rt1.c2)) IN ()));
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON (((-938327192)*(rt1.c2)) IN ()) WHERE (LIKELIHOOD((rt0.c0 IN ()), 0.8452714793235868));
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE '2082000851' END)OR(((rt0.c2)GLOB(rt0.c0)))))AND((~ (rt0.c2)))))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY (UPPER(rt0.c2) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE '2082000851' END)OR(((rt0.c2)GLOB(rt0.c0)))))AND((~ (rt0.c2)))))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(rt0.c2) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE '2082000851' END)OR(((rt0.c2)GLOB(rt0.c0)))))AND((~ (rt0.c2)))))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY (UPPER(rt0.c2) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE '2082000851' END)OR(((rt0.c2)GLOB(rt0.c0)))))AND((~ (rt0.c2)))))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (UPPER(rt0.c2) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE '2082000851' END)OR(((rt0.c2)GLOB(rt0.c0)))))AND((~ (rt0.c2)))))AND((rt0.c0 IN ()))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) ORDER BY (UPPER(rt0.c2) IN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT * FROM vt1 WHERE (load_extension(((vt1.c0) IS TRUE))) ORDER BY (~ ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c0) IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN ()))));
SELECT * FROM vt1 WHERE (load_extension(((vt1.c0) IS TRUE))) ORDER BY (~ ((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((load_extension(((vt1.c0) IS TRUE))) IS TRUE)  as count FROM vt1 ORDER BY (~ ((vt1.c0 IN ()))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((vt1.c0 IN (x''))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c3)|(rt1.c1))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(vt1.c0))) AND (CAST(rt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (x''))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c3)|(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(vt1.c0))) AND (CAST(rt1.c0 AS TEXT))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((vt1.c0 IN (x''))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c3)|(rt1.c1))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(vt1.c0))) AND (CAST(rt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (x''))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c3)|(rt1.c1))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(vt1.c0))) AND (CAST(rt1.c0 AS TEXT))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE ((((vt1.c0 IN (x''))) BETWEEN ((rt1.c2 IN ())) AND (((rt1.c3)|(rt1.c1))))) ORDER BY ((((vt1.c0)IS NOT(rt0.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c3)))OR(vt1.c0))) AND (CAST(rt1.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN ((((vt1.c0))>((vt1.c0)))) AND (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(CASE WHEN 0xffffffffb7cd54d8 THEN rt0.c1 ELSE vt1.c0 END)))AND((x'' IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt1.c0 THEN rt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(CASE WHEN 0xffffffffb7cd54d8 THEN rt0.c1 ELSE vt1.c0 END)))AND((x'' IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt1.c0 THEN rt0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(CASE WHEN 0xffffffffb7cd54d8 THEN rt0.c1 ELSE vt1.c0 END)))AND((x'' IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt1.c0 THEN rt0.c1 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(CASE WHEN 0xffffffffb7cd54d8 THEN rt0.c1 ELSE vt1.c0 END)))AND((x'' IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt1.c0 THEN rt0.c1 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(CASE WHEN 0xffffffffb7cd54d8 THEN rt0.c1 ELSE vt1.c0 END)))AND((x'' IN ())))) ORDER BY SQLITE_COMPILEOPTION_USED(CASE WHEN vt1.c0 THEN rt0.c1 END) ASC  NULLS LAST;
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT * FROM vt1, rt0, rt1 WHERE ((~ (NULL)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((~ (0.6199850607729317))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.6199850607729317))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((~ (0.6199850607729317))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.6199850607729317))) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((~ (0.6199850607729317))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c1));
SELECT COUNT(*) FROM vt1 WHERE (x'8f89') ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(0x7d0af3ef)))=(load_extension(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8f89') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(0X7d0af3ef)))==(load_extension(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (x'8f89') ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(0x7d0af3ef)))=(load_extension(vt1.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'8f89') IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(0X7d0af3ef)))==(load_extension(vt1.c0, vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1, rt1 FULL OUTER JOIN rt0 ON LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))) WHERE (0.2948578259610063);
SELECT SUM(count) FROM (SELECT ALL ((0.2948578259610063) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))));
SELECT * FROM vt1, rt1 FULL OUTER JOIN rt0 ON LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))) WHERE (0.2948578259610063);
SELECT SUM(count) FROM (SELECT ALL ((0.2948578259610063) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN rt0 ON LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))));
SELECT * FROM vt1, rt1 FULL OUTER JOIN rt0 ON LIKELY(((rt0.c2) BETWEEN (rt0.c1) AND (rt1.c3))) WHERE (0.2948578259610063);
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((x'27c2fd40')) AND ((0.5982177679645603))) WHERE (((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((x'27c2fd40')) AND ((0.5982177679645603))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((x'27c2fd40')) AND ((0.5982177679645603))) WHERE (((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((x'27c2fd40')) AND ((0.5982177679645603))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON (((vt1.c0)) NOT BETWEEN ((x'27c2fd40')) AND ((0.5982177679645603))) WHERE (((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (0.7429384982241705);
SELECT SUM(count) FROM (SELECT ((0.7429384982241705) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.7429384982241705);
SELECT SUM(count) FROM (SELECT ((0.7429384982241705) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.7429384982241705);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON 0.33545346715697977 COLLATE NOCASE WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON 0.33545346715697977 COLLATE NOCASE);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON 0.33545346715697977 COLLATE NOCASE WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON 0.33545346715697977 COLLATE NOCASE);
SELECT * FROM rt0, rt1 RIGHT OUTER JOIN vt1 ON 0.33545346715697977 COLLATE NOCASE WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(vt1.c0)) THEN vt1.c0 END);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((rt0.c2)<<(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2)<<(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((rt0.c2)<<(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c2)<<(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE vt1.c0 END) NOTNULL)) ORDER BY ((rt0.c2)<<(rt0.c2)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((IFNULL(rt1.c1, rt1.c1)))>=(((rt1.c1 IN ()))))) ORDER BY CAST(((vt1.c0)>=(rt1.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt1.c1, rt1.c1)))>=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((vt1.c0)>=(rt1.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((IFNULL(rt1.c1, rt1.c1)))>=(((rt1.c1 IN ()))))) ORDER BY CAST(((vt1.c0)>=(rt1.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(rt1.c1, rt1.c1)))>=(((rt1.c1 IN ()))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(((vt1.c0)>=(rt1.c3)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE ((((IFNULL(rt1.c1, rt1.c1)))>=(((rt1.c1 IN ()))))) ORDER BY CAST(((vt1.c0)>=(rt1.c3)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS INTEGER) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS INTEGER) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS INTEGER) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS INTEGER) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (~ (rt1.c3))  WHEN CAST(rt1.c3 AS INTEGER) THEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c3)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)) END);
SELECT ALL * FROM vt1, rt1 WHERE (NULL) ORDER BY (('3!') NOTNULL) ASC  NULLS LAST, (~ (x'' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt1 ORDER BY (('3!') NOTNULL) ASC  NULLS LAST, (~ (x'' COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1, rt1 WHERE (NULL) ORDER BY (('3!') NOTNULL) ASC  NULLS LAST, (~ (x'' COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt1 ORDER BY (('3!') NOTNULL) ASC  NULLS LAST, (~ (x'' COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1, rt1 WHERE (NULL) ORDER BY (('3!') NOTNULL) ASC  NULLS LAST, (~ (x'' COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)))));
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON CAST(((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) WHERE (x'') ORDER BY ((((rt0.c1)||('cO6O4')))*(CAST(x'd50d' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON CAST(((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) ORDER BY ((((rt0.c1)||('cO6O4')))*(CAST(x'd50d' AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON CAST(((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) WHERE (x'') ORDER BY ((((rt0.c1)||('cO6O4')))*(CAST(x'd50d' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON CAST(((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) ORDER BY ((((rt0.c1)||('cO6O4')))*(CAST(x'd50d' AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt1, rt1 INNER JOIN rt0 ON CAST(((((rt1.c2)AND(rt1.c2)))AND(rt0.c0)) AS INTEGER) WHERE (x'') ORDER BY ((((rt0.c1)||('cO6O4')))*(CAST(x'd50d' AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((('1610011108')=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1610011108')=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('1610011108')=(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1610011108')=(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('1610011108')=(rt0.c2)) IN ()));
SELECT * FROM vt1, rt1 WHERE (x'3fed');
SELECT SUM(count) FROM (SELECT ALL ((x'3fed') IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (x'3fed');
SELECT SUM(count) FROM (SELECT ALL ((x'3fed') IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (x'3fed');
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2) IS FALSE));
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((((rt1.c0))=((rt1.c1))), 0.7178555082171368)) ORDER BY CAST(UPPER(rt1.c3) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt1.c0))==((rt1.c1))), 0.7178555082171368)) IS TRUE)  as count FROM rt1 ORDER BY CAST(UPPER(rt1.c3) AS TEXT) DESC);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((((rt1.c0))=((rt1.c1))), 0.7178555082171368)) ORDER BY CAST(UPPER(rt1.c3) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt1.c0))==((rt1.c1))), 0.7178555082171368)) IS TRUE)  as count FROM rt1 ORDER BY CAST(UPPER(rt1.c3) AS TEXT) DESC);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((((rt1.c0))=((rt1.c1))), 0.7178555082171368)) ORDER BY CAST(UPPER(rt1.c3) AS TEXT) DESC;
SELECT * FROM rt1, vt1 WHERE (CASE 0.7680921859572578  WHEN -4.17751385E8 THEN CAST(rt1.c2 AS BLOB) WHEN ((vt1.c0)<(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ('-1e500' IN ()) THEN rt1.c2 ELSE (- (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7680921859572578  WHEN -4.17751385E8 THEN CAST(rt1.c2 AS BLOB) WHEN ((vt1.c0)<(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ('-1e500' IN ()) THEN rt1.c2 ELSE (- (rt1.c1)) END) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CASE 0.7680921859572578  WHEN -4.17751385E8 THEN CAST(rt1.c2 AS BLOB) WHEN ((vt1.c0)<(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ('-1e500' IN ()) THEN rt1.c2 ELSE (- (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7680921859572578  WHEN -4.17751385E8 THEN CAST(rt1.c2 AS BLOB) WHEN ((vt1.c0)<(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ('-1e500' IN ()) THEN rt1.c2 ELSE (- (rt1.c1)) END) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (CASE 0.7680921859572578  WHEN -4.17751385E8 THEN CAST(rt1.c2 AS BLOB) WHEN ((vt1.c0)<(rt1.c0)) THEN CAST(rt1.c2 AS TEXT) WHEN ('-1e500' IN ()) THEN rt1.c2 ELSE (- (rt1.c1)) END);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE (((((((x'') NOT NULL))OR(((((((((((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)))AND(x'')))AND(rt1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(LTRIM(rt0.c1)))) ORDER BY (+ (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT NULL))OR(((((((((((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)))AND(x'')))AND(rt1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) ORDER BY (+ (''))  NULLS FIRST);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE (((((((x'') NOT NULL))OR(((((((((((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)))AND(x'')))AND(rt1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(LTRIM(rt0.c1)))) ORDER BY (+ (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((x'') NOT NULL))OR(((((((((((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)))AND(x'')))AND(rt1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) ORDER BY (+ (''))  NULLS FIRST);
SELECT * FROM rt1, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS BLOB)) IS TRUE) WHERE (((((((x'') NOT NULL))OR(((((((((((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)))AND(x'')))AND(rt1.c3)))OR(rt0.c0)))OR(rt0.c0)))))AND(LTRIM(rt0.c1)))) ORDER BY (+ (''))  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c3)LIKE(1131194431))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((- (rt1.c2)))) WHERE (((((LOWER(rt0.c0))OR((-1108571269 IN ()))))OR((((rt0.c0, rt1.c3, 'Xⲳrᒕ~JMs'))>=((rt0.c1, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((LOWER(rt0.c0))OR((-1108571269 IN ()))))OR((((rt0.c0, rt1.c3, 'Xⲳrᒕ~JMs'))>=((rt0.c1, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c3)LIKE(1131194431))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c3)LIKE(1131194431))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((- (rt1.c2)))) WHERE (((((LOWER(rt0.c0))OR((-1108571269 IN ()))))OR((((rt0.c0, rt1.c3, 'Xⲳrᒕ~JMs'))>=((rt0.c1, rt1.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((LOWER(rt0.c0))OR((-1108571269 IN ()))))OR((((rt0.c0, rt1.c3, 'Xⲳrᒕ~JMs'))>=((rt0.c1, rt1.c0, rt0.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c3)LIKE(1131194431))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON ((((rt1.c3)LIKE(1131194431))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((- (rt1.c2)))) WHERE (((((LOWER(rt0.c0))OR((-1108571269 IN ()))))OR((((rt0.c0, rt1.c3, 'Xⲳrᒕ~JMs'))>=((rt0.c1, rt1.c0, rt0.c0))))));
SELECT * FROM vt1 WHERE (((((LIKELY(DISTINCT '-1063013266'))AND(((vt1.c0) NOT NULL))))OR(((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT '-1063013266'))AND(((vt1.c0) NOT NULL))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())));
SELECT * FROM vt1 WHERE (((((LIKELY(DISTINCT '-1063013266'))AND(((vt1.c0) NOT NULL))))OR(((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT '-1063013266'))AND(((vt1.c0) NOT NULL))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET((vt1.c0 IN ())));
SELECT * FROM vt1 WHERE (((((LIKELY(DISTINCT '-1063013266'))AND(((vt1.c0) NOT NULL))))OR(((vt1.c0) IS TRUE)))) ORDER BY SQLITE_COMPILEOPTION_GET((vt1.c0 IN ()));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)) WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)) WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (rt0.c2 COLLATE RTRIM)) WHERE ((- (vt1.c0)));
SELECT COUNT(*) FROM rt1 WHERE ((+ ('54495688'))) ORDER BY json_valid(rt1.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('54495688'))) IS TRUE)  as count FROM rt1 ORDER BY json_valid(rt1.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt1 WHERE ((+ ('54495688'))) ORDER BY json_valid(rt1.c0) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('54495688'))) IS TRUE)  as count FROM rt1 ORDER BY json_valid(rt1.c0) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt1 WHERE ((+ ('54495688'))) ORDER BY json_valid(rt1.c0) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) IN ())) ORDER BY LIKE(rt1.c1, rt1.c1, 'k') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY LIKE(rt1.c1, rt1.c1, 'k') COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) IN ())) ORDER BY LIKE(rt1.c1, rt1.c1, 'k') COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY LIKE(rt1.c1, rt1.c1, 'k') COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt0.c0))) IN ())) ORDER BY LIKE(rt1.c1, rt1.c1, 'k') COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN ((- (rt0.c0))) AND (((rt1.c2)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) NOT BETWEEN ((- (rt0.c0))) AND (((rt1.c2)%(NULL))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN ((- (rt0.c0))) AND (((rt1.c2)%(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c1))) NOT BETWEEN ((- (rt0.c0))) AND (((rt1.c2)%(NULL))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((NOT (rt1.c1))) NOT BETWEEN ((- (rt0.c0))) AND (((rt1.c2)%(NULL)))));
SELECT * FROM vt1, rt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT (((rt0.c1, rt1.c1, rt1.c2))<=((rt1.c0, rt1.c3, rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ABS(DISTINCT (((rt0.c1, rt1.c1, rt1.c2))<=((rt1.c0, rt1.c3, rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT (((rt0.c1, rt1.c1, rt1.c2))<=((rt1.c0, rt1.c3, rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ABS(DISTINCT (((rt0.c1, rt1.c1, rt1.c2))<=((rt1.c0, rt1.c3, rt1.c3)))) ASC  NULLS FIRST);
SELECT * FROM vt1, rt1, rt0 WHERE (CAST((+ (rt0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT (((rt0.c1, rt1.c1, rt1.c2))<=((rt1.c0, rt1.c3, rt1.c3)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((- (rt0.c2)))&(0.6646433843144558)));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&(0.6646433843144558))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((- (rt0.c2)))&(0.6646433843144558)));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&(0.6646433843144558))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((- (rt0.c2)))&(0.6646433843144558)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ (rt0.c0)) COLLATE BINARY WHERE ((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY (((rt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (~ (rt0.c0)) COLLATE BINARY ORDER BY (((rt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ (rt0.c0)) COLLATE BINARY WHERE ((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY (((rt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (~ (rt0.c0)) COLLATE BINARY ORDER BY (((rt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (~ (rt0.c0)) COLLATE BINARY WHERE ((NOT (CASE WHEN rt1.c1 THEN rt0.c1 END))) ORDER BY (((rt1.c0) IS TRUE) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ((((((((x'')OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN ((((((((x'')OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ((((((((x'')OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c1 IN ())  WHEN ((((((((x'')OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE (CASE (rt1.c1 IN ())  WHEN ((((((((x'')OR(rt0.c2)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c2)) THEN (rt1.c2 IN ()) END);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ()))-(((rt0.c2)||(rt1.c0)))) WHERE (NULL) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, ((NULL)AND(((rt1.c1) NOT BETWEEN (rt0.c1) AND (x'')))), ABS(CASE WHEN rt0.c1 THEN rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ()))-(((rt0.c2)||(rt1.c0)))) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, ((NULL)AND(((rt1.c1) NOT BETWEEN (rt0.c1) AND (x'')))), ABS(CASE WHEN rt0.c1 THEN rt0.c2 END) ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ()))-(((rt0.c2)||(rt1.c0)))) WHERE (NULL) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, ((NULL)AND(((rt1.c1) NOT BETWEEN (rt0.c1) AND (x'')))), ABS(CASE WHEN rt0.c1 THEN rt0.c2 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ()))-(((rt0.c2)||(rt1.c0)))) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, ((NULL)AND(((rt1.c1) NOT BETWEEN (rt0.c1) AND (x'')))), ABS(CASE WHEN rt0.c1 THEN rt0.c2 END) ASC);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (((rt1.c3 IN ()))-(((rt0.c2)||(rt1.c0)))) WHERE (NULL) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) DESC, ((NULL)AND(((rt1.c1) NOT BETWEEN (rt0.c1) AND (x'')))), ABS(CASE WHEN rt0.c1 THEN rt0.c2 END) ASC;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c3)OR(rt1.c3)))OR('-1789237608')) IN (((rt0.c1) ISNULL)))) ORDER BY ABS(rt0.c1) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1789237608)))GLOB(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c3)))OR('-1789237608')) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ABS(rt0.c1) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1789237608)))GLOB(CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c3)OR(rt1.c3)))OR('-1789237608')) IN (((rt0.c1) ISNULL)))) ORDER BY ABS(rt0.c1) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1789237608)))GLOB(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)OR(rt1.c3)))OR('-1789237608')) IN (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ABS(rt0.c1) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1789237608)))GLOB(CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE ((((((rt1.c3)OR(rt1.c3)))OR('-1789237608')) IN (((rt0.c1) ISNULL)))) ORDER BY ABS(rt0.c1) DESC  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1789237608)))GLOB(CAST(rt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, vt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt1.c3)AND(vt1.c0)))AND(rt1.c2)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((((rt1.c3)AND(vt1.c0)))AND(rt1.c2)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, vt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt1.c3)AND(vt1.c0)))AND(rt1.c2)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((((rt1.c3)AND(vt1.c0)))AND(rt1.c2)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2))))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL COUNT(*) FROM rt1, rt0 NOT INDEXED, vt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt1.c3)AND(vt1.c0)))AND(rt1.c2)))) AND (((((rt0.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c2)))))));
SELECT ALL * FROM vt1, rt1 NATURAL JOIN rt0 WHERE (((((((((((((((vt1.c0)OR(rt1.c0)))AND(0.9462066110253933)))OR(vt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR('~g6HF嶔sV]')))OR(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END))) ORDER BY CAST(((1.610011108E9)<<(vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(rt1.c0)))AND(0.9462066110253933)))OR(vt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR('~g6HF嶔sV]')))OR(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0 ORDER BY CAST(((1.610011108E9)<<(vt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 NATURAL JOIN rt0 WHERE (((((((((((((((vt1.c0)OR(rt1.c0)))AND(0.9462066110253933)))OR(vt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR('~g6HF嶔sV]')))OR(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END))) ORDER BY CAST(((1.610011108E9)<<(vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(rt1.c0)))AND(0.9462066110253933)))OR(vt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR('~g6HF嶔sV]')))OR(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0 ORDER BY CAST(((1.610011108E9)<<(vt1.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 NATURAL JOIN rt0 WHERE (((((((((((((((vt1.c0)OR(rt1.c0)))AND(0.9462066110253933)))OR(vt1.c0)))AND(rt0.c1)))OR(rt1.c3)))OR('~g6HF嶔sV]')))OR(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END))) ORDER BY CAST(((1.610011108E9)<<(vt1.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT (((((vt1.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) ISNULL));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c1 END WHEN ((0.18730462049803953)&(rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((1.701772127E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) END) ORDER BY HEX(DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c1 END WHEN ((0.18730462049803953)&(rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((1.701772127E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY HEX(DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c1 END WHEN ((0.18730462049803953)&(rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((1.701772127E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) END) ORDER BY HEX(DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c1 END WHEN ((0.18730462049803953)&(rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((1.701772127E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY HEX(DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c1 END WHEN ((0.18730462049803953)&(rt1.c0)) THEN rt1.c2 COLLATE NOCASE WHEN ((1.701772127E9) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c1) ISNULL) END) ORDER BY HEX(DISTINCT CASE WHEN rt1.c1 THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('2082000851')!=(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY ((((((rt1.c2)+(rt1.c0)))OR(CAST('1184556482' AS TEXT))))AND(((rt1.c1)>=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((('2082000851')!=(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)+(rt1.c0)))OR(CAST('1184556482' AS TEXT))))AND(((rt1.c1)>=(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((('2082000851')!=(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY ((((((rt1.c2)+(rt1.c0)))OR(CAST('1184556482' AS TEXT))))AND(((rt1.c1)>=(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((('2082000851')!=(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)+(rt1.c0)))OR(CAST('1184556482' AS TEXT))))AND(((rt1.c1)>=(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((('2082000851')!=(((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY ((((((rt1.c2)+(rt1.c0)))OR(CAST('1184556482' AS TEXT))))AND(((rt1.c1)>=(rt1.c3))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((json_object(rt0.c0, vt1.c0)) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c0, vt1.c0)) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((json_object(rt0.c0, vt1.c0)) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_object(rt0.c0, vt1.c0)) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (vt1.c0))) AND (((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (0.7737556588768691) ORDER BY CAST((((rt0.c2, rt1.c2, rt0.c2))>=((rt1.c0, rt0.c2, rt0.c1))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0.7737556588768691) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY CAST((((rt0.c2, rt1.c2, rt0.c2))>=((rt1.c0, rt0.c2, rt0.c1))) AS TEXT) ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (0.7737556588768691) ORDER BY CAST((((rt0.c2, rt1.c2, rt0.c2))>=((rt1.c0, rt0.c2, rt0.c1))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((0.7737556588768691) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY CAST((((rt0.c2, rt1.c2, rt0.c2))>=((rt1.c0, rt0.c2, rt0.c1))) AS TEXT) ASC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (0.7737556588768691) ORDER BY CAST((((rt0.c2, rt1.c2, rt0.c2))>=((rt1.c0, rt0.c2, rt0.c1))) AS TEXT) ASC;
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))IS((((rt0.c1))>=((rt1.c3)))))) ORDER BY CAST(((rt1.c2)LIKE(rt1.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))IS((((rt0.c1))>=((rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c2)LIKE(rt1.c3)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))IS((((rt0.c1))>=((rt1.c3)))))) ORDER BY CAST(((rt1.c2)LIKE(rt1.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))IS((((rt0.c1))>=((rt1.c3)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(((rt1.c2)LIKE(rt1.c3)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((((rt1.c0)OR(rt1.c0)))OR(rt1.c1)))IS((((rt0.c1))>=((rt1.c3)))))) ORDER BY CAST(((rt1.c2)LIKE(rt1.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((- (rt1.c1))) IS FALSE) WHERE ((((rt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, ((((((((((((rt1.c3)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt1.c0)))AND(rt1.c0)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)) AND ((((rt1.c0)+(NULL)), NULL, json_type(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))LIKE(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, ((((((((((((rt1.c3)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt1.c0)))AND(rt1.c0)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)) AND ((((rt1.c0)+(NULL)), NULL, json_type(rt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((- (rt1.c1))) IS FALSE) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))LIKE(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((- (rt1.c1))) IS FALSE) WHERE ((((rt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, ((((((((((((rt1.c3)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt1.c0)))AND(rt1.c0)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)) AND ((((rt1.c0)+(NULL)), NULL, json_type(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))LIKE(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, ((((((((((((rt1.c3)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt1.c0)))AND(rt1.c0)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)) AND ((((rt1.c0)+(NULL)), NULL, json_type(rt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((- (rt1.c1))) IS FALSE) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))LIKE(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt1 ON (((- (rt1.c1))) IS FALSE) WHERE ((((rt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt1.c2 COLLATE BINARY, ((((((((((((rt1.c3)OR(rt1.c2)))AND(vt1.c0)))OR(rt1.c1)))AND(rt1.c0)))AND(vt1.c0)))AND(rt1.c0)), CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END)) AND ((((rt1.c0)+(NULL)), NULL, json_type(rt1.c1))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))LIKE(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt1 ON ((rt1.c3 COLLATE NOCASE)>=(((rt1.c3)<(rt1.c3)))) WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt0.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, NULL, vt1.c0)) AND ((0.48893931591087014, rt1.c1, rt0.c0)))) AND ((((rt1.c0))>=(('nIZtTE')))))) ORDER BY (~ (0.18785416709863334));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((((rt1.c2, rt0.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, NULL, vt1.c0)) AND ((0.48893931591087014, rt1.c1, rt0.c0)))) AND ((((rt1.c0))>=(('nIZtTE')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt1 ON ((rt1.c3 COLLATE NOCASE)>=(((rt1.c3)<(rt1.c3)))) ORDER BY (~ (0.18785416709863334)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt1 ON ((rt1.c3 COLLATE NOCASE)>=(((rt1.c3)<(rt1.c3)))) WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt0.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, NULL, vt1.c0)) AND ((0.48893931591087014, rt1.c1, rt0.c0)))) AND ((((rt1.c0))>=(('nIZtTE')))))) ORDER BY (~ (0.18785416709863334));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) BETWEEN ((((rt1.c2, rt0.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, NULL, vt1.c0)) AND ((0.48893931591087014, rt1.c1, rt0.c0)))) AND ((((rt1.c0))>=(('nIZtTE')))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt1 ON ((rt1.c3 COLLATE NOCASE)>=(((rt1.c3)<(rt1.c3)))) ORDER BY (~ (0.18785416709863334)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c2 CROSS JOIN vt1 ON ((rt1.c3 COLLATE NOCASE)>=(((rt1.c3)<(rt1.c3)))) WHERE (((rt1.c2) BETWEEN ((((rt1.c2, rt0.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, NULL, vt1.c0)) AND ((0.48893931591087014, rt1.c1, rt0.c0)))) AND ((((rt1.c0))>=(('nIZtTE')))))) ORDER BY (~ (0.18785416709863334));
SELECT * FROM rt0, rt1, vt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (LIKELY(x'')))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR(CAST(rt0.c2 AS TEXT))))AND(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (LIKELY(x'')))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((CAST(rt1.c0 AS REAL))OR(CAST(rt0.c2 AS TEXT))))AND(rt1.c1))  NULLS FIRST);
SELECT * FROM rt0, rt1, vt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (LIKELY(x'')))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR(CAST(rt0.c2 AS TEXT))))AND(rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (LIKELY(x'')))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((CAST(rt1.c0 AS REAL))OR(CAST(rt0.c2 AS TEXT))))AND(rt1.c1))  NULLS FIRST);
SELECT * FROM rt0, rt1, vt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (LIKELY(x'')))) ORDER BY ((((CAST(rt1.c0 AS REAL))OR(CAST(rt0.c2 AS TEXT))))AND(rt1.c1))  NULLS FIRST;
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT ALL * FROM rt0 WHERE ((('-938327192')&(((NULL) NOT BETWEEN ('610776869') AND (0.7937666056990678))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.39301713365108315)))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-938327192')&(((NULL) NOT BETWEEN ('610776869') AND (0.7937666056990678))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.39301713365108315)))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('-938327192')&(((NULL) NOT BETWEEN ('610776869') AND (0.7937666056990678))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.39301713365108315)))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-938327192')&(((NULL) NOT BETWEEN ('610776869') AND (0.7937666056990678))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.39301713365108315)))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('-938327192')&(((NULL) NOT BETWEEN ('610776869') AND (0.7937666056990678))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.39301713365108315)))) AND ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ASC  NULLS FIRST, CAST(rt0.c1 AS REAL) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))OR(x'')))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0))==((x''))))))AND('X')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS TEXT))OR(x'')))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0))=((x''))))))AND('X'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))OR(x'')))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0))==((x''))))))AND('X')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c2 AS TEXT))OR(x'')))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0))=((x''))))))AND('X'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS TEXT))OR(x'')))AND(CAST(rt0.c0 AS INTEGER))))OR((((rt0.c0))==((x''))))))AND('X')));
SELECT ALL * FROM rt1, vt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(rt1.c2 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c0 AS BLOB)) ORDER BY ((((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c0 AS BLOB)) ORDER BY ((((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c0 AS BLOB)) ORDER BY ((((((((((rt0.c0)AND(rt1.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))||(x'')) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((((((CAST(rt0.c1 AS BLOB))AND((rt1.c0 IN ()))))OR(CASE rt0.c1  WHEN -1822909340 THEN x'' ELSE 0X3e808abc END)))AND(((rt0.c0)==('c')))))OR(CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS BLOB))AND((rt1.c0 IN ()))))OR(CASE rt0.c1  WHEN -1822909340 THEN x'' ELSE 0x3e808abc END)))AND(((rt0.c0)==('c')))))OR(CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((((((CAST(rt0.c1 AS BLOB))AND((rt1.c0 IN ()))))OR(CASE rt0.c1  WHEN -1822909340 THEN x'' ELSE 0X3e808abc END)))AND(((rt0.c0)==('c')))))OR(CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS BLOB))AND((rt1.c0 IN ()))))OR(CASE rt0.c1  WHEN -1822909340 THEN x'' ELSE 0x3e808abc END)))AND(((rt0.c0)==('c')))))OR(CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN rt1 ON rt1.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN rt1 ON rt1.c0 WHERE (((((((((CAST(rt0.c1 AS BLOB))AND((rt1.c0 IN ()))))OR(CASE rt0.c1  WHEN -1822909340 THEN x'' ELSE 0X3e808abc END)))AND(((rt0.c0)==('c')))))OR(CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c3 END)));
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt0.c2))=((rt1.c1))))) AND ((ROUND(rt1.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN (((((rt0.c2))=((rt1.c1))))) AND ((ROUND(rt1.c2, rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt0.c2))=((rt1.c1))))) AND ((ROUND(rt1.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN (((((rt0.c2))=((rt1.c1))))) AND ((ROUND(rt1.c2, rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT COUNT(*) FROM vt1, rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt0.c2))=((rt1.c1))))) AND ((ROUND(rt1.c2, rt0.c1)))));
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c1))>=((rt1.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>=((rt1.c1)))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c1))>=((rt1.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))>=((rt1.c1)))) NOTNULL)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c1))>=((rt1.c1)))) NOTNULL));
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((rt1.c1 COLLATE BINARY IN ()));
SELECT * FROM rt1, rt0, vt1 WHERE ('\n屧Vs~p둳') ORDER BY (~ (load_extension(rt1.c2, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('\n屧Vs~p둳') IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (~ (load_extension(rt1.c2, vt1.c0)))  NULLS FIRST);
SELECT * FROM rt1, rt0, vt1 WHERE ('\n屧Vs~p둳') ORDER BY (~ (load_extension(rt1.c2, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('\n屧Vs~p둳') IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY (~ (load_extension(rt1.c2, vt1.c0)))  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c0, '1671577034', rt1.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c3, rt1.c0), ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c3)) AND ((326493771, (((rt1.c2))>((rt1.c2))), 0.011618553549813115))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, '1671577034', rt1.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c3, rt1.c0), ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c3)) AND ((326493771, (((rt1.c2))>((rt1.c2))), 0.011618553549813115)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0, '1671577034', rt1.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c3, rt1.c0), ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c3)) AND ((326493771, (((rt1.c2))>((rt1.c2))), 0.011618553549813115))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, '1671577034', rt1.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c3, rt1.c0), ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c3)) AND ((326493771, (((rt1.c2))>((rt1.c2))), 0.011618553549813115)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0, '1671577034', rt1.c2)) NOT BETWEEN ((NULLIF(DISTINCT rt1.c3, rt1.c0), ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c0)), rt1.c3)) AND ((326493771, (((rt1.c2))>((rt1.c2))), 0.011618553549813115))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ()) WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ()) WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ()) WHERE (((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((LIKELY(rt0.c0))AND(((rt1.c1)IS NOT(rt0.c1)))))AND(((rt1.c2)+(rt0.c2)))) CROSS JOIN rt0 ON ((rt1.c0)GLOB((rt1.c1 IN (rt0.c1, rt0.c2)))) WHERE ((((vt1.c0)) BETWEEN ((UPPER(rt1.c3))) AND (((rt1.c1 IN ()))))) ORDER BY ((STRFTIME(97871207, rt1.c0, vt1.c0)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)OR(rt1.c3)))OR(rt0.c0)))) DESC, (((((rt1.c0) ISNULL)))==((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((UPPER(rt1.c3))) AND (((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((LIKELY(rt0.c0))AND(((rt1.c1)IS NOT(rt0.c1)))))AND(((rt1.c2)+(rt0.c2)))) CROSS JOIN rt0 ON ((rt1.c0)GLOB((rt1.c1 IN (rt0.c1, rt0.c2)))) ORDER BY ((STRFTIME(97871207, rt1.c0, vt1.c0)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)OR(rt1.c3)))OR(rt0.c0)))) DESC, (((((rt1.c0) ISNULL)))=((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((((LIKELY(rt0.c0))AND(((rt1.c1)IS NOT(rt0.c1)))))AND(((rt1.c2)+(rt0.c2)))) CROSS JOIN rt0 ON ((rt1.c0)GLOB((rt1.c1 IN (rt0.c1, rt0.c2)))) WHERE ((((vt1.c0)) BETWEEN ((UPPER(rt1.c3))) AND (((rt1.c1 IN ()))))) ORDER BY ((STRFTIME(97871207, rt1.c0, vt1.c0)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)OR(rt1.c3)))OR(rt0.c0)))) DESC, (((((rt1.c0) ISNULL)))==((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((UPPER(rt1.c3))) AND (((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((((LIKELY(rt0.c0))AND(((rt1.c1)IS NOT(rt0.c1)))))AND(((rt1.c2)+(rt0.c2)))) CROSS JOIN rt0 ON ((rt1.c0)GLOB((rt1.c1 IN (rt0.c1, rt0.c2)))) ORDER BY ((STRFTIME(97871207, rt1.c0, vt1.c0)) BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((rt0.c1)OR(rt1.c3)))OR(rt0.c0)))) DESC, (((((rt1.c0) ISNULL)))=((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))) NOT NULL));
SELECT * FROM vt1 WHERE ((((~ ('672240911'))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ ('672240911'))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ ('672240911'))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ ('672240911'))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((~ ('672240911'))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (json_array_length(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (json_array_length(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (json_array_length(rt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON (rt0.c0 IN ()) COLLATE NOCASE INNER JOIN rt0 ON 0.7937666056990678 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (rt0.c0 IN ()) COLLATE NOCASE INNER JOIN rt0 ON 0.7937666056990678 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON (rt0.c0 IN ()) COLLATE NOCASE INNER JOIN rt0 ON 0.7937666056990678 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (rt0.c0 IN ()) COLLATE NOCASE INNER JOIN rt0 ON 0.7937666056990678 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON (rt0.c0 IN ()) COLLATE NOCASE INNER JOIN rt0 ON 0.7937666056990678 WHERE (NULL) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER) DESC;
SELECT * FROM rt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CASE WHEN (+ (rt1.c2)) THEN (NOT (rt1.c0)) ELSE 0.35439694395086807 END) ORDER BY ((json_extract(rt0.c0, rt1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c2)) THEN (NOT (rt1.c0)) ELSE 0.35439694395086807 END) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((json_extract(rt0.c0, rt1.c0)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (CASE WHEN (+ (rt1.c2)) THEN (NOT (rt1.c0)) ELSE 0.35439694395086807 END) ORDER BY ((json_extract(rt0.c0, rt1.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c2)) THEN (NOT (rt1.c0)) ELSE 0.35439694395086807 END) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((json_extract(rt0.c0, rt1.c0)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN 4.5814218E8 THEN vt1.c0 END) AND (IFNULL(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN 4.5814218E8 THEN vt1.c0 END) AND (IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN 4.5814218E8 THEN vt1.c0 END) AND (IFNULL(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN 4.5814218E8 THEN vt1.c0 END) AND (IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN 4.5814218E8 THEN vt1.c0 END) AND (IFNULL(DISTINCT vt1.c0, vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT ALL * FROM vt1, rt1 WHERE ((~ (CAST(rt1.c1 AS INTEGER)))) ORDER BY LOWER((vt1.c0 IN (rt1.c0, vt1.c0))) DESC  NULLS LAST, CASE CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END  WHEN NULL THEN ((((((((rt1.c0)OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY LOWER((vt1.c0 IN (rt1.c0, vt1.c0))) DESC  NULLS LAST, CASE CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END  WHEN NULL THEN ((((((((rt1.c0)OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) END ASC);
SELECT ALL * FROM vt1, rt1 WHERE ((~ (CAST(rt1.c1 AS INTEGER)))) ORDER BY LOWER((vt1.c0 IN (rt1.c0, vt1.c0))) DESC  NULLS LAST, CASE CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END  WHEN NULL THEN ((((((((rt1.c0)OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) END ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY LOWER((vt1.c0 IN (rt1.c0, vt1.c0))) DESC  NULLS LAST, CASE CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END  WHEN NULL THEN ((((((((rt1.c0)OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) END ASC);
SELECT ALL * FROM vt1, rt1 WHERE ((~ (CAST(rt1.c1 AS INTEGER)))) ORDER BY LOWER((vt1.c0 IN (rt1.c0, vt1.c0))) DESC  NULLS LAST, CASE CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END  WHEN NULL THEN ((((((((rt1.c0)OR(NULL)))OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) END ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((vt1.c0)AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c0)))OR((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, x'875d206c', rt0.c2)) AND ((rt0.c0, '-972226488', rt0.c0))))))OR(1.319984671E9 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c0)))OR((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, x'875d206c', rt0.c2)) AND ((rt0.c0, '-972226488', rt0.c0))))))OR(1.319984671E9 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((vt1.c0)AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c0)))OR((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, x'875d206c', rt0.c2)) AND ((rt0.c0, '-972226488', rt0.c0))))))OR(1.319984671E9 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c0)))OR((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, x'875d206c', rt0.c2)) AND ((rt0.c0, '-972226488', rt0.c0))))))OR(1.319984671E9 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((vt1.c0)AND((rt0.c2 IN (rt0.c2)))))AND(rt0.c0)))OR((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c2, x'875d206c', rt0.c2)) AND ((rt0.c0, '-972226488', rt0.c0))))))OR(1.319984671E9 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((0.35062684715769177) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((0.35062684715769177) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((0.35062684715769177) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((0.35062684715769177) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((0.35062684715769177) NOT NULL))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON INSTR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2) IS FALSE)) WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((rt1.c0)+(rt1.c0)) COLLATE BINARY, ((rt1.c0 IN (rt1.c0, vt1.c0)) IN ())  NULLS LAST, CAST((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON INSTR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2) IS FALSE)) ORDER BY ((rt1.c0)+(rt1.c0)) COLLATE BINARY, ((rt1.c0 IN (rt1.c0, vt1.c0)) IN ())  NULLS LAST, CAST((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS TEXT) DESC);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON INSTR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2) IS FALSE)) WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((rt1.c0)+(rt1.c0)) COLLATE BINARY, ((rt1.c0 IN (rt1.c0, vt1.c0)) IN ())  NULLS LAST, CAST((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON INSTR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2) IS FALSE)) ORDER BY ((rt1.c0)+(rt1.c0)) COLLATE BINARY, ((rt1.c0 IN (rt1.c0, vt1.c0)) IN ())  NULLS LAST, CAST((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS TEXT) DESC);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt1 ON INSTR((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c2) IS FALSE)) WHERE (((CAST(rt1.c2 AS NUMERIC)) NOT NULL)) ORDER BY ((rt1.c0)+(rt1.c0)) COLLATE BINARY, ((rt1.c0 IN (rt1.c0, vt1.c0)) IN ())  NULLS LAST, CAST((((rt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) AS TEXT) DESC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt1.c2) IS TRUE)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt1.c2) IS TRUE)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt1.c2) IS TRUE)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt1.c2) IS TRUE)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c2 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS REAL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE rt1.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) AND ((((rt1.c2) IS TRUE)))) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 END)>=(rt1.c2 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((- (rt0.c0))) NOT BETWEEN (MIN(rt1.c0, rt0.c2, rt1.c0, rt0.c2)) AND (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN (MIN(rt1.c0, rt0.c2, rt1.c0, rt0.c2)) AND (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((- (rt0.c0))) NOT BETWEEN (MIN(rt1.c0, rt0.c2, rt1.c0, rt0.c2)) AND (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT BETWEEN (MIN(rt1.c0, rt0.c2, rt1.c0, rt0.c2)) AND (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ((((- (rt0.c0))) NOT BETWEEN (MIN(rt1.c0, rt0.c2, rt1.c0, rt0.c2)) AND (((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c3) IS FALSE) THEN (rt1.c3 IN ()) WHEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN ((rt1.c0)*(rt1.c2)) END) ORDER BY ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)GLOB(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c3) IS FALSE) THEN (rt1.c3 IN ()) WHEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN ((rt1.c0)*(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)GLOB(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c3) IS FALSE) THEN (rt1.c3 IN ()) WHEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN ((rt1.c0)*(rt1.c2)) END) ORDER BY ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)GLOB(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c3) IS FALSE) THEN (rt1.c3 IN ()) WHEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN ((rt1.c0)*(rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)GLOB(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (CASE rt1.c1 COLLATE NOCASE  WHEN ((rt1.c3) IS FALSE) THEN (rt1.c3 IN ()) WHEN ((((rt1.c3)AND(rt1.c1)))OR(rt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN ((rt1.c0)*(rt1.c2)) END) ORDER BY ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END)GLOB(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c3)))) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((((NULL)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c1)|(rt0.c1))))  NULLS FIRST, (- ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c1)|(rt0.c1))))  NULLS FIRST, (- ((NOT (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((((NULL)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c1)|(rt0.c1))))  NULLS FIRST, (- ((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c1)|(rt0.c1))))  NULLS FIRST, (- ((NOT (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((((NULL)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) ORDER BY ((CAST(rt0.c1 AS BLOB))/(((rt0.c1)|(rt0.c1))))  NULLS FIRST, (- ((NOT (rt0.c2))));
SELECT ALL * FROM rt0 WHERE (((((((0.35439694395086807)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.35439694395086807)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((0.35439694395086807)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0.35439694395086807)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((0.35439694395086807)OR(rt0.c0)))OR(rt0.c1))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 END) AND (rt0.c2 COLLATE BINARY))) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)<>(vt1.c0))))) ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)<>(vt1.c0))))) ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)<>(vt1.c0))))) ORDER BY CAST((((vt1.c0))!=((vt1.c0))) AS TEXT) ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY CASE (((rt0.c1))!=((rt0.c0)))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN ((rt0.c1)||(rt0.c0)) WHEN CAST('-938327192' AS REAL) THEN '0.2976096271540343' ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c1))<>((rt0.c0)))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN ((rt0.c1)||(rt0.c0)) WHEN CAST('-938327192' AS REAL) THEN '0.2976096271540343' ELSE (rt0.c1 IN ()) END);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY CASE (((rt0.c1))!=((rt0.c0)))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN ((rt0.c1)||(rt0.c0)) WHEN CAST('-938327192' AS REAL) THEN '0.2976096271540343' ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CASE (((rt0.c1))<>((rt0.c0)))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN ((rt0.c1)||(rt0.c0)) WHEN CAST('-938327192' AS REAL) THEN '0.2976096271540343' ELSE (rt0.c1 IN ()) END);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY CASE (((rt0.c1))!=((rt0.c0)))  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN rt0.c0 THEN ((rt0.c1)||(rt0.c0)) WHEN CAST('-938327192' AS REAL) THEN '0.2976096271540343' ELSE (rt0.c1 IN ()) END;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c2)/(rt0.c1))))) ORDER BY (('0.3483262356059442') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (('0.3483262356059442') NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c2)/(rt0.c1))))) ORDER BY (('0.3483262356059442') NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (('0.3483262356059442') NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c2)/(rt0.c1))))) ORDER BY (('0.3483262356059442') NOT NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'') ORDER BY (- ((('458142180') BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (- ((('458142180') BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE (x'') ORDER BY (- ((('458142180') BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (- ((('458142180') BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE (x'') ORDER BY (- ((('458142180') BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)OR(rt0.c2))))) ORDER BY ((NULL)<>(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)<>(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)OR(rt0.c2))))) ORDER BY ((NULL)<>(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL)<>(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c2)OR(rt0.c2))))) ORDER BY ((NULL)<>(CAST(vt1.c0 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ())) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) NOTNULL) DESC;
SELECT * FROM rt0, rt1 WHERE ((((((((0Xffffffff9c76f419)AND(rt1.c0)))AND(rt1.c0))))==((LOWER(DISTINCT rt1.c3))))) ORDER BY NULL DESC  NULLS LAST, (((rt1.c3))<>((rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((0xffffffff9c76f419)AND(rt1.c0)))AND(rt1.c0))))=((LOWER(DISTINCT rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY NULL DESC  NULLS LAST, (((rt1.c3))!=((rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((((0Xffffffff9c76f419)AND(rt1.c0)))AND(rt1.c0))))==((LOWER(DISTINCT rt1.c3))))) ORDER BY NULL DESC  NULLS LAST, (((rt1.c3))<>((rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((0xffffffff9c76f419)AND(rt1.c0)))AND(rt1.c0))))=((LOWER(DISTINCT rt1.c3))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY NULL DESC  NULLS LAST, (((rt1.c3))!=((rt0.c2)))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((((0Xffffffff9c76f419)AND(rt1.c0)))AND(rt1.c0))))==((LOWER(DISTINCT rt1.c3))))) ORDER BY NULL DESC  NULLS LAST, (((rt1.c3))<>((rt0.c2)))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c1)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)LIKE(rt0.c1)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN x'0d71' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN NULL ELSE NULL END))) ORDER BY CASE rt1.c3  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3563136537666515) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE CAST(rt1.c3 AS REAL) END;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c2  WHEN x'0d71' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN NULL ELSE NULL END))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3563136537666515) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE CAST(rt1.c3 AS REAL) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN x'0d71' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN NULL ELSE NULL END))) ORDER BY CASE rt1.c3  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3563136537666515) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE CAST(rt1.c3 AS REAL) END;
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c2  WHEN x'0d71' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN NULL ELSE NULL END))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3563136537666515) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE CAST(rt1.c3 AS REAL) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c2  WHEN x'0d71' THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN NULL ELSE NULL END))) ORDER BY CASE rt1.c3  WHEN LIKELIHOOD(DISTINCT rt1.c1, 0.3563136537666515) THEN CASE WHEN rt1.c1 THEN rt1.c2 END WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) THEN CASE WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3))) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) ELSE CAST(rt1.c3 AS REAL) END;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((('n')OR(rt0.c2)))OR(vt1.c0))))) ORDER BY rt0.c1 COLLATE BINARY, ((((rt0.c2)IS NOT(x'')))OR(((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((('n')OR(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 COLLATE BINARY, ((((rt0.c2)IS NOT(x'')))OR(((rt0.c0)|(rt0.c2))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((('n')OR(rt0.c2)))OR(vt1.c0))))) ORDER BY rt0.c1 COLLATE BINARY, ((((rt0.c2)IS NOT(x'')))OR(((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((('n')OR(rt0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 COLLATE BINARY, ((((rt0.c2)IS NOT(x'')))OR(((rt0.c0)|(rt0.c2))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((('n')OR(rt0.c2)))OR(vt1.c0))))) ORDER BY rt0.c1 COLLATE BINARY, ((((rt0.c2)IS NOT(x'')))OR(((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1, rt1 WHERE ((((((((vt1.c0))!=((rt1.c1))))AND(x'')))AND(((rt1.c3) NOTNULL)))) ORDER BY (((((('Ns2x^43') BETWEEN (vt1.c0) AND (NULL)))AND((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))AND((+ (rt1.c3)))) DESC  NULLS LAST, (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<>((rt1.c1))))AND(x'')))AND(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((('Ns2x^43') BETWEEN (vt1.c0) AND (NULL)))AND((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))AND((+ (rt1.c3)))) DESC  NULLS LAST, (rt1.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt1, rt1 WHERE ((((((((vt1.c0))!=((rt1.c1))))AND(x'')))AND(((rt1.c3) NOTNULL)))) ORDER BY (((((('Ns2x^43') BETWEEN (vt1.c0) AND (NULL)))AND((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))AND((+ (rt1.c3)))) DESC  NULLS LAST, (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<>((rt1.c1))))AND(x'')))AND(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((('Ns2x^43') BETWEEN (vt1.c0) AND (NULL)))AND((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))AND((+ (rt1.c3)))) DESC  NULLS LAST, (rt1.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM vt1, rt1 WHERE ((((((((vt1.c0))!=((rt1.c1))))AND(x'')))AND(((rt1.c3) NOTNULL)))) ORDER BY (((((('Ns2x^43') BETWEEN (vt1.c0) AND (NULL)))AND((((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))))AND((+ (rt1.c3)))) DESC  NULLS LAST, (rt1.c0 COLLATE NOCASE IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE (((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>=(((rt1.c3)GLOB(rt1.c2))))) ORDER BY -2.34045288E8  NULLS LAST, (((NOT (rt1.c2)))*(TYPEOF(rt1.c1))) ASC  NULLS LAST, (((rt1.c2)<<(rt1.c2)) IN (CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>=(((rt1.c3)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY -2.34045288E8  NULLS LAST, (((NOT (rt1.c2)))*(TYPEOF(rt1.c1))) ASC  NULLS LAST, (((rt1.c2)<<(rt1.c2)) IN (CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>=(((rt1.c3)GLOB(rt1.c2))))) ORDER BY -2.34045288E8  NULLS LAST, (((NOT (rt1.c2)))*(TYPEOF(rt1.c1))) ASC  NULLS LAST, (((rt1.c2)<<(rt1.c2)) IN (CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>=(((rt1.c3)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY -2.34045288E8  NULLS LAST, (((NOT (rt1.c2)))*(TYPEOF(rt1.c1))) ASC  NULLS LAST, (((rt1.c2)<<(rt1.c2)) IN (CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((('')) BETWEEN ((rt1.c1)) AND ((rt1.c1))))>=(((rt1.c3)GLOB(rt1.c2))))) ORDER BY -2.34045288E8  NULLS LAST, (((NOT (rt1.c2)))*(TYPEOF(rt1.c1))) ASC  NULLS LAST, (((rt1.c2)<<(rt1.c2)) IN (CAST(rt1.c1 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 INNER JOIN rt1 ON rt1.c3 WHERE (CAST(rt1.c0 AS REAL)) ORDER BY (x'3b85' IN ());
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt1.c3 ORDER BY (x'3b85' IN ()));
SELECT ALL * FROM vt1, rt0 INNER JOIN rt1 ON rt1.c3 WHERE (CAST(rt1.c0 AS REAL)) ORDER BY (x'3b85' IN ());
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS REAL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON rt1.c3 ORDER BY (x'3b85' IN ()));
SELECT ALL * FROM vt1, rt0 INNER JOIN rt1 ON rt1.c3 WHERE (CAST(rt1.c0 AS REAL)) ORDER BY (x'3b85' IN ());
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END IN ()) CROSS JOIN vt1 ON 0.2906406266305933 WHERE (((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((+ ('9*'))) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((+ ('9*'))) AND (rt1.c3))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END IN ()) CROSS JOIN vt1 ON 0.2906406266305933);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END IN ()) CROSS JOIN vt1 ON 0.2906406266305933 WHERE (((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((+ ('9*'))) AND (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((+ ('9*'))) AND (rt1.c3))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END IN ()) CROSS JOIN vt1 ON 0.2906406266305933);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END IN ()) CROSS JOIN vt1 ON 0.2906406266305933 WHERE (((((rt1.c2)OR(rt1.c0))) NOT BETWEEN ((+ ('9*'))) AND (rt1.c3)));
SELECT * FROM rt1 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY CAST(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN -9.75033699E8 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN -9.75033699E8 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END AS BLOB) DESC);
SELECT * FROM rt1 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY CAST(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN -9.75033699E8 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY CAST(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN -9.75033699E8 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END AS BLOB) DESC);
SELECT * FROM rt1 WHERE (rt1.c2 COLLATE RTRIM) ORDER BY CAST(CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN -9.75033699E8 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c2 END AS BLOB) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) IS TRUE));
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((x'')GLOB(rt0.c1)))<((rt0.c2 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((x'')GLOB(rt0.c1)))<((rt0.c2 IN (rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((x'')GLOB(rt0.c1)))<((rt0.c2 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((x'')GLOB(rt0.c1)))<((rt0.c2 IN (rt0.c0)))) DESC);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((x'')GLOB(rt0.c1)))<((rt0.c2 IN (rt0.c0)))) DESC;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)>>(vt1.c0))) BETWEEN (((rt0.c0)%(vt1.c0))) AND (((x'')<<(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(vt1.c0))) BETWEEN (((rt0.c0)%(vt1.c0))) AND (((x'')<<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE x'' END  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)>>(vt1.c0))) BETWEEN (((rt0.c0)%(vt1.c0))) AND (((x'')<<(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(vt1.c0))) BETWEEN (((rt0.c0)%(vt1.c0))) AND (((x'')<<(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE x'' END  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)>>(vt1.c0))) BETWEEN (((rt0.c0)%(vt1.c0))) AND (((x'')<<(rt0.c0))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c1 IN ()) ELSE x'' END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('911202572', rt1.c0, rt1.c3)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt1.c3, rt0.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT (((((('911202572', rt1.c0, rt1.c3)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt1.c3, rt0.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('911202572', rt1.c0, rt1.c3)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt1.c3, rt0.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT (((((('911202572', rt1.c0, rt1.c3)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt1.c3, rt0.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((('911202572', rt1.c0, rt1.c3)) BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt1.c3, rt0.c0, vt1.c0))) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CAST(((rt1.c3)=(rt1.c0)) AS BLOB) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST(((rt1.c3)=(rt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CAST(((rt1.c3)=(rt1.c0)) AS BLOB) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON CAST(((rt1.c3)=(rt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON CAST(((rt1.c3)=(rt1.c0)) AS BLOB) WHERE (rt1.c1);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0 IN ()))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE '෕NSp\7' END)))AND('-1669925863')) CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN '' END) IS TRUE) WHERE ('䦋BnrlZy' COLLATE RTRIM) ORDER BY 0X6b09ecf6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('䦋BnrlZy' COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0 IN ()))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE '෕NSp\7' END)))AND('-1669925863')) CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN '' END) IS TRUE) ORDER BY 0x6b09ecf6 ASC  NULLS FIRST);
SELECT ALL * FROM rt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0 IN ()))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE '෕NSp\7' END)))AND('-1669925863')) CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN '' END) IS TRUE) WHERE ('䦋BnrlZy' COLLATE RTRIM) ORDER BY 0X6b09ecf6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('䦋BnrlZy' COLLATE RTRIM) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((vt1.c0 IN ()))OR(CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 ELSE '෕NSp\7' END)))AND('-1669925863')) CROSS JOIN vt1 ON ((CASE WHEN vt1.c0 THEN '' END) IS TRUE) ORDER BY 0x6b09ecf6 ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c3)IS(rt0.c2))  WHEN ((((rt1.c3)OR(rt0.c2)))AND(rt1.c2)) THEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c3)+(rt1.c2)) THEN ((rt0.c2)+(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN '䝺)))\n5zG7' WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c2))<((rt1.c3))) ELSE CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY UPPER(rt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)IS(rt0.c2))  WHEN ((((rt1.c3)OR(rt0.c2)))AND(rt1.c2)) THEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c3)+(rt1.c2)) THEN ((rt0.c2)+(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN '䝺)))\n5zG7' WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c2))<((rt1.c3))) ELSE CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1, rt0 ORDER BY UPPER(rt0.c1) COLLATE BINARY);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c3)IS(rt0.c2))  WHEN ((((rt1.c3)OR(rt0.c2)))AND(rt1.c2)) THEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c3)+(rt1.c2)) THEN ((rt0.c2)+(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN '䝺)))\n5zG7' WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c2))<((rt1.c3))) ELSE CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY UPPER(rt0.c1) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)IS(rt0.c2))  WHEN ((((rt1.c3)OR(rt0.c2)))AND(rt1.c2)) THEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c3)+(rt1.c2)) THEN ((rt0.c2)+(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN '䝺)))\n5zG7' WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c2))<((rt1.c3))) ELSE CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM rt1, rt0 ORDER BY UPPER(rt0.c1) COLLATE BINARY);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c3)IS(rt0.c2))  WHEN ((((rt1.c3)OR(rt0.c2)))AND(rt1.c2)) THEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) WHEN ((rt1.c3)+(rt1.c2)) THEN ((rt0.c2)+(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN '䝺)))\n5zG7' WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c2))<((rt1.c3))) ELSE CASE WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END) ORDER BY UPPER(rt0.c1) COLLATE BINARY;
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, (((vt1.c0))<((vt1.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, (((vt1.c0))<((vt1.c0))) COLLATE BINARY DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, (((vt1.c0))<((vt1.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, (((vt1.c0))<((vt1.c0))) COLLATE BINARY DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0) ISNULL)) IS FALSE) DESC, (((vt1.c0))<((vt1.c0))) COLLATE BINARY DESC;
SELECT * FROM vt1, rt1, rt0 WHERE (json_array_length(0.09203503729989726));
SELECT SUM(count) FROM (SELECT ((json_array_length(0.09203503729989726)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (json_array_length(0.09203503729989726));
SELECT SUM(count) FROM (SELECT ((json_array_length(0.09203503729989726)) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT * FROM vt1, rt1, rt0 WHERE (json_array_length(0.09203503729989726));
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY (- (((((((((vt1.c0)OR(0xffffffff98c9d24c)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- (((((((((vt1.c0)OR(0Xffffffff98c9d24c)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY (- (((((((((vt1.c0)OR(0xffffffff98c9d24c)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- (((((((((vt1.c0)OR(0Xffffffff98c9d24c)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY) ORDER BY (- (((((((((vt1.c0)OR(0xffffffff98c9d24c)))OR(rt0.c2)))AND(rt0.c0)))OR(vt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((~ (rt0.c1)) IN ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((~ (rt0.c1)) IN ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((~ (rt0.c1)) IN ((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((~ (rt0.c1)) IN ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((~ (rt0.c1)) IN ((rt0.c0 IN ())));
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ())) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c3 IN ()));
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c0)+(rt0.c0)))/(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt0.c0)))/(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c0)+(rt0.c0)))/(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)+(rt0.c0)))/(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c0)+(rt0.c0)))/(CASE rt0.c2  WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c0 THEN rt0.c1 END)));
SELECT ALL * FROM rt1 WHERE (((CHANGES()) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) AND (TRIM(rt1.c0, rt1.c2)))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) AND (TRIM(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1 WHERE (((CHANGES()) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) AND (TRIM(rt1.c0, rt1.c2)))) ORDER BY rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) AND (TRIM(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 ASC);
SELECT ALL * FROM rt1 WHERE (((CHANGES()) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END) AND (TRIM(rt1.c0, rt1.c2)))) ORDER BY rt1.c2 ASC;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt1.c3)&(rt1.c0))) AND (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)) LEFT OUTER JOIN rt1 ON '' WHERE (((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR(json_array(rt1.c1, rt0.c2))))AND(IFNULL('', vt1.c0))))AND(rt1.c0)))AND(rt1.c3 COLLATE NOCASE))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(rt1.c0));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR(json_array(rt1.c1, rt0.c2))))AND(IFNULL('', vt1.c0))))AND(rt1.c0)))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt1.c3)&(rt1.c0))) AND (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)) LEFT OUTER JOIN rt1 ON '' ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(rt1.c0)));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt1.c3)&(rt1.c0))) AND (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)) LEFT OUTER JOIN rt1 ON '' WHERE (((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR(json_array(rt1.c1, rt0.c2))))AND(IFNULL('', vt1.c0))))AND(rt1.c0)))AND(rt1.c3 COLLATE NOCASE))) ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(rt1.c0));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c3)))OR(json_array(rt1.c1, rt0.c2))))AND(IFNULL('', vt1.c0))))AND(rt1.c0)))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1))) NOT BETWEEN (((rt1.c3)&(rt1.c0))) AND (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)) LEFT OUTER JOIN rt1 ON '' ORDER BY ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END)AND((rt0.c0 IN ()))))AND(rt1.c0)));
SELECT * FROM rt0, rt1, vt1 WHERE (((((vt1.c0, 0Xfffffffff7b5cd28, rt1.c0))<>((vt1.c0, rt1.c1, rt1.c0))) IN (rt0.c2 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, 0Xfffffffff7b5cd28, rt1.c0))<>((vt1.c0, rt1.c1, rt1.c0))) IN (rt0.c2 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((vt1.c0, 0Xfffffffff7b5cd28, rt1.c0))<>((vt1.c0, rt1.c1, rt1.c0))) IN (rt0.c2 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0, 0Xfffffffff7b5cd28, rt1.c0))<>((vt1.c0, rt1.c1, rt1.c0))) IN (rt0.c2 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((vt1.c0, 0Xfffffffff7b5cd28, rt1.c0))<>((vt1.c0, rt1.c1, rt1.c0))) IN (rt0.c2 COLLATE BINARY, ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((((('2137275870')AND(rt0.c2)))OR(rt0.c0)), 0.9471181178180389) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY TRIM(((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)), (('')-(vt1.c0))) DESC  NULLS FIRST, (((rt0.c1 IN (NULL))) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((((('2137275870')AND(rt0.c2)))OR(rt0.c0)), 0.9471181178180389) ORDER BY TRIM(((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)), (('')-(vt1.c0))) DESC  NULLS FIRST, (((rt0.c1 IN (NULL))) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((((('2137275870')AND(rt0.c2)))OR(rt0.c0)), 0.9471181178180389) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY TRIM(((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)), (('')-(vt1.c0))) DESC  NULLS FIRST, (((rt0.c1 IN (NULL))) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((((('2137275870')AND(rt0.c2)))OR(rt0.c0)), 0.9471181178180389) ORDER BY TRIM(((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)), (('')-(vt1.c0))) DESC  NULLS FIRST, (((rt0.c1 IN (NULL))) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON LIKELIHOOD((((('2137275870')AND(rt0.c2)))OR(rt0.c0)), 0.9471181178180389) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY TRIM(((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)), (('')-(vt1.c0))) DESC  NULLS FIRST, (((rt0.c1 IN (NULL))) BETWEEN (x'') AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE ((((rt0.c0)<=(rt0.c1)) IN ()));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)IS NOT(vt1.c0)) END) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (('sw+E?\n>ch' IN ())) AND (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (('sw+E?\n>ch' IN ())) AND (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)IS NOT(vt1.c0)) END) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (('sw+E?\n>ch' IN ())) AND (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (('sw+E?\n>ch' IN ())) AND (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)IS NOT(vt1.c0)) END) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (('sw+E?\n>ch' IN ())) AND (((rt0.c2)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c0) AND (0.6004576953273598))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c0) AND (0.6004576953273598))) ISNULL)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c0) AND (0.6004576953273598))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt1.c0) AND (0.6004576953273598))) ISNULL)) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c0) AND (0.6004576953273598))) ISNULL));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)%(vt1.c0))))  NULLS FIRST, (NOT (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)%(vt1.c0))))  NULLS FIRST, (NOT (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)%(vt1.c0))))  NULLS FIRST, (NOT (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)%(vt1.c0))))  NULLS FIRST, (NOT (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))+(((vt1.c0)%(vt1.c0))))  NULLS FIRST, (NOT (CAST(vt1.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 326493771 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CAST(((rt0.c0)<<(rt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)||(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 326493771 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)<<(rt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 326493771 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CAST(((rt0.c0)<<(rt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)||(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 326493771 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)<<(rt0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN 326493771 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1))))) ORDER BY CAST(((rt0.c0)<<(rt0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, rt0, rt1);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (x'');
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((((rt1.c0) IS FALSE)) IS FALSE) WHERE (((rt1.c1)GLOB((((rt0.c0))>=((rt1.c1)))))) ORDER BY (((('-1159697644') IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (((rt0.c1)>(vt1.c0)))) ASC  NULLS LAST, (((rt0.c1, x'', rt0.c0)) BETWEEN ((rt0.c1, ABS(DISTINCT rt1.c2), ((rt1.c1) IS TRUE))) AND ((NULL, ((rt1.c1) NOT NULL), ((rt0.c1)OR(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)GLOB((((rt0.c0))>=((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((((rt1.c0) IS FALSE)) IS FALSE) ORDER BY (((('-1159697644') IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (((rt0.c1)>(vt1.c0)))) ASC  NULLS LAST, (((rt0.c1, x'', rt0.c0)) BETWEEN ((rt0.c1, ABS(DISTINCT rt1.c2), ((rt1.c1) IS TRUE))) AND ((NULL, ((rt1.c1) NOT NULL), ((rt0.c1)OR(rt0.c0))))) DESC);
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((((rt1.c0) IS FALSE)) IS FALSE) WHERE (((rt1.c1)GLOB((((rt0.c0))>=((rt1.c1)))))) ORDER BY (((('-1159697644') IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (((rt0.c1)>(vt1.c0)))) ASC  NULLS LAST, (((rt0.c1, x'', rt0.c0)) BETWEEN ((rt0.c1, ABS(DISTINCT rt1.c2), ((rt1.c1) IS TRUE))) AND ((NULL, ((rt1.c1) NOT NULL), ((rt0.c1)OR(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)GLOB((((rt0.c0))>=((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((((rt1.c0) IS FALSE)) IS FALSE) ORDER BY (((('-1159697644') IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (((rt0.c1)>(vt1.c0)))) ASC  NULLS LAST, (((rt0.c1, x'', rt0.c0)) BETWEEN ((rt0.c1, ABS(DISTINCT rt1.c2), ((rt1.c1) IS TRUE))) AND ((NULL, ((rt1.c1) NOT NULL), ((rt0.c1)OR(rt0.c0))))) DESC);
SELECT * FROM rt1, vt1 INNER JOIN rt0 ON ((((rt1.c0) IS FALSE)) IS FALSE) WHERE (((rt1.c1)GLOB((((rt0.c0))>=((rt1.c1)))))) ORDER BY (((('-1159697644') IS TRUE)) NOT BETWEEN ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c3)))) AND (((rt0.c1)>(vt1.c0)))) ASC  NULLS LAST, (((rt0.c1, x'', rt0.c0)) BETWEEN ((rt0.c1, ABS(DISTINCT rt1.c2), ((rt1.c1) IS TRUE))) AND ((NULL, ((rt1.c1) NOT NULL), ((rt0.c1)OR(rt0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN vt1.c0 END)<(vt1.c0))) ORDER BY (('-975033699')LIKE((NOT (0.663354265365129)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN NULL THEN vt1.c0 END)<(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (('-975033699')LIKE((NOT (0.663354265365129)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN vt1.c0 END)<(vt1.c0))) ORDER BY (('-975033699')LIKE((NOT (0.663354265365129)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN NULL THEN vt1.c0 END)<(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (('-975033699')LIKE((NOT (0.663354265365129)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN NULL THEN vt1.c0 END)<(vt1.c0))) ORDER BY (('-975033699')LIKE((NOT (0.663354265365129)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.821261700311124) IN ())) ORDER BY (NOT ((((0.35062684715769177, '-204777206', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(vt1.c0, 0.821261700311124) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((0.35062684715769177, '-204777206', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.821261700311124) IN ())) ORDER BY (NOT ((((0.35062684715769177, '-204777206', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(vt1.c0, 0.821261700311124) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (NOT ((((0.35062684715769177, '-204777206', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(vt1.c0, 0.821261700311124) IN ())) ORDER BY (NOT ((((0.35062684715769177, '-204777206', vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))));
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((rt1.c1 IN (rt1.c1, rt1.c2))))<=(((~ (NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN (rt1.c1, rt1.c2))))<=(((~ (NULL)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((rt1.c1 IN (rt1.c1, rt1.c2))))<=(((~ (NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1 IN (rt1.c1, rt1.c2))))<=(((~ (NULL)))))) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT * FROM rt0, rt1, vt1 WHERE (((((rt1.c1 IN (rt1.c1, rt1.c2))))<=(((~ (NULL))))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (NULL))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (NULL))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (NULL))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (NULL))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((rt0.c1 IN ())))));
SELECT ALL * FROM vt1, rt1, rt0 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (NULL) AND (NULL))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) IS FALSE))) AND (((rt0.c1 IN ()))));
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c1))) NOT NULL));
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((('') ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('') ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((('') ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('') ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT ALL * FROM rt0, rt1, vt1 WHERE ((((('') ISNULL)) IS TRUE));
SELECT * FROM vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE)) ORDER BY (0.6004576953273598 IN (CAST(rt1.c2 AS INTEGER), ((vt1.c0)<=(rt1.c1)))) DESC, ((vt1.c0) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY (0.6004576953273598 IN (CAST(rt1.c2 AS INTEGER), ((vt1.c0)<=(rt1.c1)))) DESC, ((vt1.c0) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE)) ORDER BY (0.6004576953273598 IN (CAST(rt1.c2 AS INTEGER), ((vt1.c0)<=(rt1.c1)))) DESC, ((vt1.c0) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(rt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY (0.6004576953273598 IN (CAST(rt1.c2 AS INTEGER), ((vt1.c0)<=(rt1.c1)))) DESC, ((vt1.c0) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(rt1.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END) IS TRUE)) ORDER BY (0.6004576953273598 IN (CAST(rt1.c2 AS INTEGER), ((vt1.c0)<=(rt1.c1)))) DESC, ((vt1.c0) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (((vt1.c0)OR(rt1.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1)))AND(LOWER(rt0.c0))))AND(rt0.c1)))AND(CAST(1671577034 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1)))AND(LOWER(rt0.c0))))AND(rt0.c1)))AND(CAST(1671577034 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1)))AND(LOWER(rt0.c0))))AND(rt0.c1)))AND(CAST(1671577034 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1)))AND(LOWER(rt0.c0))))AND(rt0.c1)))AND(CAST(1671577034 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))OR(rt0.c1)))AND(LOWER(rt0.c0))))AND(rt0.c1)))AND(CAST(1671577034 AS REAL))));
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS REAL))>((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))>((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS REAL))>((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS REAL))>((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CAST(rt1.c1 AS REAL))>((((rt1.c1)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0)GLOB(rt1.c0)), x'', (rt0.c2 IN ())))>(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))), LOWER(rt0.c0), ((rt0.c2)<=(rt1.c2))))) WHERE (((0.3302506621983665)>>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.3302506621983665)>>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0)GLOB(rt1.c0)), x'', (rt0.c2 IN ())))>(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))), LOWER(rt0.c0), ((rt0.c2)<=(rt1.c2))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0)GLOB(rt1.c0)), x'', (rt0.c2 IN ())))>(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))), LOWER(rt0.c0), ((rt0.c2)<=(rt1.c2))))) WHERE (((0.3302506621983665)>>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((0.3302506621983665)>>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0)GLOB(rt1.c0)), x'', (rt0.c2 IN ())))>(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))), LOWER(rt0.c0), ((rt0.c2)<=(rt1.c2))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((((rt1.c0)GLOB(rt1.c0)), x'', (rt0.c2 IN ())))>(((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c0))), LOWER(rt0.c0), ((rt0.c2)<=(rt1.c2))))) WHERE (((0.3302506621983665)>>(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c3) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c3) IS TRUE))));
SELECT * FROM vt1 WHERE ((((((((((((((((('1795812598')OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND((((vt1.c0))==((vt1.c0))))))OR(((vt1.c0) BETWEEN (x'53350885') AND (vt1.c0)))))AND((((vt1.c0))<>((vt1.c0))))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((x'7511') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((('1795812598')OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND((((vt1.c0))==((vt1.c0))))))OR(((vt1.c0) BETWEEN (x'53350885') AND (vt1.c0)))))AND((((vt1.c0))<>((vt1.c0))))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((x'7511') IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((((((('1795812598')OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND((((vt1.c0))==((vt1.c0))))))OR(((vt1.c0) BETWEEN (x'53350885') AND (vt1.c0)))))AND((((vt1.c0))<>((vt1.c0))))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((x'7511') IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((('1795812598')OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND((((vt1.c0))==((vt1.c0))))))OR(((vt1.c0) BETWEEN (x'53350885') AND (vt1.c0)))))AND((((vt1.c0))<>((vt1.c0))))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((x'7511') IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((((((('1795812598')OR(vt1.c0)))AND(vt1.c0)))OR(x'')))AND((((vt1.c0))==((vt1.c0))))))OR(((vt1.c0) BETWEEN (x'53350885') AND (vt1.c0)))))AND((((vt1.c0))<>((vt1.c0))))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((x'7511') IS TRUE))));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (((rt1.c0)>=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0)>=(rt1.c3))))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (((rt1.c0)>=(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0)>=(rt1.c3))))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (((rt1.c0)>=(rt1.c3)))));
SELECT ALL * FROM vt1, rt1 WHERE (((NULL IN (NULL, rt1.c0)) IN ())) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL IN (NULL, rt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (((NULL IN (NULL, rt1.c0)) IN ())) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL IN (NULL, rt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE (((NULL IN (NULL, rt1.c0)) IN ())) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) ORDER BY ((((((((((rt0.c0)IS NOT(rt1.c1)))OR(CAST(rt1.c3 AS TEXT))))AND(((((rt1.c2)OR('0.20957096720163504')))AND(rt1.c2)))))AND((rt1.c3 IN ()))))OR(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((((rt0.c0)IS NOT(rt1.c1)))OR(CAST(rt1.c3 AS TEXT))))AND(((((rt1.c2)OR('0.20957096720163504')))AND(rt1.c2)))))AND((rt1.c3 IN ()))))OR(rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) ORDER BY ((((((((((rt0.c0)IS NOT(rt1.c1)))OR(CAST(rt1.c3 AS TEXT))))AND(((((rt1.c2)OR('0.20957096720163504')))AND(rt1.c2)))))AND((rt1.c3 IN ()))))OR(rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((((((rt0.c0)IS NOT(rt1.c1)))OR(CAST(rt1.c3 AS TEXT))))AND(((((rt1.c2)OR('0.20957096720163504')))AND(rt1.c2)))))AND((rt1.c3 IN ()))))OR(rt0.c0)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) ORDER BY ((((((((((rt0.c0)IS NOT(rt1.c1)))OR(CAST(rt1.c3 AS TEXT))))AND(((((rt1.c2)OR('0.20957096720163504')))AND(rt1.c2)))))AND((rt1.c3 IN ()))))OR(rt0.c0)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (MAX(((((x'')OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((MAX(((((x'')OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (MAX(((((x'')OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((MAX(((((x'')OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (MAX(((((x'')OR(rt1.c1)))AND(rt1.c3)), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, vt1 WHERE (CAST(rt1.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CAST(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 0.5770940323876526 END)/((vt1.c0 IN ()))) WHERE (((rt0.c0)OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 0.5770940323876526 END)/((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 0.5770940323876526 END)/((vt1.c0 IN ()))) WHERE (((rt0.c0)OR(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 0.5770940323876526 END)/((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN 0.5770940323876526 END)/((vt1.c0 IN ()))) WHERE (((rt0.c0)OR(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((rt1.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((rt1.c0) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY ((rt1.c0) ISNULL);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c1) IS FALSE))AND(((rt0.c1)<>(rt1.c2)))))AND(((0.0030018598393780627) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY '0.656713753874981';
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))AND(((rt0.c1)!=(rt1.c2)))))AND(((0.0030018598393780627) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '0.656713753874981');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c1) IS FALSE))AND(((rt0.c1)<>(rt1.c2)))))AND(((0.0030018598393780627) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY '0.656713753874981';
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) IS FALSE))AND(((rt0.c1)!=(rt1.c2)))))AND(((0.0030018598393780627) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '0.656713753874981');
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c1) IS FALSE))AND(((rt0.c1)<>(rt1.c2)))))AND(((0.0030018598393780627) BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY '0.656713753874981';
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (x'') AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (x'') AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (x'') AND (((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (x'') AND (((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (x'') AND (((rt1.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((LOWER(vt1.c0))OR(((rt0.c1)&(vt1.c0)))))AND(json_array(vt1.c0, rt0.c2)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c2)) AND ((((vt1.c0))<((0.03338647890936752))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(vt1.c0))OR(((rt0.c1)&(vt1.c0)))))AND(json_array(vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c2)) AND ((((vt1.c0))<((0.03338647890936752))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((LOWER(vt1.c0))OR(((rt0.c1)&(vt1.c0)))))AND(json_array(vt1.c0, rt0.c2)))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c2)) AND ((((vt1.c0))<((0.03338647890936752))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(vt1.c0))OR(((rt0.c1)&(vt1.c0)))))AND(json_array(vt1.c0, rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c2)) AND ((((vt1.c0))<((0.03338647890936752))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((- (rt0.c1)))AND(((((rt1.c2)AND(rt1.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))AND(((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((- (rt0.c1)))AND(((((rt1.c2)AND(rt1.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))AND(((((rt1.c2)AND(rt1.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM vt1, rt0, rt1);
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((- (rt0.c1)))AND(((((rt1.c2)AND(rt1.c0)))OR(rt1.c3)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((rt0.c0)) AND ((rt1.c0))))));
SELECT * FROM rt0, rt1 WHERE ((~ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((~ (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((~ (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM rt1, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) ORDER BY TRIM(((rt1.c3)<=(rt1.c3))) ASC, COALESCE(UNLIKELY(DISTINCT rt1.c1), TRIM(vt1.c0), ((((rt1.c0)AND(rt1.c1)))OR(NULL)), NULL) ASC  NULLS LAST, (((rt1.c3, x'', rt1.c3)) BETWEEN (((((rt1.c0, 2.141290576E9, rt1.c1)) BETWEEN ((vt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, x'', rt1.c0))), CAST(rt1.c3 AS BLOB), (NOT (rt1.c0)))) AND (((rt1.c2 IN (vt1.c0)), (- (rt1.c0)), rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY TRIM(((rt1.c3)<=(rt1.c3))) ASC, COALESCE(UNLIKELY(DISTINCT rt1.c1), TRIM(vt1.c0), ((((rt1.c0)AND(rt1.c1)))OR(NULL)), NULL) ASC  NULLS LAST, (((rt1.c3, x'', rt1.c3)) BETWEEN (((((rt1.c0, 2.141290576E9, rt1.c1)) BETWEEN ((vt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, x'', rt1.c0))), CAST(rt1.c3 AS BLOB), (NOT (rt1.c0)))) AND (((rt1.c2 IN (vt1.c0)), (- (rt1.c0)), rt1.c1 COLLATE RTRIM))));
SELECT ALL * FROM rt1, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) ORDER BY TRIM(((rt1.c3)<=(rt1.c3))) ASC, COALESCE(UNLIKELY(DISTINCT rt1.c1), TRIM(vt1.c0), ((((rt1.c0)AND(rt1.c1)))OR(NULL)), NULL) ASC  NULLS LAST, (((rt1.c3, x'', rt1.c3)) BETWEEN (((((rt1.c0, 2.141290576E9, rt1.c1)) BETWEEN ((vt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, x'', rt1.c0))), CAST(rt1.c3 AS BLOB), (NOT (rt1.c0)))) AND (((rt1.c2 IN (vt1.c0)), (- (rt1.c0)), rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY TRIM(((rt1.c3)<=(rt1.c3))) ASC, COALESCE(UNLIKELY(DISTINCT rt1.c1), TRIM(vt1.c0), ((((rt1.c0)AND(rt1.c1)))OR(NULL)), NULL) ASC  NULLS LAST, (((rt1.c3, x'', rt1.c3)) BETWEEN (((((rt1.c0, 2.141290576E9, rt1.c1)) BETWEEN ((vt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, x'', rt1.c0))), CAST(rt1.c3 AS BLOB), (NOT (rt1.c0)))) AND (((rt1.c2 IN (vt1.c0)), (- (rt1.c0)), rt1.c1 COLLATE RTRIM))));
SELECT ALL * FROM rt1, vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) ORDER BY TRIM(((rt1.c3)<=(rt1.c3))) ASC, COALESCE(UNLIKELY(DISTINCT rt1.c1), TRIM(vt1.c0), ((((rt1.c0)AND(rt1.c1)))OR(NULL)), NULL) ASC  NULLS LAST, (((rt1.c3, x'', rt1.c3)) BETWEEN (((((rt1.c0, 2.141290576E9, rt1.c1)) BETWEEN ((vt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c1, x'', rt1.c0))), CAST(rt1.c3 AS BLOB), (NOT (rt1.c0)))) AND (((rt1.c2 IN (vt1.c0)), (- (rt1.c0)), rt1.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((('2000508063'))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CASE rt0.c2  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)<=(rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)%(-1760992316)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((('2000508063'))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)<=(rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)%(-1760992316)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL * FROM rt0 WHERE (((('2000508063'))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CASE rt0.c2  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)<=(rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)%(-1760992316)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((((('2000508063'))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)<=(rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)%(-1760992316)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL * FROM rt0 WHERE (((('2000508063'))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ORDER BY CASE rt0.c2  WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)<=(rt0.c2)) WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1)%(-1760992316)) WHEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN CAST(rt0.c0 AS REAL) END;
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((rt1.c2)&(vt1.c0)) THEN ((rt1.c3) ISNULL) ELSE ((vt1.c0)|(NULL)) END) ORDER BY ((((((vt1.c0)AND(rt1.c0)))OR(vt1.c0)))GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((rt1.c2)&(vt1.c0)) THEN ((rt1.c3) ISNULL) ELSE ((vt1.c0)|(NULL)) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((vt1.c0)AND(rt1.c0)))OR(vt1.c0)))GLOB(NULL)));
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((rt1.c2)&(vt1.c0)) THEN ((rt1.c3) ISNULL) ELSE ((vt1.c0)|(NULL)) END) ORDER BY ((((((vt1.c0)AND(rt1.c0)))OR(vt1.c0)))GLOB(NULL));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((rt1.c2)&(vt1.c0)) THEN ((rt1.c3) ISNULL) ELSE ((vt1.c0)|(NULL)) END) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((((vt1.c0)AND(rt1.c0)))OR(vt1.c0)))GLOB(NULL)));
SELECT * FROM rt1, vt1 WHERE (CASE ((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c2))  WHEN rt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((rt1.c1) BETWEEN (rt1.c3) AND (vt1.c0)) WHEN ((rt1.c2)&(vt1.c0)) THEN ((rt1.c3) ISNULL) ELSE ((vt1.c0)|(NULL)) END) ORDER BY ((((((vt1.c0)AND(rt1.c0)))OR(vt1.c0)))GLOB(NULL));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rtreenode(rt0.c0, rt1.c2))<<(((rt1.c3) BETWEEN (rt0.c2) AND (0X686bd52b)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c0, rt1.c2))<<(((rt1.c3) BETWEEN (rt0.c2) AND (0X686bd52b))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rtreenode(rt0.c0, rt1.c2))<<(((rt1.c3) BETWEEN (rt0.c2) AND (0X686bd52b)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c0, rt1.c2))<<(((rt1.c3) BETWEEN (rt0.c2) AND (0X686bd52b))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rtreenode(rt0.c0, rt1.c2))<<(((rt1.c3) BETWEEN (rt0.c2) AND (0X686bd52b)))));
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS TEXT)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS TEXT)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, rt1 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY CAST(((((rt0.c0)AND(rt0.c1)))AND(rt1.c1)) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((TIME(NULL, rt1.c1, rt1.c2, rt1.c1, vt1.c0, rt1.c0, rt1.c2))OR(((((((((rt1.c1)OR(rt1.c3)))AND(0.6939542734675931)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY rt1.c1, ((((rt1.c2)<=(rt1.c3))) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 END) AND ((0.8369626520366212 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(NULL, rt1.c1, rt1.c2, rt1.c1, vt1.c0, rt1.c0, rt1.c2))OR(((((((((rt1.c1)OR(rt1.c3)))AND(0.6939542734675931)))OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1, ((((rt1.c2)<=(rt1.c3))) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 END) AND ((0.8369626520366212 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((TIME(NULL, rt1.c1, rt1.c2, rt1.c1, vt1.c0, rt1.c0, rt1.c2))OR(((((((((rt1.c1)OR(rt1.c3)))AND(0.6939542734675931)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY rt1.c1, ((((rt1.c2)<=(rt1.c3))) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 END) AND ((0.8369626520366212 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TIME(NULL, rt1.c1, rt1.c2, rt1.c1, vt1.c0, rt1.c0, rt1.c2))OR(((((((((rt1.c1)OR(rt1.c3)))AND(0.6939542734675931)))OR(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY rt1.c1, ((((rt1.c2)<=(rt1.c3))) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 END) AND ((0.8369626520366212 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((TIME(NULL, rt1.c1, rt1.c2, rt1.c1, vt1.c0, rt1.c0, rt1.c2))OR(((((((((rt1.c1)OR(rt1.c3)))AND(0.6939542734675931)))OR(rt1.c3)))OR(rt1.c2))))) ORDER BY rt1.c1, ((((rt1.c2)<=(rt1.c3))) BETWEEN (CASE WHEN rt1.c2 THEN vt1.c0 END) AND ((0.8369626520366212 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((((((((NULL)OR(rt1.c2)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)))AND(CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))OR(0xffffffff81e1a010)))OR(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) WHERE (CAST(ABS(rt1.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((((((((NULL)OR(rt1.c2)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)))AND(CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))OR(0xffffffff81e1a010)))OR(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((((((((NULL)OR(rt1.c2)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)))AND(CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))OR(0xffffffff81e1a010)))OR(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) WHERE (CAST(ABS(rt1.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((((((((NULL)OR(rt1.c2)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)))AND(CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))OR(0xffffffff81e1a010)))OR(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, rt1 FULL OUTER JOIN vt1 ON ((((((((((NULL)OR(rt1.c2)))AND(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c0 END)))AND(CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END)))AND(((((((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))OR(0xffffffff81e1a010)))OR(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) WHERE (CAST(ABS(rt1.c2) AS TEXT));
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CASE WHEN NULL THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END DESC  NULLS FIRST, ((((rt0.c2)<(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((rt0.c2 IN (rt0.c2)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END DESC  NULLS FIRST, ((((rt0.c2)<(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((rt0.c2 IN (rt0.c2)))), rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CASE WHEN NULL THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END DESC  NULLS FIRST, ((((rt0.c2)<(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((rt0.c2 IN (rt0.c2)))), rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END DESC  NULLS FIRST, ((((rt0.c2)<(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((rt0.c2 IN (rt0.c2)))), rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (('' IN ())) ORDER BY CASE WHEN NULL THEN SQLITE_COMPILEOPTION_GET(rt0.c1) END DESC  NULLS FIRST, ((((rt0.c2)<(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((rt0.c2 IN (rt0.c2)))), rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1528019972' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('1528019972' COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1528019972' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('1528019972' COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1528019972' COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 END)GLOB(((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) ORDER BY (~ (((rt1.c0) BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 END)GLOB(((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) BETWEEN (rt1.c1) AND (x'')))) DESC);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 END)GLOB(((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) ORDER BY (~ (((rt1.c0) BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c1 END)GLOB(((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c0) BETWEEN (rt1.c1) AND (x'')))) DESC);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c1 END)GLOB(((((rt1.c2)OR(rt1.c3)))AND(rt1.c3))))) ORDER BY (~ (((rt1.c0) BETWEEN (rt1.c1) AND (x'')))) DESC;
SELECT * FROM rt0, vt1, rt1 WHERE (((((rt0.c1) NOT NULL))AND(((rt1.c1) IS TRUE)))) ORDER BY ((((0X63a23dca)OR(((rt1.c3) IS FALSE))))OR((+ (rt1.c1)))), (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))AND(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((0x63a23dca)OR(((rt1.c3) IS FALSE))))OR((+ (rt1.c1)))), (rt0.c1 IN ()));
SELECT * FROM rt0, vt1, rt1 WHERE (((((rt0.c1) NOT NULL))AND(((rt1.c1) IS TRUE)))) ORDER BY ((((0X63a23dca)OR(((rt1.c3) IS FALSE))))OR((+ (rt1.c1)))), (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))AND(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((((0x63a23dca)OR(((rt1.c3) IS FALSE))))OR((+ (rt1.c1)))), (rt0.c1 IN ()));
SELECT * FROM rt0, vt1, rt1 WHERE (((((rt0.c1) NOT NULL))AND(((rt1.c1) IS TRUE)))) ORDER BY ((((0X63a23dca)OR(((rt1.c3) IS FALSE))))OR((+ (rt1.c1)))), (rt0.c1 IN ());
SELECT COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((rt1.c0)||(rt1.c0)))==((NOT ('1319984671')))) WHERE (((((rt1.c1) IS FALSE)) BETWEEN (((((rt1.c2)OR(rt0.c0)))OR(vt1.c0))) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (((((rt1.c2)OR(rt0.c0)))OR(vt1.c0))) AND (rt1.c0))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((((rt1.c0)||(rt1.c0)))=((NOT ('1319984671')))));
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((rt1.c0)||(rt1.c0)))==((NOT ('1319984671')))) WHERE (((((rt1.c1) IS FALSE)) BETWEEN (((((rt1.c2)OR(rt0.c0)))OR(vt1.c0))) AND (rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE)) BETWEEN (((((rt1.c2)OR(rt0.c0)))OR(vt1.c0))) AND (rt1.c0))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((((rt1.c0)||(rt1.c0)))=((NOT ('1319984671')))));
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((rt1.c0)||(rt1.c0)))==((NOT ('1319984671')))) WHERE (((((rt1.c1) IS FALSE)) BETWEEN (((((rt1.c2)OR(rt0.c0)))OR(vt1.c0))) AND (rt1.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR((rt0.c2 IN ()))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR((rt0.c2 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR((rt0.c2 IN ()))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR((rt0.c2 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR((rt0.c2 IN ()))))AND(NULL)));
SELECT * FROM vt1 WHERE (((((((((((454311424)LIKE(vt1.c0)))AND((- (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((0.6199850607729317 IN ()))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((454311424)LIKE(vt1.c0)))AND((- (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((0.6199850607729317 IN ()))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((454311424)LIKE(vt1.c0)))AND((- (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((0.6199850607729317 IN ()))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((454311424)LIKE(vt1.c0)))AND((- (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((0.6199850607729317 IN ()))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((454311424)LIKE(vt1.c0)))AND((- (vt1.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND((0.6199850607729317 IN ()))))OR((vt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (CAST((+ (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((+ (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST((+ (rt1.c1)) AS BLOB));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)>=(rt1.c2)) IN ((((rt1.c0))<=((rt1.c3)))))) ORDER BY '0.7439717370141303'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>=(rt1.c2)) IN ((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY '0.7439717370141303'  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)>=(rt1.c2)) IN ((((rt1.c0))<=((rt1.c3)))))) ORDER BY '0.7439717370141303'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>=(rt1.c2)) IN ((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY '0.7439717370141303'  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)>=(rt1.c2)) IN ((((rt1.c0))<=((rt1.c3)))))) ORDER BY '0.7439717370141303'  NULLS LAST;
SELECT * FROM vt1, rt1 WHERE ((('')<=(((x'2e5a36d4')IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((('')<=(((x'2e5a36d4')IS(NULL))))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((('')<=(((x'2e5a36d4')IS(NULL)))));
SELECT SUM(count) FROM (SELECT (((('')<=(((x'2e5a36d4')IS(NULL))))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((('')<=(((x'2e5a36d4')IS(NULL)))));
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c1) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c1) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt1, rt0 WHERE (rt0.c1) ORDER BY vt1.c0 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 COLLATE BINARY END) ORDER BY rtreenode(TRIM(DISTINCT vt1.c0), ((rt0.c1)=(vt1.c0))), ((((((((((((rt0.c1)AND((vt1.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rtreenode(TRIM(DISTINCT vt1.c0), ((rt0.c1)=(vt1.c0))), ((((((((((((rt0.c1)AND((vt1.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 COLLATE BINARY END) ORDER BY rtreenode(TRIM(DISTINCT vt1.c0), ((rt0.c1)=(vt1.c0))), ((((((((((((rt0.c1)AND((vt1.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rtreenode(TRIM(DISTINCT vt1.c0), ((rt0.c1)=(vt1.c0))), ((((((((((((rt0.c1)AND((vt1.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN rt0.c0 THEN vt1.c0 COLLATE BINARY END) ORDER BY rtreenode(TRIM(DISTINCT vt1.c0), ((rt0.c1)=(vt1.c0))), ((((((((((((rt0.c1)AND((vt1.c0 IN ()))))AND(CAST(rt0.c2 AS INTEGER))))OR(vt1.c0 COLLATE NOCASE)))OR((rt0.c2 IN ()))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c1))))|((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((rt0.c1))))|((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c1))))|((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))!=((rt0.c1))))|((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c1))))|((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (('-1282659395' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((('-1282659395' IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (('-1282659395' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((('-1282659395' IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (('-1282659395' IN ()) COLLATE BINARY);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (('' COLLATE NOCASE) BETWEEN (((0Xffffffffe2f5bfa8) NOT NULL)) AND (-65116720)) WHERE ((('T')IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('T')IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (('' COLLATE NOCASE) BETWEEN (((0Xffffffffe2f5bfa8) NOT NULL)) AND (-65116720)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (('' COLLATE NOCASE) BETWEEN (((0Xffffffffe2f5bfa8) NOT NULL)) AND (-65116720)) WHERE ((('T')IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((('T')IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (('' COLLATE NOCASE) BETWEEN (((0Xffffffffe2f5bfa8) NOT NULL)) AND (-65116720)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (('' COLLATE NOCASE) BETWEEN (((0Xffffffffe2f5bfa8) NOT NULL)) AND (-65116720)) WHERE ((('T')IS NOT((rt0.c0 IN ()))));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt1.c1)))) ORDER BY (('1120688774' COLLATE NOCASE)!=((0.5742080720796113 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt1.c1)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('1120688774' COLLATE NOCASE)!=((0.5742080720796113 IN ())))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt1.c1)))) ORDER BY (('1120688774' COLLATE NOCASE)!=((0.5742080720796113 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt1.c1)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (('1120688774' COLLATE NOCASE)!=((0.5742080720796113 IN ())))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt1.c1)))) ORDER BY (('1120688774' COLLATE NOCASE)!=((0.5742080720796113 IN ())))  NULLS FIRST;
SELECT * FROM rt0, vt1, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((vt1.c0 IN (rt1.c3))) BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((((vt1.c0)OR(rt1.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt1.c3))) BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((((vt1.c0)OR(rt1.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((vt1.c0 IN (rt1.c3))) BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((((vt1.c0)OR(rt1.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt1.c3))) BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((((vt1.c0)OR(rt1.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((vt1.c0 IN (rt1.c3))) BETWEEN (((rt1.c1)IS(rt1.c3))) AND (((((vt1.c0)OR(rt1.c2)))OR(vt1.c0)))));
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c2) THEN LIKE(rt0.c2, rt0.c2, '-') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt0.c2) THEN LIKE(rt0.c2, rt0.c2, '-') END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c2) THEN LIKE(rt0.c2, rt0.c2, '-') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt0.c2) THEN LIKE(rt0.c2, rt0.c2, '-') END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c2) THEN LIKE(rt0.c2, rt0.c2, '-') END);
SELECT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))) AND ((rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))) AND ((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))) AND ((rt1.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))) AND ((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((rt1.c2))))) AND ((rt1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((TRIM(DISTINCT rt1.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt1.c3) IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((TRIM(DISTINCT rt1.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt1.c3) IN ())) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((TRIM(DISTINCT rt1.c3) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE WHEN rt1.c3 THEN 0.2100691020087162 END)))OR(rt1.c2 COLLATE BINARY)))AND(rt1.c1)))OR(((rt1.c0)=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE WHEN rt1.c3 THEN 0.2100691020087162 END)))OR(rt1.c2 COLLATE BINARY)))AND(rt1.c1)))OR(((rt1.c0)==(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE WHEN rt1.c3 THEN 0.2100691020087162 END)))OR(rt1.c2 COLLATE BINARY)))AND(rt1.c1)))OR(((rt1.c0)=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE WHEN rt1.c3 THEN 0.2100691020087162 END)))OR(rt1.c2 COLLATE BINARY)))AND(rt1.c1)))OR(((rt1.c0)==(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((((((((rt1.c1)AND(rt1.c3)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))OR(CASE WHEN rt1.c3 THEN 0.2100691020087162 END)))OR(rt1.c2 COLLATE BINARY)))AND(rt1.c1)))OR(((rt1.c0)=(rt1.c1)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER))<>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))!=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER))<>(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))!=(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS INTEGER))<>(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON CASE (rt1.c3 IN (rt0.c0))  WHEN rt0.c0 THEN ((((((((NULL)AND(rt1.c0)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)) WHEN (+ (rt1.c1)) THEN CAST(rt1.c0 AS BLOB) WHEN (~ (rt1.c2)) THEN HEX(vt1.c0) ELSE rt0.c0 COLLATE RTRIM END WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((((('2141290576')AND(rt1.c0)))AND(rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON CASE (rt1.c3 IN (rt0.c0))  WHEN rt0.c0 THEN ((((((((NULL)AND(rt1.c0)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)) WHEN (+ (rt1.c1)) THEN CAST(rt1.c0 AS BLOB) WHEN (~ (rt1.c2)) THEN HEX(vt1.c0) ELSE rt0.c0 COLLATE RTRIM END ORDER BY (((((('2141290576')AND(rt1.c0)))AND(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON CASE (rt1.c3 IN (rt0.c0))  WHEN rt0.c0 THEN ((((((((NULL)AND(rt1.c0)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)) WHEN (+ (rt1.c1)) THEN CAST(rt1.c0 AS BLOB) WHEN (~ (rt1.c2)) THEN HEX(vt1.c0) ELSE rt0.c0 COLLATE RTRIM END WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((((('2141290576')AND(rt1.c0)))AND(rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN rt0 ON CASE (rt1.c3 IN (rt0.c0))  WHEN rt0.c0 THEN ((((((((NULL)AND(rt1.c0)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)) WHEN (+ (rt1.c1)) THEN CAST(rt1.c0 AS BLOB) WHEN (~ (rt1.c2)) THEN HEX(vt1.c0) ELSE rt0.c0 COLLATE RTRIM END ORDER BY (((((('2141290576')AND(rt1.c0)))AND(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 CROSS JOIN rt0 ON CASE (rt1.c3 IN (rt0.c0))  WHEN rt0.c0 THEN ((((((((NULL)AND(rt1.c0)))OR(rt1.c1)))AND(rt0.c1)))OR(rt0.c2)) WHEN (+ (rt1.c1)) THEN CAST(rt1.c0 AS BLOB) WHEN (~ (rt1.c2)) THEN HEX(vt1.c0) ELSE rt0.c0 COLLATE RTRIM END WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY (((((('2141290576')AND(rt1.c0)))AND(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS BLOB))))OR('-737066103')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS BLOB))))OR('-737066103'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS BLOB))))OR('-737066103')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS BLOB))))OR('-737066103'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c0) IS TRUE))OR(CAST(rt0.c0 AS BLOB))))OR('-737066103')));
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((x'bf4e')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE ((NULL)>(vt1.c0)) END) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))AND(-938327192)))OR(((NULL)AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((x'bf4e')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE ((NULL)>(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))AND(-938327192)))OR(((NULL)AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((x'bf4e')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE ((NULL)>(vt1.c0)) END) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))AND(-938327192)))OR(((NULL)AND(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((x'bf4e')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE ((NULL)>(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))AND(-938327192)))OR(((NULL)AND(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN (((x'bf4e')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c0)) ELSE ((NULL)>(vt1.c0)) END) ORDER BY (((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))AND(-938327192)))OR(((NULL)AND(vt1.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2)>(rt1.c3))))) ORDER BY (rt1.c3 COLLATE BINARY IN (((rt1.c0)*(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2)>(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE BINARY IN (((rt1.c0)*(rt1.c0)))));
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2)>(rt1.c3))))) ORDER BY (rt1.c3 COLLATE BINARY IN (((rt1.c0)*(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2)>(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 COLLATE BINARY IN (((rt1.c0)*(rt1.c0)))));
SELECT * FROM rt1 WHERE (((CAST(rt1.c0 AS TEXT)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2)>(rt1.c3))))) ORDER BY (rt1.c3 COLLATE BINARY IN (((rt1.c0)*(rt1.c0))));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((((rt1.c2)IS(rt1.c2)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt1.c2)))))AND((NOT (rt0.c1)))) WHERE (((x'')<(1.610011108E9))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(1.610011108E9))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((((((rt1.c2)IS(rt1.c2)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt1.c2)))))AND((NOT (rt0.c1)))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((((rt1.c2)IS(rt1.c2)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt1.c2)))))AND((NOT (rt0.c1)))) WHERE (((x'')<(1.610011108E9))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(1.610011108E9))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN rt1 ON ((((((rt1.c2)IS(rt1.c2)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt1.c2)))))AND((NOT (rt0.c1)))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 INNER JOIN rt1 ON ((((((rt1.c2)IS(rt1.c2)))OR(((((vt1.c0)OR(rt0.c0)))AND(rt1.c2)))))AND((NOT (rt0.c1)))) WHERE (((x'')<(1.610011108E9))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC;
SELECT ALL * FROM rt0, rt1, vt1 WHERE (vt1.c0) ORDER BY ((LOWER(DISTINCT vt1.c0))<>((rt0.c1 IN ())))  NULLS LAST, ((((((vt1.c0)/(rt1.c3)))AND(((rt1.c0) NOTNULL))))AND((((rt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, NULL, rt1.c0)) AND ((rt1.c0, rt1.c3, '|h'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((LOWER(DISTINCT vt1.c0))<>((rt0.c1 IN ())))  NULLS LAST, ((((((vt1.c0)/(rt1.c3)))AND(((rt1.c0) NOTNULL))))AND((((rt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, NULL, rt1.c0)) AND ((rt1.c0, rt1.c3, '|h'))))) ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (vt1.c0) ORDER BY ((LOWER(DISTINCT vt1.c0))<>((rt0.c1 IN ())))  NULLS LAST, ((((((vt1.c0)/(rt1.c3)))AND(((rt1.c0) NOTNULL))))AND((((rt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, NULL, rt1.c0)) AND ((rt1.c0, rt1.c3, '|h'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY ((LOWER(DISTINCT vt1.c0))<>((rt0.c1 IN ())))  NULLS LAST, ((((((vt1.c0)/(rt1.c3)))AND(((rt1.c0) NOTNULL))))AND((((rt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, NULL, rt1.c0)) AND ((rt1.c0, rt1.c3, '|h'))))) ASC);
SELECT ALL * FROM rt0, rt1, vt1 WHERE (vt1.c0) ORDER BY ((LOWER(DISTINCT vt1.c0))<>((rt0.c1 IN ())))  NULLS LAST, ((((((vt1.c0)/(rt1.c3)))AND(((rt1.c0) NOTNULL))))AND((((rt0.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, NULL, rt1.c0)) AND ((rt1.c0, rt1.c3, '|h'))))) ASC;
SELECT ALL * FROM rt1 WHERE ((((TYPEOF(DISTINCT 'O|')))<=((((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT 'O|')))<=((((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((TYPEOF(DISTINCT 'O|')))<=((((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((TYPEOF(DISTINCT 'O|')))<=((((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((TYPEOF(DISTINCT 'O|')))<=((((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array((- (rt1.c2)), rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_array((- (rt1.c2)), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array((- (rt1.c2)), rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_array((- (rt1.c2)), rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (json_array((- (rt1.c2)), rt1.c2 COLLATE RTRIM));
SELECT * FROM vt1 WHERE ('-1068377788');
SELECT SUM(count) FROM (SELECT ALL (('-1068377788') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-1068377788');
SELECT SUM(count) FROM (SELECT ALL (('-1068377788') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-1068377788');
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(rt0.c0 COLLATE BINARY)) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<=(((rt0.c2)-('926084907')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<=(((rt0.c2)-('926084907'))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))==(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(rt0.c0 COLLATE BINARY)) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<=(((rt0.c2)-('926084907')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<=(((rt0.c2)-('926084907'))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))==(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))=(rt0.c0 COLLATE BINARY)) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<=(((rt0.c2)-('926084907')))));
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))>=(''))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))>=(''))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))>=(''))) ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c2)))>=(''))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST);
SELECT * FROM rt1 WHERE ((((- (rt1.c2)))>=(''))) ORDER BY rt1.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (NOT (INSTR(vt1.c0, rt0.c1))) FULL OUTER JOIN vt1 ON ((ABS(rt1.c0)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (CASE WHEN (- (vt1.c0)) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (NOT (INSTR(vt1.c0, rt0.c1))) FULL OUTER JOIN vt1 ON ((ABS(rt1.c0)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (NOT (INSTR(vt1.c0, rt0.c1))) FULL OUTER JOIN vt1 ON ((ABS(rt1.c0)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (CASE WHEN (- (vt1.c0)) THEN (~ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (NOT (INSTR(vt1.c0, rt0.c1))) FULL OUTER JOIN vt1 ON ((ABS(rt1.c0)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt1.c2 INNER JOIN rt1 ON 0.8369626520366212 WHERE (((((rt1.c0) IS FALSE))GLOB(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))GLOB(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt1.c2 INNER JOIN rt1 ON 0.8369626520366212);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt1.c2 INNER JOIN rt1 ON 0.8369626520366212 WHERE (((((rt1.c0) IS FALSE))GLOB(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))GLOB(CASE rt1.c1  WHEN rt1.c3 THEN rt1.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt1.c2 INNER JOIN rt1 ON 0.8369626520366212);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) ISNULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(UNICODE(rt1.c0), rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UNICODE(rt1.c0), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(UNICODE(rt1.c0), rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UNICODE(rt1.c0), rt1.c0)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (COALESCE(UNICODE(rt1.c0), rt1.c0));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)>>(rt1.c2)))OR(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>>(rt1.c2)))OR(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)>>(rt1.c2)))OR(rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>>(rt1.c2)))OR(rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)>>(rt1.c2)))OR(rt1.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((NULL)OR(CAST(rt1.c2 AS BLOB))))AND(rt1.c0))) ORDER BY (- (LIKELY(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CAST(rt1.c2 AS BLOB))))AND(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY (- (LIKELY(rt1.c3)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((NULL)OR(CAST(rt1.c2 AS BLOB))))AND(rt1.c0))) ORDER BY (- (LIKELY(rt1.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CAST(rt1.c2 AS BLOB))))AND(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY (- (LIKELY(rt1.c3)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((NULL)OR(CAST(rt1.c2 AS BLOB))))AND(rt1.c0))) ORDER BY (- (LIKELY(rt1.c3)))  NULLS FIRST;
SELECT ALL * FROM rt1, vt1 WHERE ('') ORDER BY ((LIKELIHOOD(rt1.c1, 0.006679722487499817))<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, vt1 ORDER BY ((LIKELIHOOD(rt1.c1, 0.006679722487499817))<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, vt1 WHERE ('') ORDER BY ((LIKELIHOOD(rt1.c1, 0.006679722487499817))<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt1, vt1 ORDER BY ((LIKELIHOOD(rt1.c1, 0.006679722487499817))<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, vt1 WHERE ('') ORDER BY ((LIKELIHOOD(rt1.c1, 0.006679722487499817))<(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END));
SELECT * FROM rt0, vt1, rt1 WHERE ((((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))>((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))>((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE ((((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))>((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))>((rt1.c3 IN ())))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT * FROM rt0, vt1, rt1 WHERE ((((((rt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))>((rt1.c3 IN ()))));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('Z᙭ |') ORDER BY CASE WHEN COALESCE(rt1.c2, rt0.c2, rt1.c3, rt0.c1) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Z᙭ |') IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, vt1 ORDER BY CASE WHEN COALESCE(rt1.c2, rt0.c2, rt1.c3, rt0.c1) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('Z᙭ |') ORDER BY CASE WHEN COALESCE(rt1.c2, rt0.c2, rt1.c3, rt0.c1) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Z᙭ |') IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, vt1 ORDER BY CASE WHEN COALESCE(rt1.c2, rt0.c2, rt1.c3, rt0.c1) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE ('Z᙭ |') ORDER BY CASE WHEN COALESCE(rt1.c2, rt0.c2, rt1.c3, rt0.c1) THEN ((((rt1.c1)OR(rt1.c0)))OR(rt1.c2)) END  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt0.c2)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, vt1);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE (CASE WHEN (~ (rt0.c2)) THEN ((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY CASE ((rt0.c0)*(rt0.c2))  WHEN rt0.c0 THEN ((NULL) NOT NULL) ELSE UPPER(rt0.c2) END DESC  NULLS LAST, ((0.663354265365129 COLLATE RTRIM)<(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)*(rt0.c2))  WHEN rt0.c0 THEN ((NULL) NOT NULL) ELSE UPPER(rt0.c2) END DESC  NULLS LAST, ((0.663354265365129 COLLATE RTRIM)<(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY CASE ((rt0.c0)*(rt0.c2))  WHEN rt0.c0 THEN ((NULL) NOT NULL) ELSE UPPER(rt0.c2) END DESC  NULLS LAST, ((0.663354265365129 COLLATE RTRIM)<(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)*(rt0.c2))  WHEN rt0.c0 THEN ((NULL) NOT NULL) ELSE UPPER(rt0.c2) END DESC  NULLS LAST, ((0.663354265365129 COLLATE RTRIM)<(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY CASE ((rt0.c0)*(rt0.c2))  WHEN rt0.c0 THEN ((NULL) NOT NULL) ELSE UPPER(rt0.c2) END DESC  NULLS LAST, ((0.663354265365129 COLLATE RTRIM)<(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((vt1.c0 IN (((vt1.c0)|(vt1.c0)), (((vt1.c0))<((1247796286)))))) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) DESC, (((((((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))), ((CAST(vt1.c0 AS INTEGER))*(CHAR(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((vt1.c0)|(vt1.c0)), (((vt1.c0))<((1247796286)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) DESC, (((((((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))), ((CAST(vt1.c0 AS INTEGER))*(CHAR(vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (((vt1.c0)|(vt1.c0)), (((vt1.c0))<((1247796286)))))) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) DESC, (((((((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))), ((CAST(vt1.c0 AS INTEGER))*(CHAR(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((vt1.c0)|(vt1.c0)), (((vt1.c0))<((1247796286)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) DESC, (((((((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))), ((CAST(vt1.c0 AS INTEGER))*(CHAR(vt1.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((vt1.c0 IN (((vt1.c0)|(vt1.c0)), (((vt1.c0))<((1247796286)))))) ORDER BY CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS BLOB) DESC, (((((((((vt1.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))), ((CAST(vt1.c0 AS INTEGER))*(CHAR(vt1.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1 WHERE (((LAST_INSERT_ROWID())AND(((rt1.c0)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())AND(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((LAST_INSERT_ROWID())AND(((rt1.c0)%(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())AND(((rt1.c0)%(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (((LAST_INSERT_ROWID())AND(((rt1.c0)%(rt1.c2)))));
SELECT * FROM vt1, rt1 WHERE (CASE WHEN ((rt1.c1)||(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN (((rt1.c1))>=((rt1.c1))) THEN ((vt1.c0)IS(rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c0 ELSE NULLIF(rt1.c3, vt1.c0) END) ORDER BY (rt1.c1 IN (((rt1.c2)+(vt1.c0))))  NULLS FIRST, '-1587278379'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)||(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN (((rt1.c1))>=((rt1.c1))) THEN ((vt1.c0)IS(rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c0 ELSE NULLIF(rt1.c3, vt1.c0) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY (rt1.c1 IN (((rt1.c2)+(vt1.c0))))  NULLS FIRST, '-1587278379'  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (CASE WHEN ((rt1.c1)||(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN (((rt1.c1))>=((rt1.c1))) THEN ((vt1.c0)IS(rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c0 ELSE NULLIF(rt1.c3, vt1.c0) END) ORDER BY (rt1.c1 IN (((rt1.c2)+(vt1.c0))))  NULLS FIRST, '-1587278379'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)||(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN (((rt1.c1))>=((rt1.c1))) THEN ((vt1.c0)IS(rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c0 ELSE NULLIF(rt1.c3, vt1.c0) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY (rt1.c1 IN (((rt1.c2)+(vt1.c0))))  NULLS FIRST, '-1587278379'  NULLS FIRST);
SELECT * FROM vt1, rt1 WHERE (CASE WHEN ((rt1.c1)||(rt1.c2)) THEN (((rt1.c0))==((rt1.c0))) WHEN (((rt1.c1))>=((rt1.c1))) THEN ((vt1.c0)IS(rt1.c0)) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c3)) THEN rt1.c0 ELSE NULLIF(rt1.c3, vt1.c0) END) ORDER BY (rt1.c1 IN (((rt1.c2)+(vt1.c0))))  NULLS FIRST, '-1587278379'  NULLS FIRST;
SELECT * FROM rt1, vt1, rt0 WHERE ((~ (UPPER(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (UPPER(rt0.c0)))) IS TRUE)  as count FROM rt1, vt1 NOT INDEXED, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((~ (UPPER(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (UPPER(rt0.c0)))) IS TRUE)  as count FROM rt1, vt1 NOT INDEXED, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ((~ (UPPER(rt0.c0))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON CAST(((((vt1.c0)AND(rt1.c1)))OR(rt1.c3)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c2)LIKE(rt0.c0)))OR(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c3)))AND(rt0.c1)))OR(rt0.c2)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))OR(((rt1.c2) IS FALSE))))AND(CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON CAST(((((vt1.c0)AND(rt1.c1)))OR(rt1.c3)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c2)LIKE(rt0.c0)))OR(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c3)))AND(rt0.c1)))OR(rt0.c2)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))OR(((rt1.c2) IS FALSE))))AND(CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON CAST(((((vt1.c0)AND(rt1.c1)))OR(rt1.c3)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c2)LIKE(rt0.c0)))OR(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c3)))AND(rt0.c1)))OR(rt0.c2)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))OR(((rt1.c2) IS FALSE))))AND(CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON CAST(((((vt1.c0)AND(rt1.c1)))OR(rt1.c3)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c2)LIKE(rt0.c0)))OR(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c3)))AND(rt0.c1)))OR(rt0.c2)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))OR(((rt1.c2) IS FALSE))))AND(CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON CAST(((((vt1.c0)AND(rt1.c1)))OR(rt1.c3)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((((((rt1.c2)LIKE(rt0.c0)))OR(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c3)))AND(rt0.c1)))OR(rt0.c2)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))OR(((rt1.c2) IS FALSE))))AND(CASE WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c3 END)) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS NUMERIC)) ORDER BY CAST((NOT (rt0.c2)) AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt1.c0)))|(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))AND(vt1.c0)))|(rt1.c2))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt1.c0)))|(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt1.c2)))AND(vt1.c0)))|(rt1.c2))) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((((rt0.c1)AND(rt1.c2)))AND(vt1.c0)))|(rt1.c2)));
SELECT COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))AND(TYPEOF(vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)+(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))AND(TYPEOF(vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)+(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))AND(TYPEOF(vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)+(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))AND(TYPEOF(vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)+(vt1.c0)) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((((+ (vt1.c0)))AND(TYPEOF(vt1.c0))))AND(CAST(vt1.c0 AS TEXT)))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)+(vt1.c0)) ASC;
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((vt1.c0) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c0)) AND (((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((vt1.c0) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c0)) AND (((vt1.c0)>>(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((vt1.c0) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c0)) AND (((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((vt1.c0) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c0)) AND (((vt1.c0)>>(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE RTRIM) ORDER BY (- (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END))  NULLS FIRST, ((vt1.c0) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c0)) AND (((vt1.c0)>>(vt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))AND(((0xffffffffc1cd166d)==(rt1.c0))))) ORDER BY NULL  NULLS FIRST, rt1.c0 ASC  NULLS LAST, MIN((rt0.c1 IN ()), ((vt1.c0)LIKE(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))AND(((0xffffffffc1cd166d)=(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY NULL  NULLS FIRST, rt1.c0 ASC  NULLS LAST, MIN((rt0.c1 IN ()), ((vt1.c0)LIKE(rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))AND(((0xffffffffc1cd166d)==(rt1.c0))))) ORDER BY NULL  NULLS FIRST, rt1.c0 ASC  NULLS LAST, MIN((rt0.c1 IN ()), ((vt1.c0)LIKE(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))AND(((0xffffffffc1cd166d)=(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY NULL  NULLS FIRST, rt1.c0 ASC  NULLS LAST, MIN((rt0.c1 IN ()), ((vt1.c0)LIKE(rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c1)))AND(((0xffffffffc1cd166d)==(rt1.c0))))) ORDER BY NULL  NULLS FIRST, rt1.c0 ASC  NULLS LAST, MIN((rt0.c1 IN ()), ((vt1.c0)LIKE(rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN rt0 ON (((((((((((rt0.c2))<>((rt0.c2))))AND(LIKELIHOOD(vt1.c0, 0.098914050534892))))AND(rt0.c1)))AND(((rt0.c1)<<(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) WHERE ((((rt0.c0)) BETWEEN (((('0') NOT BETWEEN (rt0.c0) AND ('jA')))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY '/>CZa''\r'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((('0') NOT BETWEEN (rt0.c0) AND ('jA')))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((((((((rt0.c2))<>((rt0.c2))))AND(LIKELIHOOD(vt1.c0, 0.098914050534892))))AND(rt0.c1)))AND(((rt0.c1)<<(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY '/>CZa''\r'  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((((((((((rt0.c2))<>((rt0.c2))))AND(LIKELIHOOD(vt1.c0, 0.098914050534892))))AND(rt0.c1)))AND(((rt0.c1)<<(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) WHERE ((((rt0.c0)) BETWEEN (((('0') NOT BETWEEN (rt0.c0) AND ('jA')))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY '/>CZa''\r'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((('0') NOT BETWEEN (rt0.c0) AND ('jA')))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (((((((((((rt0.c2))<>((rt0.c2))))AND(LIKELIHOOD(vt1.c0, 0.098914050534892))))AND(rt0.c1)))AND(((rt0.c1)<<(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY '/>CZa''\r'  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN rt0 ON (((((((((((rt0.c2))<>((rt0.c2))))AND(LIKELIHOOD(vt1.c0, 0.098914050534892))))AND(rt0.c1)))AND(((rt0.c1)<<(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) WHERE ((((rt0.c0)) BETWEEN (((('0') NOT BETWEEN (rt0.c0) AND ('jA')))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY '/>CZa''\r'  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON x'cb2c5e1f' WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c0 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END, ((rt0.c1) NOTNULL))) AND ((CAST('	''' AS BLOB), CAST(rt1.c1 AS BLOB), ((rt1.c3) IS TRUE)))) ASC, (((-1001046735) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON x'cb2c5e1f' ORDER BY (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c0 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END, ((rt0.c1) NOTNULL))) AND ((CAST('	''' AS BLOB), CAST(rt1.c1 AS BLOB), ((rt1.c3) IS TRUE)))) ASC, (((-1001046735) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON x'cb2c5e1f' WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c0 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END, ((rt0.c1) NOTNULL))) AND ((CAST('	''' AS BLOB), CAST(rt1.c1 AS BLOB), ((rt1.c3) IS TRUE)))) ASC, (((-1001046735) IS FALSE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON x'cb2c5e1f' ORDER BY (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c0 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END, ((rt0.c1) NOTNULL))) AND ((CAST('	''' AS BLOB), CAST(rt1.c1 AS BLOB), ((rt1.c3) IS TRUE)))) ASC, (((-1001046735) IS FALSE) IN ())  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON x'cb2c5e1f' WHERE ((NOT (rt0.c2 COLLATE RTRIM))) ORDER BY (((rt0.c2, rt1.c0, NULL)) BETWEEN ((rt1.c0 COLLATE NOCASE, CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END, ((rt0.c1) NOTNULL))) AND ((CAST('	''' AS BLOB), CAST(rt1.c1 AS BLOB), ((rt1.c3) IS TRUE)))) ASC, (((-1001046735) IS FALSE) IN ())  NULLS LAST;
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c0 IN (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c0 IN (rt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE ((rt1.c0 IN (rt1.c2)) COLLATE NOCASE);
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (((rt1.c1) ISNULL))) WHERE ((((vt1.c0 IN ()))LIKE(((((NULL)AND(rt0.c1)))AND(rt1.c3))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))OR(((rt1.c2) NOTNULL))))OR(((rt1.c0)LIKE(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(((((NULL)AND(rt0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (((rt1.c1) ISNULL))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))OR(((rt1.c2) NOTNULL))))OR(((rt1.c0)LIKE(rt1.c0)))) ASC);
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (((rt1.c1) ISNULL))) WHERE ((((vt1.c0 IN ()))LIKE(((((NULL)AND(rt0.c1)))AND(rt1.c3))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))OR(((rt1.c2) NOTNULL))))OR(((rt1.c0)LIKE(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(((((NULL)AND(rt0.c1)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (((rt1.c1) ISNULL))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))OR(((rt1.c2) NOTNULL))))OR(((rt1.c0)LIKE(rt1.c0)))) ASC);
SELECT * FROM rt1, vt1 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN (((rt1.c1) ISNULL))) WHERE ((((vt1.c0 IN ()))LIKE(((((NULL)AND(rt0.c1)))AND(rt1.c3))))) ORDER BY ((((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))OR(((rt1.c2) NOTNULL))))OR(((rt1.c0)LIKE(rt1.c0)))) ASC;
SELECT * FROM rt1, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (('1327234701')IS((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))) WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (('1327234701')IS((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (('1327234701')IS((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))) WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (('1327234701')IS((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN rt1 ON (('1327234701')IS((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt0.c1))))) WHERE (CAST((vt1.c0 IN ()) AS TEXT));
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (((CASE vt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (((CASE vt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT ALL * FROM vt1 NATURAL JOIN rt1 WHERE (((CASE vt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))*(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c0))))) ORDER BY (((CASE '!\'  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c3 END, (+ (rt1.c1)), rt1.c3))>=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c2)OR(rt1.c2)), CAST('247613306' AS REAL)))), NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))*(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE '!\'  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c3 END, (+ (rt1.c1)), rt1.c3))>=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c2)OR(rt1.c2)), CAST('247613306' AS REAL)))), NULL DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))*(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c0))))) ORDER BY (((CASE '!\'  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c3 END, (+ (rt1.c1)), rt1.c3))>=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c2)OR(rt1.c2)), CAST('247613306' AS REAL)))), NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))*(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((CASE '!\'  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c3 END, (+ (rt1.c1)), rt1.c3))>=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c2)OR(rt1.c2)), CAST('247613306' AS REAL)))), NULL DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))*(((((((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c0)))AND(rt1.c0))))) ORDER BY (((CASE '!\'  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN NULL THEN rt1.c0 ELSE rt1.c3 END, (+ (rt1.c1)), rt1.c3))>=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 END, ((rt1.c2)OR(rt1.c2)), CAST('247613306' AS REAL)))), NULL DESC;
SELECT * FROM rt1 WHERE ('-1213278770');
SELECT SUM(count) FROM (SELECT ALL (('-1213278770') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('-1213278770');
SELECT SUM(count) FROM (SELECT ALL (('-1213278770') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('-1213278770');
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt0.c1 IN ()))IS NOT(CAST(vt1.c0 AS INTEGER))) WHERE (CAST(rt1.c3 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((rt0.c1 IN ()))IS NOT(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt0.c1 IN ()))IS NOT(CAST(vt1.c0 AS INTEGER))) WHERE (CAST(rt1.c3 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c3 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 INNER JOIN vt1 ON (((rt0.c1 IN ()))IS NOT(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN vt1 ON (((rt0.c1 IN ()))IS NOT(CAST(vt1.c0 AS INTEGER))) WHERE (CAST(rt1.c3 AS TEXT) COLLATE BINARY);
SELECT * FROM rt1, rt0, vt1 WHERE (((((NULL)AND((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (((((NULL)AND((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT * FROM rt1, rt0, vt1 WHERE (((((NULL)AND((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(NULL)));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt1.c2)<<(0.44888668781071217)))) LEFT OUTER JOIN vt1 ON ((((CAST(rt1.c1 AS REAL))AND(rt1.c2)))OR(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END)) WHERE ((((- (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt1.c2)<<(0.44888668781071217)))) LEFT OUTER JOIN vt1 ON ((((CAST(rt1.c1 AS REAL))AND(rt1.c2)))OR(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt1.c2)<<(0.44888668781071217)))) LEFT OUTER JOIN vt1 ON ((((CAST(rt1.c1 AS REAL))AND(rt1.c2)))OR(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END)) WHERE ((((- (x''))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (x''))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt1.c2)<<(0.44888668781071217)))) LEFT OUTER JOIN vt1 ON ((((CAST(rt1.c1 AS REAL))AND(rt1.c2)))OR(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((rt1.c2)<<(0.44888668781071217)))) LEFT OUTER JOIN vt1 ON ((((CAST(rt1.c1 AS REAL))AND(rt1.c2)))OR(CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END)) WHERE ((((- (x''))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((rt0.c0) ISNULL) WHERE (rt0.c2) ORDER BY '1906285164'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON ((rt0.c0) ISNULL) ORDER BY '1906285164'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((rt0.c0) ISNULL) WHERE (rt0.c2) ORDER BY '1906285164'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN rt1 ON ((rt0.c0) ISNULL) ORDER BY '1906285164'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 CROSS JOIN rt1 ON ((rt0.c0) ISNULL) WHERE (rt0.c2) ORDER BY '1906285164'  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (('丹\n3#?-')*((rt1.c0 IN (rt1.c2)))) WHERE (CASE 2137275870 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE 2137275870 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (('丹\n3#?-')*((rt1.c0 IN (rt1.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (('丹\n3#?-')*((rt1.c0 IN (rt1.c2)))) WHERE (CASE 2137275870 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END END);
SELECT SUM(count) FROM (SELECT ((CASE 2137275870 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (('丹\n3#?-')*((rt1.c0 IN (rt1.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON (('丹\n3#?-')*((rt1.c0 IN (rt1.c2)))) WHERE (CASE 2137275870 COLLATE RTRIM  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c3 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)|(rt0.c1)))OR(-1211280168)))OR(NULL)))OR((rt0.c0 IN ()))))AND(x'eef0'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)|(rt0.c1)))OR(-1211280168)))OR(NULL)))OR((rt0.c0 IN ()))))AND(x'eef0'))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)|(rt0.c1)))OR(-1211280168)))OR(NULL)))OR((rt0.c0 IN ()))))AND(x'eef0'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)|(rt0.c1)))OR(-1211280168)))OR(NULL)))OR((rt0.c0 IN ()))))AND(x'eef0'))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)|(rt0.c1)))OR(-1211280168)))OR(NULL)))OR((rt0.c0 IN ()))))AND(x'eef0'))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND (('-868286910', rt0.c0, rt0.c2)))) IS FALSE)) ORDER BY (+ (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND (('-868286910', rt0.c0, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c2 AS INTEGER))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND (('-868286910', rt0.c0, rt0.c2)))) IS FALSE)) ORDER BY (+ (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND (('-868286910', rt0.c0, rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c2 AS INTEGER))) ASC);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND (('-868286910', rt0.c0, rt0.c2)))) IS FALSE)) ORDER BY (+ (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT ALL * FROM rt0 WHERE ('-447035369');
SELECT SUM(count) FROM (SELECT (('-447035369') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-447035369');
SELECT SUM(count) FROM (SELECT (('-447035369') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-447035369');
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST('' AS REAL)) AND (((('-938327192', rt1.c3, rt0.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c2)) AND ((rt0.c1, rt0.c2, vt1.c0))))) WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c3))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST('' AS REAL)) AND (((('-938327192', rt1.c3, rt0.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c2)) AND ((rt0.c1, rt0.c2, vt1.c0))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST('' AS REAL)) AND (((('-938327192', rt1.c3, rt0.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c2)) AND ((rt0.c1, rt0.c2, vt1.c0))))) WHERE ((+ (rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c3))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST('' AS REAL)) AND (((('-938327192', rt1.c3, rt0.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c2)) AND ((rt0.c1, rt0.c2, vt1.c0))))));
SELECT COUNT(*) FROM rt1, rt0 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST('' AS REAL)) AND (((('-938327192', rt1.c3, rt0.c2)) BETWEEN ((rt1.c3, rt1.c3, rt1.c2)) AND ((rt0.c1, rt0.c2, vt1.c0))))) WHERE ((+ (rt1.c3)));
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (rt1.c3) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (CASE rt0.c2  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c2, rt0.c2)) WHEN 0.09852296507800995 THEN ((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)) WHEN rt1.c2 THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c2, rt0.c2)) WHEN 0.09852296507800995 THEN ((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)) WHEN rt1.c2 THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE rt0.c2  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c2, rt0.c2)) WHEN 0.09852296507800995 THEN ((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)) WHEN rt1.c2 THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c2, rt0.c2)) WHEN 0.09852296507800995 THEN ((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)) WHEN rt1.c2 THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE rt0.c2  WHEN CAST(rt1.c1 AS INTEGER) THEN (rt1.c0 IN (rt1.c2, rt0.c2)) WHEN 0.09852296507800995 THEN ((((rt0.c2)AND(rt1.c2)))AND(rt1.c0)) WHEN rt1.c2 THEN (+ (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)) IN ()));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN ('L|*') AND (NULL)) AS REAL)) ORDER BY x'f532' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN ('L|*') AND (NULL)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY x'f532' ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN ('L|*') AND (NULL)) AS REAL)) ORDER BY x'f532' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN ('L|*') AND (NULL)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY x'f532' ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN ('L|*') AND (NULL)) AS REAL)) ORDER BY x'f532' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST('En/媆OwZa%' AS NUMERIC))>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY (- ((rt0.c0 IN (rt0.c1)))) ASC, ((((rt0.c2 COLLATE RTRIM)AND(STRFTIME(rt0.c1, rt0.c1, rt0.c2))))OR(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, load_extension(rt0.c2) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('En/媆OwZa%' AS NUMERIC))>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN (rt0.c1)))) ASC, ((((rt0.c2 COLLATE RTRIM)AND(STRFTIME(rt0.c1, rt0.c1, rt0.c2))))OR(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, load_extension(rt0.c2) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST('En/媆OwZa%' AS NUMERIC))>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY (- ((rt0.c0 IN (rt0.c1)))) ASC, ((((rt0.c2 COLLATE RTRIM)AND(STRFTIME(rt0.c1, rt0.c1, rt0.c2))))OR(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, load_extension(rt0.c2) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('En/媆OwZa%' AS NUMERIC))>(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c0 IN (rt0.c1)))) ASC, ((((rt0.c2 COLLATE RTRIM)AND(STRFTIME(rt0.c1, rt0.c1, rt0.c2))))OR(CAST(rt0.c2 AS BLOB))) ASC  NULLS LAST, load_extension(rt0.c2) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON CAST(TOTAL_CHANGES() AS NUMERIC) WHERE ((~ (CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON CAST(TOTAL_CHANGES() AS NUMERIC));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON CAST(TOTAL_CHANGES() AS NUMERIC) WHERE ((~ (CAST(rt1.c3 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c3 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN vt1 ON CAST(TOTAL_CHANGES() AS NUMERIC));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN vt1 ON CAST(TOTAL_CHANGES() AS NUMERIC) WHERE ((~ (CAST(rt1.c3 AS BLOB))));
SELECT * FROM vt1, rt0 WHERE (((((((((((0.14933264700570137)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((0.14933264700570137)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((((0.14933264700570137)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((0.14933264700570137)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((((0.14933264700570137)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c0, vt1.c0)))GLOB(0xffffffffa07a62c9))) ORDER BY (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN (((rt0.c1 IN ()), 0.4488241109765101, (NOT (rt0.c1)))) AND ((((rt0.c2)<<(vt1.c0)), (vt1.c0 IN ()), CAST('䦋BnWlVy' AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c0, vt1.c0)))GLOB(0Xffffffffa07a62c9))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN (((rt0.c1 IN ()), 0.4488241109765101, (NOT (rt0.c1)))) AND ((((rt0.c2)<<(vt1.c0)), (vt1.c0 IN ()), CAST('䦋BnWlVy' AS INTEGER)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c0, vt1.c0)))GLOB(0xffffffffa07a62c9))) ORDER BY (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN (((rt0.c1 IN ()), 0.4488241109765101, (NOT (rt0.c1)))) AND ((((rt0.c2)<<(vt1.c0)), (vt1.c0 IN ()), CAST('䦋BnWlVy' AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c0, vt1.c0)))GLOB(0Xffffffffa07a62c9))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN (((rt0.c1 IN ()), 0.4488241109765101, (NOT (rt0.c1)))) AND ((((rt0.c2)<<(vt1.c0)), (vt1.c0 IN ()), CAST('䦋BnWlVy' AS INTEGER)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c0, vt1.c0)))GLOB(0xffffffffa07a62c9))) ORDER BY (((vt1.c0, vt1.c0, rt0.c0)) BETWEEN (((rt0.c1 IN ()), 0.4488241109765101, (NOT (rt0.c1)))) AND ((((rt0.c2)<<(vt1.c0)), (vt1.c0 IN ()), CAST('䦋BnWlVy' AS INTEGER)))) DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ((rt1.c3 IN (CASE WHEN rt1.c3 THEN rt0.c2 END))) ORDER BY (((rt1.c1 COLLATE RTRIM))>=(((rt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN (CASE WHEN rt1.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 COLLATE RTRIM))>=(((rt0.c0 IN ()))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((rt1.c3 IN (CASE WHEN rt1.c3 THEN rt0.c2 END))) ORDER BY (((rt1.c1 COLLATE RTRIM))>=(((rt0.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN (CASE WHEN rt1.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c1 COLLATE RTRIM))>=(((rt0.c0 IN ()))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((rt1.c3 IN (CASE WHEN rt1.c3 THEN rt0.c2 END))) ORDER BY (((rt1.c1 COLLATE RTRIM))>=(((rt0.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'');
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY ((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY ((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY ((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (CAST(vt1.c0 AS BLOB)) AND (vt1.c0)) DESC  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE ('911202572') ORDER BY ((((vt1.c0)/(rt1.c2))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT (('911202572') IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((vt1.c0)/(rt1.c2))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt1.c1 AS REAL))));
SELECT * FROM rt1, vt1 WHERE ('911202572') ORDER BY ((((vt1.c0)/(rt1.c2))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT (('911202572') IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((vt1.c0)/(rt1.c2))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt1.c1 AS REAL))));
SELECT * FROM rt1, vt1 WHERE ('911202572') ORDER BY ((((vt1.c0)/(rt1.c2))) BETWEEN (CAST(rt1.c3 AS REAL)) AND (CAST(rt1.c1 AS REAL)));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((NOT (IFNULL(rt1.c1, vt1.c0)))) ORDER BY CASE (('-204777206')>(rt0.c2))  WHEN (((''))<((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (IFNULL(rt1.c1, vt1.c0)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE (('-204777206')>(rt0.c2))  WHEN (((''))<((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((NOT (IFNULL(rt1.c1, vt1.c0)))) ORDER BY CASE (('-204777206')>(rt0.c2))  WHEN (((''))<((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (IFNULL(rt1.c1, vt1.c0)))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY CASE (('-204777206')>(rt0.c2))  WHEN (((''))<((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((NOT (IFNULL(rt1.c1, vt1.c0)))) ORDER BY CASE (('-204777206')>(rt0.c2))  WHEN (((''))<((rt1.c0))) THEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c2)) END DESC  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)>(rt1.c1))) BETWEEN ((- (rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c1))) BETWEEN ((- (rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)>(rt1.c1))) BETWEEN ((- (rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)>(rt1.c1))) BETWEEN ((- (rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)>(rt1.c1))) BETWEEN ((- (rt1.c1))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt0.c1 END)));
SELECT * FROM rt0 INNER JOIN rt1 ON 0.4358955229348549 WHERE (((((rt0.c0) NOT NULL))*(CAST(rt1.c2 AS INTEGER)))) ORDER BY (((rt1.c0)+(rt0.c1)) IN (0x76502371)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))*(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON 0.4358955229348549 ORDER BY (((rt1.c0)+(rt0.c1)) IN (0x76502371)) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON 0.4358955229348549 WHERE (((((rt0.c0) NOT NULL))*(CAST(rt1.c2 AS INTEGER)))) ORDER BY (((rt1.c0)+(rt0.c1)) IN (0x76502371)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))*(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON 0.4358955229348549 ORDER BY (((rt1.c0)+(rt0.c1)) IN (0x76502371)) ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON 0.4358955229348549 WHERE (((((rt0.c0) NOT NULL))*(CAST(rt1.c2 AS INTEGER)))) ORDER BY (((rt1.c0)+(rt0.c1)) IN (0x76502371)) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((vt1.c0) NOT NULL) IN ())) ORDER BY (((((rt1.c3)LIKE(rt0.c2))))<=((CAST(rt0.c2 AS NUMERIC))))  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((rt1.c3)LIKE(rt0.c2))))<=((CAST(rt0.c2 AS NUMERIC))))  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((vt1.c0) NOT NULL) IN ())) ORDER BY (((((rt1.c3)LIKE(rt0.c2))))<=((CAST(rt0.c2 AS NUMERIC))))  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY (((((rt1.c3)LIKE(rt0.c2))))<=((CAST(rt0.c2 AS NUMERIC))))  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0, rt1 WHERE ((((vt1.c0) NOT NULL) IN ())) ORDER BY (((((rt1.c3)LIKE(rt0.c2))))<=((CAST(rt0.c2 AS NUMERIC))))  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) AS REAL);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON x'' WHERE ('-898095625');
SELECT SUM(count) FROM (SELECT (('-898095625') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON x'' WHERE ('-898095625');
SELECT SUM(count) FROM (SELECT (('-898095625') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON x'');
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON x'' WHERE ('-898095625');
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (((((0.691382225061839)AND(rt1.c2)))AND(rt1.c3)) IN ()) WHERE ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) IN (ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) IN (ABS(rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((((0.691382225061839)AND(rt1.c2)))AND(rt1.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (((((0.691382225061839)AND(rt1.c2)))AND(rt1.c3)) IN ()) WHERE ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) IN (ABS(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) IN (ABS(rt1.c1)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (((((0.691382225061839)AND(rt1.c2)))AND(rt1.c3)) IN ()));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (((((0.691382225061839)AND(rt1.c2)))AND(rt1.c3)) IN ()) WHERE ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) IN (ABS(rt1.c1))));
SELECT COUNT(*) FROM vt1, rt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (+ (rt1.c0)), ((rt0.c2)<(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt1.c0)), ((rt0.c2)<(rt1.c0)))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1, rt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (+ (rt1.c0)), ((rt0.c2)<(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (+ (rt1.c0)), ((rt0.c2)<(rt1.c0)))) IS TRUE)  as count FROM vt1, rt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1, rt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (+ (rt1.c0)), ((rt0.c2)<(rt1.c0))));
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON ((('En/媆OwZa%')) NOT BETWEEN (((rt0.c2 IN (rt1.c3, rt0.c0)))) AND ((CAST(rt1.c0 AS TEXT)))) WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END) ORDER BY CASE WHEN ((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)) THEN ((((rt0.c1)AND(rt1.c3)))AND(rt0.c2)) WHEN (((rt1.c2))>((vt1.c0))) THEN '1810736282' COLLATE BINARY WHEN ((rt0.c1)OR(rt1.c1)) THEN LIKELIHOOD(0x2467b725, 0.6199153302246477) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((('En/媆OwZa%')) NOT BETWEEN (((rt0.c2 IN (rt1.c3, rt0.c0)))) AND ((CAST(rt1.c0 AS TEXT)))) ORDER BY CASE WHEN ((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)) THEN ((((rt0.c1)AND(rt1.c3)))AND(rt0.c2)) WHEN (((rt1.c2))>((vt1.c0))) THEN '1810736282' COLLATE BINARY WHEN ((rt0.c1)OR(rt1.c1)) THEN LIKELIHOOD(0x2467b725, 0.6199153302246477) END  NULLS LAST);
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON ((('En/媆OwZa%')) NOT BETWEEN (((rt0.c2 IN (rt1.c3, rt0.c0)))) AND ((CAST(rt1.c0 AS TEXT)))) WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END) ORDER BY CASE WHEN ((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)) THEN ((((rt0.c1)AND(rt1.c3)))AND(rt0.c2)) WHEN (((rt1.c2))>((vt1.c0))) THEN '1810736282' COLLATE BINARY WHEN ((rt0.c1)OR(rt1.c1)) THEN LIKELIHOOD(0x2467b725, 0.6199153302246477) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END) IS TRUE)  as count FROM rt1, vt1 INNER JOIN rt0 ON ((('En/媆OwZa%')) NOT BETWEEN (((rt0.c2 IN (rt1.c3, rt0.c0)))) AND ((CAST(rt1.c0 AS TEXT)))) ORDER BY CASE WHEN ((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)) THEN ((((rt0.c1)AND(rt1.c3)))AND(rt0.c2)) WHEN (((rt1.c2))>((vt1.c0))) THEN '1810736282' COLLATE BINARY WHEN ((rt0.c1)OR(rt1.c1)) THEN LIKELIHOOD(0x2467b725, 0.6199153302246477) END  NULLS LAST);
SELECT ALL * FROM rt1, vt1 INNER JOIN rt0 ON ((('En/媆OwZa%')) NOT BETWEEN (((rt0.c2 IN (rt1.c3, rt0.c0)))) AND ((CAST(rt1.c0 AS TEXT)))) WHERE (CASE CAST(vt1.c0 AS REAL)  WHEN rt0.c0 COLLATE NOCASE THEN rt0.c1 END) ORDER BY CASE WHEN ((((rt1.c3)OR(rt0.c0)))AND(rt1.c3)) THEN ((((rt0.c1)AND(rt1.c3)))AND(rt0.c2)) WHEN (((rt1.c2))>((vt1.c0))) THEN '1810736282' COLLATE BINARY WHEN ((rt0.c1)OR(rt1.c1)) THEN LIKELIHOOD(0x2467b725, 0.6199153302246477) END  NULLS LAST;
SELECT * FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY (((((vt1.c0)=(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)=(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT * FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY (((((vt1.c0)=(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt1.c0)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)=(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT * FROM vt1 WHERE (TRIM(vt1.c0)) ORDER BY (((((vt1.c0)=(vt1.c0))))>((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT * FROM vt1, rt0 WHERE (((((x'')%(rt0.c2))) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')%(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((x'')%(rt0.c2))) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')%(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((x'')%(rt0.c2))) IS FALSE)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC) LEFT OUTER JOIN rt0 ON rt1.c2 COLLATE BINARY WHERE (((TYPEOF(DISTINCT rt1.c2))/(((((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) ORDER BY IFNULL((~ (rt1.c1)), (((('''~')AND(rt0.c1)))AND(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt1.c2))/(((((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC) LEFT OUTER JOIN rt0 ON rt1.c2 COLLATE BINARY ORDER BY IFNULL((~ (rt1.c1)), (((('''~')AND(rt0.c1)))AND(rt1.c0))) DESC);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC) LEFT OUTER JOIN rt0 ON rt1.c2 COLLATE BINARY WHERE (((TYPEOF(DISTINCT rt1.c2))/(((((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) ORDER BY IFNULL((~ (rt1.c1)), (((('''~')AND(rt0.c1)))AND(rt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt1.c2))/(((((((((rt1.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC) LEFT OUTER JOIN rt0 ON rt1.c2 COLLATE BINARY ORDER BY IFNULL((~ (rt1.c1)), (((('''~')AND(rt0.c1)))AND(rt1.c0))) DESC);
SELECT * FROM vt1, rt1 WHERE ((((- (rt1.c1)))>=(((rt1.c1)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c0)))) BETWEEN (ABS(DISTINCT rt1.c2)) AND (CAST(NULL AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))>=(((rt1.c1)IS NOT(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c0)))) BETWEEN (ABS(DISTINCT rt1.c2)) AND (CAST(NULL AS NUMERIC))) ASC);
SELECT * FROM vt1, rt1 WHERE ((((- (rt1.c1)))>=(((rt1.c1)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c0)))) BETWEEN (ABS(DISTINCT rt1.c2)) AND (CAST(NULL AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))>=(((rt1.c1)IS NOT(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c0)))) BETWEEN (ABS(DISTINCT rt1.c2)) AND (CAST(NULL AS NUMERIC))) ASC);
SELECT * FROM vt1, rt1 WHERE ((((- (rt1.c1)))>=(((rt1.c1)IS NOT(rt1.c2))))) ORDER BY (((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c0)))) BETWEEN (ABS(DISTINCT rt1.c2)) AND (CAST(NULL AS NUMERIC))) ASC;
SELECT ALL * FROM vt1 WHERE ((- (0.3302506621983665))) ORDER BY NULL COLLATE BINARY  NULLS LAST, ((0xfffffffff02ab8c9)OR(vt1.c0)) COLLATE RTRIM DESC, (((((x'236b'))>=((x'23b0')))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.3302506621983665))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY  NULLS LAST, ((0Xfffffffff02ab8c9)OR(vt1.c0)) COLLATE RTRIM DESC, (((((x'236b'))>=((x'23b0')))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (0.3302506621983665))) ORDER BY NULL COLLATE BINARY  NULLS LAST, ((0xfffffffff02ab8c9)OR(vt1.c0)) COLLATE RTRIM DESC, (((((x'236b'))>=((x'23b0')))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.3302506621983665))) IS TRUE)  as count FROM vt1 ORDER BY NULL COLLATE BINARY  NULLS LAST, ((0Xfffffffff02ab8c9)OR(vt1.c0)) COLLATE RTRIM DESC, (((((x'236b'))>=((x'23b0')))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((- (0.3302506621983665))) ORDER BY NULL COLLATE BINARY  NULLS LAST, ((0xfffffffff02ab8c9)OR(vt1.c0)) COLLATE RTRIM DESC, (((((x'236b'))>=((x'23b0')))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((DATETIME(rt0.c0, x'', vt1.c0), rt0.c0, LENGTH(vt1.c0)))>((CAST(vt1.c0 AS INTEGER), 1.610011108E9, NULL))));
SELECT SUM(count) FROM (SELECT (((((DATETIME(rt0.c0, x'', vt1.c0), rt0.c0, LENGTH(vt1.c0)))>((CAST(vt1.c0 AS INTEGER), 1.610011108E9, NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((DATETIME(rt0.c0, x'', vt1.c0), rt0.c0, LENGTH(vt1.c0)))>((CAST(vt1.c0 AS INTEGER), 1.610011108E9, NULL))));
SELECT SUM(count) FROM (SELECT (((((DATETIME(rt0.c0, x'', vt1.c0), rt0.c0, LENGTH(vt1.c0)))>((CAST(vt1.c0 AS INTEGER), 1.610011108E9, NULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((DATETIME(rt0.c0, x'', vt1.c0), rt0.c0, LENGTH(vt1.c0)))>((CAST(vt1.c0 AS INTEGER), 1.610011108E9, NULL))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(rt0.c2, rt1.c0))%(CASE WHEN 1.751897387E9 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((((CAST(rt1.c1 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), CAST(rt1.c0 AS TEXT)))<((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)|(rt1.c3)), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), CAST(rt1.c0 AS TEXT)))<((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)|(rt1.c3)), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(rt0.c2, rt1.c0))%(CASE WHEN 1.751897387E9 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(rt0.c2, rt1.c0))%(CASE WHEN 1.751897387E9 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((((CAST(rt1.c1 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), CAST(rt1.c0 AS TEXT)))<((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)|(rt1.c3)), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c1 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), CAST(rt1.c0 AS TEXT)))<((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)|(rt1.c3)), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(rt0.c2, rt1.c0))%(CASE WHEN 1.751897387E9 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(rt0.c2, rt1.c0))%(CASE WHEN 1.751897387E9 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)) WHERE ((((CAST(rt1.c1 AS TEXT), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), CAST(rt1.c0 AS TEXT)))<((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c2)|(rt1.c3)), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))));
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((('咟Q5t<_b'))>((rt0.c2))))))AND(rt1.c2 COLLATE BINARY)))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND(((rt0.c1)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((('咟Q5t<_b'))>((rt0.c2))))))AND(rt1.c2 COLLATE BINARY)))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND(((rt0.c1)>(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((('咟Q5t<_b'))>((rt0.c2))))))AND(rt1.c2 COLLATE BINARY)))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND(((rt0.c1)>(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((('咟Q5t<_b'))>((rt0.c2))))))AND(rt1.c2 COLLATE BINARY)))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND(((rt0.c1)>(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((((((rt1.c3) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((('咟Q5t<_b'))>((rt0.c2))))))AND(rt1.c2 COLLATE BINARY)))OR(CASE WHEN rt1.c1 THEN rt1.c1 END)))AND(((rt0.c1)>(rt1.c0)))));
SELECT * FROM vt1 WHERE (((NULL)||(vt1.c0))) ORDER BY ((CAST(-1170272303 AS TEXT))>=((((0x36b70c8a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)||(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(-1170272303 AS TEXT))>=((((0X36b70c8a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT * FROM vt1 WHERE (((NULL)||(vt1.c0))) ORDER BY ((CAST(-1170272303 AS TEXT))>=((((0x36b70c8a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL)||(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(-1170272303 AS TEXT))>=((((0X36b70c8a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC);
SELECT * FROM vt1 WHERE (((NULL)||(vt1.c0))) ORDER BY ((CAST(-1170272303 AS TEXT))>=((((0x36b70c8a)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) DESC;
SELECT * FROM vt1, rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN TYPEOF(DISTINCT rt1.c1) THEN (('2141290576')>>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT NULL)  WHEN TYPEOF(DISTINCT rt1.c1) THEN (('2141290576')>>(rt1.c0)) END) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN TYPEOF(DISTINCT rt1.c1) THEN (('2141290576')>>(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) NOT NULL)  WHEN TYPEOF(DISTINCT rt1.c1) THEN (('2141290576')>>(rt1.c0)) END) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (CASE ((rt1.c0) NOT NULL)  WHEN TYPEOF(DISTINCT rt1.c1) THEN (('2141290576')>>(rt1.c0)) END);
SELECT * FROM rt1, vt1 WHERE ((DATE(rt1.c3, rt1.c3, rt1.c0) IN (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)), '-1587278379'))) ORDER BY ((((vt1.c0)+(rt1.c3)))+(CAST(rt1.c0 AS TEXT))) DESC, ((((rt1.c2)OR(vt1.c0))) NOT BETWEEN (((0.9310165852157856)GLOB(vt1.c0))) AND (CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((DATE(rt1.c3, rt1.c3, rt1.c0) IN (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)), '-1587278379'))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY ((((vt1.c0)+(rt1.c3)))+(CAST(rt1.c0 AS TEXT))) DESC, ((((rt1.c2)OR(vt1.c0))) NOT BETWEEN (((0.9310165852157856)GLOB(vt1.c0))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT * FROM rt1, vt1 WHERE ((DATE(rt1.c3, rt1.c3, rt1.c0) IN (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)), '-1587278379'))) ORDER BY ((((vt1.c0)+(rt1.c3)))+(CAST(rt1.c0 AS TEXT))) DESC, ((((rt1.c2)OR(vt1.c0))) NOT BETWEEN (((0.9310165852157856)GLOB(vt1.c0))) AND (CAST(rt1.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL (((DATE(rt1.c3, rt1.c3, rt1.c0) IN (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)), '-1587278379'))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 ORDER BY ((((vt1.c0)+(rt1.c3)))+(CAST(rt1.c0 AS TEXT))) DESC, ((((rt1.c2)OR(vt1.c0))) NOT BETWEEN (((0.9310165852157856)GLOB(vt1.c0))) AND (CAST(rt1.c1 AS INTEGER))));
SELECT * FROM rt1, vt1 WHERE ((DATE(rt1.c3, rt1.c3, rt1.c0) IN (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)), '-1587278379'))) ORDER BY ((((vt1.c0)+(rt1.c3)))+(CAST(rt1.c0 AS TEXT))) DESC, ((((rt1.c2)OR(vt1.c0))) NOT BETWEEN (((0.9310165852157856)GLOB(vt1.c0))) AND (CAST(rt1.c1 AS INTEGER)));
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c2)=(rt1.c0))  WHEN ((x'') BETWEEN (rt0.c2) AND (rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c1 END ELSE TRIM(rt0.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)==(rt1.c0))  WHEN ((x'') BETWEEN (rt0.c2) AND (rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c1 END ELSE TRIM(rt0.c1, rt1.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c2)=(rt1.c0))  WHEN ((x'') BETWEEN (rt0.c2) AND (rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c1 END ELSE TRIM(rt0.c1, rt1.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)==(rt1.c0))  WHEN ((x'') BETWEEN (rt0.c2) AND (rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c1 END ELSE TRIM(rt0.c1, rt1.c2) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE ((rt1.c2)=(rt1.c0))  WHEN ((x'') BETWEEN (rt0.c2) AND (rt1.c2)) THEN CASE WHEN rt1.c3 THEN rt1.c1 END ELSE TRIM(rt0.c1, rt1.c2) END);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0))>(((rt1.c1 IN ()))))) ORDER BY ((-1.82290934E9)<(rt1.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((-1.82290934E9)<(rt1.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0))>(((rt1.c1 IN ()))))) ORDER BY ((-1.82290934E9)<(rt1.c3)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>(((rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((-1.82290934E9)<(rt1.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0))>(((rt1.c1 IN ()))))) ORDER BY ((-1.82290934E9)<(rt1.c3)) COLLATE RTRIM;
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), '' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), '' ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY CAST(TRIM(vt1.c0, vt1.c0) AS INTEGER), '' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0)<(vt1.c0))));
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL * FROM rt1, vt1, rt0 WHERE (CAST((+ (rt0.c0)) AS REAL));
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((~ (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((~ (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE ((~ (CAST(rt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)&(rt0.c2)) COLLATE BINARY) ORDER BY ((rt1.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (rt1.c0)), (~ (((rt1.c2)%(rt0.c2))))  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))&('咟Q5T<_B')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (rt1.c0)), (~ (((rt1.c2)%(rt0.c2))))  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))&('咟Q5T<_B')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)&(rt0.c2)) COLLATE BINARY) ORDER BY ((rt1.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (rt1.c0)), (~ (((rt1.c2)%(rt0.c2))))  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))&('咟Q5T<_B')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (rt1.c0)), (~ (((rt1.c2)%(rt0.c2))))  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))&('咟Q5T<_B')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((NULL)&(rt0.c2)) COLLATE BINARY) ORDER BY ((rt1.c0) NOT BETWEEN (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) AND (rt1.c0)), (~ (((rt1.c2)%(rt0.c2))))  NULLS FIRST, ((CAST(rt0.c2 AS BLOB))&('咟Q5T<_B')) ASC  NULLS LAST;
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON PRINTF(rt0.c2, '-1716279090', rt0.c0) COLLATE NOCASE INNER JOIN rt0 ON CASE WHEN 0.5832091334777156 THEN ((vt1.c0)&(rt1.c3)) ELSE rt1.c3 END WHERE (((((vt1.c0)+(rt0.c0)))|(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(rt0.c0)))|(rt0.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON PRINTF(rt0.c2, '-1716279090', rt0.c0) COLLATE NOCASE INNER JOIN rt0 ON CASE WHEN 0.5832091334777156 THEN ((vt1.c0)&(rt1.c3)) ELSE rt1.c3 END);
SELECT * FROM vt1 FULL OUTER JOIN rt1 ON PRINTF(rt0.c2, '-1716279090', rt0.c0) COLLATE NOCASE INNER JOIN rt0 ON CASE WHEN 0.5832091334777156 THEN ((vt1.c0)&(rt1.c3)) ELSE rt1.c3 END WHERE (((((vt1.c0)+(rt0.c0)))|(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)+(rt0.c0)))|(rt0.c1))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt1 ON PRINTF(rt0.c2, '-1716279090', rt0.c0) COLLATE NOCASE INNER JOIN rt0 ON CASE WHEN 0.5832091334777156 THEN ((vt1.c0)&(rt1.c3)) ELSE rt1.c3 END);
SELECT * FROM rt1 WHERE (IFNULL(rt1.c2, 'Ns2x^43') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c2, 'Ns2x^43') COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(rt1.c2, 'Ns2x^43') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(rt1.c2, 'Ns2x^43') COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(rt1.c2, 'Ns2x^43') COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON TYPEOF((rt0.c2 IN (rt0.c1))) WHERE (((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ORDER BY (((x''))<>((((rt1.c3)>=('v')))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON TYPEOF((rt0.c2 IN (rt0.c1))) ORDER BY (((x''))<>((((rt1.c3)>=('v'))))));
SELECT COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON TYPEOF((rt0.c2 IN (rt0.c1))) WHERE (((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ORDER BY (((x''))<>((((rt1.c3)>=('v')))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON TYPEOF((rt0.c2 IN (rt0.c1))) ORDER BY (((x''))<>((((rt1.c3)>=('v'))))));
SELECT COUNT(*) FROM vt1, rt1 RIGHT OUTER JOIN rt0 ON TYPEOF((rt0.c2 IN (rt0.c1))) WHERE (((((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) ORDER BY (((x''))<>((((rt1.c3)>=('v')))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))<<(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))<<(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<<(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN rt1 ON (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))OR(x'' COLLATE BINARY)))OR((rt0.c0 IN ()))) WHERE ((+ (CAST(rt1.c2 AS NUMERIC)))) ORDER BY CAST((rt0.c0 IN (vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN rt1 ON (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))OR(x'' COLLATE BINARY)))OR((rt0.c0 IN ()))) ORDER BY CAST((rt0.c0 IN (vt1.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN rt1 ON (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))OR(x'' COLLATE BINARY)))OR((rt0.c0 IN ()))) WHERE ((+ (CAST(rt1.c2 AS NUMERIC)))) ORDER BY CAST((rt0.c0 IN (vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN rt1 ON (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))OR(x'' COLLATE BINARY)))OR((rt0.c0 IN ()))) ORDER BY CAST((rt0.c0 IN (vt1.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 CROSS JOIN rt1 ON (((((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c0))))OR(x'' COLLATE BINARY)))OR((rt0.c0 IN ()))) WHERE ((+ (CAST(rt1.c2 AS NUMERIC)))) ORDER BY CAST((rt0.c0 IN (vt1.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (0.0759805931993599) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((NULL) NOTNULL)))  NULLS LAST, ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC, ((NULL) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.0759805931993599) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((NULL) NOTNULL)))  NULLS LAST, ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC, ((NULL) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.0759805931993599) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((NULL) NOTNULL)))  NULLS LAST, ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC, ((NULL) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.0759805931993599) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((NULL) NOTNULL)))  NULLS LAST, ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC, ((NULL) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.0759805931993599) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((NULL) NOTNULL)))  NULLS LAST, ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ()) ASC, ((NULL) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (0.5795003129624161) AND (vt1.c0)))OR(NULL)))AND(LIKELIHOOD(rt1.c3, 0.4043733671944276))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (0.5795003129624161) AND (vt1.c0)))OR(NULL)))AND(LIKELIHOOD(rt1.c3, 0.4043733671944276)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (0.5795003129624161) AND (vt1.c0)))OR(NULL)))AND(LIKELIHOOD(rt1.c3, 0.4043733671944276))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (0.5795003129624161) AND (vt1.c0)))OR(NULL)))AND(LIKELIHOOD(rt1.c3, 0.4043733671944276)))) IS TRUE)  as count FROM rt1, rt0, vt1);
SELECT ALL * FROM rt1, rt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (0.5795003129624161) AND (vt1.c0)))OR(NULL)))AND(LIKELIHOOD(rt1.c3, 0.4043733671944276))));
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) ISNULL))))OR((NULL IN ()))))OR((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) ISNULL))))OR((NULL IN ()))))OR((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) ISNULL))))OR((NULL IN ()))))OR((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) ISNULL))))OR((NULL IN ()))))OR((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR(rt0.c0)))AND(((rt0.c2) ISNULL))))OR((NULL IN ()))))OR((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))))));
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c1)))IS(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))IS(rt1.c0))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c1)))IS(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c1)))IS(rt1.c0))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c1)))IS(rt1.c0)));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN NULL THEN rt1.c2 END) BETWEEN (json_patch(rt0.c2, rt1.c3)) AND ((~ (rt1.c1)))) INNER JOIN rt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (LIKELIHOOD(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), 0.6632647444292898)) ORDER BY (((((vt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt0.c2, rt1.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), 0.6632647444292898)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN NULL THEN rt1.c2 END) BETWEEN (json_patch(rt0.c2, rt1.c3)) AND ((~ (rt1.c1)))) INNER JOIN rt1 ON (((vt1.c0 IN ())) NOTNULL) ORDER BY (((((vt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt0.c2, rt1.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN NULL THEN rt1.c2 END) BETWEEN (json_patch(rt0.c2, rt1.c3)) AND ((~ (rt1.c1)))) INNER JOIN rt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (LIKELIHOOD(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), 0.6632647444292898)) ORDER BY (((((vt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt0.c2, rt1.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), 0.6632647444292898)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN NULL THEN rt1.c2 END) BETWEEN (json_patch(rt0.c2, rt1.c3)) AND ((~ (rt1.c1)))) INNER JOIN rt1 ON (((vt1.c0 IN ())) NOTNULL) ORDER BY (((((vt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt0.c2, rt1.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN NULL THEN rt1.c2 END) BETWEEN (json_patch(rt0.c2, rt1.c3)) AND ((~ (rt1.c1)))) INNER JOIN rt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (LIKELIHOOD(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)), 0.6632647444292898)) ORDER BY (((((vt1.c0, rt1.c1, rt0.c0)) BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c1, rt0.c2, rt1.c0)))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (0.9336884812662711) ORDER BY ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)>=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9336884812662711) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)>=(NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (0.9336884812662711) ORDER BY ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)>=(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9336884812662711) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)>=(NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (0.9336884812662711) ORDER BY ((CASE rt1.c3  WHEN rt0.c2 THEN rt1.c1 END)>=(NULL)) ASC;
SELECT ALL * FROM rt0, rt1, vt1 NOT INDEXED WHERE ((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) IN ())) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 NOT INDEXED WHERE ((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) IN ())) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, vt1 NOT INDEXED WHERE ((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)) IN ())) ORDER BY rt0.c0  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((QUOTE(vt1.c0)) ISNULL)) ORDER BY ((((- (rt0.c0))))<(((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt1.c0)) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((- (rt0.c0))))<(((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) DESC);
SELECT * FROM rt0, vt1 WHERE (((QUOTE(vt1.c0)) ISNULL)) ORDER BY ((((- (rt0.c0))))<(((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(vt1.c0)) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((- (rt0.c0))))<(((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) DESC);
SELECT * FROM rt0, vt1 WHERE (((QUOTE(vt1.c0)) ISNULL)) ORDER BY ((((- (rt0.c0))))<(((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))))) DESC;
SELECT * FROM rt1, vt1 NOT INDEXED, rt0 WHERE ((((rt1.c2) IS TRUE) IN (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS TRUE) IN (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1 NOT INDEXED, rt0 WHERE ((((rt1.c2) IS TRUE) IN (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS TRUE) IN (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1 NOT INDEXED, rt0 WHERE ((((rt1.c2) IS TRUE) IN (((rt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE 0.7794642779817937 END THEN (- (rt0.c2)) WHEN ((x'') BETWEEN ('?PV') AND (rt1.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE 0.7794642779817937 END THEN (- (rt0.c2)) WHEN ((x'') BETWEEN ('?PV') AND (rt1.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE 0.7794642779817937 END THEN (- (rt0.c2)) WHEN ((x'') BETWEEN ('?PV') AND (rt1.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE 0.7794642779817937 END THEN (- (rt0.c2)) WHEN ((x'') BETWEEN ('?PV') AND (rt1.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt1, rt0 WHERE (CASE WHEN ((rt1.c1)LIKE(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 ELSE 0.7794642779817937 END THEN (- (rt0.c2)) WHEN ((x'') BETWEEN ('?PV') AND (rt1.c2)) THEN (rt0.c2 IN ()) END);
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(((rt1.c3)+('')) AS REAL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)+('')) AS REAL)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST((rt0.c2 IN ()) AS REAL));
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(((rt1.c3)+('')) AS REAL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c3)+('')) AS REAL)) IS TRUE)  as count FROM vt1, rt0, rt1 ORDER BY CAST((rt0.c2 IN ()) AS REAL));
SELECT * FROM vt1, rt0, rt1 WHERE (CAST(((rt1.c3)+('')) AS REAL)) ORDER BY CAST((rt0.c2 IN ()) AS REAL);
SELECT ALL * FROM rt1, vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1, vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1, vt1 NATURAL JOIN rt0 WHERE (CAST((NOT (rt1.c3)) AS TEXT));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)|(rt0.c2)))-(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2)))-(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)|(rt0.c2)))-(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(rt0.c2)))-(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c1)|(rt0.c2)))-(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c2, rt0.c1, ''))==((rt1.c2, vt1.c0, rt1.c3))) AS NUMERIC) FULL OUTER JOIN rt1 ON NULL WHERE ((+ ((vt1.c0 IN ())))) ORDER BY LIKE((x'' IN ()), rt1.c0), (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c2, rt0.c1, ''))=((rt1.c2, vt1.c0, rt1.c3))) AS NUMERIC) FULL OUTER JOIN rt1 ON NULL ORDER BY LIKE((x'' IN ()), rt1.c0), (vt1.c0 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c2, rt0.c1, ''))==((rt1.c2, vt1.c0, rt1.c3))) AS NUMERIC) FULL OUTER JOIN rt1 ON NULL WHERE ((+ ((vt1.c0 IN ())))) ORDER BY LIKE((x'' IN ()), rt1.c0), (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST((((rt0.c2, rt0.c1, ''))=((rt1.c2, vt1.c0, rt1.c3))) AS NUMERIC) FULL OUTER JOIN rt1 ON NULL ORDER BY LIKE((x'' IN ()), rt1.c0), (vt1.c0 IN ()) DESC  NULLS FIRST);
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON rt1.c0 WHERE (IFNULL((NOT (rt0.c2)), IFNULL(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (rt0.c2)), IFNULL(rt1.c1, rt1.c2))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON rt1.c0);
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON rt1.c0 WHERE (IFNULL((NOT (rt0.c2)), IFNULL(rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (rt0.c2)), IFNULL(rt1.c1, rt1.c2))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN rt0 ON rt1.c0);
SELECT * FROM vt1, rt1 INNER JOIN rt0 ON rt1.c0 WHERE (IFNULL((NOT (rt0.c2)), IFNULL(rt1.c1, rt1.c2)));
SELECT * FROM rt1, vt1, rt0 WHERE ('1627432879');
SELECT SUM(count) FROM (SELECT ALL (('1627432879') IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ('1627432879');
SELECT SUM(count) FROM (SELECT ALL (('1627432879') IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT * FROM rt1, vt1, rt0 WHERE ('1627432879');
SELECT * FROM rt0, rt1, vt1 WHERE ((('1143720418' COLLATE RTRIM)<(((rt1.c1)-(rt1.c2))))) ORDER BY (- (((rt1.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('1143720418' COLLATE RTRIM)<(((rt1.c1)-(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (- (((rt1.c3) ISNULL))) ASC);
SELECT * FROM rt0, rt1, vt1 WHERE ((('1143720418' COLLATE RTRIM)<(((rt1.c1)-(rt1.c2))))) ORDER BY (- (((rt1.c3) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((('1143720418' COLLATE RTRIM)<(((rt1.c1)-(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (- (((rt1.c3) ISNULL))) ASC);
SELECT * FROM rt0, rt1, vt1 WHERE ((('1143720418' COLLATE RTRIM)<(((rt1.c1)-(rt1.c2))))) ORDER BY (- (((rt1.c3) ISNULL))) ASC;
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE x''  WHEN LIKELY(vt1.c0) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN LIKELY(vt1.c0) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE x''  WHEN LIKELY(vt1.c0) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN LIKELY(vt1.c0) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE (CASE x''  WHEN LIKELY(vt1.c0) THEN CASE WHEN rt1.c0 THEN rt1.c0 END END);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN '-2090674788' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-2090674788' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN '-2090674788' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN '-2090674788' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN '-2090674788' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((vt1.c0))<>((rt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<>((rt1.c1))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((vt1.c0))<>((rt1.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<>((rt1.c1))) IN ())) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((((vt1.c0))<>((rt1.c1))) IN ()));
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((((rt1.c2))!=((rt0.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY (((rt1.c2 IN (rt0.c2, rt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN x'2bb6' THEN rt1.c2 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<>((rt0.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (((rt1.c2 IN (rt0.c2, rt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN x'2bb6' THEN rt1.c2 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((((rt1.c2))!=((rt0.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY (((rt1.c2 IN (rt0.c2, rt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN x'2bb6' THEN rt1.c2 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))<>((rt0.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, rt1, vt1 ORDER BY (((rt1.c2 IN (rt0.c2, rt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN x'2bb6' THEN rt1.c2 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, vt1 WHERE ((((((rt1.c2))!=((rt0.c0)))) BETWEEN (vt1.c0 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c1, rt0.c2))))) ORDER BY (((rt1.c2 IN (rt0.c2, rt1.c1))) BETWEEN (CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt1.c3 WHEN x'2bb6' THEN rt1.c2 ELSE rt0.c2 END) AND (((rt1.c2) NOT NULL)))  NULLS FIRST;
SELECT * FROM vt1, rt1 WHERE ((((+ (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((((+ (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE ((((+ (vt1.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)>>(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (COALESCE((- (vt1.c0)), ((rt1.c0)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((- (vt1.c0)), ((rt1.c0)>>(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (COALESCE((- (vt1.c0)), ((rt1.c0)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE((- (vt1.c0)), ((rt1.c0)>>(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, rt1);
SELECT ALL COUNT(*) FROM rt0, vt1, rt1 WHERE (COALESCE((- (vt1.c0)), ((rt1.c0)>>(rt0.c2))));
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY LIKELIHOOD(((x'') ISNULL), 0.710392517322553)  NULLS LAST, ((((rt1.c3)OR((((rt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c0, rt0.c1))))))OR(0.333727519495973)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKELIHOOD(((x'') ISNULL), 0.710392517322553)  NULLS LAST, ((((rt1.c3)OR((((rt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c0, rt0.c1))))))OR(0.333727519495973)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY LIKELIHOOD(((x'') ISNULL), 0.710392517322553)  NULLS LAST, ((((rt1.c3)OR((((rt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c0, rt0.c1))))))OR(0.333727519495973)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKELIHOOD(((x'') ISNULL), 0.710392517322553)  NULLS LAST, ((((rt1.c3)OR((((rt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c0, rt0.c1))))))OR(0.333727519495973)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c0) ORDER BY LIKELIHOOD(((x'') ISNULL), 0.710392517322553)  NULLS LAST, ((((rt1.c3)OR((((rt1.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt1.c2, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c0, rt0.c1))))))OR(0.333727519495973)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c0))))) ORDER BY 0.7680921859572578  NULLS FIRST, (((((vt1.c0))<(('3!'))))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0.7680921859572578  NULLS FIRST, (((((vt1.c0))<(('3!'))))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c0))))) ORDER BY 0.7680921859572578  NULLS FIRST, (((((vt1.c0))<(('3!'))))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 0.7680921859572578  NULLS FIRST, (((((vt1.c0))<(('3!'))))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE ((~ (((vt1.c0)-(vt1.c0))))) ORDER BY 0.7680921859572578  NULLS FIRST, (((((vt1.c0))<(('3!'))))-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((TRIM('I'))<=(((rt0.c0) ISNULL)))) ORDER BY vt1.c0 ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c0)>=(rt1.c3)), LIKELIHOOD('1247796286', 0.3027304611443168));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('I'))<=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY vt1.c0 ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c0)>=(rt1.c3)), LIKELIHOOD('1247796286', 0.3027304611443168)));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((TRIM('I'))<=(((rt0.c0) ISNULL)))) ORDER BY vt1.c0 ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c0)>=(rt1.c3)), LIKELIHOOD('1247796286', 0.3027304611443168));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM('I'))<=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt1, vt1, rt0 ORDER BY vt1.c0 ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c0)>=(rt1.c3)), LIKELIHOOD('1247796286', 0.3027304611443168)));
SELECT COUNT(*) FROM rt1, vt1, rt0 WHERE (((TRIM('I'))<=(((rt0.c0) ISNULL)))) ORDER BY vt1.c0 ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c0)>=(rt1.c3)), LIKELIHOOD('1247796286', 0.3027304611443168));
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((CAST('YwNbY' AS NUMERIC)))<((load_extension(rt1.c1, rt1.c1))))) ORDER BY rt1.c0 ASC, ((vt1.c0) BETWEEN (((((rt0.c1)AND(rt1.c3)))AND(rt1.c2))) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST('YwNbY' AS NUMERIC)))<((load_extension(rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY rt1.c0 ASC, ((vt1.c0) BETWEEN (((((rt0.c1)AND(rt1.c3)))AND(rt1.c2))) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1, rt1 WHERE ((((CAST('YwNbY' AS NUMERIC)))<((load_extension(rt1.c1, rt1.c1))))) ORDER BY rt1.c0 ASC, ((vt1.c0) BETWEEN (((((rt0.c1)AND(rt1.c3)))AND(rt1.c2))) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST('YwNbY' AS NUMERIC)))<((load_extension(rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt0, vt1, rt1 ORDER BY rt1.c0 ASC, ((vt1.c0) BETWEEN (((((rt0.c1)AND(rt1.c3)))AND(rt1.c2))) AND (((((rt0.c1)AND(rt1.c2)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (+ (0.18296299980363073)) WHERE (((((+ (vt1.c0))))!=((((('Ebh')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt1.c0))))!=((((('Ebh')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ (0.18296299980363073)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (+ (0.18296299980363073)) WHERE (((((+ (vt1.c0))))!=((((('Ebh')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt1.c0))))!=((((('Ebh')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (+ (0.18296299980363073)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (+ (0.18296299980363073)) WHERE (((((+ (vt1.c0))))!=((((('Ebh')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY (((((((((((('820980828')OR(((rt0.c1)&(rt0.c1)))))AND(((rt0.c2)>=(rt0.c0)))))OR('B%')))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)GLOB(rt0.c1)))))AND(1272903445)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((('820980828')OR(((rt0.c1)&(rt0.c1)))))AND(((rt0.c2)>=(rt0.c0)))))OR('B%')))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)GLOB(rt0.c1)))))AND(1272903445)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY (((((((((((('820980828')OR(((rt0.c1)&(rt0.c1)))))AND(((rt0.c2)>=(rt0.c0)))))OR('B%')))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)GLOB(rt0.c1)))))AND(1272903445)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((('820980828')OR(((rt0.c1)&(rt0.c1)))))AND(((rt0.c2)>=(rt0.c0)))))OR('B%')))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)GLOB(rt0.c1)))))AND(1272903445)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS TEXT)) ORDER BY (((((((((((('820980828')OR(((rt0.c1)&(rt0.c1)))))AND(((rt0.c2)>=(rt0.c0)))))OR('B%')))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((rt0.c1)GLOB(rt0.c1)))))AND(1272903445)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST((('-447035369')&(rt1.c2)) AS NUMERIC) WHERE ((((((rt1.c0))>((rt0.c2))))LIKE(UNLIKELY(DISTINCT rt1.c1)))) ORDER BY (((rt0.c1 IN ())) IS FALSE) ASC, CAST(((rt0.c2)>=(rt1.c0)) AS TEXT) ASC, (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))>((rt0.c2))))LIKE(UNLIKELY(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CAST((('-447035369')&(rt1.c2)) AS NUMERIC) ORDER BY (((rt0.c1 IN ())) IS FALSE) ASC, CAST(((rt0.c2)>=(rt1.c0)) AS TEXT) ASC, (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST((('-447035369')&(rt1.c2)) AS NUMERIC) WHERE ((((((rt1.c0))>((rt0.c2))))LIKE(UNLIKELY(DISTINCT rt1.c1)))) ORDER BY (((rt0.c1 IN ())) IS FALSE) ASC, CAST(((rt0.c2)>=(rt1.c0)) AS TEXT) ASC, (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0))>((rt0.c2))))LIKE(UNLIKELY(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CAST((('-447035369')&(rt1.c2)) AS NUMERIC) ORDER BY (((rt0.c1 IN ())) IS FALSE) ASC, CAST(((rt0.c2)>=(rt1.c0)) AS TEXT) ASC, (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST((('-447035369')&(rt1.c2)) AS NUMERIC) WHERE ((((((rt1.c0))>((rt0.c2))))LIKE(UNLIKELY(DISTINCT rt1.c1)))) ORDER BY (((rt0.c1 IN ())) IS FALSE) ASC, CAST(((rt0.c2)>=(rt1.c0)) AS TEXT) ASC, (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((+ (rt1.c3)) COLLATE NOCASE) ORDER BY ('0.6646433843144558' IN (rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ('0.6646433843144558' IN (rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((+ (rt1.c3)) COLLATE NOCASE) ORDER BY ('0.6646433843144558' IN (rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY ('0.6646433843144558' IN (rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, rt0 WHERE ((+ (rt1.c3)) COLLATE NOCASE) ORDER BY ('0.6646433843144558' IN (rt1.c2 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)>=(-291411456)) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) ELSE ((vt1.c0)AND(vt1.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((CASE WHEN vt1.c0 THEN vt1.c0 END, -1.290120238E9, ((vt1.c0)IS(vt1.c0))))!=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (('-975033699')<>(0.9858375115335923)), CAST(vt1.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)>=(-291411456)) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) ELSE ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((CASE WHEN vt1.c0 THEN vt1.c0 END, -1.290120238E9, ((vt1.c0)IS(vt1.c0))))<>((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (('-975033699')!=(0.9858375115335923)), CAST(vt1.c0 AS INTEGER))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)>=(-291411456)) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) ELSE ((vt1.c0)AND(vt1.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((CASE WHEN vt1.c0 THEN vt1.c0 END, -1.290120238E9, ((vt1.c0)IS(vt1.c0))))!=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (('-975033699')<>(0.9858375115335923)), CAST(vt1.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)>=(-291411456)) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) ELSE ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((CASE WHEN vt1.c0 THEN vt1.c0 END, -1.290120238E9, ((vt1.c0)IS(vt1.c0))))<>((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (('-975033699')!=(0.9858375115335923)), CAST(vt1.c0 AS INTEGER))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)>=(-291411456)) THEN STRFTIME(vt1.c0, vt1.c0, vt1.c0) ELSE ((vt1.c0)AND(vt1.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((CASE WHEN vt1.c0 THEN vt1.c0 END, -1.290120238E9, ((vt1.c0)IS(vt1.c0))))!=((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (('-975033699')<>(0.9858375115335923)), CAST(vt1.c0 AS INTEGER))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (0.8458901973691298) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8458901973691298) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (0.8458901973691298) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8458901973691298) IS TRUE)  as count FROM rt1, rt0, vt1 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, vt1 WHERE (0.8458901973691298) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(IFNULL(rt0.c1, 0X740e5c65) AS NUMERIC)) ORDER BY (0.09852296507800995 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c1, 0X740e5c65) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (0.09852296507800995 IN ()) DESC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(IFNULL(rt0.c1, 0X740e5c65) AS NUMERIC)) ORDER BY (0.09852296507800995 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(rt0.c1, 0X740e5c65) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt1, rt0 ORDER BY (0.09852296507800995 IN ()) DESC);
SELECT ALL * FROM vt1, rt1, rt0 WHERE (CAST(IFNULL(rt0.c1, 0X740e5c65) AS NUMERIC)) ORDER BY (0.09852296507800995 IN ()) DESC;
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED, rt0 WHERE (((((LENGTH('998651195'))OR((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((LENGTH('998651195'))OR((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED, rt0 WHERE (((((LENGTH('998651195'))OR((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((LENGTH('998651195'))OR((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt1, rt0);
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED, rt0 WHERE (((((LENGTH('998651195'))OR((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR(((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE ((~ ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((NULL IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((NULL IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ ((NULL IN ()))));
