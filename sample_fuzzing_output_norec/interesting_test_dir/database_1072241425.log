-- Time: 2024/06/11 11:36:37
-- Database: database25
-- Database version: 3.40.0
-- seed value: 1072241425
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, compress=likely, uncompress=likely, notindexed=c0); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (''), (0.7155834001483474), (1649999322); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1649999322'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
REINDEX  vt1; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('﷚'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('1649999322'), (0.8287576053843793), (x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1649999322 sz=-2086122315 unordered'); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('') WHERE ''; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 326472437); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2002853978);\n; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-2100348354'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (-2.100348354E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, 0xffffffff82cf3a3e); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=('VAc&?') WHERE ((((((((x'')AND(((rt0.c1)<>(rt0.c0)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))AND(rt0.c0)))OR(CAST(rt0.c2 AS BLOB))); -- 0ms;
UPDATE vt0 SET (c0)=(x'50b2d829'); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0, content=''); -- 1ms;
UPDATE vt1 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30936'); -- 1ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
DROP TABLE vt1; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(NULL, NULL, '1649999322') WHERE (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>(vt0.c0)))) AND ((vt0.c0))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0x4d039806, 0.4533878643641518); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 7); -- 0ms;
VACUUM; -- 2ms;
REINDEX RTRIM; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT , c1 TEXT , c2 REAL ); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i10 ON t0(((((((((c0)AND(((c2)+(c2)))))AND((c2 IN ()))))OR(((c0) IS TRUE))))OR(((c2) ISNULL))) COLLATE BINARY,((c0)IS NOT((((c0))<=((c1))))),((x'') NOT BETWEEN (CAST(c0 AS INTEGER)) AND (c1))) WHERE (((c2, c0, c0)) NOT BETWEEN ((NULL, NULL, NULL)) AND ((c2, c1, c2))) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (1.292081158E9), (NULL), (0.1638098749186444); -- 1ms;
ANALYZE i10; -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (0X47628627), (x''), (0.8733572598027151); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2100348354);\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'35ee'), (x''), (x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES ('1349005552', '1197639207', x'c772'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (2.002853978E9, x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''), ('1349005552'), (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 15); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c1=x'', c1=x''; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('U3E2}'), (''), (x'ed2def8d'); -- 1ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
UPDATE rt0 SET (c1, c0)=('1349005552', x'edff') WHERE (- ((rt0.c0 IN (rt0.c2)))); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.42931377015101246); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('-679570676'); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 2ms;
PRAGMA temp.automatic_index = true; -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE (((((rt0.c2))>=((rt0.c1))))OR(((rt0.c2)|(rt0.c1)))); -- 0ms;
PRAGMA temp.integrity_check; -- 1ms;
INSERT INTO vt2(vt2) VALUES('merge=1009020403,10');\n; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('merge', 484492876);\n; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c2 TO c40; -- 1ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL); -- 0ms;
UPDATE vt0 SET c0=x'5888', c0=0X4d039806 WHERE CAST(((0.3577980751992411)<=(vt0.c0)) AS REAL); -- 1ms;
INSERT OR ABORT INTO rt0(c1, c2) VALUES (x'', 1.349005552E9); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
VACUUM main; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 1ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (0.7516264040803186, 0Xfffffffffc8e1cb3); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''), (NULL), (0.1638098749186444), (-1573506052), (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1936053992') WHERE CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT NULL) THEN vt0.c0 COLLATE NOCASE ELSE (NOT (vt0.c0)) END; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt2; -- 0ms;
INSERT OR IGNORE INTO t1(c40, c0) VALUES (NULL, NULL); -- 0ms;
ANALYZE i10; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'038c9780' WHERE (+ ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
UPDATE rt0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0Xffffffffabd81e0c; -- 0ms;
PRAGMA locking_mode; -- 0ms;
REINDEX; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (json_remove(t1.c1, vt0.c0, rt0.c2, t1.c1) COLLATE BINARY) ORDER BY (NOT (TRIM(t1.c40, '-459916754'))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN CASE '-422196175'  WHEN t1.c1 THEN t1.c40 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(t1.c1, vt0.c0, rt0.c2, t1.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (NOT (TRIM(t1.c40, '-459916754'))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN CASE '-422196175'  WHEN t1.c1 THEN t1.c40 END END DESC);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (json_remove(t1.c1, vt0.c0, rt0.c2, t1.c1) COLLATE BINARY) ORDER BY (NOT (TRIM(t1.c40, '-459916754'))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN CASE '-422196175'  WHEN t1.c1 THEN t1.c40 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove(t1.c1, vt0.c0, rt0.c2, t1.c1) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (NOT (TRIM(t1.c40, '-459916754'))) DESC  NULLS FIRST, CASE WHEN CAST(rt0.c0 AS TEXT) THEN CASE '-422196175'  WHEN t1.c1 THEN t1.c40 END END DESC);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((vt2.c0)))))!=((((t1.c0)<(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((vt2.c0)))))!=((((t1.c0)<(vt2.c0)))))) IS TRUE)  as count FROM vt2, t1);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((vt2.c0)))))!=((((t1.c0)<(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((vt2.c0)))))!=((((t1.c0)<(vt2.c0)))))) IS TRUE)  as count FROM vt2, t1);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((vt2.c0)))))!=((((t1.c0)<(vt2.c0))))));
SELECT ALL * FROM t1, rt0, vt0 WHERE (CASE WHEN LOWER(t1.c1) THEN (~ (t1.c0)) WHEN (+ (t1.c1)) THEN (+ (rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN t1.c0 THEN t1.c40 END END) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(t1.c1) THEN (~ (t1.c0)) WHEN (+ (t1.c1)) THEN (+ (rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN t1.c0 THEN t1.c40 END END) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (CASE WHEN LOWER(t1.c1) THEN (~ (t1.c0)) WHEN (+ (t1.c1)) THEN (+ (rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN t1.c0 THEN t1.c40 END END) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(t1.c1) THEN (~ (t1.c0)) WHEN (+ (t1.c1)) THEN (+ (rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN t1.c0 THEN t1.c40 END END) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t1, rt0, vt0 WHERE (CASE WHEN LOWER(t1.c1) THEN (~ (t1.c0)) WHEN (+ (t1.c1)) THEN (+ (rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CASE WHEN t1.c0 THEN t1.c40 END END) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE (((((t1.c1, t1.c40, vt0.c0)) NOT BETWEEN ((t1.c40, 0.1638098749186444, t1.c1)) AND ((0.795361637225619, '435425131', vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1, t1.c40, vt0.c0)) NOT BETWEEN ((t1.c40, 0.1638098749186444, t1.c1)) AND ((0.795361637225619, '435425131', vt2.c0))) IN ())) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE (((((t1.c1, t1.c40, vt0.c0)) NOT BETWEEN ((t1.c40, 0.1638098749186444, t1.c1)) AND ((0.795361637225619, '435425131', vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1, t1.c40, vt0.c0)) NOT BETWEEN ((t1.c40, 0.1638098749186444, t1.c1)) AND ((0.795361637225619, '435425131', vt2.c0))) IN ())) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE (((((t1.c1, t1.c40, vt0.c0)) NOT BETWEEN ((t1.c40, 0.1638098749186444, t1.c1)) AND ((0.795361637225619, '435425131', vt2.c0))) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c40)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c40)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c40)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c40)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c1)OR(t1.c1)))OR(t1.c1)))AND(t1.c0)))OR(t1.c40)) IN ()));
SELECT ALL * FROM vt2 WHERE (((vt2.c0)<=(vt2.c0)) COLLATE NOCASE) ORDER BY CASE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))  WHEN ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END WHEN (vt2.c0 IN (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN vt2.c0 THEN vt2.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0)<=(vt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2 ORDER BY CASE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))  WHEN ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END WHEN (vt2.c0 IN (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN vt2.c0 THEN vt2.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (((vt2.c0)<=(vt2.c0)) COLLATE NOCASE) ORDER BY CASE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))  WHEN ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END WHEN (vt2.c0 IN (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN vt2.c0 THEN vt2.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0)<=(vt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2 ORDER BY CASE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))  WHEN ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END WHEN (vt2.c0 IN (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN vt2.c0 THEN vt2.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL * FROM vt2 WHERE (((vt2.c0)<=(vt2.c0)) COLLATE NOCASE) ORDER BY CASE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))  WHEN ((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)) THEN CASE WHEN vt2.c0 THEN '' ELSE vt2.c0 END WHEN (vt2.c0 IN (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN vt2.c0 THEN vt2.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL)) NOT NULL) LEFT OUTER JOIN t1 ON (((((vt0.c0, t1.c1, t1.c40)) BETWEEN ((t1.c40, rt0.c0, rt0.c2)) AND ((rt0.c1, t1.c0, t1.c40))))/((NULL IN ()))) WHERE (CASE WHEN ((vt0.c0)AND(t1.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c1 THEN ')~' WHEN t1.c0 THEN t1.c40 ELSE rt0.c1 END WHEN ((t1.c1)-(rt0.c0)) THEN NULL WHEN CASE t1.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END THEN '﷚' ELSE t1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(t1.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c1 THEN ')~' WHEN t1.c0 THEN t1.c40 ELSE rt0.c1 END WHEN ((t1.c1)-(rt0.c0)) THEN NULL WHEN CASE t1.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END THEN '﷚' ELSE t1.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL)) NOT NULL) LEFT OUTER JOIN t1 ON (((((vt0.c0, t1.c1, t1.c40)) BETWEEN ((t1.c40, rt0.c0, rt0.c2)) AND ((rt0.c1, t1.c0, t1.c40))))/((NULL IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL)) NOT NULL) LEFT OUTER JOIN t1 ON (((((vt0.c0, t1.c1, t1.c40)) BETWEEN ((t1.c40, rt0.c0, rt0.c2)) AND ((rt0.c1, t1.c0, t1.c40))))/((NULL IN ()))) WHERE (CASE WHEN ((vt0.c0)AND(t1.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c1 THEN ')~' WHEN t1.c0 THEN t1.c40 ELSE rt0.c1 END WHEN ((t1.c1)-(rt0.c0)) THEN NULL WHEN CASE t1.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END THEN '﷚' ELSE t1.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)AND(t1.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c1 THEN ')~' WHEN t1.c0 THEN t1.c40 ELSE rt0.c1 END WHEN ((t1.c1)-(rt0.c0)) THEN NULL WHEN CASE t1.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END THEN '﷚' ELSE t1.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL)) NOT NULL) LEFT OUTER JOIN t1 ON (((((vt0.c0, t1.c1, t1.c40)) BETWEEN ((t1.c40, rt0.c0, rt0.c2)) AND ((rt0.c1, t1.c0, t1.c40))))/((NULL IN ()))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) NOT NULL)) NOT NULL) LEFT OUTER JOIN t1 ON (((((vt0.c0, t1.c1, t1.c40)) BETWEEN ((t1.c40, rt0.c0, rt0.c2)) AND ((rt0.c1, t1.c0, t1.c40))))/((NULL IN ()))) WHERE (CASE WHEN ((vt0.c0)AND(t1.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN rt0.c2 WHEN t1.c1 THEN ')~' WHEN t1.c0 THEN t1.c40 ELSE rt0.c1 END WHEN ((t1.c1)-(rt0.c0)) THEN NULL WHEN CASE t1.c0  WHEN rt0.c2 THEN NULL ELSE rt0.c2 END THEN '﷚' ELSE t1.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)/(rt0.c1)))OR(((((vt2.c0)AND('-2100348354')))AND(t1.c0)))))OR(t1.c40 COLLATE NOCASE)))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.8528582544380436))))AND(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END))) ORDER BY ((x'd425') BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (rt0.c2))) AND (JULIANDAY(t1.c1, t1.c0, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)/(rt0.c1)))OR(((((vt2.c0)AND('-2100348354')))AND(t1.c0)))))OR(t1.c40 COLLATE NOCASE)))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.8528582544380436))))AND(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END))) IS TRUE)  as count FROM t1, rt0, vt2 NATURAL JOIN vt0 ORDER BY ((x'd425') BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (rt0.c2))) AND (JULIANDAY(t1.c1, t1.c0, rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)/(rt0.c1)))OR(((((vt2.c0)AND('-2100348354')))AND(t1.c0)))))OR(t1.c40 COLLATE NOCASE)))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.8528582544380436))))AND(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END))) ORDER BY ((x'd425') BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (rt0.c2))) AND (JULIANDAY(t1.c1, t1.c0, rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)/(rt0.c1)))OR(((((vt2.c0)AND('-2100348354')))AND(t1.c0)))))OR(t1.c40 COLLATE NOCASE)))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.8528582544380436))))AND(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END))) IS TRUE)  as count FROM t1, rt0, vt2 NATURAL JOIN vt0 ORDER BY ((x'd425') BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (rt0.c2))) AND (JULIANDAY(t1.c1, t1.c0, rt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 NATURAL JOIN vt0 WHERE (((((((((((vt0.c0)/(rt0.c1)))OR(((((vt2.c0)AND('-2100348354')))AND(t1.c0)))))OR(t1.c40 COLLATE NOCASE)))OR(LIKELIHOOD(DISTINCT rt0.c1, 0.8528582544380436))))AND(CASE t1.c1  WHEN t1.c1 THEN vt0.c0 ELSE t1.c1 END))) ORDER BY ((x'd425') BETWEEN (((t1.c0) BETWEEN (t1.c1) AND (rt0.c2))) AND (JULIANDAY(t1.c1, t1.c0, rt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (LOWER(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (NOT ((vt2.c0 IN ()))) ASC  NULLS FIRST, CAST(t1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM vt2, t1 ORDER BY (NOT ((vt2.c0 IN ()))) ASC  NULLS FIRST, CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (LOWER(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (NOT ((vt2.c0 IN ()))) ASC  NULLS FIRST, CAST(t1.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) IS TRUE)  as count FROM vt2, t1 ORDER BY (NOT ((vt2.c0 IN ()))) ASC  NULLS FIRST, CAST(t1.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (LOWER(((t1.c1) BETWEEN (t1.c0) AND (t1.c0)))) ORDER BY (NOT ((vt2.c0 IN ()))) ASC  NULLS FIRST, CAST(t1.c0 AS INTEGER) COLLATE BINARY;
SELECT * FROM t1, vt0, rt0 WHERE (CASE (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN t1.c0 THEN (t1.c0 IN ()) WHEN LTRIM(t1.c1, vt0.c0) THEN CAST(rt0.c2 AS BLOB) WHEN CASE NULL  WHEN rt0.c2 THEN t1.c40 WHEN vt0.c0 THEN t1.c0 WHEN x'' THEN rt0.c0 END THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN t1.c0 THEN (t1.c0 IN ()) WHEN LTRIM(t1.c1, vt0.c0) THEN CAST(rt0.c2 AS BLOB) WHEN CASE NULL  WHEN rt0.c2 THEN t1.c40 WHEN vt0.c0 THEN t1.c0 WHEN x'' THEN rt0.c0 END THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (CASE (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN t1.c0 THEN (t1.c0 IN ()) WHEN LTRIM(t1.c1, vt0.c0) THEN CAST(rt0.c2 AS BLOB) WHEN CASE NULL  WHEN rt0.c2 THEN t1.c40 WHEN vt0.c0 THEN t1.c0 WHEN x'' THEN rt0.c0 END THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN t1.c0 THEN (t1.c0 IN ()) WHEN LTRIM(t1.c1, vt0.c0) THEN CAST(rt0.c2 AS BLOB) WHEN CASE NULL  WHEN rt0.c2 THEN t1.c40 WHEN vt0.c0 THEN t1.c0 WHEN x'' THEN rt0.c0 END THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (CASE (((NULL)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))  WHEN t1.c0 THEN (t1.c0 IN ()) WHEN LTRIM(t1.c1, vt0.c0) THEN CAST(rt0.c2 AS BLOB) WHEN CASE NULL  WHEN rt0.c2 THEN t1.c40 WHEN vt0.c0 THEN t1.c0 WHEN x'' THEN rt0.c0 END THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS TEXT) END);
SELECT COUNT(*) FROM vt2 NOT INDEXED WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 END) ORDER BY ((((vt2.c0)>(vt2.c0)))GLOB(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0)>(vt2.c0)))GLOB(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 NOT INDEXED WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 END) ORDER BY ((((vt2.c0)>(vt2.c0)))GLOB(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 END) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0)>(vt2.c0)))GLOB(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 NOT INDEXED WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN vt2.c0 END) ORDER BY ((((vt2.c0)>(vt2.c0)))GLOB(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(json_valid(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(json_valid(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(json_valid(vt0.c0))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((t1.c40)) BETWEEN (((- (rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40)) BETWEEN (((- (rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((t1.c40)) BETWEEN (((- (rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40)) BETWEEN (((- (rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE ((((t1.c40)) BETWEEN (((- (rt0.c0)))) AND ((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0))))));
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))>((rt0.c0 IN (rt0.c0))))) ORDER BY (((NULL IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))>((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY (((NULL IN ())) ISNULL));
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))>((rt0.c0 IN (rt0.c0))))) ORDER BY (((NULL IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))>((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY (((NULL IN ())) ISNULL));
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c0)))>((rt0.c0 IN (rt0.c0))))) ORDER BY (((NULL IN ())) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0))))!=((((vt2.c0) NOT NULL)))) WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (((vt2.c0)) BETWEEN (((((NULL))>=((vt0.c0))))) AND ((((vt0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<>((((vt2.c0) NOT NULL)))) ORDER BY (((vt2.c0)) BETWEEN (((((NULL))>=((vt0.c0))))) AND ((((vt0.c0) IS FALSE)))) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0))))!=((((vt2.c0) NOT NULL)))) WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (((vt2.c0)) BETWEEN (((((NULL))>=((vt0.c0))))) AND ((((vt0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0))))<>((((vt2.c0) NOT NULL)))) ORDER BY (((vt2.c0)) BETWEEN (((((NULL))>=((vt0.c0))))) AND ((((vt0.c0) IS FALSE)))) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt2.c0) AND (vt2.c0))))!=((((vt2.c0) NOT NULL)))) WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (((vt2.c0)) BETWEEN (((((NULL))>=((vt0.c0))))) AND ((((vt0.c0) IS FALSE)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt2, t1 WHERE (((((vt0.c0)IS(vt0.c0)))&(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((rt0.c2)%(vt2.c0)))<(((rt0.c1)<=(t1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))&(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2, t1 ORDER BY ((((rt0.c2)%(vt2.c0)))<(((rt0.c1)<=(t1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt2, t1 WHERE (((((vt0.c0)IS(vt0.c0)))&(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((rt0.c2)%(vt2.c0)))<(((rt0.c1)<=(t1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))&(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2, t1 ORDER BY ((((rt0.c2)%(vt2.c0)))<(((rt0.c1)<=(t1.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt2, t1 WHERE (((((vt0.c0)IS(vt0.c0)))&(((t1.c0) BETWEEN (t1.c1) AND (t1.c1))))) ORDER BY ((((rt0.c2)%(vt2.c0)))<(((rt0.c1)<=(t1.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt2 FULL OUTER JOIN vt0 ON NULLIF((~ (rt0.c2)), (vt0.c0 IN ())) WHERE (CASE ((0.4533878643641518)||(vt0.c0))  WHEN (((vt2.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c0, vt2.c0))) THEN ((vt2.c0) IS FALSE) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.4533878643641518)||(vt0.c0))  WHEN (((vt2.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c0, vt2.c0))) THEN ((vt2.c0) IS FALSE) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN vt0 ON NULLIF((~ (rt0.c2)), (vt0.c0 IN ())));
SELECT ALL * FROM rt0, vt2 FULL OUTER JOIN vt0 ON NULLIF((~ (rt0.c2)), (vt0.c0 IN ())) WHERE (CASE ((0.4533878643641518)||(vt0.c0))  WHEN (((vt2.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c0, vt2.c0))) THEN ((vt2.c0) IS FALSE) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.4533878643641518)||(vt0.c0))  WHEN (((vt2.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c0, vt2.c0))) THEN ((vt2.c0) IS FALSE) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN vt0 ON NULLIF((~ (rt0.c2)), (vt0.c0 IN ())));
SELECT ALL * FROM rt0, vt2 FULL OUTER JOIN vt0 ON NULLIF((~ (rt0.c2)), (vt0.c0 IN ())) WHERE (CASE ((0.4533878643641518)||(vt0.c0))  WHEN (((vt2.c0, rt0.c1, rt0.c1))>=((vt0.c0, rt0.c0, vt2.c0))) THEN ((vt2.c0) IS FALSE) ELSE ((rt0.c0) ISNULL) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST((NOT (t1.c1)) AS INTEGER) INNER JOIN vt0 ON (- (((((NULL)OR(t1.c40)))AND(vt0.c0)))) WHERE ((((((-1.936053992E9)OR(t1.c0))))>=((((((((((((((t1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c1)))AND(vt0.c0)))))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((-1.936053992E9)OR(t1.c0))))>=((((((((((((((t1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST((NOT (t1.c1)) AS INTEGER) INNER JOIN vt0 ON (- (((((NULL)OR(t1.c40)))AND(vt0.c0)))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(NULL)) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST((NOT (t1.c1)) AS INTEGER) INNER JOIN vt0 ON (- (((((NULL)OR(t1.c40)))AND(vt0.c0)))) WHERE ((((((-1.936053992E9)OR(t1.c0))))>=((((((((((((((t1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c1)))AND(vt0.c0)))))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(NULL)) DESC;
SELECT SUM(count) FROM (SELECT (((((((-1.936053992E9)OR(t1.c0))))>=((((((((((((((t1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST((NOT (t1.c1)) AS INTEGER) INNER JOIN vt0 ON (- (((((NULL)OR(t1.c40)))AND(vt0.c0)))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(NULL)) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON CAST((NOT (t1.c1)) AS INTEGER) INNER JOIN vt0 ON (- (((((NULL)OR(t1.c40)))AND(vt0.c0)))) WHERE ((((((-1.936053992E9)OR(t1.c0))))>=((((((((((((((t1.c0)OR(rt0.c2)))AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))OR(t1.c1)))AND(vt0.c0)))))) ORDER BY ((rt0.c0 COLLATE NOCASE)IS(NULL)) DESC;
SELECT ALL * FROM t1, rt0, vt0, vt2 WHERE (CASE WHEN (((rt0.c1, t1.c0, t1.c1))>((t1.c40, NULL, vt0.c0))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, t1.c0, t1.c1))>((t1.c40, NULL, vt0.c0))) THEN NULL END) IS TRUE)  as count FROM t1, rt0, vt0, vt2);
SELECT ALL * FROM t1, rt0, vt0, vt2 WHERE (CASE WHEN (((rt0.c1, t1.c0, t1.c1))>((t1.c40, NULL, vt0.c0))) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, t1.c0, t1.c1))>((t1.c40, NULL, vt0.c0))) THEN NULL END) IS TRUE)  as count FROM t1, rt0, vt0, vt2);
SELECT ALL * FROM t1, rt0, vt0, vt2 WHERE (CASE WHEN (((rt0.c1, t1.c0, t1.c1))>((t1.c40, NULL, vt0.c0))) THEN NULL END);
SELECT * FROM rt0, vt2 WHERE (((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt2.c0)) IN (((rt0.c1) NOTNULL), ((vt2.c0)AND(vt2.c0)))) ASC, ((((vt2.c0)==(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt2 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt2.c0)) IN (((rt0.c1) NOTNULL), ((vt2.c0)AND(vt2.c0)))) ASC, ((((vt2.c0)=(rt0.c0))) NOTNULL) ASC);
SELECT * FROM rt0, vt2 WHERE (((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt2.c0)) IN (((rt0.c1) NOTNULL), ((vt2.c0)AND(vt2.c0)))) ASC, ((((vt2.c0)==(rt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt2 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt2.c0)) IN (((rt0.c1) NOTNULL), ((vt2.c0)AND(vt2.c0)))) ASC, ((((vt2.c0)=(rt0.c0))) NOTNULL) ASC);
SELECT * FROM rt0, vt2 WHERE (((((((vt2.c0)AND(rt0.c0)))AND(rt0.c1))) NOT NULL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt2.c0)) IN (((rt0.c1) NOTNULL), ((vt2.c0)AND(vt2.c0)))) ASC, ((((vt2.c0)==(rt0.c0))) NOTNULL) ASC;
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((vt0.c0)AND(vt0.c0))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c40 IN (t1.c40, t1.c1, t1.c1))) BETWEEN (CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN 0.7183039201066448 THEN t1.c1 WHEN t1.c0 THEN t1.c40 ELSE t1.c40 END) AND (t1.c1))) ORDER BY (~ (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1))));
SELECT SUM(count) FROM (SELECT (((((t1.c40 IN (t1.c40, t1.c1, t1.c1))) BETWEEN (CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN 0.7183039201066448 THEN t1.c1 WHEN t1.c0 THEN t1.c40 ELSE t1.c40 END) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY (~ (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c40 IN (t1.c40, t1.c1, t1.c1))) BETWEEN (CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN 0.7183039201066448 THEN t1.c1 WHEN t1.c0 THEN t1.c40 ELSE t1.c40 END) AND (t1.c1))) ORDER BY (~ (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1))));
SELECT SUM(count) FROM (SELECT (((((t1.c40 IN (t1.c40, t1.c1, t1.c1))) BETWEEN (CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN 0.7183039201066448 THEN t1.c1 WHEN t1.c0 THEN t1.c40 ELSE t1.c40 END) AND (t1.c1))) IS TRUE)  as count FROM t1 ORDER BY (~ (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c40 IN (t1.c40, t1.c1, t1.c1))) BETWEEN (CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN 0.7183039201066448 THEN t1.c1 WHEN t1.c0 THEN t1.c40 ELSE t1.c40 END) AND (t1.c1))) ORDER BY (~ (((((((((((((t1.c1)AND(t1.c0)))AND(t1.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c0)))AND(t1.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CASE WHEN (NOT (rt0.c0)) THEN (~ (vt0.c0)) END WHERE ((((((((((((t1.c0, rt0.c0, t1.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((0.32076713812142144, t1.c0, rt0.c1))))OR(((rt0.c0)LIKE(rt0.c1)))))OR((('.䠇zN5Z?	{')|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0, rt0.c0, t1.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((0.32076713812142144, t1.c0, rt0.c1))))OR(((rt0.c0)LIKE(rt0.c1)))))OR((('.䠇zN5Z?	{')|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CASE WHEN (NOT (rt0.c0)) THEN (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CASE WHEN (NOT (rt0.c0)) THEN (~ (vt0.c0)) END WHERE ((((((((((((t1.c0, rt0.c0, t1.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((0.32076713812142144, t1.c0, rt0.c1))))OR(((rt0.c0)LIKE(rt0.c1)))))OR((('.䠇zN5Z?	{')|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((((t1.c0, rt0.c0, t1.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((0.32076713812142144, t1.c0, rt0.c1))))OR(((rt0.c0)LIKE(rt0.c1)))))OR((('.䠇zN5Z?	{')|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CASE WHEN (NOT (rt0.c0)) THEN (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN t1 ON CASE WHEN (NOT (rt0.c0)) THEN (~ (vt0.c0)) END WHERE ((((((((((((t1.c0, rt0.c0, t1.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((0.32076713812142144, t1.c0, rt0.c1))))OR(((rt0.c0)LIKE(rt0.c1)))))OR((('.䠇zN5Z?	{')|(rt0.c1)))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)))))OR(((rt0.c1)IS NOT(rt0.c1)))));
SELECT * FROM t1, vt2, vt0 WHERE (((((t1.c40) NOT BETWEEN (vt0.c0) AND (t1.c0))) BETWEEN (((vt0.c0)<<(t1.c1))) AND ((((vt0.c0))<((x'3abb')))))) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c0) ISNULL))OR(((t1.c0) NOT NULL))))OR((NOT (NULL)))))AND(((t1.c0) NOT NULL))))AND(LIKE(NULL, vt2.c0, '﷚'))), (((t1.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (t1.c0)), (t1.c0 IN ()), '{EG')) AND ((CAST(t1.c1 AS REAL), ((t1.c40)<<(t1.c1)), ((vt2.c0)<>(0.17317153677011676))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40) NOT BETWEEN (vt0.c0) AND (t1.c0))) BETWEEN (((vt0.c0)<<(t1.c1))) AND ((((vt0.c0))<((x'3abb')))))) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c0) ISNULL))OR(((t1.c0) NOT NULL))))OR((NOT (NULL)))))AND(((t1.c0) NOT NULL))))AND(LIKE(NULL, vt2.c0, '﷚'))), (((t1.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (t1.c0)), (t1.c0 IN ()), '{EG')) AND ((CAST(t1.c1 AS REAL), ((t1.c40)<<(t1.c1)), ((vt2.c0)!=(0.17317153677011676))))) DESC);
SELECT * FROM t1, vt2, vt0 WHERE (((((t1.c40) NOT BETWEEN (vt0.c0) AND (t1.c0))) BETWEEN (((vt0.c0)<<(t1.c1))) AND ((((vt0.c0))<((x'3abb')))))) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c0) ISNULL))OR(((t1.c0) NOT NULL))))OR((NOT (NULL)))))AND(((t1.c0) NOT NULL))))AND(LIKE(NULL, vt2.c0, '﷚'))), (((t1.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (t1.c0)), (t1.c0 IN ()), '{EG')) AND ((CAST(t1.c1 AS REAL), ((t1.c40)<<(t1.c1)), ((vt2.c0)<>(0.17317153677011676))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40) NOT BETWEEN (vt0.c0) AND (t1.c0))) BETWEEN (((vt0.c0)<<(t1.c1))) AND ((((vt0.c0))<((x'3abb')))))) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c0) ISNULL))OR(((t1.c0) NOT NULL))))OR((NOT (NULL)))))AND(((t1.c0) NOT NULL))))AND(LIKE(NULL, vt2.c0, '﷚'))), (((t1.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (t1.c0)), (t1.c0 IN ()), '{EG')) AND ((CAST(t1.c1 AS REAL), ((t1.c40)<<(t1.c1)), ((vt2.c0)!=(0.17317153677011676))))) DESC);
SELECT * FROM t1, vt2, vt0 WHERE (((((t1.c40) NOT BETWEEN (vt0.c0) AND (t1.c0))) BETWEEN (((vt0.c0)<<(t1.c1))) AND ((((vt0.c0))<((x'3abb')))))) ORDER BY (~ ((+ (vt0.c0)))) ASC  NULLS LAST, load_extension(t1.c1) COLLATE NOCASE DESC  NULLS LAST, ((((((((((vt0.c0) ISNULL))OR(((t1.c0) NOT NULL))))OR((NOT (NULL)))))AND(((t1.c0) NOT NULL))))AND(LIKE(NULL, vt2.c0, '﷚'))), (((t1.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (t1.c0)), (t1.c0 IN ()), '{EG')) AND ((CAST(t1.c1 AS REAL), ((t1.c40)<<(t1.c1)), ((vt2.c0)<>(0.17317153677011676))))) DESC;
SELECT * FROM rt0, t1 INDEXED BY i10, vt2 WHERE (0.7323372380764298);
SELECT SUM(count) FROM (SELECT ALL ((0.7323372380764298) IS TRUE)  as count FROM rt0, t1 INDEXED BY i10, vt2);
SELECT * FROM rt0, t1 INDEXED BY i10, vt2 WHERE (0.7323372380764298);
SELECT SUM(count) FROM (SELECT ALL ((0.7323372380764298) IS TRUE)  as count FROM rt0, t1 INDEXED BY i10, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (vt2.c0);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0)));
SELECT * FROM rt0 WHERE ((NOT (UPPER(rt0.c1)))) ORDER BY rt0.c0, ((('-42747890', rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c2)&(rt0.c2)))) AND ((((rt0.c2)==(rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c1))<=((rt0.c0)))))) DESC  NULLS FIRST, ABS(rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, ((('-42747890', rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c2)&(rt0.c2)))) AND ((((rt0.c2)==(rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c1))<=((rt0.c0)))))) DESC  NULLS FIRST, ABS(rt0.c1)  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (UPPER(rt0.c1)))) ORDER BY rt0.c0, ((('-42747890', rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c2)&(rt0.c2)))) AND ((((rt0.c2)==(rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c1))<=((rt0.c0)))))) DESC  NULLS FIRST, ABS(rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (UPPER(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0, ((('-42747890', rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c2)&(rt0.c2)))) AND ((((rt0.c2)==(rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c1))<=((rt0.c0)))))) DESC  NULLS FIRST, ABS(rt0.c1)  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (UPPER(rt0.c1)))) ORDER BY rt0.c0, ((('-42747890', rt0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c2)&(rt0.c2)))) AND ((((rt0.c2)==(rt0.c1)), ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)), (((rt0.c1))<=((rt0.c0)))))) DESC  NULLS FIRST, ABS(rt0.c1)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE (((((((t1.c1)AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY (~ (((t1.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (~ (((t1.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE (((((((t1.c1)AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY (~ (((t1.c1) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)AND(rt0.c0)))OR(rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (~ (((t1.c1) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE (((((((t1.c1)AND(rt0.c0)))OR(rt0.c1))) ISNULL)) ORDER BY (~ (((t1.c1) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN t1 WHERE ((((t1.c0 IN ()))IS NOT(t1.c40))) ORDER BY (((+ (t1.c1)))/(CASE t1.c0  WHEN vt2.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC  NULLS FIRST, CAST(CASE t1.c40  WHEN t1.c1 THEN t1.c40 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))IS NOT(t1.c40))) IS TRUE)  as count FROM vt2 NATURAL JOIN t1 ORDER BY (((+ (t1.c1)))/(CASE t1.c0  WHEN vt2.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC  NULLS FIRST, CAST(CASE t1.c40  WHEN t1.c1 THEN t1.c40 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN t1 WHERE ((((t1.c0 IN ()))IS NOT(t1.c40))) ORDER BY (((+ (t1.c1)))/(CASE t1.c0  WHEN vt2.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC  NULLS FIRST, CAST(CASE t1.c40  WHEN t1.c1 THEN t1.c40 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))IS NOT(t1.c40))) IS TRUE)  as count FROM vt2 NATURAL JOIN t1 ORDER BY (((+ (t1.c1)))/(CASE t1.c0  WHEN vt2.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC  NULLS FIRST, CAST(CASE t1.c40  WHEN t1.c1 THEN t1.c40 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 NATURAL JOIN t1 WHERE ((((t1.c0 IN ()))IS NOT(t1.c40))) ORDER BY (((+ (t1.c1)))/(CASE t1.c0  WHEN vt2.c0 THEN t1.c0 WHEN x'' THEN t1.c0 WHEN t1.c1 THEN t1.c1 END)) DESC  NULLS FIRST, CAST(CASE t1.c40  WHEN t1.c1 THEN t1.c40 ELSE t1.c1 END AS TEXT) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, vt2, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT NULL)) NOTNULL) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN 1349005552 ELSE rt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt2, rt0 ORDER BY ((((rt0.c1) NOT NULL)) NOTNULL) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN 1349005552 ELSE rt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt2, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT NULL)) NOTNULL) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN 1349005552 ELSE rt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, vt2, rt0 ORDER BY ((((rt0.c1) NOT NULL)) NOTNULL) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN 1349005552 ELSE rt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt2, rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC)) ORDER BY ((((rt0.c1) NOT NULL)) NOTNULL) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN 1349005552 ELSE rt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE (((((((((((vt2.c0) NOT BETWEEN (x'') AND (t1.c1)))AND('ow1pBsL')))AND((NOT (t1.c40)))))OR(CAST(t1.c1 AS INTEGER))))AND(((((((((t1.c1)OR(t1.c40)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY t1.c40  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.c0) NOT BETWEEN (x'') AND (t1.c1)))AND('ow1pBsL')))AND((NOT (t1.c40)))))OR(CAST(t1.c1 AS INTEGER))))AND(((((((((t1.c1)OR(t1.c40)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, vt2 ORDER BY t1.c40  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE (((((((((((vt2.c0) NOT BETWEEN (x'') AND (t1.c1)))AND('ow1pBsL')))AND((NOT (t1.c40)))))OR(CAST(t1.c1 AS INTEGER))))AND(((((((((t1.c1)OR(t1.c40)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY t1.c40  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.c0) NOT BETWEEN (x'') AND (t1.c1)))AND('ow1pBsL')))AND((NOT (t1.c40)))))OR(CAST(t1.c1 AS INTEGER))))AND(((((((((t1.c1)OR(t1.c40)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t1, vt2 ORDER BY t1.c40  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE (((((((((((vt2.c0) NOT BETWEEN (x'') AND (t1.c1)))AND('ow1pBsL')))AND((NOT (t1.c40)))))OR(CAST(t1.c1 AS INTEGER))))AND(((((((((t1.c1)OR(t1.c40)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2))))) ORDER BY t1.c40  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, rt0, vt2 WHERE (t1.c0) ORDER BY ((((t1.c40)&(vt0.c0))) BETWEEN (((rt0.c0)>(t1.c1))) AND (((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t1, rt0, vt2 ORDER BY ((((t1.c40)&(vt0.c0))) BETWEEN (((rt0.c0)>(t1.c1))) AND (((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt0, vt2 WHERE (t1.c0) ORDER BY ((((t1.c40)&(vt0.c0))) BETWEEN (((rt0.c0)>(t1.c1))) AND (((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t1, rt0, vt2 ORDER BY ((((t1.c40)&(vt0.c0))) BETWEEN (((rt0.c0)>(t1.c1))) AND (((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, t1, rt0, vt2 WHERE (t1.c0) ORDER BY ((((t1.c40)&(vt0.c0))) BETWEEN (((rt0.c0)>(t1.c1))) AND (((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT COUNT(*) FROM vt2 WHERE (CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((0xffffffffe4963a2e) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY ((0xffffffffe4963a2e) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((0xffffffffe4963a2e) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY ((0xffffffffe4963a2e) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (CAST(vt2.c0 AS NUMERIC) COLLATE BINARY) ORDER BY ((0xffffffffe4963a2e) IS TRUE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((((((((t1.c40)AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))AND(vt2.c0)))+(NULLIF(t1.c0, t1.c0)))) ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN ((- (vt2.c0))) AND (CASE t1.c1  WHEN t1.c40 THEN t1.c1 END));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c40)AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))AND(vt2.c0)))+(NULLIF(t1.c0, t1.c0)))) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN ((- (vt2.c0))) AND (CASE t1.c1  WHEN t1.c40 THEN t1.c1 END)));
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((((((((t1.c40)AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))AND(vt2.c0)))+(NULLIF(t1.c0, t1.c0)))) ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN ((- (vt2.c0))) AND (CASE t1.c1  WHEN t1.c40 THEN t1.c1 END));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c40)AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))AND(vt2.c0)))+(NULLIF(t1.c0, t1.c0)))) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN ((- (vt2.c0))) AND (CASE t1.c1  WHEN t1.c40 THEN t1.c1 END)));
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((((((((((t1.c40)AND(vt0.c0)))AND(rt0.c1)))OR(t1.c0)))AND(vt2.c0)))+(NULLIF(t1.c0, t1.c0)))) ORDER BY ((((t1.c0) NOTNULL)) NOT BETWEEN ((- (vt2.c0))) AND (CASE t1.c1  WHEN t1.c40 THEN t1.c1 END));
SELECT * FROM vt0, t1 RIGHT OUTER JOIN vt2 ON ((t1.c1 IN ()) IN (((rt0.c2) NOT BETWEEN (vt2.c0) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON t1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt2 ON ((t1.c1 IN ()) IN (((rt0.c2) NOT BETWEEN (vt2.c0) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON t1.c0);
SELECT * FROM vt0, t1 RIGHT OUTER JOIN vt2 ON ((t1.c1 IN ()) IN (((rt0.c2) NOT BETWEEN (vt2.c0) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON t1.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt2 ON ((t1.c1 IN ()) IN (((rt0.c2) NOT BETWEEN (vt2.c0) AND (rt0.c1)))) LEFT OUTER JOIN rt0 ON t1.c0);
SELECT * FROM rt0, vt0, t1 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT * FROM rt0, vt0, t1 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((x'') NOT BETWEEN (((rt0.c1)||(vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (json_remove(((rt0.c0)&(t1.c40)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_remove(((rt0.c0)&(t1.c40)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()))) IS TRUE)  as count FROM vt2, t1, rt0, vt0);
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (json_remove(((rt0.c0)&(t1.c40)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_remove(((rt0.c0)&(t1.c40)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()))) IS TRUE)  as count FROM vt2, t1, rt0, vt0);
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (json_remove(((rt0.c0)&(t1.c40)), ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ())));
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(-1687212094)))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(-1687212094)))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(-1687212094)))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(-1687212094)))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0)OR(-1687212094)))OR(vt0.c0)))AND(((vt0.c0) NOTNULL))))OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t1, vt2 WHERE (CASE WHEN CAST(vt2.c0 AS TEXT) THEN TYPEOF(DISTINCT '2015708000') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt2.c0 AS TEXT) THEN TYPEOF(DISTINCT '2015708000') END) IS TRUE)  as count FROM vt0, t1, vt2);
SELECT ALL COUNT(*) FROM vt0, t1, vt2 WHERE (CASE WHEN CAST(vt2.c0 AS TEXT) THEN TYPEOF(DISTINCT '2015708000') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt2.c0 AS TEXT) THEN TYPEOF(DISTINCT '2015708000') END) IS TRUE)  as count FROM vt0, t1, vt2);
SELECT ALL COUNT(*) FROM vt0, t1, vt2 WHERE (CASE WHEN CAST(vt2.c0 AS TEXT) THEN TYPEOF(DISTINCT '2015708000') END);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON LENGTH(((((t1.c1)AND(t1.c40)))OR(t1.c40))) WHERE (791505357) ORDER BY (t1.c40 IN ())  NULLS FIRST, (((MAX(t1.c0, t1.c1, vt0.c0, t1.c0, t1.c1, t1.c1)))>(('883667140'))) ASC  NULLS FIRST, '/qO' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((791505357) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON LENGTH(((((t1.c1)AND(t1.c40)))OR(t1.c40))) ORDER BY (t1.c40 IN ())  NULLS FIRST, (((MAX(t1.c0, t1.c1, vt0.c0, t1.c0, t1.c1, t1.c1)))>(('883667140'))) ASC  NULLS FIRST, '/qO' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON LENGTH(((((t1.c1)AND(t1.c40)))OR(t1.c40))) WHERE (791505357) ORDER BY (t1.c40 IN ())  NULLS FIRST, (((MAX(t1.c0, t1.c1, vt0.c0, t1.c0, t1.c1, t1.c1)))>(('883667140'))) ASC  NULLS FIRST, '/qO' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((791505357) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON LENGTH(((((t1.c1)AND(t1.c40)))OR(t1.c40))) ORDER BY (t1.c40 IN ())  NULLS FIRST, (((MAX(t1.c0, t1.c1, vt0.c0, t1.c0, t1.c1, t1.c1)))>(('883667140'))) ASC  NULLS FIRST, '/qO' DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON LENGTH(((((t1.c1)AND(t1.c40)))OR(t1.c40))) WHERE (791505357) ORDER BY (t1.c40 IN ())  NULLS FIRST, (((MAX(t1.c0, t1.c1, vt0.c0, t1.c0, t1.c1, t1.c1)))>(('883667140'))) ASC  NULLS FIRST, '/qO' DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c0) IS FALSE))*(((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2 COLLATE RTRIM)>=((((vt2.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, vt2.c0, vt0.c0)) AND ((vt2.c0, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))*(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((rt0.c2 COLLATE RTRIM)>=((((vt2.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, vt2.c0, vt0.c0)) AND ((vt2.c0, rt0.c0, rt0.c2))))));
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c0) IS FALSE))*(((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2 COLLATE RTRIM)>=((((vt2.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, vt2.c0, vt0.c0)) AND ((vt2.c0, rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE))*(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((rt0.c2 COLLATE RTRIM)>=((((vt2.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, vt2.c0, vt0.c0)) AND ((vt2.c0, rt0.c0, rt0.c2))))));
SELECT ALL * FROM rt0, vt0, vt2 WHERE (((((rt0.c0) IS FALSE))*(((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2 COLLATE RTRIM)>=((((vt2.c0, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, vt2.c0, vt0.c0)) AND ((vt2.c0, rt0.c0, rt0.c2)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (x'') ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE (x'') ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE (x'') ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((((((t1.c40))>=((rt0.c0))))OR((rt0.c1 IN (vt2.c0)))))OR(rt0.c2)) FULL OUTER JOIN vt2 ON 0.40481137615679363 WHERE (CASE WHEN t1.c1 THEN '-1687212094' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c1 THEN '-1687212094' END COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((((((t1.c40))>=((rt0.c0))))OR((rt0.c1 IN (vt2.c0)))))OR(rt0.c2)) FULL OUTER JOIN vt2 ON 0.40481137615679363);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((((((t1.c40))>=((rt0.c0))))OR((rt0.c1 IN (vt2.c0)))))OR(rt0.c2)) FULL OUTER JOIN vt2 ON 0.40481137615679363 WHERE (CASE WHEN t1.c1 THEN '-1687212094' END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c1 THEN '-1687212094' END COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((((((t1.c40))>=((rt0.c0))))OR((rt0.c1 IN (vt2.c0)))))OR(rt0.c2)) FULL OUTER JOIN vt2 ON 0.40481137615679363);
SELECT * FROM rt0, vt2, vt0 WHERE ((((x'a3ce', vt2.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, 'bzeh_/큢3', vt2.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, vt2.c0, rt0.c0, vt2.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, vt2.c0, vt0.c0, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) AND ((NULL, (- (NULL)), (vt0.c0 IN (vt2.c0, vt2.c0)))))) ORDER BY CASE ((vt0.c0)IS NOT(rt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt2.c0)) THEN '2002853978' ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'a3ce', vt2.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, 'bzeh_/큢3', vt2.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, vt2.c0, rt0.c0, vt2.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, vt2.c0, vt0.c0, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) AND ((NULL, (- (NULL)), (vt0.c0 IN (vt2.c0, vt2.c0)))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY CASE ((vt0.c0)IS NOT(rt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt2.c0)) THEN '2002853978' ELSE '' END ASC);
SELECT * FROM rt0, vt2, vt0 WHERE ((((x'a3ce', vt2.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, 'bzeh_/큢3', vt2.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, vt2.c0, rt0.c0, vt2.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, vt2.c0, vt0.c0, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) AND ((NULL, (- (NULL)), (vt0.c0 IN (vt2.c0, vt2.c0)))))) ORDER BY CASE ((vt0.c0)IS NOT(rt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt2.c0)) THEN '2002853978' ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'a3ce', vt2.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, 'bzeh_/큢3', vt2.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, vt2.c0, rt0.c0, vt2.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, vt2.c0, vt0.c0, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) AND ((NULL, (- (NULL)), (vt0.c0 IN (vt2.c0, vt2.c0)))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY CASE ((vt0.c0)IS NOT(rt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt2.c0)) THEN '2002853978' ELSE '' END ASC);
SELECT * FROM rt0, vt2, vt0 WHERE ((((x'a3ce', vt2.c0, vt0.c0)) NOT BETWEEN (((((vt0.c0, vt0.c0, 'bzeh_/큢3', vt2.c0, rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0, vt2.c0, rt0.c0, vt2.c0, rt0.c0)) AND ((vt0.c0, rt0.c2, rt0.c0, vt2.c0, vt0.c0, rt0.c0, rt0.c2))), ((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END)) AND ((NULL, (- (NULL)), (vt0.c0 IN (vt2.c0, vt2.c0)))))) ORDER BY CASE ((vt0.c0)IS NOT(rt0.c2))  WHEN ((vt0.c0) NOT BETWEEN (NULL) AND (vt2.c0)) THEN '2002853978' ELSE '' END ASC;
SELECT ALL * FROM vt2, vt0, t1 WHERE (t1.c0) ORDER BY ((((((t1.c0)LIKE(t1.c1)))OR(CASE WHEN vt2.c0 THEN t1.c0 WHEN x'c84a' THEN vt2.c0 WHEN t1.c1 THEN t1.c0 END)))OR(CASE WHEN vt0.c0 THEN t1.c40 END)) DESC  NULLS FIRST, x'5a9b'  NULLS FIRST, (((NOT (t1.c40))) BETWEEN (((vt2.c0)<(t1.c1))) AND (t1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY ((((((t1.c0)LIKE(t1.c1)))OR(CASE WHEN vt2.c0 THEN t1.c0 WHEN x'c84a' THEN vt2.c0 WHEN t1.c1 THEN t1.c0 END)))OR(CASE WHEN vt0.c0 THEN t1.c40 END)) DESC  NULLS FIRST, x'5a9b'  NULLS FIRST, (((NOT (t1.c40))) BETWEEN (((vt2.c0)<(t1.c1))) AND (t1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, t1 WHERE (t1.c0) ORDER BY ((((((t1.c0)LIKE(t1.c1)))OR(CASE WHEN vt2.c0 THEN t1.c0 WHEN x'c84a' THEN vt2.c0 WHEN t1.c1 THEN t1.c0 END)))OR(CASE WHEN vt0.c0 THEN t1.c40 END)) DESC  NULLS FIRST, x'5a9b'  NULLS FIRST, (((NOT (t1.c40))) BETWEEN (((vt2.c0)<(t1.c1))) AND (t1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY ((((((t1.c0)LIKE(t1.c1)))OR(CASE WHEN vt2.c0 THEN t1.c0 WHEN x'c84a' THEN vt2.c0 WHEN t1.c1 THEN t1.c0 END)))OR(CASE WHEN vt0.c0 THEN t1.c40 END)) DESC  NULLS FIRST, x'5a9b'  NULLS FIRST, (((NOT (t1.c40))) BETWEEN (((vt2.c0)<(t1.c1))) AND (t1.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, t1 WHERE (t1.c0) ORDER BY ((((((t1.c0)LIKE(t1.c1)))OR(CASE WHEN vt2.c0 THEN t1.c0 WHEN x'c84a' THEN vt2.c0 WHEN t1.c1 THEN t1.c0 END)))OR(CASE WHEN vt0.c0 THEN t1.c40 END)) DESC  NULLS FIRST, x'5a9b'  NULLS FIRST, (((NOT (t1.c40))) BETWEEN (((vt2.c0)<(t1.c1))) AND (t1.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL * FROM vt0, vt2 CROSS JOIN t1 ON (((SQLITE_SOURCE_ID(), vt0.c0 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0))))=(((t1.c0 IN ()), ((((((((t1.c0)OR(t1.c40)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c40 THEN t1.c1 ELSE vt2.c0 END))) WHERE ((((t1.c1) ISNULL) IN (((t1.c40)<>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1) ISNULL) IN (((t1.c40)!=(t1.c1))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN t1 ON (((SQLITE_SOURCE_ID(), vt0.c0 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0))))=(((t1.c0 IN ()), ((((((((t1.c0)OR(t1.c40)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c40 THEN t1.c1 ELSE vt2.c0 END))));
SELECT ALL * FROM vt0, vt2 CROSS JOIN t1 ON (((SQLITE_SOURCE_ID(), vt0.c0 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0))))=(((t1.c0 IN ()), ((((((((t1.c0)OR(t1.c40)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c40 THEN t1.c1 ELSE vt2.c0 END))) WHERE ((((t1.c1) ISNULL) IN (((t1.c40)<>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1) ISNULL) IN (((t1.c40)!=(t1.c1))))) IS TRUE)  as count FROM vt0, vt2 CROSS JOIN t1 ON (((SQLITE_SOURCE_ID(), vt0.c0 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0))))=(((t1.c0 IN ()), ((((((((t1.c0)OR(t1.c40)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c40 THEN t1.c1 ELSE vt2.c0 END))));
SELECT ALL * FROM vt0, vt2 CROSS JOIN t1 ON (((SQLITE_SOURCE_ID(), vt0.c0 COLLATE RTRIM, ((t1.c1) BETWEEN (vt0.c0) AND (t1.c0))))=(((t1.c0 IN ()), ((((((((t1.c0)OR(t1.c40)))OR(t1.c0)))OR(t1.c0)))OR(t1.c1)), CASE WHEN t1.c40 THEN t1.c1 ELSE vt2.c0 END))) WHERE ((((t1.c1) ISNULL) IN (((t1.c40)<>(t1.c1)))));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 CROSS JOIN vt2 ON (NOT (0x7761205a)) WHERE (CAST(NULL AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, t1, vt0 CROSS JOIN vt2 ON (NOT (0X7761205a)) ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 CROSS JOIN vt2 ON (NOT (0x7761205a)) WHERE (CAST(NULL AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM rt0, t1, vt0 CROSS JOIN vt2 ON (NOT (0X7761205a)) ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 CROSS JOIN vt2 ON (NOT (0x7761205a)) WHERE (CAST(NULL AS INTEGER)) ORDER BY NULL;
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10, vt0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10, vt0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0);
SELECT ALL * FROM vt0, vt2, rt0 INNER JOIN t1 ON ((+ (x'')) IN ()) WHERE ((((t1.c0 IN ()))GLOB(CAST(t1.c40 AS NUMERIC)))) ORDER BY ((json_remove(t1.c1, t1.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))GLOB(CAST(t1.c40 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt2, rt0 INNER JOIN t1 ON ((+ (x'')) IN ()) ORDER BY ((json_remove(t1.c1, t1.c0)) IS FALSE) DESC);
SELECT ALL * FROM vt0, vt2, rt0 INNER JOIN t1 ON ((+ (x'')) IN ()) WHERE ((((t1.c0 IN ()))GLOB(CAST(t1.c40 AS NUMERIC)))) ORDER BY ((json_remove(t1.c1, t1.c0)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))GLOB(CAST(t1.c40 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt2, rt0 INNER JOIN t1 ON ((+ (x'')) IN ()) ORDER BY ((json_remove(t1.c1, t1.c0)) IS FALSE) DESC);
SELECT ALL * FROM vt0, vt2, rt0 INNER JOIN t1 ON ((+ (x'')) IN ()) WHERE ((((t1.c0 IN ()))GLOB(CAST(t1.c40 AS NUMERIC)))) ORDER BY ((json_remove(t1.c1, t1.c0)) IS FALSE) DESC;
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c2, rt0.c2) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((TRIM(DISTINCT rt0.c2, rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c0)OR(((vt2.c0) IS TRUE))))AND(CAST(0.2568935669346859 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)OR(((vt2.c0) IS TRUE))))AND(CAST(0.2568935669346859 AS TEXT)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c0)OR(((vt2.c0) IS TRUE))))AND(CAST(0.2568935669346859 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)OR(((vt2.c0) IS TRUE))))AND(CAST(0.2568935669346859 AS TEXT)))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((((vt2.c0)OR(((vt2.c0) IS TRUE))))AND(CAST(0.2568935669346859 AS TEXT))));
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE (CAST(((0X675d269b)OR(vt2.c0)) AS INTEGER)) ORDER BY (((((t1.c40))<((t1.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0X675d269b)OR(vt2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY (((((t1.c40))<((t1.c1)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE (CAST(((0X675d269b)OR(vt2.c0)) AS INTEGER)) ORDER BY (((((t1.c40))<((t1.c1)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0X675d269b)OR(vt2.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY (((((t1.c40))<((t1.c1)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE (CAST(((0X675d269b)OR(vt2.c0)) AS INTEGER)) ORDER BY (((((t1.c40))<((t1.c1)))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT * FROM vt0 INNER JOIN vt2 ON (- (((rt0.c1)+(vt2.c0)))) INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(TRIM('', rt0.c2))) WHERE (((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(CASE WHEN '' THEN vt0.c0 ELSE x'' END)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(CASE WHEN '' THEN vt0.c0 ELSE x'' END)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (- (((rt0.c1)+(vt2.c0)))) INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(TRIM('', rt0.c2))) ORDER BY (((vt2.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt2 ON (- (((rt0.c1)+(vt2.c0)))) INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(TRIM('', rt0.c2))) WHERE (((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(CASE WHEN '' THEN vt0.c0 ELSE x'' END)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(CASE WHEN '' THEN vt0.c0 ELSE x'' END)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (- (((rt0.c1)+(vt2.c0)))) INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(TRIM('', rt0.c2))) ORDER BY (((vt2.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt2 ON (- (((rt0.c1)+(vt2.c0)))) INNER JOIN rt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))OR(TRIM('', rt0.c2))) WHERE (((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END)AND(CASE WHEN '' THEN vt0.c0 ELSE x'' END)))AND(((rt0.c0) NOT NULL))))OR(CAST(rt0.c0 AS BLOB))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c40) AND (NULL))) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c1)AND(-2.133374969E9)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t1.c40) AND (NULL))) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c1)AND(-2.133374969E9)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL * FROM vt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c40) AND (NULL))) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c1)AND(-2.133374969E9)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t1.c40) AND (NULL))) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c1)AND(-2.133374969E9)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL * FROM vt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c40) AND (NULL))) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c1)AND(-2.133374969E9)))OR(vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (('-1883698805')>>(((rt0.c0)IS(t1.c1)))) WHERE (LOWER(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY t1.c40  NULLS FIRST, (rt0.c2 IN ((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t1.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (('-1883698805')>>(((rt0.c0)IS(t1.c1)))) ORDER BY t1.c40  NULLS FIRST, (rt0.c2 IN ((rt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (('-1883698805')>>(((rt0.c0)IS(t1.c1)))) WHERE (LOWER(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY t1.c40  NULLS FIRST, (rt0.c2 IN ((rt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t1.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (('-1883698805')>>(((rt0.c0)IS(t1.c1)))) ORDER BY t1.c40  NULLS FIRST, (rt0.c2 IN ((rt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (('-1883698805')>>(((rt0.c0)IS(t1.c1)))) WHERE (LOWER(DISTINCT t1.c1 COLLATE BINARY)) ORDER BY t1.c40  NULLS FIRST, (rt0.c2 IN ((rt0.c0 IN ())))  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (ABS(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)) IS TRUE)  as count FROM t1, vt2, rt0);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (ABS(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END)) IS TRUE)  as count FROM t1, vt2, rt0);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (ABS(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE t1.c0 END));
SELECT * FROM vt2, rt0, t1 WHERE (vt2.c0 COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c40 ELSE vt2.c0 END ELSE ((vt2.c0)>=(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((vt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c40 ELSE vt2.c0 END ELSE ((vt2.c0)>=(rt0.c1)) END);
SELECT * FROM vt2, rt0, t1 WHERE (vt2.c0 COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c40 ELSE vt2.c0 END ELSE ((vt2.c0)>=(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ((vt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c40 ELSE vt2.c0 END ELSE ((vt2.c0)>=(rt0.c1)) END);
SELECT * FROM vt2, rt0, t1 WHERE (vt2.c0 COLLATE RTRIM) ORDER BY CASE WHEN ((((rt0.c2)OR(rt0.c0)))OR(t1.c1)) THEN CASE WHEN rt0.c1 THEN t1.c40 ELSE vt2.c0 END ELSE ((vt2.c0)>=(rt0.c1)) END;
SELECT COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (json_array_length(((rt0.c0)||(t1.c40)))) ORDER BY ((((t1.c0)>(rt0.c2))) NOT BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0)||(t1.c40)))) IS TRUE)  as count FROM rt0, vt2, vt0, t1 ORDER BY ((((t1.c0)>(rt0.c2))) NOT BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (json_array_length(((rt0.c0)||(t1.c40)))) ORDER BY ((((t1.c0)>(rt0.c2))) NOT BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0)||(t1.c40)))) IS TRUE)  as count FROM rt0, vt2, vt0, t1 ORDER BY ((((t1.c0)>(rt0.c2))) NOT BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (json_array_length(((rt0.c0)||(t1.c40)))) ORDER BY ((((t1.c0)>(rt0.c2))) NOT BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c1))))) ASC;
SELECT COUNT(*) FROM vt2, vt0, t1, rt0 WHERE (((((((t1.c1)>=(vt0.c0)))OR(ABS(t1.c0))))OR(TRIM(DISTINCT '-57795405'))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)>=(vt0.c0)))OR(ABS(t1.c0))))OR(TRIM(DISTINCT '-57795405')))) IS TRUE)  as count FROM vt2, vt0, t1, rt0);
SELECT COUNT(*) FROM vt2, vt0, t1, rt0 WHERE (((((((t1.c1)>=(vt0.c0)))OR(ABS(t1.c0))))OR(TRIM(DISTINCT '-57795405'))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)>=(vt0.c0)))OR(ABS(t1.c0))))OR(TRIM(DISTINCT '-57795405')))) IS TRUE)  as count FROM vt2, vt0, t1, rt0);
SELECT COUNT(*) FROM vt2, vt0, t1, rt0 WHERE (((((((t1.c1)>=(vt0.c0)))OR(ABS(t1.c0))))OR(TRIM(DISTINCT '-57795405'))));
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE (((rt0.c2)OR(vt0.c0 COLLATE BINARY))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt2, t1 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE (((rt0.c2)OR(vt0.c0 COLLATE BINARY))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt2, t1 ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE (((rt0.c2)OR(vt0.c0 COLLATE BINARY))) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((x'392958f7' IN (((rt0.c2)OR(0.4992943284943382)))));
SELECT SUM(count) FROM (SELECT ALL (((x'392958f7' IN (((rt0.c2)OR(0.4992943284943382))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((x'392958f7' IN (((rt0.c2)OR(0.4992943284943382)))));
SELECT SUM(count) FROM (SELECT ALL (((x'392958f7' IN (((rt0.c2)OR(0.4992943284943382))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((x'392958f7' IN (((rt0.c2)OR(0.4992943284943382)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (NOT (CASE vt2.c0  WHEN vt2.c0 THEN 0.0783572190177505 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY (NOT (CASE vt2.c0  WHEN vt2.c0 THEN 0.0783572190177505 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (NOT (CASE vt2.c0  WHEN vt2.c0 THEN 0.0783572190177505 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY (NOT (CASE vt2.c0  WHEN vt2.c0 THEN 0.0783572190177505 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0) ORDER BY (NOT (CASE vt2.c0  WHEN vt2.c0 THEN 0.0783572190177505 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt2, t1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt2.c0))) COLLATE NOCASE) ORDER BY (((t1.c0, rt0.c2, rt0.c0))<=((t1.c1, t1.c40, rt0.c2))) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt2.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((t1.c0, rt0.c2, rt0.c0))<=((t1.c1, t1.c40, rt0.c2))) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM vt2, t1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt2.c0))) COLLATE NOCASE) ORDER BY (((t1.c0, rt0.c2, rt0.c0))<=((t1.c1, t1.c40, rt0.c2))) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt2.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((t1.c0, rt0.c2, rt0.c0))<=((t1.c1, t1.c40, rt0.c2))) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM vt2, t1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt2.c0))) COLLATE NOCASE) ORDER BY (((t1.c0, rt0.c2, rt0.c0))<=((t1.c1, t1.c40, rt0.c2))) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt2, vt0, t1 WHERE ((- ((NOT (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (t1.c1))))) IS TRUE)  as count FROM vt2, vt0, t1);
SELECT ALL COUNT(*) FROM vt2, vt0, t1 WHERE ((- ((NOT (t1.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (t1.c1))))) IS TRUE)  as count FROM vt2, vt0, t1);
SELECT ALL COUNT(*) FROM vt2, vt0, t1 WHERE ((- ((NOT (t1.c1)))));
SELECT ALL * FROM t1 WHERE (((((t1.c40 COLLATE BINARY)OR(CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)))OR(((0.03587065452028282) NOT BETWEEN (t1.c0) AND (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 COLLATE BINARY)OR(CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)))OR(((0.03587065452028282) NOT BETWEEN (t1.c0) AND (t1.c40))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c40 COLLATE BINARY)OR(CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)))OR(((0.03587065452028282) NOT BETWEEN (t1.c0) AND (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 COLLATE BINARY)OR(CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)))OR(((0.03587065452028282) NOT BETWEEN (t1.c0) AND (t1.c40))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c40 COLLATE BINARY)OR(CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)))OR(((0.03587065452028282) NOT BETWEEN (t1.c0) AND (t1.c40)))));
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)AND('435425131')))OR(t1.c0)))AND(((((t1.c40)OR(t1.c0)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1)AND('435425131')))OR(t1.c0)))AND(((((t1.c40)OR(t1.c0)))OR(t1.c1))))) IS TRUE)  as count FROM vt2, t1);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)AND('435425131')))OR(t1.c0)))AND(((((t1.c40)OR(t1.c0)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c1)AND('435425131')))OR(t1.c0)))AND(((((t1.c40)OR(t1.c0)))OR(t1.c1))))) IS TRUE)  as count FROM vt2, t1);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (((((((t1.c1)AND('435425131')))OR(t1.c0)))AND(((((t1.c40)OR(t1.c0)))OR(t1.c1)))));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)IS NOT(vt2.c0)))-(((NULL)%(vt0.c0))))) ORDER BY (((+ (vt0.c0)))<=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS NOT(vt2.c0)))-(((NULL)%(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((+ (vt0.c0)))<=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)IS NOT(vt2.c0)))-(((NULL)%(vt0.c0))))) ORDER BY (((+ (vt0.c0)))<=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS NOT(vt2.c0)))-(((NULL)%(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((+ (vt0.c0)))<=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)IS NOT(vt2.c0)))-(((NULL)%(vt0.c0))))) ORDER BY (((+ (vt0.c0)))<=(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt2 WHERE (IFNULL(CASE t1.c40  WHEN vt0.c0 THEN t1.c40 END, ((t1.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE t1.c40  WHEN vt0.c0 THEN t1.c40 END, ((t1.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0, vt2);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt2 WHERE (IFNULL(CASE t1.c40  WHEN vt0.c0 THEN t1.c40 END, ((t1.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE t1.c40  WHEN vt0.c0 THEN t1.c40 END, ((t1.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM rt0, t1, vt0, vt2);
SELECT ALL COUNT(*) FROM rt0, t1, vt0, vt2 WHERE (IFNULL(CASE t1.c40  WHEN vt0.c0 THEN t1.c40 END, ((t1.c0)LIKE(rt0.c0))));
SELECT COUNT(*) FROM t1, vt2 WHERE ((((vt2.c0 IN ()))&(x'f9199c89'))) ORDER BY ((((((NULL))=((vt2.c0)))))<=(((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN ()))&(x'f9199c89'))) IS TRUE)  as count FROM t1, vt2 ORDER BY ((((((NULL))==((vt2.c0)))))<=(((+ (t1.c0))))));
SELECT COUNT(*) FROM t1, vt2 WHERE ((((vt2.c0 IN ()))&(x'f9199c89'))) ORDER BY ((((((NULL))=((vt2.c0)))))<=(((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN ()))&(x'f9199c89'))) IS TRUE)  as count FROM t1, vt2 ORDER BY ((((((NULL))==((vt2.c0)))))<=(((+ (t1.c0))))));
SELECT COUNT(*) FROM t1, vt2 WHERE ((((vt2.c0 IN ()))&(x'f9199c89'))) ORDER BY ((((((NULL))=((vt2.c0)))))<=(((+ (t1.c0)))));
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)=(vt2.c0))) BETWEEN (((vt2.c0)>>(vt2.c0))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (CASE WHEN vt2.c0 THEN vt2.c0 END IN ((vt2.c0 IN (0.037616443001824096)), CAST(vt2.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)=(vt2.c0))) BETWEEN (((vt2.c0)>>(vt2.c0))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY (CASE WHEN vt2.c0 THEN vt2.c0 END IN ((vt2.c0 IN (0.037616443001824096)), CAST(vt2.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)=(vt2.c0))) BETWEEN (((vt2.c0)>>(vt2.c0))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (CASE WHEN vt2.c0 THEN vt2.c0 END IN ((vt2.c0 IN (0.037616443001824096)), CAST(vt2.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)=(vt2.c0))) BETWEEN (((vt2.c0)>>(vt2.c0))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY (CASE WHEN vt2.c0 THEN vt2.c0 END IN ((vt2.c0 IN (0.037616443001824096)), CAST(vt2.c0 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)=(vt2.c0))) BETWEEN (((vt2.c0)>>(vt2.c0))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (CASE WHEN vt2.c0 THEN vt2.c0 END IN ((vt2.c0 IN (0.037616443001824096)), CAST(vt2.c0 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM vt2, t1, vt0 WHERE (((((vt2.c0) NOTNULL))>=(t1.c0))) ORDER BY (~ (((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOTNULL))>=(t1.c0))) IS TRUE)  as count FROM vt2, t1 NOT INDEXED, vt0 ORDER BY (~ (((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)))) DESC);
SELECT COUNT(*) FROM vt2, t1, vt0 WHERE (((((vt2.c0) NOTNULL))>=(t1.c0))) ORDER BY (~ (((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOTNULL))>=(t1.c0))) IS TRUE)  as count FROM vt2, t1 NOT INDEXED, vt0 ORDER BY (~ (((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)))) DESC);
SELECT COUNT(*) FROM vt2, t1, vt0 WHERE (((((vt2.c0) NOTNULL))>=(t1.c0))) ORDER BY (~ (((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)))) DESC;
SELECT * FROM rt0 WHERE (((rt0.c2)>(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)>(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)>(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt2, t1, rt0 WHERE ((((t1.c40 IN (t1.c0, vt0.c0))) ISNULL)) ORDER BY t1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40 IN (t1.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt2, t1, rt0 ORDER BY t1.c1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1, rt0 WHERE ((((t1.c40 IN (t1.c0, vt0.c0))) ISNULL)) ORDER BY t1.c1;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40 IN (t1.c0, vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt2, t1, rt0 ORDER BY t1.c1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1, rt0 WHERE ((((t1.c40 IN (t1.c0, vt0.c0))) ISNULL)) ORDER BY t1.c1;
SELECT * FROM vt0, t1 WHERE (CHAR(((((t1.c40)AND(vt0.c0)))AND(t1.c0)))) ORDER BY t1.c0  NULLS FIRST, t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((t1.c40)AND(vt0.c0)))AND(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c0  NULLS FIRST, t1.c0 ASC);
SELECT * FROM vt0, t1 WHERE (CHAR(((((t1.c40)AND(vt0.c0)))AND(t1.c0)))) ORDER BY t1.c0  NULLS FIRST, t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((((t1.c40)AND(vt0.c0)))AND(t1.c0)))) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c0  NULLS FIRST, t1.c0 ASC);
SELECT * FROM vt0, t1 WHERE (CHAR(((((t1.c40)AND(vt0.c0)))AND(t1.c0)))) ORDER BY t1.c0  NULLS FIRST, t1.c0 ASC;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c0)>=(t1.c40)) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t1.c1 AS BLOB) THEN (+ (vt0.c0)) ELSE LOWER(rt0.c0) END  NULLS LAST, TRIM(DISTINCT rt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)>=(t1.c40)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CASE WHEN CAST(t1.c1 AS BLOB) THEN (+ (vt0.c0)) ELSE LOWER(rt0.c0) END  NULLS LAST, TRIM(DISTINCT rt0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c0)>=(t1.c40)) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t1.c1 AS BLOB) THEN (+ (vt0.c0)) ELSE LOWER(rt0.c0) END  NULLS LAST, TRIM(DISTINCT rt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)>=(t1.c40)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY CASE WHEN CAST(t1.c1 AS BLOB) THEN (+ (vt0.c0)) ELSE LOWER(rt0.c0) END  NULLS LAST, TRIM(DISTINCT rt0.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 WHERE (((t1.c0)>=(t1.c40)) COLLATE NOCASE) ORDER BY CASE WHEN CAST(t1.c1 AS BLOB) THEN (+ (vt0.c0)) ELSE LOWER(rt0.c0) END  NULLS LAST, TRIM(DISTINCT rt0.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT * FROM rt0, vt2, t1 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.7837859861063387 AS NUMERIC) COLLATE RTRIM) ORDER BY ((json_array_length(rt0.c1))||(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.7837859861063387 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((json_array_length(rt0.c1))||(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.7837859861063387 AS NUMERIC) COLLATE RTRIM) ORDER BY ((json_array_length(rt0.c1))||(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.7837859861063387 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((json_array_length(rt0.c1))||(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.7837859861063387 AS NUMERIC) COLLATE RTRIM) ORDER BY ((json_array_length(rt0.c1))||(CASE WHEN rt0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0)*(NULL))) BETWEEN (((vt0.c0)||(vt2.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) WHERE (CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0)*(NULL))) BETWEEN (((vt0.c0)||(vt2.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0)*(NULL))) BETWEEN (((vt0.c0)||(vt2.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) WHERE (CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0)*(NULL))) BETWEEN (((vt0.c0)||(vt2.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt2 ON ((((vt2.c0)*(NULL))) BETWEEN (((vt0.c0)||(vt2.c0))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) WHERE (CAST(((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN ((vt2.c0 IN ())) AND (((t1.c1) BETWEEN (vt2.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) NOT BETWEEN ((vt2.c0 IN ())) AND (((t1.c1) BETWEEN (vt2.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN ((vt2.c0 IN ())) AND (((t1.c1) BETWEEN (vt2.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL)) NOT BETWEEN ((vt2.c0 IN ())) AND (((t1.c1) BETWEEN (vt2.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN ((vt2.c0 IN ())) AND (((t1.c1) BETWEEN (vt2.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c2))<=((rt0.c2)))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c2))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c2))<=((rt0.c2)))))) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c2))<=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c2))<=((rt0.c2)))))) ORDER BY rt0.c1 ASC;
SELECT * FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL)) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) ISNULL));
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CASE (NOT (vt2.c0))  WHEN (((t1.c0, t1.c0, vt0.c0))>((vt0.c0, 1.649999322E9, vt2.c0))) THEN GLOB(t1.c1, t1.c40) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt2.c0))  WHEN (((t1.c0, t1.c0, vt0.c0))>((vt0.c0, 1.649999322E9, vt2.c0))) THEN GLOB(t1.c1, t1.c40) END) IS TRUE)  as count FROM vt2, vt0, t1);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CASE (NOT (vt2.c0))  WHEN (((t1.c0, t1.c0, vt0.c0))>((vt0.c0, 1.649999322E9, vt2.c0))) THEN GLOB(t1.c1, t1.c40) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt2.c0))  WHEN (((t1.c0, t1.c0, vt0.c0))>((vt0.c0, 1.649999322E9, vt2.c0))) THEN GLOB(t1.c1, t1.c40) END) IS TRUE)  as count FROM vt2, vt0, t1);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CASE (NOT (vt2.c0))  WHEN (((t1.c0, t1.c0, vt0.c0))>((vt0.c0, 1.649999322E9, vt2.c0))) THEN GLOB(t1.c1, t1.c40) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ('\u') AND (x'9b97')) DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((0.17317153677011676)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ('\u') AND (x'9b97')) DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((0.17317153677011676)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ('\u') AND (x'9b97')) DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((0.17317153677011676)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ('\u') AND (x'9b97')) DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((0.17317153677011676)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN ('\u') AND (x'9b97')) DESC, ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((0.17317153677011676)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL END))  NULLS FIRST;
SELECT COUNT(*) FROM vt2, t1 WHERE ((((vt2.c0)) BETWEEN (('0.7837859861063387')) AND ((t1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (('0.7837859861063387')) AND ((t1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE ((((vt2.c0)) BETWEEN (('0.7837859861063387')) AND ((t1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (('0.7837859861063387')) AND ((t1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE ((((vt2.c0)) BETWEEN (('0.7837859861063387')) AND ((t1.c0))) COLLATE BINARY);
SELECT * FROM t1, vt0 FULL OUTER JOIN vt2 ON ((t1.c0 IN (t1.c1)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN vt2 ON ((t1.c0 IN (t1.c1)) IN ()));
SELECT * FROM t1, vt0 FULL OUTER JOIN vt2 ON ((t1.c0 IN (t1.c1)) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN vt2 ON ((t1.c0 IN (t1.c1)) IN ()));
SELECT * FROM t1, vt0 FULL OUTER JOIN vt2 ON ((t1.c0 IN (t1.c1)) IN ()) WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0, t1 CROSS JOIN vt2 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE ((((((~ (x'2c794b9b')))OR(((((rt0.c0)AND('I귔')))AND(rt0.c2)))))AND(((t1.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (x'2c794b9b')))OR(((((rt0.c0)AND('I귔')))AND(rt0.c2)))))AND(((t1.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 CROSS JOIN vt2 ON CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t1 CROSS JOIN vt2 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE ((((((~ (x'2c794b9b')))OR(((((rt0.c0)AND('I귔')))AND(rt0.c2)))))AND(((t1.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((~ (x'2c794b9b')))OR(((((rt0.c0)AND('I귔')))AND(rt0.c2)))))AND(((t1.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t1 CROSS JOIN vt2 ON CAST((rt0.c1 IN ()) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0, t1 CROSS JOIN vt2 ON CAST((rt0.c1 IN ()) AS NUMERIC) WHERE ((((((~ (x'2c794b9b')))OR(((((rt0.c0)AND('I귔')))AND(rt0.c2)))))AND(((t1.c0)OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ('-2100348354') AND (LIKELY(DISTINCT rt0.c0))) WHERE (HEX('G<'));
SELECT SUM(count) FROM (SELECT ((HEX('G<')) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ('-2100348354') AND (LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ('-2100348354') AND (LIKELY(DISTINCT rt0.c0))) WHERE (HEX('G<'));
SELECT SUM(count) FROM (SELECT ((HEX('G<')) IS TRUE)  as count FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ('-2100348354') AND (LIKELY(DISTINCT rt0.c0))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ('-2100348354') AND (LIKELY(DISTINCT rt0.c0))) WHERE (HEX('G<'));
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) IS FALSE))>=(((x'')+(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) IS FALSE))>=(((x'')+(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) IS FALSE))>=(((x'')+(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) IS FALSE))>=(((x'')+(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) IS FALSE))>=(((x'')+(vt2.c0)))));
SELECT ALL * FROM rt0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t1.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (((t1.c0) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS TRUE));
SELECT * FROM vt2 WHERE ((((((((((NOT (vt2.c0)))OR(NULLIF(DISTINCT vt2.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))OR(((vt2.c0)LIKE(vt2.c0)))))OR(vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt2.c0)))OR(NULLIF(DISTINCT vt2.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))OR(((vt2.c0)LIKE(vt2.c0)))))OR(vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((((((((NOT (vt2.c0)))OR(NULLIF(DISTINCT vt2.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))OR(((vt2.c0)LIKE(vt2.c0)))))OR(vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt2.c0)))OR(NULLIF(DISTINCT vt2.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))OR(((vt2.c0)LIKE(vt2.c0)))))OR(vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((((((((NOT (vt2.c0)))OR(NULLIF(DISTINCT vt2.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))OR(((vt2.c0)LIKE(vt2.c0)))))OR(vt2.c0)));
SELECT COUNT(*) FROM vt0, vt2 INDEXED BY i10 WHERE (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ORDER BY ((x'abe6') BETWEEN ('') AND (vt2.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt2 INDEXED BY i10 ORDER BY ((x'abe6') BETWEEN ('') AND (vt2.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2 INDEXED BY i10 WHERE (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) ORDER BY ((x'abe6') BETWEEN ('') AND (vt2.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, vt2 INDEXED BY i10 ORDER BY ((x'abe6') BETWEEN ('') AND (vt2.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((+ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t1.c0)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((+ (t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (t1.c0)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((+ (t1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt2 INNER JOIN t1 ON RTRIM(((t1.c0) IS FALSE)) WHERE (CAST(((t1.c1) NOT NULL) AS BLOB)) ORDER BY TRIM((t1.c1 IN ()), (((vt2.c0, t1.c0, t1.c0))<=((t1.c0, t1.c1, vt2.c0)))) ASC  NULLS FIRST, ((t1.c1)<=((('-273282168')||(t1.c0))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, t1.c40 COLLATE NOCASE, ((t1.c1) ISNULL))) AND ((((vt2.c0)<=(t1.c1)), (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c40))), (('-2086122315') NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt2 INNER JOIN t1 ON RTRIM(((t1.c0) IS FALSE)) ORDER BY TRIM((t1.c1 IN ()), (((vt2.c0, t1.c0, t1.c0))<=((t1.c0, t1.c1, vt2.c0)))) ASC  NULLS FIRST, ((t1.c1)<=((('-273282168')||(t1.c0))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, t1.c40 COLLATE NOCASE, ((t1.c1) ISNULL))) AND ((((vt2.c0)<=(t1.c1)), (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c40))), (('-2086122315') NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM vt2 INNER JOIN t1 ON RTRIM(((t1.c0) IS FALSE)) WHERE (CAST(((t1.c1) NOT NULL) AS BLOB)) ORDER BY TRIM((t1.c1 IN ()), (((vt2.c0, t1.c0, t1.c0))<=((t1.c0, t1.c1, vt2.c0)))) ASC  NULLS FIRST, ((t1.c1)<=((('-273282168')||(t1.c0))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, t1.c40 COLLATE NOCASE, ((t1.c1) ISNULL))) AND ((((vt2.c0)<=(t1.c1)), (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c40))), (('-2086122315') NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt2 INNER JOIN t1 ON RTRIM(((t1.c0) IS FALSE)) ORDER BY TRIM((t1.c1 IN ()), (((vt2.c0, t1.c0, t1.c0))<=((t1.c0, t1.c1, vt2.c0)))) ASC  NULLS FIRST, ((t1.c1)<=((('-273282168')||(t1.c0))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, t1.c40 COLLATE NOCASE, ((t1.c1) ISNULL))) AND ((((vt2.c0)<=(t1.c1)), (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c40))), (('-2086122315') NOT NULL)))) ASC);
SELECT ALL COUNT(*) FROM vt2 INNER JOIN t1 ON RTRIM(((t1.c0) IS FALSE)) WHERE (CAST(((t1.c1) NOT NULL) AS BLOB)) ORDER BY TRIM((t1.c1 IN ()), (((vt2.c0, t1.c0, t1.c0))<=((t1.c0, t1.c1, vt2.c0)))) ASC  NULLS FIRST, ((t1.c1)<=((('-273282168')||(t1.c0))))  NULLS FIRST, (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN ((t1.c1 COLLATE RTRIM, t1.c40 COLLATE NOCASE, ((t1.c1) ISNULL))) AND ((((vt2.c0)<=(t1.c1)), (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c40))), (('-2086122315') NOT NULL)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) DESC, (((((~ (rt0.c2)))AND(x'')))AND((+ (0.2396972208867526))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) DESC, (((((~ (rt0.c2)))AND(x'')))AND((+ (0.2396972208867526)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) DESC, (((((~ (rt0.c2)))AND(x'')))AND((+ (0.2396972208867526))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) DESC, (((((~ (rt0.c2)))AND(x'')))AND((+ (0.2396972208867526)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) ORDER BY CAST(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) AS NUMERIC) DESC, (((((~ (rt0.c2)))AND(x'')))AND((+ (0.2396972208867526))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (CAST(((t1.c0) NOTNULL) AS NUMERIC)) ORDER BY ((t1.c0)OR(t1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY ((t1.c0)OR(t1.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (CAST(((t1.c0) NOTNULL) AS NUMERIC)) ORDER BY ((t1.c0)OR(t1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY ((t1.c0)OR(t1.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt0 WHERE (CAST(((t1.c0) NOTNULL) AS NUMERIC)) ORDER BY ((t1.c0)OR(t1.c0)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((vt2.c0, rt0.c0, vt0.c0))!=((rt0.c2, rt0.c1, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, rt0.c0, vt0.c0))<>((rt0.c2, rt0.c1, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((vt2.c0, rt0.c0, vt0.c0))!=((rt0.c2, rt0.c1, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0, rt0.c0, vt0.c0))<>((rt0.c2, rt0.c1, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE ((((((vt2.c0, rt0.c0, vt0.c0))!=((rt0.c2, rt0.c1, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((~ (rt0.c0)))));
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON CAST(t1.c40 AS INTEGER) COLLATE RTRIM WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((vt2.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((vt2.c0)))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON CAST(t1.c40 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON CAST(t1.c40 AS INTEGER) COLLATE RTRIM WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((vt2.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((vt2.c0)))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON CAST(t1.c40 AS INTEGER) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON CAST(t1.c40 AS INTEGER) COLLATE RTRIM WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((vt2.c0)))) NOTNULL));
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((x'' COLLATE RTRIM) BETWEEN (t1.c1) AND (((t1.c1)%(rt0.c0))))) ORDER BY ((CAST(t1.c1 AS BLOB)) BETWEEN (CASE x''  WHEN rt0.c1 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) DESC, ((CAST(vt2.c0 AS INTEGER)) BETWEEN (((rt0.c0) BETWEEN (vt2.c0) AND (t1.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM) BETWEEN (t1.c1) AND (((t1.c1)%(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 ORDER BY ((CAST(t1.c1 AS BLOB)) BETWEEN (CASE x''  WHEN rt0.c1 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) DESC, ((CAST(vt2.c0 AS INTEGER)) BETWEEN (((rt0.c0) BETWEEN (vt2.c0) AND (t1.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((x'' COLLATE RTRIM) BETWEEN (t1.c1) AND (((t1.c1)%(rt0.c0))))) ORDER BY ((CAST(t1.c1 AS BLOB)) BETWEEN (CASE x''  WHEN rt0.c1 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) DESC, ((CAST(vt2.c0 AS INTEGER)) BETWEEN (((rt0.c0) BETWEEN (vt2.c0) AND (t1.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE RTRIM) BETWEEN (t1.c1) AND (((t1.c1)%(rt0.c0))))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 ORDER BY ((CAST(t1.c1 AS BLOB)) BETWEEN (CASE x''  WHEN rt0.c1 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) DESC, ((CAST(vt2.c0 AS INTEGER)) BETWEEN (((rt0.c0) BETWEEN (vt2.c0) AND (t1.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((x'' COLLATE RTRIM) BETWEEN (t1.c1) AND (((t1.c1)%(rt0.c0))))) ORDER BY ((CAST(t1.c1 AS BLOB)) BETWEEN (CASE x''  WHEN rt0.c1 THEN rt0.c0 END) AND ((rt0.c2 IN ()))) DESC, ((CAST(vt2.c0 AS INTEGER)) BETWEEN (((rt0.c0) BETWEEN (vt2.c0) AND (t1.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST, CAST('883667140' AS INTEGER);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST, CAST('883667140' AS INTEGER));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST, CAST('883667140' AS INTEGER);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST, CAST('883667140' AS INTEGER));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE BINARY  NULLS FIRST, CAST('883667140' AS INTEGER);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE ((CASE t1.c1  WHEN t1.c1 THEN t1.c0 ELSE rt0.c0 END IN ()));
SELECT * FROM vt2 WHERE ((vt2.c0 IN (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 IN (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((vt2.c0 IN (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 IN (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((vt2.c0 IN (NULL)) COLLATE RTRIM);
SELECT * FROM t1, vt2 WHERE ('') ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND ('-1459114540'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, vt2 ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND ('-1459114540'))))  NULLS FIRST);
SELECT * FROM t1, vt2 WHERE ('') ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND ('-1459114540'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t1, vt2 ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND ('-1459114540'))))  NULLS FIRST);
SELECT * FROM t1, vt2 WHERE ('') ORDER BY (+ (((t1.c0) BETWEEN (t1.c0) AND ('-1459114540'))))  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) END);
SELECT * FROM vt0 CROSS JOIN t1 ON (((vt0.c0, t1.c1, 0x6258fdda)) NOT BETWEEN ((((0.8305152861011591) IS FALSE), CASE vt2.c0  WHEN NULL THEN vt2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt2.c0 ELSE t1.c1 END, ((((t1.c40)OR(x'')))AND(vt2.c0)))) AND ((((vt0.c0) IS TRUE), vt2.c0 COLLATE BINARY, (((0.32076713812142144, t1.c1, t1.c0)) NOT BETWEEN ((t1.c40, t1.c40, x'2ee7')) AND ((vt0.c0, vt2.c0, vt2.c0)))))) INNER JOIN vt2 ON (((vt2.c0, ((t1.c40) ISNULL), (+ (t1.c1)), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), CAST(t1.c0 AS BLOB)))==((vt2.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(vt2.c0)))AND(t1.c1)), ((vt0.c0) NOT NULL), (vt2.c0 IN ()), CASE WHEN t1.c40 THEN t1.c40 END))) WHERE (t1.c40) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c40) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((vt0.c0, t1.c1, 0x6258fdda)) NOT BETWEEN ((((0.8305152861011591) IS FALSE), CASE vt2.c0  WHEN NULL THEN vt2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt2.c0 ELSE t1.c1 END, ((((t1.c40)OR(x'')))AND(vt2.c0)))) AND ((((vt0.c0) IS TRUE), vt2.c0 COLLATE BINARY, (((0.32076713812142144, t1.c1, t1.c0)) NOT BETWEEN ((t1.c40, t1.c40, x'2ee7')) AND ((vt0.c0, vt2.c0, vt2.c0)))))) INNER JOIN vt2 ON (((vt2.c0, ((t1.c40) ISNULL), (+ (t1.c1)), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), CAST(t1.c0 AS BLOB)))=((vt2.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(vt2.c0)))AND(t1.c1)), ((vt0.c0) NOT NULL), (vt2.c0 IN ()), CASE WHEN t1.c40 THEN t1.c40 END))) ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((vt0.c0, t1.c1, 0x6258fdda)) NOT BETWEEN ((((0.8305152861011591) IS FALSE), CASE vt2.c0  WHEN NULL THEN vt2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt2.c0 ELSE t1.c1 END, ((((t1.c40)OR(x'')))AND(vt2.c0)))) AND ((((vt0.c0) IS TRUE), vt2.c0 COLLATE BINARY, (((0.32076713812142144, t1.c1, t1.c0)) NOT BETWEEN ((t1.c40, t1.c40, x'2ee7')) AND ((vt0.c0, vt2.c0, vt2.c0)))))) INNER JOIN vt2 ON (((vt2.c0, ((t1.c40) ISNULL), (+ (t1.c1)), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), CAST(t1.c0 AS BLOB)))==((vt2.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(vt2.c0)))AND(t1.c1)), ((vt0.c0) NOT NULL), (vt2.c0 IN ()), CASE WHEN t1.c40 THEN t1.c40 END))) WHERE (t1.c40) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c40) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((vt0.c0, t1.c1, 0x6258fdda)) NOT BETWEEN ((((0.8305152861011591) IS FALSE), CASE vt2.c0  WHEN NULL THEN vt2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt2.c0 ELSE t1.c1 END, ((((t1.c40)OR(x'')))AND(vt2.c0)))) AND ((((vt0.c0) IS TRUE), vt2.c0 COLLATE BINARY, (((0.32076713812142144, t1.c1, t1.c0)) NOT BETWEEN ((t1.c40, t1.c40, x'2ee7')) AND ((vt0.c0, vt2.c0, vt2.c0)))))) INNER JOIN vt2 ON (((vt2.c0, ((t1.c40) ISNULL), (+ (t1.c1)), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), CAST(t1.c0 AS BLOB)))=((vt2.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(vt2.c0)))AND(t1.c1)), ((vt0.c0) NOT NULL), (vt2.c0 IN ()), CASE WHEN t1.c40 THEN t1.c40 END))) ORDER BY t1.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((vt0.c0, t1.c1, 0x6258fdda)) NOT BETWEEN ((((0.8305152861011591) IS FALSE), CASE vt2.c0  WHEN NULL THEN vt2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt2.c0 ELSE t1.c1 END, ((((t1.c40)OR(x'')))AND(vt2.c0)))) AND ((((vt0.c0) IS TRUE), vt2.c0 COLLATE BINARY, (((0.32076713812142144, t1.c1, t1.c0)) NOT BETWEEN ((t1.c40, t1.c40, x'2ee7')) AND ((vt0.c0, vt2.c0, vt2.c0)))))) INNER JOIN vt2 ON (((vt2.c0, ((t1.c40) ISNULL), (+ (t1.c1)), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c1))), CAST(t1.c0 AS BLOB)))==((vt2.c0 COLLATE RTRIM, ((((((((t1.c1)AND(t1.c1)))AND(t1.c0)))OR(vt2.c0)))AND(t1.c1)), ((vt0.c0) NOT NULL), (vt2.c0 IN ()), CASE WHEN t1.c40 THEN t1.c40 END))) WHERE (t1.c40) ORDER BY t1.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (CAST(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (~ (vt0.c0 COLLATE RTRIM)) ORDER BY vt2.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (CAST(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON (~ (vt0.c0 COLLATE RTRIM)) ORDER BY vt2.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (CAST(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ORDER BY vt2.c0  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 END COLLATE RTRIM) ORDER BY ((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE DESC);
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 END COLLATE RTRIM) ORDER BY ((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE DESC);
SELECT * FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c1 END COLLATE RTRIM) ORDER BY ((((t1.c1)AND(t1.c0)))AND(t1.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT (rt0.c2)));
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 FULL OUTER JOIN t1 ON (((((rt0.c2)<(t1.c40)), ((vt0.c0)&(rt0.c0)), (((vt2.c0))<>((t1.c40)))))!=(((~ (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c2 END))) WHERE (CAST((('')-(rt0.c2)) AS REAL)) ORDER BY COALESCE(DISTINCT (- (rt0.c1)), CASE x''  WHEN vt2.c0 THEN rt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((('')-(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, vt2, rt0 FULL OUTER JOIN t1 ON (((((rt0.c2)<(t1.c40)), ((vt0.c0)&(rt0.c0)), (((vt2.c0))!=((t1.c40)))))<>(((~ (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY COALESCE(DISTINCT (- (rt0.c1)), CASE x''  WHEN vt2.c0 THEN rt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 FULL OUTER JOIN t1 ON (((((rt0.c2)<(t1.c40)), ((vt0.c0)&(rt0.c0)), (((vt2.c0))<>((t1.c40)))))!=(((~ (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c2 END))) WHERE (CAST((('')-(rt0.c2)) AS REAL)) ORDER BY COALESCE(DISTINCT (- (rt0.c1)), CASE x''  WHEN vt2.c0 THEN rt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((('')-(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0, vt2, rt0 FULL OUTER JOIN t1 ON (((((rt0.c2)<(t1.c40)), ((vt0.c0)&(rt0.c0)), (((vt2.c0))!=((t1.c40)))))<>(((~ (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c2 END))) ORDER BY COALESCE(DISTINCT (- (rt0.c1)), CASE x''  WHEN vt2.c0 THEN rt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 FULL OUTER JOIN t1 ON (((((rt0.c2)<(t1.c40)), ((vt0.c0)&(rt0.c0)), (((vt2.c0))<>((t1.c40)))))!=(((~ (rt0.c1)), ((rt0.c1)=(rt0.c2)), CASE WHEN vt0.c0 THEN rt0.c2 END))) WHERE (CAST((('')-(rt0.c2)) AS REAL)) ORDER BY COALESCE(DISTINCT (- (rt0.c1)), CASE x''  WHEN vt2.c0 THEN rt0.c1 END) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<=(vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL);
SELECT ALL * FROM t1, vt2 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER)) ORDER BY (((((t1.c40))<=((t1.c1)))) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (((vt2.c0)GLOB(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t1, vt2 ORDER BY (((((t1.c40))<=((t1.c1)))) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (((vt2.c0)GLOB(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt2 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER)) ORDER BY (((((t1.c40))<=((t1.c1)))) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (((vt2.c0)GLOB(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t1, vt2 ORDER BY (((((t1.c40))<=((t1.c1)))) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (((vt2.c0)GLOB(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt2 WHERE (CAST(((t1.c0) IS TRUE) AS INTEGER)) ORDER BY (((((t1.c40))<=((t1.c1)))) BETWEEN (CAST(vt2.c0 AS BLOB)) AND (((vt2.c0)GLOB(t1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt2 RIGHT OUTER JOIN rt0 ON CAST((((t1.c0, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c40)) AND ((vt0.c0, rt0.c2, rt0.c1))) AS TEXT) WHERE ((((((t1.c40, vt0.c0, x'', t1.c0, t1.c1))>((rt0.c2, x'0461', t1.c40, x'', x'')))) NOTNULL)) ORDER BY (((((((((NOT (rt0.c1)))AND(vt2.c0 COLLATE RTRIM)))AND(CAST(vt2.c0 AS NUMERIC))))OR(CAST(vt2.c0 AS INTEGER))))AND(((t1.c40) NOT BETWEEN (']') AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c40, vt0.c0, x'', t1.c0, t1.c1))>((rt0.c2, x'0461', t1.c40, x'', x'')))) NOTNULL)) IS TRUE)  as count FROM vt0, t1, vt2 RIGHT OUTER JOIN rt0 ON CAST((((t1.c0, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c40)) AND ((vt0.c0, rt0.c2, rt0.c1))) AS TEXT) ORDER BY (((((((((NOT (rt0.c1)))AND(vt2.c0 COLLATE RTRIM)))AND(CAST(vt2.c0 AS NUMERIC))))OR(CAST(vt2.c0 AS INTEGER))))AND(((t1.c40) NOT BETWEEN (']') AND (t1.c0)))) ASC);
SELECT COUNT(*) FROM vt0, t1, vt2 RIGHT OUTER JOIN rt0 ON CAST((((t1.c0, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c40)) AND ((vt0.c0, rt0.c2, rt0.c1))) AS TEXT) WHERE ((((((t1.c40, vt0.c0, x'', t1.c0, t1.c1))>((rt0.c2, x'0461', t1.c40, x'', x'')))) NOTNULL)) ORDER BY (((((((((NOT (rt0.c1)))AND(vt2.c0 COLLATE RTRIM)))AND(CAST(vt2.c0 AS NUMERIC))))OR(CAST(vt2.c0 AS INTEGER))))AND(((t1.c40) NOT BETWEEN (']') AND (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c40, vt0.c0, x'', t1.c0, t1.c1))>((rt0.c2, x'0461', t1.c40, x'', x'')))) NOTNULL)) IS TRUE)  as count FROM vt0, t1, vt2 RIGHT OUTER JOIN rt0 ON CAST((((t1.c0, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c40)) AND ((vt0.c0, rt0.c2, rt0.c1))) AS TEXT) ORDER BY (((((((((NOT (rt0.c1)))AND(vt2.c0 COLLATE RTRIM)))AND(CAST(vt2.c0 AS NUMERIC))))OR(CAST(vt2.c0 AS INTEGER))))AND(((t1.c40) NOT BETWEEN (']') AND (t1.c0)))) ASC);
SELECT COUNT(*) FROM vt0, t1, vt2 RIGHT OUTER JOIN rt0 ON CAST((((t1.c0, rt0.c0, t1.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, t1.c40)) AND ((vt0.c0, rt0.c2, rt0.c1))) AS TEXT) WHERE ((((((t1.c40, vt0.c0, x'', t1.c0, t1.c1))>((rt0.c2, x'0461', t1.c40, x'', x'')))) NOTNULL)) ORDER BY (((((((((NOT (rt0.c1)))AND(vt2.c0 COLLATE RTRIM)))AND(CAST(vt2.c0 AS NUMERIC))))OR(CAST(vt2.c0 AS INTEGER))))AND(((t1.c40) NOT BETWEEN (']') AND (t1.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (CASE CASE t1.c1  WHEN t1.c40 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c40 ELSE t1.c40 END  WHEN TRIM(t1.c40, t1.c0) THEN t1.c0 COLLATE RTRIM END) ORDER BY ((t1.c40)GLOB((t1.c40 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c1  WHEN t1.c40 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c40 ELSE t1.c40 END  WHEN TRIM(t1.c40, t1.c0) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c40)GLOB((t1.c40 IN ()))));
SELECT COUNT(*) FROM t1 WHERE (CASE CASE t1.c1  WHEN t1.c40 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c40 ELSE t1.c40 END  WHEN TRIM(t1.c40, t1.c0) THEN t1.c0 COLLATE RTRIM END) ORDER BY ((t1.c40)GLOB((t1.c40 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c1  WHEN t1.c40 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c40 ELSE t1.c40 END  WHEN TRIM(t1.c40, t1.c0) THEN t1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c40)GLOB((t1.c40 IN ()))));
SELECT COUNT(*) FROM t1 WHERE (CASE CASE t1.c1  WHEN t1.c40 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c40 THEN t1.c40 ELSE t1.c40 END  WHEN TRIM(t1.c40, t1.c0) THEN t1.c0 COLLATE RTRIM END) ORDER BY ((t1.c40)GLOB((t1.c40 IN ())));
SELECT * FROM vt2, rt0 INNER JOIN t1 ON (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) THEN (t1.c0 IN ()) WHEN CASE t1.c40  WHEN t1.c40 THEN vt0.c0 ELSE t1.c40 END THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN rt0.c1 THEN t1.c40 END WHERE (((((rt0.c2)GLOB(vt2.c0)))<<(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((rt0.c2 IN (t1.c40)))+(('441751227' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(vt2.c0)))<<(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt2, rt0 INNER JOIN t1 ON (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) THEN (t1.c0 IN ()) WHEN CASE t1.c40  WHEN t1.c40 THEN vt0.c0 ELSE t1.c40 END THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN rt0.c1 THEN t1.c40 END ORDER BY (((rt0.c2 IN (t1.c40)))+(('441751227' IN ()))) DESC  NULLS LAST);
SELECT * FROM vt2, rt0 INNER JOIN t1 ON (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) THEN (t1.c0 IN ()) WHEN CASE t1.c40  WHEN t1.c40 THEN vt0.c0 ELSE t1.c40 END THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN rt0.c1 THEN t1.c40 END WHERE (((((rt0.c2)GLOB(vt2.c0)))<<(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((rt0.c2 IN (t1.c40)))+(('441751227' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)GLOB(vt2.c0)))<<(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt2, rt0 INNER JOIN t1 ON (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) THEN (t1.c0 IN ()) WHEN CASE t1.c40  WHEN t1.c40 THEN vt0.c0 ELSE t1.c40 END THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN rt0.c1 THEN t1.c40 END ORDER BY (((rt0.c2 IN (t1.c40)))+(('441751227' IN ()))) DESC  NULLS LAST);
SELECT * FROM vt2, rt0 INNER JOIN t1 ON (((((((((vt0.c0)AND(t1.c1)))OR(vt0.c0)))AND(t1.c0)))OR(t1.c0)) IN ()) RIGHT OUTER JOIN vt0 ON CASE WHEN ((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) THEN (t1.c0 IN ()) WHEN CASE t1.c40  WHEN t1.c40 THEN vt0.c0 ELSE t1.c40 END THEN ((t1.c0) BETWEEN (t1.c1) AND (t1.c1)) WHEN rt0.c1 THEN t1.c40 END WHERE (((((rt0.c2)GLOB(vt2.c0)))<<(((rt0.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (((rt0.c2 IN (t1.c40)))+(('441751227' IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 IN (t1.c1)))<>(NULL)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c1)))<>(NULL))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 IN (t1.c1)))<>(NULL)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c1)))<>(NULL))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c0 IN (t1.c1)))<>(NULL)));
SELECT ALL * FROM vt2, vt0, t1, rt0 WHERE (((CASE rt0.c1  WHEN t1.c40 THEN t1.c0 END) IS TRUE)) ORDER BY ((json_array_length(rt0.c2, t1.c0)) IS FALSE) ASC  NULLS FIRST, (((('-2133374969') ISNULL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1))) AND (((t1.c0)AND(vt2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN t1.c40 THEN t1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, vt0, t1, rt0 ORDER BY ((json_array_length(rt0.c2, t1.c0)) IS FALSE) ASC  NULLS FIRST, (((('-2133374969') ISNULL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1))) AND (((t1.c0)AND(vt2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt0, t1, rt0 WHERE (((CASE rt0.c1  WHEN t1.c40 THEN t1.c0 END) IS TRUE)) ORDER BY ((json_array_length(rt0.c2, t1.c0)) IS FALSE) ASC  NULLS FIRST, (((('-2133374969') ISNULL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1))) AND (((t1.c0)AND(vt2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN t1.c40 THEN t1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, vt0, t1, rt0 ORDER BY ((json_array_length(rt0.c2, t1.c0)) IS FALSE) ASC  NULLS FIRST, (((('-2133374969') ISNULL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1))) AND (((t1.c0)AND(vt2.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt0, t1, rt0 WHERE (((CASE rt0.c1  WHEN t1.c40 THEN t1.c0 END) IS TRUE)) ORDER BY ((json_array_length(rt0.c2, t1.c0)) IS FALSE) ASC  NULLS FIRST, (((('-2133374969') ISNULL)) BETWEEN (((rt0.c0) NOT BETWEEN (vt2.c0) AND (rt0.c1))) AND (((t1.c0)AND(vt2.c0)))) DESC  NULLS LAST;
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((t1.c40) IS TRUE))) WHERE (((((rt0.c1)>=(t1.c0))) BETWEEN (1230106933) AND (((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(t1.c0))) BETWEEN (1230106933) AND (((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((t1.c40) IS TRUE))));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((t1.c40) IS TRUE))) WHERE (((((rt0.c1)>=(t1.c0))) BETWEEN (1230106933) AND (((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(t1.c0))) BETWEEN (1230106933) AND (((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(''))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((t1.c40) IS TRUE))));
SELECT * FROM t1 RIGHT OUTER JOIN rt0 ON (~ (((t1.c40) IS TRUE))) WHERE (((((rt0.c1)>=(t1.c0))) BETWEEN (1230106933) AND (((((((((t1.c1)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR('')))));
SELECT ALL * FROM rt0 WHERE (LIKELY(-1.411899892E9)) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c1))<=((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(-1.411899892E9)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c1))<=((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE (LIKELY(-1.411899892E9)) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c1))<=((rt0.c0))) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(-1.411899892E9)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c1))<=((rt0.c0))) END);
SELECT ALL * FROM rt0 WHERE (LIKELY(-1.411899892E9)) ORDER BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c1))<=((rt0.c0))) END;
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))||((((t1.c40))<=((t1.c1))))) WHERE ((((- (vt2.c0)))IS NOT(x'cfe0'))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt2.c0)))IS NOT(x'cfe0'))) IS TRUE)  as count FROM vt2, t1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))||((((t1.c40))<=((t1.c1))))) ORDER BY t1.c0);
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))||((((t1.c40))<=((t1.c1))))) WHERE ((((- (vt2.c0)))IS NOT(x'cfe0'))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt2.c0)))IS NOT(x'cfe0'))) IS TRUE)  as count FROM vt2, t1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))||((((t1.c40))<=((t1.c1))))) ORDER BY t1.c0);
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))||((((t1.c40))<=((t1.c1))))) WHERE ((((- (vt2.c0)))IS NOT(x'cfe0'))) ORDER BY t1.c0;
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt0, t1, vt2);
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt0, t1, vt2);
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE (CHANGES());
SELECT * FROM vt0, vt2 NOT INDEXED, rt0, t1 WHERE (HEX((rt0.c1 IN ()))) ORDER BY ((((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))OR('\U')))AND(t1.c0)))AND(x'')))OR(rt0.c2))) BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c2)%(t1.c40)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, vt2, rt0, t1 ORDER BY ((((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))OR('\U')))AND(t1.c0)))AND(x'')))OR(rt0.c2))) BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c2)%(t1.c40)))) DESC);
SELECT * FROM vt0, vt2 NOT INDEXED, rt0, t1 WHERE (HEX((rt0.c1 IN ()))) ORDER BY ((((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))OR('\U')))AND(t1.c0)))AND(x'')))OR(rt0.c2))) BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c2)%(t1.c40)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX((rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, vt2, rt0, t1 ORDER BY ((((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))OR('\U')))AND(t1.c0)))AND(x'')))OR(rt0.c2))) BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c2)%(t1.c40)))) DESC);
SELECT * FROM vt0, vt2 NOT INDEXED, rt0, t1 WHERE (HEX((rt0.c1 IN ()))) ORDER BY ((((((((((((((t1.c0)AND(rt0.c1)))AND(rt0.c1)))OR('\U')))AND(t1.c0)))AND(x'')))OR(rt0.c2))) BETWEEN (((rt0.c2)>>(rt0.c0))) AND (((rt0.c2)%(t1.c40)))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<(('1734157979'))))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))<(('1734157979'))))) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<(('1734157979'))))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((((vt0.c0))<(('1734157979'))))) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0))<(('1734157979'))))) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)OR(CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(rt0.c1)))AND(t1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT NULL))))OR(CAST(0Xffffffff8f457e84 AS REAL))) WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)<>(vt2.c0))) AND (CASE vt0.c0  WHEN rt0.c1 THEN t1.c1 END))) ORDER BY t1.c40, ((((x'')AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)<>(vt2.c0))) AND (CASE vt0.c0  WHEN rt0.c1 THEN t1.c1 END))) IS TRUE)  as count FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(rt0.c1)))AND(t1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT NULL))))OR(CAST(0Xffffffff8f457e84 AS REAL))) ORDER BY t1.c40, ((((x'')AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(rt0.c1)))AND(t1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT NULL))))OR(CAST(0Xffffffff8f457e84 AS REAL))) WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)<>(vt2.c0))) AND (CASE vt0.c0  WHEN rt0.c1 THEN t1.c1 END))) ORDER BY t1.c40, ((((x'')AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)<>(vt2.c0))) AND (CASE vt0.c0  WHEN rt0.c1 THEN t1.c1 END))) IS TRUE)  as count FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(rt0.c1)))AND(t1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT NULL))))OR(CAST(0Xffffffff8f457e84 AS REAL))) ORDER BY t1.c40, ((((x'')AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((((((((rt0.c0) NOTNULL))AND(((((rt0.c2)OR(rt0.c1)))AND(t1.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((rt0.c1) NOT NULL))))OR(CAST(0Xffffffff8f457e84 AS REAL))) WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0)<>(vt2.c0))) AND (CASE vt0.c0  WHEN rt0.c1 THEN t1.c1 END))) ORDER BY t1.c40, ((((x'')AND(rt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT * FROM t1, vt0 WHERE (-1785217397) ORDER BY 17708358 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1785217397) IS TRUE)  as count FROM t1, vt0 ORDER BY 17708358 COLLATE NOCASE  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (-1785217397) ORDER BY 17708358 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1785217397) IS TRUE)  as count FROM t1, vt0 ORDER BY 17708358 COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt2.c0)-(vt0.c0)) THEN (((-1687212094))>=((vt2.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.7837859861063387) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN (((vt2.c0, 0.45821264095730985, vt2.c0))<=((vt2.c0, vt0.c0, vt2.c0))) THEN TIME(vt0.c0, vt0.c0, vt0.c0) ELSE (NOT (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0)-(vt0.c0)) THEN (((-1687212094))>=((vt2.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.7837859861063387) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN (((vt2.c0, 0.45821264095730985, vt2.c0))<=((vt2.c0, vt0.c0, vt2.c0))) THEN TIME(vt0.c0, vt0.c0, vt0.c0) ELSE (NOT (vt2.c0)) END) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt2.c0)-(vt0.c0)) THEN (((-1687212094))>=((vt2.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.7837859861063387) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN (((vt2.c0, 0.45821264095730985, vt2.c0))<=((vt2.c0, vt0.c0, vt2.c0))) THEN TIME(vt0.c0, vt0.c0, vt0.c0) ELSE (NOT (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0)-(vt0.c0)) THEN (((-1687212094))>=((vt2.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.7837859861063387) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN (((vt2.c0, 0.45821264095730985, vt2.c0))<=((vt2.c0, vt0.c0, vt2.c0))) THEN TIME(vt0.c0, vt0.c0, vt0.c0) ELSE (NOT (vt2.c0)) END) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (CASE WHEN ((vt2.c0)-(vt0.c0)) THEN (((-1687212094))>=((vt2.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((0.7837859861063387) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN (((vt2.c0, 0.45821264095730985, vt2.c0))<=((vt2.c0, vt0.c0, vt2.c0))) THEN TIME(vt0.c0, vt0.c0, vt0.c0) ELSE (NOT (vt2.c0)) END);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) COLLATE RTRIM) ORDER BY (((((t1.c1))=((t1.c0))))LIKE(((x'')AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY (((((t1.c1))=((t1.c0))))LIKE(((x'')AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) COLLATE RTRIM) ORDER BY (((((t1.c1))=((t1.c0))))LIKE(((x'')AND(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY (((((t1.c1))=((t1.c0))))LIKE(((x'')AND(rt0.c2)))) ASC);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) COLLATE RTRIM) ORDER BY (((((t1.c1))=((t1.c0))))LIKE(((x'')AND(rt0.c2)))) ASC;
SELECT ALL * FROM vt2, vt0 WHERE (0Xffffffff83a84cb5);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff83a84cb5) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (0Xffffffff83a84cb5);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff83a84cb5) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (0Xffffffff83a84cb5);
SELECT * FROM t1, vt2, rt0, vt0 WHERE (ABS(rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t1, vt2, rt0, vt0);
SELECT * FROM t1, vt2, rt0, vt0 WHERE (ABS(rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((ABS(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t1, vt2, rt0, vt0);
SELECT * FROM t1, vt2, rt0, vt0 WHERE (ABS(rt0.c0 COLLATE BINARY));
SELECT * FROM vt2, vt0 WHERE (((vt2.c0 COLLATE NOCASE) NOTNULL)) ORDER BY CAST((NOT (0xfffffffffc8e1cb3)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST((NOT (0xfffffffffc8e1cb3)) AS INTEGER)  NULLS LAST);
SELECT * FROM vt2, vt0 WHERE (((vt2.c0 COLLATE NOCASE) NOTNULL)) ORDER BY CAST((NOT (0xfffffffffc8e1cb3)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST((NOT (0xfffffffffc8e1cb3)) AS INTEGER)  NULLS LAST);
SELECT * FROM vt2, vt0 WHERE (((vt2.c0 COLLATE NOCASE) NOTNULL)) ORDER BY CAST((NOT (0xfffffffffc8e1cb3)) AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt2 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON t1.c1 WHERE ((- (CAST(t1.c40 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c40 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt2 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON t1.c1);
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt2 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON t1.c1 WHERE ((- (CAST(t1.c40 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c40 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt2 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON t1.c1);
SELECT COUNT(*) FROM t1, vt0 INNER JOIN vt2 ON CAST((+ (rt0.c0)) AS REAL) INNER JOIN rt0 ON t1.c1 WHERE ((- (CAST(t1.c40 AS BLOB))));
SELECT * FROM vt2 NOT INDEXED, t1, vt0 LEFT OUTER JOIN rt0 ON ((((((((((t1.c40) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c40)))AND(vt2.c0)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c2)))))OR(LOWER(DISTINCT t1.c1))))OR(CASE t1.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((t1.c0) IS FALSE))) WHERE (STRFTIME('-679570676', ((vt0.c0)IS NOT(t1.c40)), ((rt0.c0)||(x'ee53'))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME('-679570676', ((vt0.c0)IS NOT(t1.c40)), ((rt0.c0)||(x'ee53')))) IS TRUE)  as count FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON ((((((((((t1.c40) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c40)))AND(vt2.c0)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c2)))))OR(LOWER(DISTINCT t1.c1))))OR(CASE t1.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((t1.c0) IS FALSE))));
SELECT * FROM vt2 NOT INDEXED, t1, vt0 LEFT OUTER JOIN rt0 ON ((((((((((t1.c40) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c40)))AND(vt2.c0)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c2)))))OR(LOWER(DISTINCT t1.c1))))OR(CASE t1.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((t1.c0) IS FALSE))) WHERE (STRFTIME('-679570676', ((vt0.c0)IS NOT(t1.c40)), ((rt0.c0)||(x'ee53'))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME('-679570676', ((vt0.c0)IS NOT(t1.c40)), ((rt0.c0)||(x'ee53')))) IS TRUE)  as count FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON ((((((((((t1.c40) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c40)))AND(vt2.c0)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c2)))))OR(LOWER(DISTINCT t1.c1))))OR(CASE t1.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((t1.c0) IS FALSE))));
SELECT * FROM vt2 NOT INDEXED, t1, vt0 LEFT OUTER JOIN rt0 ON ((((((((((t1.c40) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((((((((((((t1.c1)AND(t1.c0)))OR(t1.c40)))AND(vt2.c0)))OR(rt0.c1)))AND(t1.c1)))OR(rt0.c2)))))OR(LOWER(DISTINCT t1.c1))))OR(CASE t1.c0  WHEN rt0.c0 THEN rt0.c2 END)))AND(((t1.c0) IS FALSE))) WHERE (STRFTIME('-679570676', ((vt0.c0)IS NOT(t1.c40)), ((rt0.c0)||(x'ee53'))));
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN vt2 ON ((t1.c40)*(rt0.c2)) COLLATE BINARY WHERE ((((((((('-1936053992')OR(LOWER(DISTINCT rt0.c2))))OR((rt0.c2 IN ()))))AND(((((((((-580885347)AND(-1651480807)))OR(t1.c1)))AND(t1.c0)))OR(vt2.c0)))))OR((- (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1936053992')OR(LOWER(DISTINCT rt0.c2))))OR((rt0.c2 IN ()))))AND(((((((((-580885347)AND(-1651480807)))OR(t1.c1)))AND(t1.c0)))OR(vt2.c0)))))OR((- (t1.c40))))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN vt2 ON ((t1.c40)*(rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN vt2 ON ((t1.c40)*(rt0.c2)) COLLATE BINARY WHERE ((((((((('-1936053992')OR(LOWER(DISTINCT rt0.c2))))OR((rt0.c2 IN ()))))AND(((((((((-580885347)AND(-1651480807)))OR(t1.c1)))AND(t1.c0)))OR(vt2.c0)))))OR((- (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1936053992')OR(LOWER(DISTINCT rt0.c2))))OR((rt0.c2 IN ()))))AND(((((((((-580885347)AND(-1651480807)))OR(t1.c1)))AND(t1.c0)))OR(vt2.c0)))))OR((- (t1.c40))))) IS TRUE)  as count FROM rt0, vt0, t1 FULL OUTER JOIN vt2 ON ((t1.c40)*(rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0, vt0, t1 FULL OUTER JOIN vt2 ON ((t1.c40)*(rt0.c2)) COLLATE BINARY WHERE ((((((((('-1936053992')OR(LOWER(DISTINCT rt0.c2))))OR((rt0.c2 IN ()))))AND(((((((((-580885347)AND(-1651480807)))OR(t1.c1)))AND(t1.c0)))OR(vt2.c0)))))OR((- (t1.c40)))));
SELECT ALL * FROM rt0, t1 INNER JOIN vt2 ON (((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c1)) IN (NULL)) WHERE ((((((t1.c1))>=((0.6982751229011368))))+(UPPER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1))>=((0.6982751229011368))))+(UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt2 ON (((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c1)) IN (NULL)));
SELECT ALL * FROM rt0, t1 INNER JOIN vt2 ON (((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c1)) IN (NULL)) WHERE ((((((t1.c1))>=((0.6982751229011368))))+(UPPER(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1))>=((0.6982751229011368))))+(UPPER(rt0.c2)))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt2 ON (((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c1)) IN (NULL)));
SELECT ALL * FROM rt0, t1 INNER JOIN vt2 ON (((t1.c0) NOT BETWEEN (rt0.c1) AND (t1.c1)) IN (NULL)) WHERE ((((((t1.c1))>=((0.6982751229011368))))+(UPPER(rt0.c2))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((rt0.c0))<>((vt0.c0)))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND((((rt0.c0))>((rt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, (((((((((rt0.c1 IN ()))OR(CAST(vt0.c0 AS INTEGER))))OR((('1605742245')IS(rt0.c1)))))OR(GLOB(rt0.c1, vt0.c0))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND((((rt0.c0))>((rt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, (((((((((rt0.c1 IN ()))OR(CAST(vt0.c0 AS INTEGER))))OR((('1605742245')IS(rt0.c1)))))OR(GLOB(rt0.c1, vt0.c0))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((rt0.c0))<>((vt0.c0)))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND((((rt0.c0))>((rt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, (((((((((rt0.c1 IN ()))OR(CAST(vt0.c0 AS INTEGER))))OR((('1605742245')IS(rt0.c1)))))OR(GLOB(rt0.c1, vt0.c0))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND((((rt0.c0))>((rt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, (((((((((rt0.c1 IN ()))OR(CAST(vt0.c0 AS INTEGER))))OR((('1605742245')IS(rt0.c1)))))OR(GLOB(rt0.c1, vt0.c0))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ ((((rt0.c0))<>((vt0.c0)))))) ORDER BY ((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))AND((((rt0.c0))>((rt0.c2))))))OR(CAST(vt0.c0 AS BLOB))) DESC  NULLS LAST, (((((((((rt0.c1 IN ()))OR(CAST(vt0.c0 AS INTEGER))))OR((('1605742245')IS(rt0.c1)))))OR(GLOB(rt0.c1, vt0.c0))))OR(((((rt0.c2)AND(vt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL)) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL)) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER));
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS REAL)) ORDER BY CAST((rt0.c2 IN (rt0.c1)) AS INTEGER);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c40) ORDER BY ((((((((((((((rt0.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(rt0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c40) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((((((((((rt0.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(rt0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c40) ORDER BY ((((((((((((((rt0.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(rt0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c40) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((((((((((rt0.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(rt0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c40) ORDER BY ((((((((((((((rt0.c0)OR(t1.c1)))AND(t1.c1)))AND(t1.c1)))OR(rt0.c0)))OR(t1.c0)))AND(t1.c0))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (NULLIF(DISTINCT NULL, ((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, ((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (NULLIF(DISTINCT NULL, ((vt0.c0)+(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, ((vt0.c0)+(vt0.c0)))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (NULLIF(DISTINCT NULL, ((vt0.c0)+(vt0.c0))));
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c2);
SELECT * FROM vt2, vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((((((('IY')&(vt2.c0)))AND(((vt0.c0)<<(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))OR(((vt2.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt0.c0)))OR('')))AND(vt2.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((((('IY')&(vt2.c0)))AND(((vt0.c0)<<(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))OR(((vt2.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt0.c0)))OR('')))AND(vt2.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((((((('IY')&(vt2.c0)))AND(((vt0.c0)<<(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))OR(((vt2.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt0.c0)))OR('')))AND(vt2.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((((('IY')&(vt2.c0)))AND(((vt0.c0)<<(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))OR(((vt2.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt0.c0)))OR('')))AND(vt2.c0)))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(CAST(vt2.c0 AS REAL))))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((((((('IY')&(vt2.c0)))AND(((vt0.c0)<<(vt2.c0)))))OR(CAST(vt2.c0 AS NUMERIC))))OR(((vt2.c0) IS FALSE))))AND(((((((((vt0.c0)AND(vt0.c0)))OR('')))AND(vt2.c0)))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) IS FALSE)) ORDER BY ((((- (t1.c40))))=(((~ (x'd49f')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((- (t1.c40))))==(((~ (x'd49f')))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) IS FALSE)) ORDER BY ((((- (t1.c40))))=(((~ (x'd49f')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM t1 ORDER BY ((((- (t1.c40))))==(((~ (x'd49f')))))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) IS FALSE)) ORDER BY ((((- (t1.c40))))=(((~ (x'd49f')))))  NULLS LAST;
SELECT * FROM t1, vt2 WHERE (TYPEOF(((((((((t1.c0)OR(t1.c1)))OR(0x1a5496bb)))OR(vt2.c0)))OR(t1.c40)))) ORDER BY CAST(((t1.c0)%(t1.c40)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((t1.c0)OR(t1.c1)))OR(0X1a5496bb)))OR(vt2.c0)))OR(t1.c40)))) IS TRUE)  as count FROM t1, vt2 ORDER BY CAST(((t1.c0)%(t1.c40)) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM t1, vt2 WHERE (TYPEOF(((((((((t1.c0)OR(t1.c1)))OR(0x1a5496bb)))OR(vt2.c0)))OR(t1.c40)))) ORDER BY CAST(((t1.c0)%(t1.c40)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((((((((t1.c0)OR(t1.c1)))OR(0X1a5496bb)))OR(vt2.c0)))OR(t1.c40)))) IS TRUE)  as count FROM t1, vt2 ORDER BY CAST(((t1.c0)%(t1.c40)) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM t1, vt2 WHERE (TYPEOF(((((((((t1.c0)OR(t1.c1)))OR(0x1a5496bb)))OR(vt2.c0)))OR(t1.c40)))) ORDER BY CAST(((t1.c0)%(t1.c40)) AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON vt2.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON vt2.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ()));
SELECT COUNT(*) FROM vt2 WHERE ((((((((('' COLLATE BINARY)OR(0xffffffff8fb9098b)))OR(vt2.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('' COLLATE BINARY)OR(0Xffffffff8fb9098b)))OR(vt2.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((((((('' COLLATE BINARY)OR(0xffffffff8fb9098b)))OR(vt2.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((('' COLLATE BINARY)OR(0Xffffffff8fb9098b)))OR(vt2.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((((((('' COLLATE BINARY)OR(0xffffffff8fb9098b)))OR(vt2.c0)))OR((vt2.c0 IN (vt2.c0)))))OR(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))));
SELECT COUNT(*) FROM t1, rt0, vt0, vt2 INDEXED BY i10 WHERE (0.06572078213941834) ORDER BY ((((((vt0.c0)OR(vt2.c0)))OR(rt0.c2)))=((((t1.c40))>((rt0.c1))))) DESC, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE t1.c1 END)) AND ((CASE WHEN t1.c40 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN vt2.c0 THEN t1.c1 ELSE t1.c40 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.06572078213941834) IS TRUE)  as count FROM t1, rt0, vt0, vt2 INDEXED BY i10 ORDER BY ((((((vt0.c0)OR(vt2.c0)))OR(rt0.c2)))=((((t1.c40))>((rt0.c1))))) DESC, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE t1.c1 END)) AND ((CASE WHEN t1.c40 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN vt2.c0 THEN t1.c1 ELSE t1.c40 END)))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0, vt2 INDEXED BY i10 WHERE (0.06572078213941834) ORDER BY ((((((vt0.c0)OR(vt2.c0)))OR(rt0.c2)))=((((t1.c40))>((rt0.c1))))) DESC, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE t1.c1 END)) AND ((CASE WHEN t1.c40 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN vt2.c0 THEN t1.c1 ELSE t1.c40 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.06572078213941834) IS TRUE)  as count FROM t1, rt0, vt0, vt2 INDEXED BY i10 ORDER BY ((((((vt0.c0)OR(vt2.c0)))OR(rt0.c2)))=((((t1.c40))>((rt0.c1))))) DESC, (((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE t1.c1 END)) AND ((CASE WHEN t1.c40 THEN NULL WHEN t1.c0 THEN rt0.c0 WHEN vt2.c0 THEN t1.c1 ELSE t1.c40 END)))  NULLS LAST);
SELECT * FROM t1, vt0, vt2 WHERE ((- (t1.c40))) ORDER BY x''  NULLS FIRST, (+ (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t1.c40))) IS TRUE)  as count FROM t1, vt0, vt2 ORDER BY x''  NULLS FIRST, (+ (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t1, vt0, vt2 WHERE ((- (t1.c40))) ORDER BY x''  NULLS FIRST, (+ (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (t1.c40))) IS TRUE)  as count FROM t1, vt0, vt2 ORDER BY x''  NULLS FIRST, (+ (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM t1, vt0, vt2 WHERE ((- (t1.c40))) ORDER BY x''  NULLS FIRST, (+ (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT * FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((t1.c0) NOT NULL)) NOT BETWEEN (((t1.c40) NOT BETWEEN (rt0.c2) AND (t1.c40))) AND ((- (rt0.c1)))) WHERE (NULLIF(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE t1.c40 END, vt2.c0)) ORDER BY (((t1.c40)GLOB(t1.c40)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE t1.c40 END, vt2.c0)) IS TRUE)  as count FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((t1.c0) NOT NULL)) NOT BETWEEN (((t1.c40) NOT BETWEEN (rt0.c2) AND (t1.c40))) AND ((- (rt0.c1)))) ORDER BY (((t1.c40)GLOB(t1.c40)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((t1.c0) NOT NULL)) NOT BETWEEN (((t1.c40) NOT BETWEEN (rt0.c2) AND (t1.c40))) AND ((- (rt0.c1)))) WHERE (NULLIF(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE t1.c40 END, vt2.c0)) ORDER BY (((t1.c40)GLOB(t1.c40)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE t1.c40 END, vt2.c0)) IS TRUE)  as count FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((t1.c0) NOT NULL)) NOT BETWEEN (((t1.c40) NOT BETWEEN (rt0.c2) AND (t1.c40))) AND ((- (rt0.c1)))) ORDER BY (((t1.c40)GLOB(t1.c40)) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt2, rt0, vt0 INNER JOIN t1 ON ((((t1.c0) NOT NULL)) NOT BETWEEN (((t1.c40) NOT BETWEEN (rt0.c2) AND (t1.c40))) AND ((- (rt0.c1)))) WHERE (NULLIF(CASE WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE t1.c40 END, vt2.c0)) ORDER BY (((t1.c40)GLOB(t1.c40)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN t1 ON (NOT (((vt2.c0)GLOB(vt2.c0)))) FULL OUTER JOIN vt0 ON (((+ (t1.c1))) NOT BETWEEN (((rt0.c1)*(t1.c0))) AND (0.15011870417926942)) WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (' TDce(k]啵') AND ((vt2.c0 IN (rt0.c0))))) ORDER BY ((((((((t1.c1)OR(t1.c40)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c0, vt2.c0, t1.c0)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((rt0.c0)-(vt0.c0)), ((NULL)LIKE(x'')))) AND ((NULL, ((t1.c0) IS FALSE), (((rt0.c0)) NOT BETWEEN ((t1.c40)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (' TDce(k]啵') AND ((vt2.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN t1 ON (NOT (((vt2.c0)GLOB(vt2.c0)))) FULL OUTER JOIN vt0 ON (((+ (t1.c1))) NOT BETWEEN (((rt0.c1)*(t1.c0))) AND (0.15011870417926942)) ORDER BY ((((((((t1.c1)OR(t1.c40)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c0, vt2.c0, t1.c0)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((rt0.c0)-(vt0.c0)), ((NULL)LIKE(x'')))) AND ((NULL, ((t1.c0) IS FALSE), (((rt0.c0)) NOT BETWEEN ((t1.c40)) AND ((rt0.c1)))))));
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN t1 ON (NOT (((vt2.c0)GLOB(vt2.c0)))) FULL OUTER JOIN vt0 ON (((+ (t1.c1))) NOT BETWEEN (((rt0.c1)*(t1.c0))) AND (0.15011870417926942)) WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (' TDce(k]啵') AND ((vt2.c0 IN (rt0.c0))))) ORDER BY ((((((((t1.c1)OR(t1.c40)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c0, vt2.c0, t1.c0)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((rt0.c0)-(vt0.c0)), ((NULL)LIKE(x'')))) AND ((NULL, ((t1.c0) IS FALSE), (((rt0.c0)) NOT BETWEEN ((t1.c40)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (' TDce(k]啵') AND ((vt2.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt2 FULL OUTER JOIN t1 ON (NOT (((vt2.c0)GLOB(vt2.c0)))) FULL OUTER JOIN vt0 ON (((+ (t1.c1))) NOT BETWEEN (((rt0.c1)*(t1.c0))) AND (0.15011870417926942)) ORDER BY ((((((((t1.c1)OR(t1.c40)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c0, vt2.c0, t1.c0)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((rt0.c0)-(vt0.c0)), ((NULL)LIKE(x'')))) AND ((NULL, ((t1.c0) IS FALSE), (((rt0.c0)) NOT BETWEEN ((t1.c40)) AND ((rt0.c1)))))));
SELECT COUNT(*) FROM rt0, vt2 FULL OUTER JOIN t1 ON (NOT (((vt2.c0)GLOB(vt2.c0)))) FULL OUTER JOIN vt0 ON (((+ (t1.c1))) NOT BETWEEN (((rt0.c1)*(t1.c0))) AND (0.15011870417926942)) WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c1))) NOT BETWEEN (' TDce(k]啵') AND ((vt2.c0 IN (rt0.c0))))) ORDER BY ((((((((t1.c1)OR(t1.c40)))OR(rt0.c0)))AND(rt0.c0)))AND(NULL)) COLLATE RTRIM DESC  NULLS FIRST, (((rt0.c0, vt2.c0, t1.c0)) BETWEEN ((CAST(t1.c0 AS INTEGER), ((rt0.c0)-(vt0.c0)), ((NULL)LIKE(x'')))) AND ((NULL, ((t1.c0) IS FALSE), (((rt0.c0)) NOT BETWEEN ((t1.c40)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM rt0, t1, vt2, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t1, vt2, vt0);
SELECT COUNT(*) FROM rt0, t1, vt2, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t1, vt2, vt0);
SELECT COUNT(*) FROM rt0, t1, vt2, vt0 WHERE (NULL);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 NOT INDEXED WHERE (((((((((((rt0.c0)OR('')))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (rt0.c2, CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR('')))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (rt0.c2, CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 NOT INDEXED WHERE (((((((((((rt0.c0)OR('')))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (rt0.c2, CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR('')))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (rt0.c2, CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 NOT INDEXED, rt0 NOT INDEXED WHERE (((((((((((rt0.c0)OR('')))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0)))IS NOT((rt0.c2 IN (rt0.c0))))) ORDER BY (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (rt0.c2, CAST(vt0.c0 AS INTEGER))) ASC;
SELECT * FROM vt0, t1, vt2 NATURAL JOIN rt0 WHERE (x'') ORDER BY 0.8286072952638325 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, vt2 NATURAL JOIN rt0 ORDER BY 0.8286072952638325 DESC  NULLS LAST);
SELECT * FROM vt0, t1, vt2 NATURAL JOIN rt0 WHERE (x'') ORDER BY 0.8286072952638325 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, vt2 NATURAL JOIN rt0 ORDER BY 0.8286072952638325 DESC  NULLS LAST);
SELECT * FROM vt0, t1, vt2 NATURAL JOIN rt0 WHERE (x'') ORDER BY 0.8286072952638325 DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON (((NOT (vt0.c0))) NOT NULL) WHERE (((((vt2.c0) NOT NULL)) NOTNULL)) ORDER BY (((((vt2.c0 IN (vt0.c0, vt0.c0)))OR(((vt2.c0)IS NOT(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (((NOT (vt0.c0))) NOT NULL) ORDER BY (((((vt2.c0 IN (vt0.c0, vt0.c0)))OR(((vt2.c0)IS NOT(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 END))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON (((NOT (vt0.c0))) NOT NULL) WHERE (((((vt2.c0) NOT NULL)) NOTNULL)) ORDER BY (((((vt2.c0 IN (vt0.c0, vt0.c0)))OR(((vt2.c0)IS NOT(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (((NOT (vt0.c0))) NOT NULL) ORDER BY (((((vt2.c0 IN (vt0.c0, vt0.c0)))OR(((vt2.c0)IS NOT(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 END))  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON (((NOT (vt0.c0))) NOT NULL) WHERE (((((vt2.c0) NOT NULL)) NOTNULL)) ORDER BY (((((vt2.c0 IN (vt0.c0, vt0.c0)))OR(((vt2.c0)IS NOT(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (CAST(((rt0.c0)OR(t1.c0)) AS REAL)) ORDER BY CASE TRIM(t1.c1)  WHEN '-135162704' THEN CAST(rt0.c2 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(t1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY CASE TRIM(t1.c1)  WHEN '-135162704' THEN CAST(rt0.c2 AS INTEGER) END);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (CAST(((rt0.c0)OR(t1.c0)) AS REAL)) ORDER BY CASE TRIM(t1.c1)  WHEN '-135162704' THEN CAST(rt0.c2 AS INTEGER) END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(t1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY CASE TRIM(t1.c1)  WHEN '-135162704' THEN CAST(rt0.c2 AS INTEGER) END);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (CAST(((rt0.c0)OR(t1.c0)) AS REAL)) ORDER BY CASE TRIM(t1.c1)  WHEN '-135162704' THEN CAST(rt0.c2 AS INTEGER) END;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT * FROM t1, vt0 WHERE ((- (((t1.c40) IS FALSE)))) ORDER BY ((((vt0.c0) BETWEEN ('-778052473') AND (t1.c40)))=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c40) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c0) BETWEEN ('-778052473') AND (t1.c40)))=(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((- (((t1.c40) IS FALSE)))) ORDER BY ((((vt0.c0) BETWEEN ('-778052473') AND (t1.c40)))=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c40) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c0) BETWEEN ('-778052473') AND (t1.c40)))=(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE ((- (((t1.c40) IS FALSE)))) ORDER BY ((((vt0.c0) BETWEEN ('-778052473') AND (t1.c40)))=(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND((rt0.c1 IN ()))))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(rt0.c2)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND((rt0.c1 IN ()))))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(rt0.c2)))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND((rt0.c1 IN ()))))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(rt0.c2)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND((rt0.c1 IN ()))))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(rt0.c2)))OR(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR((rt0.c2 IN ()))))AND((rt0.c1 IN ()))))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(rt0.c2)))OR(NULL)));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULLIF(t1.c40 COLLATE BINARY, ((((t1.c40)AND(t1.c0)))AND('ku,+'))) DESC, (((((t1.c40)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c40)))AND(t1.c40))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY NULLIF(t1.c40 COLLATE BINARY, ((((t1.c40)AND(t1.c0)))AND('ku,+'))) DESC, (((((t1.c40)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c40)))AND(t1.c40))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULLIF(t1.c40 COLLATE BINARY, ((((t1.c40)AND(t1.c0)))AND('ku,+'))) DESC, (((((t1.c40)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c40)))AND(t1.c40))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY NULLIF(t1.c40 COLLATE BINARY, ((((t1.c40)AND(t1.c0)))AND('ku,+'))) DESC, (((((t1.c40)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c40)))AND(t1.c40))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULLIF(t1.c40 COLLATE BINARY, ((((t1.c40)AND(t1.c0)))AND('ku,+'))) DESC, (((((t1.c40)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c40)))AND(t1.c40))))  NULLS FIRST;
SELECT * FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((CAST(vt2.c0 AS REAL), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((vt2.c0, 0.22459235510334252, ((vt2.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((CAST(vt2.c0 AS REAL), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((vt2.c0, 0.22459235510334252, ((vt2.c0) IS FALSE))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((CAST(vt2.c0 AS REAL), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((vt2.c0, 0.22459235510334252, ((vt2.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((CAST(vt2.c0 AS REAL), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((vt2.c0, 0.22459235510334252, ((vt2.c0) IS FALSE))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((CAST(vt2.c0 AS REAL), CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((vt2.c0, 0.22459235510334252, ((vt2.c0) IS FALSE)))));
SELECT ALL * FROM vt2, rt0 INNER JOIN t1 ON (((t1.c40)|(rt0.c1)) IN ()) RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(vt2.c0, 0.19062445617531254)) IS TRUE) WHERE (CASE CASE vt2.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN ((((rt0.c1)OR(rt0.c2)))AND(t1.c40)) WHEN ((t1.c1) BETWEEN (vt2.c0) AND (t1.c40)) THEN ((((rt0.c0)OR(rt0.c2)))OR(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c0)) THEN ((vt0.c0)>=(vt2.c0)) WHEN ((((t1.c0)OR(t1.c1)))AND(rt0.c1)) THEN (+ (t1.c1)) WHEN ((rt0.c0)>=(rt0.c0)) THEN ((t1.c0) NOT NULL) END) ORDER BY RTRIM(vt0.c0 COLLATE RTRIM), (((NOT (rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt2.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN ((((rt0.c1)OR(rt0.c2)))AND(t1.c40)) WHEN ((t1.c1) BETWEEN (vt2.c0) AND (t1.c40)) THEN ((((rt0.c0)OR(rt0.c2)))OR(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c0)) THEN ((vt0.c0)>=(vt2.c0)) WHEN ((((t1.c0)OR(t1.c1)))AND(rt0.c1)) THEN (+ (t1.c1)) WHEN ((rt0.c0)>=(rt0.c0)) THEN ((t1.c0) NOT NULL) END) IS TRUE)  as count FROM vt2, rt0 INNER JOIN t1 ON (((t1.c40)|(rt0.c1)) IN ()) RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(vt2.c0, 0.19062445617531254)) IS TRUE) ORDER BY RTRIM(vt0.c0 COLLATE RTRIM), (((NOT (rt0.c1))) IS TRUE) DESC);
SELECT ALL * FROM vt2, rt0 INNER JOIN t1 ON (((t1.c40)|(rt0.c1)) IN ()) RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(vt2.c0, 0.19062445617531254)) IS TRUE) WHERE (CASE CASE vt2.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN ((((rt0.c1)OR(rt0.c2)))AND(t1.c40)) WHEN ((t1.c1) BETWEEN (vt2.c0) AND (t1.c40)) THEN ((((rt0.c0)OR(rt0.c2)))OR(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c0)) THEN ((vt0.c0)>=(vt2.c0)) WHEN ((((t1.c0)OR(t1.c1)))AND(rt0.c1)) THEN (+ (t1.c1)) WHEN ((rt0.c0)>=(rt0.c0)) THEN ((t1.c0) NOT NULL) END) ORDER BY RTRIM(vt0.c0 COLLATE RTRIM), (((NOT (rt0.c1))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt2.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN ((((rt0.c1)OR(rt0.c2)))AND(t1.c40)) WHEN ((t1.c1) BETWEEN (vt2.c0) AND (t1.c40)) THEN ((((rt0.c0)OR(rt0.c2)))OR(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c0)) THEN ((vt0.c0)>=(vt2.c0)) WHEN ((((t1.c0)OR(t1.c1)))AND(rt0.c1)) THEN (+ (t1.c1)) WHEN ((rt0.c0)>=(rt0.c0)) THEN ((t1.c0) NOT NULL) END) IS TRUE)  as count FROM vt2, rt0 INNER JOIN t1 ON (((t1.c40)|(rt0.c1)) IN ()) RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(vt2.c0, 0.19062445617531254)) IS TRUE) ORDER BY RTRIM(vt0.c0 COLLATE RTRIM), (((NOT (rt0.c1))) IS TRUE) DESC);
SELECT ALL * FROM vt2, rt0 INNER JOIN t1 ON (((t1.c40)|(rt0.c1)) IN ()) RIGHT OUTER JOIN vt0 ON ((LIKELIHOOD(vt2.c0, 0.19062445617531254)) IS TRUE) WHERE (CASE CASE vt2.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN ((((rt0.c1)OR(rt0.c2)))AND(t1.c40)) WHEN ((t1.c1) BETWEEN (vt2.c0) AND (t1.c40)) THEN ((((rt0.c0)OR(rt0.c2)))OR(t1.c0)) WHEN ((t1.c0) NOT BETWEEN (vt2.c0) AND (rt0.c0)) THEN ((vt0.c0)>=(vt2.c0)) WHEN ((((t1.c0)OR(t1.c1)))AND(rt0.c1)) THEN (+ (t1.c1)) WHEN ((rt0.c0)>=(rt0.c0)) THEN ((t1.c0) NOT NULL) END) ORDER BY RTRIM(vt0.c0 COLLATE RTRIM), (((NOT (rt0.c1))) IS TRUE) DESC;
SELECT COUNT(*) FROM t1, vt2 WHERE (CAST(x'1afa' AS TEXT)) ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((LOWER(DISTINCT t1.c1))<(CASE 0.9849277817179886  WHEN t1.c1 THEN t1.c1 ELSE vt2.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(x'1afa' AS TEXT)) IS TRUE)  as count FROM t1, vt2 ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((LOWER(DISTINCT t1.c1))<(CASE 0.9849277817179886  WHEN t1.c1 THEN t1.c1 ELSE vt2.c0 END)));
SELECT COUNT(*) FROM t1, vt2 WHERE (CAST(x'1afa' AS TEXT)) ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((LOWER(DISTINCT t1.c1))<(CASE 0.9849277817179886  WHEN t1.c1 THEN t1.c1 ELSE vt2.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(x'1afa' AS TEXT)) IS TRUE)  as count FROM t1, vt2 ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((LOWER(DISTINCT t1.c1))<(CASE 0.9849277817179886  WHEN t1.c1 THEN t1.c1 ELSE vt2.c0 END)));
SELECT COUNT(*) FROM t1, vt2 WHERE (CAST(x'1afa' AS TEXT)) ORDER BY ((t1.c1) ISNULL) COLLATE NOCASE DESC  NULLS FIRST, ((LOWER(DISTINCT t1.c1))<(CASE 0.9849277817179886  WHEN t1.c1 THEN t1.c1 ELSE vt2.c0 END));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt2 ON CAST(((((((((((((vt2.c0)AND(vt2.c0)))OR(NULL)))AND(NULL)))AND(398052785)))OR(vt2.c0)))OR(vt0.c0)) AS TEXT) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt2.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (((vt2.c0 IN ()))==(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))  NULLS FIRST, ((((vt2.c0)-(vt2.c0)))/(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (vt2.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON CAST(((((((((((((vt2.c0)AND(vt2.c0)))OR(NULL)))AND(NULL)))AND(398052785)))OR(vt2.c0)))OR(vt0.c0)) AS TEXT) ORDER BY (((vt2.c0 IN ()))=(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))  NULLS FIRST, ((((vt2.c0)-(vt2.c0)))/(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC  NULLS LAST, '' ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt2 ON CAST(((((((((((((vt2.c0)AND(vt2.c0)))OR(NULL)))AND(NULL)))AND(398052785)))OR(vt2.c0)))OR(vt0.c0)) AS TEXT) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt2.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (((vt2.c0 IN ()))==(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))  NULLS FIRST, ((((vt2.c0)-(vt2.c0)))/(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) NOT BETWEEN (vt2.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON CAST(((((((((((((vt2.c0)AND(vt2.c0)))OR(NULL)))AND(NULL)))AND(398052785)))OR(vt2.c0)))OR(vt0.c0)) AS TEXT) ORDER BY (((vt2.c0 IN ()))=(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))  NULLS FIRST, ((((vt2.c0)-(vt2.c0)))/(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC  NULLS LAST, '' ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt2 ON CAST(((((((((((((vt2.c0)AND(vt2.c0)))OR(NULL)))AND(NULL)))AND(398052785)))OR(vt2.c0)))OR(vt0.c0)) AS TEXT) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (vt2.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY (((vt2.c0 IN ()))==(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))  NULLS FIRST, ((((vt2.c0)-(vt2.c0)))/(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC  NULLS LAST, '' ASC;
SELECT * FROM t1 WHERE (((t1.c0)-((((t1.c1, t1.c40, t1.c1)) BETWEEN ((t1.c0, t1.c40, t1.c40)) AND ((t1.c0, t1.c40, t1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-((((t1.c1, t1.c40, t1.c1)) BETWEEN ((t1.c0, t1.c40, t1.c40)) AND ((t1.c0, t1.c40, t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c0)-((((t1.c1, t1.c40, t1.c1)) BETWEEN ((t1.c0, t1.c40, t1.c40)) AND ((t1.c0, t1.c40, t1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)-((((t1.c1, t1.c40, t1.c1)) BETWEEN ((t1.c0, t1.c40, t1.c40)) AND ((t1.c0, t1.c40, t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (((t1.c0)-((((t1.c1, t1.c40, t1.c1)) BETWEEN ((t1.c0, t1.c40, t1.c40)) AND ((t1.c0, t1.c40, t1.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM rt0, vt2, t1 WHERE ((((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) IN (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) IN (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ((((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) IN (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) IN (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ((((rt0.c2) BETWEEN (t1.c40) AND (rt0.c2)) IN (t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (vt2.c0) ORDER BY (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(CAST(t1.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(CAST(t1.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))))AND(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (vt2.c0) ORDER BY (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(CAST(t1.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(CAST(t1.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))))AND(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 WHERE (vt2.c0) ORDER BY (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(CAST(t1.c0 AS REAL))))AND(t1.c0 COLLATE RTRIM)))OR(((rt0.c2) NOT NULL))))AND(rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt0.c0)GLOB(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt0.c0)GLOB(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((((vt0.c0)GLOB(rt0.c0))))));
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE WHEN ((vt0.c0)/(t1.c1)) THEN (~ ('ow1pBsL')) WHEN (((rt0.c1, t1.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c1)) AND ((rt0.c0, t1.c40, NULL))) THEN ((rt0.c1)+(vt0.c0)) WHEN ((t1.c40)!=(rt0.c2)) THEN ((t1.c0) IS FALSE) END) ORDER BY ((((NULL) BETWEEN (t1.c40) AND (t1.c0))) ISNULL)  NULLS LAST, HEX((rt0.c1 IN (NULL, rt0.c0, t1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)/(t1.c1)) THEN (~ ('ow1pBsL')) WHEN (((rt0.c1, t1.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c1)) AND ((rt0.c0, t1.c40, NULL))) THEN ((rt0.c1)+(vt0.c0)) WHEN ((t1.c40)!=(rt0.c2)) THEN ((t1.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((NULL) BETWEEN (t1.c40) AND (t1.c0))) ISNULL)  NULLS LAST, HEX((rt0.c1 IN (NULL, rt0.c0, t1.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE WHEN ((vt0.c0)/(t1.c1)) THEN (~ ('ow1pBsL')) WHEN (((rt0.c1, t1.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c1)) AND ((rt0.c0, t1.c40, NULL))) THEN ((rt0.c1)+(vt0.c0)) WHEN ((t1.c40)!=(rt0.c2)) THEN ((t1.c0) IS FALSE) END) ORDER BY ((((NULL) BETWEEN (t1.c40) AND (t1.c0))) ISNULL)  NULLS LAST, HEX((rt0.c1 IN (NULL, rt0.c0, t1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)/(t1.c1)) THEN (~ ('ow1pBsL')) WHEN (((rt0.c1, t1.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c1)) AND ((rt0.c0, t1.c40, NULL))) THEN ((rt0.c1)+(vt0.c0)) WHEN ((t1.c40)!=(rt0.c2)) THEN ((t1.c0) IS FALSE) END) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((NULL) BETWEEN (t1.c40) AND (t1.c0))) ISNULL)  NULLS LAST, HEX((rt0.c1 IN (NULL, rt0.c0, t1.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CASE WHEN ((vt0.c0)/(t1.c1)) THEN (~ ('ow1pBsL')) WHEN (((rt0.c1, t1.c1, rt0.c2)) NOT BETWEEN ((vt0.c0, t1.c0, t1.c1)) AND ((rt0.c0, t1.c40, NULL))) THEN ((rt0.c1)+(vt0.c0)) WHEN ((t1.c40)!=(rt0.c2)) THEN ((t1.c0) IS FALSE) END) ORDER BY ((((NULL) BETWEEN (t1.c40) AND (t1.c0))) ISNULL)  NULLS LAST, HEX((rt0.c1 IN (NULL, rt0.c0, t1.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON CASE NULL  WHEN CASE WHEN x'' THEN t1.c0 WHEN vt0.c0 THEN t1.c40 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END THEN x'' WHEN '' THEN ((((((((t1.c1)OR(t1.c40)))AND(vt0.c0)))OR(t1.c1)))AND(vt0.c0)) WHEN (((t1.c1, t1.c0, vt0.c0))<>((t1.c0, t1.c1, t1.c1))) THEN (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c0))) END CROSS JOIN t1 ON 8.8366714E8 WHERE ((+ (((vt2.c0) NOT BETWEEN (t1.c40) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt2.c0) NOT BETWEEN (t1.c40) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON CASE NULL  WHEN CASE WHEN x'' THEN t1.c0 WHEN vt0.c0 THEN t1.c40 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END THEN x'' WHEN '' THEN ((((((((t1.c1)OR(t1.c40)))AND(vt0.c0)))OR(t1.c1)))AND(vt0.c0)) WHEN (((t1.c1, t1.c0, vt0.c0))!=((t1.c0, t1.c1, t1.c1))) THEN (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c0))) END CROSS JOIN t1 ON 8.8366714E8);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON CASE NULL  WHEN CASE WHEN x'' THEN t1.c0 WHEN vt0.c0 THEN t1.c40 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END THEN x'' WHEN '' THEN ((((((((t1.c1)OR(t1.c40)))AND(vt0.c0)))OR(t1.c1)))AND(vt0.c0)) WHEN (((t1.c1, t1.c0, vt0.c0))<>((t1.c0, t1.c1, t1.c1))) THEN (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c0))) END CROSS JOIN t1 ON 8.8366714E8 WHERE ((+ (((vt2.c0) NOT BETWEEN (t1.c40) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt2.c0) NOT BETWEEN (t1.c40) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON CASE NULL  WHEN CASE WHEN x'' THEN t1.c0 WHEN vt0.c0 THEN t1.c40 WHEN t1.c1 THEN t1.c1 ELSE t1.c0 END THEN x'' WHEN '' THEN ((((((((t1.c1)OR(t1.c40)))AND(vt0.c0)))OR(t1.c1)))AND(vt0.c0)) WHEN (((t1.c1, t1.c0, vt0.c0))!=((t1.c0, t1.c1, t1.c1))) THEN (((t1.c1)) BETWEEN ((vt2.c0)) AND ((t1.c0))) END CROSS JOIN t1 ON 8.8366714E8);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)AND(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))&(((rt0.c2)AND(vt2.c0))))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)AND(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL))&(((rt0.c2)AND(vt2.c0))))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE (((((rt0.c1) ISNULL))&(((rt0.c2)AND(vt2.c0)))));
SELECT COUNT(*) FROM rt0, vt2, t1 WHERE (CASE x''  WHEN (x'63e3' IN ()) THEN ((rt0.c2)IS NOT(t1.c1)) WHEN ((t1.c0)%(t1.c0)) THEN t1.c40 COLLATE NOCASE WHEN ((t1.c40) IS FALSE) THEN ((((vt2.c0)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (x'63e3' IN ()) THEN ((rt0.c2)IS NOT(t1.c1)) WHEN ((t1.c0)%(t1.c0)) THEN t1.c40 COLLATE NOCASE WHEN ((t1.c40) IS FALSE) THEN ((((vt2.c0)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT COUNT(*) FROM rt0, vt2, t1 WHERE (CASE x''  WHEN (x'63e3' IN ()) THEN ((rt0.c2)IS NOT(t1.c1)) WHEN ((t1.c0)%(t1.c0)) THEN t1.c40 COLLATE NOCASE WHEN ((t1.c40) IS FALSE) THEN ((((vt2.c0)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (x'63e3' IN ()) THEN ((rt0.c2)IS NOT(t1.c1)) WHEN ((t1.c0)%(t1.c0)) THEN t1.c40 COLLATE NOCASE WHEN ((t1.c40) IS FALSE) THEN ((((vt2.c0)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt2, t1);
SELECT COUNT(*) FROM rt0, vt2, t1 WHERE (CASE x''  WHEN (x'63e3' IN ()) THEN ((rt0.c2)IS NOT(t1.c1)) WHEN ((t1.c0)%(t1.c0)) THEN t1.c40 COLLATE NOCASE WHEN ((t1.c40) IS FALSE) THEN ((((vt2.c0)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT * FROM vt0, vt2, rt0, t1 WHERE (((t1.c1)|(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1)|(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT * FROM vt0, vt2, rt0, t1 WHERE (((t1.c1)|(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1)|(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT * FROM vt0, vt2, rt0, t1 WHERE (((t1.c1)|(rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 END)!=(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN vt2.c0 END)!=(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY '' DESC);
SELECT * FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 END)!=(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN vt2.c0 END)!=(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY '' DESC);
SELECT * FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 END)!=(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) ORDER BY '' DESC;
SELECT COUNT(*) FROM rt0, vt2 WHERE ((rt0.c2 IN ())) ORDER BY (NOT (((rt0.c1)IS NOT(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt2 ORDER BY (NOT (((rt0.c1)IS NOT(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((rt0.c2 IN ())) ORDER BY (NOT (((rt0.c1)IS NOT(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt2 ORDER BY (NOT (((rt0.c1)IS NOT(rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((rt0.c2 IN ())) ORDER BY (NOT (((rt0.c1)IS NOT(rt0.c1)))) ASC;
SELECT COUNT(*) FROM vt2 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c40)))||(CAST(vt2.c0 AS BLOB))) LEFT OUTER JOIN t1 ON (((x'', t1.c40, vt2.c0))<=((t1.c0, vt2.c0, rt0.c2))) COLLATE BINARY FULL OUTER JOIN rt0 ON UPPER((- (t1.c40))) WHERE (json_object(((vt0.c0)OR(rt0.c1)), (t1.c0 IN ()))) ORDER BY ((TRIM(DISTINCT rt0.c1, rt0.c2)) BETWEEN (((t1.c1) NOTNULL)) AND (((vt2.c0)IS NOT(t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt0.c0)OR(rt0.c1)), (t1.c0 IN ()))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c40)))||(CAST(vt2.c0 AS BLOB))) LEFT OUTER JOIN t1 ON (((x'', t1.c40, vt2.c0))<=((t1.c0, vt2.c0, rt0.c2))) COLLATE BINARY FULL OUTER JOIN rt0 ON UPPER((- (t1.c40))) ORDER BY ((TRIM(DISTINCT rt0.c1, rt0.c2)) BETWEEN (((t1.c1) NOTNULL)) AND (((vt2.c0)IS NOT(t1.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt2 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c40)))||(CAST(vt2.c0 AS BLOB))) LEFT OUTER JOIN t1 ON (((x'', t1.c40, vt2.c0))<=((t1.c0, vt2.c0, rt0.c2))) COLLATE BINARY FULL OUTER JOIN rt0 ON UPPER((- (t1.c40))) WHERE (json_object(((vt0.c0)OR(rt0.c1)), (t1.c0 IN ()))) ORDER BY ((TRIM(DISTINCT rt0.c1, rt0.c2)) BETWEEN (((t1.c1) NOTNULL)) AND (((vt2.c0)IS NOT(t1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((vt0.c0)OR(rt0.c1)), (t1.c0 IN ()))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t1.c1) AND (t1.c40)))||(CAST(vt2.c0 AS BLOB))) LEFT OUTER JOIN t1 ON (((x'', t1.c40, vt2.c0))<=((t1.c0, vt2.c0, rt0.c2))) COLLATE BINARY FULL OUTER JOIN rt0 ON UPPER((- (t1.c40))) ORDER BY ((TRIM(DISTINCT rt0.c1, rt0.c2)) BETWEEN (((t1.c1) NOTNULL)) AND (((vt2.c0)IS NOT(t1.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((CASE t1.c40  WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t1.c40  WHEN rt0.c0 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((CASE t1.c40  WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE t1.c40  WHEN rt0.c0 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((CASE t1.c40  WHEN rt0.c0 THEN rt0.c0 END IN ()));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((+ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN vt2 ON (+ (x'e879')) WHERE ((((rt0.c1)) BETWEEN ((0.3408127201603287)) AND (((- (rt0.c1)))))) ORDER BY ((((rt0.c0 IN ())))>((((rt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((0.3408127201603287)) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((+ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN vt2 ON (+ (x'e879')) ORDER BY ((((rt0.c0 IN ())))>((((rt0.c0) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((+ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN vt2 ON (+ (x'e879')) WHERE ((((rt0.c1)) BETWEEN ((0.3408127201603287)) AND (((- (rt0.c1)))))) ORDER BY ((((rt0.c0 IN ())))>((((rt0.c0) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((0.3408127201603287)) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST((+ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN vt2 ON (+ (x'e879')) ORDER BY ((((rt0.c0 IN ())))>((((rt0.c0) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST((+ (rt0.c0)) AS TEXT) RIGHT OUTER JOIN vt2 ON (+ (x'e879')) WHERE ((((rt0.c1)) BETWEEN ((0.3408127201603287)) AND (((- (rt0.c1)))))) ORDER BY ((((rt0.c0 IN ())))>((((rt0.c0) IS FALSE)))) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS BLOB))<(((((NULL)OR(rt0.c1)))OR(0.8305152861011591)))) RIGHT OUTER JOIN t1 ON DATE(0.6573637012173422, CAST(rt0.c0 AS REAL), CAST(rt0.c0 AS BLOB)) WHERE ((- (CAST(t1.c40 AS REAL)))) ORDER BY (CASE -2086122315  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c40 AS REAL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS BLOB))<(((((NULL)OR(rt0.c1)))OR(0.8305152861011591)))) RIGHT OUTER JOIN t1 ON DATE(0.6573637012173422, CAST(rt0.c0 AS REAL), CAST(rt0.c0 AS BLOB)) ORDER BY (CASE -2086122315  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS BLOB))<(((((NULL)OR(rt0.c1)))OR(0.8305152861011591)))) RIGHT OUTER JOIN t1 ON DATE(0.6573637012173422, CAST(rt0.c0 AS REAL), CAST(rt0.c0 AS BLOB)) WHERE ((- (CAST(t1.c40 AS REAL)))) ORDER BY (CASE -2086122315  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c40 AS REAL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS BLOB))<(((((NULL)OR(rt0.c1)))OR(0.8305152861011591)))) RIGHT OUTER JOIN t1 ON DATE(0.6573637012173422, CAST(rt0.c0 AS REAL), CAST(rt0.c0 AS BLOB)) ORDER BY (CASE -2086122315  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CAST(rt0.c0 AS BLOB))<(((((NULL)OR(rt0.c1)))OR(0.8305152861011591)))) RIGHT OUTER JOIN t1 ON DATE(0.6573637012173422, CAST(rt0.c0 AS REAL), CAST(rt0.c0 AS BLOB)) WHERE ((- (CAST(t1.c40 AS REAL)))) ORDER BY (CASE -2086122315  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, vt2 LEFT OUTER JOIN t1 ON rt0.c2 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))%(CASE rt0.c2  WHEN rt0.c0 THEN t1.c1 ELSE t1.c1 END)) WHERE (((vt2.c0 COLLATE RTRIM) NOT BETWEEN ((('b⩾8l!F>') IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE RTRIM) NOT BETWEEN ((('b⩾8l!F>') IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN t1 ON rt0.c2 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))%(CASE rt0.c2  WHEN rt0.c0 THEN t1.c1 ELSE t1.c1 END)));
SELECT * FROM vt0, vt2 LEFT OUTER JOIN t1 ON rt0.c2 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))%(CASE rt0.c2  WHEN rt0.c0 THEN t1.c1 ELSE t1.c1 END)) WHERE (((vt2.c0 COLLATE RTRIM) NOT BETWEEN ((('b⩾8l!F>') IS TRUE)) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE RTRIM) NOT BETWEEN ((('b⩾8l!F>') IS TRUE)) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN t1 ON rt0.c2 FULL OUTER JOIN rt0 ON ((((rt0.c2) ISNULL))%(CASE rt0.c2  WHEN rt0.c0 THEN t1.c1 ELSE t1.c1 END)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 INDEXED BY i10 WHERE (((((t1.c1 COLLATE BINARY)OR(((0.45821264095730985)IS NOT(t1.c40)))))AND((rt0.c0 IN (rt0.c2, vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1 COLLATE BINARY)OR(((0.45821264095730985)IS NOT(t1.c40)))))AND((rt0.c0 IN (rt0.c2, vt2.c0))))) IS TRUE)  as count FROM t1, vt2, rt0 INDEXED BY i10);
SELECT ALL COUNT(*) FROM t1, vt2, rt0 INDEXED BY i10 WHERE (((((t1.c1 COLLATE BINARY)OR(((0.45821264095730985)IS NOT(t1.c40)))))AND((rt0.c0 IN (rt0.c2, vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1 COLLATE BINARY)OR(((0.45821264095730985)IS NOT(t1.c40)))))AND((rt0.c0 IN (rt0.c2, vt2.c0))))) IS TRUE)  as count FROM t1, vt2, rt0 INDEXED BY i10);
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0)-(vt2.c0)))OR(LIKELIHOOD(rt0.c2, 0.8615635076681031))))AND(((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CASE t1.c1  WHEN rt0.c0 THEN t1.c0 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN vt2.c0 THEN NULL WHEN t1.c0 THEN t1.c40 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1  WHEN rt0.c0 THEN t1.c0 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN vt2.c0 THEN NULL WHEN t1.c0 THEN t1.c40 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0)-(vt2.c0)))OR(LIKELIHOOD(rt0.c2, 0.8615635076681031))))AND(((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0)-(vt2.c0)))OR(LIKELIHOOD(rt0.c2, 0.8615635076681031))))AND(((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CASE t1.c1  WHEN rt0.c0 THEN t1.c0 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN vt2.c0 THEN NULL WHEN t1.c0 THEN t1.c40 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1  WHEN rt0.c0 THEN t1.c0 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN vt2.c0 THEN NULL WHEN t1.c0 THEN t1.c40 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0)-(vt2.c0)))OR(LIKELIHOOD(rt0.c2, 0.8615635076681031))))AND(((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0)-(vt2.c0)))OR(LIKELIHOOD(rt0.c2, 0.8615635076681031))))AND(((((((((vt2.c0)AND(rt0.c1)))AND(rt0.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CASE t1.c1  WHEN rt0.c0 THEN t1.c0 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN vt2.c0 THEN NULL WHEN t1.c0 THEN t1.c40 END COLLATE BINARY);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((rt0.c2)!=(rt0.c0)))&(t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0)))&(t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((rt0.c2)!=(rt0.c0)))&(t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)!=(rt0.c0)))&(t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (((((rt0.c2)!=(rt0.c0)))&(t1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN vt2 ON ((((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))>>(((((((((((((x'')OR(t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CAST(((x'')LIKE(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')LIKE(rt0.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN vt2 ON ((((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))>>(((((((((((((x'')OR(t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN vt2 ON ((((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))>>(((((((((((((x'')OR(t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CAST(((x'')LIKE(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((x'')LIKE(rt0.c2)) AS REAL)) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN vt2 ON ((((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))>>(((((((((((((x'')OR(t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM t1, rt0 LEFT OUTER JOIN vt2 ON ((((((((((((((rt0.c2)OR(t1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))>>(((((((((((((x'')OR(t1.c0)))AND(rt0.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(rt0.c2)))) WHERE (CAST(((x'')LIKE(rt0.c2)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))/(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))/(vt0.c0 COLLATE BINARY))) ORDER BY CAST(((vt0.c0)>=(vt0.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM t1 WHERE (((((((t1.c0)AND(0.6656055088477962)))OR(t1.c1)))>=(t1.c40))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-1687212094))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(0.6656055088477962)))OR(t1.c1)))>=(t1.c40))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-1687212094))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)AND(0.6656055088477962)))OR(t1.c1)))>=(t1.c40))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-1687212094))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(0.6656055088477962)))OR(t1.c1)))>=(t1.c40))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-1687212094))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)AND(0.6656055088477962)))OR(t1.c1)))>=(t1.c40))) ORDER BY ((((t1.c1) BETWEEN (t1.c1) AND (-1687212094))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))GLOB(x''))) ORDER BY ((t1.c1 COLLATE NOCASE)GLOB(vt2.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))GLOB(x''))) IS TRUE)  as count FROM vt0, rt0, vt2, t1 ORDER BY ((t1.c1 COLLATE NOCASE)GLOB(vt2.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))GLOB(x''))) ORDER BY ((t1.c1 COLLATE NOCASE)GLOB(vt2.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))GLOB(x''))) IS TRUE)  as count FROM vt0, rt0, vt2, t1 ORDER BY ((t1.c1 COLLATE NOCASE)GLOB(vt2.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt2, t1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))))GLOB(x''))) ORDER BY ((t1.c1 COLLATE NOCASE)GLOB(vt2.c0))  NULLS LAST;
SELECT * FROM t1, vt2, vt0 WHERE (((((((t1.c40)>>(vt0.c0)))AND(CASE vt2.c0  WHEN vt0.c0 THEN NULL WHEN t1.c40 THEN t1.c0 WHEN t1.c40 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c1))) ORDER BY ((t1.c40) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c40)>>(vt0.c0)))AND(CASE vt2.c0  WHEN vt0.c0 THEN NULL WHEN t1.c40 THEN t1.c0 WHEN t1.c40 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c1))) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY ((t1.c40) IS FALSE) ASC  NULLS LAST);
SELECT * FROM t1, vt2, vt0 WHERE (((((((t1.c40)>>(vt0.c0)))AND(CASE vt2.c0  WHEN vt0.c0 THEN NULL WHEN t1.c40 THEN t1.c0 WHEN t1.c40 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c1))) ORDER BY ((t1.c40) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c40)>>(vt0.c0)))AND(CASE vt2.c0  WHEN vt0.c0 THEN NULL WHEN t1.c40 THEN t1.c0 WHEN t1.c40 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c1))) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY ((t1.c40) IS FALSE) ASC  NULLS LAST);
SELECT * FROM t1, vt2, vt0 WHERE (((((((t1.c40)>>(vt0.c0)))AND(CASE vt2.c0  WHEN vt0.c0 THEN NULL WHEN t1.c40 THEN t1.c0 WHEN t1.c40 THEN t1.c0 ELSE vt0.c0 END)))AND(t1.c1))) ORDER BY ((t1.c40) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE -273282168 END))<((CASE '1009020403'  WHEN 0.18332077459012852 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE -273282168 END))<((CASE '1009020403'  WHEN 0.18332077459012852 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE -273282168 END))<((CASE '1009020403'  WHEN 0.18332077459012852 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE -273282168 END))<((CASE '1009020403'  WHEN 0.18332077459012852 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE -273282168 END))<((CASE '1009020403'  WHEN 0.18332077459012852 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c40))) IS FALSE) FULL OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))AND(HEX('1533161011'))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE (((((((t1.c1) NOT NULL))OR((((rt0.c2, vt0.c0, 0.6660956255011685))>=((vt2.c0, rt0.c2, vt0.c0))))))AND(CASE t1.c0  WHEN rt0.c2 THEN vt2.c0 ELSE t1.c1 END))) ORDER BY (((((vt2.c0)OR(t1.c0)))OR(t1.c40)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOT NULL))OR((((rt0.c2, vt0.c0, 0.6660956255011685))>=((vt2.c0, rt0.c2, vt0.c0))))))AND(CASE t1.c0  WHEN rt0.c2 THEN vt2.c0 ELSE t1.c1 END))) IS TRUE)  as count FROM vt2, rt0 LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c40))) IS FALSE) FULL OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))AND(HEX('1533161011'))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (((((vt2.c0)OR(t1.c0)))OR(t1.c40)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c40))) IS FALSE) FULL OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))AND(HEX('1533161011'))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE (((((((t1.c1) NOT NULL))OR((((rt0.c2, vt0.c0, 0.6660956255011685))>=((vt2.c0, rt0.c2, vt0.c0))))))AND(CASE t1.c0  WHEN rt0.c2 THEN vt2.c0 ELSE t1.c1 END))) ORDER BY (((((vt2.c0)OR(t1.c0)))OR(t1.c40)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t1.c1) NOT NULL))OR((((rt0.c2, vt0.c0, 0.6660956255011685))>=((vt2.c0, rt0.c2, vt0.c0))))))AND(CASE t1.c0  WHEN rt0.c2 THEN vt2.c0 ELSE t1.c1 END))) IS TRUE)  as count FROM vt2, rt0 LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c40))) IS FALSE) FULL OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))AND(HEX('1533161011'))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY (((((vt2.c0)OR(t1.c0)))OR(t1.c40)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0 LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(t1.c0)))OR(t1.c40))) IS FALSE) FULL OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS INTEGER))AND(HEX('1533161011'))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE (((((((t1.c1) NOT NULL))OR((((rt0.c2, vt0.c0, 0.6660956255011685))>=((vt2.c0, rt0.c2, vt0.c0))))))AND(CASE t1.c0  WHEN rt0.c2 THEN vt2.c0 ELSE t1.c1 END))) ORDER BY (((((vt2.c0)OR(t1.c0)))OR(t1.c40)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT * FROM vt2, t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt2, t1);
SELECT * FROM vt2, t1 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt2, t1);
SELECT * FROM vt2, t1 WHERE (t1.c1);
SELECT ALL * FROM vt2, vt0 WHERE ((- (((vt2.c0)|(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c0)|(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((- (((vt2.c0)|(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c0)|(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ((- (((vt2.c0)|(vt2.c0)))));
SELECT ALL * FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON '-2086122315' WHERE ((~ ((((vt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON '-2086122315');
SELECT ALL * FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON '-2086122315' WHERE ((~ ((((vt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON '-2086122315');
SELECT ALL * FROM vt2, t1, vt0 LEFT OUTER JOIN rt0 ON '-2086122315' WHERE ((~ ((((vt2.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT ALL * FROM t1, vt2 CROSS JOIN rt0 ON ((NULL)<<(((((((((vt0.c0)AND(rt0.c2)))AND(t1.c40)))OR(rt0.c1)))OR(0.23411070454741323)))) INNER JOIN vt0 ON t1.c0 WHERE ((((((((((((rt0.c0)AND(-2110202867)))AND(vt0.c0)))AND(t1.c0)))OR(vt2.c0))))<=((0x4669124)))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC, NULL, (((vt2.c0 IN (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0)AND(-2110202867)))AND(vt0.c0)))AND(t1.c0)))OR(vt2.c0))))<=((0x4669124)))) IS TRUE)  as count FROM t1, vt2 CROSS JOIN rt0 ON ((NULL)<<(((((((((vt0.c0)AND(rt0.c2)))AND(t1.c40)))OR(rt0.c1)))OR(0.23411070454741323)))) INNER JOIN vt0 ON t1.c0 ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC, NULL, (((vt2.c0 IN (vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt2 CROSS JOIN rt0 ON ((NULL)<<(((((((((vt0.c0)AND(rt0.c2)))AND(t1.c40)))OR(rt0.c1)))OR(0.23411070454741323)))) INNER JOIN vt0 ON t1.c0 WHERE ((((((((((((rt0.c0)AND(-2110202867)))AND(vt0.c0)))AND(t1.c0)))OR(vt2.c0))))<=((0x4669124)))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC, NULL, (((vt2.c0 IN (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0)AND(-2110202867)))AND(vt0.c0)))AND(t1.c0)))OR(vt2.c0))))<=((0x4669124)))) IS TRUE)  as count FROM t1, vt2 CROSS JOIN rt0 ON ((NULL)<<(((((((((vt0.c0)AND(rt0.c2)))AND(t1.c40)))OR(rt0.c1)))OR(0.23411070454741323)))) INNER JOIN vt0 ON t1.c0 ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC, NULL, (((vt2.c0 IN (vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM t1, vt2 CROSS JOIN rt0 ON ((NULL)<<(((((((((vt0.c0)AND(rt0.c2)))AND(t1.c40)))OR(rt0.c1)))OR(0.23411070454741323)))) INNER JOIN vt0 ON t1.c0 WHERE ((((((((((((rt0.c0)AND(-2110202867)))AND(vt0.c0)))AND(t1.c0)))OR(vt2.c0))))<=((0x4669124)))) ORDER BY ((((((((rt0.c1)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM DESC, NULL, (((vt2.c0 IN (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt2, vt0, rt0, t1);
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt2, vt0, rt0, t1);
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (rt0.c1);
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON NULL WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt2, t1 INNER JOIN rt0 ON NULL);
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON NULL WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt2, t1 INNER JOIN rt0 ON NULL);
SELECT ALL * FROM vt2, t1 INNER JOIN rt0 ON NULL WHERE (rt0.c1);
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN rt0 ON ((((((((rt0.c0)AND(t1.c0)))OR(t1.c40)))OR(rt0.c2)))AND(t1.c40)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))AND(COALESCE(t1.c1, rt0.c0, vt2.c0, vt2.c0))) WHERE (((((t1.c0)/(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt2, t1 CROSS JOIN rt0 ON ((((((((rt0.c0)AND(t1.c0)))OR(t1.c40)))OR(rt0.c2)))AND(t1.c40)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))AND(COALESCE(t1.c1, rt0.c0, vt2.c0, vt2.c0))));
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN rt0 ON ((((((((rt0.c0)AND(t1.c0)))OR(t1.c40)))OR(rt0.c2)))AND(t1.c40)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))AND(COALESCE(t1.c1, rt0.c0, vt2.c0, vt2.c0))) WHERE (((((t1.c0)/(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt2, t1 CROSS JOIN rt0 ON ((((((((rt0.c0)AND(t1.c0)))OR(t1.c40)))OR(rt0.c2)))AND(t1.c40)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))AND(COALESCE(t1.c1, rt0.c0, vt2.c0, vt2.c0))));
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN rt0 ON ((((((((rt0.c0)AND(t1.c0)))OR(t1.c40)))OR(rt0.c2)))AND(t1.c40)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL))AND(COALESCE(t1.c1, rt0.c0, vt2.c0, vt2.c0))) WHERE (((((t1.c0)/(rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM t1 INDEXED BY i10, vt2 WHERE (((x'')<(CAST(t1.c0 AS REAL)))) ORDER BY ((t1.c0 COLLATE NOCASE) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1 INDEXED BY i10, vt2 ORDER BY ((t1.c0 COLLATE NOCASE) NOTNULL) DESC);
SELECT COUNT(*) FROM t1 INDEXED BY i10, vt2 WHERE (((x'')<(CAST(t1.c0 AS REAL)))) ORDER BY ((t1.c0 COLLATE NOCASE) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1 INDEXED BY i10, vt2 ORDER BY ((t1.c0 COLLATE NOCASE) NOTNULL) DESC);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt2 WHERE (t1.c0) ORDER BY LTRIM(CASE WHEN t1.c0 THEN vt2.c0 END, LOWER(DISTINCT t1.c40))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt2 ORDER BY LTRIM(CASE WHEN t1.c0 THEN vt2.c0 END, LOWER(DISTINCT t1.c40))  NULLS FIRST);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt2 WHERE (t1.c0) ORDER BY LTRIM(CASE WHEN t1.c0 THEN vt2.c0 END, LOWER(DISTINCT t1.c40))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1 NATURAL JOIN vt2 ORDER BY LTRIM(CASE WHEN t1.c0 THEN vt2.c0 END, LOWER(DISTINCT t1.c40))  NULLS FIRST);
SELECT COUNT(*) FROM t1 NATURAL JOIN vt2 WHERE (t1.c0) ORDER BY LTRIM(CASE WHEN t1.c0 THEN vt2.c0 END, LOWER(DISTINCT t1.c40))  NULLS FIRST;
SELECT * FROM rt0, vt2, t1 WHERE ('mT楕*\r!f');
SELECT SUM(count) FROM (SELECT ALL (('mT楕*\r!f') IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ('mT楕*\r!f');
SELECT SUM(count) FROM (SELECT ALL (('mT楕*\r!f') IS TRUE)  as count FROM rt0, vt2, t1);
SELECT * FROM rt0, vt2, t1 WHERE ('mT楕*\r!f');
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((LOWER(DISTINCT rt0.c0))GLOB(json_patch(rt0.c2, vt0.c0)))) ORDER BY (+ (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c0))GLOB(json_patch(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY (+ (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((LOWER(DISTINCT rt0.c0))GLOB(json_patch(rt0.c2, vt0.c0)))) ORDER BY (+ (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(DISTINCT rt0.c0))GLOB(json_patch(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY (+ (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((LOWER(DISTINCT rt0.c0))GLOB(json_patch(rt0.c2, vt0.c0)))) ORDER BY (+ (rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt2, t1 NATURAL JOIN rt0 WHERE ((NOT (((t1.c0) NOT NULL)))) ORDER BY ((((rt0.c0 IN ()), ((rt0.c2)LIKE(rt0.c0)), json_object(t1.c1, vt2.c0), HEX(rt0.c1), vt2.c0))!=(((((t1.c40)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c40 WHEN t1.c40 THEN t1.c0 WHEN rt0.c0 THEN x'a453' END, (((rt0.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c0))), ((t1.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT NULL)))) IS TRUE)  as count FROM vt2, t1 NATURAL JOIN rt0 ORDER BY ((((rt0.c0 IN ()), ((rt0.c2)LIKE(rt0.c0)), json_object(t1.c1, vt2.c0), HEX(rt0.c1), vt2.c0))<>(((((t1.c40)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c40 WHEN t1.c40 THEN t1.c0 WHEN rt0.c0 THEN x'a453' END, (((rt0.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c0))), ((t1.c0) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, t1 NATURAL JOIN rt0 WHERE ((NOT (((t1.c0) NOT NULL)))) ORDER BY ((((rt0.c0 IN ()), ((rt0.c2)LIKE(rt0.c0)), json_object(t1.c1, vt2.c0), HEX(rt0.c1), vt2.c0))!=(((((t1.c40)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c40 WHEN t1.c40 THEN t1.c0 WHEN rt0.c0 THEN x'a453' END, (((rt0.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c0))), ((t1.c0) ISNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT NULL)))) IS TRUE)  as count FROM vt2, t1 NATURAL JOIN rt0 ORDER BY ((((rt0.c0 IN ()), ((rt0.c2)LIKE(rt0.c0)), json_object(t1.c1, vt2.c0), HEX(rt0.c1), vt2.c0))<>(((((t1.c40)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c40 WHEN t1.c40 THEN t1.c0 WHEN rt0.c0 THEN x'a453' END, (((rt0.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c0))), ((t1.c0) ISNULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, t1 NATURAL JOIN rt0 WHERE ((NOT (((t1.c0) NOT NULL)))) ORDER BY ((((rt0.c0 IN ()), ((rt0.c2)LIKE(rt0.c0)), json_object(t1.c1, vt2.c0), HEX(rt0.c1), vt2.c0))!=(((((t1.c40)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), NULL COLLATE RTRIM, CASE WHEN t1.c1 THEN t1.c40 WHEN t1.c40 THEN t1.c0 WHEN rt0.c0 THEN x'a453' END, (((rt0.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c1, rt0.c1)) AND ((x'', rt0.c2, rt0.c0))), ((t1.c0) ISNULL)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c0) AND (vt2.c0))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t1.c0) AND (vt2.c0))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt2, t1);
SELECT ALL * FROM vt0, rt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c0) AND (vt2.c0))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (t1.c0) AND (vt2.c0))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED, vt2, t1);
SELECT ALL * FROM vt0, rt0, vt2, t1 WHERE (((((vt0.c0) BETWEEN (t1.c0) AND (vt2.c0))) BETWEEN (NULL) AND (rt0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, vt2, vt0, t1 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2)||(vt2.c0)) THEN ((rt0.c0)==(rt0.c0)) END) ORDER BY (((((((((t1.c40)AND(rt0.c2)))OR(t1.c1)))OR(t1.c0)))AND(rt0.c0)) IN ()), ((((rt0.c2)AND(x'')))AND(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2)||(vt2.c0)) THEN ((rt0.c0)=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt2, vt0, t1 ORDER BY (((((((((t1.c40)AND(rt0.c2)))OR(t1.c1)))OR(t1.c0)))AND(rt0.c0)) IN ()), ((((rt0.c2)AND(x'')))AND(((rt0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0, t1 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2)||(vt2.c0)) THEN ((rt0.c0)==(rt0.c0)) END) ORDER BY (((((((((t1.c40)AND(rt0.c2)))OR(t1.c1)))OR(t1.c0)))AND(rt0.c0)) IN ()), ((((rt0.c2)AND(x'')))AND(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2)||(vt2.c0)) THEN ((rt0.c0)=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt2, vt0, t1 ORDER BY (((((((((t1.c40)AND(rt0.c2)))OR(t1.c1)))OR(t1.c0)))AND(rt0.c0)) IN ()), ((((rt0.c2)AND(x'')))AND(((rt0.c0) NOT NULL)))  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0, t1 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2)||(vt2.c0)) THEN ((rt0.c0)==(rt0.c0)) END) ORDER BY (((((((((t1.c40)AND(rt0.c2)))OR(t1.c1)))OR(t1.c0)))AND(rt0.c0)) IN ()), ((((rt0.c2)AND(x'')))AND(((rt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (t1.c1) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (t1.c1) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (t1.c1) ORDER BY CAST(rt0.c0 AS BLOB) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt2, rt0, vt0, t1 WHERE (0.15011870417926942) ORDER BY (~ (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.15011870417926942) IS TRUE)  as count FROM vt2, rt0, vt0, t1 ORDER BY (~ (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0, t1 WHERE (0.15011870417926942) ORDER BY (~ (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.15011870417926942) IS TRUE)  as count FROM vt2, rt0, vt0, t1 ORDER BY (~ (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0, t1 WHERE (0.15011870417926942) ORDER BY (~ (((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt2 WHERE (COALESCE(DISTINCT (~ (NULL)), ((vt2.c0) NOT NULL), rt0.c0, CAST(rt0.c0 AS BLOB))) ORDER BY (CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 END IN ()) ASC, CASE (+ (vt2.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN TYPEOF(DISTINCT vt2.c0) WHEN ABS(rt0.c2) THEN (((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c0, '336167646', NULL))) WHEN CHANGES() THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ (NULL)), ((vt2.c0) NOT NULL), rt0.c0, CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt2 ORDER BY (CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 END IN ()) ASC, CASE (+ (vt2.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN TYPEOF(DISTINCT vt2.c0) WHEN ABS(rt0.c2) THEN (((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c0, '336167646', NULL))) WHEN CHANGES() THEN NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt2 WHERE (COALESCE(DISTINCT (~ (NULL)), ((vt2.c0) NOT NULL), rt0.c0, CAST(rt0.c0 AS BLOB))) ORDER BY (CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 END IN ()) ASC, CASE (+ (vt2.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN TYPEOF(DISTINCT vt2.c0) WHEN ABS(rt0.c2) THEN (((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c0, '336167646', NULL))) WHEN CHANGES() THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (~ (NULL)), ((vt2.c0) NOT NULL), rt0.c0, CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0, vt2 ORDER BY (CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 END IN ()) ASC, CASE (+ (vt2.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN TYPEOF(DISTINCT vt2.c0) WHEN ABS(rt0.c2) THEN (((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c0, '336167646', NULL))) WHEN CHANGES() THEN NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt2 WHERE (COALESCE(DISTINCT (~ (NULL)), ((vt2.c0) NOT NULL), rt0.c0, CAST(rt0.c0 AS BLOB))) ORDER BY (CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 END IN ()) ASC, CASE (+ (vt2.c0))  WHEN CAST(rt0.c2 AS INTEGER) THEN TYPEOF(DISTINCT vt2.c0) WHEN ABS(rt0.c2) THEN (((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c0, '336167646', NULL))) WHEN CHANGES() THEN NULL END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<<(0.7084260867853566)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)<<(0.7084260867853566))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<<(0.7084260867853566)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE BINARY)<<(0.7084260867853566))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<<(0.7084260867853566)));
SELECT * FROM vt0, vt2 INDEXED BY i10 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt0, vt2 INDEXED BY i10);
SELECT * FROM vt0, vt2 INDEXED BY i10 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt0, vt2 INDEXED BY i10);
SELECT * FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON '' WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON '');
SELECT * FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON '' WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON '');
SELECT * FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON '' WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (NULL);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c1 COLLATE NOCASE AS INTEGER) WHERE ((((((((((t1.c1 IN ()))OR(t1.c1 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((('-1474265826')>=('0.7323372380764298')))))AND((~ (t1.c40))))) ORDER BY ABS(DISTINCT '0.2396972208867526');
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c1 IN ()))OR(t1.c1 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((('-1474265826')>=('0.7323372380764298')))))AND((~ (t1.c40))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c1 COLLATE NOCASE AS INTEGER) ORDER BY ABS(DISTINCT '0.2396972208867526'));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c1 COLLATE NOCASE AS INTEGER) WHERE ((((((((((t1.c1 IN ()))OR(t1.c1 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((('-1474265826')>=('0.7323372380764298')))))AND((~ (t1.c40))))) ORDER BY ABS(DISTINCT '0.2396972208867526');
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c1 IN ()))OR(t1.c1 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((('-1474265826')>=('0.7323372380764298')))))AND((~ (t1.c40))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c1 COLLATE NOCASE AS INTEGER) ORDER BY ABS(DISTINCT '0.2396972208867526'));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CAST(t1.c1 COLLATE NOCASE AS INTEGER) WHERE ((((((((((t1.c1 IN ()))OR(t1.c1 COLLATE RTRIM)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR((('-1474265826')>=('0.7323372380764298')))))AND((~ (t1.c40))))) ORDER BY ABS(DISTINCT '0.2396972208867526');
SELECT * FROM rt0, vt2 WHERE ((- (((vt2.c0)IS(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c0)IS(vt2.c0))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE ((- (((vt2.c0)IS(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt2.c0)IS(vt2.c0))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE ((- (((vt2.c0)IS(vt2.c0)))));
SELECT COUNT(*) FROM t1, vt2 FULL OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))==(((rt0.c0)!=(t1.c1)))) LEFT OUTER JOIN vt0 ON x'' WHERE (((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())) ORDER BY CASE (NOT (rt0.c1))  WHEN ((t1.c1) ISNULL) THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 COLLATE NOCASE WHEN ((t1.c40)GLOB(rt0.c1)) THEN ((((((((t1.c0)AND(rt0.c0)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())) IS TRUE)  as count FROM t1, vt2 FULL OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))==(((rt0.c0)!=(t1.c1)))) LEFT OUTER JOIN vt0 ON x'' ORDER BY CASE (NOT (rt0.c1))  WHEN ((t1.c1) ISNULL) THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 COLLATE NOCASE WHEN ((t1.c40)GLOB(rt0.c1)) THEN ((((((((t1.c0)AND(rt0.c0)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) END ASC);
SELECT COUNT(*) FROM t1, vt2 FULL OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))==(((rt0.c0)!=(t1.c1)))) LEFT OUTER JOIN vt0 ON x'' WHERE (((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())) ORDER BY CASE (NOT (rt0.c1))  WHEN ((t1.c1) ISNULL) THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 COLLATE NOCASE WHEN ((t1.c40)GLOB(rt0.c1)) THEN ((((((((t1.c0)AND(rt0.c0)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))) IN ())) IS TRUE)  as count FROM t1, vt2 FULL OUTER JOIN rt0 ON (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))==(((rt0.c0)!=(t1.c1)))) LEFT OUTER JOIN vt0 ON x'' ORDER BY CASE (NOT (rt0.c1))  WHEN ((t1.c1) ISNULL) THEN rt0.c2 WHEN rt0.c0 THEN t1.c0 COLLATE NOCASE WHEN ((t1.c40)GLOB(rt0.c1)) THEN ((((((((t1.c0)AND(rt0.c0)))OR(t1.c1)))OR(rt0.c1)))OR(rt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c1) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((((t1.c40, t1.c0, t1.c40, x'', t1.c0)) NOT BETWEEN ((t1.c1, '', t1.c0, '-487262312', NULL)) AND ((t1.c40, 0.0783572190177505, t1.c0, t1.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((((t1.c40, t1.c0, t1.c40, x'', t1.c0)) NOT BETWEEN ((t1.c1, '', t1.c0, '-487262312', NULL)) AND ((t1.c40, 0.0783572190177505, t1.c0, t1.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c1) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((((t1.c40, t1.c0, t1.c40, x'', t1.c0)) NOT BETWEEN ((t1.c1, '', t1.c0, '-487262312', NULL)) AND ((t1.c40, 0.0783572190177505, t1.c0, t1.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((((t1.c40, t1.c0, t1.c40, x'', t1.c0)) NOT BETWEEN ((t1.c1, '', t1.c0, '-487262312', NULL)) AND ((t1.c40, 0.0783572190177505, t1.c0, t1.c1, t1.c0)))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c1) NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((((t1.c40, t1.c0, t1.c40, x'', t1.c0)) NOT BETWEEN ((t1.c1, '', t1.c0, '-487262312', NULL)) AND ((t1.c40, 0.0783572190177505, t1.c0, t1.c1, t1.c0))))));
SELECT * FROM vt0, t1, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)GLOB(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))))) ORDER BY (((~ (rt0.c0)))>>((t1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)GLOB(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((~ (rt0.c0)))>>((t1.c1 IN ()))));
SELECT * FROM vt0, t1, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)GLOB(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))))) ORDER BY (((~ (rt0.c0)))>>((t1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)GLOB(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY (((~ (rt0.c0)))>>((t1.c1 IN ()))));
SELECT * FROM vt0, t1, rt0 WHERE (((CASE WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN t1.c0 WHEN rt0.c1 THEN rt0.c1 END)GLOB(((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))))) ORDER BY (((~ (rt0.c0)))>>((t1.c1 IN ())));
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((('')|(vt2.c0))) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((('')|(vt2.c0))) ISNULL));
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((('')|(vt2.c0))) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((('')|(vt2.c0))) ISNULL));
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON (+ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) RIGHT OUTER JOIN vt0 ON (((('')|(vt2.c0))) ISNULL) WHERE ((- (((rt0.c2) NOTNULL))));
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ())) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) IN ()));
SELECT ALL * FROM rt0, t1, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL * FROM rt0, t1, vt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE ((((((((vt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(SQLITE_SOURCE_ID())))AND(NULL))) ORDER BY (((vt2.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))  NULLS LAST, '1009020403' ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(SQLITE_SOURCE_ID())))AND(NULL))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((vt2.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))  NULLS LAST, '1009020403' ASC, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE ((((((((vt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(SQLITE_SOURCE_ID())))AND(NULL))) ORDER BY (((vt2.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))  NULLS LAST, '1009020403' ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(SQLITE_SOURCE_ID())))AND(NULL))) IS TRUE)  as count FROM vt2, rt0 ORDER BY (((vt2.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))  NULLS LAST, '1009020403' ASC, rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0 WHERE ((((((((vt2.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(SQLITE_SOURCE_ID())))AND(NULL))) ORDER BY (((vt2.c0)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))  NULLS LAST, '1009020403' ASC, rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, t1 WHERE ((~ ((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt2.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt2, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, t1 WHERE ((~ ((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt2.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, vt2, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2, t1 WHERE ((~ ((vt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE ((- (NULL)));
SELECT * FROM t1, vt2 WHERE ((+ (t1.c0 COLLATE BINARY))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt2 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM t1, vt2 WHERE ((+ (t1.c0 COLLATE BINARY))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt2 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM t1, vt2 WHERE ((+ (t1.c0 COLLATE BINARY))) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((((0Xfffffffff10f05b0) ISNULL))-(CASE rt0.c2  WHEN t1.c1 THEN vt2.c0 ELSE t1.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xfffffffff10f05b0) ISNULL))-(CASE rt0.c2  WHEN t1.c1 THEN vt2.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 NOT INDEXED ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((((0Xfffffffff10f05b0) ISNULL))-(CASE rt0.c2  WHEN t1.c1 THEN vt2.c0 ELSE t1.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xfffffffff10f05b0) ISNULL))-(CASE rt0.c2  WHEN t1.c1 THEN vt2.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 NOT INDEXED ORDER BY x''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt2, vt0 WHERE (((((0Xfffffffff10f05b0) ISNULL))-(CASE rt0.c2  WHEN t1.c1 THEN vt2.c0 ELSE t1.c0 END))) ORDER BY x''  NULLS FIRST;
SELECT * FROM t1, vt0, vt2 WHERE (0Xffffffffe2f4f798);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe2f4f798) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT * FROM t1, vt0, vt2 WHERE (0Xffffffffe2f4f798);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe2f4f798) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT * FROM t1, vt0, vt2 WHERE (0Xffffffffe2f4f798);
SELECT ALL * FROM rt0 WHERE (LIKE(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), (((rt0.c0))<>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), (((rt0.c0))!=((rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKE(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), (((rt0.c0))<>((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), (((rt0.c0))!=((rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKE(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)), (((rt0.c0))<>((rt0.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL COLLATE BINARY)||((- (t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)||((- (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL COLLATE BINARY)||((- (t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)||((- (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((NULL COLLATE BINARY)||((- (t1.c1)))));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS INTEGER)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)/(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS INTEGER)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)/(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c2)/(rt0.c0)) AS INTEGER)) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE (((rt0.c2 COLLATE BINARY)>>(((rt0.c1) NOT BETWEEN (t1.c0) AND (0.19934691834502016))))) ORDER BY ((((vt2.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))<<(((vt2.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))), ((((((rt0.c2)AND(vt2.c0)))AND(vt0.c0))) BETWEEN (((0.8024447510708926) BETWEEN (rt0.c1) AND (vt0.c0))) AND ((((vt2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c40)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)>>(((rt0.c1) NOT BETWEEN (t1.c0) AND (0.19934691834502016))))) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY ((((vt2.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))<<(((vt2.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))), ((((((rt0.c2)AND(vt2.c0)))AND(vt0.c0))) BETWEEN (((0.8024447510708926) BETWEEN (rt0.c1) AND (vt0.c0))) AND ((((vt2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c40)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE (((rt0.c2 COLLATE BINARY)>>(((rt0.c1) NOT BETWEEN (t1.c0) AND (0.19934691834502016))))) ORDER BY ((((vt2.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))<<(((vt2.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))), ((((((rt0.c2)AND(vt2.c0)))AND(vt0.c0))) BETWEEN (((0.8024447510708926) BETWEEN (rt0.c1) AND (vt0.c0))) AND ((((vt2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c40)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)>>(((rt0.c1) NOT BETWEEN (t1.c0) AND (0.19934691834502016))))) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY ((((vt2.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))<<(((vt2.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))), ((((((rt0.c2)AND(vt2.c0)))AND(vt0.c0))) BETWEEN (((0.8024447510708926) BETWEEN (rt0.c1) AND (vt0.c0))) AND ((((vt2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c40)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE (((rt0.c2 COLLATE BINARY)>>(((rt0.c1) NOT BETWEEN (t1.c0) AND (0.19934691834502016))))) ORDER BY ((((vt2.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)))<<(((vt2.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))), ((((((rt0.c2)AND(vt2.c0)))AND(vt0.c0))) BETWEEN (((0.8024447510708926) BETWEEN (rt0.c1) AND (vt0.c0))) AND ((((vt2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c40)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY CAST((- (t1.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)||(t1.c1)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CAST((- (t1.c1)) AS INTEGER) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY CAST((- (t1.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)||(t1.c1)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CAST((- (t1.c1)) AS INTEGER) ASC);
SELECT ALL * FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY CAST((- (t1.c1)) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((((vt2.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((((vt2.c0) ISNULL))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((((vt2.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((((vt2.c0) ISNULL))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((((vt2.c0) ISNULL)))));
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE (((((t1.c1) IS FALSE))GLOB((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))))) ORDER BY (~ (vt2.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS FALSE))GLOB((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (~ (vt2.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE (((((t1.c1) IS FALSE))GLOB((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))))) ORDER BY (~ (vt2.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c1) IS FALSE))GLOB((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (~ (vt2.c0 COLLATE RTRIM)) DESC);
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE (((((t1.c1) IS FALSE))GLOB((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0)))))) ORDER BY (~ (vt2.c0 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0, vt2 WHERE ((((CHANGES(), ((vt2.c0)>=(vt0.c0)), CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))<=((((vt2.c0)>=(vt0.c0)), vt0.c0, ((vt0.c0)%(vt2.c0)))))) ORDER BY 'kM' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CHANGES(), ((vt2.c0)>=(vt0.c0)), CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))<=((((vt2.c0)>=(vt0.c0)), vt0.c0, ((vt0.c0)%(vt2.c0)))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY 'kM' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE ((((CHANGES(), ((vt2.c0)>=(vt0.c0)), CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))<=((((vt2.c0)>=(vt0.c0)), vt0.c0, ((vt0.c0)%(vt2.c0)))))) ORDER BY 'kM' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CHANGES(), ((vt2.c0)>=(vt0.c0)), CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))<=((((vt2.c0)>=(vt0.c0)), vt0.c0, ((vt0.c0)%(vt2.c0)))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY 'kM' ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE ((((CHANGES(), ((vt2.c0)>=(vt0.c0)), CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))<=((((vt2.c0)>=(vt0.c0)), vt0.c0, ((vt0.c0)%(vt2.c0)))))) ORDER BY 'kM' ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((NULL)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE (((NULL)<<(CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c1 END)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)<(x'')))) WHERE ((((((rt0.c0)%(rt0.c2))))==((rt0.c1 COLLATE BINARY)))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))  NULLS FIRST, (((((+ (rt0.c1)))AND((rt0.c2 IN ()))))AND((rt0.c2 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)%(rt0.c2))))==((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)<(x'')))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))  NULLS FIRST, (((((+ (rt0.c1)))AND((rt0.c2 IN ()))))AND((rt0.c2 IN (vt0.c0)))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)<(x'')))) WHERE ((((((rt0.c0)%(rt0.c2))))==((rt0.c1 COLLATE BINARY)))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))  NULLS FIRST, (((((+ (rt0.c1)))AND((rt0.c2 IN ()))))AND((rt0.c2 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)%(rt0.c2))))==((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c0)<(x'')))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))))  NULLS FIRST, (((((+ (rt0.c1)))AND((rt0.c2 IN ()))))AND((rt0.c2 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10, vt0 INDEXED BY i10 WHERE ((((+ (t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c1))) NOTNULL)) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0 INDEXED BY i10);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10, vt0 INDEXED BY i10 WHERE ((((+ (t1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c1))) NOTNULL)) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0 INDEXED BY i10);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10 WHERE (((UPPER(t1.c0)) BETWEEN ((t1.c0 IN (t1.c1))) AND (((t1.c1)|('')))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t1.c0)) BETWEEN ((t1.c0 IN (t1.c1))) AND (((t1.c1)|(''))))) IS TRUE)  as count FROM t1 INDEXED BY i10);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i10 WHERE (((UPPER(t1.c0)) BETWEEN ((t1.c0 IN (t1.c1))) AND (((t1.c1)|('')))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(t1.c0)) BETWEEN ((t1.c0 IN (t1.c1))) AND (((t1.c1)|(''))))) IS TRUE)  as count FROM t1 INDEXED BY i10);
SELECT * FROM vt0, t1, rt0, vt2 WHERE (CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c40)) THEN 0.7570922405532264 WHEN (((t1.c40))>=((t1.c40))) THEN (((t1.c1, vt2.c0, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c0, t1.c40)) AND ((rt0.c0, t1.c40, rt0.c0))) WHEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR('-459916754')))OR(t1.c40)) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c40)) THEN 0.7570922405532264 WHEN (((t1.c40))>=((t1.c40))) THEN (((t1.c1, vt2.c0, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c0, t1.c40)) AND ((rt0.c0, t1.c40, rt0.c0))) WHEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR('-459916754')))OR(t1.c40)) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0, t1, rt0, vt2);
SELECT * FROM vt0, t1, rt0, vt2 WHERE (CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c40)) THEN 0.7570922405532264 WHEN (((t1.c40))>=((t1.c40))) THEN (((t1.c1, vt2.c0, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c0, t1.c40)) AND ((rt0.c0, t1.c40, rt0.c0))) WHEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR('-459916754')))OR(t1.c40)) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c40)) THEN 0.7570922405532264 WHEN (((t1.c40))>=((t1.c40))) THEN (((t1.c1, vt2.c0, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c0, t1.c40)) AND ((rt0.c0, t1.c40, rt0.c0))) WHEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR('-459916754')))OR(t1.c40)) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0, t1, rt0, vt2);
SELECT * FROM vt0, t1, rt0, vt2 WHERE (CASE WHEN ((rt0.c1) BETWEEN (t1.c0) AND (t1.c40)) THEN 0.7570922405532264 WHEN (((t1.c40))>=((t1.c40))) THEN (((t1.c1, vt2.c0, t1.c1)) NOT BETWEEN ((rt0.c0, t1.c0, t1.c40)) AND ((rt0.c0, t1.c40, rt0.c0))) WHEN ((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR('-459916754')))OR(t1.c40)) THEN CAST(rt0.c1 AS REAL) END);
SELECT * FROM vt2 WHERE ((((('')OR(vt2.c0)))OR(((vt2.c0)>>(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(vt2.c0)))OR(((vt2.c0)>>(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((('')OR(vt2.c0)))OR(((vt2.c0)>>(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(vt2.c0)))OR(((vt2.c0)>>(vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((('')OR(vt2.c0)))OR(((vt2.c0)>>(vt2.c0)))));
SELECT COUNT(*) FROM vt2, rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT COUNT(*) FROM vt2, rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC));
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c0)>=(t1.c0)) IN ())) ORDER BY (t1.c1 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>=(t1.c0)) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, t1, vt0 ORDER BY (t1.c1 COLLATE RTRIM IN ()) ASC);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c0)>=(t1.c0)) IN ())) ORDER BY (t1.c1 COLLATE RTRIM IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)>=(t1.c0)) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, t1, vt0 ORDER BY (t1.c1 COLLATE RTRIM IN ()) ASC);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c0)>=(t1.c0)) IN ())) ORDER BY (t1.c1 COLLATE RTRIM IN ()) ASC;
SELECT COUNT(*) FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON (((((((x'ffbb')) BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(CHAR(vt0.c0, rt0.c2, rt0.c2))))AND(((rt0.c2) IS FALSE))) WHERE ((((vt2.c0, rt0.c1, x'')) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN 0.2966246039598699 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, rt0.c1)) AND ((PRINTF('/t'), (- (vt2.c0)), vt2.c0 COLLATE NOCASE)))) ORDER BY CAST(UPPER(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((CAST(rt0.c1 AS TEXT))AND((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, rt0.c1, x'')) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN 0.2966246039598699 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, rt0.c1)) AND ((PRINTF('/t'), (- (vt2.c0)), vt2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON (((((((x'ffbb')) BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(CHAR(vt0.c0, rt0.c2, rt0.c2))))AND(((rt0.c2) IS FALSE))) ORDER BY CAST(UPPER(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((CAST(rt0.c1 AS TEXT))AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON (((((((x'ffbb')) BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(CHAR(vt0.c0, rt0.c2, rt0.c2))))AND(((rt0.c2) IS FALSE))) WHERE ((((vt2.c0, rt0.c1, x'')) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN 0.2966246039598699 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, rt0.c1)) AND ((PRINTF('/t'), (- (vt2.c0)), vt2.c0 COLLATE NOCASE)))) ORDER BY CAST(UPPER(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((CAST(rt0.c1 AS TEXT))AND((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, rt0.c1, x'')) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN 0.2966246039598699 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, rt0.c1)) AND ((PRINTF('/t'), (- (vt2.c0)), vt2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON (((((((x'ffbb')) BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(CHAR(vt0.c0, rt0.c2, rt0.c2))))AND(((rt0.c2) IS FALSE))) ORDER BY CAST(UPPER(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((CAST(rt0.c1 AS TEXT))AND((~ (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt2 RIGHT OUTER JOIN vt0 ON (((((((x'ffbb')) BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(CHAR(vt0.c0, rt0.c2, rt0.c2))))AND(((rt0.c2) IS FALSE))) WHERE ((((vt2.c0, rt0.c1, x'')) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN 0.2966246039598699 THEN rt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE NULL END, rt0.c1)) AND ((PRINTF('/t'), (- (vt2.c0)), vt2.c0 COLLATE NOCASE)))) ORDER BY CAST(UPPER(DISTINCT rt0.c2) AS BLOB)  NULLS LAST, ((CAST(rt0.c1 AS TEXT))AND((~ (rt0.c2))));
SELECT COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((rt0.c1 IN (rt0.c1, t1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c1))) ORDER BY t1.c0 DESC, ((((json_patch(t1.c1, t1.c40))OR(t1.c40)))OR(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, json_array_length(('1649999322' IN ()), (((rt0.c2))<((t1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, t1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c1))) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY t1.c0 DESC, ((((json_patch(t1.c1, t1.c40))OR(t1.c40)))OR(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, json_array_length(('1649999322' IN ()), (((rt0.c2))<((t1.c1)))));
SELECT COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((rt0.c1 IN (rt0.c1, t1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c1))) ORDER BY t1.c0 DESC, ((((json_patch(t1.c1, t1.c40))OR(t1.c40)))OR(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, json_array_length(('1649999322' IN ()), (((rt0.c2))<((t1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1, t1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c1))) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY t1.c0 DESC, ((((json_patch(t1.c1, t1.c40))OR(t1.c40)))OR(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, json_array_length(('1649999322' IN ()), (((rt0.c2))<((t1.c1)))));
SELECT COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((rt0.c1 IN (rt0.c1, t1.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (t1.c1))) ORDER BY t1.c0 DESC, ((((json_patch(t1.c1, t1.c40))OR(t1.c40)))OR(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, json_array_length(('1649999322' IN ()), (((rt0.c2))<((t1.c1))));
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((t1.c40, vt0.c0, 1.391864446E9)) NOT BETWEEN ((((NULL)||(vt2.c0)), (((t1.c1, t1.c40, t1.c0)) BETWEEN ((t1.c0, '-1735532487', x'')) AND ((vt0.c0, vt0.c0, t1.c0))), (((vt2.c0)) NOT BETWEEN ((t1.c40)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (((t1.c40, t1.c1, t1.c0))<=((-374177969, t1.c1, vt2.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY (((t1.c40, vt0.c0, 1.391864446E9)) NOT BETWEEN ((((NULL)||(vt2.c0)), (((t1.c1, t1.c40, t1.c0)) BETWEEN ((t1.c0, '-1735532487', x'')) AND ((vt0.c0, vt0.c0, t1.c0))), (((vt2.c0)) NOT BETWEEN ((t1.c40)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (((t1.c40, t1.c1, t1.c0))<=((-374177969, t1.c1, vt2.c0)))))) ASC);
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((t1.c40, vt0.c0, 1.391864446E9)) NOT BETWEEN ((((NULL)||(vt2.c0)), (((t1.c1, t1.c40, t1.c0)) BETWEEN ((t1.c0, '-1735532487', x'')) AND ((vt0.c0, vt0.c0, t1.c0))), (((vt2.c0)) NOT BETWEEN ((t1.c40)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (((t1.c40, t1.c1, t1.c0))<=((-374177969, t1.c1, vt2.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY (((t1.c40, vt0.c0, 1.391864446E9)) NOT BETWEEN ((((NULL)||(vt2.c0)), (((t1.c1, t1.c40, t1.c0)) BETWEEN ((t1.c0, '-1735532487', x'')) AND ((vt0.c0, vt0.c0, t1.c0))), (((vt2.c0)) NOT BETWEEN ((t1.c40)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (((t1.c40, t1.c1, t1.c0))<=((-374177969, t1.c1, vt2.c0)))))) ASC);
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (((t1.c40, vt0.c0, 1.391864446E9)) NOT BETWEEN ((((NULL)||(vt2.c0)), (((t1.c1, t1.c40, t1.c0)) BETWEEN ((t1.c0, '-1735532487', x'')) AND ((vt0.c0, vt0.c0, t1.c0))), (((vt2.c0)) NOT BETWEEN ((t1.c40)) AND ((t1.c0))))) AND ((t1.c0 COLLATE NOCASE, t1.c0 COLLATE RTRIM, (((t1.c40, t1.c1, t1.c0))<=((-374177969, t1.c1, vt2.c0)))))) ASC;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)&(t1.c1)))=((t1.c40 IN ()))) RIGHT OUTER JOIN vt2 ON CASE t1.c0 COLLATE NOCASE  WHEN vt2.c0 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c2)) ELSE -725549552 COLLATE BINARY END WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN (rt0.c2)))==(((((((((((((rt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(t1.c40)))AND(x'')))AND(t1.c40)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)&(t1.c1)))=((t1.c40 IN ()))) RIGHT OUTER JOIN vt2 ON CASE t1.c0 COLLATE NOCASE  WHEN vt2.c0 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c2)) ELSE -725549552 COLLATE BINARY END ORDER BY (((rt0.c2 IN (rt0.c2)))==(((((((((((((rt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(t1.c40)))AND(x'')))AND(t1.c40)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)&(t1.c1)))=((t1.c40 IN ()))) RIGHT OUTER JOIN vt2 ON CASE t1.c0 COLLATE NOCASE  WHEN vt2.c0 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c2)) ELSE -725549552 COLLATE BINARY END WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN (rt0.c2)))==(((((((((((((rt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(t1.c40)))AND(x'')))AND(t1.c40)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)&(t1.c1)))=((t1.c40 IN ()))) RIGHT OUTER JOIN vt2 ON CASE t1.c0 COLLATE NOCASE  WHEN vt2.c0 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c2)) ELSE -725549552 COLLATE BINARY END ORDER BY (((rt0.c2 IN (rt0.c2)))==(((((((((((((rt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(t1.c40)))AND(x'')))AND(t1.c40)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((((NULL)&(t1.c1)))=((t1.c40 IN ()))) RIGHT OUTER JOIN vt2 ON CASE t1.c0 COLLATE NOCASE  WHEN vt2.c0 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c2)) ELSE -725549552 COLLATE BINARY END WHERE ((- (rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c2 IN (rt0.c2)))==(((((((((((((rt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(t1.c40)))AND(x'')))AND(t1.c40)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 NOT INDEXED WHERE (((HEX(DISTINCT t1.c0))>(CASE WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((DATETIME(t1.c1, vt2.c0, rt0.c1)) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((rt0.c0, vt0.c0, t1.c40))>((vt0.c0, rt0.c0, t1.c40))))), ((rt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t1.c0))>(CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY ((DATETIME(t1.c1, vt2.c0, rt0.c1)) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((rt0.c0, vt0.c0, t1.c40))>((vt0.c0, rt0.c0, t1.c40))))), ((rt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 NOT INDEXED WHERE (((HEX(DISTINCT t1.c0))>(CASE WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((DATETIME(t1.c1, vt2.c0, rt0.c1)) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((rt0.c0, vt0.c0, t1.c40))>((vt0.c0, rt0.c0, t1.c40))))), ((rt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT t1.c0))>(CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY ((DATETIME(t1.c1, vt2.c0, rt0.c1)) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((rt0.c0, vt0.c0, t1.c40))>((vt0.c0, rt0.c0, t1.c40))))), ((rt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 NOT INDEXED WHERE (((HEX(DISTINCT t1.c0))>(CASE WHEN rt0.c0 THEN rt0.c0 END))) ORDER BY ((DATETIME(t1.c1, vt2.c0, rt0.c1)) NOT BETWEEN (CAST(t1.c0 AS INTEGER)) AND ((((rt0.c0, vt0.c0, t1.c40))>((vt0.c0, rt0.c0, t1.c40))))), ((rt0.c0 IN (vt0.c0)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (HEX((t1.c40 IN ()))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c40) BETWEEN (t1.c40) AND (t1.c1))) AND (((t1.c1)<<(t1.c40))));
SELECT SUM(count) FROM (SELECT ((HEX((t1.c40 IN ()))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c40) BETWEEN (t1.c40) AND (t1.c1))) AND (((t1.c1)<<(t1.c40)))));
SELECT COUNT(*) FROM t1 WHERE (HEX((t1.c40 IN ()))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c40) BETWEEN (t1.c40) AND (t1.c1))) AND (((t1.c1)<<(t1.c40))));
SELECT SUM(count) FROM (SELECT ((HEX((t1.c40 IN ()))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c40) BETWEEN (t1.c40) AND (t1.c1))) AND (((t1.c1)<<(t1.c40)))));
SELECT COUNT(*) FROM t1 WHERE (HEX((t1.c40 IN ()))) ORDER BY (((t1.c0 IN ())) NOT BETWEEN (((t1.c40) BETWEEN (t1.c40) AND (t1.c1))) AND (((t1.c1)<<(t1.c40))));
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))=(((vt0.c0 IN ())))) INNER JOIN rt0 ON LIKE(((rt0.c1)>=(t1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), '5') FULL OUTER JOIN t1 ON ((((UPPER(t1.c40))OR(((vt0.c0)/(t1.c40)))))AND(((rt0.c0)%(rt0.c1)))) WHERE (((CASE WHEN t1.c1 THEN rt0.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN rt0.c1 END) IS TRUE)) ORDER BY ((CAST(t1.c40 AS BLOB))>>(((rt0.c1) NOT BETWEEN (t1.c40) AND (NULL)))) DESC, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN rt0.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))=(((vt0.c0 IN ())))) INNER JOIN rt0 ON LIKE(((rt0.c1)>=(t1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), '5') FULL OUTER JOIN t1 ON ((((UPPER(t1.c40))OR(((vt0.c0)/(t1.c40)))))AND(((rt0.c0)%(rt0.c1)))) ORDER BY ((CAST(t1.c40 AS BLOB))>>(((rt0.c1) NOT BETWEEN (t1.c40) AND (NULL)))) DESC, t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))=(((vt0.c0 IN ())))) INNER JOIN rt0 ON LIKE(((rt0.c1)>=(t1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), '5') FULL OUTER JOIN t1 ON ((((UPPER(t1.c40))OR(((vt0.c0)/(t1.c40)))))AND(((rt0.c0)%(rt0.c1)))) WHERE (((CASE WHEN t1.c1 THEN rt0.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN rt0.c1 END) IS TRUE)) ORDER BY ((CAST(t1.c40 AS BLOB))>>(((rt0.c1) NOT BETWEEN (t1.c40) AND (NULL)))) DESC, t1.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c1 THEN rt0.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN rt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))=(((vt0.c0 IN ())))) INNER JOIN rt0 ON LIKE(((rt0.c1)>=(t1.c1)), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), '5') FULL OUTER JOIN t1 ON ((((UPPER(t1.c40))OR(((vt0.c0)/(t1.c40)))))AND(((rt0.c0)%(rt0.c1)))) ORDER BY ((CAST(t1.c40 AS BLOB))>>(((rt0.c1) NOT BETWEEN (t1.c40) AND (NULL)))) DESC, t1.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1, vt2 WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0, t1, vt2);
SELECT ALL COUNT(*) FROM rt0, t1, vt2 WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM rt0, t1, vt2);
SELECT ALL COUNT(*) FROM rt0, t1, vt2 WHERE (((((rt0.c0) IS TRUE)) NOT NULL));
SELECT * FROM t1 WHERE (UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (UNLIKELY(DISTINCT t1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((~ (CASE WHEN t1.c0 THEN 0.21815299491019202 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t1.c0 THEN 0.21815299491019202 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((~ (CASE WHEN t1.c0 THEN 0.21815299491019202 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN t1.c0 THEN 0.21815299491019202 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((~ (CASE WHEN t1.c0 THEN 0.21815299491019202 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL COLLATE NOCASE);
SELECT * FROM t1 CROSS JOIN vt0 ON (vt0.c0 IN ()) WHERE (((((t1.c0))<((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<((t1.c0))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (vt0.c0 IN ()));
SELECT * FROM t1 CROSS JOIN vt0 ON (vt0.c0 IN ()) WHERE (((((t1.c0))<((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<((t1.c0))) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (vt0.c0 IN ()));
SELECT * FROM t1 CROSS JOIN vt0 ON (vt0.c0 IN ()) WHERE (((((t1.c0))<((t1.c0))) IN ()));
SELECT * FROM t1 WHERE (NULLIF(CAST(t1.c1 AS BLOB), ((t1.c40)>(t1.c40)))) ORDER BY (((t1.c40)) NOT BETWEEN (((((t1.c40)) BETWEEN ((t1.c0)) AND ((''))))) AND ((CAST(t1.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(t1.c1 AS BLOB), ((t1.c40)>(t1.c40)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c40)) NOT BETWEEN (((((t1.c40)) BETWEEN ((t1.c0)) AND ((''))))) AND ((CAST(t1.c0 AS BLOB))))  NULLS FIRST);
SELECT * FROM t1 WHERE (NULLIF(CAST(t1.c1 AS BLOB), ((t1.c40)>(t1.c40)))) ORDER BY (((t1.c40)) NOT BETWEEN (((((t1.c40)) BETWEEN ((t1.c0)) AND ((''))))) AND ((CAST(t1.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(t1.c1 AS BLOB), ((t1.c40)>(t1.c40)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c40)) NOT BETWEEN (((((t1.c40)) BETWEEN ((t1.c0)) AND ((''))))) AND ((CAST(t1.c0 AS BLOB))))  NULLS FIRST);
SELECT * FROM t1 WHERE (NULLIF(CAST(t1.c1 AS BLOB), ((t1.c40)>(t1.c40)))) ORDER BY (((t1.c40)) NOT BETWEEN (((((t1.c40)) BETWEEN ((t1.c0)) AND ((''))))) AND ((CAST(t1.c0 AS BLOB))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) BETWEEN ((((('-9223372036854775808')AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END))<=((((vt0.c0)%(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((((('-9223372036854775808')AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END))<=((((vt0.c0)%(vt2.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) BETWEEN ((((('-9223372036854775808')AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END))<=((((vt0.c0)%(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ((((('-9223372036854775808')AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END))<=((((vt0.c0)%(vt2.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (((vt0.c0) BETWEEN ((((('-9223372036854775808')AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0))))) ORDER BY (((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END))<=((((vt0.c0)%(vt2.c0)))));
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0)))) ISNULL)  NULLS LAST, ((((~ (rt0.c1)), json_remove(vt2.c0, t1.c40, rt0.c1, rt0.c2), (NOT (t1.c1))))<((((t1.c0) NOT BETWEEN (NULL) AND (vt2.c0)), ((vt2.c0) BETWEEN (NULL) AND (x'')), ((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0)))) ISNULL)  NULLS LAST, ((((~ (rt0.c1)), json_remove(vt2.c0, t1.c40, rt0.c1, rt0.c2), (NOT (t1.c1))))<((((t1.c0) NOT BETWEEN (NULL) AND (vt2.c0)), ((vt2.c0) BETWEEN (NULL) AND (x'')), ((rt0.c2) ISNULL)))));
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0)))) ISNULL)  NULLS LAST, ((((~ (rt0.c1)), json_remove(vt2.c0, t1.c40, rt0.c1, rt0.c2), (NOT (t1.c1))))<((((t1.c0) NOT BETWEEN (NULL) AND (vt2.c0)), ((vt2.c0) BETWEEN (NULL) AND (x'')), ((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0)))) ISNULL)  NULLS LAST, ((((~ (rt0.c1)), json_remove(vt2.c0, t1.c40, rt0.c1, rt0.c2), (NOT (t1.c1))))<((((t1.c0) NOT BETWEEN (NULL) AND (vt2.c0)), ((vt2.c0) BETWEEN (NULL) AND (x'')), ((rt0.c2) ISNULL)))));
SELECT ALL * FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN ((NULL)) AND ((((rt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))) ORDER BY (((((t1.c40)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0)))) ISNULL)  NULLS LAST, ((((~ (rt0.c1)), json_remove(vt2.c0, t1.c40, rt0.c1, rt0.c2), (NOT (t1.c1))))<((((t1.c0) NOT BETWEEN (NULL) AND (vt2.c0)), ((vt2.c0) BETWEEN (NULL) AND (x'')), ((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM t1, vt0, rt0, vt2);
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE (t1.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<>(((0.5245503958399304) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))AND('0.6982751229011368' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))!=(((0.5245503958399304) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))AND('0.6982751229011368' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<>(((0.5245503958399304) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))AND('0.6982751229011368' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))!=(((0.5245503958399304) BETWEEN (vt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))AND('0.6982751229011368' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))<>(((0.5245503958399304) BETWEEN (vt0.c0) AND (NULL))))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS INTEGER))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))AND('0.6982751229011368' COLLATE NOCASE));
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE CASE x''  WHEN t1.c0 THEN t1.c0 END  WHEN CAST(t1.c40 AS REAL) THEN rt0.c1 ELSE ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c1)) END WHERE (GLOB(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c40 IN ()))) ORDER BY CASE (~ (x'9b65272d'))  WHEN ((rt0.c1)>(rt0.c1)) THEN t1.c0 COLLATE BINARY WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(t1.c40 AS INTEGER) THEN rt0.c1 END ASC  NULLS FIRST, CAST(((((t1.c40)OR(t1.c40)))AND(rt0.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((GLOB(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c40 IN ()))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE CASE x''  WHEN t1.c0 THEN t1.c0 END  WHEN CAST(t1.c40 AS REAL) THEN rt0.c1 ELSE ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c1)) END ORDER BY CASE (~ (x'9b65272d'))  WHEN ((rt0.c1)>(rt0.c1)) THEN t1.c0 COLLATE BINARY WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(t1.c40 AS INTEGER) THEN rt0.c1 END ASC  NULLS FIRST, CAST(((((t1.c40)OR(t1.c40)))AND(rt0.c2)) AS NUMERIC) DESC);
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE CASE x''  WHEN t1.c0 THEN t1.c0 END  WHEN CAST(t1.c40 AS REAL) THEN rt0.c1 ELSE ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c1)) END WHERE (GLOB(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c40 IN ()))) ORDER BY CASE (~ (x'9b65272d'))  WHEN ((rt0.c1)>(rt0.c1)) THEN t1.c0 COLLATE BINARY WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(t1.c40 AS INTEGER) THEN rt0.c1 END ASC  NULLS FIRST, CAST(((((t1.c40)OR(t1.c40)))AND(rt0.c2)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((GLOB(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c40 IN ()))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE CASE x''  WHEN t1.c0 THEN t1.c0 END  WHEN CAST(t1.c40 AS REAL) THEN rt0.c1 ELSE ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c1)) END ORDER BY CASE (~ (x'9b65272d'))  WHEN ((rt0.c1)>(rt0.c1)) THEN t1.c0 COLLATE BINARY WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(t1.c40 AS INTEGER) THEN rt0.c1 END ASC  NULLS FIRST, CAST(((((t1.c40)OR(t1.c40)))AND(rt0.c2)) AS NUMERIC) DESC);
SELECT ALL * FROM t1 INNER JOIN rt0 ON CASE CASE x''  WHEN t1.c0 THEN t1.c0 END  WHEN CAST(t1.c40 AS REAL) THEN rt0.c1 ELSE ((((((((rt0.c1)OR(x'')))AND(rt0.c2)))OR(t1.c0)))OR(rt0.c1)) END WHERE (GLOB(((t1.c1) BETWEEN (rt0.c1) AND (rt0.c1)), (t1.c40 IN ()))) ORDER BY CASE (~ (x'9b65272d'))  WHEN ((rt0.c1)>(rt0.c1)) THEN t1.c0 COLLATE BINARY WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(t1.c40 AS INTEGER) THEN rt0.c1 END ASC  NULLS FIRST, CAST(((((t1.c40)OR(t1.c40)))AND(rt0.c2)) AS NUMERIC) DESC;
SELECT ALL * FROM vt0, vt2, t1 WHERE (HEX((vt2.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((vt2.c0 IN ()))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL * FROM vt0, vt2, t1 WHERE (HEX((vt2.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((vt2.c0 IN ()))) IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL * FROM vt0, vt2, t1 WHERE (HEX((vt2.c0 IN ())));
SELECT * FROM t1 NOT INDEXED, vt2 WHERE (((t1.c1) NOT BETWEEN ((vt2.c0 IN ())) AND ('-1420529649')));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN ((vt2.c0 IN ())) AND ('-1420529649'))) IS TRUE)  as count FROM t1, vt2);
SELECT * FROM t1 NOT INDEXED, vt2 WHERE (((t1.c1) NOT BETWEEN ((vt2.c0 IN ())) AND ('-1420529649')));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN ((vt2.c0 IN ())) AND ('-1420529649'))) IS TRUE)  as count FROM t1, vt2);
SELECT * FROM t1 NOT INDEXED, vt2 WHERE (((t1.c1) NOT BETWEEN ((vt2.c0 IN ())) AND ('-1420529649')));
SELECT ALL * FROM vt0, rt0, t1, vt2 WHERE (CASE vt2.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 'cztc[ TNv' WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN '1734157979' WHEN t1.c40 THEN vt2.c0 ELSE t1.c40 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 'cztc[ TNv' WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN '1734157979' WHEN t1.c40 THEN vt2.c0 ELSE t1.c40 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, vt2);
SELECT ALL * FROM vt0, rt0, t1, vt2 WHERE (CASE vt2.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 'cztc[ TNv' WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN '1734157979' WHEN t1.c40 THEN vt2.c0 ELSE t1.c40 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt2.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 'cztc[ TNv' WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN '1734157979' WHEN t1.c40 THEN vt2.c0 ELSE t1.c40 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, vt2);
SELECT ALL * FROM vt0, rt0, t1, vt2 WHERE (CASE vt2.c0  WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN 'cztc[ TNv' WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN '1734157979' WHEN t1.c40 THEN vt2.c0 ELSE t1.c40 END COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE ((((((t1.c40, t1.c0, t1.c40))>((t1.c40, t1.c1, rt0.c1)))) NOT BETWEEN (((NULL)GLOB(t1.c40))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((t1.c0)IS NOT(vt2.c0)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c40, t1.c0, t1.c40))>((t1.c40, t1.c1, rt0.c1)))) NOT BETWEEN (((NULL)GLOB(t1.c40))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t1, vt0, rt0, vt2 ORDER BY ((t1.c0)IS NOT(vt2.c0)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE ((((((t1.c40, t1.c0, t1.c40))>((t1.c40, t1.c1, rt0.c1)))) NOT BETWEEN (((NULL)GLOB(t1.c40))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((t1.c0)IS NOT(vt2.c0)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c40, t1.c0, t1.c40))>((t1.c40, t1.c1, rt0.c1)))) NOT BETWEEN (((NULL)GLOB(t1.c40))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM t1, vt0, rt0, vt2 ORDER BY ((t1.c0)IS NOT(vt2.c0)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0, rt0, vt2 WHERE ((((((t1.c40, t1.c0, t1.c40))>((t1.c40, t1.c1, rt0.c1)))) NOT BETWEEN (((NULL)GLOB(t1.c40))) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY ((t1.c0)IS NOT(vt2.c0)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((t1.c0)LIKE(t1.c1))) BETWEEN ('FALSE') AND (((((((((t1.c0)AND(vt0.c0)))OR(t1.c40)))AND('2015708000')))AND(t1.c0)))) ASC, LIKELY(((t1.c1)!=(t1.c40))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0)LIKE(t1.c1))) BETWEEN ('FALSE') AND (((((((((t1.c0)AND(vt0.c0)))OR(t1.c40)))AND('2015708000')))AND(t1.c0)))) ASC, LIKELY(((t1.c1)<>(t1.c40))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((t1.c0)LIKE(t1.c1))) BETWEEN ('FALSE') AND (((((((((t1.c0)AND(vt0.c0)))OR(t1.c40)))AND('2015708000')))AND(t1.c0)))) ASC, LIKELY(((t1.c1)!=(t1.c40))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0)LIKE(t1.c1))) BETWEEN ('FALSE') AND (((((((((t1.c0)AND(vt0.c0)))OR(t1.c40)))AND('2015708000')))AND(t1.c0)))) ASC, LIKELY(((t1.c1)<>(t1.c40))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((t1.c0 COLLATE BINARY) NOT NULL)) ORDER BY ((((t1.c0)LIKE(t1.c1))) BETWEEN ('FALSE') AND (((((((((t1.c0)AND(vt0.c0)))OR(t1.c40)))AND('2015708000')))AND(t1.c0)))) ASC, LIKELY(((t1.c1)!=(t1.c40))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((COALESCE(t1.c1, t1.c0))>(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c1)))AND(rt0.c1)))) INNER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))) WHERE (((0.5126802143373214)/(MIN(t1.c1, ''))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5126802143373214)/(MIN(t1.c1, '')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((COALESCE(t1.c1, t1.c0))>(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c1)))AND(rt0.c1)))) INNER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON ((COALESCE(t1.c1, t1.c0))>(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c1)))AND(rt0.c1)))) INNER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))) WHERE (((0.5126802143373214)/(MIN(t1.c1, ''))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5126802143373214)/(MIN(t1.c1, '')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((COALESCE(t1.c1, t1.c0))>(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))AND(t1.c1)))AND(rt0.c1)))) INNER JOIN rt0 ON (- (CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t1, vt2, rt0 WHERE (((((vt0.c0)+(rt0.c1))) BETWEEN (CASE t1.c40  WHEN t1.c0 THEN vt2.c0 ELSE rt0.c2 END) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(rt0.c1))) BETWEEN (CASE t1.c40  WHEN t1.c0 THEN vt2.c0 ELSE rt0.c2 END) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, vt2, rt0 WHERE (((((vt0.c0)+(rt0.c1))) BETWEEN (CASE t1.c40  WHEN t1.c0 THEN vt2.c0 ELSE rt0.c2 END) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(rt0.c1))) BETWEEN (CASE t1.c40  WHEN t1.c0 THEN vt2.c0 ELSE rt0.c2 END) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, vt2, rt0 WHERE (((((vt0.c0)+(rt0.c1))) BETWEEN (CASE t1.c40  WHEN t1.c0 THEN vt2.c0 ELSE rt0.c2 END) AND (rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt2, t1);
SELECT ALL COUNT(*) FROM vt0, vt2, t1 WHERE ('');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)-(ABS(rt0.c1))) RIGHT OUTER JOIN t1 ON json_array(t1.c1 COLLATE RTRIM, vt2.c0, (rt0.c1 IN ()), ((rt0.c1) NOT NULL)) FULL OUTER JOIN vt2 ON rt0.c0 WHERE (CAST((((t1.c1))<((vt0.c0))) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((t1.c1) IS TRUE)) ASC, CAST(((vt2.c0) IS TRUE) AS NUMERIC) ASC, ((CAST(t1.c40 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c1))<((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)-(ABS(rt0.c1))) RIGHT OUTER JOIN t1 ON json_array(t1.c1 COLLATE RTRIM, vt2.c0, (rt0.c1 IN ()), ((rt0.c1) NOT NULL)) FULL OUTER JOIN vt2 ON rt0.c0 ORDER BY UNLIKELY(DISTINCT ((t1.c1) IS TRUE)) ASC, CAST(((vt2.c0) IS TRUE) AS NUMERIC) ASC, ((CAST(t1.c40 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)-(ABS(rt0.c1))) RIGHT OUTER JOIN t1 ON json_array(t1.c1 COLLATE RTRIM, vt2.c0, (rt0.c1 IN ()), ((rt0.c1) NOT NULL)) FULL OUTER JOIN vt2 ON rt0.c0 WHERE (CAST((((t1.c1))<((vt0.c0))) AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((t1.c1) IS TRUE)) ASC, CAST(((vt2.c0) IS TRUE) AS NUMERIC) ASC, ((CAST(t1.c40 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c1))<((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)-(ABS(rt0.c1))) RIGHT OUTER JOIN t1 ON json_array(t1.c1 COLLATE RTRIM, vt2.c0, (rt0.c1 IN ()), ((rt0.c1) NOT NULL)) FULL OUTER JOIN vt2 ON rt0.c0 ORDER BY UNLIKELY(DISTINCT ((t1.c1) IS TRUE)) ASC, CAST(((vt2.c0) IS TRUE) AS NUMERIC) ASC, ((CAST(t1.c40 AS BLOB))OR(CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c40)IS(t1.c0)))) ORDER BY 0Xf43eebf ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t1.c40)IS(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY 0Xf43eebf ASC);
SELECT COUNT(*) FROM t1 WHERE (TRIM(DISTINCT ((t1.c40)IS(t1.c0)))) ORDER BY 0Xf43eebf ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t1.c40)IS(t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY 0Xf43eebf ASC);
SELECT * FROM vt0, vt2 WHERE (CAST(TRIM(vt2.c0, vt2.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt2.c0, vt2.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CAST(TRIM(vt2.c0, vt2.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt2.c0, vt2.c0) AS INTEGER)) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (CAST(TRIM(vt2.c0, vt2.c0) AS INTEGER));
SELECT * FROM vt2, t1, vt0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM vt2, t1, vt0, rt0);
SELECT * FROM vt2, t1, vt0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM vt2, t1, vt0, rt0);
SELECT * FROM vt2, t1, vt0, rt0 WHERE ('' COLLATE BINARY);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c1)))) AND ((-1891271036))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c1)))) AND ((-1891271036)))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c1)))) AND ((-1891271036))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c1)))) AND ((-1891271036)))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c1)))) AND ((-1891271036))));
SELECT ALL * FROM vt2 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2)OR(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 ELSE 4.35425131E8 END)))AND(((((((((NULL)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt2.c0)))))OR(vt2.c0 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 ELSE 4.35425131E8 END)))AND(((((((((NULL)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt2.c0)))))OR(vt2.c0 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN rt0);
SELECT ALL * FROM vt2 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2)OR(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 ELSE 4.35425131E8 END)))AND(((((((((NULL)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt2.c0)))))OR(vt2.c0 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c2)OR(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 ELSE 4.35425131E8 END)))AND(((((((((NULL)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt2.c0)))))OR(vt2.c0 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN rt0);
SELECT ALL * FROM vt2 NATURAL JOIN rt0 WHERE (((((((((((((rt0.c2)OR(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c1 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 ELSE 4.35425131E8 END)))AND(((((((((NULL)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(vt2.c0)))))OR(vt2.c0 COLLATE RTRIM)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt2.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)AND(((t1.c0)/(NULL)))))AND(((t1.c0)*(t1.c40)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)AND(((t1.c0)/(NULL)))))AND(((t1.c0)*(t1.c40))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)AND(((t1.c0)/(NULL)))))AND(((t1.c0)*(t1.c40)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)AND(((t1.c0)/(NULL)))))AND(((t1.c0)*(t1.c40))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((CASE t1.c0  WHEN t1.c40 THEN t1.c1 END)AND(((t1.c0)/(NULL)))))AND(((t1.c0)*(t1.c40)))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0)OR(t1.c40)))AND(t1.c40)) COLLATE BINARY WHERE ((((NOT (t1.c40)))<=(CASE WHEN vt2.c0 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN NULL THEN vt0.c0 END))) ORDER BY (((CASE WHEN x'0848' THEN 0.13168384182985182 WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c0 END))>=((NULL)));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c40)))<=(CASE WHEN vt2.c0 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0)OR(t1.c40)))AND(t1.c40)) COLLATE BINARY ORDER BY (((CASE WHEN x'0848' THEN 0.13168384182985182 WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c0 END))>=((NULL))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0)OR(t1.c40)))AND(t1.c40)) COLLATE BINARY WHERE ((((NOT (t1.c40)))<=(CASE WHEN vt2.c0 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN NULL THEN vt0.c0 END))) ORDER BY (((CASE WHEN x'0848' THEN 0.13168384182985182 WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c0 END))>=((NULL)));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c40)))<=(CASE WHEN vt2.c0 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0)OR(t1.c40)))AND(t1.c40)) COLLATE BINARY ORDER BY (((CASE WHEN x'0848' THEN 0.13168384182985182 WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c0 END))>=((NULL))));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0)OR(t1.c40)))AND(t1.c40)) COLLATE BINARY WHERE ((((NOT (t1.c40)))<=(CASE WHEN vt2.c0 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN NULL THEN vt0.c0 END))) ORDER BY (((CASE WHEN x'0848' THEN 0.13168384182985182 WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c0 END))>=((NULL)));
SELECT COUNT(*) FROM t1, vt2, rt0, vt0 WHERE (((((rt0.c1)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(t1.c1 COLLATE NOCASE))) ORDER BY ((((((((((((t1.c40)OR(t1.c1)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN vt2.c0 END)))AND(((x'7b09')GLOB(rt0.c1)))))AND(((t1.c1) BETWEEN (NULL) AND (t1.c40)))))OR((((NULL))>((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt2, rt0, vt0 ORDER BY ((((((((((((t1.c40)OR(t1.c1)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN vt2.c0 END)))AND(((x'7b09')GLOB(rt0.c1)))))AND(((t1.c1) BETWEEN (NULL) AND (t1.c40)))))OR((((NULL))>((t1.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, rt0, vt0 WHERE (((((rt0.c1)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(t1.c1 COLLATE NOCASE))) ORDER BY ((((((((((((t1.c40)OR(t1.c1)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN vt2.c0 END)))AND(((x'7b09')GLOB(rt0.c1)))))AND(((t1.c1) BETWEEN (NULL) AND (t1.c40)))))OR((((NULL))>((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt2, rt0, vt0 ORDER BY ((((((((((((t1.c40)OR(t1.c1)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN vt2.c0 END)))AND(((x'7b09')GLOB(rt0.c1)))))AND(((t1.c1) BETWEEN (NULL) AND (t1.c40)))))OR((((NULL))>((t1.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, rt0, vt0 WHERE (((((rt0.c1)OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(t1.c1 COLLATE NOCASE))) ORDER BY ((((((((((((t1.c40)OR(t1.c1)))OR(rt0.c0)))AND(CASE WHEN rt0.c2 THEN vt2.c0 END)))AND(((x'7b09')GLOB(rt0.c1)))))AND(((t1.c1) BETWEEN (NULL) AND (t1.c40)))))OR((((NULL))>((t1.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT * FROM t1, vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT * FROM t1, vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT * FROM t1, vt0, vt2 WHERE (((vt0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((t1.c1)IS(t1.c0)) IN (CASE WHEN t1.c1 THEN rt0.c2 END, ((rt0.c2)IS NOT(t1.c40)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)IS(t1.c0)) IN (CASE WHEN t1.c1 THEN rt0.c2 END, ((rt0.c2)IS NOT(t1.c40))))) IS TRUE)  as count FROM vt0, rt0, t1, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((t1.c1)IS(t1.c0)) IN (CASE WHEN t1.c1 THEN rt0.c2 END, ((rt0.c2)IS NOT(t1.c40)))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)IS(t1.c0)) IN (CASE WHEN t1.c1 THEN rt0.c2 END, ((rt0.c2)IS NOT(t1.c40))))) IS TRUE)  as count FROM vt0, rt0, t1, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt2 WHERE ((((t1.c1)IS(t1.c0)) IN (CASE WHEN t1.c1 THEN rt0.c2 END, ((rt0.c2)IS NOT(t1.c40)))));
SELECT ALL * FROM vt0, rt0, vt2 WHERE (((((((((((vt2.c0)+(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(x'' AS BLOB)))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0)+(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM vt0, rt0, vt2 WHERE (((((((((((vt2.c0)+(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(x'' AS BLOB)))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0)+(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0, rt0, vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM vt0, rt0, vt2 WHERE (((((((((((vt2.c0)+(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))AND(rt0.c1 COLLATE RTRIM)))OR(CAST(x'' AS BLOB)))) ORDER BY vt2.c0 DESC;
SELECT * FROM vt0, t1, vt2, rt0 WHERE ((~ (((t1.c40) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c40) ISNULL)))) IS TRUE)  as count FROM vt0, t1, vt2, rt0);
SELECT * FROM vt0, t1, vt2, rt0 WHERE ((~ (((t1.c40) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c40) ISNULL)))) IS TRUE)  as count FROM vt0, t1, vt2, rt0);
SELECT * FROM vt0, t1, vt2, rt0 WHERE ((~ (((t1.c40) ISNULL))));
SELECT ALL COUNT(*) FROM vt2, t1, rt0 WHERE (((((t1.c1) NOTNULL))GLOB('')));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))GLOB(''))) IS TRUE)  as count FROM vt2, t1, rt0);
SELECT ALL COUNT(*) FROM vt2, t1, rt0 WHERE (((((t1.c1) NOTNULL))GLOB('')));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL))GLOB(''))) IS TRUE)  as count FROM vt2, t1, rt0);
SELECT ALL COUNT(*) FROM vt2, t1, rt0 WHERE (((((t1.c1) NOTNULL))GLOB('')));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1)), ((rt0.c1) IS FALSE), (((t1.c40))>((rt0.c0)))))<=((((t1.c40) BETWEEN (rt0.c2) AND (x'33006369')), ((t1.c1)GLOB(t1.c0)), t1.c0))) WHERE ((((LIKELY(DISTINCT t1.c0)))>(((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT t1.c0)))>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1)), ((rt0.c1) IS FALSE), (((t1.c40))>((rt0.c0)))))<=((((t1.c40) BETWEEN (rt0.c2) AND (x'33006369')), ((t1.c1)GLOB(t1.c0)), t1.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1)), ((rt0.c1) IS FALSE), (((t1.c40))>((rt0.c0)))))<=((((t1.c40) BETWEEN (rt0.c2) AND (x'33006369')), ((t1.c1)GLOB(t1.c0)), t1.c0))) WHERE ((((LIKELY(DISTINCT t1.c0)))>(((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(DISTINCT t1.c0)))>(((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1)), ((rt0.c1) IS FALSE), (((t1.c40))>((rt0.c0)))))<=((((t1.c40) BETWEEN (rt0.c2) AND (x'33006369')), ((t1.c1)GLOB(t1.c0)), t1.c0))));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1)), ((rt0.c1) IS FALSE), (((t1.c40))>((rt0.c0)))))<=((((t1.c40) BETWEEN (rt0.c2) AND (x'33006369')), ((t1.c1)GLOB(t1.c0)), t1.c0))) WHERE ((((LIKELY(DISTINCT t1.c0)))>(((~ (rt0.c0))))));
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN vt0 ON ABS(DISTINCT ((t1.c0)<=(rt0.c0))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 1e500 END)AND(((vt2.c0)OR(vt2.c0)))))OR(((((((((vt2.c0)OR(0.4416053850120266)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))) WHERE (((rt0.c1) NOT NULL) COLLATE BINARY) ORDER BY ((vt2.c0)*(CHANGES()))  NULLS FIRST, ((((((vt2.c0)*(vt2.c0)))AND(((rt0.c0)GLOB(t1.c40)))))OR((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt2, t1 CROSS JOIN vt0 ON ABS(DISTINCT ((t1.c0)<=(rt0.c0))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 1e500 END)AND(((vt2.c0)OR(vt2.c0)))))OR(((((((((vt2.c0)OR(0.4416053850120266)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))) ORDER BY ((vt2.c0)*(CHANGES()))  NULLS FIRST, ((((((vt2.c0)*(vt2.c0)))AND(((rt0.c0)GLOB(t1.c40)))))OR((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN vt0 ON ABS(DISTINCT ((t1.c0)<=(rt0.c0))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 1e500 END)AND(((vt2.c0)OR(vt2.c0)))))OR(((((((((vt2.c0)OR(0.4416053850120266)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))) WHERE (((rt0.c1) NOT NULL) COLLATE BINARY) ORDER BY ((vt2.c0)*(CHANGES()))  NULLS FIRST, ((((((vt2.c0)*(vt2.c0)))AND(((rt0.c0)GLOB(t1.c40)))))OR((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt2, t1 CROSS JOIN vt0 ON ABS(DISTINCT ((t1.c0)<=(rt0.c0))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 1e500 END)AND(((vt2.c0)OR(vt2.c0)))))OR(((((((((vt2.c0)OR(0.4416053850120266)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))) ORDER BY ((vt2.c0)*(CHANGES()))  NULLS FIRST, ((((((vt2.c0)*(vt2.c0)))AND(((rt0.c0)GLOB(t1.c40)))))OR((vt0.c0 IN ()))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2, t1 CROSS JOIN vt0 ON ABS(DISTINCT ((t1.c0)<=(rt0.c0))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN NULL WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 1e500 END)AND(((vt2.c0)OR(vt2.c0)))))OR(((((((((vt2.c0)OR(0.4416053850120266)))OR(rt0.c0)))AND(t1.c0)))AND(rt0.c2)))) WHERE (((rt0.c1) NOT NULL) COLLATE BINARY) ORDER BY ((vt2.c0)*(CHANGES()))  NULLS FIRST, ((((((vt2.c0)*(vt2.c0)))AND(((rt0.c0)GLOB(t1.c40)))))OR((vt0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (CHANGES()) ORDER BY CAST(((vt0.c0) BETWEEN (t1.c40) AND (t1.c40)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((vt0.c0) BETWEEN (t1.c40) AND (t1.c40)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CHANGES()) ORDER BY CAST(((vt0.c0) BETWEEN (t1.c40) AND (t1.c40)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((vt0.c0) BETWEEN (t1.c40) AND (t1.c40)) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CHANGES()) ORDER BY CAST(((vt0.c0) BETWEEN (t1.c40) AND (t1.c40)) AS BLOB) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (CASE WHEN (((t1.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((t1.c40, t1.c1, rt0.c0))) THEN 0.7212342218499209 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((t1.c40, t1.c1, rt0.c0))) THEN 0.7212342218499209 END) IS TRUE)  as count FROM t1, vt2, vt0, rt0);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (CASE WHEN (((t1.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((t1.c40, t1.c1, rt0.c0))) THEN 0.7212342218499209 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t1.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((t1.c40, t1.c1, rt0.c0))) THEN 0.7212342218499209 END) IS TRUE)  as count FROM t1, vt2, vt0, rt0);
SELECT COUNT(*) FROM t1, vt2, vt0, rt0 WHERE (CASE WHEN (((t1.c1, t1.c40, rt0.c0)) NOT BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((t1.c40, t1.c1, rt0.c0))) THEN 0.7212342218499209 END);
SELECT ALL * FROM vt0 WHERE ('0.7516264040803186');
SELECT SUM(count) FROM (SELECT (('0.7516264040803186') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.7516264040803186');
SELECT SUM(count) FROM (SELECT (('0.7516264040803186') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('0.7516264040803186');
SELECT ALL COUNT(*) FROM vt2, t1, vt0 RIGHT OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((((t1.c40)) NOT BETWEEN ((x'7d87')) AND ((vt0.c0))), (((0x3d794e53)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt0.c0)))) AND ((CAST(t1.c0 AS TEXT), t1.c40 COLLATE BINARY, vt2.c0 COLLATE RTRIM))) WHERE (((CAST(t1.c0 AS TEXT)) NOT NULL)) ORDER BY (((vt0.c0 IN (vt2.c0, rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt2, t1, vt0 RIGHT OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((((t1.c40)) NOT BETWEEN ((x'7d87')) AND ((vt0.c0))), (((0X3d794e53)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt0.c0)))) AND ((CAST(t1.c0 AS TEXT), t1.c40 COLLATE BINARY, vt2.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN (vt2.c0, rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t1, vt0 RIGHT OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((((t1.c40)) NOT BETWEEN ((x'7d87')) AND ((vt0.c0))), (((0x3d794e53)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt0.c0)))) AND ((CAST(t1.c0 AS TEXT), t1.c40 COLLATE BINARY, vt2.c0 COLLATE RTRIM))) WHERE (((CAST(t1.c0 AS TEXT)) NOT NULL)) ORDER BY (((vt0.c0 IN (vt2.c0, rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt2, t1, vt0 RIGHT OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((((t1.c40)) NOT BETWEEN ((x'7d87')) AND ((vt0.c0))), (((0X3d794e53)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt0.c0)))) AND ((CAST(t1.c0 AS TEXT), t1.c40 COLLATE BINARY, vt2.c0 COLLATE RTRIM))) ORDER BY (((vt0.c0 IN (vt2.c0, rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, t1, vt0 RIGHT OUTER JOIN rt0 ON (((t1.c1, t1.c0, t1.c0)) NOT BETWEEN (((((t1.c40)) NOT BETWEEN ((x'7d87')) AND ((vt0.c0))), (((0x3d794e53)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt0.c0)))) AND ((CAST(t1.c0 AS TEXT), t1.c40 COLLATE BINARY, vt2.c0 COLLATE RTRIM))) WHERE (((CAST(t1.c0 AS TEXT)) NOT NULL)) ORDER BY (((vt0.c0 IN (vt2.c0, rt0.c1))) IS TRUE)  NULLS LAST;
SELECT * FROM t1, rt0, vt0, vt2 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(rt0.c0))) ORDER BY CASE WHEN (((rt0.c1, rt0.c0, 0.12634445659281346))<=((rt0.c1, vt2.c0, t1.c1))) THEN ((t1.c1)>=(rt0.c1)) ELSE CASE WHEN t1.c40 THEN t1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(rt0.c0))) IS TRUE)  as count FROM t1, rt0, vt0, vt2 ORDER BY CASE WHEN (((rt0.c1, rt0.c0, 0.12634445659281346))<=((rt0.c1, vt2.c0, t1.c1))) THEN ((t1.c1)>=(rt0.c1)) ELSE CASE WHEN t1.c40 THEN t1.c1 END END  NULLS FIRST);
SELECT * FROM t1, rt0, vt0, vt2 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(rt0.c0))) ORDER BY CASE WHEN (((rt0.c1, rt0.c0, 0.12634445659281346))<=((rt0.c1, vt2.c0, t1.c1))) THEN ((t1.c1)>=(rt0.c1)) ELSE CASE WHEN t1.c40 THEN t1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(rt0.c0))) IS TRUE)  as count FROM t1, rt0, vt0, vt2 ORDER BY CASE WHEN (((rt0.c1, rt0.c0, 0.12634445659281346))<=((rt0.c1, vt2.c0, t1.c1))) THEN ((t1.c1)>=(rt0.c1)) ELSE CASE WHEN t1.c40 THEN t1.c1 END END  NULLS FIRST);
SELECT * FROM t1, rt0, vt0, vt2 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+(rt0.c0))) ORDER BY CASE WHEN (((rt0.c1, rt0.c0, 0.12634445659281346))<=((rt0.c1, vt2.c0, t1.c1))) THEN ((t1.c1)>=(rt0.c1)) ELSE CASE WHEN t1.c40 THEN t1.c1 END END  NULLS FIRST;
SELECT * FROM t1, vt2, vt0 NATURAL JOIN rt0 WHERE ((((((t1.c0) IS TRUE)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) IS TRUE)))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt2, vt0 NATURAL JOIN rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) ISNULL)  NULLS LAST);
SELECT * FROM t1, vt2, vt0 NATURAL JOIN rt0 WHERE ((((((t1.c0) IS TRUE)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) IS TRUE)))>=((rt0.c2 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt2, vt0 NATURAL JOIN rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) ISNULL)  NULLS LAST);
SELECT * FROM t1, vt2, vt0 NATURAL JOIN rt0 WHERE ((((((t1.c0) IS TRUE)))>=((rt0.c2 COLLATE RTRIM)))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END) ISNULL)  NULLS LAST;
SELECT ALL * FROM t1 INDEXED BY i10, vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0, vt2);
SELECT ALL * FROM t1 INDEXED BY i10, vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t1 INDEXED BY i10, vt0, vt2);
SELECT * FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c40)))OR(t1.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(t1.c40)))OR(t1.c40))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c40)))OR(t1.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)AND(t1.c40)))OR(t1.c40))) NOTNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((t1.c0)AND(t1.c40)))OR(t1.c40))) NOTNULL));
SELECT COUNT(*) FROM rt0 INDEXED BY i10 WHERE (CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) ORDER BY LIKELY(((rt0.c2)<>(rt0.c1))) DESC  NULLS FIRST, ((((LOWER(DISTINCT rt0.c2))AND(((rt0.c2)-(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)), (((rt0.c2)<(rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 INDEXED BY i10 ORDER BY LIKELY(((rt0.c2)!=(rt0.c1))) DESC  NULLS FIRST, ((((LOWER(DISTINCT rt0.c2))AND(((rt0.c2)-(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)), (((rt0.c2)<(rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INDEXED BY i10 WHERE (CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) ORDER BY LIKELY(((rt0.c2)<>(rt0.c1))) DESC  NULLS FIRST, ((((LOWER(DISTINCT rt0.c2))AND(((rt0.c2)-(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)), (((rt0.c2)<(rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 INDEXED BY i10 ORDER BY LIKELY(((rt0.c2)!=(rt0.c1))) DESC  NULLS FIRST, ((((LOWER(DISTINCT rt0.c2))AND(((rt0.c2)-(rt0.c0)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 END)), (((rt0.c2)<(rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)>>(vt0.c0)));
SELECT ALL * FROM vt0 INDEXED BY i10, t1, vt2 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY ((((t1.c1) NOTNULL)) NOTNULL) ASC, ((((((((((vt2.c0)OR('-1936053992')))OR(vt0.c0)))AND(NULL)))OR(t1.c40)))GLOB(((vt2.c0)<(vt0.c0))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<=((+ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i10, t1, vt2 ORDER BY ((((t1.c1) NOTNULL)) NOTNULL) ASC, ((((((((((vt2.c0)OR('-1936053992')))OR(vt0.c0)))AND(NULL)))OR(t1.c40)))GLOB(((vt2.c0)<(vt0.c0))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<=((+ (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 INDEXED BY i10, t1, vt2 WHERE ((~ ((t1.c0 IN (t1.c0))))) ORDER BY ((((t1.c1) NOTNULL)) NOTNULL) ASC, ((((((((((vt2.c0)OR('-1936053992')))OR(vt0.c0)))AND(NULL)))OR(t1.c40)))GLOB(((vt2.c0)<(vt0.c0))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<=((+ (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN (t1.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i10, t1, vt2 ORDER BY ((((t1.c1) NOTNULL)) NOTNULL) ASC, ((((((((((vt2.c0)OR('-1936053992')))OR(vt0.c0)))AND(NULL)))OR(t1.c40)))GLOB(((vt2.c0)<(vt0.c0))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)<=((+ (t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, t1 WHERE (((t1.c40 COLLATE RTRIM)<<(CASE WHEN t1.c0 THEN t1.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c40 COLLATE RTRIM)<<(CASE WHEN t1.c0 THEN t1.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE (((t1.c40 COLLATE RTRIM)<<(CASE WHEN t1.c0 THEN t1.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c40 COLLATE RTRIM)<<(CASE WHEN t1.c0 THEN t1.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE (((t1.c40 COLLATE RTRIM)<<(CASE WHEN t1.c0 THEN t1.c0 ELSE vt2.c0 END)));
SELECT * FROM t1, rt0, vt0 WHERE ((NOT (((rt0.c0)%(t1.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)%(t1.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE ((NOT (((rt0.c0)%(t1.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)%(t1.c0))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE ((NOT (((rt0.c0)%(t1.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((((((+ (vt0.c0)))AND(((vt2.c0)|(vt2.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(x'' COLLATE RTRIM)))AND(CAST(vt2.c0 AS BLOB)))  NULLS LAST, ((((((vt2.c0)) BETWEEN ((0.3027581723138404)) AND ((vt0.c0)))))>=((LAST_INSERT_ROWID()))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((((+ (vt0.c0)))AND(((vt2.c0)|(vt2.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(x'' COLLATE RTRIM)))AND(CAST(vt2.c0 AS BLOB)))  NULLS LAST, ((((((vt2.c0)) BETWEEN ((0.3027581723138404)) AND ((vt0.c0)))))>=((LAST_INSERT_ROWID()))) DESC  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((((((+ (vt0.c0)))AND(((vt2.c0)|(vt2.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(x'' COLLATE RTRIM)))AND(CAST(vt2.c0 AS BLOB)))  NULLS LAST, ((((((vt2.c0)) BETWEEN ((0.3027581723138404)) AND ((vt0.c0)))))>=((LAST_INSERT_ROWID()))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((((+ (vt0.c0)))AND(((vt2.c0)|(vt2.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(x'' COLLATE RTRIM)))AND(CAST(vt2.c0 AS BLOB)))  NULLS LAST, ((((((vt2.c0)) BETWEEN ((0.3027581723138404)) AND ((vt0.c0)))))>=((LAST_INSERT_ROWID()))) DESC  NULLS LAST, vt0.c0 DESC);
SELECT ALL * FROM vt2, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((((((+ (vt0.c0)))AND(((vt2.c0)|(vt2.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(x'' COLLATE RTRIM)))AND(CAST(vt2.c0 AS BLOB)))  NULLS LAST, ((((((vt2.c0)) BETWEEN ((0.3027581723138404)) AND ((vt0.c0)))))>=((LAST_INSERT_ROWID()))) DESC  NULLS LAST, vt0.c0 DESC;
SELECT * FROM vt2, t1, rt0 INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND((+ (t1.c1)))))AND(IFNULL(DISTINCT rt0.c1, vt2.c0))))AND(IFNULL(DISTINCT rt0.c0, NULL))) WHERE (((((((((((((rt0.c1 COLLATE BINARY)OR(t1.c40 COLLATE BINARY)))AND(((t1.c1) IS FALSE))))AND(((rt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))OR((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1 COLLATE BINARY)OR(t1.c40 COLLATE BINARY)))AND(((t1.c1) IS FALSE))))AND(((rt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))OR((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>(rt0.c2))))) IS TRUE)  as count FROM vt2, t1, rt0 INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND((+ (t1.c1)))))AND(IFNULL(DISTINCT rt0.c1, vt2.c0))))AND(IFNULL(DISTINCT rt0.c0, NULL))));
SELECT * FROM vt2, t1, rt0 INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND((+ (t1.c1)))))AND(IFNULL(DISTINCT rt0.c1, vt2.c0))))AND(IFNULL(DISTINCT rt0.c0, NULL))) WHERE (((((((((((((rt0.c1 COLLATE BINARY)OR(t1.c40 COLLATE BINARY)))AND(((t1.c1) IS FALSE))))AND(((rt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))OR((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1 COLLATE BINARY)OR(t1.c40 COLLATE BINARY)))AND(((t1.c1) IS FALSE))))AND(((rt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))OR((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>(rt0.c2))))) IS TRUE)  as count FROM vt2, t1, rt0 INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND((+ (t1.c1)))))AND(IFNULL(DISTINCT rt0.c1, vt2.c0))))AND(IFNULL(DISTINCT rt0.c0, NULL))));
SELECT * FROM vt2, t1, rt0 INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND((+ (t1.c1)))))AND(IFNULL(DISTINCT rt0.c1, vt2.c0))))AND(IFNULL(DISTINCT rt0.c0, NULL))) WHERE (((((((((((((rt0.c1 COLLATE BINARY)OR(t1.c40 COLLATE BINARY)))AND(((t1.c1) IS FALSE))))AND(((rt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))OR((rt0.c1 IN (rt0.c0, rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)>(rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN 0.22291819769376553 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN rt0.c0 THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN (-2100348354, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, ((rt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN 0.22291819769376553 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN rt0.c0 THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN (-2100348354, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, ((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN 0.22291819769376553 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN rt0.c0 THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN (-2100348354, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, ((rt0.c1) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN 0.22291819769376553 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN rt0.c0 THEN (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN (-2100348354, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, ((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN 0.22291819769376553 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN (rt0.c0 IN ()) THEN (vt0.c0 IN ()) WHEN rt0.c0 THEN (NOT (rt0.c0)) END) ORDER BY (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) IN (-2100348354, ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS FIRST, ((rt0.c1) ISNULL);
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '398052785' INNER JOIN t1 ON (- (((x'b30f') IS FALSE))) WHERE ((+ (((vt0.c0)||(t1.c40))))) ORDER BY (('-645816914')-(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)||(t1.c40))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '398052785' INNER JOIN t1 ON (- (((x'b30f') IS FALSE))) ORDER BY (('-645816914')-(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '398052785' INNER JOIN t1 ON (- (((x'b30f') IS FALSE))) WHERE ((+ (((vt0.c0)||(t1.c40))))) ORDER BY (('-645816914')-(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)||(t1.c40))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON '398052785' INNER JOIN t1 ON (- (((x'b30f') IS FALSE))) ORDER BY (('-645816914')-(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON '398052785' INNER JOIN t1 ON (- (((x'b30f') IS FALSE))) WHERE ((+ (((vt0.c0)||(t1.c40))))) ORDER BY (('-645816914')-(((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt2 WHERE (((((vt2.c0)<>(NULL)))%(((t1.c1) NOTNULL)))) ORDER BY CASE WHEN ((((t1.c1)OR(vt2.c0)))OR(t1.c40)) THEN CAST(t1.c0 AS BLOB) ELSE CASE WHEN t1.c0 THEN vt2.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN t1.c40 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)!=(NULL)))%(((t1.c1) NOTNULL)))) IS TRUE)  as count FROM t1, vt2 ORDER BY CASE WHEN ((((t1.c1)OR(vt2.c0)))OR(t1.c40)) THEN CAST(t1.c0 AS BLOB) ELSE CASE WHEN t1.c0 THEN vt2.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN t1.c40 END END ASC);
SELECT COUNT(*) FROM t1, vt2 WHERE (((((vt2.c0)<>(NULL)))%(((t1.c1) NOTNULL)))) ORDER BY CASE WHEN ((((t1.c1)OR(vt2.c0)))OR(t1.c40)) THEN CAST(t1.c0 AS BLOB) ELSE CASE WHEN t1.c0 THEN vt2.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN t1.c40 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)!=(NULL)))%(((t1.c1) NOTNULL)))) IS TRUE)  as count FROM t1, vt2 ORDER BY CASE WHEN ((((t1.c1)OR(vt2.c0)))OR(t1.c40)) THEN CAST(t1.c0 AS BLOB) ELSE CASE WHEN t1.c0 THEN vt2.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN t1.c40 END END ASC);
SELECT COUNT(*) FROM t1, vt2 WHERE (((((vt2.c0)<>(NULL)))%(((t1.c1) NOTNULL)))) ORDER BY CASE WHEN ((((t1.c1)OR(vt2.c0)))OR(t1.c40)) THEN CAST(t1.c0 AS BLOB) ELSE CASE WHEN t1.c0 THEN vt2.c0 WHEN vt2.c0 THEN t1.c40 WHEN t1.c40 THEN t1.c40 END END ASC;
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0) IS TRUE)) ORDER BY NULLIF(((t1.c1) NOTNULL), UNLIKELY(t1.c40));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY NULLIF(((t1.c1) NOTNULL), UNLIKELY(t1.c40)));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0) IS TRUE)) ORDER BY NULLIF(((t1.c1) NOTNULL), UNLIKELY(t1.c40));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE)) IS TRUE)  as count FROM vt0, t1 ORDER BY NULLIF(((t1.c1) NOTNULL), UNLIKELY(t1.c40)));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c0) IS TRUE)) ORDER BY NULLIF(((t1.c1) NOTNULL), UNLIKELY(t1.c40));
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON (((t1.c1)GLOB(vt2.c0)) IN (((t1.c0) BETWEEN (t1.c1) AND (vt2.c0)))) LEFT OUTER JOIN t1 ON (- (t1.c40)) COLLATE NOCASE WHERE (((t1.c1) IS FALSE)) ORDER BY (NOT (t1.c1)) ASC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1) IS FALSE)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (((t1.c1)GLOB(vt2.c0)) IN (((t1.c0) BETWEEN (t1.c1) AND (vt2.c0)))) LEFT OUTER JOIN t1 ON (- (t1.c40)) COLLATE NOCASE ORDER BY (NOT (t1.c1)) ASC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON (((t1.c1)GLOB(vt2.c0)) IN (((t1.c0) BETWEEN (t1.c1) AND (vt2.c0)))) LEFT OUTER JOIN t1 ON (- (t1.c40)) COLLATE NOCASE WHERE (((t1.c1) IS FALSE)) ORDER BY (NOT (t1.c1)) ASC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1) IS FALSE)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (((t1.c1)GLOB(vt2.c0)) IN (((t1.c0) BETWEEN (t1.c1) AND (vt2.c0)))) LEFT OUTER JOIN t1 ON (- (t1.c40)) COLLATE NOCASE ORDER BY (NOT (t1.c1)) ASC  NULLS LAST, (CAST(t1.c0 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((('Yl珊')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((('Yl珊')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('Yl珊')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((vt0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((('Yl珊')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((vt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('Yl珊')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(((vt0.c0)|(vt0.c0)))));
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((vt2.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM) ORDER BY t1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY t1.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((vt2.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM) ORDER BY t1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY t1.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((vt2.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE RTRIM) ORDER BY t1.c1 DESC  NULLS LAST;
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON ((vt2.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c1 COLLATE RTRIM)OR(0X495fd411)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)) WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END) ISNULL)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS BLOB) ASC, (((NOT (vt0.c0))) NOT BETWEEN ((((vt2.c0))<>((NULL)))) AND (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END) ISNULL)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((vt2.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c1 COLLATE RTRIM)OR(0X495fd411)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS BLOB) ASC, (((NOT (vt0.c0))) NOT BETWEEN ((((vt2.c0))!=((NULL)))) AND (rt0.c0 COLLATE BINARY)));
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON ((vt2.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c1 COLLATE RTRIM)OR(0X495fd411)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)) WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END) ISNULL)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS BLOB) ASC, (((NOT (vt0.c0))) NOT BETWEEN ((((vt2.c0))<>((NULL)))) AND (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END) ISNULL)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((vt2.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt0 ON ((((rt0.c1 COLLATE RTRIM)OR(0X495fd411)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS BLOB) ASC, (((NOT (vt0.c0))) NOT BETWEEN ((((vt2.c0))!=((NULL)))) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((~ (vt2.c0))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c0)+(rt0.c0))))) ORDER BY (((- (vt2.c0)))GLOB(((vt2.c0) IS FALSE)))  NULLS LAST, (NOT (COALESCE(rt0.c2, rt0.c1))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt2.c0))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY (((- (vt2.c0)))GLOB(((vt2.c0) IS FALSE)))  NULLS LAST, (NOT (COALESCE(rt0.c2, rt0.c1))) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((~ (vt2.c0))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c0)+(rt0.c0))))) ORDER BY (((- (vt2.c0)))GLOB(((vt2.c0) IS FALSE)))  NULLS LAST, (NOT (COALESCE(rt0.c2, rt0.c1))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt2.c0))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM vt2, rt0, vt0 ORDER BY (((- (vt2.c0)))GLOB(((vt2.c0) IS FALSE)))  NULLS LAST, (NOT (COALESCE(rt0.c2, rt0.c1))) ASC  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, rt0, vt0 WHERE ((((~ (vt2.c0))) BETWEEN (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c0)+(rt0.c0))))) ORDER BY (((- (vt2.c0)))GLOB(((vt2.c0) IS FALSE)))  NULLS LAST, (NOT (COALESCE(rt0.c2, rt0.c1))) ASC  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt2 ON LIKELY((~ (vt0.c0))) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c2)))AND(NULLIF(x'd47e', NULL))))AND(((vt0.c0) IS FALSE))) WHERE (CAST(t1.c40 AS INTEGER) COLLATE NOCASE) ORDER BY '883667140'  NULLS LAST, ((((t1.c1 IN ())))<>(((((vt2.c0, x'', rt0.c2, t1.c40, t1.c40))>((rt0.c1, 0xffffffffd4c0fe10, vt2.c0, t1.c40, t1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c40 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt2 ON LIKELY((~ (vt0.c0))) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c2)))AND(NULLIF(x'd47e', NULL))))AND(((vt0.c0) IS FALSE))) ORDER BY '883667140'  NULLS LAST, ((((t1.c1 IN ())))!=(((((vt2.c0, x'', rt0.c2, t1.c40, t1.c40))>((rt0.c1, 0xffffffffd4c0fe10, vt2.c0, t1.c40, t1.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt2 ON LIKELY((~ (vt0.c0))) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c2)))AND(NULLIF(x'd47e', NULL))))AND(((vt0.c0) IS FALSE))) WHERE (CAST(t1.c40 AS INTEGER) COLLATE NOCASE) ORDER BY '883667140'  NULLS LAST, ((((t1.c1 IN ())))<>(((((vt2.c0, x'', rt0.c2, t1.c40, t1.c40))>((rt0.c1, 0xffffffffd4c0fe10, vt2.c0, t1.c40, t1.c1)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c40 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt2 ON LIKELY((~ (vt0.c0))) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN vt0 ON (((((vt0.c0 IN (rt0.c2)))AND(NULLIF(x'd47e', NULL))))AND(((vt0.c0) IS FALSE))) ORDER BY '883667140'  NULLS LAST, ((((t1.c1 IN ())))!=(((((vt2.c0, x'', rt0.c2, t1.c40, t1.c40))>((rt0.c1, 0xffffffffd4c0fe10, vt2.c0, t1.c40, t1.c1)))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'bcfb')>>(CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))) ORDER BY (('-1067008182') NOTNULL)  NULLS FIRST, ABS(DISTINCT UNLIKELY(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'bcfb')>>(CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('-1067008182') NOTNULL)  NULLS FIRST, ABS(DISTINCT UNLIKELY(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'bcfb')>>(CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))) ORDER BY (('-1067008182') NOTNULL)  NULLS FIRST, ABS(DISTINCT UNLIKELY(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'bcfb')>>(CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('-1067008182') NOTNULL)  NULLS FIRST, ABS(DISTINCT UNLIKELY(vt0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((x'bcfb')>>(CASE rt0.c2  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END))) ORDER BY (('-1067008182') NOTNULL)  NULLS FIRST, ABS(DISTINCT UNLIKELY(vt0.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE ((t1.c0 IN (t1.c0 COLLATE BINARY, CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c40 WHEN 0.00408363353302077 THEN t1.c40 END)));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN (t1.c0 COLLATE BINARY, CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c40 WHEN 0.00408363353302077 THEN t1.c40 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c0 IN (t1.c0 COLLATE BINARY, CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c40 WHEN 0.00408363353302077 THEN t1.c40 END)));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN (t1.c0 COLLATE BINARY, CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c40 WHEN 0.00408363353302077 THEN t1.c40 END))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((t1.c0 IN (t1.c0 COLLATE BINARY, CASE t1.c40  WHEN t1.c1 THEN t1.c1 WHEN '' THEN t1.c40 WHEN 0.00408363353302077 THEN t1.c40 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c0)), rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))>((rt0.c2, CAST(vt0.c0 AS BLOB), (- (rt0.c2)))))) ORDER BY CAST(((vt0.c0)*(rt0.c2)) AS NUMERIC)  NULLS FIRST, (NOT (0.19934691834502016)) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0)), rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))>((rt0.c2, CAST(vt0.c0 AS BLOB), (- (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)*(rt0.c2)) AS NUMERIC)  NULLS FIRST, (NOT (0.19934691834502016)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c0)), rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))>((rt0.c2, CAST(vt0.c0 AS BLOB), (- (rt0.c2)))))) ORDER BY CAST(((vt0.c0)*(rt0.c2)) AS NUMERIC)  NULLS FIRST, (NOT (0.19934691834502016)) DESC;
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c0)), rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))>((rt0.c2, CAST(vt0.c0 AS BLOB), (- (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)*(rt0.c2)) AS NUMERIC)  NULLS FIRST, (NOT (0.19934691834502016)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((NOT (rt0.c0)), rt0.c2, ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))>((rt0.c2, CAST(vt0.c0 AS BLOB), (- (rt0.c2)))))) ORDER BY CAST(((vt0.c0)*(rt0.c2)) AS NUMERIC)  NULLS FIRST, (NOT (0.19934691834502016)) DESC;
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt0.c0, vt0.c0, vt2.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0, vt2.c0, vt2.c0))<((vt0.c0, vt2.c0, vt2.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, x'4573')) AND ((vt2.c0, vt0.c0 COLLATE NOCASE, ((vt2.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt2.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0, vt2.c0, vt2.c0))<((vt0.c0, vt2.c0, vt2.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, x'4573')) AND ((vt2.c0, vt0.c0 COLLATE NOCASE, ((vt2.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt0.c0, vt0.c0, vt2.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0, vt2.c0, vt2.c0))<((vt0.c0, vt2.c0, vt2.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, x'4573')) AND ((vt2.c0, vt0.c0 COLLATE NOCASE, ((vt2.c0)>>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt2.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0, vt2.c0, vt2.c0))<((vt0.c0, vt2.c0, vt2.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, x'4573')) AND ((vt2.c0, vt0.c0 COLLATE NOCASE, ((vt2.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE ((((vt0.c0, vt0.c0, vt2.c0)) BETWEEN (((((vt0.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0, vt2.c0, vt2.c0))<((vt0.c0, vt2.c0, vt2.c0, vt0.c0, vt2.c0, vt0.c0, vt0.c0))), vt0.c0 COLLATE RTRIM, x'4573')) AND ((vt2.c0, vt0.c0 COLLATE NOCASE, ((vt2.c0)>>(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt2, vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c40) IS FALSE)  WHEN (vt0.c0 IN (t1.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c40) IS FALSE)  WHEN (vt0.c0 IN (t1.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt2, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt2, vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c40) IS FALSE)  WHEN (vt0.c0 IN (t1.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c40) IS FALSE)  WHEN (vt0.c0 IN (t1.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt2, vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt2, vt0 NATURAL JOIN t1 WHERE (CASE ((t1.c40) IS FALSE)  WHEN (vt0.c0 IN (t1.c1)) THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (((CASE WHEN 0Xffffffffa7c2131d THEN t1.c40 END)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0xffffffffa7c2131d THEN t1.c40 END)||(vt0.c0))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (((CASE WHEN 0Xffffffffa7c2131d THEN t1.c40 END)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0xffffffffa7c2131d THEN t1.c40 END)||(vt0.c0))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt2, vt0, t1 WHERE (((CASE WHEN 0Xffffffffa7c2131d THEN t1.c40 END)||(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE) ORDER BY CASE 256110271  WHEN ((vt0.c0) IS TRUE) THEN json_array_length(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE 256110271  WHEN ((vt0.c0) IS TRUE) THEN json_array_length(vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE) ORDER BY CASE 256110271  WHEN ((vt0.c0) IS TRUE) THEN json_array_length(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE 256110271  WHEN ((vt0.c0) IS TRUE) THEN json_array_length(vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE) ORDER BY CASE 256110271  WHEN ((vt0.c0) IS TRUE) THEN json_array_length(vt0.c0) END;
SELECT ALL COUNT(*) FROM t1, vt2 WHERE (CAST(CAST(t1.c40 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c40 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1, vt2);
SELECT ALL COUNT(*) FROM t1, vt2 WHERE (CAST(CAST(t1.c40 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c40 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1, vt2);
SELECT ALL COUNT(*) FROM t1, vt2 WHERE (CAST(CAST(t1.c40 AS TEXT) AS BLOB));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c40  WHEN CASE t1.c40  WHEN t1.c1 THEN t1.c40 END THEN t1.c40 WHEN (t1.c0 IN (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN (t1.c1 IN ()) THEN ((t1.c0)<=(t1.c0)) ELSE t1.c40 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c40  WHEN CASE t1.c40  WHEN t1.c1 THEN t1.c40 END THEN t1.c40 WHEN (t1.c0 IN (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN (t1.c1 IN ()) THEN ((t1.c0)<=(t1.c0)) ELSE t1.c40 COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c40  WHEN CASE t1.c40  WHEN t1.c1 THEN t1.c40 END THEN t1.c40 WHEN (t1.c0 IN (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN (t1.c1 IN ()) THEN ((t1.c0)<=(t1.c0)) ELSE t1.c40 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c40  WHEN CASE t1.c40  WHEN t1.c1 THEN t1.c40 END THEN t1.c40 WHEN (t1.c0 IN (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN (t1.c1 IN ()) THEN ((t1.c0)<=(t1.c0)) ELSE t1.c40 COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE t1.c40  WHEN CASE t1.c40  WHEN t1.c1 THEN t1.c40 END THEN t1.c40 WHEN (t1.c0 IN (t1.c0)) THEN t1.c0 COLLATE RTRIM WHEN (t1.c1 IN ()) THEN ((t1.c0)<=(t1.c0)) ELSE t1.c40 COLLATE NOCASE END);
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE (((CASE rt0.c0  WHEN t1.c1 THEN rt0.c1 ELSE '429536384' END)*(x'98a8f386')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t1.c1 THEN rt0.c1 ELSE '429536384' END)*(x'98a8f386'))) IS TRUE)  as count FROM vt0, vt2, t1, rt0);
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE (((CASE rt0.c0  WHEN t1.c1 THEN rt0.c1 ELSE '429536384' END)*(x'98a8f386')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t1.c1 THEN rt0.c1 ELSE '429536384' END)*(x'98a8f386'))) IS TRUE)  as count FROM vt0, vt2, t1, rt0);
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE (((CASE rt0.c0  WHEN t1.c1 THEN rt0.c1 ELSE '429536384' END)*(x'98a8f386')));
SELECT * FROM rt0, vt2 WHERE (((vt2.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((vt2.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((vt2.c0) IS TRUE));
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c1) NOT NULL)) AND ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) BETWEEN (((rt0.c1) NOT NULL)) AND ((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c1) NOT NULL)) AND ((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) BETWEEN (((rt0.c1) NOT NULL)) AND ((NOT (NULL))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c1) NOT NULL)) AND ((NOT (NULL)))));
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(t1.c0)))OR(vt2.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('' IN ())))==((HEX(t1.c40))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(t1.c0)))OR(vt2.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((('' IN ())))==((HEX(t1.c40)))));
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(t1.c0)))OR(vt2.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('' IN ())))==((HEX(t1.c40))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(t1.c0)))OR(vt2.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM vt2, t1, vt0, rt0 ORDER BY (((('' IN ())))==((HEX(t1.c40)))));
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((vt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(t1.c0)))OR(vt2.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((('' IN ())))==((HEX(t1.c40))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)IS NOT(vt0.c0)));
SELECT ALL * FROM vt2, rt0, vt0 WHERE (LIKELY(0.4337667968889065));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0.4337667968889065)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (LIKELY(0.4337667968889065));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(0.4337667968889065)) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT ALL * FROM vt2, rt0, vt0 WHERE (LIKELY(0.4337667968889065));
SELECT ALL * FROM vt0, t1 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM) ORDER BY CAST(((t1.c0)>>(t1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c0)>>(t1.c0)) AS BLOB) ASC);
SELECT ALL * FROM vt0, t1 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM) ORDER BY CAST(((t1.c0)>>(t1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(((t1.c0)>>(t1.c0)) AS BLOB) ASC);
SELECT ALL * FROM vt0, t1 WHERE (CAST(t1.c1 AS REAL) COLLATE RTRIM) ORDER BY CAST(((t1.c0)>>(t1.c0)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (NULL))))) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (NULL))))) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (TYPEOF(vt0.c0)) AND ((vt0.c0 IN (NULL))))) ORDER BY (~ ((vt0.c0 IN ()))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, t1, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c0 COLLATE BINARY))) ORDER BY 'Se' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, t1, rt0 ORDER BY 'Se' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, t1, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c0 COLLATE BINARY))) ORDER BY 'Se' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL)) BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, t1, rt0 ORDER BY 'Se' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, t1, rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (t1.c1 COLLATE RTRIM) AND (t1.c0 COLLATE BINARY))) ORDER BY 'Se' DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE (NOT (rt0.c1))  WHEN (rt0.c2 IN ()) THEN rt0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '-1480453347' END)==(x'2877'))) ORDER BY (((rt0.c1)IS NOT(t1.c40)) IN (CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '-1480453347' END)=(x'2877'))) IS TRUE)  as count FROM vt2, vt0, rt0, t1 ORDER BY (((rt0.c1)IS NOT(t1.c40)) IN (CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '-1480453347' END)==(x'2877'))) ORDER BY (((rt0.c1)IS NOT(t1.c40)) IN (CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '-1480453347' END)=(x'2877'))) IS TRUE)  as count FROM vt2, vt0, rt0, t1 ORDER BY (((rt0.c1)IS NOT(t1.c40)) IN (CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((CASE vt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '-1480453347' END)==(x'2877'))) ORDER BY (((rt0.c1)IS NOT(t1.c40)) IN (CASE rt0.c2  WHEN rt0.c2 THEN t1.c0 END))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c2)<=(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)) END);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (+ (t1.c40)) THEN (rt0.c2 IN ()) END) ORDER BY ((((((t1.c1) NOT NULL))OR(((((((((x'')OR(rt0.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c1)))))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t1.c40)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((((((t1.c1) NOT NULL))OR(((((((((x'')OR(rt0.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c1)))))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (+ (t1.c40)) THEN (rt0.c2 IN ()) END) ORDER BY ((((((t1.c1) NOT NULL))OR(((((((((x'')OR(rt0.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c1)))))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t1.c40)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t1, rt0 ORDER BY ((((((t1.c1) NOT NULL))OR(((((((((x'')OR(rt0.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c1)))))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (CASE WHEN (+ (t1.c40)) THEN (rt0.c2 IN ()) END) ORDER BY ((((((t1.c1) NOT NULL))OR(((((((((x'')OR(rt0.c0)))AND(t1.c40)))AND(t1.c0)))OR(t1.c1)))))AND(rt0.c0));
SELECT ALL * FROM rt0, vt2, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE 0.0026491095712455337 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE 0.0026491095712455337 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt2, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt2, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE 0.0026491095712455337 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE 0.0026491095712455337 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt2, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt2, vt0 WHERE (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE 0.0026491095712455337 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((- (rt0.c0)))) WHERE (CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)|(CAST(vt0.c0 AS INTEGER))) ASC, vt2.c0  NULLS FIRST, (-1.936053992E9 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((- (rt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)|(CAST(vt0.c0 AS INTEGER))) ASC, vt2.c0  NULLS FIRST, (-1.936053992E9 IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((- (rt0.c0)))) WHERE (CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)|(CAST(vt0.c0 AS INTEGER))) ASC, vt2.c0  NULLS FIRST, (-1.936053992E9 IN ()) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((- (rt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)|(CAST(vt0.c0 AS INTEGER))) ASC, vt2.c0  NULLS FIRST, (-1.936053992E9 IN ()) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))<=((- (rt0.c0)))) WHERE (CAST(((rt0.c0)OR(rt0.c1)) AS INTEGER)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)|(CAST(vt0.c0 AS INTEGER))) ASC, vt2.c0  NULLS FIRST, (-1.936053992E9 IN ()) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t1, vt2 LEFT OUTER JOIN vt0 ON (NOT (CAST(t1.c0 AS REAL))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)%(t1.c1)))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))AND(t1.c0)))AND(2015708000)))AND(vt0.c0)) WHERE (SUBSTR(((rt0.c2)||(t1.c1)), (((t1.c0, '883667140', rt0.c1, 1.734157979E9, t1.c1)) NOT BETWEEN ((t1.c0, t1.c40, -2.133374969E9, t1.c40, t1.c40)) AND ((vt2.c0, t1.c0, NULL, t1.c40, 0.8783137863510369)))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)||(t1.c1)), (((t1.c0, '883667140', rt0.c1, 1.734157979E9, t1.c1)) NOT BETWEEN ((t1.c0, t1.c40, -2.133374969E9, t1.c40, t1.c40)) AND ((vt2.c0, t1.c0, NULL, t1.c40, 0.8783137863510369))))) IS TRUE)  as count FROM t1, vt2 LEFT OUTER JOIN vt0 ON (NOT (CAST(t1.c0 AS REAL))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)%(t1.c1)))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))AND(t1.c0)))AND(2015708000)))AND(vt0.c0)));
SELECT COUNT(*) FROM t1, vt2 LEFT OUTER JOIN vt0 ON (NOT (CAST(t1.c0 AS REAL))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)%(t1.c1)))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))AND(t1.c0)))AND(2015708000)))AND(vt0.c0)) WHERE (SUBSTR(((rt0.c2)||(t1.c1)), (((t1.c0, '883667140', rt0.c1, 1.734157979E9, t1.c1)) NOT BETWEEN ((t1.c0, t1.c40, -2.133374969E9, t1.c40, t1.c40)) AND ((vt2.c0, t1.c0, NULL, t1.c40, 0.8783137863510369)))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(((rt0.c2)||(t1.c1)), (((t1.c0, '883667140', rt0.c1, 1.734157979E9, t1.c1)) NOT BETWEEN ((t1.c0, t1.c40, -2.133374969E9, t1.c40, t1.c40)) AND ((vt2.c0, t1.c0, NULL, t1.c40, 0.8783137863510369))))) IS TRUE)  as count FROM t1, vt2 LEFT OUTER JOIN vt0 ON (NOT (CAST(t1.c0 AS REAL))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)%(t1.c1)))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))AND(t1.c0)))AND(2015708000)))AND(vt0.c0)));
SELECT COUNT(*) FROM t1, vt2 LEFT OUTER JOIN vt0 ON (NOT (CAST(t1.c0 AS REAL))) FULL OUTER JOIN rt0 ON ((((((((((((((rt0.c0)%(t1.c1)))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))))AND(t1.c0)))AND(2015708000)))AND(vt0.c0)) WHERE (SUBSTR(((rt0.c2)||(t1.c1)), (((t1.c0, '883667140', rt0.c1, 1.734157979E9, t1.c1)) NOT BETWEEN ((t1.c0, t1.c40, -2.133374969E9, t1.c40, t1.c40)) AND ((vt2.c0, t1.c0, NULL, t1.c40, 0.8783137863510369)))));
SELECT * FROM t1, vt0 WHERE (((((t1.c40)>>(t1.c40))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c40)>>(t1.c40))) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c40)>>(t1.c40))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c40)>>(t1.c40))) ISNULL)) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((t1.c40)>>(t1.c40))) ISNULL));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0, t1 NATURAL JOIN vt2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))|((vt2.c0 IN (rt0.c1, -1651480807)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))|((vt2.c0 IN (rt0.c1, -1651480807))))) IS TRUE)  as count FROM vt0, rt0, t1 NATURAL JOIN vt2);
SELECT COUNT(*) FROM vt0, rt0, t1 NATURAL JOIN vt2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))|((vt2.c0 IN (rt0.c1, -1651480807)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))|((vt2.c0 IN (rt0.c1, -1651480807))))) IS TRUE)  as count FROM vt0, rt0, t1 NATURAL JOIN vt2);
SELECT COUNT(*) FROM vt0, rt0, t1 NATURAL JOIN vt2 WHERE (((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))|((vt2.c0 IN (rt0.c1, -1651480807)))));
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((((t1.c40) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c1 WHEN '?**A	' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (vt2.c0))) ORDER BY ((0.977747100043054) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (((rt0.c2)=(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c1 WHEN '?**A	' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (vt2.c0))) IS TRUE)  as count FROM vt2, vt0, rt0, t1 ORDER BY ((0.977747100043054) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (((rt0.c2)=(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((((t1.c40) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c1 WHEN '?**A	' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (vt2.c0))) ORDER BY ((0.977747100043054) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (((rt0.c2)=(rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c1 WHEN '?**A	' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (vt2.c0))) IS TRUE)  as count FROM vt2, vt0, rt0, t1 ORDER BY ((0.977747100043054) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (((rt0.c2)=(rt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, rt0, t1 WHERE (((((t1.c40) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c1 THEN t1.c1 WHEN '?**A	' THEN t1.c1 WHEN t1.c1 THEN t1.c0 ELSE NULL END) AND (vt2.c0))) ORDER BY ((0.977747100043054) NOT BETWEEN (((rt0.c2)-(rt0.c1))) AND (((rt0.c2)=(rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON LOWER(DISTINCT (((vt0.c0))<((vt2.c0)))) RIGHT OUTER JOIN vt2 ON t1.c40 LEFT OUTER JOIN rt0 ON (((NOT (vt0.c0)))>(x'')) WHERE (((((t1.c40)/(rt0.c2))) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON LOWER(DISTINCT (((vt0.c0))<((vt2.c0)))) RIGHT OUTER JOIN vt2 ON t1.c40 LEFT OUTER JOIN rt0 ON (((NOT (vt0.c0)))>(x'')) ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON LOWER(DISTINCT (((vt0.c0))<((vt2.c0)))) RIGHT OUTER JOIN vt2 ON t1.c40 LEFT OUTER JOIN rt0 ON (((NOT (vt0.c0)))>(x'')) WHERE (((((t1.c40)/(rt0.c2))) ISNULL)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON LOWER(DISTINCT (((vt0.c0))<((vt2.c0)))) RIGHT OUTER JOIN vt2 ON t1.c40 LEFT OUTER JOIN rt0 ON (((NOT (vt0.c0)))>(x'')) ORDER BY NULL DESC);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((NULL) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c2))=((rt0.c2))), (((rt0.c2))<>((0.6573637012173422))), CAST(rt0.c2 AS INTEGER), (~ (rt0.c2)))))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1, 0xffffffffa7fdfcbc, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))))) ASC, ((((rt0.c1)<(rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((NULL) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c2))==((rt0.c2))), (((rt0.c2))<>((0.6573637012173422))), CAST(rt0.c2 AS INTEGER), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1, 0xffffffffa7fdfcbc, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))))) ASC, ((((rt0.c1)<(rt0.c0))) ISNULL) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((NULL) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c2))=((rt0.c2))), (((rt0.c2))<>((0.6573637012173422))), CAST(rt0.c2 AS INTEGER), (~ (rt0.c2)))))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1, 0xffffffffa7fdfcbc, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))))) ASC, ((((rt0.c1)<(rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((NULL) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c2))==((rt0.c2))), (((rt0.c2))<>((0.6573637012173422))), CAST(rt0.c2 AS INTEGER), (~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOTNULL))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1, 0xffffffffa7fdfcbc, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))))) ASC, ((((rt0.c1)<(rt0.c0))) ISNULL) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c1)%(rt0.c1)), rt0.c0, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), rt0.c1 COLLATE BINARY, ((rt0.c0) NOTNULL))) AND ((((NULL) BETWEEN (rt0.c0) AND (NULL)), (((rt0.c2))=((rt0.c2))), (((rt0.c2))<>((0.6573637012173422))), CAST(rt0.c2 AS INTEGER), (~ (rt0.c2)))))) ORDER BY ((((((rt0.c0) NOTNULL))AND(CAST(rt0.c0 AS NUMERIC))))AND((((rt0.c1, 0xffffffffa7fdfcbc, rt0.c2))<=((rt0.c0, rt0.c2, rt0.c0))))) ASC, ((((rt0.c1)<(rt0.c0))) ISNULL) ASC;
SELECT ALL * FROM t1, vt2, rt0 WHERE (((t1.c0 COLLATE BINARY)>=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)>=(t1.c0))) IS TRUE)  as count FROM t1, vt2, rt0);
SELECT ALL * FROM t1, vt2, rt0 WHERE (((t1.c0 COLLATE BINARY)>=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)>=(t1.c0))) IS TRUE)  as count FROM t1, vt2, rt0);
SELECT ALL * FROM t1, vt2, rt0 WHERE (((t1.c0 COLLATE BINARY)>=(t1.c0)));
SELECT ALL * FROM rt0, vt0, vt2, t1 WHERE (CASE WHEN (x'' IN ()) THEN x'' END) ORDER BY ((((NULL)<=('cztc[ TNv')))*(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN x'' END) IS TRUE)  as count FROM rt0, vt0, vt2, t1 ORDER BY ((((NULL)<=('cztc[ TNv')))*(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt2, t1 WHERE (CASE WHEN (x'' IN ()) THEN x'' END) ORDER BY ((((NULL)<=('cztc[ TNv')))*(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN x'' END) IS TRUE)  as count FROM rt0, vt0, vt2, t1 ORDER BY ((((NULL)<=('cztc[ TNv')))*(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt2, t1 WHERE (CASE WHEN (x'' IN ()) THEN x'' END) ORDER BY ((((NULL)<=('cztc[ TNv')))*(CAST(rt0.c1 AS NUMERIC))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt2, vt0 WHERE (((CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((NULL)LIKE(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((NULL)LIKE(vt2.c0))))) IS TRUE)  as count FROM rt0, vt2, vt0);
SELECT ALL * FROM rt0, vt2, vt0 WHERE (((CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((NULL)LIKE(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((NULL)LIKE(vt2.c0))))) IS TRUE)  as count FROM rt0, vt2, vt0);
SELECT ALL * FROM rt0, vt2, vt0 WHERE (((CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((NULL)LIKE(vt2.c0)))));
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)IS(vt2.c0))) NOT BETWEEN (CAST(vt2.c0 AS REAL)) AND (x''))) ORDER BY (+ (((((x'')AND(vt2.c0)))OR(vt2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS(vt2.c0))) NOT BETWEEN (CAST(vt2.c0 AS REAL)) AND (x''))) IS TRUE)  as count FROM vt2 ORDER BY (+ (((((x'')AND(vt2.c0)))OR(vt2.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)IS(vt2.c0))) NOT BETWEEN (CAST(vt2.c0 AS REAL)) AND (x''))) ORDER BY (+ (((((x'')AND(vt2.c0)))OR(vt2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)IS(vt2.c0))) NOT BETWEEN (CAST(vt2.c0 AS REAL)) AND (x''))) IS TRUE)  as count FROM vt2 ORDER BY (+ (((((x'')AND(vt2.c0)))OR(vt2.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0)IS(vt2.c0))) NOT BETWEEN (CAST(vt2.c0 AS REAL)) AND (x''))) ORDER BY (+ (((((x'')AND(vt2.c0)))OR(vt2.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt2 WHERE (NULLIF(((vt2.c0)/(vt2.c0)), TYPEOF(DISTINCT vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt2.c0)/(vt2.c0)), TYPEOF(DISTINCT vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (NULLIF(((vt2.c0)/(vt2.c0)), TYPEOF(DISTINCT vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt2.c0)/(vt2.c0)), TYPEOF(DISTINCT vt2.c0))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (NULLIF(((vt2.c0)/(vt2.c0)), TYPEOF(DISTINCT vt2.c0)));
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON (- (((t1.c1) NOTNULL))) RIGHT OUTER JOIN vt2 ON (((t1.c0, HEX(rt0.c0), ((rt0.c0)>=(vt0.c0))))<=((0.23355492728572114, CASE WHEN -1.662398366E9 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c0 ELSE t1.c0 END, CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END))) WHERE ((t1.c40 IN ()) COLLATE NOCASE) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c40 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON (- (((t1.c1) NOTNULL))) RIGHT OUTER JOIN vt2 ON (((t1.c0, HEX(rt0.c0), ((rt0.c0)>=(vt0.c0))))<=((0.23355492728572114, CASE WHEN -1.662398366E9 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c0 ELSE t1.c0 END, CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON (- (((t1.c1) NOTNULL))) RIGHT OUTER JOIN vt2 ON (((t1.c0, HEX(rt0.c0), ((rt0.c0)>=(vt0.c0))))<=((0.23355492728572114, CASE WHEN -1.662398366E9 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c0 ELSE t1.c0 END, CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END))) WHERE ((t1.c40 IN ()) COLLATE NOCASE) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((t1.c40 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON (- (((t1.c1) NOTNULL))) RIGHT OUTER JOIN vt2 ON (((t1.c0, HEX(rt0.c0), ((rt0.c0)>=(vt0.c0))))<=((0.23355492728572114, CASE WHEN -1.662398366E9 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c0 ELSE t1.c0 END, CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END))) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN rt0 ON (- (((t1.c1) NOTNULL))) RIGHT OUTER JOIN vt2 ON (((t1.c0, HEX(rt0.c0), ((rt0.c0)>=(vt0.c0))))<=((0.23355492728572114, CASE WHEN -1.662398366E9 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt2.c0 THEN rt0.c0 ELSE t1.c0 END, CASE WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END))) WHERE ((t1.c40 IN ()) COLLATE NOCASE) ORDER BY (rt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c40 END  WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c40)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t1.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c40 END  WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c40)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE (- (t1.c0)) END) IS TRUE)  as count FROM vt2, t1, rt0, vt0);
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c40 END  WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c40)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE (- (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t1.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c40 END  WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c40)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE (- (t1.c0)) END) IS TRUE)  as count FROM vt2, t1, rt0, vt0);
SELECT COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c40 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN t1.c40 END  WHEN ((((rt0.c2)OR(rt0.c0)))AND(t1.c40)) THEN (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) ELSE (- (t1.c0)) END);
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((((((((((((t1.c40)OR(t1.c0)))AND(vt2.c0)))AND(t1.c0)))OR(t1.c40)))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c40))))))AND(json_object(t1.c0, t1.c40)))) ORDER BY (+ (((vt2.c0) IS FALSE))) DESC, ((((((((0xffffffff9fe102ad)AND((vt2.c0 IN ()))))OR(((((((((vt2.c0)OR(x'')))OR(t1.c40)))AND('-1612643667')))OR(vt0.c0)))))OR(t1.c1)))OR(((vt0.c0) IS TRUE)))  NULLS FIRST, CAST(((t1.c40)-(vt2.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c40)OR(t1.c0)))AND(vt2.c0)))AND(t1.c0)))OR(t1.c40)))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c40))))))AND(json_object(t1.c0, t1.c40)))) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY (+ (((vt2.c0) IS FALSE))) DESC, ((((((((0xffffffff9fe102ad)AND((vt2.c0 IN ()))))OR(((((((((vt2.c0)OR(x'')))OR(t1.c40)))AND('-1612643667')))OR(vt0.c0)))))OR(t1.c1)))OR(((vt0.c0) IS TRUE)))  NULLS FIRST, CAST(((t1.c40)-(vt2.c0)) AS NUMERIC));
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((((((((((((t1.c40)OR(t1.c0)))AND(vt2.c0)))AND(t1.c0)))OR(t1.c40)))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c40))))))AND(json_object(t1.c0, t1.c40)))) ORDER BY (+ (((vt2.c0) IS FALSE))) DESC, ((((((((0xffffffff9fe102ad)AND((vt2.c0 IN ()))))OR(((((((((vt2.c0)OR(x'')))OR(t1.c40)))AND('-1612643667')))OR(vt0.c0)))))OR(t1.c1)))OR(((vt0.c0) IS TRUE)))  NULLS FIRST, CAST(((t1.c40)-(vt2.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c40)OR(t1.c0)))AND(vt2.c0)))AND(t1.c0)))OR(t1.c40)))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c40))))))AND(json_object(t1.c0, t1.c40)))) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY (+ (((vt2.c0) IS FALSE))) DESC, ((((((((0xffffffff9fe102ad)AND((vt2.c0 IN ()))))OR(((((((((vt2.c0)OR(x'')))OR(t1.c40)))AND('-1612643667')))OR(vt0.c0)))))OR(t1.c1)))OR(((vt0.c0) IS TRUE)))  NULLS FIRST, CAST(((t1.c40)-(vt2.c0)) AS NUMERIC));
SELECT ALL * FROM vt2, vt0 NOT INDEXED, t1 WHERE (((((((((((((t1.c40)OR(t1.c0)))AND(vt2.c0)))AND(t1.c0)))OR(t1.c40)))OR((((t1.c0)) BETWEEN ((t1.c1)) AND ((t1.c40))))))AND(json_object(t1.c0, t1.c40)))) ORDER BY (+ (((vt2.c0) IS FALSE))) DESC, ((((((((0xffffffff9fe102ad)AND((vt2.c0 IN ()))))OR(((((((((vt2.c0)OR(x'')))OR(t1.c40)))AND('-1612643667')))OR(vt0.c0)))))OR(t1.c1)))OR(((vt0.c0) IS TRUE)))  NULLS FIRST, CAST(((t1.c40)-(vt2.c0)) AS NUMERIC);
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt2 ON TYPEOF(DISTINCT ((vt0.c0)AND(t1.c0))) RIGHT OUTER JOIN vt0 ON ((((vt2.c0) BETWEEN (rt0.c1) AND (vt2.c0)))<<(((vt2.c0) IS TRUE))) WHERE (LIKELIHOOD(DISTINCT (((t1.c40))<=((t1.c0))), 0.056171814896651684));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t1.c40))<=((t1.c0))), 0.056171814896651684)) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt2 ON TYPEOF(DISTINCT ((vt0.c0)AND(t1.c0))) RIGHT OUTER JOIN vt0 ON ((((vt2.c0) BETWEEN (rt0.c1) AND (vt2.c0)))<<(((vt2.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t1, rt0 CROSS JOIN vt2 ON TYPEOF(DISTINCT ((vt0.c0)AND(t1.c0))) RIGHT OUTER JOIN vt0 ON ((((vt2.c0) BETWEEN (rt0.c1) AND (vt2.c0)))<<(((vt2.c0) IS TRUE))) WHERE (LIKELIHOOD(DISTINCT (((t1.c40))<=((t1.c0))), 0.056171814896651684));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t1.c40))<=((t1.c0))), 0.056171814896651684)) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt2 ON TYPEOF(DISTINCT ((vt0.c0)AND(t1.c0))) RIGHT OUTER JOIN vt0 ON ((((vt2.c0) BETWEEN (rt0.c1) AND (vt2.c0)))<<(((vt2.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c0, vt0.c0, t1.c1))<=((t1.c1, t1.c1, t1.c1))))>=(((t1.c1)<=(t1.c40)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0, vt0.c0, t1.c1))<=((t1.c1, t1.c1, t1.c1))))>=(((t1.c1)<=(t1.c40))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c0, vt0.c0, t1.c1))<=((t1.c1, t1.c1, t1.c1))))>=(((t1.c1)<=(t1.c40)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0, vt0.c0, t1.c1))<=((t1.c1, t1.c1, t1.c1))))>=(((t1.c1)<=(t1.c40))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((t1.c0, vt0.c0, t1.c1))<=((t1.c1, t1.c1, t1.c1))))>=(((t1.c1)<=(t1.c40)))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE ((((((((((((((((vt0.c0))=((vt0.c0))))AND(rt0.c1)))OR(((rt0.c0)||(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))))OR(t1.c1 COLLATE RTRIM)))OR(UNLIKELY(DISTINCT rt0.c0))))AND(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0))=((vt0.c0))))AND(rt0.c1)))OR(((rt0.c0)||(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))))OR(t1.c1 COLLATE RTRIM)))OR(UNLIKELY(DISTINCT rt0.c0))))AND(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t1, vt2);
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE ((((((((((((((((vt0.c0))=((vt0.c0))))AND(rt0.c1)))OR(((rt0.c0)||(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))))OR(t1.c1 COLLATE RTRIM)))OR(UNLIKELY(DISTINCT rt0.c0))))AND(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0))=((vt0.c0))))AND(rt0.c1)))OR(((rt0.c0)||(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))))OR(t1.c1 COLLATE RTRIM)))OR(UNLIKELY(DISTINCT rt0.c0))))AND(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t1, vt2);
SELECT COUNT(*) FROM rt0, vt0, t1, vt2 WHERE ((((((((((((((((vt0.c0))=((vt0.c0))))AND(rt0.c1)))OR(((rt0.c0)||(t1.c0)))))AND(((t1.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)))))OR(t1.c1 COLLATE RTRIM)))OR(UNLIKELY(DISTINCT rt0.c0))))AND(t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>>(-2.73282168E8))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (0.5245503958399304))) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(-2.73282168E8))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (0.5245503958399304))) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>>(-2.73282168E8))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (0.5245503958399304))) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(-2.73282168E8))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (0.5245503958399304))) IS TRUE)  as count FROM rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>>(-2.73282168E8))) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (0.5245503958399304))) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM vt2, rt0 WHERE (((UPPER(rt0.c1)) NOT NULL)) ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0)<<(rt0.c2)))))AND(CAST(vt2.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0)<<(rt0.c2)))))AND(CAST(vt2.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, rt0 WHERE (((UPPER(rt0.c1)) NOT NULL)) ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0)<<(rt0.c2)))))AND(CAST(vt2.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0)<<(rt0.c2)))))AND(CAST(vt2.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, rt0 WHERE (((UPPER(rt0.c1)) NOT NULL)) ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0)<<(rt0.c2)))))AND(CAST(vt2.c0 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (((((t1.c40 IN ())))>=((CAST(vt2.c0 AS BLOB))))) ORDER BY COALESCE(TRIM(DISTINCT t1.c0, t1.c0), ((t1.c0)<(t1.c40)), ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt2.c0)), t1.c40)  NULLS LAST, t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 IN ())))>=((CAST(vt2.c0 AS BLOB))))) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY COALESCE(TRIM(DISTINCT t1.c0, t1.c0), ((t1.c0)<(t1.c40)), ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt2.c0)), t1.c40)  NULLS LAST, t1.c1 ASC);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (((((t1.c40 IN ())))>=((CAST(vt2.c0 AS BLOB))))) ORDER BY COALESCE(TRIM(DISTINCT t1.c0, t1.c0), ((t1.c0)<(t1.c40)), ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt2.c0)), t1.c40)  NULLS LAST, t1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 IN ())))>=((CAST(vt2.c0 AS BLOB))))) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY COALESCE(TRIM(DISTINCT t1.c0, t1.c0), ((t1.c0)<(t1.c40)), ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt2.c0)), t1.c40)  NULLS LAST, t1.c1 ASC);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (((((t1.c40 IN ())))>=((CAST(vt2.c0 AS BLOB))))) ORDER BY COALESCE(TRIM(DISTINCT t1.c0, t1.c0), ((t1.c0)<(t1.c40)), ((vt0.c0) NOT BETWEEN (t1.c1) AND (vt2.c0)), t1.c40)  NULLS LAST, t1.c1 ASC;
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) IS TRUE) AS INTEGER) WHERE (((vt0.c0)>>(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(rt0.c0))) BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.004888052609776539 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1)>>(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) IS TRUE) AS INTEGER) ORDER BY ((((t1.c1)IS(rt0.c0))) BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.004888052609776539 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1)>>(''))))  NULLS FIRST);
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) IS TRUE) AS INTEGER) WHERE (((vt0.c0)>>(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(rt0.c0))) BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.004888052609776539 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1)>>(''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) IS TRUE) AS INTEGER) ORDER BY ((((t1.c1)IS(rt0.c0))) BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.004888052609776539 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1)>>(''))))  NULLS FIRST);
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1) IS TRUE) AS INTEGER) WHERE (((vt0.c0)>>(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c1)IS(rt0.c0))) BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c1 THEN 0.004888052609776539 WHEN t1.c0 THEN t1.c1 END) AND (((t1.c1)>>(''))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN 1.533161011E9 THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))IS(((rt0.c1)<>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c1))  WHEN 1.533161011E9 THEN (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))IS(((rt0.c1)!=(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN 1.533161011E9 THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))IS(((rt0.c1)<>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c1))  WHEN 1.533161011E9 THEN (rt0.c0 IN (rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))IS(((rt0.c1)!=(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN 1.533161011E9 THEN (rt0.c0 IN (rt0.c1)) END) ORDER BY ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))IS(((rt0.c1)<>(rt0.c0))))  NULLS FIRST;
SELECT * FROM t1, vt0, rt0 WHERE (((x'')IS(((((((((((((rt0.c0)AND(t1.c1)))OR(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(t1.c0))))) ORDER BY ((((rt0.c1, t1.c40, t1.c40)) BETWEEN ((rt0.c1, t1.c1, rt0.c2)) AND ((t1.c40, rt0.c2, t1.c40))) IN ())  NULLS FIRST, ((NOT (rt0.c0)) IN ())  NULLS LAST, RTRIM(NULL COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(((((((((((((rt0.c0)AND(t1.c1)))OR(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((rt0.c1, t1.c40, t1.c40)) BETWEEN ((rt0.c1, t1.c1, rt0.c2)) AND ((t1.c40, rt0.c2, t1.c40))) IN ())  NULLS FIRST, ((NOT (rt0.c0)) IN ())  NULLS LAST, RTRIM(NULL COLLATE BINARY)  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 WHERE (((x'')IS(((((((((((((rt0.c0)AND(t1.c1)))OR(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(t1.c0))))) ORDER BY ((((rt0.c1, t1.c40, t1.c40)) BETWEEN ((rt0.c1, t1.c1, rt0.c2)) AND ((t1.c40, rt0.c2, t1.c40))) IN ())  NULLS FIRST, ((NOT (rt0.c0)) IN ())  NULLS LAST, RTRIM(NULL COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')IS(((((((((((((rt0.c0)AND(t1.c1)))OR(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY ((((rt0.c1, t1.c40, t1.c40)) BETWEEN ((rt0.c1, t1.c1, rt0.c2)) AND ((t1.c40, rt0.c2, t1.c40))) IN ())  NULLS FIRST, ((NOT (rt0.c0)) IN ())  NULLS LAST, RTRIM(NULL COLLATE BINARY)  NULLS FIRST);
SELECT * FROM t1, vt0, rt0 WHERE (((x'')IS(((((((((((((rt0.c0)AND(t1.c1)))OR(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(t1.c0))))) ORDER BY ((((rt0.c1, t1.c40, t1.c40)) BETWEEN ((rt0.c1, t1.c1, rt0.c2)) AND ((t1.c40, rt0.c2, t1.c40))) IN ())  NULLS FIRST, ((NOT (rt0.c0)) IN ())  NULLS LAST, RTRIM(NULL COLLATE BINARY)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0) ISNULL))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND(QUOTE(rt0.c1))))OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) ISNULL))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND(QUOTE(rt0.c1))))OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0) ISNULL))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND(QUOTE(rt0.c1))))OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) ISNULL))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND(QUOTE(rt0.c1))))OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c0) ISNULL))AND(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c0) NOTNULL))))AND(QUOTE(rt0.c1))))OR(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS BLOB))));
SELECT * FROM t1 WHERE (((t1.c0)LIKE((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))))) ORDER BY (NOT ((- (t1.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)LIKE((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (NOT ((- (t1.c40)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c0)LIKE((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))))) ORDER BY (NOT ((- (t1.c40)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)LIKE((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY (NOT ((- (t1.c40)))) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (((t1.c0)LIKE((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c0)))))) ORDER BY (NOT ((- (t1.c40)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)*(vt0.c0))))) ORDER BY (+ (((-1536123895)IS NOT('73830692'))))  NULLS FIRST, (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((-1536123895)IS NOT('73830692'))))  NULLS FIRST, (~ ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)*(vt0.c0))))) ORDER BY (+ (((-1536123895)IS NOT('73830692'))))  NULLS FIRST, (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((-1536123895)IS NOT('73830692'))))  NULLS FIRST, (~ ((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((vt0.c0)*(vt0.c0))))) ORDER BY (+ (((-1536123895)IS NOT('73830692'))))  NULLS FIRST, (~ ((vt0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (UNLIKELY(CASE WHEN t1.c0 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (UNLIKELY(CASE WHEN t1.c0 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t1.c0 THEN t1.c0 END)) IS TRUE)  as count FROM t1, rt0, vt2);
SELECT ALL COUNT(*) FROM t1, rt0, vt2 WHERE (UNLIKELY(CASE WHEN t1.c0 THEN t1.c0 END));
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((((~ (t1.c0)))AND(((t1.c0)<>(t1.c0)))))AND(rt0.c2)) WHERE (CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN (~ (rt0.c2)) ELSE (((t1.c0, vt2.c0, vt2.c0))<=((t1.c1, t1.c40, t1.c40))) END) ORDER BY (((rt0.c0))==((rt0.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN (~ (rt0.c2)) ELSE (((t1.c0, vt2.c0, vt2.c0))<=((t1.c1, t1.c40, t1.c40))) END) IS TRUE)  as count FROM t1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((((~ (t1.c0)))AND(((t1.c0)!=(t1.c0)))))AND(rt0.c2)) ORDER BY (((rt0.c0))==((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((((~ (t1.c0)))AND(((t1.c0)<>(t1.c0)))))AND(rt0.c2)) WHERE (CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN (~ (rt0.c2)) ELSE (((t1.c0, vt2.c0, vt2.c0))<=((t1.c1, t1.c40, t1.c40))) END) ORDER BY (((rt0.c0))==((rt0.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN (~ (rt0.c2)) ELSE (((t1.c0, vt2.c0, vt2.c0))<=((t1.c1, t1.c40, t1.c40))) END) IS TRUE)  as count FROM t1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((((~ (t1.c0)))AND(((t1.c0)!=(t1.c0)))))AND(rt0.c2)) ORDER BY (((rt0.c0))==((rt0.c2))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN vt2 ON (((((~ (t1.c0)))AND(((t1.c0)<>(t1.c0)))))AND(rt0.c2)) WHERE (CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN (~ (rt0.c2)) ELSE (((t1.c0, vt2.c0, vt2.c0))<=((t1.c1, t1.c40, t1.c40))) END) ORDER BY (((rt0.c0))==((rt0.c2))) COLLATE BINARY;
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 NATURAL JOIN t1);
SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (((vt0.c0)GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (((vt0.c0)GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM vt2, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 WHERE (((vt0.c0)GLOB((rt0.c1 IN ()))));
SELECT ALL * FROM rt0, vt0, vt2 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((((rt0.c2)|(vt0.c0)))<>(((vt2.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((((rt0.c2)|(vt0.c0)))!=(((vt2.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt2 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((((rt0.c2)|(vt0.c0)))<>(((vt2.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((((rt0.c2)|(vt0.c0)))!=(((vt2.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt2 WHERE ((((rt0.c0 IN ())) IS FALSE)) ORDER BY ((((rt0.c2)|(vt0.c0)))<>(((vt2.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 WHERE ('sW');
SELECT SUM(count) FROM (SELECT ALL (('sW') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('sW');
SELECT SUM(count) FROM (SELECT ALL (('sW') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('sW');
SELECT ALL * FROM vt0, vt2, t1 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((((t1.c40))>((t1.c1)))) IS TRUE), (((((~ (t1.c1)))AND(((t1.c0)+(0.7457424531335819)))))OR(CAST(t1.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt2, t1 ORDER BY (((((t1.c40))>((t1.c1)))) IS TRUE), (((((~ (t1.c1)))AND(((t1.c0)+(0.7457424531335819)))))OR(CAST(t1.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, t1 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((((t1.c40))>((t1.c1)))) IS TRUE), (((((~ (t1.c1)))AND(((t1.c0)+(0.7457424531335819)))))OR(CAST(t1.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt2, t1 ORDER BY (((((t1.c40))>((t1.c1)))) IS TRUE), (((((~ (t1.c1)))AND(((t1.c0)+(0.7457424531335819)))))OR(CAST(t1.c1 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, t1 WHERE ((~ ((vt0.c0 IN ())))) ORDER BY (((((t1.c40))>((t1.c1)))) IS TRUE), (((((~ (t1.c1)))AND(((t1.c0)+(0.7457424531335819)))))OR(CAST(t1.c1 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt2, rt0 CROSS JOIN t1 ON 0.39523429369582075 WHERE (COALESCE(CASE WHEN rt0.c0 THEN vt2.c0 WHEN x'e456dfad' THEN '290529770' WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c40 ELSE rt0.c2 END, ((rt0.c0)/(rt0.c0)), ((t1.c40) NOT NULL), CASE WHEN rt0.c2 THEN 0X6258fdda END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE WHEN rt0.c0 THEN vt2.c0 WHEN x'e456dfad' THEN '290529770' WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c40 ELSE rt0.c2 END, ((rt0.c0)/(rt0.c0)), ((t1.c40) NOT NULL), CASE WHEN rt0.c2 THEN 0X6258fdda END)) IS TRUE)  as count FROM vt2, rt0 CROSS JOIN t1 ON 0.39523429369582075);
SELECT ALL * FROM vt2, rt0 CROSS JOIN t1 ON 0.39523429369582075 WHERE (COALESCE(CASE WHEN rt0.c0 THEN vt2.c0 WHEN x'e456dfad' THEN '290529770' WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c40 ELSE rt0.c2 END, ((rt0.c0)/(rt0.c0)), ((t1.c40) NOT NULL), CASE WHEN rt0.c2 THEN 0X6258fdda END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE WHEN rt0.c0 THEN vt2.c0 WHEN x'e456dfad' THEN '290529770' WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c40 ELSE rt0.c2 END, ((rt0.c0)/(rt0.c0)), ((t1.c40) NOT NULL), CASE WHEN rt0.c2 THEN 0X6258fdda END)) IS TRUE)  as count FROM vt2, rt0 CROSS JOIN t1 ON 0.39523429369582075);
SELECT ALL * FROM vt2, rt0 CROSS JOIN t1 ON 0.39523429369582075 WHERE (COALESCE(CASE WHEN rt0.c0 THEN vt2.c0 WHEN x'e456dfad' THEN '290529770' WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c40 ELSE rt0.c2 END, ((rt0.c0)/(rt0.c0)), ((t1.c40) NOT NULL), CASE WHEN rt0.c2 THEN 0X6258fdda END));
SELECT * FROM vt0 WHERE (CAST(0.8593492170598657 AS INTEGER)) ORDER BY ((vt0.c0)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'ku,+' THEN '-1608279496' WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8593492170598657 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'ku,+' THEN '-1608279496' WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(0.8593492170598657 AS INTEGER)) ORDER BY ((vt0.c0)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'ku,+' THEN '-1608279496' WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8593492170598657 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'ku,+' THEN '-1608279496' WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(0.8593492170598657 AS INTEGER)) ORDER BY ((vt0.c0)<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 'ku,+' THEN '-1608279496' WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM rt0, vt2, vt0, t1 NOT INDEXED WHERE ((((((- (t1.c0)))AND(((((t1.c0)OR(t1.c40)))AND(rt0.c1)))))OR('')));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))AND(((((t1.c0)OR(t1.c40)))AND(rt0.c1)))))OR(''))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT * FROM rt0, vt2, vt0, t1 NOT INDEXED WHERE ((((((- (t1.c0)))AND(((((t1.c0)OR(t1.c40)))AND(rt0.c1)))))OR('')));
SELECT SUM(count) FROM (SELECT ALL (((((((- (t1.c0)))AND(((((t1.c0)OR(t1.c40)))AND(rt0.c1)))))OR(''))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT * FROM rt0, vt2, vt0, t1 NOT INDEXED WHERE ((((((- (t1.c0)))AND(((((t1.c0)OR(t1.c40)))AND(rt0.c1)))))OR('')));
SELECT ALL * FROM t1, vt2 CROSS JOIN vt0 ON ((((x'') NOTNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((t1.c40) IS FALSE))) LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c1 AS REAL))AND(('-1' IN ()))))OR(((vt0.c0) BETWEEN (t1.c40) AND (rt0.c0)))))OR(((rt0.c0)OR('0.17317153677011676')))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t1, vt2 CROSS JOIN vt0 ON ((((x'') NOTNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((t1.c40) IS FALSE))) LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c1 AS REAL))AND(('-1' IN ()))))OR(((vt0.c0) BETWEEN (t1.c40) AND (rt0.c0)))))OR(((rt0.c0)OR('0.17317153677011676')))))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM t1, vt2 CROSS JOIN vt0 ON ((((x'') NOTNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((t1.c40) IS FALSE))) LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c1 AS REAL))AND(('-1' IN ()))))OR(((vt0.c0) BETWEEN (t1.c40) AND (rt0.c0)))))OR(((rt0.c0)OR('0.17317153677011676')))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (rt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t1, vt2 CROSS JOIN vt0 ON ((((x'') NOTNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((t1.c40) IS FALSE))) LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c1 AS REAL))AND(('-1' IN ()))))OR(((vt0.c0) BETWEEN (t1.c40) AND (rt0.c0)))))OR(((rt0.c0)OR('0.17317153677011676')))))OR(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM t1, vt2 CROSS JOIN vt0 ON ((((x'') NOTNULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((t1.c40) IS FALSE))) LEFT OUTER JOIN rt0 ON ((((((((CAST(rt0.c1 AS REAL))AND(('-1' IN ()))))OR(((vt0.c0) BETWEEN (t1.c40) AND (rt0.c0)))))OR(((rt0.c0)OR('0.17317153677011676')))))OR(CAST(rt0.c1 AS NUMERIC))) WHERE (rt0.c1 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt2.c0))<((rt0.c2))) IN ((x'' IN ()))) LEFT OUTER JOIN vt2 ON CAST(t1.c1 AS NUMERIC) COLLATE RTRIM INNER JOIN t1 ON (((NULL, CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (+ (vt0.c0))))!=(('', ABS(t1.c40), ((0x423eead3)==(rt0.c2))))) WHERE (((((rt0.c1) IS FALSE))-(vt2.c0 COLLATE BINARY))) ORDER BY json_array_length((NOT (rt0.c1)), ((rt0.c0) ISNULL)) DESC  NULLS LAST, -1.33270582E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))-(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt2.c0))<((rt0.c2))) IN ((x'' IN ()))) LEFT OUTER JOIN vt2 ON CAST(t1.c1 AS NUMERIC) COLLATE RTRIM INNER JOIN t1 ON (((NULL, CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (+ (vt0.c0))))<>(('', ABS(t1.c40), ((0X423eead3)==(rt0.c2))))) ORDER BY json_array_length((NOT (rt0.c1)), ((rt0.c0) ISNULL)) DESC  NULLS LAST, -1.33270582E8 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt2.c0))<((rt0.c2))) IN ((x'' IN ()))) LEFT OUTER JOIN vt2 ON CAST(t1.c1 AS NUMERIC) COLLATE RTRIM INNER JOIN t1 ON (((NULL, CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (+ (vt0.c0))))!=(('', ABS(t1.c40), ((0x423eead3)==(rt0.c2))))) WHERE (((((rt0.c1) IS FALSE))-(vt2.c0 COLLATE BINARY))) ORDER BY json_array_length((NOT (rt0.c1)), ((rt0.c0) ISNULL)) DESC  NULLS LAST, -1.33270582E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))-(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt2.c0))<((rt0.c2))) IN ((x'' IN ()))) LEFT OUTER JOIN vt2 ON CAST(t1.c1 AS NUMERIC) COLLATE RTRIM INNER JOIN t1 ON (((NULL, CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END, (+ (vt0.c0))))<>(('', ABS(t1.c40), ((0X423eead3)==(rt0.c2))))) ORDER BY json_array_length((NOT (rt0.c1)), ((rt0.c0) ISNULL)) DESC  NULLS LAST, -1.33270582E8 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0, vt2.c0, vt0.c0, t1.c0, t1.c40)) BETWEEN (((+ (rt0.c0)), CAST(t1.c40 AS TEXT), CASE WHEN t1.c1 THEN vt2.c0 END, ((rt0.c0)IS NOT(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND (((t1.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE), DATETIME('-1210358556', t1.c0, rt0.c1), (t1.c1 IN (rt0.c1, rt0.c0)), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt2.c0, vt0.c0, t1.c0, t1.c40)) BETWEEN (((+ (rt0.c0)), CAST(t1.c40 AS TEXT), CASE WHEN t1.c1 THEN vt2.c0 END, ((rt0.c0)IS NOT(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND (((t1.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE), DATETIME('-1210358556', t1.c0, rt0.c1), (t1.c1 IN (rt0.c1, rt0.c0)), rt0.c0)))) IS TRUE)  as count FROM vt2, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0, vt2.c0, vt0.c0, t1.c0, t1.c40)) BETWEEN (((+ (rt0.c0)), CAST(t1.c40 AS TEXT), CASE WHEN t1.c1 THEN vt2.c0 END, ((rt0.c0)IS NOT(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND (((t1.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE), DATETIME('-1210358556', t1.c0, rt0.c1), (t1.c1 IN (rt0.c1, rt0.c0)), rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt2.c0, vt0.c0, t1.c0, t1.c40)) BETWEEN (((+ (rt0.c0)), CAST(t1.c40 AS TEXT), CASE WHEN t1.c1 THEN vt2.c0 END, ((rt0.c0)IS NOT(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND (((t1.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE), DATETIME('-1210358556', t1.c0, rt0.c1), (t1.c1 IN (rt0.c1, rt0.c0)), rt0.c0)))) IS TRUE)  as count FROM vt2, t1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt2, t1, vt0, rt0 WHERE ((((rt0.c0, vt2.c0, vt0.c0, t1.c0, t1.c40)) BETWEEN (((+ (rt0.c0)), CAST(t1.c40 AS TEXT), CASE WHEN t1.c1 THEN vt2.c0 END, ((rt0.c0)IS NOT(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND (((t1.c0 IN (rt0.c0)), ((rt0.c0) IS FALSE), DATETIME('-1210358556', t1.c0, rt0.c1), (t1.c1 IN (rt0.c1, rt0.c0)), rt0.c0))));
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((t1.c40 IN ())))>=((LIKELIHOOD(DISTINCT t1.c1, 0.7246544210373487)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 IN ())))>=((LIKELIHOOD(DISTINCT t1.c1, 0.7246544210373487))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((t1.c40 IN ())))>=((LIKELIHOOD(DISTINCT t1.c1, 0.7246544210373487)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c40 IN ())))>=((LIKELIHOOD(DISTINCT t1.c1, 0.7246544210373487))))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (((((t1.c40 IN ())))>=((LIKELIHOOD(DISTINCT t1.c1, 0.7246544210373487)))));
SELECT COUNT(*) FROM vt2, vt0 NOT INDEXED, t1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 END)|(CAST(vt2.c0 AS TEXT)))) ORDER BY CASE WHEN NULL THEN CAST(vt0.c0 AS TEXT) ELSE ((vt2.c0)+(rt0.c0)) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (rt0.c2 COLLATE BINARY IN ((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 END)|(CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0, t1, rt0 ORDER BY CASE WHEN NULL THEN CAST(vt0.c0 AS TEXT) ELSE ((vt2.c0)+(rt0.c0)) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (rt0.c2 COLLATE BINARY IN ((rt0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM vt2, vt0 NOT INDEXED, t1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 END)|(CAST(vt2.c0 AS TEXT)))) ORDER BY CASE WHEN NULL THEN CAST(vt0.c0 AS TEXT) ELSE ((vt2.c0)+(rt0.c0)) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (rt0.c2 COLLATE BINARY IN ((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 END)|(CAST(vt2.c0 AS TEXT)))) IS TRUE)  as count FROM vt2, vt0, t1, rt0 ORDER BY CASE WHEN NULL THEN CAST(vt0.c0 AS TEXT) ELSE ((vt2.c0)+(rt0.c0)) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (rt0.c2 COLLATE BINARY IN ((rt0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM vt2, vt0 NOT INDEXED, t1, rt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 END)|(CAST(vt2.c0 AS TEXT)))) ORDER BY CASE WHEN NULL THEN CAST(vt0.c0 AS TEXT) ELSE ((vt2.c0)+(rt0.c0)) END, CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, (rt0.c2 COLLATE BINARY IN ((rt0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE (0X8b947fa);
SELECT SUM(count) FROM (SELECT ALL ((0x8b947fa) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE (0X8b947fa);
SELECT SUM(count) FROM (SELECT ALL ((0x8b947fa) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt2, rt0 WHERE (0X8b947fa);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))|((vt0.c0 IN ()))) WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt2.c0, '', vt2.c0))) AS INTEGER)) ORDER BY (((((0X5f456706) IS FALSE)))>(((vt2.c0 IN (vt2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt2.c0, '', vt2.c0))) AS INTEGER)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))|((vt0.c0 IN ()))) ORDER BY (((((0X5f456706) IS FALSE)))>(((vt2.c0 IN (vt2.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))|((vt0.c0 IN ()))) WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt2.c0, '', vt2.c0))) AS INTEGER)) ORDER BY (((((0X5f456706) IS FALSE)))>(((vt2.c0 IN (vt2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt2.c0, '', vt2.c0))) AS INTEGER)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))|((vt0.c0 IN ()))) ORDER BY (((((0X5f456706) IS FALSE)))>(((vt2.c0 IN (vt2.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))|((vt0.c0 IN ()))) WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0))<=((vt2.c0, '', vt2.c0))) AS INTEGER)) ORDER BY (((((0X5f456706) IS FALSE)))>(((vt2.c0 IN (vt2.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM vt2 INNER JOIN rt0 ON ((((rt0.c2)=(rt0.c1)))LIKE(((rt0.c1) IS FALSE))) WHERE (LOWER(CASE WHEN vt2.c0 THEN vt2.c0 END)) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN vt2.c0 THEN (rt0.c0 IN ()) WHEN (+ (rt0.c1)) THEN ((rt0.c0)=(vt2.c0)) WHEN ((rt0.c1) ISNULL) THEN (+ (rt0.c1)) WHEN ((vt2.c0)OR(vt2.c0)) THEN ((rt0.c0)||(0.389792240585928)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST, (~ (json_quote(vt2.c0))), ((((((((CAST(vt2.c0 AS REAL))OR((((vt2.c0, 0.6982751229011368, rt0.c2))<>((x'f50c', rt0.c0, rt0.c0))))))AND((+ (vt2.c0)))))OR(((rt0.c2)/(vt2.c0)))))OR(ABS(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN vt2.c0 THEN vt2.c0 END)) IS TRUE)  as count FROM vt2 INNER JOIN rt0 ON ((((rt0.c2)==(rt0.c1)))LIKE(((rt0.c1) IS FALSE))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN vt2.c0 THEN (rt0.c0 IN ()) WHEN (+ (rt0.c1)) THEN ((rt0.c0)==(vt2.c0)) WHEN ((rt0.c1) ISNULL) THEN (+ (rt0.c1)) WHEN ((vt2.c0)OR(vt2.c0)) THEN ((rt0.c0)||(0.389792240585928)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST, (~ (json_quote(vt2.c0))), ((((((((CAST(vt2.c0 AS REAL))OR((((vt2.c0, 0.6982751229011368, rt0.c2))<>((x'f50c', rt0.c0, rt0.c0))))))AND((+ (vt2.c0)))))OR(((rt0.c2)/(vt2.c0)))))OR(ABS(x''))) ASC  NULLS LAST);
SELECT ALL * FROM vt2 INNER JOIN rt0 ON ((((rt0.c2)=(rt0.c1)))LIKE(((rt0.c1) IS FALSE))) WHERE (LOWER(CASE WHEN vt2.c0 THEN vt2.c0 END)) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN vt2.c0 THEN (rt0.c0 IN ()) WHEN (+ (rt0.c1)) THEN ((rt0.c0)=(vt2.c0)) WHEN ((rt0.c1) ISNULL) THEN (+ (rt0.c1)) WHEN ((vt2.c0)OR(vt2.c0)) THEN ((rt0.c0)||(0.389792240585928)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST, (~ (json_quote(vt2.c0))), ((((((((CAST(vt2.c0 AS REAL))OR((((vt2.c0, 0.6982751229011368, rt0.c2))<>((x'f50c', rt0.c0, rt0.c0))))))AND((+ (vt2.c0)))))OR(((rt0.c2)/(vt2.c0)))))OR(ABS(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN vt2.c0 THEN vt2.c0 END)) IS TRUE)  as count FROM vt2 INNER JOIN rt0 ON ((((rt0.c2)==(rt0.c1)))LIKE(((rt0.c1) IS FALSE))) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN vt2.c0 THEN (rt0.c0 IN ()) WHEN (+ (rt0.c1)) THEN ((rt0.c0)==(vt2.c0)) WHEN ((rt0.c1) ISNULL) THEN (+ (rt0.c1)) WHEN ((vt2.c0)OR(vt2.c0)) THEN ((rt0.c0)||(0.389792240585928)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST, (~ (json_quote(vt2.c0))), ((((((((CAST(vt2.c0 AS REAL))OR((((vt2.c0, 0.6982751229011368, rt0.c2))<>((x'f50c', rt0.c0, rt0.c0))))))AND((+ (vt2.c0)))))OR(((rt0.c2)/(vt2.c0)))))OR(ABS(x''))) ASC  NULLS LAST);
SELECT ALL * FROM vt2 INNER JOIN rt0 ON ((((rt0.c2)=(rt0.c1)))LIKE(((rt0.c1) IS FALSE))) WHERE (LOWER(CASE WHEN vt2.c0 THEN vt2.c0 END)) ORDER BY CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0)IS NOT(rt0.c2)) WHEN vt2.c0 THEN (rt0.c0 IN ()) WHEN (+ (rt0.c1)) THEN ((rt0.c0)=(vt2.c0)) WHEN ((rt0.c1) ISNULL) THEN (+ (rt0.c1)) WHEN ((vt2.c0)OR(vt2.c0)) THEN ((rt0.c0)||(0.389792240585928)) ELSE rt0.c2 COLLATE BINARY END  NULLS LAST, (~ (json_quote(vt2.c0))), ((((((((CAST(vt2.c0 AS REAL))OR((((vt2.c0, 0.6982751229011368, rt0.c2))<>((x'f50c', rt0.c0, rt0.c0))))))AND((+ (vt2.c0)))))OR(((rt0.c2)/(vt2.c0)))))OR(ABS(x''))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((((((CASE WHEN vt0.c0 THEN 1625060011 ELSE vt2.c0 END)OR((((vt0.c0, vt0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt2.c0, vt0.c0, vt0.c0))))))OR((+ (NULL)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((((((- (vt0.c0)))AND(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))AND(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((((((CASE WHEN vt0.c0 THEN 1625060011 ELSE vt2.c0 END)OR((((vt0.c0, vt0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt2.c0, vt0.c0, vt0.c0))))))OR((+ (NULL)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((((((CASE WHEN vt0.c0 THEN 1625060011 ELSE vt2.c0 END)OR((((vt0.c0, vt0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt2.c0, vt0.c0, vt0.c0))))))OR((+ (NULL)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((((((- (vt0.c0)))AND(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))AND(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((((((CASE WHEN vt0.c0 THEN 1625060011 ELSE vt2.c0 END)OR((((vt0.c0, vt0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt2.c0, vt0.c0, vt0.c0))))))OR((+ (NULL)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((((((CASE WHEN vt0.c0 THEN 1625060011 ELSE vt2.c0 END)OR((((vt0.c0, vt0.c0, vt2.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt2.c0, vt0.c0, vt0.c0))))))OR((+ (NULL)))))OR((~ (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))) WHERE ((((((((((- (vt0.c0)))AND(((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))))OR((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE ((((((vt0.c0)<<(vt2.c0))))>=(((NOT (t1.c40))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<<(vt2.c0))))>=(((NOT (t1.c40)))))) IS TRUE)  as count FROM vt0, vt2, t1, rt0);
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE ((((((vt0.c0)<<(vt2.c0))))>=(((NOT (t1.c40))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)<<(vt2.c0))))>=(((NOT (t1.c40)))))) IS TRUE)  as count FROM vt0, vt2, t1, rt0);
SELECT ALL * FROM vt0, vt2, t1, rt0 WHERE ((((((vt0.c0)<<(vt2.c0))))>=(((NOT (t1.c40))))));
SELECT * FROM vt0, vt2, rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))*((('0.03587065452028282')<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))*((('0.03587065452028282')<=(rt0.c0))))) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT * FROM vt0, vt2, rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))*((('0.03587065452028282')<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))*((('0.03587065452028282')<=(rt0.c0))))) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT * FROM vt0, vt2, rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))*((('0.03587065452028282')<=(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NULL IN ()));
SELECT * FROM vt2 WHERE (LOWER(vt2.c0)) ORDER BY (((((x''))>((vt2.c0))))OR((-1.35162704E8 IN ()))), TRIM(DISTINCT CASE ''  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) DESC  NULLS LAST, ((NOT (vt2.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt2.c0)) IS TRUE)  as count FROM vt2 ORDER BY (((((x''))>((vt2.c0))))OR((-1.35162704E8 IN ()))), TRIM(DISTINCT CASE ''  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) DESC  NULLS LAST, ((NOT (vt2.c0)) IN ()) DESC);
SELECT * FROM vt2 WHERE (LOWER(vt2.c0)) ORDER BY (((((x''))>((vt2.c0))))OR((-1.35162704E8 IN ()))), TRIM(DISTINCT CASE ''  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) DESC  NULLS LAST, ((NOT (vt2.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt2.c0)) IS TRUE)  as count FROM vt2 ORDER BY (((((x''))>((vt2.c0))))OR((-1.35162704E8 IN ()))), TRIM(DISTINCT CASE ''  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) DESC  NULLS LAST, ((NOT (vt2.c0)) IN ()) DESC);
SELECT * FROM vt2 WHERE (LOWER(vt2.c0)) ORDER BY (((((x''))>((vt2.c0))))OR((-1.35162704E8 IN ()))), TRIM(DISTINCT CASE ''  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) DESC  NULLS LAST, ((NOT (vt2.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt2 WHERE (((LOWER(vt2.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt2.c0)) IS TRUE)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((LOWER(vt2.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt2.c0)) IS TRUE)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((LOWER(vt2.c0)) IS TRUE));
SELECT COUNT(*) FROM vt2, vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c40 END)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt2.c0)))) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE) WHERE (((t1.c40) NOT BETWEEN (t1.c40) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40) NOT BETWEEN (t1.c40) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c40 END)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt2.c0)))) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt2, vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c40 END)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt2.c0)))) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE) WHERE (((t1.c40) NOT BETWEEN (t1.c40) AND (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40) NOT BETWEEN (t1.c40) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt2, vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c40 END)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt2.c0)))) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE));
SELECT COUNT(*) FROM vt2, vt0 INNER JOIN t1 ON ((CASE WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c40 END)AND(((vt0.c0) BETWEEN (rt0.c2) AND (vt2.c0)))) LEFT OUTER JOIN rt0 ON ((((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c2))) IS FALSE) WHERE (((t1.c40) NOT BETWEEN (t1.c40) AND (rt0.c1)) COLLATE BINARY);
SELECT * FROM t1 WHERE (((((t1.c1)+(t1.c40))) NOT BETWEEN ((((t1.c0))<((t1.c40)))) AND ((((t1.c40, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)+(t1.c40))) NOT BETWEEN ((((t1.c0))<((t1.c40)))) AND ((((t1.c40, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c1)+(t1.c40))) NOT BETWEEN ((((t1.c0))<((t1.c40)))) AND ((((t1.c40, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)+(t1.c40))) NOT BETWEEN ((((t1.c0))<((t1.c40)))) AND ((((t1.c40, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c1)+(t1.c40))) NOT BETWEEN ((((t1.c0))<((t1.c40)))) AND ((((t1.c40, t1.c1, t1.c0))>((t1.c0, t1.c1, t1.c0))))));
SELECT COUNT(*) FROM vt2, vt0 RIGHT OUTER JOIN rt0 ON ((((t1.c0) NOT BETWEEN (vt2.c0) AND (t1.c40))) BETWEEN (HEX(vt2.c0)) AND (t1.c0)) CROSS JOIN t1 ON TYPEOF(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c40))) WHERE ((((RTRIM(vt2.c0)))<(((+ (t1.c40))))));
SELECT SUM(count) FROM (SELECT ALL (((((RTRIM(vt2.c0)))<(((+ (t1.c40)))))) IS TRUE)  as count FROM vt2, vt0 RIGHT OUTER JOIN rt0 ON ((((t1.c0) NOT BETWEEN (vt2.c0) AND (t1.c40))) BETWEEN (HEX(vt2.c0)) AND (t1.c0)) CROSS JOIN t1 ON TYPEOF(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c40))));
SELECT COUNT(*) FROM vt2, vt0 RIGHT OUTER JOIN rt0 ON ((((t1.c0) NOT BETWEEN (vt2.c0) AND (t1.c40))) BETWEEN (HEX(vt2.c0)) AND (t1.c0)) CROSS JOIN t1 ON TYPEOF(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c40))) WHERE ((((RTRIM(vt2.c0)))<(((+ (t1.c40))))));
SELECT SUM(count) FROM (SELECT ALL (((((RTRIM(vt2.c0)))<(((+ (t1.c40)))))) IS TRUE)  as count FROM vt2, vt0 RIGHT OUTER JOIN rt0 ON ((((t1.c0) NOT BETWEEN (vt2.c0) AND (t1.c40))) BETWEEN (HEX(vt2.c0)) AND (t1.c0)) CROSS JOIN t1 ON TYPEOF(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c40))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((t1.c1 IN (t1.c1)))LIKE((+ (t1.c1)))) WHERE ((((((vt0.c0))<((t1.c1)))) IS FALSE)) ORDER BY TRIM(0X24ff3b59, t1.c40) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((t1.c1)))) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c1 IN (t1.c1)))LIKE((+ (t1.c1)))) ORDER BY TRIM(0X24ff3b59, t1.c40) DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((t1.c1 IN (t1.c1)))LIKE((+ (t1.c1)))) WHERE ((((((vt0.c0))<((t1.c1)))) IS FALSE)) ORDER BY TRIM(0X24ff3b59, t1.c40) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((t1.c1)))) IS FALSE)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((t1.c1 IN (t1.c1)))LIKE((+ (t1.c1)))) ORDER BY TRIM(0X24ff3b59, t1.c40) DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((t1.c1 IN (t1.c1)))LIKE((+ (t1.c1)))) WHERE ((((((vt0.c0))<((t1.c1)))) IS FALSE)) ORDER BY TRIM(0X24ff3b59, t1.c40) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2))) NOT NULL));
SELECT * FROM t1 WHERE (((((t1.c0)&('.䠇zN5Z?	{')))>=(UNICODE(NULL)))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) COLLATE RTRIM, ((((t1.c1) IS FALSE))AND(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, ((CAST(t1.c40 AS BLOB))!=(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c40 THEN t1.c1 WHEN t1.c40 THEN t1.c40 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&('.䠇zN5Z?	{')))>=(UNICODE(NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) COLLATE RTRIM, ((((t1.c1) IS FALSE))AND(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, ((CAST(t1.c40 AS BLOB))!=(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c40 THEN t1.c1 WHEN t1.c40 THEN t1.c40 END)));
SELECT * FROM t1 WHERE (((((t1.c0)&('.䠇zN5Z?	{')))>=(UNICODE(NULL)))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) COLLATE RTRIM, ((((t1.c1) IS FALSE))AND(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, ((CAST(t1.c40 AS BLOB))!=(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c40 THEN t1.c1 WHEN t1.c40 THEN t1.c40 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)&('.䠇zN5Z?	{')))>=(UNICODE(NULL)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) COLLATE RTRIM, ((((t1.c1) IS FALSE))AND(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, ((CAST(t1.c40 AS BLOB))!=(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c40 THEN t1.c1 WHEN t1.c40 THEN t1.c40 END)));
SELECT * FROM t1 WHERE (((((t1.c0)&('.䠇zN5Z?	{')))>=(UNICODE(NULL)))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) COLLATE RTRIM, ((((t1.c1) IS FALSE))AND(HEX(DISTINCT t1.c1))) ASC  NULLS FIRST, ((CAST(t1.c40 AS BLOB))!=(CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c40 THEN t1.c1 WHEN t1.c40 THEN t1.c40 END));
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED, vt2 WHERE (((((rt0.c0)*(vt0.c0))) ISNULL)) ORDER BY t1.c1 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY t1.c1 COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED, vt2 WHERE (((((rt0.c0)*(vt0.c0))) ISNULL)) ORDER BY t1.c1 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t1, vt2 ORDER BY t1.c1 COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t1 NOT INDEXED, vt2 WHERE (((((rt0.c0)*(vt0.c0))) ISNULL)) ORDER BY t1.c1 COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt2, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS REAL)) IS TRUE)  as count FROM vt2, t1);
SELECT ALL * FROM vt2, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS REAL)) IS TRUE)  as count FROM vt2, t1);
SELECT ALL * FROM vt2, t1 WHERE (CAST(t1.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED(json_remove(t1.c1, rt0.c0, 0.5825912005015007, t1.c1)) WHERE (((CASE rt0.c0  WHEN 0.7451914150683882 THEN rt0.c1 END)<((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN 0.7451914150683882 THEN rt0.c1 END)<((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt2, vt0, rt0 LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED(json_remove(t1.c1, rt0.c0, 0.5825912005015007, t1.c1)));
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED(json_remove(t1.c1, rt0.c0, 0.5825912005015007, t1.c1)) WHERE (((CASE rt0.c0  WHEN 0.7451914150683882 THEN rt0.c1 END)<((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN 0.7451914150683882 THEN rt0.c1 END)<((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt2, vt0, rt0 LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED(json_remove(t1.c1, rt0.c0, 0.5825912005015007, t1.c1)));
SELECT ALL COUNT(*) FROM vt2, vt0, rt0 LEFT OUTER JOIN t1 ON SQLITE_COMPILEOPTION_USED(json_remove(t1.c1, rt0.c0, 0.5825912005015007, t1.c1)) WHERE (((CASE rt0.c0  WHEN 0.7451914150683882 THEN rt0.c1 END)<((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0))))));
SELECT * FROM vt0, t1 WHERE (rtreenode(NULL, ((t1.c0) ISNULL))) ORDER BY ((((CAST(t1.c40 AS NUMERIC))AND(t1.c0)))OR(vt0.c0)), (((UPPER(DISTINCT vt0.c0)))>=(((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, ((t1.c0) ISNULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((CAST(t1.c40 AS NUMERIC))AND(t1.c0)))OR(vt0.c0)), (((UPPER(DISTINCT vt0.c0)))>=(((t1.c1 IN ())))));
SELECT * FROM vt0, t1 WHERE (rtreenode(NULL, ((t1.c0) ISNULL))) ORDER BY ((((CAST(t1.c40 AS NUMERIC))AND(t1.c0)))OR(vt0.c0)), (((UPPER(DISTINCT vt0.c0)))>=(((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(NULL, ((t1.c0) ISNULL))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((CAST(t1.c40 AS NUMERIC))AND(t1.c0)))OR(vt0.c0)), (((UPPER(DISTINCT vt0.c0)))>=(((t1.c1 IN ())))));
SELECT * FROM vt0, t1 WHERE (rtreenode(NULL, ((t1.c0) ISNULL))) ORDER BY ((((CAST(t1.c40 AS NUMERIC))AND(t1.c0)))OR(vt0.c0)), (((UPPER(DISTINCT vt0.c0)))>=(((t1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((((x'')AND(t1.c0)))AND(vt0.c0)), 0.8293670658620882) LEFT OUTER JOIN t1 ON COALESCE(LOWER(vt0.c0), CASE WHEN 0xffffffffd19fdc87 THEN rt0.c1 ELSE vt0.c0 END) WHERE ('K#' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('K#' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((((x'')AND(t1.c0)))AND(vt0.c0)), 0.8293670658620882) LEFT OUTER JOIN t1 ON COALESCE(LOWER(vt0.c0), CASE WHEN 0Xffffffffd19fdc87 THEN rt0.c1 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM rt0, vt2 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((((x'')AND(t1.c0)))AND(vt0.c0)), 0.8293670658620882) LEFT OUTER JOIN t1 ON COALESCE(LOWER(vt0.c0), CASE WHEN 0xffffffffd19fdc87 THEN rt0.c1 ELSE vt0.c0 END) WHERE ('K#' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('K#' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt2 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((((x'')AND(t1.c0)))AND(vt0.c0)), 0.8293670658620882) LEFT OUTER JOIN t1 ON COALESCE(LOWER(vt0.c0), CASE WHEN 0Xffffffffd19fdc87 THEN rt0.c1 ELSE vt0.c0 END));
SELECT * FROM vt0, vt2 WHERE ((((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((NULL)))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((NULL)))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((((NULL)) BETWEEN ((((vt0.c0) ISNULL))) AND ((NULL))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((t1.c1))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('-1573506052')) WHERE (((((((t1.c40)OR(t1.c0)))OR(vt0.c0)))>=(t1.c40 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))|(((t1.c0)LIKE(t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c40)OR(t1.c0)))OR(vt0.c0)))>=(t1.c40 COLLATE RTRIM))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((((t1.c1))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('-1573506052')) ORDER BY (((- (vt0.c0)))|(((t1.c0)LIKE(t1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((t1.c1))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('-1573506052')) WHERE (((((((t1.c40)OR(t1.c0)))OR(vt0.c0)))>=(t1.c40 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))|(((t1.c0)LIKE(t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c40)OR(t1.c0)))OR(vt0.c0)))>=(t1.c40 COLLATE RTRIM))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (((((t1.c1))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('-1573506052')) ORDER BY (((- (vt0.c0)))|(((t1.c0)LIKE(t1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (((((t1.c1))<=((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('-1573506052')) WHERE (((((((t1.c40)OR(t1.c0)))OR(vt0.c0)))>=(t1.c40 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))|(((t1.c0)LIKE(t1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0 WHERE ((~ (((vt2.c0)IS(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt2.c0)IS(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((~ (((vt2.c0)IS(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt2.c0)IS(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((~ (((vt2.c0)IS(vt2.c0)))));
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt2);
SELECT ALL * FROM rt0, vt2 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt2, rt0 WHERE (CASE WHEN ((vt2.c0) NOTNULL) THEN MAX(rt0.c0, vt2.c0) WHEN x'' THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0) NOTNULL) THEN MAX(rt0.c0, vt2.c0) WHEN x'' THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE (CASE WHEN ((vt2.c0) NOTNULL) THEN MAX(rt0.c0, vt2.c0) WHEN x'' THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt2.c0) NOTNULL) THEN MAX(rt0.c0, vt2.c0) WHEN x'' THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM vt2, rt0);
SELECT COUNT(*) FROM vt2, rt0 WHERE (CASE WHEN ((vt2.c0) NOTNULL) THEN MAX(rt0.c0, vt2.c0) WHEN x'' THEN (- (rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE ((((t1.c40)) NOT BETWEEN ((((x'') IS TRUE))) AND ((rt0.c2)))) ORDER BY ((((t1.c0)||(t1.c0)))-(t1.c40 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40)) NOT BETWEEN ((((x'') IS TRUE))) AND ((rt0.c2)))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 ORDER BY ((((t1.c0)||(t1.c0)))-(t1.c40 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE ((((t1.c40)) NOT BETWEEN ((((x'') IS TRUE))) AND ((rt0.c2)))) ORDER BY ((((t1.c0)||(t1.c0)))-(t1.c40 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40)) NOT BETWEEN ((((x'') IS TRUE))) AND ((rt0.c2)))) IS TRUE)  as count FROM t1, rt0, vt2, vt0 ORDER BY ((((t1.c0)||(t1.c0)))-(t1.c40 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM t1, rt0, vt2, vt0 WHERE ((((t1.c40)) NOT BETWEEN ((((x'') IS TRUE))) AND ((rt0.c2)))) ORDER BY ((((t1.c0)||(t1.c0)))-(t1.c40 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (0X4ea998e7);
SELECT SUM(count) FROM (SELECT ALL ((0X4ea998e7) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (0X4ea998e7);
SELECT SUM(count) FROM (SELECT ALL ((0X4ea998e7) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (0X4ea998e7);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt2 ON CAST(rt0.c2 COLLATE NOCASE AS INTEGER) WHERE (CASE NULL  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) ORDER BY (((((vt0.c0)>=(rt0.c2))))<((COALESCE(rt0.c0, vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt2 ON CAST(rt0.c2 COLLATE NOCASE AS INTEGER) ORDER BY (((((vt0.c0)>=(rt0.c2))))<((COALESCE(rt0.c0, vt2.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt2 ON CAST(rt0.c2 COLLATE NOCASE AS INTEGER) WHERE (CASE NULL  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) ORDER BY (((((vt0.c0)>=(rt0.c2))))<((COALESCE(rt0.c0, vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt2 ON CAST(rt0.c2 COLLATE NOCASE AS INTEGER) ORDER BY (((((vt0.c0)>=(rt0.c2))))<((COALESCE(rt0.c0, vt2.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt2 ON CAST(rt0.c2 COLLATE NOCASE AS INTEGER) WHERE (CASE NULL  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) ORDER BY (((((vt0.c0)>=(rt0.c2))))<((COALESCE(rt0.c0, vt2.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 0x199a3480 THEN rt0.c0 ELSE NULL END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 0x199a3480 THEN rt0.c0 ELSE NULL END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 0x199a3480 THEN rt0.c0 ELSE NULL END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 0x199a3480 THEN rt0.c0 ELSE NULL END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN 0x199a3480 THEN rt0.c0 ELSE NULL END AS INTEGER));
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN t1.c40 END IN ())) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) NOTNULL)) AND (((t1.c1)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt2.c0 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN t1.c40 END IN ())) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, rt0, vt2 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) NOTNULL)) AND (((t1.c1)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN t1.c40 END IN ())) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) NOTNULL)) AND (((t1.c1)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt2.c0 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN t1.c40 END IN ())) IS TRUE)  as count FROM t1, vt0 NOT INDEXED, rt0, vt2 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) NOTNULL)) AND (((t1.c1)IS NOT(vt0.c0)))) DESC);
SELECT ALL * FROM t1, vt0, rt0, vt2 WHERE ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN t1.c40 END IN ())) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) NOTNULL)) AND (((t1.c1)IS NOT(vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t1 ON x'' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON x'');
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t1 ON x'' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t1 ON x'');
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t1 ON x'' WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((((('b\nP>K0')||(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('b\nP>K0')||(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((((('b\nP>K0')||(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((('b\nP>K0')||(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL * FROM vt0, rt0, vt2 WHERE ((((('b\nP>K0')||(rt0.c1))) IS TRUE));
SELECT * FROM vt2, t1 WHERE (((CHAR(t1.c1))AND(CASE WHEN t1.c40 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY ((CAST(t1.c40 AS BLOB)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CHAR(t1.c1))AND(CASE WHEN t1.c40 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, t1 ORDER BY ((CAST(t1.c40 AS BLOB)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt2, t1 WHERE (((CHAR(t1.c1))AND(CASE WHEN t1.c40 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY ((CAST(t1.c40 AS BLOB)) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CHAR(t1.c1))AND(CASE WHEN t1.c40 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2, t1 ORDER BY ((CAST(t1.c40 AS BLOB)) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM vt2, t1 WHERE (((CHAR(t1.c1))AND(CASE WHEN t1.c40 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY ((CAST(t1.c40 AS BLOB)) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM vt2 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CAST(rt0.c0 AS NUMERIC)) RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((vt0.c0)>>(rt0.c1)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0)>>(vt0.c0)) IN ((((vt2.c0))>=((rt0.c0)))))) ORDER BY (((((rt0.c1)IS NOT(0X669e30b7))))<=((((rt0.c0)*(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ((((vt2.c0))>=((rt0.c0)))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CAST(rt0.c0 AS NUMERIC)) RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((vt0.c0)>>(rt0.c1)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt2.c0)) END ORDER BY (((((rt0.c1)IS NOT(0x669e30b7))))<=((((rt0.c0)*(vt2.c0))))));
SELECT * FROM vt2 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CAST(rt0.c0 AS NUMERIC)) RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((vt0.c0)>>(rt0.c1)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0)>>(vt0.c0)) IN ((((vt2.c0))>=((rt0.c0)))))) ORDER BY (((((rt0.c1)IS NOT(0X669e30b7))))<=((((rt0.c0)*(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>>(vt0.c0)) IN ((((vt2.c0))>=((rt0.c0)))))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CAST(rt0.c0 AS NUMERIC)) RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((vt0.c0)>>(rt0.c1)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt2.c0)) END ORDER BY (((((rt0.c1)IS NOT(0x669e30b7))))<=((((rt0.c0)*(vt2.c0))))));
SELECT * FROM vt2 LEFT OUTER JOIN rt0 ON ABS(DISTINCT CAST(rt0.c0 AS NUMERIC)) RIGHT OUTER JOIN vt0 ON CASE CAST(rt0.c2 AS NUMERIC)  WHEN ((vt0.c0)>>(rt0.c1)) THEN CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0)>>(vt0.c0)) IN ((((vt2.c0))>=((rt0.c0)))))) ORDER BY (((((rt0.c1)IS NOT(0X669e30b7))))<=((((rt0.c0)*(vt2.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((NOT (rt0.c0)))IS NOT(HEX(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt2 ON ((((((t1.c40)AND(rt0.c1)))OR(t1.c0))) BETWEEN (t1.c0) AND (((t1.c40)<<(vt2.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt2.c0) ISNULL))) WHERE (1319737575);
SELECT SUM(count) FROM (SELECT ALL ((1319737575) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((NOT (rt0.c0)))IS NOT(HEX(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt2 ON ((((((t1.c40)AND(rt0.c1)))OR(t1.c0))) BETWEEN (t1.c0) AND (((t1.c40)<<(vt2.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt2.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((NOT (rt0.c0)))IS NOT(HEX(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt2 ON ((((((t1.c40)AND(rt0.c1)))OR(t1.c0))) BETWEEN (t1.c0) AND (((t1.c40)<<(vt2.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt2.c0) ISNULL))) WHERE (1319737575);
SELECT SUM(count) FROM (SELECT ALL ((1319737575) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (((NOT (rt0.c0)))IS NOT(HEX(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt2 ON ((((((t1.c40)AND(rt0.c1)))OR(t1.c0))) BETWEEN (t1.c0) AND (((t1.c40)<<(vt2.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt2.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (((NOT (rt0.c0)))IS NOT(HEX(DISTINCT rt0.c0))) RIGHT OUTER JOIN vt2 ON ((((((t1.c40)AND(rt0.c1)))OR(t1.c0))) BETWEEN (t1.c0) AND (((t1.c40)<<(vt2.c0)))) FULL OUTER JOIN vt0 ON (NOT (((vt2.c0) ISNULL))) WHERE (1319737575);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON ((((((((((vt2.c0)==(vt0.c0)))OR(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt2.c0)!=(vt2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE ((((vt2.c0)>>(vt0.c0)) IN ())) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 END))  NULLS FIRST, ((((vt2.c0)=('')))!=(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON ((((((((((vt2.c0)==(vt0.c0)))OR(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt2.c0)<>(vt2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 END))  NULLS FIRST, ((((vt2.c0)==('')))!=(((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON ((((((((((vt2.c0)==(vt0.c0)))OR(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt2.c0)!=(vt2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE ((((vt2.c0)>>(vt0.c0)) IN ())) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 END))  NULLS FIRST, ((((vt2.c0)=('')))!=(((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN vt2 ON ((((((((((vt2.c0)==(vt0.c0)))OR(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt2.c0)<>(vt2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 END))  NULLS FIRST, ((((vt2.c0)==('')))!=(((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN vt2 ON ((((((((((vt2.c0)==(vt0.c0)))OR(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))))OR(((vt2.c0)!=(vt2.c0)))))AND(IFNULL(DISTINCT vt0.c0, vt0.c0))))OR(CAST(vt0.c0 AS NUMERIC))) WHERE ((((vt2.c0)>>(vt0.c0)) IN ())) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))>(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 END))  NULLS FIRST, ((((vt2.c0)=('')))!=(((vt0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM vt2, t1 WHERE (((((t1.c0)<>(t1.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<>(t1.c40))) NOTNULL)) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE (((((t1.c0)<>(t1.c40))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<>(t1.c40))) NOTNULL)) IS TRUE)  as count FROM vt2, t1);
SELECT COUNT(*) FROM vt2, t1 WHERE (((((t1.c0)<>(t1.c40))) NOTNULL));
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0)||(vt2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)||(vt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0)||(vt2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)||(vt2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0)||(vt2.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT ALL COUNT(*) FROM vt0, rt0, vt2 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM vt2 LEFT OUTER JOIN t1 ON ((((('', rt0.c0, t1.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t1.c40, t1.c40, 0.757481192671466, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, t1.c40, rt0.c1, vt0.c0))))*(CASE vt0.c0  WHEN vt2.c0 THEN t1.c1 END)) INNER JOIN rt0 ON NULLIF(rt0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) RIGHT OUTER JOIN vt0 ON CAST(((((rt0.c1)AND(t1.c0)))OR(t1.c0)) AS BLOB) WHERE (ABS(((vt0.c0)>(vt2.c0)))) ORDER BY (NOT (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0)>(vt2.c0)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t1 ON ((((('', rt0.c0, t1.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t1.c40, t1.c40, 0.757481192671466, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, t1.c40, rt0.c1, vt0.c0))))*(CASE vt0.c0  WHEN vt2.c0 THEN t1.c1 END)) INNER JOIN rt0 ON NULLIF(rt0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) RIGHT OUTER JOIN vt0 ON CAST(((((rt0.c1)AND(t1.c0)))OR(t1.c0)) AS BLOB) ORDER BY (NOT (t1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt2 LEFT OUTER JOIN t1 ON ((((('', rt0.c0, t1.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t1.c40, t1.c40, 0.757481192671466, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, t1.c40, rt0.c1, vt0.c0))))*(CASE vt0.c0  WHEN vt2.c0 THEN t1.c1 END)) INNER JOIN rt0 ON NULLIF(rt0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) RIGHT OUTER JOIN vt0 ON CAST(((((rt0.c1)AND(t1.c0)))OR(t1.c0)) AS BLOB) WHERE (ABS(((vt0.c0)>(vt2.c0)))) ORDER BY (NOT (t1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0)>(vt2.c0)))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t1 ON ((((('', rt0.c0, t1.c0, rt0.c2, vt0.c0)) NOT BETWEEN ((t1.c40, t1.c40, 0.757481192671466, rt0.c0, rt0.c1)) AND ((NULL, rt0.c1, t1.c40, rt0.c1, vt0.c0))))*(CASE vt0.c0  WHEN vt2.c0 THEN t1.c1 END)) INNER JOIN rt0 ON NULLIF(rt0.c0 COLLATE BINARY, ((t1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) RIGHT OUTER JOIN vt0 ON CAST(((((rt0.c1)AND(t1.c0)))OR(t1.c0)) AS BLOB) ORDER BY (NOT (t1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt2, rt0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) LEFT OUTER JOIN t1 ON rt0.c0 WHERE (0.21597733511043404) ORDER BY ((CASE WHEN vt0.c0 THEN vt2.c0 ELSE NULL END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.21597733511043404) IS TRUE)  as count FROM vt2, rt0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) LEFT OUTER JOIN t1 ON rt0.c0 ORDER BY ((CASE WHEN vt0.c0 THEN vt2.c0 ELSE NULL END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) LEFT OUTER JOIN t1 ON rt0.c0 WHERE (0.21597733511043404) ORDER BY ((CASE WHEN vt0.c0 THEN vt2.c0 ELSE NULL END) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.21597733511043404) IS TRUE)  as count FROM vt2, rt0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) LEFT OUTER JOIN t1 ON rt0.c0 ORDER BY ((CASE WHEN vt0.c0 THEN vt2.c0 ELSE NULL END) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM vt2, rt0 RIGHT OUTER JOIN vt0 ON CAST(x'' AS NUMERIC) LEFT OUTER JOIN t1 ON rt0.c0 WHERE (0.21597733511043404) ORDER BY ((CASE WHEN vt0.c0 THEN vt2.c0 ELSE NULL END) NOT NULL) DESC;
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CAST(((t1.c1) ISNULL) AS REAL)) ORDER BY (((t1.c40)&(t1.c1)) IN ())  NULLS LAST, ((json_remove(t1.c1, t1.c1))>=(CASE t1.c1  WHEN x'3bd2' THEN vt0.c0 ELSE t1.c1 END)) ASC  NULLS FIRST, CASE WHEN QUOTE(vt2.c0) THEN ((((vt2.c0)AND(t1.c0)))AND(t1.c1)) ELSE ((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY (((t1.c40)&(t1.c1)) IN ())  NULLS LAST, ((json_remove(t1.c1, t1.c1))>=(CASE t1.c1  WHEN x'3bd2' THEN vt0.c0 ELSE t1.c1 END)) ASC  NULLS FIRST, CASE WHEN QUOTE(vt2.c0) THEN ((((vt2.c0)AND(t1.c0)))AND(t1.c1)) ELSE ((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) END  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CAST(((t1.c1) ISNULL) AS REAL)) ORDER BY (((t1.c40)&(t1.c1)) IN ())  NULLS LAST, ((json_remove(t1.c1, t1.c1))>=(CASE t1.c1  WHEN x'3bd2' THEN vt0.c0 ELSE t1.c1 END)) ASC  NULLS FIRST, CASE WHEN QUOTE(vt2.c0) THEN ((((vt2.c0)AND(t1.c0)))AND(t1.c1)) ELSE ((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c1) ISNULL) AS REAL)) IS TRUE)  as count FROM vt2, vt0, t1 ORDER BY (((t1.c40)&(t1.c1)) IN ())  NULLS LAST, ((json_remove(t1.c1, t1.c1))>=(CASE t1.c1  WHEN x'3bd2' THEN vt0.c0 ELSE t1.c1 END)) ASC  NULLS FIRST, CASE WHEN QUOTE(vt2.c0) THEN ((((vt2.c0)AND(t1.c0)))AND(t1.c1)) ELSE ((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) END  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0, t1 WHERE (CAST(((t1.c1) ISNULL) AS REAL)) ORDER BY (((t1.c40)&(t1.c1)) IN ())  NULLS LAST, ((json_remove(t1.c1, t1.c1))>=(CASE t1.c1  WHEN x'3bd2' THEN vt0.c0 ELSE t1.c1 END)) ASC  NULLS FIRST, CASE WHEN QUOTE(vt2.c0) THEN ((((vt2.c0)AND(t1.c0)))AND(t1.c1)) ELSE ((vt0.c0) BETWEEN (vt2.c0) AND (t1.c40)) END  NULLS LAST;
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY ((NULL)<<(SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((NULL)<<(SQLITE_SOURCE_ID())) DESC);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY ((NULL)<<(SQLITE_SOURCE_ID())) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((NULL)<<(SQLITE_SOURCE_ID())) DESC);
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c0)AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt2.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ORDER BY ((NULL)<<(SQLITE_SOURCE_ID())) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt2, t1, vt0 WHERE (CAST(((vt2.c0)>>(vt2.c0)) AS NUMERIC)) ORDER BY vt2.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0)>>(vt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, t1, vt0 ORDER BY vt2.c0 ASC  NULLS FIRST);
SELECT * FROM vt2, t1, vt0 WHERE (CAST(((vt2.c0)>>(vt2.c0)) AS NUMERIC)) ORDER BY vt2.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0)>>(vt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2, t1, vt0 ORDER BY vt2.c0 ASC  NULLS FIRST);
SELECT * FROM vt2, t1, vt0 WHERE (CAST(((vt2.c0)>>(vt2.c0)) AS NUMERIC)) ORDER BY vt2.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((0.4656714329093924)%(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt2.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt2.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((0.4656714329093924)%(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((0.4656714329093924)%(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt2.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt2.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((0.4656714329093924)%(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON ((((0.4656714329093924)%(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt2.c0 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2, rt0, t1);
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt2, rt0, t1);
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (x'');
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE ((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND (((- (vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND (((- (vt2.c0)))))) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE ((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND (((- (vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND (((- (vt2.c0)))))) IS TRUE)  as count FROM vt0, vt2, rt0, t1);
SELECT ALL * FROM vt0, vt2, rt0, t1 WHERE ((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND (((- (vt2.c0))))));
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND((((rt0.c0))>((rt0.c1))))))OR('.䠇zn5z?	{')));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND((((rt0.c0))>((rt0.c1))))))OR('.䠇zn5z?	{'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND((((rt0.c0))>((rt0.c1))))))OR('.䠇zn5z?	{')));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND((((rt0.c0))>((rt0.c1))))))OR('.䠇zn5z?	{'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)AND((((rt0.c0))>((rt0.c1))))))OR('.䠇zn5z?	{')));
SELECT COUNT(*) FROM vt2, vt0, t1 CROSS JOIN rt0 ON ((CAST(t1.c40 AS BLOB))IS NOT(((t1.c40)=(t1.c40)))) WHERE (((((((((((((CAST(t1.c40 AS REAL))OR(UNLIKELY(rt0.c2))))AND(CASE t1.c0  WHEN vt2.c0 THEN rt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN rt0.c1 END)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c40)))))OR(vt0.c0 COLLATE RTRIM)))AND(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(t1.c40 AS REAL))OR(UNLIKELY(rt0.c2))))AND(CASE t1.c0  WHEN vt2.c0 THEN rt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN rt0.c1 END)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c40)))))OR(vt0.c0 COLLATE RTRIM)))AND(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM vt2, vt0, t1 CROSS JOIN rt0 ON ((CAST(t1.c40 AS BLOB))IS NOT(((t1.c40)=(t1.c40)))));
SELECT COUNT(*) FROM vt2, vt0, t1 CROSS JOIN rt0 ON ((CAST(t1.c40 AS BLOB))IS NOT(((t1.c40)=(t1.c40)))) WHERE (((((((((((((CAST(t1.c40 AS REAL))OR(UNLIKELY(rt0.c2))))AND(CASE t1.c0  WHEN vt2.c0 THEN rt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN rt0.c1 END)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c40)))))OR(vt0.c0 COLLATE RTRIM)))AND(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(t1.c40 AS REAL))OR(UNLIKELY(rt0.c2))))AND(CASE t1.c0  WHEN vt2.c0 THEN rt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN rt0.c1 END)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c40)))))OR(vt0.c0 COLLATE RTRIM)))AND(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM vt2, vt0, t1 CROSS JOIN rt0 ON ((CAST(t1.c40 AS BLOB))IS NOT(((t1.c40)=(t1.c40)))));
SELECT COUNT(*) FROM vt2, vt0, t1 CROSS JOIN rt0 ON ((CAST(t1.c40 AS BLOB))IS NOT(((t1.c40)=(t1.c40)))) WHERE (((((((((((((CAST(t1.c40 AS REAL))OR(UNLIKELY(rt0.c2))))AND(CASE t1.c0  WHEN vt2.c0 THEN rt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN x'' THEN vt0.c0 WHEN t1.c1 THEN vt0.c0 WHEN t1.c1 THEN rt0.c1 END)))OR(((rt0.c1) NOTNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (t1.c40)))))OR(vt0.c0 COLLATE RTRIM)))AND(((t1.c1) IS FALSE))));
SELECT COUNT(*) FROM t1, vt2, rt0 WHERE (0.06921489380519241) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c1))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.06921489380519241) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c1))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, rt0 WHERE (0.06921489380519241) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c1))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.06921489380519241) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c1))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt2, rt0 WHERE (0.06921489380519241) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt0.c1))) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((((- (t1.c40)))||((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c40)))||((vt2.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((((- (t1.c40)))||((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (t1.c40)))||((vt2.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, vt2);
SELECT ALL COUNT(*) FROM t1, vt0, vt2 WHERE ((((- (t1.c40)))||((vt2.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM t1, rt0, vt0 WHERE (((-268068560 COLLATE RTRIM)%(-133270582))) ORDER BY CASE rt0.c2  WHEN t1.c0 COLLATE RTRIM THEN STRFTIME(t1.c40, t1.c40, vt0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-268068560 COLLATE RTRIM)%(-133270582))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE rt0.c2  WHEN t1.c0 COLLATE RTRIM THEN STRFTIME(t1.c40, t1.c40, vt0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c0) END  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((-268068560 COLLATE RTRIM)%(-133270582))) ORDER BY CASE rt0.c2  WHEN t1.c0 COLLATE RTRIM THEN STRFTIME(t1.c40, t1.c40, vt0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c0) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-268068560 COLLATE RTRIM)%(-133270582))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE rt0.c2  WHEN t1.c0 COLLATE RTRIM THEN STRFTIME(t1.c40, t1.c40, vt0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c0) END  NULLS LAST);
SELECT * FROM t1, rt0, vt0 WHERE (((-268068560 COLLATE RTRIM)%(-133270582))) ORDER BY CASE rt0.c2  WHEN t1.c0 COLLATE RTRIM THEN STRFTIME(t1.c40, t1.c40, vt0.c0, rt0.c2, rt0.c0, t1.c0, rt0.c0) END  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt0 ON t1.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON t1.c1);
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt0 ON t1.c1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt0 ON t1.c1);
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt0 ON t1.c1 WHERE (x'');
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c40))) AS NUMERIC)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c40))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1 ORDER BY '');
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c40))) AS NUMERIC)) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c40))) AS NUMERIC)) IS TRUE)  as count FROM vt0, t1 ORDER BY '');
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST((((t1.c40)) NOT BETWEEN ((t1.c1)) AND ((t1.c40))) AS NUMERIC)) ORDER BY '';
SELECT ALL * FROM vt2, t1, rt0, vt0 WHERE (((((rt0.c2))<((vt0.c0))) IN ())) ORDER BY ((CAST(t1.c40 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt2, t1, rt0, vt0 ORDER BY ((CAST(t1.c40 AS REAL)) IS TRUE));
SELECT ALL * FROM vt2, t1, rt0, vt0 WHERE (((((rt0.c2))<((vt0.c0))) IN ())) ORDER BY ((CAST(t1.c40 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt2, t1, rt0, vt0 ORDER BY ((CAST(t1.c40 AS REAL)) IS TRUE));
SELECT ALL * FROM vt2, t1, rt0, vt0 WHERE (((((rt0.c2))<((vt0.c0))) IN ())) ORDER BY ((CAST(t1.c40 AS REAL)) IS TRUE);
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE ((((t1.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((SQLITE_VERSION())))) IS TRUE)  as count FROM rt0, t1, vt2);
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE ((((t1.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((SQLITE_VERSION()))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((SQLITE_VERSION())))) IS TRUE)  as count FROM rt0, t1, vt2);
SELECT COUNT(*) FROM rt0, t1, vt2 WHERE ((((t1.c0)) NOT BETWEEN ((((rt0.c1)==(rt0.c0)))) AND ((SQLITE_VERSION()))));
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE (((rt0.c1, rt0.c2, rt0.c0))==((rt0.c0, vt0.c0, rt0.c2)))  WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)) END, QUOTE(LIKELIHOOD(rt0.c2, 0.5253074204487637))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((rt0.c1, rt0.c2, rt0.c0))=((rt0.c0, vt0.c0, rt0.c2)))  WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)) END, QUOTE(LIKELIHOOD(rt0.c2, 0.5253074204487637))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE (((rt0.c1, rt0.c2, rt0.c0))==((rt0.c0, vt0.c0, rt0.c2)))  WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)) END, QUOTE(LIKELIHOOD(rt0.c2, 0.5253074204487637))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (((rt0.c1, rt0.c2, rt0.c0))=((rt0.c0, vt0.c0, rt0.c2)))  WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)) END, QUOTE(LIKELIHOOD(rt0.c2, 0.5253074204487637))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CASE (((rt0.c1, rt0.c2, rt0.c0))==((rt0.c0, vt0.c0, rt0.c2)))  WHEN CAST(rt0.c2 AS TEXT) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0)) END, QUOTE(LIKELIHOOD(rt0.c2, 0.5253074204487637))  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)) COLLATE RTRIM WHERE (HEX(((t1.c40)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t1.c40)>>(rt0.c2)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)) COLLATE RTRIM WHERE (HEX(((t1.c40)>>(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((t1.c40)>>(rt0.c2)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (t1.c0)) COLLATE RTRIM WHERE (HEX(((t1.c40)>>(rt0.c2))));
SELECT ALL COUNT(*) FROM vt2 INDEXED BY i10 FULL OUTER JOIN vt0 ON (2.9052977E8 IN (CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0)>>(vt2.c0)))) WHERE (MIN(((vt0.c0)AND(vt2.c0)), CAST(vt2.c0 AS BLOB))) ORDER BY x'ec1b' ASC  NULLS FIRST, (((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((vt2.c0, NULL, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((MIN(((vt0.c0)AND(vt2.c0)), CAST(vt2.c0 AS BLOB))) IS TRUE)  as count FROM vt2 INDEXED BY i10 FULL OUTER JOIN vt0 ON (2.9052977E8 IN (CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0)>>(vt2.c0)))) ORDER BY x'ec1b' ASC  NULLS FIRST, (((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((vt2.c0, NULL, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0)))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt2 INDEXED BY i10 FULL OUTER JOIN vt0 ON (2.9052977E8 IN (CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0)>>(vt2.c0)))) WHERE (MIN(((vt0.c0)AND(vt2.c0)), CAST(vt2.c0 AS BLOB))) ORDER BY x'ec1b' ASC  NULLS FIRST, (((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((vt2.c0, NULL, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0)))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((MIN(((vt0.c0)AND(vt2.c0)), CAST(vt2.c0 AS BLOB))) IS TRUE)  as count FROM vt2 INDEXED BY i10 FULL OUTER JOIN vt0 ON (2.9052977E8 IN (CASE vt2.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, ((vt2.c0)>>(vt2.c0)))) ORDER BY x'ec1b' ASC  NULLS FIRST, (((((vt0.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((vt2.c0, NULL, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0)))) NOTNULL) ASC);
SELECT * FROM rt0, t1, vt2 WHERE (vt2.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt2.c0 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt2 ORDER BY (rt0.c1 IN ())  NULLS FIRST);
SELECT * FROM rt0, t1, vt2 WHERE (vt2.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt2.c0 COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, vt2 ORDER BY (rt0.c1 IN ())  NULLS FIRST);
SELECT * FROM rt0, t1, vt2 WHERE (vt2.c0 COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c1 IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, t1, rt0, vt2 WHERE ((((t1.c0 IN (rt0.c0, rt0.c1)))<=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (rt0.c0, rt0.c1)))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, rt0, vt2);
SELECT ALL * FROM vt0, t1, rt0, vt2 WHERE ((((t1.c0 IN (rt0.c0, rt0.c1)))<=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (rt0.c0, rt0.c1)))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1, rt0, vt2);
SELECT ALL * FROM vt0, t1, rt0, vt2 WHERE ((((t1.c0 IN (rt0.c0, rt0.c1)))<=(rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt2, rt0, vt0, t1 WHERE (x'fd27');
SELECT SUM(count) FROM (SELECT ((x'fd27') IS TRUE)  as count FROM vt2, rt0, vt0, t1);
SELECT * FROM vt2, rt0, vt0, t1 WHERE (x'fd27');
SELECT SUM(count) FROM (SELECT ((x'fd27') IS TRUE)  as count FROM vt2, rt0, vt0, t1);
SELECT * FROM vt2, rt0, vt0, t1 WHERE (x'fd27');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)<<(rt0.c0))) AND (((('1111419603', rt0.c0, '鞍%')) NOT BETWEEN ((t1.c1, t1.c0, vt0.c0)) AND ((rt0.c1, t1.c1, t1.c1))))) INNER JOIN rt0 ON x'' WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) ORDER BY CAST(CASE WHEN rt0.c2 THEN t1.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)<<(rt0.c0))) AND (((('1111419603', rt0.c0, '鞍%')) NOT BETWEEN ((t1.c1, t1.c0, vt0.c0)) AND ((rt0.c1, t1.c1, t1.c1))))) INNER JOIN rt0 ON x'' ORDER BY CAST(CASE WHEN rt0.c2 THEN t1.c0 END AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)<<(rt0.c0))) AND (((('1111419603', rt0.c0, '鞍%')) NOT BETWEEN ((t1.c1, t1.c0, vt0.c0)) AND ((rt0.c1, t1.c1, t1.c1))))) INNER JOIN rt0 ON x'' WHERE (CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) ORDER BY CAST(CASE WHEN rt0.c2 THEN t1.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((rt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c0)<<(rt0.c0))) AND (((('1111419603', rt0.c0, '鞍%')) NOT BETWEEN ((t1.c1, t1.c0, vt0.c0)) AND ((rt0.c1, t1.c1, t1.c1))))) INNER JOIN rt0 ON x'' ORDER BY CAST(CASE WHEN rt0.c2 THEN t1.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, t1 WHERE (x'');
SELECT ALL * FROM rt0, vt2, vt0, t1 WHERE (COALESCE((((vt0.c0))=((t1.c0))), (((vt0.c0))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0))=((t1.c0))), (((vt0.c0))>((rt0.c0))))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT ALL * FROM rt0, vt2, vt0, t1 WHERE (COALESCE((((vt0.c0))=((t1.c0))), (((vt0.c0))>((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((COALESCE((((vt0.c0))=((t1.c0))), (((vt0.c0))>((rt0.c0))))) IS TRUE)  as count FROM rt0, vt2, vt0, t1);
SELECT ALL * FROM rt0, vt2, vt0, t1 WHERE (COALESCE((((vt0.c0))=((t1.c0))), (((vt0.c0))>((rt0.c0)))));
SELECT * FROM rt0, vt2 WHERE (((vt2.c0)>=(((((rt0.c2)OR(vt2.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0)>=(((((rt0.c2)OR(vt2.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((vt2.c0)>=(((((rt0.c2)OR(vt2.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0)>=(((((rt0.c2)OR(vt2.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt2);
SELECT * FROM rt0, vt2 WHERE (((vt2.c0)>=(((((rt0.c2)OR(vt2.c0)))AND(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN json_array(t1.c1, t1.c1) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) BETWEEN (t1.c0) AND (t1.c40)) THEN TRIM(rt0.c0) WHEN (t1.c1 IN ()) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.9892092122873833) END WHERE (((((t1.c40)*(t1.c0))) BETWEEN (t1.c1) AND (((t1.c0)LIKE(rt0.c2))))) ORDER BY ((UNLIKELY(rt0.c0))IS NOT(('R' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c40)*(t1.c0))) BETWEEN (t1.c1) AND (((t1.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE WHEN json_array(t1.c1, t1.c1) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) BETWEEN (t1.c0) AND (t1.c40)) THEN TRIM(rt0.c0) WHEN (t1.c1 IN ()) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.9892092122873833) END ORDER BY ((UNLIKELY(rt0.c0))IS NOT(('R' IN ()))) DESC);
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN json_array(t1.c1, t1.c1) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) BETWEEN (t1.c0) AND (t1.c40)) THEN TRIM(rt0.c0) WHEN (t1.c1 IN ()) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.9892092122873833) END WHERE (((((t1.c40)*(t1.c0))) BETWEEN (t1.c1) AND (((t1.c0)LIKE(rt0.c2))))) ORDER BY ((UNLIKELY(rt0.c0))IS NOT(('R' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c40)*(t1.c0))) BETWEEN (t1.c1) AND (((t1.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE WHEN json_array(t1.c1, t1.c1) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) BETWEEN (t1.c0) AND (t1.c40)) THEN TRIM(rt0.c0) WHEN (t1.c1 IN ()) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.9892092122873833) END ORDER BY ((UNLIKELY(rt0.c0))IS NOT(('R' IN ()))) DESC);
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE WHEN json_array(t1.c1, t1.c1) THEN (rt0.c2 IN ()) WHEN ((rt0.c0) BETWEEN (t1.c0) AND (t1.c40)) THEN TRIM(rt0.c0) WHEN (t1.c1 IN ()) THEN LIKELIHOOD(DISTINCT rt0.c2, 0.9892092122873833) END WHERE (((((t1.c40)*(t1.c0))) BETWEEN (t1.c1) AND (((t1.c0)LIKE(rt0.c2))))) ORDER BY ((UNLIKELY(rt0.c0))IS NOT(('R' IN ()))) DESC;
SELECT ALL * FROM vt2, rt0, t1, vt0 WHERE ((((t1.c40) NOT BETWEEN (vt0.c0) AND (vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40) NOT BETWEEN (vt0.c0) AND (vt2.c0)) IN ())) IS TRUE)  as count FROM vt2, rt0, t1, vt0);
SELECT ALL * FROM vt2, rt0, t1, vt0 WHERE ((((t1.c40) NOT BETWEEN (vt0.c0) AND (vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c40) NOT BETWEEN (vt0.c0) AND (vt2.c0)) IN ())) IS TRUE)  as count FROM vt2, rt0, t1, vt0);
SELECT ALL * FROM vt2, rt0, t1, vt0 WHERE ((((t1.c40) NOT BETWEEN (vt0.c0) AND (vt2.c0)) IN ()));
SELECT COUNT(*) FROM vt2, vt0, t1 INNER JOIN rt0 ON (+ ((t1.c0 IN ()))) WHERE (((((((((((t1.c1)AND(rt0.c0)))AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt2.c0 END) AND ((- (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)AND(rt0.c0)))AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt2.c0 END) AND ((- (t1.c40))))) IS TRUE)  as count FROM vt2, vt0, t1 INNER JOIN rt0 ON (+ ((t1.c0 IN ()))));
SELECT COUNT(*) FROM vt2, vt0, t1 INNER JOIN rt0 ON (+ ((t1.c0 IN ()))) WHERE (((((((((((t1.c1)AND(rt0.c0)))AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt2.c0 END) AND ((- (t1.c40)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)AND(rt0.c0)))AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt2.c0 END) AND ((- (t1.c40))))) IS TRUE)  as count FROM vt2, vt0, t1 INNER JOIN rt0 ON (+ ((t1.c0 IN ()))));
SELECT COUNT(*) FROM vt2, vt0, t1 INNER JOIN rt0 ON (+ ((t1.c0 IN ()))) WHERE (((((((((((t1.c1)AND(rt0.c0)))AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN vt2.c0 END) AND ((- (t1.c40)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt2 NATURAL JOIN vt0 WHERE (((((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt2.c0 IN (vt0.c0, vt0.c0))) AND (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt2.c0 IN (vt0.c0, vt0.c0))) AND (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt0);
SELECT ALL * FROM vt2 NATURAL JOIN vt0 WHERE (((((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt2.c0 IN (vt0.c0, vt0.c0))) AND (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt2.c0 IN (vt0.c0, vt0.c0))) AND (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt0);
SELECT ALL * FROM vt2 NATURAL JOIN vt0 WHERE (((((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt2.c0 IN (vt0.c0, vt0.c0))) AND (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))));
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (CASE WHEN ((rt0.c1)*(rt0.c0)) THEN ((((rt0.c0)AND(t1.c1)))AND(t1.c40)) END) ORDER BY (~ (((rt0.c2)OR(vt2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)*(rt0.c0)) THEN ((((rt0.c0)AND(t1.c1)))AND(t1.c40)) END) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY (~ (((rt0.c2)OR(vt2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (CASE WHEN ((rt0.c1)*(rt0.c0)) THEN ((((rt0.c0)AND(t1.c1)))AND(t1.c40)) END) ORDER BY (~ (((rt0.c2)OR(vt2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)*(rt0.c0)) THEN ((((rt0.c0)AND(t1.c1)))AND(t1.c40)) END) IS TRUE)  as count FROM vt2, rt0, t1 ORDER BY (~ (((rt0.c2)OR(vt2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0, t1 WHERE (CASE WHEN ((rt0.c1)*(rt0.c0)) THEN ((((rt0.c0)AND(t1.c1)))AND(t1.c40)) END) ORDER BY (~ (((rt0.c2)OR(vt2.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c2)))+((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c0))))) INNER JOIN t1 ON ((((vt2.c0)OR(rt0.c0)))IS(((t1.c0)>>(NULL)))) CROSS JOIN vt2 ON (CASE vt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN t1.c40 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c2 END IN ()) WHERE (((json_type('''ZPAoJ'))IS(ABS(rt0.c2)))) ORDER BY (((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ((((t1.c1)) BETWEEN ((x'')) AND ((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_type('''ZPAoJ'))IS(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c2)))+((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c0))))) INNER JOIN t1 ON ((((vt2.c0)OR(rt0.c0)))IS(((t1.c0)>>(NULL)))) CROSS JOIN vt2 ON (CASE vt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN t1.c40 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c2 END IN ()) ORDER BY (((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ((((t1.c1)) BETWEEN ((x'')) AND ((rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c2)))+((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c0))))) INNER JOIN t1 ON ((((vt2.c0)OR(rt0.c0)))IS(((t1.c0)>>(NULL)))) CROSS JOIN vt2 ON (CASE vt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN t1.c40 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c2 END IN ()) WHERE (((json_type('''ZPAoJ'))IS(ABS(rt0.c2)))) ORDER BY (((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ((((t1.c1)) BETWEEN ((x'')) AND ((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((((json_type('''ZPAoJ'))IS(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c2)))+((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c0))))) INNER JOIN t1 ON ((((vt2.c0)OR(rt0.c0)))IS(((t1.c0)>>(NULL)))) CROSS JOIN vt2 ON (CASE vt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN t1.c40 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c2 END IN ()) ORDER BY (((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ((((t1.c1)) BETWEEN ((x'')) AND ((rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c2)))+((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c0))))) INNER JOIN t1 ON ((((vt2.c0)OR(rt0.c0)))IS(((t1.c0)>>(NULL)))) CROSS JOIN vt2 ON (CASE vt0.c0  WHEN rt0.c2 THEN t1.c1 WHEN t1.c40 THEN t1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt0.c2 END IN ()) WHERE (((json_type('''ZPAoJ'))IS(ABS(rt0.c2)))) ORDER BY (((vt2.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ((((t1.c1)) BETWEEN ((x'')) AND ((rt0.c2))))) DESC;
SELECT * FROM vt2, t1, vt0 WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(vt2.c0 AS REAL) ELSE '1206172538' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1) NOTNULL) THEN CAST(vt2.c0 AS REAL) ELSE '1206172538' END) IS TRUE)  as count FROM vt2, t1, vt0);
SELECT * FROM vt2, t1, vt0 WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(vt2.c0 AS REAL) ELSE '1206172538' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c1) NOTNULL) THEN CAST(vt2.c0 AS REAL) ELSE '1206172538' END) IS TRUE)  as count FROM vt2, t1, vt0);
SELECT * FROM vt2, t1, vt0 WHERE (CASE WHEN ((t1.c1) NOTNULL) THEN CAST(vt2.c0 AS REAL) ELSE '1206172538' END);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((((rt0.c1)OR(0X402a1306)))AND(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(0x402a1306)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((((rt0.c1)OR(0X402a1306)))AND(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(0x402a1306)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, vt2, rt0 ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (((((((rt0.c1)OR(0X402a1306)))AND(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((t1.c1) ISNULL))))) ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c1, 'K#'))>((rt0.c1, rt0.c2, rt0.c1))))) AND ((t1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((t1.c1) ISNULL))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c1, 'K#'))>((rt0.c1, rt0.c2, rt0.c1))))) AND ((t1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((t1.c1) ISNULL))))) ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c1, 'K#'))>((rt0.c1, rt0.c2, rt0.c1))))) AND ((t1.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((t1.c1) ISNULL))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c1, 'K#'))>((rt0.c1, rt0.c2, rt0.c1))))) AND ((t1.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((((t1.c1) ISNULL))))) ORDER BY (((t1.c1)) NOT BETWEEN (((((t1.c1, t1.c1, 'K#'))>((rt0.c1, rt0.c2, rt0.c1))))) AND ((t1.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t1, vt0, vt2 WHERE (((LTRIM(NULL, t1.c40))OR(t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(NULL, t1.c40))OR(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1, vt0, vt2);
SELECT ALL * FROM rt0, t1, vt0, vt2 WHERE (((LTRIM(NULL, t1.c40))OR(t1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(NULL, t1.c40))OR(t1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1, vt0, vt2);
SELECT ALL * FROM rt0, t1, vt0, vt2 WHERE (((LTRIM(NULL, t1.c40))OR(t1.c1 COLLATE BINARY)));
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((t1.c0)OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t1.c0)OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((t1.c0)OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t1.c0)OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE ((((((((t1.c0)OR(t1.c0)))OR(rt0.c1)))OR(t1.c1)))OR(t1.c1))  WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c2 IN ()) END);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt0.c0)-(vt0.c0))))  NULLS LAST, ((('', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))>=(((- (vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt0.c0)-(vt0.c0))))  NULLS LAST, ((('', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))>=(((- (vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt0.c0)-(vt0.c0))))  NULLS LAST, ((('', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))>=(((- (vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt0.c0)-(vt0.c0))))  NULLS LAST, ((('', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))>=(((- (vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c0) IN (((vt0.c0)-(vt0.c0))))  NULLS LAST, ((('', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY))>=(((- (vt0.c0)), (+ (vt0.c0)), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))), ((CAST(vt0.c0 AS REAL))LIKE(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON json_remove(LOWER(DISTINCT vt0.c0), vt2.c0) WHERE ((-432376291 IN ((vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE))<>(((vt2.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-432376291 IN ((vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON json_remove(LOWER(DISTINCT vt0.c0), vt2.c0) ORDER BY ((((vt0.c0) IS TRUE))!=(((vt2.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON json_remove(LOWER(DISTINCT vt0.c0), vt2.c0) WHERE ((-432376291 IN ((vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE))<>(((vt2.c0) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((-432376291 IN ((vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON json_remove(LOWER(DISTINCT vt0.c0), vt2.c0) ORDER BY ((((vt0.c0) IS TRUE))!=(((vt2.c0) IS TRUE))) DESC  NULLS LAST);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON json_remove(LOWER(DISTINCT vt0.c0), vt2.c0) WHERE ((-432376291 IN ((vt0.c0 IN ()), ((vt0.c0)<(vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE))<>(((vt2.c0) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS TEXT)) ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS TEXT)) ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt2 WHERE (CAST(((vt2.c0) IS TRUE) AS TEXT)) ORDER BY (rt0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0, t1, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) ORDER BY LIKELY(DISTINCT rt0.c1) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY LIKELY(DISTINCT rt0.c1) COLLATE RTRIM DESC);
SELECT * FROM rt0, t1, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) ORDER BY LIKELY(DISTINCT rt0.c1) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY LIKELY(DISTINCT rt0.c1) COLLATE RTRIM DESC);
SELECT * FROM rt0, t1, vt0 WHERE (UNLIKELY(DISTINCT ((rt0.c0) NOTNULL))) ORDER BY LIKELY(DISTINCT rt0.c1) COLLATE RTRIM DESC;
SELECT ALL * FROM vt0, vt2, rt0 WHERE (-1e500);
SELECT SUM(count) FROM (SELECT ALL ((-1e500) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (-1e500);
SELECT SUM(count) FROM (SELECT ALL ((-1e500) IS TRUE)  as count FROM vt0, vt2, rt0);
SELECT ALL * FROM vt0, vt2, rt0 WHERE (-1e500);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (t1.c40 COLLATE BINARY)) LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS INTEGER))-((~ (rt0.c0)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (t1.c40 COLLATE BINARY)) LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS INTEGER))-((~ (rt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (t1.c40 COLLATE BINARY)) LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS INTEGER))-((~ (rt0.c0)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (t1.c40 COLLATE BINARY)) LEFT OUTER JOIN t1 ON ((CAST(vt0.c0 AS INTEGER))-((~ (rt0.c0)))));
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))=((CAST(vt2.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))==((CAST(vt2.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))=((CAST(vt2.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))==((CAST(vt2.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))=((CAST(vt2.c0 AS NUMERIC)))));
SELECT * FROM rt0 INNER JOIN vt2 ON (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (COALESCE(DISTINCT (- (vt2.c0)), (((rt0.c1))>((rt0.c1))), ((((0.14255219977004818)AND(rt0.c1)))AND(rt0.c1)), x'961e')) ORDER BY (((x'2f4c', NULL, rt0.c0)) BETWEEN (((0.15657015807664632 IN ()), (NOT (vt2.c0)), ((rt0.c0)=(rt0.c2)))) AND (((((vt2.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((((((((NULL)OR(vt2.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0X423eead3)), rt0.c1))) ASC, ((CASE rt0.c1  WHEN '' THEN x'' ELSE vt2.c0 END)/(CASE rt0.c2  WHEN rt0.c1 THEN 0.08057167470860993 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (- (vt2.c0)), (((rt0.c1))>((rt0.c1))), ((((0.14255219977004818)AND(rt0.c1)))AND(rt0.c1)), x'961e')) IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY (((x'2f4c', NULL, rt0.c0)) BETWEEN (((0.15657015807664632 IN ()), (NOT (vt2.c0)), ((rt0.c0)==(rt0.c2)))) AND (((((vt2.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((((((((NULL)OR(vt2.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0x423eead3)), rt0.c1))) ASC, ((CASE rt0.c1  WHEN '' THEN x'' ELSE vt2.c0 END)/(CASE rt0.c2  WHEN rt0.c1 THEN 0.08057167470860993 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt2 ON (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (COALESCE(DISTINCT (- (vt2.c0)), (((rt0.c1))>((rt0.c1))), ((((0.14255219977004818)AND(rt0.c1)))AND(rt0.c1)), x'961e')) ORDER BY (((x'2f4c', NULL, rt0.c0)) BETWEEN (((0.15657015807664632 IN ()), (NOT (vt2.c0)), ((rt0.c0)=(rt0.c2)))) AND (((((vt2.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((((((((NULL)OR(vt2.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0X423eead3)), rt0.c1))) ASC, ((CASE rt0.c1  WHEN '' THEN x'' ELSE vt2.c0 END)/(CASE rt0.c2  WHEN rt0.c1 THEN 0.08057167470860993 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (- (vt2.c0)), (((rt0.c1))>((rt0.c1))), ((((0.14255219977004818)AND(rt0.c1)))AND(rt0.c1)), x'961e')) IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ORDER BY (((x'2f4c', NULL, rt0.c0)) BETWEEN (((0.15657015807664632 IN ()), (NOT (vt2.c0)), ((rt0.c0)==(rt0.c2)))) AND (((((vt2.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((((((((NULL)OR(vt2.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0x423eead3)), rt0.c1))) ASC, ((CASE rt0.c1  WHEN '' THEN x'' ELSE vt2.c0 END)/(CASE rt0.c2  WHEN rt0.c1 THEN 0.08057167470860993 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt2 ON (NOT ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (COALESCE(DISTINCT (- (vt2.c0)), (((rt0.c1))>((rt0.c1))), ((((0.14255219977004818)AND(rt0.c1)))AND(rt0.c1)), x'961e')) ORDER BY (((x'2f4c', NULL, rt0.c0)) BETWEEN (((0.15657015807664632 IN ()), (NOT (vt2.c0)), ((rt0.c0)=(rt0.c2)))) AND (((((vt2.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((((((((NULL)OR(vt2.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(0X423eead3)), rt0.c1))) ASC, ((CASE rt0.c1  WHEN '' THEN x'' ELSE vt2.c0 END)/(CASE rt0.c2  WHEN rt0.c1 THEN 0.08057167470860993 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt2 WHERE (((vt0.c0)>(((vt0.c0) NOT NULL)))) ORDER BY CAST(((vt2.c0) BETWEEN ('-948225005') AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(((vt2.c0) BETWEEN ('-948225005') AND (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, vt2 WHERE (((vt0.c0)>(((vt0.c0) NOT NULL)))) ORDER BY CAST(((vt2.c0) BETWEEN ('-948225005') AND (vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(((vt2.c0) BETWEEN ('-948225005') AND (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, vt2 WHERE (((vt0.c0)>(((vt0.c0) NOT NULL)))) ORDER BY CAST(((vt2.c0) BETWEEN ('-948225005') AND (vt0.c0)) AS NUMERIC);
SELECT ALL * FROM vt2 WHERE ((vt2.c0 IN ())) ORDER BY (((0Xffffffffa8207d1e IN ())) BETWEEN (LIKE(vt2.c0, vt2.c0, 'W')) AND (vt2.c0)) ASC, 0.9933822040513989;
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 IN ())) IS TRUE)  as count FROM vt2 ORDER BY (((0xffffffffa8207d1e IN ())) BETWEEN (LIKE(vt2.c0, vt2.c0, 'W')) AND (vt2.c0)) ASC, 0.9933822040513989);
SELECT ALL * FROM vt2 WHERE ((vt2.c0 IN ())) ORDER BY (((0Xffffffffa8207d1e IN ())) BETWEEN (LIKE(vt2.c0, vt2.c0, 'W')) AND (vt2.c0)) ASC, 0.9933822040513989;
SELECT SUM(count) FROM (SELECT ALL (((vt2.c0 IN ())) IS TRUE)  as count FROM vt2 ORDER BY (((0xffffffffa8207d1e IN ())) BETWEEN (LIKE(vt2.c0, vt2.c0, 'W')) AND (vt2.c0)) ASC, 0.9933822040513989);
SELECT ALL * FROM vt2 WHERE ((vt2.c0 IN ())) ORDER BY (((0Xffffffffa8207d1e IN ())) BETWEEN (LIKE(vt2.c0, vt2.c0, 'W')) AND (vt2.c0)) ASC, 0.9933822040513989;
SELECT * FROM t1, rt0, vt2, vt0 WHERE (json_type(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM t1, rt0, vt2, vt0);
SELECT * FROM t1, rt0, vt2, vt0 WHERE (json_type(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM t1, rt0, vt2, vt0);
SELECT * FROM t1, rt0, vt2, vt0 WHERE (json_type(((rt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NOT (vt0.c0)))));
SELECT ALL * FROM t1, vt2 WHERE (CASE WHEN LIKE(t1.c1, t1.c1, '1') THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(t1.c1, t1.c1, '1') THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1, vt2);
SELECT ALL * FROM t1, vt2 WHERE (CASE WHEN LIKE(t1.c1, t1.c1, '1') THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(t1.c1, t1.c1, '1') THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1, vt2);
SELECT ALL * FROM t1, vt2 WHERE (CASE WHEN LIKE(t1.c1, t1.c1, '1') THEN (t1.c0 IN ()) END);
SELECT * FROM vt2, t1 WHERE (TYPEOF(DISTINCT CAST(t1.c0 AS TEXT))) ORDER BY ((((t1.c0)||(t1.c0))) NOT BETWEEN (1588397311) AND (((((vt2.c0)AND(t1.c40)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(t1.c0 AS TEXT))) IS TRUE)  as count FROM vt2, t1 ORDER BY ((((t1.c0)||(t1.c0))) NOT BETWEEN (1588397311) AND (((((vt2.c0)AND(t1.c40)))OR(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt2, t1 WHERE (TYPEOF(DISTINCT CAST(t1.c0 AS TEXT))) ORDER BY ((((t1.c0)||(t1.c0))) NOT BETWEEN (1588397311) AND (((((vt2.c0)AND(t1.c40)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(t1.c0 AS TEXT))) IS TRUE)  as count FROM vt2, t1 ORDER BY ((((t1.c0)||(t1.c0))) NOT BETWEEN (1588397311) AND (((((vt2.c0)AND(t1.c40)))OR(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt2, t1 WHERE (TYPEOF(DISTINCT CAST(t1.c0 AS TEXT))) ORDER BY ((((t1.c0)||(t1.c0))) NOT BETWEEN (1588397311) AND (((((vt2.c0)AND(t1.c40)))OR(t1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE ((t1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((t1.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((t1.c1 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0, t1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c40 COLLATE RTRIM)*(STRFTIME(t1.c1, t1.c40, t1.c1)))) ORDER BY (((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) ISNULL), 0.8024447510708926, rtreenode(t1.c0, t1.c1))) AND ((((t1.c40) IS TRUE), (~ (t1.c1)), (~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40 COLLATE RTRIM)*(STRFTIME(t1.c1, t1.c40, t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) ISNULL), 0.8024447510708926, rtreenode(t1.c0, t1.c1))) AND ((((t1.c40) IS TRUE), (~ (t1.c1)), (~ (t1.c0))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c40 COLLATE RTRIM)*(STRFTIME(t1.c1, t1.c40, t1.c1)))) ORDER BY (((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) ISNULL), 0.8024447510708926, rtreenode(t1.c0, t1.c1))) AND ((((t1.c40) IS TRUE), (~ (t1.c1)), (~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40 COLLATE RTRIM)*(STRFTIME(t1.c1, t1.c40, t1.c1)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) ISNULL), 0.8024447510708926, rtreenode(t1.c0, t1.c1))) AND ((((t1.c40) IS TRUE), (~ (t1.c1)), (~ (t1.c0))))));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c40 COLLATE RTRIM)*(STRFTIME(t1.c1, t1.c40, t1.c1)))) ORDER BY (((t1.c1, t1.c0, t1.c0)) BETWEEN ((((t1.c1) ISNULL), 0.8024447510708926, rtreenode(t1.c0, t1.c1))) AND ((((t1.c40) IS TRUE), (~ (t1.c1)), (~ (t1.c0)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt2 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((t1.c1) BETWEEN (t1.c0) AND (rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(LIKELIHOOD(DISTINCT t1.c1, 0.7591918874098106) AS REAL) RIGHT OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c0 AS NUMERIC)) WHERE ('') ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN ((t1.c40)OR(vt2.c0)) THEN ((rt0.c1) IS FALSE) WHEN highlight(vt0.c0, vt0.c0, vt2.c0, t1.c40) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-981422361'))) END DESC, ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, CAST(x'' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((t1.c1) BETWEEN (t1.c0) AND (rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(LIKELIHOOD(DISTINCT t1.c1, 0.7591918874098106) AS REAL) RIGHT OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c0 AS NUMERIC)) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN ((t1.c40)OR(vt2.c0)) THEN ((rt0.c1) IS FALSE) WHEN highlight(vt0.c0, vt0.c0, vt2.c0, t1.c40) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-981422361'))) END DESC, ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, CAST(x'' AS REAL) DESC);
SELECT COUNT(*) FROM rt0 INNER JOIN vt2 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((t1.c1) BETWEEN (t1.c0) AND (rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(LIKELIHOOD(DISTINCT t1.c1, 0.7591918874098106) AS REAL) RIGHT OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c0 AS NUMERIC)) WHERE ('') ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN ((t1.c40)OR(vt2.c0)) THEN ((rt0.c1) IS FALSE) WHEN highlight(vt0.c0, vt0.c0, vt2.c0, t1.c40) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-981422361'))) END DESC, ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, CAST(x'' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 INNER JOIN vt2 ON ((t1.c0 COLLATE NOCASE) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((NULL)))) AND (((t1.c1) BETWEEN (t1.c0) AND (rt0.c0)))) LEFT OUTER JOIN vt0 ON CAST(LIKELIHOOD(DISTINCT t1.c1, 0.7591918874098106) AS REAL) RIGHT OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c0 AS NUMERIC)) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0)) BETWEEN ((t1.c1)) AND ((t1.c1))) WHEN ((t1.c40)OR(vt2.c0)) THEN ((rt0.c1) IS FALSE) WHEN highlight(vt0.c0, vt0.c0, vt2.c0, t1.c40) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('-981422361'))) END DESC, ((rt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND (t1.c1 COLLATE NOCASE))  NULLS FIRST, CAST(x'' AS REAL) DESC);
SELECT ALL * FROM vt0, t1 WHERE (CASE (((t1.c1)) BETWEEN ((t1.c40)) AND ((vt0.c0)))  WHEN ((t1.c1)IS NOT(t1.c0)) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c1)) BETWEEN ((t1.c40)) AND ((vt0.c0)))  WHEN ((t1.c1)IS NOT(t1.c0)) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c1) ISNULL) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE (((t1.c1)) BETWEEN ((t1.c40)) AND ((vt0.c0)))  WHEN ((t1.c1)IS NOT(t1.c0)) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t1.c1)) BETWEEN ((t1.c40)) AND ((vt0.c0)))  WHEN ((t1.c1)IS NOT(t1.c0)) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c1) ISNULL) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE (((t1.c1)) BETWEEN ((t1.c40)) AND ((vt0.c0)))  WHEN ((t1.c1)IS NOT(t1.c0)) THEN t1.c0 COLLATE RTRIM ELSE ((t1.c1) ISNULL) END);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((~ (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((~ (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt2);
SELECT COUNT(*) FROM rt0, vt2 WHERE ((((~ (rt0.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 END) AND (CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (CAST((t1.c0 IN (vt2.c0)) AS REAL)) ORDER BY ((((((t1.c40) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((t1.c40) NOT BETWEEN (t1.c40) AND (t1.c0)))))OR(((t1.c0)<>(t1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN (vt2.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY ((((((t1.c40) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((t1.c40) NOT BETWEEN (t1.c40) AND (t1.c0)))))OR(((t1.c0)!=(t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (CAST((t1.c0 IN (vt2.c0)) AS REAL)) ORDER BY ((((((t1.c40) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((t1.c40) NOT BETWEEN (t1.c40) AND (t1.c0)))))OR(((t1.c0)<>(t1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((t1.c0 IN (vt2.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt2, vt0 ORDER BY ((((((t1.c40) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((t1.c40) NOT BETWEEN (t1.c40) AND (t1.c0)))))OR(((t1.c0)!=(t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt2, vt0 WHERE (CAST((t1.c0 IN (vt2.c0)) AS REAL)) ORDER BY ((((((t1.c40) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((t1.c40) NOT BETWEEN (t1.c40) AND (t1.c0)))))OR(((t1.c0)<>(t1.c0))));
SELECT * FROM t1 INNER JOIN vt2 ON (((t1.c0 IN ()))LIKE(((t1.c40)|(t1.c1)))) WHERE (((((t1.c1) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt2 ON (((t1.c0 IN ()))LIKE(((t1.c40)|(t1.c1)))));
SELECT * FROM t1 INNER JOIN vt2 ON (((t1.c0 IN ()))LIKE(((t1.c40)|(t1.c1)))) WHERE (((((t1.c1) NOTNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt2 ON (((t1.c0 IN ()))LIKE(((t1.c40)|(t1.c1)))));
SELECT * FROM t1 INNER JOIN vt2 ON (((t1.c0 IN ()))LIKE(((t1.c40)|(t1.c1)))) WHERE (((((t1.c1) NOTNULL)) IS TRUE));
SELECT ALL * FROM vt2, rt0 WHERE ((((((rt0.c1))!=((vt2.c0)))) NOT BETWEEN (((rt0.c1)*(vt2.c0))) AND (UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((vt2.c0)))) NOT BETWEEN (((rt0.c1)*(vt2.c0))) AND (UNLIKELY(NULL)))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE ((((((rt0.c1))!=((vt2.c0)))) NOT BETWEEN (((rt0.c1)*(vt2.c0))) AND (UNLIKELY(NULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<>((vt2.c0)))) NOT BETWEEN (((rt0.c1)*(vt2.c0))) AND (UNLIKELY(NULL)))) IS TRUE)  as count FROM vt2, rt0);
SELECT ALL * FROM vt2, rt0 WHERE ((((((rt0.c1))!=((vt2.c0)))) NOT BETWEEN (((rt0.c1)*(vt2.c0))) AND (UNLIKELY(NULL))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((((t1.c1)OR(0.219829772447537)))OR(rt0.c2)))>>(((t1.c1) NOT NULL))) RIGHT OUTER JOIN vt2 ON CASE (rt0.c0 IN ())  WHEN (((rt0.c1)) BETWEEN ((t1.c1)) AND ((vt2.c0))) THEN (- (rt0.c2)) END LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS REAL) WHERE (load_extension((t1.c1 IN (rt0.c0, vt0.c0)), t1.c40 COLLATE RTRIM)) ORDER BY (NOT (((((t1.c0)AND(t1.c40)))OR('0y')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension((t1.c1 IN (rt0.c0, vt0.c0)), t1.c40 COLLATE RTRIM)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((((t1.c1)OR(0.219829772447537)))OR(rt0.c2)))>>(((t1.c1) NOT NULL))) RIGHT OUTER JOIN vt2 ON CASE (rt0.c0 IN ())  WHEN (((rt0.c1)) BETWEEN ((t1.c1)) AND ((vt2.c0))) THEN (- (rt0.c2)) END LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS REAL) ORDER BY (NOT (((((t1.c0)AND(t1.c40)))OR('0y')))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((((t1.c1)OR(0.219829772447537)))OR(rt0.c2)))>>(((t1.c1) NOT NULL))) RIGHT OUTER JOIN vt2 ON CASE (rt0.c0 IN ())  WHEN (((rt0.c1)) BETWEEN ((t1.c1)) AND ((vt2.c0))) THEN (- (rt0.c2)) END LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS REAL) WHERE (load_extension((t1.c1 IN (rt0.c0, vt0.c0)), t1.c40 COLLATE RTRIM)) ORDER BY (NOT (((((t1.c0)AND(t1.c40)))OR('0y')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension((t1.c1 IN (rt0.c0, vt0.c0)), t1.c40 COLLATE RTRIM)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((((t1.c1)OR(0.219829772447537)))OR(rt0.c2)))>>(((t1.c1) NOT NULL))) RIGHT OUTER JOIN vt2 ON CASE (rt0.c0 IN ())  WHEN (((rt0.c1)) BETWEEN ((t1.c1)) AND ((vt2.c0))) THEN (- (rt0.c2)) END LEFT OUTER JOIN rt0 ON CAST((NOT (rt0.c2)) AS REAL) ORDER BY (NOT (((((t1.c0)AND(t1.c40)))OR('0y')))) DESC  NULLS LAST);
SELECT * FROM vt0, rt0, vt2 WHERE (((vt2.c0)<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT * FROM vt0, rt0, vt2 WHERE (((vt2.c0)<(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt2);
SELECT * FROM vt0, rt0, vt2 WHERE (((vt2.c0)<(rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON x'7edc' INNER JOIN rt0 ON LIKELY(DISTINCT t1.c0 COLLATE NOCASE) WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (LIKELY(rt0.c0) IN ()), ((json_quote(t1.c1)) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c0)OR(t1.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON x'7edc' INNER JOIN rt0 ON LIKELY(DISTINCT t1.c0 COLLATE NOCASE) ORDER BY (LIKELY(rt0.c0) IN ()), ((json_quote(t1.c1)) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c0)OR(t1.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON x'7edc' INNER JOIN rt0 ON LIKELY(DISTINCT t1.c0 COLLATE NOCASE) WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (LIKELY(rt0.c0) IN ()), ((json_quote(t1.c1)) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c0)OR(t1.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON x'7edc' INNER JOIN rt0 ON LIKELY(DISTINCT t1.c0 COLLATE NOCASE) ORDER BY (LIKELY(rt0.c0) IN ()), ((json_quote(t1.c1)) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c0)OR(t1.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON x'7edc' INNER JOIN rt0 ON LIKELY(DISTINCT t1.c0 COLLATE NOCASE) WHERE (CAST(rt0.c1 AS REAL)) ORDER BY (LIKELY(rt0.c0) IN ()), ((json_quote(t1.c1)) NOT BETWEEN ((t1.c0 IN ())) AND (((((t1.c0)OR(t1.c1)))AND(rt0.c0))));
SELECT * FROM t1, vt2, vt0, rt0 WHERE (((((((rt0.c2))<=((t1.c0))), ((vt0.c0)|(rt0.c1)), ((0X212192f9) NOT BETWEEN (t1.c40) AND (t1.c1))))<=((CAST(vt0.c0 AS NUMERIC), (((t1.c40, vt0.c0, t1.c40)) BETWEEN ((t1.c1, rt0.c0, vt2.c0)) AND ((t1.c1, rt0.c2, rt0.c1))), t1.c1 COLLATE NOCASE)))) ORDER BY ((((vt2.c0)IS(vt0.c0))) NOT NULL) ASC, CASE WHEN (rt0.c0 IN ()) THEN ((t1.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<=((t1.c0))), ((vt0.c0)|(rt0.c1)), ((0x212192f9) NOT BETWEEN (t1.c40) AND (t1.c1))))<=((CAST(vt0.c0 AS NUMERIC), (((t1.c40, vt0.c0, t1.c40)) BETWEEN ((t1.c1, rt0.c0, vt2.c0)) AND ((t1.c1, rt0.c2, rt0.c1))), t1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY ((((vt2.c0)IS(vt0.c0))) NOT NULL) ASC, CASE WHEN (rt0.c0 IN ()) THEN ((t1.c0) NOTNULL) END ASC  NULLS FIRST);
SELECT * FROM t1, vt2, vt0, rt0 WHERE (((((((rt0.c2))<=((t1.c0))), ((vt0.c0)|(rt0.c1)), ((0X212192f9) NOT BETWEEN (t1.c40) AND (t1.c1))))<=((CAST(vt0.c0 AS NUMERIC), (((t1.c40, vt0.c0, t1.c40)) BETWEEN ((t1.c1, rt0.c0, vt2.c0)) AND ((t1.c1, rt0.c2, rt0.c1))), t1.c1 COLLATE NOCASE)))) ORDER BY ((((vt2.c0)IS(vt0.c0))) NOT NULL) ASC, CASE WHEN (rt0.c0 IN ()) THEN ((t1.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))<=((t1.c0))), ((vt0.c0)|(rt0.c1)), ((0x212192f9) NOT BETWEEN (t1.c40) AND (t1.c1))))<=((CAST(vt0.c0 AS NUMERIC), (((t1.c40, vt0.c0, t1.c40)) BETWEEN ((t1.c1, rt0.c0, vt2.c0)) AND ((t1.c1, rt0.c2, rt0.c1))), t1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt2, vt0, rt0 ORDER BY ((((vt2.c0)IS(vt0.c0))) NOT NULL) ASC, CASE WHEN (rt0.c0 IN ()) THEN ((t1.c0) NOTNULL) END ASC  NULLS FIRST);
SELECT * FROM t1, vt2, vt0, rt0 WHERE (((((((rt0.c2))<=((t1.c0))), ((vt0.c0)|(rt0.c1)), ((0X212192f9) NOT BETWEEN (t1.c40) AND (t1.c1))))<=((CAST(vt0.c0 AS NUMERIC), (((t1.c40, vt0.c0, t1.c40)) BETWEEN ((t1.c1, rt0.c0, vt2.c0)) AND ((t1.c1, rt0.c2, rt0.c1))), t1.c1 COLLATE NOCASE)))) ORDER BY ((((vt2.c0)IS(vt0.c0))) NOT NULL) ASC, CASE WHEN (rt0.c0 IN ()) THEN ((t1.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0)))&(LTRIM(0.02059278009787968)))) ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0)))&(LTRIM(0.02059278009787968)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0)))&(LTRIM(0.02059278009787968)))) ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0)))&(LTRIM(0.02059278009787968)))) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0)))&(LTRIM(0.02059278009787968)))) ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS FIRST, (+ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0))<=((1.46360314E8, vt0.c0, rt0.c2, 0.28145959389452546, vt0.c0))) THEN ((((rt0.c0)OR(0.3106039516908725)))OR(rt0.c1)) ELSE '883667140' END) ORDER BY CAST((~ (rt0.c1)) AS TEXT) DESC, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0))<=((1.46360314E8, vt0.c0, rt0.c2, 0.28145959389452546, vt0.c0))) THEN ((((rt0.c0)OR(0.3106039516908725)))OR(rt0.c1)) ELSE '883667140' END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT) DESC, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0))<=((1.46360314E8, vt0.c0, rt0.c2, 0.28145959389452546, vt0.c0))) THEN ((((rt0.c0)OR(0.3106039516908725)))OR(rt0.c1)) ELSE '883667140' END) ORDER BY CAST((~ (rt0.c1)) AS TEXT) DESC, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0))<=((1.46360314E8, vt0.c0, rt0.c2, 0.28145959389452546, vt0.c0))) THEN ((((rt0.c0)OR(0.3106039516908725)))OR(rt0.c1)) ELSE '883667140' END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((~ (rt0.c1)) AS TEXT) DESC, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, rt0.c1, rt0.c1, vt0.c0))<=((1.46360314E8, vt0.c0, rt0.c2, 0.28145959389452546, vt0.c0))) THEN ((((rt0.c0)OR(0.3106039516908725)))OR(rt0.c1)) ELSE '883667140' END) ORDER BY CAST((~ (rt0.c1)) AS TEXT) DESC, CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, vt2, rt0 WHERE ((rt0.c0 IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt2, rt0);
SELECT COUNT(*) FROM t1, vt0, vt2, rt0 WHERE ((rt0.c0 IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt2, rt0);
SELECT COUNT(*) FROM t1, vt0, vt2, rt0 WHERE ((rt0.c0 IN ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON -1740179914 WHERE (((((CASE WHEN vt2.c0 THEN rt0.c0 END)OR(CAST(vt2.c0 AS TEXT))))AND(((rt0.c1) IS TRUE)))) ORDER BY -5.80885347E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt2.c0 THEN rt0.c0 END)OR(CAST(vt2.c0 AS TEXT))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON -1740179914 ORDER BY -5.80885347E8 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON -1740179914 WHERE (((((CASE WHEN vt2.c0 THEN rt0.c0 END)OR(CAST(vt2.c0 AS TEXT))))AND(((rt0.c1) IS TRUE)))) ORDER BY -5.80885347E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt2.c0 THEN rt0.c0 END)OR(CAST(vt2.c0 AS TEXT))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt2 ON -1740179914 ORDER BY -5.80885347E8 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt2 ON -1740179914 WHERE (((((CASE WHEN vt2.c0 THEN rt0.c0 END)OR(CAST(vt2.c0 AS TEXT))))AND(((rt0.c1) IS TRUE)))) ORDER BY -5.80885347E8 ASC  NULLS FIRST;
SELECT ALL * FROM vt2, t1, rt0 WHERE ((0.542553749034371 IN ())) ORDER BY ((((((rt0.c0)OR(t1.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND ('1230106933'))  NULLS FIRST, ((((rt0.c0)||(vt2.c0)))&(json_array(t1.c40, t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.542553749034371 IN ())) IS TRUE)  as count FROM vt2, t1, rt0 ORDER BY ((((((rt0.c0)OR(t1.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND ('1230106933'))  NULLS FIRST, ((((rt0.c0)||(vt2.c0)))&(json_array(t1.c40, t1.c0))) DESC);
SELECT ALL * FROM vt2, t1, rt0 WHERE ((0.542553749034371 IN ())) ORDER BY ((((((rt0.c0)OR(t1.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND ('1230106933'))  NULLS FIRST, ((((rt0.c0)||(vt2.c0)))&(json_array(t1.c40, t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((0.542553749034371 IN ())) IS TRUE)  as count FROM vt2, t1, rt0 ORDER BY ((((((rt0.c0)OR(t1.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND ('1230106933'))  NULLS FIRST, ((((rt0.c0)||(vt2.c0)))&(json_array(t1.c40, t1.c0))) DESC);
SELECT ALL * FROM vt2, t1, rt0 WHERE ((0.542553749034371 IN ())) ORDER BY ((((((rt0.c0)OR(t1.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c2))) AND ('1230106933'))  NULLS FIRST, ((((rt0.c0)||(vt2.c0)))&(json_array(t1.c40, t1.c0))) DESC;
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (((t1.c40)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((t1.c1)GLOB(CASE vt2.c0  WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40)|(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c0 ORDER BY ((t1.c1)GLOB(CASE vt2.c0  WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (((t1.c40)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((t1.c1)GLOB(CASE vt2.c0  WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c40)|(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c0 ORDER BY ((t1.c1)GLOB(CASE vt2.c0  WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt2 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (((t1.c40)|(rt0.c2)) COLLATE NOCASE) ORDER BY ((t1.c1)GLOB(CASE vt2.c0  WHEN vt0.c0 THEN t1.c1 END))  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0) ISNULL))AND(((rt0.c1) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) ISNULL))AND(((rt0.c1) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0) ISNULL))AND(((rt0.c1) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) ISNULL))AND(((rt0.c1) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((((((t1.c0) ISNULL))AND(((rt0.c1) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)))));
SELECT * FROM rt0, vt2, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))IS(((vt0.c0)IS(rt0.c1))))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (('-725549552') BETWEEN ('-757901476') AND (vt2.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt0.c0))IS(((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (('-725549552') BETWEEN ('-757901476') AND (vt2.c0)) END  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))IS(((vt0.c0)IS(rt0.c1))))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (('-725549552') BETWEEN ('-757901476') AND (vt2.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt0.c0))IS(((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt2, vt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (('-725549552') BETWEEN ('-757901476') AND (vt2.c0)) END  NULLS FIRST);
SELECT * FROM rt0, vt2, vt0 WHERE (((TYPEOF(DISTINCT vt0.c0))IS(((vt0.c0)IS(rt0.c1))))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN (('-725549552') BETWEEN ('-757901476') AND (vt2.c0)) END  NULLS FIRST;
SELECT ALL * FROM t1, vt2 WHERE (((CASE WHEN 0.9622416486488627 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 ELSE t1.c40 END)>=((('-1936053992')>>(t1.c40))))) ORDER BY ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((t1.c0)))))<((CAST(t1.c40 AS BLOB)))) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN t1.c40 END AS INTEGER)  NULLS LAST, 0.4997252483694985 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.9622416486488627 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 ELSE t1.c40 END)>=((('-1936053992')>>(t1.c40))))) IS TRUE)  as count FROM t1, vt2 ORDER BY ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((t1.c0)))))<((CAST(t1.c40 AS BLOB)))) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN t1.c40 END AS INTEGER)  NULLS LAST, 0.4997252483694985 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt2 WHERE (((CASE WHEN 0.9622416486488627 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 ELSE t1.c40 END)>=((('-1936053992')>>(t1.c40))))) ORDER BY ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((t1.c0)))))<((CAST(t1.c40 AS BLOB)))) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN t1.c40 END AS INTEGER)  NULLS LAST, 0.4997252483694985 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.9622416486488627 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 ELSE t1.c40 END)>=((('-1936053992')>>(t1.c40))))) IS TRUE)  as count FROM t1, vt2 ORDER BY ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((t1.c0)))))<((CAST(t1.c40 AS BLOB)))) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN t1.c40 END AS INTEGER)  NULLS LAST, 0.4997252483694985 ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt2 WHERE (((CASE WHEN 0.9622416486488627 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 WHEN vt2.c0 THEN t1.c40 ELSE t1.c40 END)>=((('-1936053992')>>(t1.c40))))) ORDER BY ((((((t1.c1)) NOT BETWEEN ((t1.c40)) AND ((t1.c0)))))<((CAST(t1.c40 AS BLOB)))) ASC  NULLS FIRST, CAST(CASE WHEN t1.c40 THEN t1.c40 END AS INTEGER)  NULLS LAST, 0.4997252483694985 ASC  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (''))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND ('')));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (''))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((- (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND ('')));
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ('&Neӿ') ORDER BY ((NULL) BETWEEN (rt0.c1) AND ((+ (rt0.c0)))), ((((rt0.c2)>=(rt0.c0))) ISNULL)  NULLS FIRST, ((((rt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('&Neӿ') IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((NULL) BETWEEN (rt0.c1) AND ((+ (rt0.c0)))), ((((rt0.c2)>=(rt0.c0))) ISNULL)  NULLS FIRST, ((((rt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ('&Neӿ') ORDER BY ((NULL) BETWEEN (rt0.c1) AND ((+ (rt0.c0)))), ((((rt0.c2)>=(rt0.c0))) ISNULL)  NULLS FIRST, ((((rt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('&Neӿ') IS TRUE)  as count FROM rt0, vt0, vt2 ORDER BY ((NULL) BETWEEN (rt0.c1) AND ((+ (rt0.c0)))), ((((rt0.c2)>=(rt0.c0))) ISNULL)  NULLS FIRST, ((((rt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt2 WHERE ('&Neӿ') ORDER BY ((NULL) BETWEEN (rt0.c1) AND ((+ (rt0.c0)))), ((((rt0.c2)>=(rt0.c0))) ISNULL)  NULLS FIRST, ((((rt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('-42747890') ORDER BY (~ (rt0.c1))  NULLS FIRST, (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-42747890') IS TRUE)  as count FROM rt0, t1 ORDER BY (~ (rt0.c1))  NULLS FIRST, (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('-42747890') ORDER BY (~ (rt0.c1))  NULLS FIRST, (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-42747890') IS TRUE)  as count FROM rt0, t1 ORDER BY (~ (rt0.c1))  NULLS FIRST, (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ('-42747890') ORDER BY (~ (rt0.c1))  NULLS FIRST, (- (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t1, vt0 INDEXED BY i10 WHERE (((((((NULL) IS TRUE))AND(CASE WHEN t1.c40 THEN rt0.c0 END)))OR(rt0.c1))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))) AND ((t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((NULL) IS TRUE))AND(CASE WHEN t1.c40 THEN rt0.c0 END)))OR(rt0.c1))) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i10 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))) AND ((t1.c1 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt0, t1, vt0 INDEXED BY i10 WHERE (((((((NULL) IS TRUE))AND(CASE WHEN t1.c40 THEN rt0.c0 END)))OR(rt0.c1))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))) AND ((t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((NULL) IS TRUE))AND(CASE WHEN t1.c40 THEN rt0.c0 END)))OR(rt0.c1))) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i10 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS FIRST, (((vt0.c0)) BETWEEN ((((((rt0.c2)AND(rt0.c2)))OR(vt0.c0)))) AND ((t1.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0, vt0, t1 WHERE ((- ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((- ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((- ((~ (rt0.c2)))));
SELECT * FROM t1, vt2 INNER JOIN vt0 ON ('1610374297' IN ()) WHERE (TYPEOF(DISTINCT ((vt2.c0)%(vt0.c0)))) ORDER BY ((CASE WHEN t1.c40 THEN vt0.c0 ELSE vt2.c0 END) BETWEEN (COALESCE(DISTINCT t1.c1, t1.c1)) AND ((0xffffffffab54700f IN (t1.c0)))) ASC, ((vt2.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt2.c0)%(vt0.c0)))) IS TRUE)  as count FROM t1, vt2 INNER JOIN vt0 ON ('1610374297' IN ()) ORDER BY ((CASE WHEN t1.c40 THEN vt0.c0 ELSE vt2.c0 END) BETWEEN (COALESCE(DISTINCT t1.c1, t1.c1)) AND ((0xffffffffab54700f IN (t1.c0)))) ASC, ((vt2.c0) IS TRUE)  NULLS LAST);
SELECT * FROM t1, vt2 INNER JOIN vt0 ON ('1610374297' IN ()) WHERE (TYPEOF(DISTINCT ((vt2.c0)%(vt0.c0)))) ORDER BY ((CASE WHEN t1.c40 THEN vt0.c0 ELSE vt2.c0 END) BETWEEN (COALESCE(DISTINCT t1.c1, t1.c1)) AND ((0xffffffffab54700f IN (t1.c0)))) ASC, ((vt2.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt2.c0)%(vt0.c0)))) IS TRUE)  as count FROM t1, vt2 INNER JOIN vt0 ON ('1610374297' IN ()) ORDER BY ((CASE WHEN t1.c40 THEN vt0.c0 ELSE vt2.c0 END) BETWEEN (COALESCE(DISTINCT t1.c1, t1.c1)) AND ((0xffffffffab54700f IN (t1.c0)))) ASC, ((vt2.c0) IS TRUE)  NULLS LAST);
SELECT * FROM t1, vt2 INNER JOIN vt0 ON ('1610374297' IN ()) WHERE (TYPEOF(DISTINCT ((vt2.c0)%(vt0.c0)))) ORDER BY ((CASE WHEN t1.c40 THEN vt0.c0 ELSE vt2.c0 END) BETWEEN (COALESCE(DISTINCT t1.c1, t1.c1)) AND ((0xffffffffab54700f IN (t1.c0)))) ASC, ((vt2.c0) IS TRUE)  NULLS LAST;
SELECT * FROM vt0, vt2, rt0, t1 WHERE ((((((t1.c0))<=((NULL))))<<(((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN '-1827333515' THEN CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))<=((NULL))))<<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2, rt0, t1 ORDER BY CASE WHEN '-1827333515' THEN CAST(vt0.c0 AS REAL) END DESC  NULLS LAST);
SELECT * FROM vt0, vt2, rt0, t1 WHERE ((((((t1.c0))<=((NULL))))<<(((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN '-1827333515' THEN CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))<=((NULL))))<<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt2, rt0, t1 ORDER BY CASE WHEN '-1827333515' THEN CAST(vt0.c0 AS REAL) END DESC  NULLS LAST);
SELECT * FROM vt0, vt2, rt0, t1 WHERE ((((((t1.c0))<=((NULL))))<<(((vt0.c0) IS FALSE)))) ORDER BY CASE WHEN '-1827333515' THEN CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT * FROM rt0, vt0, vt2 CROSS JOIN t1 ON (((((t1.c0) ISNULL)))!=(((- (t1.c40))))) WHERE (((((vt0.c0)||(rt0.c2))) NOT BETWEEN (0.08057167470860993) AND (((t1.c40)IS(rt0.c1))))) ORDER BY ((((t1.c40) NOT NULL))*(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c1 WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t1.c40 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(rt0.c2))) NOT BETWEEN (0.08057167470860993) AND (((t1.c40)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2 CROSS JOIN t1 ON (((((t1.c0) ISNULL)))<>(((- (t1.c40))))) ORDER BY ((((t1.c40) NOT NULL))*(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c1 WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t1.c40 END)));
SELECT * FROM rt0, vt0, vt2 CROSS JOIN t1 ON (((((t1.c0) ISNULL)))!=(((- (t1.c40))))) WHERE (((((vt0.c0)||(rt0.c2))) NOT BETWEEN (0.08057167470860993) AND (((t1.c40)IS(rt0.c1))))) ORDER BY ((((t1.c40) NOT NULL))*(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c1 WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t1.c40 END));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(rt0.c2))) NOT BETWEEN (0.08057167470860993) AND (((t1.c40)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt2 CROSS JOIN t1 ON (((((t1.c0) ISNULL)))<>(((- (t1.c40))))) ORDER BY ((((t1.c40) NOT NULL))*(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c1 WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t1.c40 END)));
SELECT * FROM rt0, vt0, vt2 CROSS JOIN t1 ON (((((t1.c0) ISNULL)))!=(((- (t1.c40))))) WHERE (((((vt0.c0)||(rt0.c2))) NOT BETWEEN (0.08057167470860993) AND (((t1.c40)IS(rt0.c1))))) ORDER BY ((((t1.c40) NOT NULL))*(CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN t1.c0 THEN rt0.c1 WHEN vt2.c0 THEN t1.c1 WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t1.c40 END));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0 IN ()))OR(('ku,+' IN (rt0.c1, rt0.c1)))))AND(0.7339485072738278)))AND((((rt0.c0))>((rt0.c2))))))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))OR(('ku,+' IN (rt0.c1, rt0.c1)))))AND(0.7339485072738278)))AND((((rt0.c0))>((rt0.c2))))))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0 IN ()))OR(('ku,+' IN (rt0.c1, rt0.c1)))))AND(0.7339485072738278)))AND((((rt0.c0))>((rt0.c2))))))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))OR(('ku,+' IN (rt0.c1, rt0.c1)))))AND(0.7339485072738278)))AND((((rt0.c0))>((rt0.c2))))))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0 IN ()))OR(('ku,+' IN (rt0.c1, rt0.c1)))))AND(0.7339485072738278)))AND((((rt0.c0))>((rt0.c2))))))AND(((rt0.c1) NOT NULL))));
SELECT ALL * FROM vt0, rt0, t1 WHERE (CAST((~ (t1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (CAST((~ (t1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT ALL * FROM vt0, rt0, t1 WHERE (CAST((~ (t1.c1)) AS BLOB));
SELECT ALL * FROM rt0, t1, vt2, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t1.c1)>=(vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t1.c1 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)))) ORDER BY (+ (((vt0.c0) BETWEEN (t1.c40) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t1.c1)>=(vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t1.c1 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)))) IS TRUE)  as count FROM rt0, t1, vt2, vt0 ORDER BY (+ (((vt0.c0) BETWEEN (t1.c40) AND (t1.c0)))));
SELECT ALL * FROM rt0, t1, vt2, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t1.c1)>=(vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t1.c1 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)))) ORDER BY (+ (((vt0.c0) BETWEEN (t1.c40) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((((t1.c1)>=(vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t1.c1 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)))) IS TRUE)  as count FROM rt0, t1, vt2, vt0 ORDER BY (+ (((vt0.c0) BETWEEN (t1.c40) AND (t1.c0)))));
SELECT ALL * FROM rt0, t1, vt2, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((t1.c1)>=(vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN rt0.c1 WHEN vt0.c0 THEN NULL WHEN rt0.c0 THEN t1.c1 WHEN vt2.c0 THEN rt0.c0 WHEN t1.c0 THEN rt0.c1 ELSE t1.c0 END)))) ORDER BY (+ (((vt0.c0) BETWEEN (t1.c40) AND (t1.c0))));
SELECT ALL * FROM rt0 INDEXED BY i10, vt0, vt2 WHERE (load_extension((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0 COLLATE NOCASE)) ORDER BY ((rt0.c1) BETWEEN ((((vt0.c0))==((rt0.c2)))) AND (((((vt2.c0)AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0, vt2 ORDER BY ((rt0.c1) BETWEEN ((((vt0.c0))==((rt0.c2)))) AND (((((vt2.c0)AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0 INDEXED BY i10, vt0, vt2 WHERE (load_extension((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0 COLLATE NOCASE)) ORDER BY ((rt0.c1) BETWEEN ((((vt0.c0))==((rt0.c2)))) AND (((((vt2.c0)AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0 INDEXED BY i10, vt0, vt2 ORDER BY ((rt0.c1) BETWEEN ((((vt0.c0))==((rt0.c2)))) AND (((((vt2.c0)AND(rt0.c2)))AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(vt0.c0))))) ORDER BY 0.461411953952902  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.461411953952902  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(vt0.c0))))) ORDER BY 0.461411953952902  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2)/(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.461411953952902  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c2)/(vt0.c0))))) ORDER BY 0.461411953952902  NULLS FIRST;
SELECT ALL * FROM rt0, vt2, vt0 WHERE ((CASE vt2.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (0.5825912005015007)));
SELECT SUM(count) FROM (SELECT (((CASE vt2.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (0.5825912005015007))) IS TRUE)  as count FROM rt0, vt2, vt0);
SELECT ALL * FROM rt0, vt2, vt0 WHERE ((CASE vt2.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (0.5825912005015007)));
SELECT SUM(count) FROM (SELECT (((CASE vt2.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (0.5825912005015007))) IS TRUE)  as count FROM rt0, vt2, vt0);
SELECT ALL * FROM rt0, vt2, vt0 WHERE ((CASE vt2.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (0.5825912005015007)));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE ((~ ((- (t1.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=('d蛏')) ASC, CASE LOWER(DISTINCT rt0.c1)  WHEN ((((rt0.c1)AND(t1.c1)))OR('-0.0')) THEN ((t1.c0)<=(rt0.c2)) WHEN (((rt0.c0, rt0.c2, t1.c40))>((rt0.c1, rt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)) THEN (t1.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((~ ((- (t1.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=('d蛏')) ASC, CASE LOWER(DISTINCT rt0.c1)  WHEN ((((rt0.c1)AND(t1.c1)))OR('-0.0')) THEN ((t1.c0)<=(rt0.c2)) WHEN (((rt0.c0, rt0.c2, t1.c40))>((rt0.c1, rt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)) THEN (t1.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE ((~ ((- (t1.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=('d蛏')) ASC, CASE LOWER(DISTINCT rt0.c1)  WHEN ((((rt0.c1)AND(t1.c1)))OR('-0.0')) THEN ((t1.c0)<=(rt0.c2)) WHEN (((rt0.c0, rt0.c2, t1.c40))>((rt0.c1, rt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)) THEN (t1.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((~ ((- (t1.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t1 ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=('d蛏')) ASC, CASE LOWER(DISTINCT rt0.c1)  WHEN ((((rt0.c1)AND(t1.c1)))OR('-0.0')) THEN ((t1.c0)<=(rt0.c2)) WHEN (((rt0.c0, rt0.c2, t1.c40))>((rt0.c1, rt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)) THEN (t1.c0 IN ()) END ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t1 WHERE ((~ ((- (t1.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))<=('d蛏')) ASC, CASE LOWER(DISTINCT rt0.c1)  WHEN ((((rt0.c1)AND(t1.c1)))OR('-0.0')) THEN ((t1.c0)<=(rt0.c2)) WHEN (((rt0.c0, rt0.c2, t1.c40))>((rt0.c1, rt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c2)) THEN (t1.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN vt2 ON -1884454586 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c1) IS FALSE)) WHERE ((('')*(0.0783572190177505 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('')*(0.0783572190177505 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN vt2 ON -1884454586 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN vt2 ON -1884454586 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c1) IS FALSE)) WHERE ((('')*(0.0783572190177505 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((('')*(0.0783572190177505 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN vt2 ON -1884454586 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM t1, vt0 FULL OUTER JOIN vt2 ON -1884454586 CROSS JOIN rt0 ON TRIM(DISTINCT ((rt0.c1) IS FALSE)) WHERE ((('')*(0.0783572190177505 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c40) AND (t1.c40))  WHEN (((t1.c1, t1.c40, t1.c0))>((t1.c0, t1.c0, vt2.c0))) THEN ((vt2.c0) NOTNULL) WHEN ((t1.c40) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c40 THEN t1.c0 ELSE t1.c1 END WHEN CAST(t1.c40 AS BLOB) THEN t1.c1 END) ORDER BY t1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOT BETWEEN (t1.c40) AND (t1.c40))  WHEN (((t1.c1, t1.c40, t1.c0))>((t1.c0, t1.c0, vt2.c0))) THEN ((vt2.c0) NOTNULL) WHEN ((t1.c40) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c40 THEN t1.c0 ELSE t1.c1 END WHEN CAST(t1.c40 AS BLOB) THEN t1.c1 END) IS TRUE)  as count FROM vt2, t1 ORDER BY t1.c1 DESC);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c40) AND (t1.c40))  WHEN (((t1.c1, t1.c40, t1.c0))>((t1.c0, t1.c0, vt2.c0))) THEN ((vt2.c0) NOTNULL) WHEN ((t1.c40) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c40 THEN t1.c0 ELSE t1.c1 END WHEN CAST(t1.c40 AS BLOB) THEN t1.c1 END) ORDER BY t1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c1) NOT BETWEEN (t1.c40) AND (t1.c40))  WHEN (((t1.c1, t1.c40, t1.c0))>((t1.c0, t1.c0, vt2.c0))) THEN ((vt2.c0) NOTNULL) WHEN ((t1.c40) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c40 THEN t1.c0 ELSE t1.c1 END WHEN CAST(t1.c40 AS BLOB) THEN t1.c1 END) IS TRUE)  as count FROM vt2, t1 ORDER BY t1.c1 DESC);
SELECT ALL COUNT(*) FROM vt2, t1 WHERE (CASE ((t1.c1) NOT BETWEEN (t1.c40) AND (t1.c40))  WHEN (((t1.c1, t1.c40, t1.c0))>((t1.c0, t1.c0, vt2.c0))) THEN ((vt2.c0) NOTNULL) WHEN ((t1.c40) BETWEEN (t1.c1) AND (t1.c0)) THEN CASE WHEN t1.c40 THEN t1.c0 ELSE t1.c1 END WHEN CAST(t1.c40 AS BLOB) THEN t1.c1 END) ORDER BY t1.c1 DESC;
SELECT COUNT(*) FROM vt2 WHERE (((x'e6f6') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'e6f6') IS TRUE)) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((x'e6f6') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((x'e6f6') IS TRUE)) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((x'e6f6') IS TRUE));
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0)), ((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0)), ((vt0.c0)<=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0)), ((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0)), ((vt0.c0)<=(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0)%(vt0.c0)), ((vt0.c0)<=(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t1 ON (- (t1.c0 COLLATE RTRIM)) INNER JOIN vt0 ON LOWER(DISTINCT (t1.c0 IN ())) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY CASE ((t1.c1) BETWEEN (t1.c40) AND (t1.c1))  WHEN NULL THEN CASE vt2.c0  WHEN 0.7242503686936952 THEN 'L[rcXg>' ELSE vt2.c0 END WHEN (t1.c0 IN (t1.c1)) THEN CAST(t1.c0 AS BLOB) WHEN vt2.c0 COLLATE NOCASE THEN ((t1.c0)AND(t1.c0)) END, CASE t1.c40 COLLATE NOCASE  WHEN (((t1.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c40))) THEN ((t1.c0)GLOB(t1.c0)) WHEN x'e78a' THEN ((t1.c0) BETWEEN ('X矀j''L') AND (t1.c40)) WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) END DESC, (NOT (((t1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t1 ON (- (t1.c0 COLLATE RTRIM)) INNER JOIN vt0 ON LOWER(DISTINCT (t1.c0 IN ())) ORDER BY CASE ((t1.c1) BETWEEN (t1.c40) AND (t1.c1))  WHEN NULL THEN CASE vt2.c0  WHEN 0.7242503686936952 THEN 'L[rcXg>' ELSE vt2.c0 END WHEN (t1.c0 IN (t1.c1)) THEN CAST(t1.c0 AS BLOB) WHEN vt2.c0 COLLATE NOCASE THEN ((t1.c0)AND(t1.c0)) END, CASE t1.c40 COLLATE NOCASE  WHEN (((t1.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c40))) THEN ((t1.c0)GLOB(t1.c0)) WHEN x'e78a' THEN ((t1.c0) BETWEEN ('X矀j''L') AND (t1.c40)) WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) END DESC, (NOT (((t1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t1 ON (- (t1.c0 COLLATE RTRIM)) INNER JOIN vt0 ON LOWER(DISTINCT (t1.c0 IN ())) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY CASE ((t1.c1) BETWEEN (t1.c40) AND (t1.c1))  WHEN NULL THEN CASE vt2.c0  WHEN 0.7242503686936952 THEN 'L[rcXg>' ELSE vt2.c0 END WHEN (t1.c0 IN (t1.c1)) THEN CAST(t1.c0 AS BLOB) WHEN vt2.c0 COLLATE NOCASE THEN ((t1.c0)AND(t1.c0)) END, CASE t1.c40 COLLATE NOCASE  WHEN (((t1.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c40))) THEN ((t1.c0)GLOB(t1.c0)) WHEN x'e78a' THEN ((t1.c0) BETWEEN ('X矀j''L') AND (t1.c40)) WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) END DESC, (NOT (((t1.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN t1 ON (- (t1.c0 COLLATE RTRIM)) INNER JOIN vt0 ON LOWER(DISTINCT (t1.c0 IN ())) ORDER BY CASE ((t1.c1) BETWEEN (t1.c40) AND (t1.c1))  WHEN NULL THEN CASE vt2.c0  WHEN 0.7242503686936952 THEN 'L[rcXg>' ELSE vt2.c0 END WHEN (t1.c0 IN (t1.c1)) THEN CAST(t1.c0 AS BLOB) WHEN vt2.c0 COLLATE NOCASE THEN ((t1.c0)AND(t1.c0)) END, CASE t1.c40 COLLATE NOCASE  WHEN (((t1.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c40))) THEN ((t1.c0)GLOB(t1.c0)) WHEN x'e78a' THEN ((t1.c0) BETWEEN ('X矀j''L') AND (t1.c40)) WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) END DESC, (NOT (((t1.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN t1 ON (- (t1.c0 COLLATE RTRIM)) INNER JOIN vt0 ON LOWER(DISTINCT (t1.c0 IN ())) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY CASE ((t1.c1) BETWEEN (t1.c40) AND (t1.c1))  WHEN NULL THEN CASE vt2.c0  WHEN 0.7242503686936952 THEN 'L[rcXg>' ELSE vt2.c0 END WHEN (t1.c0 IN (t1.c1)) THEN CAST(t1.c0 AS BLOB) WHEN vt2.c0 COLLATE NOCASE THEN ((t1.c0)AND(t1.c0)) END, CASE t1.c40 COLLATE NOCASE  WHEN (((t1.c0)) NOT BETWEEN ((vt2.c0)) AND ((t1.c40))) THEN ((t1.c0)GLOB(t1.c0)) WHEN x'e78a' THEN ((t1.c0) BETWEEN ('X矀j''L') AND (t1.c40)) WHEN ((vt0.c0)<=(vt0.c0)) THEN (NOT (t1.c0)) END DESC, (NOT (((t1.c0) IS FALSE))) ASC;
SELECT ALL * FROM vt0, vt2 WHERE (x'de85') ORDER BY CAST(x'ffff' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'de85') IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(x'ffff' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt2 WHERE (x'de85') ORDER BY CAST(x'ffff' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'de85') IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(x'ffff' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt2 WHERE (x'de85') ORDER BY CAST(x'ffff' AS INTEGER) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((vt2.c0)>(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN t1.c40 THEN ((vt0.c0)&(t1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((vt2.c0)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY CASE WHEN t1.c40 THEN ((vt0.c0)&(t1.c1)) END);
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((vt2.c0)>(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN t1.c40 THEN ((vt0.c0)&(t1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((vt2.c0)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0, vt2 ORDER BY CASE WHEN t1.c40 THEN ((vt0.c0)&(t1.c1)) END);
SELECT * FROM rt0, t1, vt0, vt2 WHERE (((vt2.c0)>(rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN t1.c40 THEN ((vt0.c0)&(t1.c1)) END;
SELECT ALL COUNT(*) FROM t1 WHERE ((HEX(DISTINCT '0.5245503958399304') IN (TYPEOF(t1.c40), ((((t1.c40)OR(t1.c1)))OR(t1.c0))))) ORDER BY CASE WHEN t1.c40 COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) ELSE TYPEOF(t1.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT '0.5245503958399304') IN (TYPEOF(t1.c40), ((((t1.c40)OR(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c40 COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) ELSE TYPEOF(t1.c0) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((HEX(DISTINCT '0.5245503958399304') IN (TYPEOF(t1.c40), ((((t1.c40)OR(t1.c1)))OR(t1.c0))))) ORDER BY CASE WHEN t1.c40 COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) ELSE TYPEOF(t1.c0) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(DISTINCT '0.5245503958399304') IN (TYPEOF(t1.c40), ((((t1.c40)OR(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN t1.c40 COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) ELSE TYPEOF(t1.c0) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((HEX(DISTINCT '0.5245503958399304') IN (TYPEOF(t1.c40), ((((t1.c40)OR(t1.c1)))OR(t1.c0))))) ORDER BY CASE WHEN t1.c40 COLLATE NOCASE THEN (((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c40))) ELSE TYPEOF(t1.c0) END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS TEXT))|(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS TEXT))|(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS TEXT))|(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt2.c0 AS TEXT))|(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END))) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS TEXT))|(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (0.6215506682749465) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((vt2.c0))=((vt2.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6215506682749465) IS TRUE)  as count FROM rt0, vt2 ORDER BY ((rt0.c0 COLLATE BINARY)>=((((vt2.c0))=((vt2.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (0.6215506682749465) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((vt2.c0))=((vt2.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.6215506682749465) IS TRUE)  as count FROM rt0, vt2 ORDER BY ((rt0.c0 COLLATE BINARY)>=((((vt2.c0))=((vt2.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt2 WHERE (0.6215506682749465) ORDER BY ((rt0.c0 COLLATE BINARY)>=((((vt2.c0))=((vt2.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt2, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)LIKE(rt0.c2)))%((~ (rt0.c0)))) ASC, ((((((rt0.c1) IS FALSE))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((rt0.c2)LIKE(rt0.c2)))%((~ (rt0.c0)))) ASC, ((((((rt0.c1) IS FALSE))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)LIKE(rt0.c2)))%((~ (rt0.c0)))) ASC, ((((((rt0.c1) IS FALSE))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt2, rt0 ORDER BY ((((rt0.c2)LIKE(rt0.c2)))%((~ (rt0.c0)))) ASC, ((((((rt0.c1) IS FALSE))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM vt2, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)LIKE(rt0.c2)))%((~ (rt0.c0)))) ASC, ((((((rt0.c1) IS FALSE))OR((rt0.c1 IN ()))))OR(rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0, vt0, t1 INDEXED BY i10 WHERE ((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((t1.c40))))OR(x'')))AND(((t1.c0) NOT NULL)))) ORDER BY ((((t1.c1) ISNULL))!=(((t1.c1)>>(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((t1.c40))))OR(x'')))AND(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1 INDEXED BY i10 ORDER BY ((((t1.c1) ISNULL))<>(((t1.c1)>>(t1.c1)))) DESC);
SELECT * FROM rt0, vt0, t1 INDEXED BY i10 WHERE ((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((t1.c40))))OR(x'')))AND(((t1.c0) NOT NULL)))) ORDER BY ((((t1.c1) ISNULL))!=(((t1.c1)>>(t1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((t1.c40))))OR(x'')))AND(((t1.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, t1 INDEXED BY i10 ORDER BY ((((t1.c1) ISNULL))<>(((t1.c1)>>(t1.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))<=((((0.08585050950368911)IS(vt2.c0)), vt2.c0, '-1520920691')))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE))) ASC, CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))<=((((0.08585050950368911)IS(vt2.c0)), vt2.c0, '-1520920691')))) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0)<>(vt2.c0))) BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE))) ASC, CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))<=((((0.08585050950368911)IS(vt2.c0)), vt2.c0, '-1520920691')))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE))) ASC, CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))<=((((0.08585050950368911)IS(vt2.c0)), vt2.c0, '-1520920691')))) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0)<>(vt2.c0))) BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE))) ASC, CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2 WHERE ((((vt2.c0, (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))), ((vt2.c0) NOTNULL)))<=((((0.08585050950368911)IS(vt2.c0)), vt2.c0, '-1520920691')))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (((vt2.c0)*(vt2.c0))) AND (((vt2.c0) IS FALSE))) ASC, CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((NULL)OR(t1.c40)))OR(rt0.c0)) IN (((vt2.c0) NOT BETWEEN (rt0.c1) AND (t1.c40)), t1.c0)) RIGHT OUTER JOIN vt2 ON (((t1.c0, t1.c1, rt0.c2)) BETWEEN ((((((t1.c40)OR('798161148')))AND(vt2.c0)), ((((rt0.c1)AND(rt0.c2)))OR(NULL)), ((t1.c1) IS FALSE))) AND ((CAST(rt0.c0 AS NUMERIC), ((vt2.c0)+(t1.c40)), t1.c0))) WHERE (((((t1.c0)>(t1.c40))) IS TRUE)) ORDER BY (((t1.c40 IN ())) NOT BETWEEN (((t1.c40)/(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((0.03587065452028282 IN (t1.c1))) NOT BETWEEN (((NULL) ISNULL)) AND (((rt0.c2)IS NOT(t1.c0)))), (~ (((rt0.c0)*(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c40))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((NULL)OR(t1.c40)))OR(rt0.c0)) IN (((vt2.c0) NOT BETWEEN (rt0.c1) AND (t1.c40)), t1.c0)) RIGHT OUTER JOIN vt2 ON (((t1.c0, t1.c1, rt0.c2)) BETWEEN ((((((t1.c40)OR('798161148')))AND(vt2.c0)), ((((rt0.c1)AND(rt0.c2)))OR(NULL)), ((t1.c1) IS FALSE))) AND ((CAST(rt0.c0 AS NUMERIC), ((vt2.c0)+(t1.c40)), t1.c0))) ORDER BY (((t1.c40 IN ())) NOT BETWEEN (((t1.c40)/(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((0.03587065452028282 IN (t1.c1))) NOT BETWEEN (((NULL) ISNULL)) AND (((rt0.c2)IS NOT(t1.c0)))), (~ (((rt0.c0)*(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON (((((NULL)OR(t1.c40)))OR(rt0.c0)) IN (((vt2.c0) NOT BETWEEN (rt0.c1) AND (t1.c40)), t1.c0)) RIGHT OUTER JOIN vt2 ON (((t1.c0, t1.c1, rt0.c2)) BETWEEN ((((((t1.c40)OR('798161148')))AND(vt2.c0)), ((((rt0.c1)AND(rt0.c2)))OR(NULL)), ((t1.c1) IS FALSE))) AND ((CAST(rt0.c0 AS NUMERIC), ((vt2.c0)+(t1.c40)), t1.c0))) WHERE (((((t1.c0)>(t1.c40))) IS TRUE)) ORDER BY (((t1.c40 IN ())) NOT BETWEEN (((t1.c40)/(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((0.03587065452028282 IN (t1.c1))) NOT BETWEEN (((NULL) ISNULL)) AND (((rt0.c2)IS NOT(t1.c0)))), (~ (((rt0.c0)*(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c40))) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((NULL)OR(t1.c40)))OR(rt0.c0)) IN (((vt2.c0) NOT BETWEEN (rt0.c1) AND (t1.c40)), t1.c0)) RIGHT OUTER JOIN vt2 ON (((t1.c0, t1.c1, rt0.c2)) BETWEEN ((((((t1.c40)OR('798161148')))AND(vt2.c0)), ((((rt0.c1)AND(rt0.c2)))OR(NULL)), ((t1.c1) IS FALSE))) AND ((CAST(rt0.c0 AS NUMERIC), ((vt2.c0)+(t1.c40)), t1.c0))) ORDER BY (((t1.c40 IN ())) NOT BETWEEN (((t1.c40)/(rt0.c2))) AND (CAST(rt0.c1 AS INTEGER))) DESC  NULLS LAST, (((0.03587065452028282 IN (t1.c1))) NOT BETWEEN (((NULL) ISNULL)) AND (((rt0.c2)IS NOT(t1.c0)))), (~ (((rt0.c0)*(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((UPPER(DISTINCT vt0.c0)) ISNULL)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((UPPER(DISTINCT vt0.c0)) ISNULL)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((UPPER(DISTINCT vt0.c0)) ISNULL)) ORDER BY CAST(((vt0.c0)*(vt0.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE ((0.03305142454230525 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.03305142454230525 IN ())) IS TRUE)  as count FROM vt2, rt0, t1);
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE ((0.03305142454230525 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.03305142454230525 IN ())) IS TRUE)  as count FROM vt2, rt0, t1);
SELECT ALL COUNT(*) FROM vt2, rt0, t1 WHERE ((0.03305142454230525 IN ()));
SELECT ALL * FROM t1, vt2, rt0 WHERE (CAST(t1.c1 AS REAL)) ORDER BY (CASE vt2.c0  WHEN t1.c40 THEN x'072c' END IN ()), ((CASE t1.c1  WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' ELSE rt0.c1 END)LIKE(((((t1.c0)AND(t1.c40)))AND(t1.c40))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 AS REAL)) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY (CASE vt2.c0  WHEN t1.c40 THEN x'072c' END IN ()), ((CASE t1.c1  WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' ELSE rt0.c1 END)LIKE(((((t1.c0)AND(t1.c40)))AND(t1.c40))))  NULLS LAST);
SELECT ALL * FROM t1, vt2, rt0 WHERE (CAST(t1.c1 AS REAL)) ORDER BY (CASE vt2.c0  WHEN t1.c40 THEN x'072c' END IN ()), ((CASE t1.c1  WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' ELSE rt0.c1 END)LIKE(((((t1.c0)AND(t1.c40)))AND(t1.c40))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c1 AS REAL)) IS TRUE)  as count FROM t1, vt2, rt0 ORDER BY (CASE vt2.c0  WHEN t1.c40 THEN x'072c' END IN ()), ((CASE t1.c1  WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' ELSE rt0.c1 END)LIKE(((((t1.c0)AND(t1.c40)))AND(t1.c40))))  NULLS LAST);
SELECT ALL * FROM t1, vt2, rt0 WHERE (CAST(t1.c1 AS REAL)) ORDER BY (CASE vt2.c0  WHEN t1.c40 THEN x'072c' END IN ()), ((CASE t1.c1  WHEN vt2.c0 THEN vt2.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN '' ELSE rt0.c1 END)LIKE(((((t1.c0)AND(t1.c40)))AND(t1.c40))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt2 ON UPPER(DISTINCT vt2.c0) COLLATE RTRIM INNER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1)))IS(PRINTF(rt0.c0))) WHERE (((((rt0.c1)IS NOT(vt0.c0)))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((((rt0.c2))>=((rt0.c1))) AS BLOB) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt2.c0 END)<<(((rt0.c0)*(x'')))), (- ((('0.21597733511043404')+(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(vt0.c0)))>=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN vt2 ON UPPER(DISTINCT vt2.c0) COLLATE RTRIM INNER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1)))IS(PRINTF(rt0.c0))) ORDER BY CAST((((rt0.c2))>=((rt0.c1))) AS BLOB) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt2.c0 END)<<(((rt0.c0)*(x'')))), (- ((('0.21597733511043404')+(vt2.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt2 ON UPPER(DISTINCT vt2.c0) COLLATE RTRIM INNER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1)))IS(PRINTF(rt0.c0))) WHERE (((((rt0.c1)IS NOT(vt0.c0)))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((((rt0.c2))>=((rt0.c1))) AS BLOB) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt2.c0 END)<<(((rt0.c0)*(x'')))), (- ((('0.21597733511043404')+(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(vt0.c0)))>=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 CROSS JOIN vt2 ON UPPER(DISTINCT vt2.c0) COLLATE RTRIM INNER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1)))IS(PRINTF(rt0.c0))) ORDER BY CAST((((rt0.c2))>=((rt0.c1))) AS BLOB) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt2.c0 END)<<(((rt0.c0)*(x'')))), (- ((('0.21597733511043404')+(vt2.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt2 ON UPPER(DISTINCT vt2.c0) COLLATE RTRIM INNER JOIN vt0 ON ((((rt0.c2)<<(rt0.c1)))IS(PRINTF(rt0.c0))) WHERE (((((rt0.c1)IS NOT(vt0.c0)))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST((((rt0.c2))>=((rt0.c1))) AS BLOB) ASC  NULLS LAST, ((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt2.c0 END)<<(((rt0.c0)*(x'')))), (- ((('0.21597733511043404')+(vt2.c0))));
SELECT * FROM vt2, rt0, vt0 WHERE (0X675d269b);
SELECT SUM(count) FROM (SELECT ((0x675d269b) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT * FROM vt2, rt0, vt0 WHERE (0X675d269b);
SELECT SUM(count) FROM (SELECT ((0x675d269b) IS TRUE)  as count FROM vt2, rt0, vt0);
SELECT * FROM vt2, rt0, vt0 WHERE (0X675d269b);
SELECT ALL COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (((CAST(t1.c0 AS REAL))AND(json_type(vt2.c0)))) ORDER BY ((((('-15685296')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>((vt2.c0 IN ())))  NULLS FIRST, json_array_length(((t1.c1) ISNULL), (rt0.c1 IN (t1.c0))), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN (CAST(t1.c0 AS TEXT), ((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))AND(json_type(vt2.c0)))) IS TRUE)  as count FROM vt2, t1, rt0, vt0 ORDER BY ((((('-15685296')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>((vt2.c0 IN ())))  NULLS FIRST, json_array_length(((t1.c1) ISNULL), (rt0.c1 IN (t1.c0))), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN (CAST(t1.c0 AS TEXT), ((rt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (((CAST(t1.c0 AS REAL))AND(json_type(vt2.c0)))) ORDER BY ((((('-15685296')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>((vt2.c0 IN ())))  NULLS FIRST, json_array_length(((t1.c1) ISNULL), (rt0.c1 IN (t1.c0))), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN (CAST(t1.c0 AS TEXT), ((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL))AND(json_type(vt2.c0)))) IS TRUE)  as count FROM vt2, t1, rt0, vt0 ORDER BY ((((('-15685296')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>((vt2.c0 IN ())))  NULLS FIRST, json_array_length(((t1.c1) ISNULL), (rt0.c1 IN (t1.c0))), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN (CAST(t1.c0 AS TEXT), ((rt0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, t1, rt0, vt0 WHERE (((CAST(t1.c0 AS REAL))AND(json_type(vt2.c0)))) ORDER BY ((((('-15685296')) BETWEEN ((rt0.c1)) AND ((rt0.c2))))>((vt2.c0 IN ())))  NULLS FIRST, json_array_length(((t1.c1) ISNULL), (rt0.c1 IN (t1.c0))), (((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)) IN (CAST(t1.c0 AS TEXT), ((rt0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c40))>((t1.c1))))AND(LIKELY(t1.c0))))OR(CASE t1.c0  WHEN NULL THEN vt0.c0 END)))OR(((vt2.c0)<>(x'')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN t1.c40 ELSE t1.c0 END)) RIGHT OUTER JOIN vt2 ON (+ (((t1.c1) IS FALSE))) WHERE (CASE ((((((((t1.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))  WHEN (((vt0.c0, vt2.c0, vt2.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8775749573391888, NULL, t1.c0))) THEN ((((t1.c40)OR(vt2.c0)))OR(NULL)) ELSE ((((t1.c40)AND(t1.c0)))OR(vt2.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t1.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))  WHEN (((vt0.c0, vt2.c0, vt2.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8775749573391888, NULL, t1.c0))) THEN ((((t1.c40)OR(vt2.c0)))OR(NULL)) ELSE ((((t1.c40)AND(t1.c0)))OR(vt2.c0)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c40))>((t1.c1))))AND(LIKELY(t1.c0))))OR(CASE t1.c0  WHEN NULL THEN vt0.c0 END)))OR(((vt2.c0)<>(x'')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN t1.c40 ELSE t1.c0 END)) RIGHT OUTER JOIN vt2 ON (+ (((t1.c1) IS FALSE))) ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c40))>((t1.c1))))AND(LIKELY(t1.c0))))OR(CASE t1.c0  WHEN NULL THEN vt0.c0 END)))OR(((vt2.c0)<>(x'')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN t1.c40 ELSE t1.c0 END)) RIGHT OUTER JOIN vt2 ON (+ (((t1.c1) IS FALSE))) WHERE (CASE ((((((((t1.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))  WHEN (((vt0.c0, vt2.c0, vt2.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8775749573391888, NULL, t1.c0))) THEN ((((t1.c40)OR(vt2.c0)))OR(NULL)) ELSE ((((t1.c40)AND(t1.c0)))OR(vt2.c0)) END) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t1.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))  WHEN (((vt0.c0, vt2.c0, vt2.c0)) BETWEEN ((t1.c0, t1.c1, t1.c0)) AND ((0.8775749573391888, NULL, t1.c0))) THEN ((((t1.c40)OR(vt2.c0)))OR(NULL)) ELSE ((((t1.c40)AND(t1.c0)))OR(vt2.c0)) END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c40))>((t1.c1))))AND(LIKELY(t1.c0))))OR(CASE t1.c0  WHEN NULL THEN vt0.c0 END)))OR(((vt2.c0)<>(x'')))))AND(CASE vt0.c0  WHEN vt0.c0 THEN t1.c40 ELSE t1.c0 END)) RIGHT OUTER JOIN vt2 ON (+ (((t1.c1) IS FALSE))) ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CAST(0.7082367032516239 AS INTEGER) WHERE (CAST(((t1.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST(0.7082367032516239 AS INTEGER));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CAST(0.7082367032516239 AS INTEGER) WHERE (CAST(((t1.c0) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST(0.7082367032516239 AS INTEGER));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON CAST(0.7082367032516239 AS INTEGER) WHERE (CAST(((t1.c0) IS TRUE) AS TEXT));
