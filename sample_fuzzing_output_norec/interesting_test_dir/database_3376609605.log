-- Time: 2024/06/09 14:51:48
-- Database: database5
-- Database version: 3.40.0
-- seed value: 3376609605
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1, c2 UNINDEXED, detail=column, tokenize = "unicode61 tokenchars '' separators ''"); -- 1ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (x''), (0.6213736100753189), (''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
PRAGMA soft_heap_limit = 5877305169132082834; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES (0.7061209368871862, 0.8670320530303799); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
UPDATE OR FAIL vt0 SET c0=0.37774517518338047 WHERE CASE rtreenode(vt0.c2, vt0.c1)  WHEN ((vt0.c1) IS FALSE) THEN COALESCE(DISTINCT vt0.c0, vt0.c1) WHEN (vt0.c2 IN ()) THEN ((vt0.c2)>=(vt0.c1)) WHEN json_extract(vt0.c0, vt0.c1, vt0.c2, vt0.c1) THEN ((vt0.c2) IS TRUE) WHEN ((x'81b2891152a4') NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0) ISNULL) WHEN ((NULL)<>(vt0.c2)) THEN 605687612 WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN NULL ELSE vt0.c2 END WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c0  WHEN vt0.c2 THEN 605687612 END END; -- 1ms;
PRAGMA temp.threads = -5689614455330843335; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=''; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(5.877305169132083E18); -- 1ms;
UPDATE vt0 SET (c1)=(0.018682163933410045); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (((vt0.c0 COLLATE BINARY))<(((((vt0.c2, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c2, vt0.c1, 605687612)))))) FROM vt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c2) VALUES (x'fee0', '605687612'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET (c2)=(x'47b0') WHERE ((((((((((vt0.c0) ISNULL))AND((NOT (vt0.c1)))))AND(((vt0.c2)||(vt0.c2)))))OR((NOT ('')))))AND((NOT (vt0.c2)))); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.34109895215770447, '-1408551956'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 176763874); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((IFNULL(vt0.c0, vt0.c0))GLOB(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=0.43227133174893095, c2='5877305169132082834' WHERE LIKELIHOOD(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)), 0.42894114012730133); -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0)=(0xffffffffdc68f8e5); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('-1408551956'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE (NULL IN (DATE(vt0.c0, vt0.c2, vt0.c2, vt0.c1, vt0.c2))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX BINARY; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (1085024713), (''), (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 5); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='Jpc' WHERE ((((CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)OR(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)); -- 1ms;
INSERT OR REPLACE INTO vt0(c2) VALUES (-5.97100315E8); -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1606746280), (x''), (0.08578993652023104); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR ABORT INTO vt0(c2, c1, c0) VALUES ('2', 0.018682163933410045, 1085024713); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1601191386); -- 1ms;
UPDATE OR FAIL vt1 SET c0='W\r-.', c0=NULL, c0=0.12802110131492128 WHERE vt1.c0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'ca2afdf4'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES ('-597100315', ''), ('0.7061209368871862', NULL), (x'', 0.37774517518338047); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL), (0xffffffffc566f98b), ('TRUE'), (0.08726388026484444), ('<zwqWulxe'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.408551956E9)%('Z%è¸ˆ')))!=((-983107189 IN ()))); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x'86f5'), (x'a5ca'), ('-503245798'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c2) VALUES (x'', x'7abe'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE ((((TRIM(DISTINCT vt0.c2))AND(CAST('1085024713' AS TEXT))))OR(vt0.c2)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'v0', ' sz=-597100315'); -- 0ms;
UPDATE OR ABORT vt0 SET c1=0Xffffffffc566f98b; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF DELETE ON v0 WHEN ((((v0.c0) NOTNULL))LIKE((v0.c0 IN ()))) BEGIN INSERT OR IGNORE INTO vt0(c0, c2, c1) VALUES (0.12802110131492128, 0.23240366331178985, 1815006775);END; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.5174584073210898, (((((~ (NULL)))OR(((((NULL)AND('')))AND(x'2ce5')))))AND(0.37774517518338047 COLLATE RTRIM))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('-1408551956'); -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES ('_'), (NULL), (NULL); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-597100315,12');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE vt0 SET (c0)=(1.35794228E9) WHERE ((((CAST('RBKF' AS INTEGER))AND(LENGTH(vt0.c2))))OR((('2') NOTNULL))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='1357942280'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c1, c0)=('zCiV', NULL, x'') WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (NULL)))AND(((((vt0.c2)OR(vt0.c2)))AND(vt0.c2)))))AND((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c0, vt0.c2))))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (0.12585344821469147, x''), (0.9937820077432078, '-2059822459'), (0Xffffffffa70c9694, NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', 0.4552259174169977), (x'', ''), (0.835304599491694, '\nnf(b'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL, 0.6213736100753189, NULL); -- 0ms;
UPDATE vt1 SET c0=NULL WHERE ((CAST(vt1.c0 AS NUMERIC))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1)=('1085024713') WHERE ((x'')>(LIKELIHOOD(DISTINCT vt0.c0, 0.3801315519226912))); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x'2f9a'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.492347244E9); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((0x616f168) BETWEEN (vt1.c0) AND (v0.c0)) IN ()) WHERE ((((vt0.c0 IN ()))IS NOT(((vt0.c1)%(vt0.c0))))) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((0x616f168) BETWEEN (vt1.c0) AND (v0.c0)) IN ()) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((0x616f168) BETWEEN (vt1.c0) AND (v0.c0)) IN ()) WHERE ((((vt0.c0 IN ()))IS NOT(((vt0.c1)%(vt0.c0))))) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS NOT(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((0x616f168) BETWEEN (vt1.c0) AND (v0.c0)) IN ()) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((0x616f168) BETWEEN (vt1.c0) AND (v0.c0)) IN ()) WHERE ((((vt0.c0 IN ()))IS NOT(((vt0.c1)%(vt0.c0))))) ORDER BY CAST(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((('\nMx]') NOT NULL)) NOTNULL)) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND('')) DESC;
SELECT SUM(count) FROM (SELECT (((((('\nMx]') NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND('')) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((('\nMx]') NOT NULL)) NOTNULL)) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND('')) DESC;
SELECT SUM(count) FROM (SELECT (((((('\nMx]') NOT NULL)) NOTNULL)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND('')) DESC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((('\nMx]') NOT NULL)) NOTNULL)) ORDER BY ((((((((CAST(vt0.c0 AS BLOB))OR(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 ELSE vt1.c0 END)))OR((vt1.c0 IN ()))))AND('')) DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0) ISNULL), vt1.c0)) AND ((vt1.c0 COLLATE BINARY, CAST('!-g' AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0) ISNULL), vt1.c0)) AND ((vt1.c0 COLLATE BINARY, CAST('!-g' AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS REAL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0) ISNULL), vt1.c0)) AND ((vt1.c0 COLLATE BINARY, CAST('!-g' AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0) ISNULL), vt1.c0)) AND ((vt1.c0 COLLATE BINARY, CAST('!-g' AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS REAL) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((vt1.c0) ISNULL), vt1.c0)) AND ((vt1.c0 COLLATE BINARY, CAST('!-g' AS NUMERIC), ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))) ORDER BY CAST(((vt1.c0) IS FALSE) AS REAL) ASC;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (0.18021681792063216);
SELECT SUM(count) FROM (SELECT ((0.18021681792063216) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.18021681792063216);
SELECT SUM(count) FROM (SELECT ((0.18021681792063216) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.18021681792063216);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM vt1 NOT INDEXED, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (v0.c0))) ORDER BY v0.c0;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((vt0.c1 IN ('-6827835'))))<((CASE WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ('-6827835'))))<((CASE WHEN vt0.c1 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 ORDER BY TOTAL_CHANGES() DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((vt0.c1 IN ('-6827835'))))<((CASE WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ('-6827835'))))<((CASE WHEN vt0.c1 THEN vt0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 ORDER BY TOTAL_CHANGES() DESC);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((vt0.c1 IN ('-6827835'))))<((CASE WHEN vt0.c1 THEN vt0.c2 END)))) ORDER BY TOTAL_CHANGES() DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt0.c1)OR(vt1.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt0.c1)OR(vt1.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt0.c1)OR(vt1.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt0.c1)OR(vt1.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt1.c0 AS BLOB) THEN ((((vt0.c1)OR(vt1.c0)))OR(v0.c0)) WHEN (+ (v0.c0)) THEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0, 0.06191923401221244, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c2, vt0.c0))))>=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, 0.06191923401221244, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c2, vt0.c0))))>=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0, 0.06191923401221244, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c2, vt0.c0))))>=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, 0.06191923401221244, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c2, vt0.c0))))>=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0, 0.06191923401221244, vt1.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c2, vt0.c0))))>=(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((v0.c0 IN (v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, '-813761172', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/((((vt1.c0, '-813761172', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, '-813761172', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)/((((vt1.c0, '-813761172', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)/((((vt1.c0, '-813761172', vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt0.c1 IN (vt1.c0)))/((('-736159829')LIKE(v0.c0))))) ORDER BY LOWER(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt1.c0)))/((('-736159829')LIKE(v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY LOWER(vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt0.c1 IN (vt1.c0)))/((('-736159829')LIKE(v0.c0))))) ORDER BY LOWER(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt1.c0)))/((('-736159829')LIKE(v0.c0))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY LOWER(vt0.c0) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((((vt0.c1 IN (vt1.c0)))/((('-736159829')LIKE(v0.c0))))) ORDER BY LOWER(vt0.c0) DESC;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN v0.c0 END);
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((v0.c0) NOT NULL)), ((((vt1.c0) IS TRUE))-('-6827835')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY UNLIKELY(DISTINCT ((v0.c0) NOT NULL)), ((((vt1.c0) IS TRUE))-('-6827835')) DESC);
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((v0.c0) NOT NULL)), ((((vt1.c0) IS TRUE))-('-6827835')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY UNLIKELY(DISTINCT ((v0.c0) NOT NULL)), ((((vt1.c0) IS TRUE))-('-6827835')) DESC);
SELECT ALL * FROM vt1 NATURAL JOIN v0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY UNLIKELY(DISTINCT ((v0.c0) NOT NULL)), ((((vt1.c0) IS TRUE))-('-6827835')) DESC;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((+ (vt0.c0)))<>(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<>(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((+ (vt0.c0)))<>(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<>(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((+ (vt0.c0)))<>(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (vt0.c0)) WHERE (CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt1.c0)) THEN (~ (0Xffffffffb58bfe4b)) WHEN (- (vt0.c2)) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt1.c0)/(vt0.c0)) THEN ((((vt0.c2)OR(0Xffffffff95086c1f)))OR(vt0.c0)) END) ORDER BY LIKE((~ (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))) DESC, (('0.7061209368871862')<=((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt1.c0)) THEN (~ (0Xffffffffb58bfe4b)) WHEN (- (vt0.c2)) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt1.c0)/(vt0.c0)) THEN ((((vt0.c2)OR(0Xffffffff95086c1f)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (vt0.c0)) ORDER BY LIKE((~ (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))) DESC, (('0.7061209368871862')<=((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (vt0.c0)) WHERE (CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt1.c0)) THEN (~ (0Xffffffffb58bfe4b)) WHEN (- (vt0.c2)) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt1.c0)/(vt0.c0)) THEN ((((vt0.c2)OR(0Xffffffff95086c1f)))OR(vt0.c0)) END) ORDER BY LIKE((~ (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))) DESC, (('0.7061209368871862')<=((NOT (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt1.c0)) THEN (~ (0Xffffffffb58bfe4b)) WHEN (- (vt0.c2)) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt1.c0)/(vt0.c0)) THEN ((((vt0.c2)OR(0Xffffffff95086c1f)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- (vt0.c0)) ORDER BY LIKE((~ (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))) DESC, (('0.7061209368871862')<=((NOT (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (- (vt0.c0)) WHERE (CASE WHEN ((NULL) BETWEEN (vt0.c1) AND (vt1.c0)) THEN (~ (0Xffffffffb58bfe4b)) WHEN (- (vt0.c2)) THEN ((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt1.c0)/(vt0.c0)) THEN ((((vt0.c2)OR(0Xffffffff95086c1f)))OR(vt0.c0)) END) ORDER BY LIKE((~ (vt1.c0)), ((((vt1.c0)OR(vt0.c1)))OR(vt0.c0))) DESC, (('0.7061209368871862')<=((NOT (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) IS TRUE));
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (x'') ORDER BY (NOT (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (x'') ORDER BY (NOT (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (x'') ORDER BY (NOT (vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))OR(ROUND(v0.c0, v0.c0)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))OR(ROUND(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))OR(ROUND(v0.c0, v0.c0)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))OR(ROUND(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))OR(ROUND(v0.c0, v0.c0)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((~ ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((~ ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS BLOB) WHERE ((~ ((~ (vt0.c1)))));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0)AND(v0.c0)))))AND('bH')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)AND(v0.c0)))))AND('bH'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0)AND(v0.c0)))))AND('bH')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)AND(v0.c0)))))AND('bH'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((v0.c0)AND(v0.c0)))))AND('bH')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)*(vt0.c2)))%(COALESCE(DISTINCT v0.c0, vt0.c1, vt0.c0, 0.19958420102267183))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)*(vt0.c2)))%(COALESCE(DISTINCT v0.c0, vt0.c1, vt0.c0, 0.19958420102267183)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)*(vt0.c2)))%(COALESCE(DISTINCT v0.c0, vt0.c1, vt0.c0, 0.19958420102267183))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)*(vt0.c2)))%(COALESCE(DISTINCT v0.c0, vt0.c1, vt0.c0, 0.19958420102267183)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c2)*(vt0.c2)))%(COALESCE(DISTINCT v0.c0, vt0.c1, vt0.c0, 0.19958420102267183))));
SELECT COUNT(*) FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))>((x'de3f'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))>((x'de3f')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))>((x'de3f'))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))>((x'de3f')))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))>((x'de3f'))));
SELECT COUNT(*) FROM vt1 WHERE (json_array_length(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (json_array_length(vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)&(v0.c0)) COLLATE BINARY) ORDER BY ((v0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((NULL)&(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)&(v0.c0)) COLLATE BINARY) ORDER BY ((v0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((NULL)&(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL)&(v0.c0)) COLLATE BINARY) ORDER BY ((v0.c0) NOTNULL);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE (vt0.c2 IN ())  WHEN ((0.12802110131492128)GLOB(vt0.c0)) THEN ((v0.c0)||(vt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN ())  WHEN ((0.12802110131492128)GLOB(vt0.c0)) THEN ((v0.c0)||(vt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE (vt0.c2 IN ())  WHEN ((0.12802110131492128)GLOB(vt0.c0)) THEN ((v0.c0)||(vt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c2 IN ())  WHEN ((0.12802110131492128)GLOB(vt0.c0)) THEN ((v0.c0)||(vt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (CASE (vt0.c2 IN ())  WHEN ((0.12802110131492128)GLOB(vt0.c0)) THEN ((v0.c0)||(vt0.c2)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))) END);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE RTRIM))>((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0 COLLATE RTRIM))>((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2))))) ASC;
SELECT * FROM vt1, v0, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS INTEGER)) ORDER BY CAST((((v0.c0)) BETWEEN ((x'5ed8')) AND ((v0.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((((v0.c0)) BETWEEN ((x'5ed8')) AND ((v0.c0))) AS NUMERIC) DESC);
SELECT * FROM vt1, v0, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS INTEGER)) ORDER BY CAST((((v0.c0)) BETWEEN ((x'5ed8')) AND ((v0.c0))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CAST((((v0.c0)) BETWEEN ((x'5ed8')) AND ((v0.c0))) AS NUMERIC) DESC);
SELECT * FROM vt1, v0, vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)) AS INTEGER)) ORDER BY CAST((((v0.c0)) BETWEEN ((x'5ed8')) AND ((v0.c0))) AS NUMERIC) DESC;
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND ((vt1.c0 IN ()))) WHERE (((((vt0.c0)LIKE(0x3443ad26)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))>=((((((((((vt0.c2)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(0x3443ad26)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND ((vt1.c0 IN ()))) ORDER BY (((((vt0.c0) IS TRUE)))>=((((((((((vt0.c2)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2))))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND ((vt1.c0 IN ()))) WHERE (((((vt0.c0)LIKE(0x3443ad26)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))>=((((((((((vt0.c2)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(0x3443ad26)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND ((vt1.c0 IN ()))) ORDER BY (((((vt0.c0) IS TRUE)))>=((((((((((vt0.c2)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2))))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('') AND ((vt1.c0 IN ()))) WHERE (((((vt0.c0)LIKE(0x3443ad26)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY (((((vt0.c0) IS TRUE)))>=((((((((((vt0.c2)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON TYPEOF(CAST(v0.c0 AS INTEGER)) WHERE (SUBSTR(CAST(v0.c0 AS REAL), ((vt0.c1)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(v0.c0 AS REAL), ((vt0.c1)!=(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON TYPEOF(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON TYPEOF(CAST(v0.c0 AS INTEGER)) WHERE (SUBSTR(CAST(v0.c0 AS REAL), ((vt0.c1)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SUBSTR(CAST(v0.c0 AS REAL), ((vt0.c1)!=(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN v0 ON TYPEOF(CAST(v0.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN v0 ON TYPEOF(CAST(v0.c0 AS INTEGER)) WHERE (SUBSTR(CAST(v0.c0 AS REAL), ((vt0.c1)!=(vt0.c0))));
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))==(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))==(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))=(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) IS TRUE))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) IS TRUE))) DESC);
SELECT * FROM v0 WHERE (((v0.c0) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((v0.c0)/(v0.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0) IS TRUE))) DESC;
SELECT * FROM vt0, vt1 WHERE ((x'' IN ())) ORDER BY ((vt1.c0 COLLATE BINARY)>>((((vt1.c0))<>((0.4552259174169977))))), 0.6510377605620637  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)>>((((vt1.c0))!=((0.4552259174169977))))), 0.6510377605620637  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((x'' IN ())) ORDER BY ((vt1.c0 COLLATE BINARY)>>((((vt1.c0))<>((0.4552259174169977))))), 0.6510377605620637  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY)>>((((vt1.c0))!=((0.4552259174169977))))), 0.6510377605620637  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE ((x'' IN ())) ORDER BY ((vt1.c0 COLLATE BINARY)>>((((vt1.c0))<>((0.4552259174169977))))), 0.6510377605620637  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0)|(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0)|(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0)|(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0)|(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((v0.c0)/(v0.c0))))) ORDER BY (((v0.c0 IN (vt1.c0, vt1.c0)))-(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0 IN (vt1.c0, vt1.c0)))-(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((v0.c0)/(v0.c0))))) ORDER BY (((v0.c0 IN (vt1.c0, vt1.c0)))-(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)/(v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((v0.c0 IN (vt1.c0, vt1.c0)))-(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (((v0.c0)/(v0.c0))))) ORDER BY (((v0.c0 IN (vt1.c0, vt1.c0)))-(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ''  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((((((((((vt0.c0)OR(0.19958420102267183)))OR(v0.c0)))AND(vt0.c1)))AND(v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(0.19958420102267183)))OR(v0.c0)))AND(vt0.c1)))AND(v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((((((vt0.c0)OR(0.19958420102267183)))OR(v0.c0)))AND(vt0.c1)))AND(v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(0.19958420102267183)))OR(v0.c0)))AND(vt0.c1)))AND(v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((((((vt0.c0)OR(0.19958420102267183)))OR(v0.c0)))AND(vt0.c1)))AND(v0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))<((((x'd4fd')GLOB(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))<((((x'd4fd')GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))<((((x'd4fd')GLOB(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))<((((x'd4fd')GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))<((((x'd4fd')GLOB(vt0.c1))))));
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((v0.c0))>((v0.c0))))<((-5.03245798E8 IN ()))) ASC, (((vt1.c0 IN ()))<>(((v0.c0)+(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0))>((v0.c0))))<((-5.03245798E8 IN ()))) ASC, (((vt1.c0 IN ()))!=(((v0.c0)+(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((v0.c0))>((v0.c0))))<((-5.03245798E8 IN ()))) ASC, (((vt1.c0 IN ()))<>(((v0.c0)+(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0))>((v0.c0))))<((-5.03245798E8 IN ()))) ASC, (((vt1.c0 IN ()))!=(((v0.c0)+(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((v0.c0) IS TRUE) IN ())) ORDER BY (((((v0.c0))>((v0.c0))))<((-5.03245798E8 IN ()))) ASC, (((vt1.c0 IN ()))<>(((v0.c0)+(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0 IN ()))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))+(v0.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0 IN ()))+(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))+(v0.c0))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((v0.c0 IN ()))+(v0.c0)));
SELECT ALL * FROM vt1 WHERE (((((0Xffffffffb14b7992)OR(vt1.c0)))OR(((vt1.c0)+(0X2b89d78c)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffb14b7992)OR(vt1.c0)))OR(((vt1.c0)+(0X2b89d78c))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0Xffffffffb14b7992)OR(vt1.c0)))OR(((vt1.c0)+(0X2b89d78c)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0Xffffffffb14b7992)OR(vt1.c0)))OR(((vt1.c0)+(0X2b89d78c))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((0Xffffffffb14b7992)OR(vt1.c0)))OR(((vt1.c0)+(0X2b89d78c)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c2 AS NUMERIC)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((((vt1.c0, v0.c0, vt0.c0))<=((vt0.c1, vt0.c2, vt0.c1)))) AND ((((vt0.c1))<=((vt1.c0)))))) ORDER BY (((v0.c0 IN (vt0.c1)))>=(((v0.c0)>(vt0.c1)))) DESC, ((((((0X7c83ea55)%('1815006775')))AND(((v0.c0)IS(vt0.c2)))))OR('-533776016'))  NULLS FIRST, ((((vt0.c2) ISNULL)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) BETWEEN ((((vt1.c0, v0.c0, vt0.c0))<=((vt0.c1, vt0.c2, vt0.c1)))) AND ((((vt0.c1))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0 IN (vt0.c1)))>=(((v0.c0)>(vt0.c1)))) DESC, ((((((0X7c83ea55)%('1815006775')))AND(((v0.c0)IS(vt0.c2)))))OR('-533776016'))  NULLS FIRST, ((((vt0.c2) ISNULL)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((((vt1.c0, v0.c0, vt0.c0))<=((vt0.c1, vt0.c2, vt0.c1)))) AND ((((vt0.c1))<=((vt1.c0)))))) ORDER BY (((v0.c0 IN (vt0.c1)))>=(((v0.c0)>(vt0.c1)))) DESC, ((((((0X7c83ea55)%('1815006775')))AND(((v0.c0)IS(vt0.c2)))))OR('-533776016'))  NULLS FIRST, ((((vt0.c2) ISNULL)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) BETWEEN ((((vt1.c0, v0.c0, vt0.c0))<=((vt0.c1, vt0.c2, vt0.c1)))) AND ((((vt0.c1))<=((vt1.c0)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0 IN (vt0.c1)))>=(((v0.c0)>(vt0.c1)))) DESC, ((((((0X7c83ea55)%('1815006775')))AND(((v0.c0)IS(vt0.c2)))))OR('-533776016'))  NULLS FIRST, ((((vt0.c2) ISNULL)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE ((((+ (vt0.c1))) BETWEEN ((((vt1.c0, v0.c0, vt0.c0))<=((vt0.c1, vt0.c2, vt0.c1)))) AND ((((vt0.c1))<=((vt1.c0)))))) ORDER BY (((v0.c0 IN (vt0.c1)))>=(((v0.c0)>(vt0.c1)))) DESC, ((((((0X7c83ea55)%('1815006775')))AND(((v0.c0)IS(vt0.c2)))))OR('-533776016'))  NULLS FIRST, ((((vt0.c2) ISNULL)) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(v0.c0)))IS NOT(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY CAST((((v0.c0))==((vt0.c2))) AS TEXT) DESC  NULLS LAST, CASE WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((v0.c0)=('b')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(v0.c0)))IS NOT(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((((v0.c0))=((vt0.c2))) AS TEXT) DESC  NULLS LAST, CASE WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((v0.c0)==('b')) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(v0.c0)))IS NOT(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY CAST((((v0.c0))==((vt0.c2))) AS TEXT) DESC  NULLS LAST, CASE WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((v0.c0)=('b')) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)+(v0.c0)))IS NOT(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((((v0.c0))=((vt0.c2))) AS TEXT) DESC  NULLS LAST, CASE WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((v0.c0)==('b')) END  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(v0.c0)))IS NOT(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2)))AND(vt0.c2))))) ORDER BY CAST((((v0.c0))==((vt0.c2))) AS TEXT) DESC  NULLS LAST, CASE WHEN ((vt0.c0)LIKE(vt0.c1)) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((v0.c0)=('b')) END  NULLS FIRST;
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0)>(vt1.c0)) WHEN (- (1.02166888E8)) THEN (~ (v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((~ (v0.c0)))))OR(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0)>(vt1.c0)) WHEN (- (1.02166888E8)) THEN (~ (v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0)>(vt1.c0)) WHEN (- (1.02166888E8)) THEN (~ (v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND((~ (v0.c0)))))OR(((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0)>(vt1.c0)) WHEN (- (1.02166888E8)) THEN (~ (v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL * FROM v0, vt1 WHERE (((((NULL)AND((~ (v0.c0)))))OR(((vt1.c0)>>(vt1.c0))))) ORDER BY CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (v0.c0 IN ()) THEN ((v0.c0)>(vt1.c0)) WHEN (- (1.02166888E8)) THEN (~ (v0.c0)) WHEN vt1.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) END  NULLS LAST;
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt0.c0) ISNULL)))>=((v0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((('\nMx]')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ORDER BY vt1.c0, CASE WHEN LIKELY(DISTINCT vt0.c2) THEN ((vt1.c0) NOT BETWEEN (x'4baf') AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((('\nMx]')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY vt1.c0, CASE WHEN LIKELY(DISTINCT vt0.c2) THEN ((vt1.c0) NOT BETWEEN (x'4baf') AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((('\nMx]')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ORDER BY vt1.c0, CASE WHEN LIKELY(DISTINCT vt0.c2) THEN ((vt1.c0) NOT BETWEEN (x'4baf') AND (vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((('\nMx]')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY vt1.c0, CASE WHEN LIKELY(DISTINCT vt0.c2) THEN ((vt1.c0) NOT BETWEEN (x'4baf') AND (vt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))IS(((('\nMx]')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) ORDER BY vt1.c0, CASE WHEN LIKELY(DISTINCT vt0.c2) THEN ((vt1.c0) NOT BETWEEN (x'4baf') AND (vt0.c0)) END DESC;
SELECT * FROM v0, vt1, vt0 WHERE (IFNULL(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)), CASE vt0.c1  WHEN '-215291916' THEN vt0.c1 END)) ORDER BY (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)) IN (((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)), CASE vt0.c1  WHEN '-215291916' THEN vt0.c1 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)) IN (((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (IFNULL(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)), CASE vt0.c1  WHEN '-215291916' THEN vt0.c1 END)) ORDER BY (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)) IN (((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)), CASE vt0.c1  WHEN '-215291916' THEN vt0.c1 END)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)) IN (((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (IFNULL(((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)), CASE vt0.c1  WHEN '-215291916' THEN vt0.c1 END)) ORDER BY (((((((((v0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c2)) IN (((((((((((((vt0.c0)OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c2)), vt0.c0 COLLATE BINARY)) ASC;
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)%(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (CAST(((vt0.c0)%(vt0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))) WHERE ((vt0.c2 IN (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0)=((((NULL))<>((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))) ORDER BY ((v0.c0)=((((NULL))<>((v0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))) WHERE ((vt0.c2 IN (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0)=((((NULL))<>((v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c2 IN (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))) ORDER BY ((v0.c0)=((((NULL))<>((v0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (NOT (((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)))) WHERE ((vt0.c2 IN (v0.c0 COLLATE RTRIM))) ORDER BY ((v0.c0)=((((NULL))<>((v0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('-2091570725')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('-2091570725'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('-2091570725')));
SELECT SUM(count) FROM (SELECT ALL (((+ ('-2091570725'))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ('-2091570725')));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (-9.83107189E8) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-9.83107189E8) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (-9.83107189E8) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-9.83107189E8) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (-9.83107189E8) ORDER BY (((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))OR(((((v0.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(v0.c0));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((NULL) ISNULL))AND((- (vt0.c0)))))OR((((vt0.c1))==((vt0.c2))))))AND((v0.c0 IN ()))))OR((vt0.c1 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL) ISNULL))AND((- (vt0.c0)))))OR((((vt0.c1))==((vt0.c2))))))AND((v0.c0 IN ()))))OR((vt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((NULL) ISNULL))AND((- (vt0.c0)))))OR((((vt0.c1))==((vt0.c2))))))AND((v0.c0 IN ()))))OR((vt0.c1 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((NULL) ISNULL))AND((- (vt0.c0)))))OR((((vt0.c1))==((vt0.c2))))))AND((v0.c0 IN ()))))OR((vt0.c1 IN (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((NULL) ISNULL))AND((- (vt0.c0)))))OR((((vt0.c1))==((vt0.c2))))))AND((v0.c0 IN ()))))OR((vt0.c1 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2 IN ()))>(((vt0.c0)GLOB(vt0.c1))))) ORDER BY (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))<=(((NOT (vt0.c2))))), CASE vt0.c2 COLLATE BINARY  WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))>(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))<=(((NOT (vt0.c2))))), CASE vt0.c2 COLLATE BINARY  WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2 IN ()))>(((vt0.c0)GLOB(vt0.c1))))) ORDER BY (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))<=(((NOT (vt0.c2))))), CASE vt0.c2 COLLATE BINARY  WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ()))>(((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))<=(((NOT (vt0.c2))))), CASE vt0.c2 COLLATE BINARY  WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c2 IN ()))>(((vt0.c0)GLOB(vt0.c1))))) ORDER BY (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0))))<=(((NOT (vt0.c2))))), CASE vt0.c2 COLLATE BINARY  WHEN v0.c0 COLLATE RTRIM THEN (vt0.c1 IN (v0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (((vt1.c0 IN ()))-(((v0.c0)IS(vt1.c0)))) ASC, UNLIKELY(DISTINCT v0.c0 COLLATE RTRIM), ((vt1.c0 COLLATE RTRIM)>=(((((v0.c0)OR(NULL)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ()))-(((v0.c0)IS(vt1.c0)))) ASC, UNLIKELY(DISTINCT v0.c0 COLLATE RTRIM), ((vt1.c0 COLLATE RTRIM)>=(((((v0.c0)OR(NULL)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (((vt1.c0 IN ()))-(((v0.c0)IS(vt1.c0)))) ASC, UNLIKELY(DISTINCT v0.c0 COLLATE RTRIM), ((vt1.c0 COLLATE RTRIM)>=(((((v0.c0)OR(NULL)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((vt1.c0 IN ()))-(((v0.c0)IS(vt1.c0)))) ASC, UNLIKELY(DISTINCT v0.c0 COLLATE RTRIM), ((vt1.c0 COLLATE RTRIM)>=(((((v0.c0)OR(NULL)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (((v0.c0 COLLATE NOCASE) IS FALSE)) ORDER BY (((vt1.c0 IN ()))-(((v0.c0)IS(vt1.c0)))) ASC, UNLIKELY(DISTINCT v0.c0 COLLATE RTRIM), ((vt1.c0 COLLATE RTRIM)>=(((((v0.c0)OR(NULL)))OR(v0.c0))));
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((~ (v0.c0)))/((((vt1.c0, vt1.c0, v0.c0))<>((v0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))/((((vt1.c0, vt1.c0, v0.c0))<>((v0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((~ (v0.c0)))/((((vt1.c0, vt1.c0, v0.c0))<>((v0.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))/((((vt1.c0, vt1.c0, v0.c0))<>((v0.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((((~ (v0.c0)))/((((vt1.c0, vt1.c0, v0.c0))<>((v0.c0, vt1.c0, vt1.c0))))));
SELECT * FROM vt1, v0, vt0 WHERE (TRIM((vt1.c0 IN ()))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY TOTAL_CHANGES()  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE (TRIM((vt1.c0 IN ()))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY TOTAL_CHANGES()  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE (TRIM((vt1.c0 IN ()))) ORDER BY TOTAL_CHANGES()  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL END) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL END) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL END) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN NULL END) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE WHEN v0.c0 THEN NULL END) BETWEEN (v0.c0 COLLATE BINARY) AND (CAST(v0.c0 AS TEXT))));
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(v0.c0)))+((((x'83c2')) BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(v0.c0)))+((((x'83c2')) BETWEEN ((vt1.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(v0.c0)))+((((x'83c2')) BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(v0.c0)))+((((x'83c2')) BETWEEN ((vt1.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE (((((vt1.c0)<<(v0.c0)))+((((x'83c2')) BETWEEN ((vt1.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt0.c0));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt0.c0));
SELECT SUM(count) FROM (SELECT ((TYPEOF(vt0.c0)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (TYPEOF(vt0.c0));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CAST('kmL^)' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('kmL^)' AS TEXT)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CAST('kmL^)' AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST('kmL^)' AS TEXT)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (CAST('kmL^)' AS TEXT))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((0x353c892a) NOT NULL) END) ORDER BY v0.c0  NULLS FIRST, ((((((v0.c0) IS FALSE))AND((+ (-1.249116597E9)))))OR(CAST(-7.36159829E8 AS TEXT))) ASC, (~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE RTRIM THEN ((0X353c892a) NOT NULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, ((((((v0.c0) IS FALSE))AND((+ (-1.249116597E9)))))OR(CAST(-7.36159829E8 AS TEXT))) ASC, (~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((0x353c892a) NOT NULL) END) ORDER BY v0.c0  NULLS FIRST, ((((((v0.c0) IS FALSE))AND((+ (-1.249116597E9)))))OR(CAST(-7.36159829E8 AS TEXT))) ASC, (~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE RTRIM THEN ((0X353c892a) NOT NULL) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, ((((((v0.c0) IS FALSE))AND((+ (-1.249116597E9)))))OR(CAST(-7.36159829E8 AS TEXT))) ASC, (~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN ((0x353c892a) NOT NULL) END) ORDER BY v0.c0  NULLS FIRST, ((((((v0.c0) IS FALSE))AND((+ (-1.249116597E9)))))OR(CAST(-7.36159829E8 AS TEXT))) ASC, (~ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)*(vt1.c0))))) ORDER BY (- (IFNULL(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (IFNULL(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)*(vt1.c0))))) ORDER BY (- (IFNULL(vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (IFNULL(vt1.c0, vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)*(vt1.c0))))) ORDER BY (- (IFNULL(vt1.c0, vt1.c0)));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((~ (CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((v0.c0)GLOB(vt0.c0)) COLLATE BINARY) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((v0.c0)GLOB(vt0.c0)) COLLATE BINARY) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (((v0.c0)GLOB(vt0.c0)) COLLATE BINARY) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0))) AS REAL));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c1 LEFT OUTER JOIN v0 ON ((((vt0.c0)<=(v0.c0)))AND(UNLIKELY(DISTINCT vt0.c2))) WHERE (((((CAST(vt0.c1 AS BLOB))AND(CAST(vt1.c0 AS BLOB))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY LIKE(vt0.c2, v0.c0, ',') COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS BLOB))AND(CAST(vt1.c0 AS BLOB))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c1 LEFT OUTER JOIN v0 ON ((((vt0.c0)<=(v0.c0)))AND(UNLIKELY(DISTINCT vt0.c2))) ORDER BY LIKE(vt0.c2, v0.c0, ',') COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c1 LEFT OUTER JOIN v0 ON ((((vt0.c0)<=(v0.c0)))AND(UNLIKELY(DISTINCT vt0.c2))) WHERE (((((CAST(vt0.c1 AS BLOB))AND(CAST(vt1.c0 AS BLOB))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY LIKE(vt0.c2, v0.c0, ',') COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c1 AS BLOB))AND(CAST(vt1.c0 AS BLOB))))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c1 LEFT OUTER JOIN v0 ON ((((vt0.c0)<=(v0.c0)))AND(UNLIKELY(DISTINCT vt0.c2))) ORDER BY LIKE(vt0.c2, v0.c0, ',') COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON vt0.c1 LEFT OUTER JOIN v0 ON ((((vt0.c0)<=(v0.c0)))AND(UNLIKELY(DISTINCT vt0.c2))) WHERE (((((CAST(vt0.c1 AS BLOB))AND(CAST(vt1.c0 AS BLOB))))OR(CAST(vt0.c0 AS REAL)))) ORDER BY LIKE(vt0.c2, v0.c0, ',') COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (('-503245798' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-503245798' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (('-503245798' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-503245798' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (('-503245798' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULL THEN vt0.c2 ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN vt0.c2 COLLATE RTRIM ELSE (1.02166888E8 IN (vt0.c2, vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN NULL THEN vt0.c2 ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN vt0.c2 COLLATE RTRIM ELSE (1.02166888E8 IN (vt0.c2, vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULL THEN vt0.c2 ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN vt0.c2 COLLATE RTRIM ELSE (1.02166888E8 IN (vt0.c2, vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN NULL THEN vt0.c2 ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN vt0.c2 COLLATE RTRIM ELSE (1.02166888E8 IN (vt0.c2, vt0.c0)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULL THEN vt0.c2 ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) ORDER BY CASE (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (vt0.c1 IN (vt0.c1, vt0.c0)) WHEN CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END THEN vt0.c2 COLLATE RTRIM ELSE (1.02166888E8 IN (vt0.c2, vt0.c0)) END  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((0xffffffffa03aff58) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c2))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffa03aff58) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c2))) AND (vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0xffffffffa03aff58) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c2))) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffa03aff58) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c2))) AND (vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((0xffffffffa03aff58) NOT BETWEEN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c2))) AND (vt0.c1)));
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE '1208206733' END IN (((vt0.c1) IS TRUE), (NOT (vt0.c1)))) WHERE ((+ ((v0.c0 IN (vt0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (vt0.c2, v0.c0))))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE '1208206733' END IN (((vt0.c1) IS TRUE), (NOT (vt0.c1)))));
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE '1208206733' END IN (((vt0.c1) IS TRUE), (NOT (vt0.c1)))) WHERE ((+ ((v0.c0 IN (vt0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (vt0.c2, v0.c0))))) IS TRUE)  as count FROM v0, vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE '1208206733' END IN (((vt0.c1) IS TRUE), (NOT (vt0.c1)))));
SELECT COUNT(*) FROM v0, vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c1 ELSE '1208206733' END IN (((vt0.c1) IS TRUE), (NOT (vt0.c1)))) WHERE ((+ ((v0.c0 IN (vt0.c2, v0.c0)))));
SELECT ALL * FROM v0, vt1 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5331641859076356))))IS(SQLITE_SOURCE_ID())) WHERE (x'670d');
SELECT SUM(count) FROM (SELECT ((x'670d') IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5331641859076356))))IS(SQLITE_SOURCE_ID())));
SELECT ALL * FROM v0, vt1 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5331641859076356))))IS(SQLITE_SOURCE_ID())) WHERE (x'670d');
SELECT SUM(count) FROM (SELECT ((x'670d') IS TRUE)  as count FROM v0, vt1 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5331641859076356))))IS(SQLITE_SOURCE_ID())));
SELECT ALL * FROM v0, vt1 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((0.5331641859076356))))IS(SQLITE_SOURCE_ID())) WHERE (x'670d');
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS REAL));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY JULIANDAY((((v0.c0))==((v0.c0))), (vt0.c1 IN ()), (('-1408551956') NOT BETWEEN (vt0.c2) AND (v0.c0)))  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((v0.c0))))))AND(CAST(vt0.c2 AS NUMERIC))))AND(((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY JULIANDAY((((v0.c0))=((v0.c0))), (vt0.c1 IN ()), (('-1408551956') NOT BETWEEN (vt0.c2) AND (v0.c0)))  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((v0.c0))))))AND(CAST(vt0.c2 AS NUMERIC))))AND(((v0.c0)>(v0.c0)))));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY JULIANDAY((((v0.c0))==((v0.c0))), (vt0.c1 IN ()), (('-1408551956') NOT BETWEEN (vt0.c2) AND (v0.c0)))  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((v0.c0))))))AND(CAST(vt0.c2 AS NUMERIC))))AND(((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY JULIANDAY((((v0.c0))=((v0.c0))), (vt0.c1 IN ()), (('-1408551956') NOT BETWEEN (vt0.c2) AND (v0.c0)))  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((v0.c0))))))AND(CAST(vt0.c2 AS NUMERIC))))AND(((v0.c0)>(v0.c0)))));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((CASE NULL  WHEN vt1.c0 THEN vt1.c0 END) NOT BETWEEN (vt0.c2) AND (CASE WHEN vt0.c2 THEN vt0.c2 END))) ORDER BY JULIANDAY((((v0.c0))==((v0.c0))), (vt0.c1 IN ()), (('-1408551956') NOT BETWEEN (vt0.c2) AND (v0.c0)))  NULLS FIRST, (((((((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((v0.c0))))))AND(CAST(vt0.c2 AS NUMERIC))))AND(((v0.c0)>(v0.c0))));
SELECT * FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(CAST('-155035669' AS TEXT))))AND(0xfffffffff215f06a COLLATE BINARY))) ORDER BY '-1715170391';
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(CAST('-155035669' AS TEXT))))AND(0xfffffffff215f06a COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-1715170391');
SELECT * FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(CAST('-155035669' AS TEXT))))AND(0xfffffffff215f06a COLLATE BINARY))) ORDER BY '-1715170391';
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(CAST('-155035669' AS TEXT))))AND(0xfffffffff215f06a COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1 ORDER BY '-1715170391');
SELECT * FROM vt0, vt1 WHERE (((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))AND(CAST('-155035669' AS TEXT))))AND(0xfffffffff215f06a COLLATE BINARY))) ORDER BY '-1715170391';
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)))AND(vt1.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)))AND(vt1.c0))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c1)))AND(CASE WHEN vt0.c2 THEN vt0.c2 END)))AND(vt1.c0)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<<(vt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE (((((vt1.c0)<<(vt1.c0))) ISNULL));
SELECT * FROM vt0 WHERE ('-1717288797');
SELECT SUM(count) FROM (SELECT (('-1717288797') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1717288797');
SELECT SUM(count) FROM (SELECT (('-1717288797') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-1717288797');
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)%(v0.c0))) ISNULL)) ORDER BY v0.c0  NULLS FIRST;
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) ISNULL))AND(vt0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0) ISNULL))AND(vt0.c2 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) ISNULL))AND(vt0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0) ISNULL))AND(vt0.c2 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) ISNULL))AND(vt0.c2 COLLATE NOCASE)) ASC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CHAR((vt0.c0 IN ()), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CHAR((vt0.c0 IN ()), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CHAR((vt0.c0 IN ()), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CHAR((vt0.c0 IN ()), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c0))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CHAR((vt0.c0 IN ()), ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKE(x'48d4' COLLATE BINARY, vt0.c1 COLLATE BINARY, '0') CROSS JOIN v0 ON NULL WHERE (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKE(x'48d4' COLLATE BINARY, vt0.c1 COLLATE BINARY, '0') CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKE(x'48d4' COLLATE BINARY, vt0.c1 COLLATE BINARY, '0') CROSS JOIN v0 ON NULL WHERE (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON LIKE(x'48d4' COLLATE BINARY, vt0.c1 COLLATE BINARY, '0') CROSS JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON LIKE(x'48d4' COLLATE BINARY, vt0.c1 COLLATE BINARY, '0') CROSS JOIN v0 ON NULL WHERE (((((vt1.c0)OR(v0.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c2)))OR(x'a930')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c2)))OR(x'a930')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c2)))OR(x'a930')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c2)))OR(x'a930')) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)OR(vt0.c2)))OR(x'a930')) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.3633262803586398);
SELECT SUM(count) FROM (SELECT ((0.3633262803586398) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.3633262803586398);
SELECT SUM(count) FROM (SELECT ((0.3633262803586398) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.3633262803586398);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))OR((((vt0.c1))<=((v0.c0))))))OR(vt0.c0)) CROSS JOIN v0 ON vt1.c0 WHERE (((vt0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))OR((((vt0.c1))<=((v0.c0))))))OR(vt0.c0)) CROSS JOIN v0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))OR((((vt0.c1))<=((v0.c0))))))OR(vt0.c0)) CROSS JOIN v0 ON vt1.c0 WHERE (((vt0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((NOT (vt0.c0)))OR((((vt0.c1))<=((v0.c0))))))OR(vt0.c0)) CROSS JOIN v0 ON vt1.c0);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 END)OR(((vt0.c1)*(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((NULL) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS REAL))>(((vt0.c2)<=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 END)OR(((vt0.c1)*(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS REAL))>(((vt0.c2)<=(v0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 END)OR(((vt0.c1)*(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((NULL) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS REAL))>(((vt0.c2)<=(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 END)OR(((vt0.c1)*(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CAST(vt1.c0 AS REAL))>(((vt0.c2)<=(v0.c0))))  NULLS FIRST);
SELECT * FROM v0, vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN v0.c0 THEN vt0.c1 END)OR(((vt0.c1)*(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))OR(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(((NULL) IS FALSE)))) ORDER BY ((CAST(vt1.c0 AS REAL))>(((vt0.c2)<=(v0.c0))))  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) ORDER BY 0.04041655022376267;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 0.04041655022376267);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) ORDER BY 0.04041655022376267;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY 0.04041655022376267);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (v0.c0 IN ()) WHEN (v0.c0 IN ()) THEN (v0.c0 IN (v0.c0)) END) ORDER BY 0.04041655022376267;
SELECT * FROM vt1, vt0 WHERE (((((x'')OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c2)<<(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL)))=((((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c2)<<(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0) ISNULL)))==((((vt0.c2) NOT NULL)))));
SELECT * FROM vt1, vt0 WHERE (((((x'')OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c2)<<(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL)))=((((vt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'')OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c2)<<(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0) ISNULL)))==((((vt0.c2) NOT NULL)))));
SELECT * FROM vt1, vt0 WHERE (((((x'')OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c2)<<(vt0.c0))))) ORDER BY (((((vt0.c0) ISNULL)))=((((vt0.c2) NOT NULL))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((((((v0.c0)AND((- (vt0.c1)))))AND(CAST(v0.c0 AS INTEGER))))OR(x'')))OR(CAST(vt0.c2 AS REAL))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c2 ELSE v0.c0 END) IS TRUE)) ORDER BY (((vt0.c2)) BETWEEN ((((v0.c0)&(vt0.c0)))) AND (((+ (vt0.c0)))))  NULLS FIRST, CAST((('Mh') ISNULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c2 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((((((v0.c0)AND((- (vt0.c1)))))AND(CAST(v0.c0 AS INTEGER))))OR(x'')))OR(CAST(vt0.c2 AS REAL))) ORDER BY (((vt0.c2)) BETWEEN ((((v0.c0)&(vt0.c0)))) AND (((+ (vt0.c0)))))  NULLS FIRST, CAST((('Mh') ISNULL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((((((v0.c0)AND((- (vt0.c1)))))AND(CAST(v0.c0 AS INTEGER))))OR(x'')))OR(CAST(vt0.c2 AS REAL))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c2 ELSE v0.c0 END) IS TRUE)) ORDER BY (((vt0.c2)) BETWEEN ((((v0.c0)&(vt0.c0)))) AND (((+ (vt0.c0)))))  NULLS FIRST, CAST((('Mh') ISNULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt0.c2 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((((((v0.c0)AND((- (vt0.c1)))))AND(CAST(v0.c0 AS INTEGER))))OR(x'')))OR(CAST(vt0.c2 AS REAL))) ORDER BY (((vt0.c2)) BETWEEN ((((v0.c0)&(vt0.c0)))) AND (((+ (vt0.c0)))))  NULLS FIRST, CAST((('Mh') ISNULL) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE NOCASE COLLATE BINARY RIGHT OUTER JOIN v0 ON ((((((((v0.c0)AND((- (vt0.c1)))))AND(CAST(v0.c0 AS INTEGER))))OR(x'')))OR(CAST(vt0.c2 AS REAL))) WHERE (((CASE WHEN vt1.c0 THEN vt0.c2 ELSE v0.c0 END) IS TRUE)) ORDER BY (((vt0.c2)) BETWEEN ((((v0.c0)&(vt0.c0)))) AND (((+ (vt0.c0)))))  NULLS FIRST, CAST((('Mh') ISNULL) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, v0, vt1 WHERE (((((vt0.c0)+(v0.c0))) NOT NULL)) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((((NULL)AND(vt0.c0))))) ASC, (((~ (vt0.c1)))*(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))==(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((((NULL)AND(vt0.c0))))) ASC, (((~ (vt0.c1)))*(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))==(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, v0, vt1 WHERE (((((vt0.c0)+(v0.c0))) NOT NULL)) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((((NULL)AND(vt0.c0))))) ASC, (((~ (vt0.c1)))*(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))==(vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(v0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((((NULL)AND(vt0.c0))))) ASC, (((~ (vt0.c1)))*(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))==(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, v0, vt1 WHERE (((((vt0.c0)+(v0.c0))) NOT NULL)) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))))>=((((NULL)AND(vt0.c0))))) ASC, (((~ (vt0.c1)))*(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)))), (((((vt1.c0)) BETWEEN ((vt0.c2)) AND ((vt1.c0))))==(vt1.c0 COLLATE NOCASE));
SELECT COUNT(*) FROM v0 WHERE (CAST('0.34109895215770447' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.34109895215770447' AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST('0.34109895215770447' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.34109895215770447' AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST('0.34109895215770447' AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((v0.c0)<>(v0.c0)))))) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)GLOB(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND ('1e500')) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((v0.c0)!=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)GLOB(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND ('1e500')) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((v0.c0)<>(v0.c0)))))) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)GLOB(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND ('1e500')) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((v0.c0)!=(v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)GLOB(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND ('1e500')) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((((v0.c0)<>(v0.c0)))))) ORDER BY CASE WHEN ((v0.c0)||(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0)GLOB(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND ('1e500')) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE (TRIM(DISTINCT (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (TRIM(DISTINCT (NOT (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (NOT (vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (TRIM(DISTINCT (NOT (vt1.c0))));
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))>((((v0.c0)+(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))>((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))>((((v0.c0)+(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE RTRIM))>((((v0.c0)+(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))>((((v0.c0)+(v0.c0))))));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (((v0.c0)GLOB(vt0.c2))) AND ((~ (vt1.c0))))) ORDER BY (vt0.c1 IN (vt0.c0, vt0.c2, vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) BETWEEN (((v0.c0)GLOB(vt0.c2))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (vt0.c1 IN (vt0.c0, vt0.c2, vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (((v0.c0)GLOB(vt0.c2))) AND ((~ (vt1.c0))))) ORDER BY (vt0.c1 IN (vt0.c0, vt0.c2, vt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM) BETWEEN (((v0.c0)GLOB(vt0.c2))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (vt0.c1 IN (vt0.c0, vt0.c2, vt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((vt0.c2 COLLATE RTRIM) BETWEEN (((v0.c0)GLOB(vt0.c2))) AND ((~ (vt1.c0))))) ORDER BY (vt0.c1 IN (vt0.c0, vt0.c2, vt0.c2)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT vt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c2)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON CASE WHEN ((0xffffffff9f5e7fd5) BETWEEN (v0.c0) AND (vt1.c0)) THEN (NOT (v0.c0)) END WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON CASE WHEN ((0xffffffff9f5e7fd5) BETWEEN (v0.c0) AND (vt1.c0)) THEN (NOT (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON CASE WHEN ((0xffffffff9f5e7fd5) BETWEEN (v0.c0) AND (vt1.c0)) THEN (NOT (v0.c0)) END WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON CASE WHEN ((0xffffffff9f5e7fd5) BETWEEN (v0.c0) AND (vt1.c0)) THEN (NOT (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN v0 ON CASE WHEN ((0xffffffff9f5e7fd5) BETWEEN (v0.c0) AND (vt1.c0)) THEN (NOT (v0.c0)) END WHERE (((CAST(vt1.c0 AS BLOB)) BETWEEN ((NOT (vt1.c0))) AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c1)>(vt0.c0)))AND(((vt0.c2) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY CASE WHEN (- ('-533776016')) THEN ((vt0.c0) IS TRUE) ELSE ((v0.c0)<=(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)>(vt0.c0)))AND(((vt0.c2) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (- ('-533776016')) THEN ((vt0.c0) IS TRUE) ELSE ((v0.c0)<=(vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c1)>(vt0.c0)))AND(((vt0.c2) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY CASE WHEN (- ('-533776016')) THEN ((vt0.c0) IS TRUE) ELSE ((v0.c0)<=(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)>(vt0.c0)))AND(((vt0.c2) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN (- ('-533776016')) THEN ((vt0.c0) IS TRUE) ELSE ((v0.c0)<=(vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((((((vt0.c1)>(vt0.c0)))AND(((vt0.c2) NOTNULL))))OR(((vt0.c0)LIKE(vt0.c0))))) ORDER BY CASE WHEN (- ('-533776016')) THEN ((vt0.c0) IS TRUE) ELSE ((v0.c0)<=(vt0.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.018682163933410045) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.018682163933410045) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.018682163933410045) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.018682163933410045) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (0.018682163933410045) ORDER BY CASE WHEN NULL COLLATE RTRIM THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN (((v0.c0) NOT BETWEEN (x'') AND (vt0.c2))) AND (TRIM(DISTINCT vt0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) BETWEEN (((v0.c0) NOT BETWEEN (x'') AND (vt0.c2))) AND (TRIM(DISTINCT vt0.c2, vt0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN (((v0.c0) NOT BETWEEN (x'') AND (vt0.c2))) AND (TRIM(DISTINCT vt0.c2, vt0.c2))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) BETWEEN (((v0.c0) NOT BETWEEN (x'') AND (vt0.c2))) AND (TRIM(DISTINCT vt0.c2, vt0.c2)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN (((v0.c0) NOT BETWEEN (x'') AND (vt0.c2))) AND (TRIM(DISTINCT vt0.c2, vt0.c2))));
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt1);
SELECT * FROM v0, vt0 NATURAL JOIN vt1 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c0);
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ()));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY((((v0.c0))<>((v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY LIKELY((((v0.c0))!=((v0.c0)))) DESC  NULLS FIRST, v0.c0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY((((v0.c0))<>((v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY LIKELY((((v0.c0))!=((v0.c0)))) DESC  NULLS FIRST, v0.c0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY LIKELY((((v0.c0))<>((v0.c0)))) DESC  NULLS FIRST, v0.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)GLOB(v0.c0)))AND(((vt0.c1) IS FALSE))))OR((((vt0.c2, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((-136003748, vt0.c2, ''))))) WHERE ((((x'c33e49ad')) BETWEEN (((NOT (v0.c0)))) AND ((vt0.c2)))) ORDER BY (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND ((~ (vt0.c2))))  NULLS LAST, CAST(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) DESC, (((('cE') NOTNULL))LIKE(ABS(DISTINCT vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'c33e49ad')) BETWEEN (((NOT (v0.c0)))) AND ((vt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)GLOB(v0.c0)))AND(((vt0.c1) IS FALSE))))OR((((vt0.c2, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((-136003748, vt0.c2, ''))))) ORDER BY (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND ((~ (vt0.c2))))  NULLS LAST, CAST(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) DESC, (((('cE') NOTNULL))LIKE(ABS(DISTINCT vt0.c2))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)GLOB(v0.c0)))AND(((vt0.c1) IS FALSE))))OR((((vt0.c2, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((-136003748, vt0.c2, ''))))) WHERE ((((x'c33e49ad')) BETWEEN (((NOT (v0.c0)))) AND ((vt0.c2)))) ORDER BY (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND ((~ (vt0.c2))))  NULLS LAST, CAST(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) DESC, (((('cE') NOTNULL))LIKE(ABS(DISTINCT vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((x'c33e49ad')) BETWEEN (((NOT (v0.c0)))) AND ((vt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)GLOB(v0.c0)))AND(((vt0.c1) IS FALSE))))OR((((vt0.c2, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((-136003748, vt0.c2, ''))))) ORDER BY (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND ((~ (vt0.c2))))  NULLS LAST, CAST(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) DESC, (((('cE') NOTNULL))LIKE(ABS(DISTINCT vt0.c2))) ASC);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((v0.c0)GLOB(v0.c0)))AND(((vt0.c1) IS FALSE))))OR((((vt0.c2, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((-136003748, vt0.c2, ''))))) WHERE ((((x'c33e49ad')) BETWEEN (((NOT (v0.c0)))) AND ((vt0.c2)))) ORDER BY (((+ (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND ((~ (vt0.c2))))  NULLS LAST, CAST(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)) AS NUMERIC) DESC, (((('cE') NOTNULL))LIKE(ABS(DISTINCT vt0.c2))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE (((((vt0.c2) IS TRUE))%(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS TRUE))%(vt0.c2))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE (((((vt0.c2) IS TRUE))%(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS TRUE))%(vt0.c2))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt1 ON (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt1 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE (((((vt0.c2) IS TRUE))%(vt0.c2)));
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((~ (vt0.c0)) COLLATE RTRIM) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) WHEN (((vt0.c2))>=((vt0.c1))) THEN (((vt0.c2, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c1, vt1.c0))) WHEN TRIM(DISTINCT vt0.c1) THEN ((vt0.c2)-(vt0.c0)) WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c2) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) WHEN (((vt0.c2))>=((vt0.c1))) THEN (((vt0.c2, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c1, vt1.c0))) WHEN TRIM(DISTINCT vt0.c1) THEN ((vt0.c2)-(vt0.c0)) WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c2) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) WHEN (((vt0.c2))>=((vt0.c1))) THEN (((vt0.c2, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c1, vt1.c0))) WHEN TRIM(DISTINCT vt0.c1) THEN ((vt0.c2)-(vt0.c0)) WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c2) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) WHEN (((vt0.c2))>=((vt0.c1))) THEN (((vt0.c2, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c1, vt1.c0))) WHEN TRIM(DISTINCT vt0.c1) THEN ((vt0.c2)-(vt0.c0)) WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c2) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (CASE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))  WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) WHEN (((vt0.c2))>=((vt0.c1))) THEN (((vt0.c2, vt0.c1, vt0.c0))>=((vt0.c2, vt0.c1, vt1.c0))) WHEN TRIM(DISTINCT vt0.c1) THEN ((vt0.c2)-(vt0.c0)) WHEN ((vt0.c2) NOT NULL) THEN ((vt0.c2) NOTNULL) WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt1.c0)>(vt0.c0)) END);
SELECT * FROM vt0, v0, vt1 WHERE (COALESCE('jz', vt0.c2) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE('jz', vt0.c2) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (COALESCE('jz', vt0.c2) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((COALESCE('jz', vt0.c2) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (COALESCE('jz', vt0.c2) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(605687612)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(605687612)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(605687612)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(605687612)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(605687612)) IN ()));
SELECT * FROM vt1, v0, vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) IS FALSE)) ORDER BY CASE WHEN NULL THEN 'kmL^)' WHEN ((vt0.c1)=(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c1)-(v0.c0)) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (0.1924080720031991)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE WHEN NULL THEN 'kmL^)' WHEN ((vt0.c1)=(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c1)-(v0.c0)) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (0.1924080720031991)) END ASC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) IS FALSE)) ORDER BY CASE WHEN NULL THEN 'kmL^)' WHEN ((vt0.c1)=(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c1)-(v0.c0)) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (0.1924080720031991)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY CASE WHEN NULL THEN 'kmL^)' WHEN ((vt0.c1)=(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c1)-(v0.c0)) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (0.1924080720031991)) END ASC  NULLS LAST);
SELECT * FROM vt1, v0, vt0 WHERE ((((((vt0.c1))<=((vt0.c1)))) IS FALSE)) ORDER BY CASE WHEN NULL THEN 'kmL^)' WHEN ((vt0.c1)=(vt0.c2)) THEN (NOT (vt0.c0)) WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN CAST(vt0.c2 AS NUMERIC) THEN ((vt0.c1)-(v0.c0)) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) BETWEEN (vt0.c2) AND (0.1924080720031991)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((NOT (vt0.c2)))==((~ (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))=((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((NOT (vt0.c2)))==((~ (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c2)))=((~ (vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ((((NOT (vt0.c2)))==((~ (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'') ORDER BY ((NULL)>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((NULL)>(NULL)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'') ORDER BY ((NULL)>(NULL));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((NULL)>(NULL)));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'') ORDER BY ((NULL)>(NULL));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c2) IS TRUE)) BETWEEN (((vt1.c0)==(vt1.c0))) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (+ (CASE WHEN v0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS TRUE)) BETWEEN (((vt1.c0)=(vt1.c0))) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (+ (CASE WHEN v0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c2) IS TRUE)) BETWEEN (((vt1.c0)==(vt1.c0))) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (+ (CASE WHEN v0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) IS TRUE)) BETWEEN (((vt1.c0)=(vt1.c0))) AND (((vt0.c1)IS(vt1.c0))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (+ (CASE WHEN v0.c0 THEN vt1.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt0.c2) IS TRUE)) BETWEEN (((vt1.c0)==(vt1.c0))) AND (((vt0.c1)IS(vt1.c0))))) ORDER BY (+ (CASE WHEN v0.c0 THEN vt1.c0 END))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((((('-2059822459') BETWEEN (x'') AND (vt1.c0)))AND(((vt0.c1)==(vt1.c0)))))OR(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((('-2059822459') BETWEEN (x'') AND (vt1.c0)))AND(((vt0.c1)=(vt1.c0)))))OR(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((('-2059822459') BETWEEN (x'') AND (vt1.c0)))AND(((vt0.c1)==(vt1.c0)))))OR(vt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((('-2059822459') BETWEEN (x'') AND (vt1.c0)))AND(((vt0.c1)=(vt1.c0)))))OR(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((((('-2059822459') BETWEEN (x'') AND (vt1.c0)))AND(((vt0.c1)==(vt1.c0)))))OR(vt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt1 WHERE ((+ (((vt1.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)=(v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((+ (((vt1.c0)=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0)=(v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((+ (((vt1.c0)=(v0.c0)))));
SELECT * FROM vt0, vt1, v0 WHERE (x'') ORDER BY (+ ((- (v0.c0)))) ASC  NULLS LAST, ((0.00640036986636916)<=((vt0.c0 IN (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (+ ((- (v0.c0)))) ASC  NULLS LAST, ((0.00640036986636916)<=((vt0.c0 IN (vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (x'') ORDER BY (+ ((- (v0.c0)))) ASC  NULLS LAST, ((0.00640036986636916)<=((vt0.c0 IN (vt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (+ ((- (v0.c0)))) ASC  NULLS LAST, ((0.00640036986636916)<=((vt0.c0 IN (vt0.c2))))  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (x'') ORDER BY (+ ((- (v0.c0)))) ASC  NULLS LAST, ((0.00640036986636916)<=((vt0.c0 IN (vt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))  WHEN '730453900' THEN (- (vt1.c0)) END) ORDER BY ((json_valid(vt0.c1)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))  WHEN '730453900' THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_valid(vt0.c1)) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))  WHEN '730453900' THEN (- (vt1.c0)) END) ORDER BY ((json_valid(vt0.c1)) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))  WHEN '730453900' THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((json_valid(vt0.c1)) ISNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2))  WHEN '730453900' THEN (- (vt1.c0)) END) ORDER BY ((json_valid(vt0.c1)) ISNULL);
SELECT * FROM vt1 INNER JOIN v0 ON (+ (((vt1.c0)-(x'b0c7')))) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (+ (((vt1.c0)-(x'b0c7')))));
SELECT * FROM vt1 INNER JOIN v0 ON (+ (((vt1.c0)-(x'b0c7')))) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM vt1 INNER JOIN v0 ON (+ (((vt1.c0)-(x'b0c7')))));
SELECT * FROM vt1 INNER JOIN v0 ON (+ (((vt1.c0)-(x'b0c7')))) WHERE ((- (NULL)));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt1.c0)))AND(vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt0, vt1 WHERE ((~ (((vt0.c2)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2)<>(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((~ (((vt0.c2)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2)<>(v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE ((~ (((vt0.c2)!=(v0.c0)))));
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((NULL)) BETWEEN ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))) AND ((json(vt0.c2))))) ORDER BY (- (((((((((v0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))) AND ((json(vt0.c2))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (- (((((((((v0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) ASC);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((NULL)) BETWEEN ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))) AND ((json(vt0.c2))))) ORDER BY (- (((((((((v0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((((((vt1.c0)OR(v0.c0)))AND(v0.c0)))) AND ((json(vt0.c2))))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (- (((((((((v0.c0)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)>=(v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE ((v0.c0)LIKE(v0.c0)) END);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((- (((x'') IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((x'') IS FALSE)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((- (((x'') IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((x'') IS FALSE)))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, v0 NATURAL JOIN vt1 WHERE ((- (((x'') IS FALSE))));
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY 'W\r-.' DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY 'W\r-.' DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY 'W\r-.' DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY 'W\r-.' DESC);
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) ORDER BY 'W\r-.' DESC;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS REAL) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS REAL) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt1.c0 END DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS REAL) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS REAL) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt1.c0 END DESC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY CASE ((vt1.c0)IS NOT(vt1.c0))  WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOT NULL) THEN CAST(vt1.c0 AS REAL) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt1.c0 END DESC;
SELECT * FROM vt0, vt1 NOT INDEXED, v0 WHERE ((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)) IN ())) ORDER BY vt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY vt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 NOT INDEXED, v0 WHERE ((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)) IN ())) ORDER BY vt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY vt0.c2 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0, vt1 NOT INDEXED, v0 WHERE ((((((v0.c0)OR(vt0.c2)))AND(vt0.c2)) IN ())) ORDER BY vt0.c2 COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt1.c0 THEN (+ (v0.c0)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (+ (v0.c0)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt1.c0 THEN (+ (v0.c0)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (+ (v0.c0)) ELSE CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt1.c0 THEN (+ (v0.c0)) ELSE CAST(vt1.c0 AS REAL) END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6812930045961052);
SELECT SUM(count) FROM (SELECT ((0.6812930045961052) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6812930045961052);
SELECT SUM(count) FROM (SELECT ((0.6812930045961052) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.6812930045961052);
SELECT ALL * FROM vt1 WHERE (GLOB(((vt1.c0) NOTNULL), vt1.c0));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt1.c0) NOTNULL), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (GLOB(((vt1.c0) NOTNULL), vt1.c0));
SELECT SUM(count) FROM (SELECT ((GLOB(((vt1.c0) NOTNULL), vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (GLOB(((vt1.c0) NOTNULL), vt1.c0));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((LIKELY(v0.c0)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0)))) AND ((vt0.c2 IN (vt0.c2)))) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (NULL) ORDER BY ((CAST(vt0.c2 AS BLOB))>>((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((LIKELY(v0.c0)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0)))) AND ((vt0.c2 IN (vt0.c2)))) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY ((CAST(vt0.c2 AS BLOB))>>((~ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((LIKELY(v0.c0)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0)))) AND ((vt0.c2 IN (vt0.c2)))) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (NULL) ORDER BY ((CAST(vt0.c2 AS BLOB))>>((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((LIKELY(v0.c0)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0)))) AND ((vt0.c2 IN (vt0.c2)))) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) ORDER BY ((CAST(vt0.c2 AS BLOB))>>((~ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((LIKELY(v0.c0)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt1.c0)))) AND ((vt0.c2 IN (vt0.c2)))) CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS INTEGER) AS NUMERIC) WHERE (NULL) ORDER BY ((CAST(vt0.c2 AS BLOB))>>((~ (vt1.c0)))) ASC;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((- (((0.60548211021061)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.60548211021061)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((- (((0.60548211021061)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((0.60548211021061)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((- (((0.60548211021061)<=(vt1.c0)))));
SELECT * FROM v0, vt0 WHERE (((((MAX(vt0.c2, x''))OR((- (v0.c0)))))OR(vt0.c2))) ORDER BY json_patch(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)), CAST(vt0.c0 AS INTEGER)), (((v0.c0) NOT NULL) IN (vt0.c0, vt0.c0)) DESC, (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND ((('-1717288797')&(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((MAX(vt0.c2, x''))OR((- (v0.c0)))))OR(vt0.c2))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_patch(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)), CAST(vt0.c0 AS INTEGER)), (((v0.c0) NOT NULL) IN (vt0.c0, vt0.c0)) DESC, (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND ((('-1717288797')&(x'')))) ASC);
SELECT * FROM v0, vt0 WHERE (((((MAX(vt0.c2, x''))OR((- (v0.c0)))))OR(vt0.c2))) ORDER BY json_patch(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)), CAST(vt0.c0 AS INTEGER)), (((v0.c0) NOT NULL) IN (vt0.c0, vt0.c0)) DESC, (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND ((('-1717288797')&(x'')))) ASC;
SELECT SUM(count) FROM (SELECT ((((((MAX(vt0.c2, x''))OR((- (v0.c0)))))OR(vt0.c2))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_patch(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)), CAST(vt0.c0 AS INTEGER)), (((v0.c0) NOT NULL) IN (vt0.c0, vt0.c0)) DESC, (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND ((('-1717288797')&(x'')))) ASC);
SELECT * FROM v0, vt0 WHERE (((((MAX(vt0.c2, x''))OR((- (v0.c0)))))OR(vt0.c2))) ORDER BY json_patch(((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)), CAST(vt0.c0 AS INTEGER)), (((v0.c0) NOT NULL) IN (vt0.c0, vt0.c0)) DESC, (((vt0.c2 IN ())) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND ((('-1717288797')&(x'')))) ASC;
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)-('-lRR^2éš”{')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)-('-lRR^2éš”{')) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)-('-lRR^2éš”{')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)-('-lRR^2éš”{')) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)-('-lRR^2éš”{')) AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE v0.c0 END) ORDER BY ((((v0.c0)<=(v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '1275996890' END)) ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '1275996890' END)) ASC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE v0.c0 END) ORDER BY ((((v0.c0)<=(v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '1275996890' END)) ASC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<=(v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '1275996890' END)) ASC  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN CAST(v0.c0 AS REAL) ELSE v0.c0 END) ORDER BY ((((v0.c0)<=(v0.c0)))GLOB(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '1275996890' END)) ASC  NULLS LAST, NULL;
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS INTEGER))==(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))==(v0.c0)));
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS INTEGER))==(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER))==(v0.c0)));
SELECT ALL * FROM v0, vt1 WHERE (((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) IS FALSE)) ORDER BY ((CAST(vt1.c0 AS INTEGER))==(v0.c0));
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0)==(vt0.c1)), LIKELIHOOD(vt0.c1, 0.03250703236351782), (~ (v0.c0)), ((vt0.c2)IS NOT(vt0.c2)))) ORDER BY (((+ (v0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0)=(vt0.c1)), LIKELIHOOD(vt0.c1, 0.03250703236351782), (~ (v0.c0)), ((vt0.c2)IS NOT(vt0.c2)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((+ (v0.c0))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0)==(vt0.c1)), LIKELIHOOD(vt0.c1, 0.03250703236351782), (~ (v0.c0)), ((vt0.c2)IS NOT(vt0.c2)))) ORDER BY (((+ (v0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0)=(vt0.c1)), LIKELIHOOD(vt0.c1, 0.03250703236351782), (~ (v0.c0)), ((vt0.c2)IS NOT(vt0.c2)))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (((+ (v0.c0))) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (COALESCE(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END, ((vt0.c0)==(vt0.c1)), LIKELIHOOD(vt0.c1, 0.03250703236351782), (~ (v0.c0)), ((vt0.c2)IS NOT(vt0.c2)))) ORDER BY (((+ (v0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((LIKE(vt0.c0, vt0.c1, ')'))OR(((v0.c0)IS NOT(v0.c0)))))OR(((((((((((((vt0.c0)AND(0.5937111747724151)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKE(vt0.c0, vt0.c1, ')'))OR(((v0.c0)IS NOT(v0.c0)))))OR(((((((((((((vt0.c0)AND(0.5937111747724151)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((LIKE(vt0.c0, vt0.c1, ')'))OR(((v0.c0)IS NOT(v0.c0)))))OR(((((((((((((vt0.c0)AND(0.5937111747724151)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKE(vt0.c0, vt0.c1, ')'))OR(((v0.c0)IS NOT(v0.c0)))))OR(((((((((((((vt0.c0)AND(0.5937111747724151)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((((LIKE(vt0.c0, vt0.c1, ')'))OR(((v0.c0)IS NOT(v0.c0)))))OR(((((((((((((vt0.c0)AND(0.5937111747724151)))OR(vt1.c0)))AND(vt0.c2)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE (- (NULL))  WHEN 0.7861992902006325 THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (NULL))  WHEN 0.7861992902006325 THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE (- (NULL))  WHEN 0.7861992902006325 THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (NULL))  WHEN 0.7861992902006325 THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE (- (NULL))  WHEN 0.7861992902006325 THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c0)) ELSE (vt0.c0 IN ()) END);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN v0.c0 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt1, vt0 NOT INDEXED WHERE (ABS(TRIM(vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT))IS(0Xffffffffea4e0401)) ASC, (((((vt0.c0)!=(vt1.c0))))<>((((vt0.c2)>=(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))IS(0Xffffffffea4e0401)) ASC, (((((vt0.c0)<>(vt1.c0))))!=((((vt0.c2)>=(vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 NOT INDEXED WHERE (ABS(TRIM(vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT))IS(0Xffffffffea4e0401)) ASC, (((((vt0.c0)!=(vt1.c0))))<>((((vt0.c2)>=(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(TRIM(vt0.c0))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))IS(0Xffffffffea4e0401)) ASC, (((((vt0.c0)<>(vt1.c0))))!=((((vt0.c2)>=(vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 NOT INDEXED WHERE (ABS(TRIM(vt0.c0))) ORDER BY ((CAST(vt0.c0 AS TEXT))IS(0Xffffffffea4e0401)) ASC, (((((vt0.c0)!=(vt1.c0))))<>((((vt0.c2)>=(vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)-(v0.c0)) IN ()));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((vt0.c2) NOTNULL))GLOB((+ (v0.c0))))) ORDER BY (+ (((((x'')OR(vt0.c1)))OR(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL))GLOB((+ (v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (+ (((((x'')OR(vt0.c1)))OR(vt0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((vt0.c2) NOTNULL))GLOB((+ (v0.c0))))) ORDER BY (+ (((((x'')OR(vt0.c1)))OR(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL))GLOB((+ (v0.c0))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (+ (((((x'')OR(vt0.c1)))OR(vt0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((((vt0.c2) NOTNULL))GLOB((+ (v0.c0))))) ORDER BY (+ (((((x'')OR(vt0.c1)))OR(vt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY CAST(v0.c0 AS REAL) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((((vt1.c0) IS TRUE)))));
SELECT ALL * FROM vt0, v0 WHERE (0.6213736100753189);
SELECT SUM(count) FROM (SELECT ((0.6213736100753189) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0.6213736100753189);
SELECT SUM(count) FROM (SELECT ((0.6213736100753189) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (0.6213736100753189);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((v0.c0)) BETWEEN ((((((vt0.c2)OR(v0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN ((((((vt0.c2)OR(v0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((v0.c0)) BETWEEN ((((((vt0.c2)OR(v0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) BETWEEN ((((((vt0.c2)OR(v0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c1)))))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((v0.c0)) BETWEEN ((((((vt0.c2)OR(v0.c0)))OR(vt0.c0)))) AND (((NOT (vt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN v0 ON CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN v0 ON CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN v0 ON CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN v0 ON CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT) WHERE (NULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) NOT NULL)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN ']' THEN vt1.c0 WHEN 0.6213736100753189 THEN '102166888' END) AND (((v0.c0)*(vt1.c0)))) WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) NOT NULL)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN ']' THEN vt1.c0 WHEN 0.6213736100753189 THEN '102166888' END) AND (((v0.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) NOT NULL)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN ']' THEN vt1.c0 WHEN 0.6213736100753189 THEN '102166888' END) AND (((v0.c0)*(vt1.c0)))) WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) NOT NULL)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN ']' THEN vt1.c0 WHEN 0.6213736100753189 THEN '102166888' END) AND (((v0.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON ((((v0.c0) NOT NULL)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN vt1.c0 WHEN ']' THEN vt1.c0 WHEN 0.6213736100753189 THEN '102166888' END) AND (((v0.c0)*(vt1.c0)))) WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c0)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c0)GLOB(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN (CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END) AND (((vt0.c0)GLOB(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ('980265102') ORDER BY ((-1e500) NOT BETWEEN (LOWER(vt0.c1)) AND (UPPER(DISTINCT x'23de'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('980265102') IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((-1e500) NOT BETWEEN (LOWER(vt0.c1)) AND (UPPER(DISTINCT x'23de'))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ('980265102') ORDER BY ((-1e500) NOT BETWEEN (LOWER(vt0.c1)) AND (UPPER(DISTINCT x'23de'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('980265102') IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY ((-1e500) NOT BETWEEN (LOWER(vt0.c1)) AND (UPPER(DISTINCT x'23de'))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ('980265102') ORDER BY ((-1e500) NOT BETWEEN (LOWER(vt0.c1)) AND (UPPER(DISTINCT x'23de'))) ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(v0.c0, 0.6738797718203443)) AND (((vt0.c1)<=(1105912462)))) RIGHT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN x'39d1' END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END) AND ((((vt1.c0))<((v0.c0))))) WHERE (CAST(((vt0.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(v0.c0, 0.6738797718203443)) AND (((vt0.c1)<=(1105912462)))) RIGHT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN x'39d1' END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END) AND ((((vt1.c0))<((v0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(v0.c0, 0.6738797718203443)) AND (((vt0.c1)<=(1105912462)))) RIGHT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN x'39d1' END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END) AND ((((vt1.c0))<((v0.c0))))) WHERE (CAST(((vt0.c2) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (LIKELIHOOD(v0.c0, 0.6738797718203443)) AND (((vt0.c1)<=(1105912462)))) RIGHT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c2 THEN x'39d1' END) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c2 END) AND ((((vt1.c0))<((v0.c0))))));
SELECT * FROM vt0, v0, vt1 WHERE ((((- (vt0.c2))) NOTNULL)) ORDER BY (TYPEOF(DISTINCT vt0.c1) IN (((vt0.c0)GLOB(vt0.c2)), (~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (TYPEOF(DISTINCT vt0.c1) IN (((vt0.c0)GLOB(vt0.c2)), (~ (vt0.c1)))));
SELECT * FROM vt0, v0, vt1 WHERE ((((- (vt0.c2))) NOTNULL)) ORDER BY (TYPEOF(DISTINCT vt0.c1) IN (((vt0.c0)GLOB(vt0.c2)), (~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (TYPEOF(DISTINCT vt0.c1) IN (((vt0.c0)GLOB(vt0.c2)), (~ (vt0.c1)))));
SELECT * FROM vt0, v0, vt1 WHERE ((((- (vt0.c2))) NOTNULL)) ORDER BY (TYPEOF(DISTINCT vt0.c1) IN (((vt0.c0)GLOB(vt0.c2)), (~ (vt0.c1))));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt1.c0)))IS(vt0.c0))) ORDER BY (vt0.c2 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (vt0.c2 IN ())  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt1.c0)))IS(vt0.c0))) ORDER BY (vt0.c2 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))IS(vt0.c0))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (vt0.c2 IN ())  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt1.c0)))IS(vt0.c0))) ORDER BY (vt0.c2 IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((NULL IN ())) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE ((NULL IN ())) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE ((NULL IN ())) ORDER BY v0.c0 ASC;
SELECT ALL * FROM vt0, vt1 WHERE (CAST('2122800595' AS INTEGER)) ORDER BY UPPER(DISTINCT ((vt0.c2)IS NOT(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('2122800595' AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY UPPER(DISTINCT ((vt0.c2)IS NOT(vt0.c1))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST('2122800595' AS INTEGER)) ORDER BY UPPER(DISTINCT ((vt0.c2)IS NOT(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('2122800595' AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY UPPER(DISTINCT ((vt0.c2)IS NOT(vt0.c1))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CAST('2122800595' AS INTEGER)) ORDER BY UPPER(DISTINCT ((vt0.c2)IS NOT(vt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'306e') ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'306e') IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'306e') ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'306e') IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'306e') ORDER BY vt0.c2 DESC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE ((((v0.c0, '0.12585344821469147', v0.c0, vt1.c0, '*')) BETWEEN (((+ (vt1.c0)), TRIM(v0.c0), (v0.c0 IN ()), v0.c0, ((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)), IFNULL(vt1.c0, v0.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'ff3b' END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, '0.12585344821469147', v0.c0, vt1.c0, '*')) BETWEEN (((+ (vt1.c0)), TRIM(v0.c0), (v0.c0 IN ()), v0.c0, ((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)), IFNULL(vt1.c0, v0.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'ff3b' END)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((v0.c0, '0.12585344821469147', v0.c0, vt1.c0, '*')) BETWEEN (((+ (vt1.c0)), TRIM(v0.c0), (v0.c0 IN ()), v0.c0, ((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)), IFNULL(vt1.c0, v0.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'ff3b' END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, '0.12585344821469147', v0.c0, vt1.c0, '*')) BETWEEN (((+ (vt1.c0)), TRIM(v0.c0), (v0.c0 IN ()), v0.c0, ((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)), IFNULL(vt1.c0, v0.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'ff3b' END)))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((v0.c0, '0.12585344821469147', v0.c0, vt1.c0, '*')) BETWEEN (((+ (vt1.c0)), TRIM(v0.c0), (v0.c0 IN ()), v0.c0, ((((v0.c0)OR(v0.c0)))AND(vt1.c0)))) AND ((((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0, vt1.c0)), ((((vt1.c0)OR(v0.c0)))OR(vt1.c0)), IFNULL(vt1.c0, v0.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE x'ff3b' END))));
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))AND(vt0.c2)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))OR(UPPER(vt0.c0))))OR((((((((('')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2, x'', vt0.c0, vt0.c2, vt0.c1))!=((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))AND(vt0.c2)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))OR(UPPER(vt0.c0))))OR((((((((('')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2, x'', vt0.c0, vt0.c2, vt0.c1))<>((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))AND(vt0.c2)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))OR(UPPER(vt0.c0))))OR((((((((('')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2, x'', vt0.c0, vt0.c2, vt0.c1))!=((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))AND(vt0.c2)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))OR(UPPER(vt0.c0))))OR((((((((('')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2, x'', vt0.c0, vt0.c2, vt0.c1))<>((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)))AND(vt0.c2)))OR(((vt0.c0) IS FALSE))))AND((vt0.c0 IN ()))))OR(UPPER(vt0.c0))))OR((((((((('')AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c0)))))OR((((vt0.c2, x'', vt0.c0, vt0.c2, vt0.c1))!=((vt0.c1, vt0.c2, vt0.c2, vt0.c2, vt0.c1))))));
SELECT COUNT(*) FROM vt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS FIRST, (((NOT (v0.c0)))<('0.08726388026484444' COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS FIRST, (((NOT (v0.c0)))<('0.08726388026484444' COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS FIRST, (((NOT (v0.c0)))<('0.08726388026484444' COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS FIRST, (((NOT (v0.c0)))<('0.08726388026484444' COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB) DESC  NULLS FIRST, (((NOT (v0.c0)))<('0.08726388026484444' COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffff9bcb0cd2);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff9bcb0cd2) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffff9bcb0cd2);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff9bcb0cd2) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0xffffffff9bcb0cd2);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LOWER(vt0.c2 COLLATE BINARY)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LOWER(vt0.c2 COLLATE BINARY)) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, v0 ORDER BY x'');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (LOWER(vt0.c2 COLLATE BINARY)) ORDER BY x'';
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON x'' WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(QUOTE(vt0.c2))))AND(((v0.c0)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(QUOTE(vt0.c2))))AND(((v0.c0)-(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON x'');
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON x'' WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(QUOTE(vt0.c2))))AND(((v0.c0)-(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(QUOTE(vt0.c2))))AND(((v0.c0)-(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON x'');
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON x'' WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(QUOTE(vt0.c2))))AND(((v0.c0)-(vt0.c1)))));
SELECT * FROM vt1, v0, vt0 WHERE (DATE('j%	c', ((v0.c0)=(v0.c0)), CAST(vt0.c1 AS TEXT))) ORDER BY (~ (((vt1.c0)>(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE('j%	c', ((v0.c0)==(v0.c0)), CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (~ (((vt1.c0)>(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE (DATE('j%	c', ((v0.c0)=(v0.c0)), CAST(vt0.c1 AS TEXT))) ORDER BY (~ (((vt1.c0)>(vt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE('j%	c', ((v0.c0)==(v0.c0)), CAST(vt0.c1 AS TEXT))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (~ (((vt1.c0)>(vt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt1, v0, vt0 WHERE (DATE('j%	c', ((v0.c0)=(v0.c0)), CAST(vt0.c1 AS TEXT))) ORDER BY (~ (((vt1.c0)>(vt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CASE 0xffffffffb90e3b62  WHEN vt0.c0 THEN vt0.c2 END)))OR((((v0.c0))>((vt1.c0))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CASE 0xffffffffb90e3b62  WHEN vt0.c0 THEN vt0.c2 END)))OR((((v0.c0))>((vt1.c0))))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CASE 0xffffffffb90e3b62  WHEN vt0.c0 THEN vt0.c2 END)))OR((((v0.c0))>((vt1.c0))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CASE 0xffffffffb90e3b62  WHEN vt0.c0 THEN vt0.c2 END)))OR((((v0.c0))>((vt1.c0))))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN v0 ON ((((((v0.c0)<>(vt1.c0)))OR(CASE 0xffffffffb90e3b62  WHEN vt0.c0 THEN vt0.c2 END)))OR((((v0.c0))>((vt1.c0))))) WHERE (vt1.c0);
SELECT * FROM v0 NOT INDEXED NATURAL JOIN vt0 WHERE (STRFTIME((NOT (0.7613477657032559)), ((vt0.c2) IS FALSE), ((v0.c0)>=(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((NOT (0.7613477657032559)), ((vt0.c2) IS FALSE), ((v0.c0)>=(vt0.c2)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NOT INDEXED NATURAL JOIN vt0 WHERE (STRFTIME((NOT (0.7613477657032559)), ((vt0.c2) IS FALSE), ((v0.c0)>=(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME((NOT (0.7613477657032559)), ((vt0.c2) IS FALSE), ((v0.c0)>=(vt0.c2)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT * FROM v0 NOT INDEXED NATURAL JOIN vt0 WHERE (STRFTIME((NOT (0.7613477657032559)), ((vt0.c2) IS FALSE), ((v0.c0)>=(vt0.c2))));
SELECT COUNT(*) FROM v0 WHERE ((UPPER(DISTINCT v0.c0) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ()) ASC  NULLS LAST, ((((- (v0.c0))))<=((((v0.c0)||(x''))))) DESC  NULLS LAST, 0Xffffffff9f5e7fd5  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ()) ASC  NULLS LAST, ((((- (v0.c0))))<=((((v0.c0)||(x''))))) DESC  NULLS LAST, 0Xffffffff9f5e7fd5  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((UPPER(DISTINCT v0.c0) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ()) ASC  NULLS LAST, ((((- (v0.c0))))<=((((v0.c0)||(x''))))) DESC  NULLS LAST, 0Xffffffff9f5e7fd5  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ()) ASC  NULLS LAST, ((((- (v0.c0))))<=((((v0.c0)||(x''))))) DESC  NULLS LAST, 0Xffffffff9f5e7fd5  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((UPPER(DISTINCT v0.c0) IN ())) ORDER BY (v0.c0 IN ()) COLLATE NOCASE  NULLS LAST, ((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) IN ()) ASC  NULLS LAST, ((((- (v0.c0))))<=((((v0.c0)||(x''))))) DESC  NULLS LAST, 0Xffffffff9f5e7fd5  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c2))=((vt0.c2))))IS(LOWER(DISTINCT vt0.c1)))) ORDER BY CAST(((vt0.c0)LIKE(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))==((vt0.c2))))IS(LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0)LIKE(vt1.c0)) AS INTEGER) ASC);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c2))=((vt0.c2))))IS(LOWER(DISTINCT vt0.c1)))) ORDER BY CAST(((vt0.c0)LIKE(vt1.c0)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2))==((vt0.c2))))IS(LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0)LIKE(vt1.c0)) AS INTEGER) ASC);
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c2))=((vt0.c2))))IS(LOWER(DISTINCT vt0.c1)))) ORDER BY CAST(((vt0.c0)LIKE(vt1.c0)) AS INTEGER) ASC;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL), vt0.c0  NULLS FIRST, (NOT (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((vt0.c1) ISNULL), vt0.c0  NULLS FIRST, (NOT (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL), vt0.c0  NULLS FIRST, (NOT (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((vt0.c1) ISNULL), vt0.c0  NULLS FIRST, (NOT (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((- ((vt0.c0 IN ())))) ORDER BY ((vt0.c1) ISNULL), vt0.c0  NULLS FIRST, (NOT (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c2)))) ASC;
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(LIKELY(DISTINCT 0.4552259174169977) AS INTEGER)) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT 0.4552259174169977) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(LIKELY(DISTINCT 0.4552259174169977) AS INTEGER)) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(DISTINCT 0.4552259174169977) AS INTEGER)) IS TRUE)  as count FROM vt1, v0 ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(LIKELY(DISTINCT 0.4552259174169977) AS INTEGER)) ORDER BY CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((LIKELIHOOD(v0.c0, 0.2570251278159936))>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1085024713 THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.2570251278159936))>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1085024713 THEN v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((LIKELIHOOD(v0.c0, 0.2570251278159936))>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1085024713 THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.2570251278159936))>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1085024713 THEN v0.c0 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((LIKELIHOOD(v0.c0, 0.2570251278159936))>(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) DESC, CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 1085024713 THEN v0.c0 END COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt1.c0 AS INTEGER)) WHERE (CAST('2122800595' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('2122800595' AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt1.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt1.c0 AS INTEGER)) WHERE (CAST('2122800595' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST('2122800595' AS BLOB)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt1.c0 AS INTEGER)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(vt1.c0 AS INTEGER)) WHERE (CAST('2122800595' AS BLOB));
SELECT * FROM v0 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)!=(v0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt1.c0  WHEN v0.c0 THEN -1.408551956E9 END END WHERE ((((- (-0.0))) BETWEEN ((((-3.63985919E8))>=((vt1.c0)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (-0.0))) BETWEEN ((((-3.63985919E8))>=((vt1.c0)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)<>(v0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt1.c0  WHEN v0.c0 THEN -1.408551956E9 END END);
SELECT * FROM v0 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)!=(v0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt1.c0  WHEN v0.c0 THEN -1.408551956E9 END END WHERE ((((- (-0.0))) BETWEEN ((((-3.63985919E8))>=((vt1.c0)))) AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((- (-0.0))) BETWEEN ((((-3.63985919E8))>=((vt1.c0)))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)<>(v0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt1.c0  WHEN v0.c0 THEN -1.408551956E9 END END);
SELECT * FROM v0 INNER JOIN vt1 ON CASE (((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0)))  WHEN ((vt1.c0)!=(v0.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt1.c0  WHEN v0.c0 THEN -1.408551956E9 END END WHERE ((((- (-0.0))) BETWEEN ((((-3.63985919E8))>=((vt1.c0)))) AND ((v0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c1) ISNULL)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c1) ISNULL)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c1 AS TEXT) IN (((vt0.c1) ISNULL)))) ORDER BY ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM v0, vt0, vt1 WHERE (NULLIF(CAST(vt1.c0 AS BLOB), ((vt0.c1)>>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt1.c0 AS BLOB), ((vt0.c1)>>(vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (NULLIF(CAST(vt1.c0 AS BLOB), ((vt0.c1)>>(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(vt1.c0 AS BLOB), ((vt0.c1)>>(vt1.c0)))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (NULLIF(CAST(vt1.c0 AS BLOB), ((vt0.c1)>>(vt1.c0))));
SELECT * FROM vt0, v0, vt1 WHERE ((+ (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE ((+ (vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE ((+ (vt0.c2 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN COALESCE('-1794610145', v0.c0) WHEN (((v0.c0))<=((v0.c0))) THEN (v0.c0 IN ()) ELSE ((v0.c0)=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN COALESCE('-1794610145', v0.c0) WHEN (((v0.c0))<=((v0.c0))) THEN (v0.c0 IN ()) ELSE ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN COALESCE('-1794610145', v0.c0) WHEN (((v0.c0))<=((v0.c0))) THEN (v0.c0 IN ()) ELSE ((v0.c0)=(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN COALESCE('-1794610145', v0.c0) WHEN (((v0.c0))<=((v0.c0))) THEN (v0.c0 IN ()) ELSE ((v0.c0)==(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(v0.c0 AS TEXT) WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN COALESCE('-1794610145', v0.c0) WHEN (((v0.c0))<=((v0.c0))) THEN (v0.c0 IN ()) ELSE ((v0.c0)=(v0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (1085024713);
SELECT SUM(count) FROM (SELECT ((1085024713) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (1085024713);
SELECT SUM(count) FROM (SELECT ((1085024713) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (1085024713);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((x'6744')AND(v0.c0)))OR(v0.c0)))) WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((x'6744')AND(v0.c0)))OR(v0.c0)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((x'6744')AND(v0.c0)))OR(v0.c0)))) WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((x'6744')AND(v0.c0)))OR(v0.c0)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) IS FALSE) ASC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON (NOT (((((x'6744')AND(v0.c0)))OR(v0.c0)))) WHERE (vt0.c1) ORDER BY ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0))) IS FALSE) ASC;
SELECT * FROM vt1, v0 WHERE ('lM2	ï¿¿d');
SELECT SUM(count) FROM (SELECT (('lM2	ï¿¿d') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ('lM2	ï¿¿d');
SELECT SUM(count) FROM (SELECT (('lM2	ï¿¿d') IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE ('lM2	ï¿¿d');
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (- (vt0.c1)))) ORDER BY CASE WHEN vt1.c0 THEN -1.715170391E9 ELSE ((vt0.c1)<(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (- (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN -1.715170391E9 ELSE ((vt0.c1)<(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (- (vt0.c1)))) ORDER BY CASE WHEN vt1.c0 THEN -1.715170391E9 ELSE ((vt0.c1)<(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (- (vt0.c1)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN -1.715170391E9 ELSE ((vt0.c1)<(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (UNLIKELY(DISTINCT (- (vt0.c1)))) ORDER BY CASE WHEN vt1.c0 THEN -1.715170391E9 ELSE ((vt0.c1)<(vt0.c0)) END DESC  NULLS LAST;
SELECT * FROM v0, vt1, vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c2))<=((v0.c0, v0.c0, vt0.c1))) THEN ((vt0.c2) NOT NULL) WHEN vt0.c1 THEN ((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN CAST(x'9386' AS INTEGER) ELSE ((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0))=((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c2))<=((v0.c0, v0.c0, vt0.c1))) THEN ((vt0.c2) NOT NULL) WHEN vt0.c1 THEN ((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN CAST(x'9386' AS INTEGER) ELSE ((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt0.c0))=((v0.c0))) IN ()));
SELECT * FROM v0, vt1, vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c2))<=((v0.c0, v0.c0, vt0.c1))) THEN ((vt0.c2) NOT NULL) WHEN vt0.c1 THEN ((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN CAST(x'9386' AS INTEGER) ELSE ((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0))=((v0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c2))<=((v0.c0, v0.c0, vt0.c1))) THEN ((vt0.c2) NOT NULL) WHEN vt0.c1 THEN ((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN CAST(x'9386' AS INTEGER) ELSE ((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt0.c0))=((v0.c0))) IN ()));
SELECT * FROM v0, vt1, vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c2))<=((v0.c0, v0.c0, vt0.c1))) THEN ((vt0.c2) NOT NULL) WHEN vt0.c1 THEN ((((((((vt0.c0)OR(v0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN CAST(x'9386' AS INTEGER) ELSE ((v0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END) ORDER BY ((((vt0.c0))=((v0.c0))) IN ());
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((x'') BETWEEN (vt1.c0) AND (vt1.c0)))||(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1 NOT INDEXED, v0 CROSS JOIN vt0 ON (((+ (vt0.c1))) NOT NULL) WHERE ((((vt0.c2)) BETWEEN ((vt1.c0)) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((vt1.c0)) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON (((+ (vt0.c1))) NOT NULL));
SELECT * FROM vt1 NOT INDEXED, v0 CROSS JOIN vt0 ON (((+ (vt0.c1))) NOT NULL) WHERE ((((vt0.c2)) BETWEEN ((vt1.c0)) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((vt1.c0)) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON (((+ (vt0.c1))) NOT NULL));
SELECT * FROM vt1 NOT INDEXED, v0 CROSS JOIN vt0 ON (((+ (vt0.c1))) NOT NULL) WHERE ((((vt0.c2)) BETWEEN ((vt1.c0)) AND (((- (vt0.c1))))));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((v0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((v0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER))) AND ((((v0.c0) NOTNULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c2))))) ORDER BY (((vt0.c1, vt0.c0, '-1475725307')) NOT BETWEEN (((vt0.c2 IN (vt0.c1, 1171970226)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (NOT (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)GLOB(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, '-1475725307')) NOT BETWEEN (((vt0.c2 IN (vt0.c1, 1171970226)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (NOT (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)GLOB(NULL))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c2))))) ORDER BY (((vt0.c1, vt0.c0, '-1475725307')) NOT BETWEEN (((vt0.c2 IN (vt0.c1, 1171970226)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (NOT (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)GLOB(NULL))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, '-1475725307')) NOT BETWEEN (((vt0.c2 IN (vt0.c1, 1171970226)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (NOT (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)GLOB(NULL))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))) NOT BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (((vt0.c1)<<(vt0.c2))))) ORDER BY (((vt0.c1, vt0.c0, '-1475725307')) NOT BETWEEN (((vt0.c2 IN (vt0.c1, 1171970226)), ((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (NOT (vt0.c1)))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c2)GLOB(NULL))))) DESC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE (v0.c0 COLLATE NOCASE);
SELECT * FROM vt1, v0 WHERE (((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)*(0.295881238782821)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1) ISNULL) THEN x'' WHEN (((v0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, '-505820935')) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((vt0.c2)<(vt0.c1)) WHEN NULL THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) ISNULL) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 ELSE 'ZO' END)>=(CASE 0.7860616827375893  WHEN vt0.c0 THEN 'PnDb9ë½œ' END)), ((((vt0.c2) NOT NULL))&(((vt0.c1)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)*(0.295881238782821)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1) ISNULL) THEN x'' WHEN (((v0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, '-505820935')) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((vt0.c2)<(vt0.c1)) WHEN NULL THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) ISNULL) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 ELSE 'ZO' END)>=(CASE 0.7860616827375893  WHEN vt0.c0 THEN 'PnDb9ë½œ' END)), ((((vt0.c2) NOT NULL))&(((vt0.c1)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)*(0.295881238782821)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1) ISNULL) THEN x'' WHEN (((v0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, '-505820935')) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((vt0.c2)<(vt0.c1)) WHEN NULL THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) ISNULL) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 ELSE 'ZO' END)>=(CASE 0.7860616827375893  WHEN vt0.c0 THEN 'PnDb9ë½œ' END)), ((((vt0.c2) NOT NULL))&(((vt0.c1)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)*(0.295881238782821)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1) ISNULL) THEN x'' WHEN (((v0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, '-505820935')) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((vt0.c2)<(vt0.c1)) WHEN NULL THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) ISNULL) THEN CAST(v0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 ELSE 'ZO' END)>=(CASE 0.7860616827375893  WHEN vt0.c0 THEN 'PnDb9ë½œ' END)), ((((vt0.c2) NOT NULL))&(((vt0.c1)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (CASE WHEN ((vt0.c0)*(0.295881238782821)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1) ISNULL) THEN x'' WHEN (((v0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, '-505820935')) AND ((v0.c0, v0.c0, vt0.c0))) THEN ((vt0.c2)<(vt0.c1)) WHEN NULL THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) ISNULL) THEN CAST(v0.c0 AS TEXT) END) ORDER BY ((CASE v0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 ELSE 'ZO' END)>=(CASE 0.7860616827375893  WHEN vt0.c0 THEN 'PnDb9ë½œ' END)), ((((vt0.c2) NOT NULL))&(((vt0.c1)<<(vt0.c1))));
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) AND ((TRIM(DISTINCT v0.c0, vt0.c0))))) ORDER BY (((+ (vt0.c2)))IS NOT((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) AND ((TRIM(DISTINCT v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY (((+ (vt0.c2)))IS NOT((NOT (vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) AND ((TRIM(DISTINCT v0.c0, vt0.c0))))) ORDER BY (((+ (vt0.c2)))IS NOT((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) AND ((TRIM(DISTINCT v0.c0, vt0.c0))))) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY (((+ (vt0.c2)))IS NOT((NOT (vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN ((((((vt0.c0)OR(vt0.c2)))OR(vt0.c1)))) AND ((TRIM(DISTINCT v0.c0, vt0.c0))))) ORDER BY (((+ (vt0.c2)))IS NOT((NOT (vt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((+ (vt0.c2)), ((x'') BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt1.c0)OR(vt0.c2)))OR(vt0.c0))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, (((vt0.c1))<=((vt0.c1))), (NOT (vt0.c1))))) WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((+ (vt0.c2)), ((x'') BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt1.c0)OR(vt0.c2)))OR(vt0.c0))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, (((vt0.c1))<=((vt0.c1))), (NOT (vt0.c1))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((+ (vt0.c2)), ((x'') BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt1.c0)OR(vt0.c2)))OR(vt0.c0))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, (((vt0.c1))<=((vt0.c1))), (NOT (vt0.c1))))) WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((+ (vt0.c2)), ((x'') BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt1.c0)OR(vt0.c2)))OR(vt0.c0))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, (((vt0.c1))<=((vt0.c1))), (NOT (vt0.c1))))));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((+ (vt0.c2)), ((x'') BETWEEN (vt1.c0) AND (vt0.c1)), ((((vt1.c0)OR(vt0.c2)))OR(vt0.c0))))>((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c2 END, (((vt0.c1))<=((vt0.c1))), (NOT (vt0.c1))))) WHERE ((- (vt1.c0 COLLATE NOCASE)));
SELECT * FROM vt1, v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c2, 0.9103876102185936))&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c2, 0.9103876102185936))&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c2, 0.9103876102185936))&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt0.c2, 0.9103876102185936))&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c2, 0.9103876102185936))&(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (UNLIKELY(DISTINCT CAST(v0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN ((+ (vt1.c0))) AND (CAST(vt0.c2 AS REAL))));
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))IS NOT((~ (v0.c0))))) ORDER BY CAST((- (NULL)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))IS NOT((~ (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((- (NULL)) AS TEXT) DESC);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))IS NOT((~ (v0.c0))))) ORDER BY CAST((- (NULL)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))IS NOT((~ (v0.c0))))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((- (NULL)) AS TEXT) DESC);
SELECT ALL * FROM vt1, v0 WHERE (((((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))IS NOT((~ (v0.c0))))) ORDER BY CAST((- (NULL)) AS TEXT) DESC;
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST('2134670653' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('2134670653' AS INTEGER)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST('2134670653' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('2134670653' AS INTEGER)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT COUNT(*) FROM v0, vt1, vt0 WHERE (CAST('2134670653' AS INTEGER));
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (IFNULL(vt0.c2, vt0.c2)) AND (((v0.c0)>=(282959373)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (IFNULL(vt0.c2, vt0.c2)) AND (((v0.c0)>=(282959373))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (IFNULL(vt0.c2, vt0.c2)) AND (((v0.c0)>=(282959373)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (IFNULL(vt0.c2, vt0.c2)) AND (((v0.c0)>=(282959373))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0) BETWEEN (IFNULL(vt0.c2, vt0.c2)) AND (((v0.c0)>=(282959373)))));
SELECT * FROM vt1, v0 WHERE (x'') ORDER BY LIKELY(DISTINCT CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY LIKELY(DISTINCT CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) ASC  NULLS FIRST, ''  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (x'') ORDER BY LIKELY(DISTINCT CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, v0 ORDER BY LIKELY(DISTINCT CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) ASC  NULLS FIRST, ''  NULLS LAST);
SELECT * FROM vt1, v0 WHERE (x'') ORDER BY LIKELY(DISTINCT CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END) ASC  NULLS FIRST, ''  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((+ (((vt0.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((+ (((vt0.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)!=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ((+ (((vt0.c0)!=(vt1.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN json_type(vt0.c0) THEN ((vt0.c2)<>(vt1.c0)) ELSE ((((NULL)AND(v0.c0)))AND(vt0.c0)) END RIGHT OUTER JOIN v0 ON (('b é¡°.kF*{è²¯')/(((((vt0.c1)AND(x'')))AND(vt0.c2)))) WHERE (CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN json_type(vt0.c0) THEN ((vt0.c2)<>(vt1.c0)) ELSE ((((NULL)AND(v0.c0)))AND(vt0.c0)) END RIGHT OUTER JOIN v0 ON (('b é¡°.kF*{è²¯')/(((((vt0.c1)AND(x'')))AND(vt0.c2)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN json_type(vt0.c0) THEN ((vt0.c2)<>(vt1.c0)) ELSE ((((NULL)AND(v0.c0)))AND(vt0.c0)) END RIGHT OUTER JOIN v0 ON (('b é¡°.kF*{è²¯')/(((((vt0.c1)AND(x'')))AND(vt0.c2)))) WHERE (CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt0.c1)))AND(vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))  WHEN json_type(vt0.c0) THEN ((vt0.c2)<>(vt1.c0)) ELSE ((((NULL)AND(v0.c0)))AND(vt0.c0)) END RIGHT OUTER JOIN v0 ON (('b é¡°.kF*{è²¯')/(((((vt0.c1)AND(x'')))AND(vt0.c2)))));
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'2b261289' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'2b261289' ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'2b261289' ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY x'2b261289' ASC);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0 COLLATE BINARY)AND((vt0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY))) ORDER BY x'2b261289' ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (- (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (- (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (- (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (- (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE (((vt1.c0)AND(CAST(vt1.c0 AS BLOB)))) ORDER BY (- (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0, vt0, vt1 WHERE (vt0.c1);
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), '') WHERE (((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt0.c2) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (~ (((vt0.c0)!=(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt0.c2) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), '') ORDER BY (~ (((vt0.c0)<>(vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), '') WHERE (((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt0.c2) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (~ (((vt0.c0)!=(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt0.c2) NOT BETWEEN (x'') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), '') ORDER BY (~ (((vt0.c0)<>(vt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt1 ON IFNULL(DISTINCT CAST(vt0.c0 AS INTEGER), '') WHERE (((CAST(vt1.c0 AS NUMERIC))IS NOT(((vt0.c2) NOT BETWEEN (x'') AND (vt0.c1))))) ORDER BY (~ (((vt0.c0)!=(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON RTRIM(((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) WHERE ('-1717288797') ORDER BY '' ASC, (((((NOT (vt0.c2)))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE 0.2914410001809452 END));
SELECT SUM(count) FROM (SELECT (('-1717288797') IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON RTRIM(((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) ORDER BY '' ASC, (((((NOT (vt0.c2)))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE 0.2914410001809452 END)));
SELECT ALL COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON RTRIM(((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) WHERE ('-1717288797') ORDER BY '' ASC, (((((NOT (vt0.c2)))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE 0.2914410001809452 END));
SELECT SUM(count) FROM (SELECT (('-1717288797') IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON RTRIM(((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) ORDER BY '' ASC, (((((NOT (vt0.c2)))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE 0.2914410001809452 END)));
SELECT ALL COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON RTRIM(((((vt0.c0)OR(v0.c0)))AND(vt0.c1))) WHERE ('-1717288797') ORDER BY '' ASC, (((((NOT (vt0.c2)))AND(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c0)))))AND(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE 0.2914410001809452 END));
SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE (TRIM(((vt0.c2)IS NOT(NULL))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2)IS NOT(NULL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE (TRIM(((vt0.c2)IS NOT(NULL))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c2)IS NOT(NULL)))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1 NOT INDEXED, v0 WHERE (TRIM(((vt0.c2)IS NOT(NULL))));
SELECT * FROM vt1, vt0, v0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<=(((((((((vt0.c2)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(v0.c0)))<=(((((((((vt0.c2)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<=(((((((((vt0.c2)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(v0.c0)))<=(((((((((vt0.c2)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT * FROM vt1, vt0, v0 WHERE (((((vt0.c0)IS NOT(v0.c0)))<=(((((((((vt0.c2)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))));
SELECT ALL * FROM vt1, v0 WHERE ((NOT (v0.c0))) ORDER BY (((((v0.c0) NOT BETWEEN ('') AND (vt1.c0))))==((x'190a'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((v0.c0) NOT BETWEEN ('') AND (vt1.c0))))=((x'190a'))) ASC);
SELECT ALL * FROM vt1, v0 WHERE ((NOT (v0.c0))) ORDER BY (((((v0.c0) NOT BETWEEN ('') AND (vt1.c0))))==((x'190a'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM vt1, v0 ORDER BY (((((v0.c0) NOT BETWEEN ('') AND (vt1.c0))))=((x'190a'))) ASC);
SELECT ALL * FROM vt1, v0 WHERE ((NOT (v0.c0))) ORDER BY (((((v0.c0) NOT BETWEEN ('') AND (vt1.c0))))==((x'190a'))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ ((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (+ ((vt1.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ ((vt1.c0 IN (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (+ ((vt1.c0 IN (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) IS FALSE)) ORDER BY (+ ((vt1.c0 IN (vt1.c0))));
SELECT * FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT * FROM vt0, v0, vt1 WHERE (NULL);
SELECT * FROM vt0, v0 WHERE ((~ (((vt0.c1)>=(vt0.c2))))) ORDER BY ((((vt0.c0)GLOB(vt0.c1)))/(((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)))) DESC, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)OR(vt0.c2)))OR(v0.c0)) WHEN ((vt0.c0) ISNULL) THEN 0.17642248721534715 WHEN (((vt0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c1))>((vt0.c1, v0.c0, vt0.c0, 605687612, 0.12585344821469147))) THEN (('j%	c')<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>=(vt0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)GLOB(vt0.c1)))/(((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)))) DESC, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)OR(vt0.c2)))OR(v0.c0)) WHEN ((vt0.c0) ISNULL) THEN 0.17642248721534715 WHEN (((vt0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c1))>((vt0.c1, v0.c0, vt0.c0, 605687612, 0.12585344821469147))) THEN (('j%	c')<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END);
SELECT * FROM vt0, v0 WHERE ((~ (((vt0.c1)>=(vt0.c2))))) ORDER BY ((((vt0.c0)GLOB(vt0.c1)))/(((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)))) DESC, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)OR(vt0.c2)))OR(v0.c0)) WHEN ((vt0.c0) ISNULL) THEN 0.17642248721534715 WHEN (((vt0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c1))>((vt0.c1, v0.c0, vt0.c0, 605687612, 0.12585344821469147))) THEN (('j%	c')<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1)>=(vt0.c2))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)GLOB(vt0.c1)))/(((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)))) DESC, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)OR(vt0.c2)))OR(v0.c0)) WHEN ((vt0.c0) ISNULL) THEN 0.17642248721534715 WHEN (((vt0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c1))>((vt0.c1, v0.c0, vt0.c0, 605687612, 0.12585344821469147))) THEN (('j%	c')<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END);
SELECT * FROM vt0, v0 WHERE ((~ (((vt0.c1)>=(vt0.c2))))) ORDER BY ((((vt0.c0)GLOB(vt0.c1)))/(((vt0.c2) BETWEEN (vt0.c1) AND (v0.c0)))) DESC, CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c1)OR(vt0.c2)))OR(v0.c0)) WHEN ((vt0.c0) ISNULL) THEN 0.17642248721534715 WHEN (((vt0.c2, vt0.c0, vt0.c1, vt0.c2, vt0.c1))>((vt0.c1, v0.c0, vt0.c0, 605687612, 0.12585344821469147))) THEN (('j%	c')<(vt0.c0)) ELSE ((vt0.c1) NOT NULL) END;
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)+(vt0.c2))) ISNULL)) ORDER BY ((((vt0.c2)<(x'')))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC, (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))==((vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<(x'')))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC, (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))==((vt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)+(vt0.c2))) ISNULL)) ORDER BY ((((vt0.c2)<(x'')))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC, (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))==((vt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)<(x'')))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC, (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))==((vt0.c2))) DESC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)+(vt0.c2))) ISNULL)) ORDER BY ((((vt0.c2)<(x'')))GLOB((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) ASC, (((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))==((vt0.c2))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE ((((('-1599987072') IS FALSE)) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) ORDER BY ((vt0.c1)>=(CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)), (((((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ()) DESC, ((LIKE(vt1.c0, vt0.c1, ' ')) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (PRINTF(vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-1599987072') IS FALSE)) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)>=(CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)), (((((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ()) DESC, ((LIKE(vt1.c0, vt0.c1, ' ')) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (PRINTF(vt0.c2))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((('-1599987072') IS FALSE)) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) ORDER BY ((vt0.c1)>=(CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)), (((((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ()) DESC, ((LIKE(vt1.c0, vt0.c1, ' ')) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (PRINTF(vt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-1599987072') IS FALSE)) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)>=(CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)), (((((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ()) DESC, ((LIKE(vt1.c0, vt0.c1, ' ')) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (PRINTF(vt0.c2))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((('-1599987072') IS FALSE)) BETWEEN (CAST(vt0.c2 AS INTEGER)) AND (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) ORDER BY ((vt0.c1)>=(CASE vt1.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c2 END)), (((((((((vt0.c2)OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)) IN ()) DESC, ((LIKE(vt1.c0, vt0.c1, ' ')) BETWEEN (CASE vt1.c0  WHEN vt0.c2 THEN vt0.c2 END) AND (PRINTF(vt0.c2))) ASC;
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN (CASE WHEN 0X5198f037 THEN vt1.c0 WHEN -2.091570725E9 THEN vt1.c0 WHEN 0.863967988977261 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))) ORDER BY ((('-861081302') IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN (CASE WHEN 0x5198f037 THEN vt1.c0 WHEN -2.091570725E9 THEN vt1.c0 WHEN 0.863967988977261 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((('-861081302') IS TRUE) IN ()) ASC);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN (CASE WHEN 0X5198f037 THEN vt1.c0 WHEN -2.091570725E9 THEN vt1.c0 WHEN 0.863967988977261 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))) ORDER BY ((('-861081302') IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN (CASE WHEN 0x5198f037 THEN vt1.c0 WHEN -2.091570725E9 THEN vt1.c0 WHEN 0.863967988977261 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY ((('-861081302') IS TRUE) IN ()) ASC);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN (CASE WHEN 0X5198f037 THEN vt1.c0 WHEN -2.091570725E9 THEN vt1.c0 WHEN 0.863967988977261 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))) ORDER BY ((('-861081302') IS TRUE) IN ()) ASC;
SELECT * FROM vt1 WHERE (((0.13825357715430286) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.13825357715430286) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.13825357715430286) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.13825357715430286) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((0.13825357715430286) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END))) ORDER BY ((NULL)||(CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((NULL)||(CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END))) ORDER BY ((NULL)||(CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((NULL)||(CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((((+ (vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt0.c2 END))) ORDER BY ((NULL)||(CASE WHEN vt0.c0 THEN vt1.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((vt1.c0) IS FALSE)) NOTNULL)) ORDER BY NULL  NULLS FIRST;
SELECT * FROM v0 WHERE (CAST(CAST(2134670653 AS BLOB) AS REAL)) ORDER BY (((('luW&gVw7') NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(2134670653 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((('luW&gVw7') NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(CAST(2134670653 AS BLOB) AS REAL)) ORDER BY (((('luW&gVw7') NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(2134670653 AS BLOB) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((('luW&gVw7') NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(CAST(2134670653 AS BLOB) AS REAL)) ORDER BY (((('luW&gVw7') NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))IS(HEX(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))IS(HEX(DISTINCT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))IS(HEX(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)OR(v0.c0)))IS(HEX(DISTINCT NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR(v0.c0)))IS(HEX(DISTINCT NULL))));
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((CAST(vt0.c2 AS INTEGER))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((vt0.c2 COLLATE RTRIM)GLOB((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c2, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM)GLOB((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c2, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((vt0.c2 COLLATE RTRIM)GLOB((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c2, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((vt0.c2 COLLATE RTRIM)GLOB((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c2, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((vt0.c2 COLLATE RTRIM)GLOB((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c2, vt0.c1, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (RTRIM(((('-251700962', vt0.c0, vt1.c0)) NOT BETWEEN ((0.6510377605620637, vt0.c1, vt1.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c0 AS BLOB) THEN CAST('' AS NUMERIC) WHEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c2)) END, (((((vt1.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2, 0.8805464406992127, vt1.c0)) AND ((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1))))>=((((vt0.c0))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('-251700962', vt0.c0, vt1.c0)) NOT BETWEEN ((0.6510377605620637, vt0.c1, vt1.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c0 AS BLOB) THEN CAST('' AS NUMERIC) WHEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c2)) END, (((((vt1.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2, 0.8805464406992127, vt1.c0)) AND ((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1))))>=((((vt0.c0))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (RTRIM(((('-251700962', vt0.c0, vt1.c0)) NOT BETWEEN ((0.6510377605620637, vt0.c1, vt1.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c0 AS BLOB) THEN CAST('' AS NUMERIC) WHEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c2)) END, (((((vt1.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2, 0.8805464406992127, vt1.c0)) AND ((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1))))>=((((vt0.c0))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(((('-251700962', vt0.c0, vt1.c0)) NOT BETWEEN ((0.6510377605620637, vt0.c1, vt1.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c0 AS BLOB) THEN CAST('' AS NUMERIC) WHEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c2)) END, (((((vt1.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2, 0.8805464406992127, vt1.c0)) AND ((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1))))>=((((vt0.c0))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (RTRIM(((('-251700962', vt0.c0, vt1.c0)) NOT BETWEEN ((0.6510377605620637, vt0.c1, vt1.c0)) AND ((vt0.c2, vt0.c0, vt0.c0))))) ORDER BY CASE ((vt1.c0) ISNULL)  WHEN vt1.c0 THEN CAST(vt0.c0 AS INTEGER) WHEN CAST(vt0.c0 AS BLOB) THEN CAST('' AS NUMERIC) WHEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) THEN vt1.c0 COLLATE BINARY ELSE ((vt0.c0)>>(vt0.c2)) END, (((((vt1.c0, vt1.c0, vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c2, 0.8805464406992127, vt1.c0)) AND ((vt0.c1, x'', vt0.c1, vt0.c0, vt0.c1))))>=((((vt0.c0))<((vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON ((json_object(v0.c0, v0.c0))<<(((v0.c0)AND(v0.c0)))) WHERE (HEX(((v0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((json_object(v0.c0, v0.c0))<<(((v0.c0)AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt1 ON ((json_object(v0.c0, v0.c0))<<(((v0.c0)AND(v0.c0)))) WHERE (HEX(((v0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM v0 CROSS JOIN vt1 ON ((json_object(v0.c0, v0.c0))<<(((v0.c0)AND(v0.c0)))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((0Xffffffff9bcb0cd2)<(vt0.c1)))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)))OR(CASE WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR(vt0.c1)))AND(vt0.c2 COLLATE NOCASE))) ORDER BY 0.9320414484523677 COLLATE RTRIM ASC  NULLS FIRST, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0xffffffff9bcb0cd2)<(vt0.c1)))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)))OR(CASE WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR(vt0.c1)))AND(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY 0.9320414484523677 COLLATE RTRIM ASC  NULLS FIRST, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))) DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((0Xffffffff9bcb0cd2)<(vt0.c1)))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)))OR(CASE WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR(vt0.c1)))AND(vt0.c2 COLLATE NOCASE))) ORDER BY 0.9320414484523677 COLLATE RTRIM ASC  NULLS FIRST, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0xffffffff9bcb0cd2)<(vt0.c1)))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)))OR(CASE WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR(vt0.c1)))AND(vt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY 0.9320414484523677 COLLATE RTRIM ASC  NULLS FIRST, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))) DESC);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((((((((0Xffffffff9bcb0cd2)<(vt0.c1)))AND(CASE WHEN vt0.c1 THEN vt0.c2 END)))OR(CASE WHEN x'' THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c2 THEN vt0.c1 END)))OR(vt0.c1)))AND(vt0.c2 COLLATE NOCASE))) ORDER BY 0.9320414484523677 COLLATE RTRIM ASC  NULLS FIRST, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))==(((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((~ (vt1.c0)))==(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))=(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((~ (vt1.c0)))==(vt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))=(vt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE ((((~ (vt1.c0)))==(vt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0, v0 WHERE (((COALESCE(vt0.c1, vt0.c1, vt0.c2, v0.c0))LIKE(CAST(vt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c1, vt0.c1, vt0.c2, v0.c0))LIKE(CAST(vt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((COALESCE(vt0.c1, vt0.c1, vt0.c2, v0.c0))LIKE(CAST(vt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c1, vt0.c1, vt0.c2, v0.c0))LIKE(CAST(vt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (((COALESCE(vt0.c1, vt0.c1, vt0.c2, v0.c0))LIKE(CAST(vt0.c2 AS BLOB))));
SELECT ALL * FROM vt1, v0 WHERE ((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1, v0 WHERE ((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1, v0 ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)));
SELECT ALL * FROM vt1, v0 WHERE ((CASE WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((((vt1.c0)AND(vt1.c0 COLLATE RTRIM)))AND(CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c2)>=(vt1.c0)))))OR(vt0.c2)))AND(((vt0.c0)>=(vt1.c0)))))AND(((((((((0.03214484593102407)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT NULL))AND(((vt0.c2)>=(vt1.c0)))))OR(vt0.c2)))AND(((vt0.c0)>=(vt1.c0)))))AND(((((((((0.03214484593102407)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c2)>=(vt1.c0)))))OR(vt0.c2)))AND(((vt0.c0)>=(vt1.c0)))))AND(((((((((0.03214484593102407)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1) NOT NULL))AND(((vt0.c2)>=(vt1.c0)))))OR(vt0.c2)))AND(((vt0.c0)>=(vt1.c0)))))AND(((((((((0.03214484593102407)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((((((((vt0.c1) NOT NULL))AND(((vt0.c2)>=(vt1.c0)))))OR(vt0.c2)))AND(((vt0.c0)>=(vt1.c0)))))AND(((((((((0.03214484593102407)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY TYPEOF(LAST_INSERT_ROWID())  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC, CAST('-1599987072' AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY TYPEOF(LAST_INSERT_ROWID())  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC, CAST('-1599987072' AS BLOB) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY TYPEOF(LAST_INSERT_ROWID())  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC, CAST('-1599987072' AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY TYPEOF(LAST_INSERT_ROWID())  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC, CAST('-1599987072' AS BLOB) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0)))))) ORDER BY TYPEOF(LAST_INSERT_ROWID())  NULLS LAST, CAST(((vt0.c0)&(vt0.c1)) AS TEXT) ASC, CAST('-1599987072' AS BLOB) ASC  NULLS FIRST;
SELECT * FROM v0, vt1 WHERE (((json_extract(v0.c0, v0.c0, v0.c0, vt1.c0)) IS FALSE)) ORDER BY (((((v0.c0 IN ()))AND(v0.c0)))AND(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0, v0.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0 IN ()))AND(v0.c0)))AND(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0, vt1 WHERE (((json_extract(v0.c0, v0.c0, v0.c0, vt1.c0)) IS FALSE)) ORDER BY (((((v0.c0 IN ()))AND(v0.c0)))AND(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0, v0.c0, vt1.c0)) IS FALSE)) IS TRUE)  as count FROM v0, vt1 ORDER BY (((((v0.c0 IN ()))AND(v0.c0)))AND(((((((((vt1.c0)OR(NULL)))AND(v0.c0)))AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (vt0.c1) ORDER BY (- ('0.37774517518338047'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY (- ('0.37774517518338047'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (vt0.c1) ORDER BY (- ('0.37774517518338047'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN vt1 ORDER BY (- ('0.37774517518338047'))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 NATURAL JOIN vt1 WHERE (vt0.c1) ORDER BY (- ('0.37774517518338047'))  NULLS LAST;
SELECT * FROM vt0, vt1, v0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN x'631e' WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN x'631e' WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM vt0, vt1, v0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN x'631e' WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN x'631e' WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC);
SELECT * FROM vt0, vt1, v0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN x'631e' WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END AS INTEGER)) ORDER BY CAST(vt1.c0 AS REAL) COLLATE BINARY ASC;
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))OR(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)<<(v0.c0)) WHERE ((((vt0.c1))<=((v0.c0))) COLLATE NOCASE) ORDER BY CASE (((vt0.c0))>=((vt0.c1)))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE ((((((((v0.c0)AND(vt0.c2)))AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<=((v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))OR(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)<<(v0.c0)) ORDER BY CASE (((vt0.c0))>=((vt0.c1)))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE ((((((((v0.c0)AND(vt0.c2)))AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))OR(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)<<(v0.c0)) WHERE ((((vt0.c1))<=((v0.c0))) COLLATE NOCASE) ORDER BY CASE (((vt0.c0))>=((vt0.c1)))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE ((((((((v0.c0)AND(vt0.c2)))AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<=((v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN (vt0.c0)))OR(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)<<(v0.c0)) ORDER BY CASE (((vt0.c0))>=((vt0.c1)))  WHEN vt0.c0 COLLATE BINARY THEN vt1.c0 ELSE ((((((((v0.c0)AND(vt0.c2)))AND(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffff9f5e7fd5 WHERE ((('2134670653')|(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('2134670653')|(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 0xffffffff9f5e7fd5 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffff9f5e7fd5 WHERE ((('2134670653')|(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('2134670653')|(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON 0xffffffff9f5e7fd5 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON 0Xffffffff9f5e7fd5 WHERE ((('2134670653')|(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN vt0 WHERE ((- (((((0.6146505467010464)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((((0.12802110131492128)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6146505467010464)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN vt0 ORDER BY ((((((((0.12802110131492128)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN vt0 WHERE ((- (((((0.6146505467010464)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((((0.12802110131492128)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6146505467010464)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt1, v0 NATURAL JOIN vt0 ORDER BY ((((((((0.12802110131492128)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, v0 NATURAL JOIN vt0 WHERE ((- (((((0.6146505467010464)OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((((((0.12802110131492128)OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ('-1794610145') AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) RIGHT OUTER JOIN vt1 ON ((((((v0.c0)AND(v0.c0)))AND(0.8089973777598899))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((~ (vt0.c1)))) WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL)) ORDER BY ((((((vt0.c2)<<(vt1.c0)))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(-1321498473 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ('-1794610145') AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) RIGHT OUTER JOIN vt1 ON ((((((v0.c0)AND(v0.c0)))AND(0.8089973777598899))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((~ (vt0.c1)))) ORDER BY ((((((vt0.c2)<<(vt1.c0)))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(-1321498473 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ('-1794610145') AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) RIGHT OUTER JOIN vt1 ON ((((((v0.c0)AND(v0.c0)))AND(0.8089973777598899))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((~ (vt0.c1)))) WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL)) ORDER BY ((((((vt0.c2)<<(vt1.c0)))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(-1321498473 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((vt1.c0) BETWEEN ('-1794610145') AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))) RIGHT OUTER JOIN vt1 ON ((((((v0.c0)AND(v0.c0)))AND(0.8089973777598899))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((~ (vt0.c1)))) ORDER BY ((((((vt0.c2)<<(vt1.c0)))OR(CAST(vt0.c1 AS BLOB))))AND(CAST(-1321498473 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CASE (v0.c0 IN ())  WHEN 0.08127022246557403 THEN ((vt0.c0)IS(vt0.c2)) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.9674170641382085) END) ORDER BY (((((vt0.c0) NOTNULL)))<((((vt0.c1)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN 0.08127022246557403 THEN ((vt0.c0)IS(vt0.c2)) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.9674170641382085) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((vt0.c0) NOTNULL)))<((((vt0.c1)IS(v0.c0))))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CASE (v0.c0 IN ())  WHEN 0.08127022246557403 THEN ((vt0.c0)IS(vt0.c2)) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.9674170641382085) END) ORDER BY (((((vt0.c0) NOTNULL)))<((((vt0.c1)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN 0.08127022246557403 THEN ((vt0.c0)IS(vt0.c2)) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.9674170641382085) END) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((vt0.c0) NOTNULL)))<((((vt0.c1)IS(v0.c0))))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (CASE (v0.c0 IN ())  WHEN 0.08127022246557403 THEN ((vt0.c0)IS(vt0.c2)) ELSE LIKELIHOOD(DISTINCT v0.c0, 0.9674170641382085) END) ORDER BY (((((vt0.c0) NOTNULL)))<((((vt0.c1)IS(v0.c0)))));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN 0.19207574187121346 THEN vt1.c0 ELSE vt0.c1 END, (v0.c0 IN ()), v0.c0 COLLATE RTRIM))<>((((vt0.c0) BETWEEN ('1764675219') AND (vt0.c1)), ((((v0.c0)OR(v0.c0)))AND(vt1.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN vt0.c1 WHEN 0.07379311632441943 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR(json_array_length(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN 0.19207574187121346 THEN vt1.c0 ELSE vt0.c1 END, (v0.c0 IN ()), v0.c0 COLLATE RTRIM))<>((((vt0.c0) BETWEEN ('1764675219') AND (vt0.c1)), ((((v0.c0)OR(v0.c0)))AND(vt1.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN vt0.c1 WHEN 0.07379311632441943 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR(json_array_length(vt0.c2))));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN 0.19207574187121346 THEN vt1.c0 ELSE vt0.c1 END, (v0.c0 IN ()), v0.c0 COLLATE RTRIM))<>((((vt0.c0) BETWEEN ('1764675219') AND (vt0.c1)), ((((v0.c0)OR(v0.c0)))AND(vt1.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN vt0.c1 WHEN 0.07379311632441943 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR(json_array_length(vt0.c2)));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN 0.19207574187121346 THEN vt1.c0 ELSE vt0.c1 END, (v0.c0 IN ()), v0.c0 COLLATE RTRIM))<>((((vt0.c0) BETWEEN ('1764675219') AND (vt0.c1)), ((((v0.c0)OR(v0.c0)))AND(vt1.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c2 WHEN '' THEN vt0.c1 WHEN 0.07379311632441943 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c2 END)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)))))OR(json_array_length(vt0.c2))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))-(((vt0.c2)||(vt0.c2))))) ORDER BY ((((vt0.c1)OR(((vt0.c0) ISNULL))))AND((vt0.c1 IN (vt0.c2, vt0.c0)))) DESC, ((LIKELIHOOD(vt0.c1, 0.12564837578306565)) NOT NULL)  NULLS LAST, ((vt0.c2)IS NOT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c1)))-(((vt0.c2)||(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR(((vt0.c0) ISNULL))))AND((vt0.c1 IN (vt0.c2, vt0.c0)))) DESC, ((LIKELIHOOD(vt0.c1, 0.12564837578306565)) NOT NULL)  NULLS LAST, ((vt0.c2)IS NOT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))-(((vt0.c2)||(vt0.c2))))) ORDER BY ((((vt0.c1)OR(((vt0.c0) ISNULL))))AND((vt0.c1 IN (vt0.c2, vt0.c0)))) DESC, ((LIKELIHOOD(vt0.c1, 0.12564837578306565)) NOT NULL)  NULLS LAST, ((vt0.c2)IS NOT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(vt0.c1)))-(((vt0.c2)||(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR(((vt0.c0) ISNULL))))AND((vt0.c1 IN (vt0.c2, vt0.c0)))) DESC, ((LIKELIHOOD(vt0.c1, 0.12564837578306565)) NOT NULL)  NULLS LAST, ((vt0.c2)IS NOT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)GLOB(vt0.c1)))-(((vt0.c2)||(vt0.c2))))) ORDER BY ((((vt0.c1)OR(((vt0.c0) ISNULL))))AND((vt0.c1 IN (vt0.c2, vt0.c0)))) DESC, ((LIKELIHOOD(vt0.c1, 0.12564837578306565)) NOT NULL)  NULLS LAST, ((vt0.c2)IS NOT(CASE WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END)) ASC;
SELECT ALL * FROM v0, vt1 WHERE (((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE (((TRIM(DISTINCT vt1.c0)) NOT BETWEEN (((((((((v0.c0)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0))) AND (((NULL) NOT BETWEEN (v0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) ORDER BY CASE (((vt0.c2, vt0.c2, vt0.c0))<((0.9803699549768278, '/K', vt0.c1)))  WHEN vt0.c2 COLLATE BINARY THEN vt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((json_extract((vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c2, vt0.c2, vt0.c0))<((0.9803699549768278, '/K', vt0.c1)))  WHEN vt0.c2 COLLATE BINARY THEN vt0.c2 END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) ORDER BY CASE (((vt0.c2, vt0.c2, vt0.c0))<((0.9803699549768278, '/K', vt0.c1)))  WHEN vt0.c2 COLLATE BINARY THEN vt0.c2 END ASC;
SELECT SUM(count) FROM (SELECT ((json_extract((vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c2, vt0.c2, vt0.c0))<((0.9803699549768278, '/K', vt0.c1)))  WHEN vt0.c2 COLLATE BINARY THEN vt0.c2 END ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_extract((vt0.c2 IN ()), CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE NULL END)) ORDER BY CASE (((vt0.c2, vt0.c2, vt0.c0))<((0.9803699549768278, '/K', vt0.c1)))  WHEN vt0.c2 COLLATE BINARY THEN vt0.c2 END ASC;
SELECT * FROM vt1 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))+(CAST(vt1.c0 AS INTEGER)))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))+(CAST(vt1.c0 AS INTEGER)))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))+(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 NATURAL JOIN v0 ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))+(CAST(vt1.c0 AS INTEGER)))) ORDER BY NULL COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c1)<=((((vt0.c0, -2059822459, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=((((vt0.c0, -2059822459, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=((((vt0.c0, -2059822459, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=((((vt0.c0, -2059822459, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1)<=((((vt0.c0, -2059822459, vt0.c0)) BETWEEN ((vt0.c1, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c2))))));
SELECT * FROM v0, vt0 INNER JOIN vt1 ON QUOTE(vt1.c0) COLLATE BINARY WHERE (((((vt1.c0)OR((- (vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((- (vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON QUOTE(vt1.c0) COLLATE BINARY);
SELECT * FROM v0, vt0 INNER JOIN vt1 ON QUOTE(vt1.c0) COLLATE BINARY WHERE (((((vt1.c0)OR((- (vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR((- (vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON QUOTE(vt1.c0) COLLATE BINARY);
SELECT * FROM v0, vt0 INNER JOIN vt1 ON QUOTE(vt1.c0) COLLATE BINARY WHERE (((((vt1.c0)OR((- (vt0.c0)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)||(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)||(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)||(vt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)||(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)||(vt0.c2)) IN ()));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN v0.c0 ELSE vt0.c2 END AS TEXT)) ORDER BY ((('/'))>=((ABS('-945577187'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN v0.c0 ELSE vt0.c2 END AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((('/'))>=((ABS('-945577187'))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN v0.c0 ELSE vt0.c2 END AS TEXT)) ORDER BY ((('/'))>=((ABS('-945577187'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN v0.c0 ELSE vt0.c2 END AS TEXT)) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((('/'))>=((ABS('-945577187'))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN v0.c0 ELSE vt0.c2 END AS TEXT)) ORDER BY ((('/'))>=((ABS('-945577187'))))  NULLS LAST;
SELECT * FROM v0 WHERE ((+ (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (((v0.c0)AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.9155236322740113 LEFT OUTER JOIN v0 ON (vt0.c0 IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.9155236322740113 LEFT OUTER JOIN v0 ON (vt0.c0 IN ()) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.9155236322740113 LEFT OUTER JOIN v0 ON (vt0.c0 IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.9155236322740113 LEFT OUTER JOIN v0 ON (vt0.c0 IN ()) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.9155236322740113 LEFT OUTER JOIN v0 ON (vt0.c0 IN ()) WHERE (NULL) ORDER BY (NOT (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1, v0 WHERE ((~ ((+ (0Xfffffffff215f06a))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((~ ((+ (0Xfffffffff215f06a))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((~ ((+ (0Xfffffffff215f06a))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((~ ((+ (0Xfffffffff215f06a))))) IS TRUE)  as count FROM vt1, v0 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1, v0 WHERE ((~ ((+ (0Xfffffffff215f06a))))) ORDER BY vt1.c0;
SELECT * FROM vt1, v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<(TRIM(vt1.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<(TRIM(vt1.c0, v0.c0)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<(TRIM(vt1.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<(TRIM(vt1.c0, v0.c0)))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<(TRIM(vt1.c0, v0.c0))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)>(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE RTRIM  NULLS LAST, '-163799354'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE RTRIM  NULLS LAST, '-163799354'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)>(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE RTRIM  NULLS LAST, '-163799354'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)) COLLATE RTRIM  NULLS LAST, '-163799354'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<(((vt1.c0)>(vt1.c0))))) ORDER BY (- (vt1.c0)) COLLATE RTRIM  NULLS LAST, '-163799354'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0))) NOTNULL)) ORDER BY ''  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN 0Xffffffffa2f528c2 END)&(((vt0.c2)||(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN 0xffffffffa2f528c2 END)&(((vt0.c2)||(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN 0Xffffffffa2f528c2 END)&(((vt0.c2)||(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c2 THEN 0xffffffffa2f528c2 END)&(((vt0.c2)||(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN 0Xffffffffa2f528c2 END)&(((vt0.c2)||(vt0.c2)))));
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)+(vt0.c2)) IN (((vt1.c0)IS NOT(vt1.c0)))) LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS BLOB))AND(vt1.c0 COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))AND(0.11799337842624846)))) WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) ORDER BY (((vt0.c2 IN (v0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)+(vt0.c2)) IN (((vt1.c0)IS NOT(vt1.c0)))) LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS BLOB))AND(vt1.c0 COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))AND(0.11799337842624846)))) ORDER BY (((vt0.c2 IN (v0.c0))) IS FALSE) DESC);
SELECT * FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)+(vt0.c2)) IN (((vt1.c0)IS NOT(vt1.c0)))) LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS BLOB))AND(vt1.c0 COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))AND(0.11799337842624846)))) WHERE (CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) ORDER BY (((vt0.c2 IN (v0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN v0 ON (((vt1.c0)+(vt0.c2)) IN (((vt1.c0)IS NOT(vt1.c0)))) LEFT OUTER JOIN vt0 ON ((((CAST(vt0.c1 AS BLOB))AND(vt1.c0 COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))AND(0.11799337842624846)))) ORDER BY (((vt0.c2 IN (v0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((vt0.c2 IN ())) AND (vt0.c0))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) BETWEEN ((vt0.c2 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((vt0.c2 IN ())) AND (vt0.c0))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS REAL)) BETWEEN ((vt0.c2 IN ())) AND (vt0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(vt0.c2 AS REAL)) BETWEEN ((vt0.c2 IN ())) AND (vt0.c0))) ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt1.c0)%(vt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))) AND ((((vt1.c0))!=((v0.c0)))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))) AND ((((vt1.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt1.c0)%(vt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))) AND ((((vt1.c0))!=((v0.c0)))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))) AND ((((vt1.c0))<>((v0.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE (((((vt1.c0)%(vt0.c2))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c2)))) AND ((((vt1.c0))!=((v0.c0)))))) ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON ((((vt0.c0)IS(vt0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN (((vt0.c2))>((vt1.c0))) END WHERE (((v0.c0 COLLATE BINARY)/(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)/(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((((vt0.c0)IS(vt0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN (((vt0.c2))>((vt1.c0))) END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON ((((vt0.c0)IS(vt0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN (((vt0.c2))>((vt1.c0))) END WHERE (((v0.c0 COLLATE BINARY)/(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)/(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON ((((vt0.c0)IS(vt0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN (((vt0.c2))>((vt1.c0))) END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt1 ON ((((vt0.c0)IS(vt0.c0))) ISNULL) LEFT OUTER JOIN vt0 ON CASE WHEN ((v0.c0)>=(vt0.c0)) THEN (((vt0.c2))>((vt1.c0))) END WHERE (((v0.c0 COLLATE BINARY)/(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) BETWEEN ((((vt0.c1))!=((vt0.c0)))) AND (CAST(vt0.c2 AS INTEGER)))) ORDER BY CASE ((vt0.c1)OR(vt0.c2))  WHEN vt0.c2 THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN vt0.c2 END) BETWEEN ((((vt0.c1))<>((vt0.c0)))) AND (CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)OR(vt0.c2))  WHEN vt0.c2 THEN ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) BETWEEN ((((vt0.c1))!=((vt0.c0)))) AND (CAST(vt0.c2 AS INTEGER)))) ORDER BY CASE ((vt0.c1)OR(vt0.c2))  WHEN vt0.c2 THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c2 THEN vt0.c2 END) BETWEEN ((((vt0.c1))<>((vt0.c0)))) AND (CAST(vt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)OR(vt0.c2))  WHEN vt0.c2 THEN ((vt0.c0) NOTNULL) END  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c2 THEN vt0.c2 END) BETWEEN ((((vt0.c1))!=((vt0.c0)))) AND (CAST(vt0.c2 AS INTEGER)))) ORDER BY CASE ((vt0.c1)OR(vt0.c2))  WHEN vt0.c2 THEN ((vt0.c0) NOTNULL) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((x'')+(vt0.c2))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')+(vt0.c2))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((((vt0.c0)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((x'')+(vt0.c2))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')+(vt0.c2))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((((vt0.c0)OR(vt0.c1)))OR(vt0.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((x'')+(vt0.c2))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1))) AND (((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) WHERE ('605687612') ORDER BY (+ (((vt0.c1)==(vt0.c2))))  NULLS LAST, (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('605687612') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) ORDER BY (+ (((vt0.c1)=(vt0.c2))))  NULLS LAST, (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) WHERE ('605687612') ORDER BY (+ (((vt0.c1)==(vt0.c2))))  NULLS LAST, (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('605687612') IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON v0.c0 RIGHT OUTER JOIN v0 ON json_extract(((vt0.c2) NOT BETWEEN (vt1.c0) AND (vt0.c1)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1))) ORDER BY (+ (((vt0.c1)=(vt0.c2))))  NULLS LAST, (((vt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c2))) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE ((((vt0.c1) IS TRUE) IN ()));
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL * FROM v0 NOT INDEXED, vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))-(((((((((((((((((vt0.c0)OR(vt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))-(((((((((((((((((vt0.c0)OR(vt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))-(((((((((((((((((vt0.c0)OR(vt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))-(((((((((((((((((vt0.c0)OR(vt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))-(((((((((((((((((vt0.c0)OR(vt0.c2)))AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))) WHERE (CASE WHEN vt0.c0 THEN vt1.c0 END);
SELECT * FROM vt0 WHERE (((((TRIM(vt0.c2, vt0.c1))OR(0.8310500376764198)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c2, vt0.c1))OR(0.8310500376764198)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((TRIM(vt0.c2, vt0.c1))OR(0.8310500376764198)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt0.c2, vt0.c1))OR(0.8310500376764198)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((TRIM(vt0.c2, vt0.c1))OR(0.8310500376764198)))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON ((('*')) BETWEEN ((((vt0.c0) ISNULL))) AND (((+ (vt1.c0))))) WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)), (((v0.c0, 't}', x'0771')) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND (('-275806740', vt1.c0, vt1.c0))), ((v0.c0)>>(vt0.c1))))<>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)), vt1.c0 COLLATE BINARY, (+ (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON ((('*')) BETWEEN ((((vt0.c0) ISNULL))) AND (((+ (vt1.c0))))) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)), (((v0.c0, 't}', x'0771')) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND (('-275806740', vt1.c0, vt1.c0))), ((v0.c0)>>(vt0.c1))))<>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)), vt1.c0 COLLATE BINARY, (+ (vt1.c0))))) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON ((('*')) BETWEEN ((((vt0.c0) ISNULL))) AND (((+ (vt1.c0))))) WHERE (CAST(((vt1.c0) ISNULL) AS TEXT)) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)), (((v0.c0, 't}', x'0771')) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND (('-275806740', vt1.c0, vt1.c0))), ((v0.c0)>>(vt0.c1))))<>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)), vt1.c0 COLLATE BINARY, (+ (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN (vt0.c1) AND (((vt1.c0) IS TRUE))) CROSS JOIN vt0 ON ((('*')) BETWEEN ((((vt0.c0) ISNULL))) AND (((+ (vt1.c0))))) ORDER BY ((~ (vt1.c0)) IN ()) DESC  NULLS FIRST, (((((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c0)), (((v0.c0, 't}', x'0771')) NOT BETWEEN ((vt0.c1, vt0.c1, vt1.c0)) AND (('-275806740', vt1.c0, vt1.c0))), ((v0.c0)>>(vt0.c1))))<>((((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)), vt1.c0 COLLATE BINARY, (+ (vt1.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT * FROM vt1, vt0 CROSS JOIN v0 ON ((((((((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))/(CASE vt0.c2  WHEN -8.13761172E8 THEN 0X64bdbc3a WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN v0.c0 END)) WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((LIKELIHOOD(v0.c0, 0.0029640388465616008))))) ORDER BY (- (CASE '605687612'  WHEN vt0.c0 THEN '0.4552259174169977' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((LIKELIHOOD(v0.c0, 0.0029640388465616008))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON ((((((((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))/(CASE vt0.c2  WHEN -8.13761172E8 THEN 0X64bdbc3a WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN v0.c0 END)) ORDER BY (- (CASE '605687612'  WHEN vt0.c0 THEN '0.4552259174169977' END))  NULLS LAST);
SELECT * FROM vt1, vt0 CROSS JOIN v0 ON ((((((((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))/(CASE vt0.c2  WHEN -8.13761172E8 THEN 0X64bdbc3a WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN v0.c0 END)) WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((LIKELIHOOD(v0.c0, 0.0029640388465616008))))) ORDER BY (- (CASE '605687612'  WHEN vt0.c0 THEN '0.4552259174169977' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((LIKELIHOOD(v0.c0, 0.0029640388465616008))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN v0 ON ((((((((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))/(CASE vt0.c2  WHEN -8.13761172E8 THEN 0X64bdbc3a WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN v0.c0 END)) ORDER BY (- (CASE '605687612'  WHEN vt0.c0 THEN '0.4552259174169977' END))  NULLS LAST);
SELECT * FROM vt1, vt0 CROSS JOIN v0 ON ((((((((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c2)))/(CASE vt0.c2  WHEN -8.13761172E8 THEN 0X64bdbc3a WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN v0.c0 END)) WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((LIKELIHOOD(v0.c0, 0.0029640388465616008))))) ORDER BY (- (CASE '605687612'  WHEN vt0.c0 THEN '0.4552259174169977' END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c2)>(vt0.c2)))<>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)>(vt0.c2)))<>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c2)>(vt0.c2)))<>(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)>(vt0.c2)))<>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c2)>(vt0.c2)))<>(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE ((((((x'')AND(vt0.c0)))OR(vt0.c2)) IN ())) ORDER BY ((((((vt0.c1) ISNULL))OR(NULL)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((x'')AND(vt0.c0)))OR(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) ISNULL))OR(NULL)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((((x'')AND(vt0.c0)))OR(vt0.c2)) IN ())) ORDER BY ((((((vt0.c1) ISNULL))OR(NULL)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((x'')AND(vt0.c0)))OR(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) ISNULL))OR(NULL)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((((((x'')AND(vt0.c0)))OR(vt0.c2)) IN ())) ORDER BY ((((((vt0.c1) ISNULL))OR(NULL)))AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c2 AS INTEGER)) NOT BETWEEN ((NOT (vt0.c1))) AND (vt0.c0));
SELECT * FROM v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS TEXT)) ORDER BY (LENGTH(v0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(DISTINCT v0.c0) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (LENGTH(v0.c0) IN ()) DESC);
SELECT * FROM v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS TEXT)) ORDER BY (LENGTH(v0.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(DISTINCT v0.c0) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY (LENGTH(v0.c0) IN ()) DESC);
SELECT * FROM v0 WHERE (CAST(UNLIKELY(DISTINCT v0.c0) AS TEXT)) ORDER BY (LENGTH(v0.c0) IN ()) DESC;
SELECT ALL * FROM v0, vt1, vt0 WHERE (-1.794610145E9) ORDER BY ((((STRFTIME(x'', v0.c0, vt1.c0))AND((- (x'')))))OR(((((vt1.c0)OR(vt0.c1)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.794610145E9) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((STRFTIME(x'', v0.c0, vt1.c0))AND((- (x'')))))OR(((((vt1.c0)OR(vt0.c1)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (-1.794610145E9) ORDER BY ((((STRFTIME(x'', v0.c0, vt1.c0))AND((- (x'')))))OR(((((vt1.c0)OR(vt0.c1)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.794610145E9) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((STRFTIME(x'', v0.c0, vt1.c0))AND((- (x'')))))OR(((((vt1.c0)OR(vt0.c1)))AND(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0, vt1, vt0 WHERE (-1.794610145E9) ORDER BY ((((STRFTIME(x'', v0.c0, vt1.c0))AND((- (x'')))))OR(((((vt1.c0)OR(vt0.c1)))AND(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY x'33f0' DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY x'33f0' DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY x'33f0' DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY x'33f0' DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY x'33f0' DESC;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE));
SELECT * FROM vt0, v0 WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0)+(v0.c0))) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (- ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0)+(v0.c0))) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, (- ((vt0.c1 IN ()))));
SELECT * FROM vt0, v0 WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0)+(v0.c0))) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (- ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0)+(v0.c0))) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, (- ((vt0.c1 IN ()))));
SELECT * FROM vt0, v0 WHERE ((((vt0.c2 IN ())) NOT BETWEEN (((vt0.c0)+(v0.c0))) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (- ((vt0.c1 IN ())));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CASE WHEN vt0.c2 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))==((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0.15401088586483724 ELSE vt0.c2 END WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c2 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (vt0.c0)) ELSE ((-1648435151) NOT NULL) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN (((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))=((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0.15401088586483724 ELSE vt0.c2 END WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c2 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (vt0.c0)) ELSE ((-1648435151) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN (((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))==((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0.15401088586483724 ELSE vt0.c2 END WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c2 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (vt0.c0)) ELSE ((-1648435151) NOT NULL) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN (((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0))=((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0.15401088586483724 ELSE vt0.c2 END WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c2 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (vt0.c0)) ELSE ((-1648435151) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN (((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (((vt0.c0))==((vt0.c1)))  WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN 0.15401088586483724 ELSE vt0.c2 END WHEN ((vt0.c2) ISNULL) THEN CAST(vt0.c2 AS REAL) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (~ (vt0.c0)) ELSE ((-1648435151) NOT NULL) END) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)) IN (((vt0.c2)&(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0)&(vt1.c0)))) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN x'' THEN CAST(vt1.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt1.c0)&(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN x'' THEN CAST(vt1.c0 AS INTEGER) END ASC);
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0)&(vt1.c0)))) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN x'' THEN CAST(vt1.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((vt1.c0)&(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN x'' THEN CAST(vt1.c0 AS INTEGER) END ASC);
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0)&(vt1.c0)))) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN x'' THEN CAST(vt1.c0 AS INTEGER) END ASC;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('-251700962') ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(0.7449944940522218 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (('-251700962') IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(0.7449944940522218 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('-251700962') ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(0.7449944940522218 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (('-251700962') IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(0.7449944940522218 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE ('-251700962') ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (CAST(0.7449944940522218 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'')))OR(TRIM(vt0.c0, vt0.c0))) WHERE ((((vt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c0, vt0.c2))) AND ((vt1.c0)))) ORDER BY (+ (CAST(-257820817 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c0, vt0.c2))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'')))OR(TRIM(vt0.c0, vt0.c0))) ORDER BY (+ (CAST(-257820817 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'')))OR(TRIM(vt0.c0, vt0.c0))) WHERE ((((vt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c0, vt0.c2))) AND ((vt1.c0)))) ORDER BY (+ (CAST(-257820817 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c0, vt0.c2))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'')))OR(TRIM(vt0.c0, vt0.c0))) ORDER BY (+ (CAST(-257820817 AS REAL))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(x'')))OR(TRIM(vt0.c0, vt0.c0))) WHERE ((((vt0.c2)) NOT BETWEEN ((SUBSTR(vt0.c0, vt0.c2))) AND ((vt1.c0)))) ORDER BY (+ (CAST(-257820817 AS REAL)));
SELECT ALL * FROM v0 WHERE ((((v0.c0)GLOB(v0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)GLOB(v0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)GLOB(v0.c0)) IN (v0.c0)));
SELECT * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((('', vt1.c0, vt1.c0))>=(('', x'', vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((('', vt1.c0, vt1.c0))>=(('', x'', vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((('', vt1.c0, vt1.c0))>=(('', x'', vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((('', vt1.c0, vt1.c0))>=(('', x'', vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(((('', vt1.c0, vt1.c0))>=(('', x'', vt1.c0))))));
SELECT ALL * FROM vt1, v0, vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL * FROM vt1, v0, vt0 WHERE ((+ (((vt0.c0)-(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((vt0.c2)<>(vt1.c0)))) INNER JOIN vt1 ON (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))))AND((~ (vt0.c2)))))OR(((v0.c0) IS TRUE))) WHERE ((+ (vt1.c0))) ORDER BY ((json_remove(vt0.c1, '-233443222'))/(CAST(vt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((vt0.c2)<>(vt1.c0)))) INNER JOIN vt1 ON (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))))AND((~ (vt0.c2)))))OR(((v0.c0) IS TRUE))) ORDER BY ((json_remove(vt0.c1, '-233443222'))/(CAST(vt0.c2 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((vt0.c2)<>(vt1.c0)))) INNER JOIN vt1 ON (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))))AND((~ (vt0.c2)))))OR(((v0.c0) IS TRUE))) WHERE ((+ (vt1.c0))) ORDER BY ((json_remove(vt0.c1, '-233443222'))/(CAST(vt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((v0.c0) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c1 END) AND (((vt0.c2)<>(vt1.c0)))) INNER JOIN vt1 ON (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c2))))AND((~ (vt0.c2)))))OR(((v0.c0) IS TRUE))) ORDER BY ((json_remove(vt0.c1, '-233443222'))/(CAST(vt0.c2 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0)))<(CASE WHEN vt0.c2 THEN vt0.c1 END)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((- (CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE WHEN 0.05093422596913244 THEN ((v0.c0) ISNULL) ELSE ((v0.c0) NOT NULL) END) ORDER BY ((((~ (vt0.c2))))<=(((vt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.05093422596913244 THEN ((v0.c0) ISNULL) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((~ (vt0.c2))))<=(((vt0.c2 IN ())))) DESC);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE WHEN 0.05093422596913244 THEN ((v0.c0) ISNULL) ELSE ((v0.c0) NOT NULL) END) ORDER BY ((((~ (vt0.c2))))<=(((vt0.c2 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.05093422596913244 THEN ((v0.c0) ISNULL) ELSE ((v0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY ((((~ (vt0.c2))))<=(((vt0.c2 IN ())))) DESC);
SELECT ALL * FROM vt0, vt1, v0 WHERE (CASE WHEN 0.05093422596913244 THEN ((v0.c0) ISNULL) ELSE ((v0.c0) NOT NULL) END) ORDER BY ((((~ (vt0.c2))))<=(((vt0.c2 IN ())))) DESC;
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c0)IS NOT(v0.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT -1.648435151E9, (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) WHERE (NULL) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT -1.648435151E9, (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT -1.648435151E9, (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) WHERE (NULL) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT -1.648435151E9, (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULLIF(DISTINCT -1.648435151E9, (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2)))) WHERE (NULL) ORDER BY CAST(vt0.c1 AS INTEGER) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))AND(((vt0.c1)LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))AND(((vt0.c1)LIKE(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))AND(((vt0.c1)LIKE(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) IS FALSE))AND(((vt0.c1)LIKE(vt0.c2))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c2) IS FALSE))AND(((vt0.c1)LIKE(vt0.c2)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0))*((((vt0.c2, vt0.c2, -5.97100315E8))>((v0.c0, vt0.c0, v0.c0))))) WHERE (((json_array_length(NULL))<<((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(NULL))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0))*((((vt0.c2, vt0.c2, -5.97100315E8))>((v0.c0, vt0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0))*((((vt0.c2, vt0.c2, -5.97100315E8))>((v0.c0, vt0.c0, v0.c0))))) WHERE (((json_array_length(NULL))<<((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(NULL))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0))*((((vt0.c2, vt0.c2, -5.97100315E8))>((v0.c0, vt0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((ABS(DISTINCT vt0.c0))*((((vt0.c2, vt0.c2, -5.97100315E8))>((v0.c0, vt0.c0, v0.c0))))) WHERE (((json_array_length(NULL))<<((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (ROUND(((v0.c0)<(vt1.c0)), '-1156102614' COLLATE NOCASE)) ORDER BY (((((vt0.c1)||(v0.c0)), ((vt0.c2) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c1 COLLATE NOCASE))>=(((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((ROUND(((v0.c0)<(vt1.c0)), '-1156102614' COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((((vt0.c1)||(v0.c0)), ((vt0.c2) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c1 COLLATE NOCASE))>=(((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), v0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (ROUND(((v0.c0)<(vt1.c0)), '-1156102614' COLLATE NOCASE)) ORDER BY (((((vt0.c1)||(v0.c0)), ((vt0.c2) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c1 COLLATE NOCASE))>=(((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((ROUND(((v0.c0)<(vt1.c0)), '-1156102614' COLLATE NOCASE)) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (((((vt0.c1)||(v0.c0)), ((vt0.c2) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c1 COLLATE NOCASE))>=(((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), v0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (ROUND(((v0.c0)<(vt1.c0)), '-1156102614' COLLATE NOCASE)) ORDER BY (((((vt0.c1)||(v0.c0)), ((vt0.c2) BETWEEN (vt1.c0) AND (v0.c0)), vt0.c1 COLLATE NOCASE))>=(((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))), v0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC)) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))-(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))-(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC)) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))-(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))-(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST((+ (vt1.c0)) AS NUMERIC)) ORDER BY (vt1.c0 IN (vt1.c0)) COLLATE RTRIM, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((x'') BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))-(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c1 IN ()) IN ()) LEFT OUTER JOIN v0 ON ((('1690156090', ((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c1))<=((HEX(vt0.c0), ((vt1.c0)||(v0.c0)), CAST(vt1.c0 AS INTEGER)))) WHERE ((((vt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c1 IN ()) IN ()) LEFT OUTER JOIN v0 ON ((('1690156090', ((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c1))<=((HEX(vt0.c0), ((vt1.c0)||(v0.c0)), CAST(vt1.c0 AS INTEGER)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c1 IN ()) IN ()) LEFT OUTER JOIN v0 ON ((('1690156090', ((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c1))<=((HEX(vt0.c0), ((vt1.c0)||(v0.c0)), CAST(vt1.c0 AS INTEGER)))) WHERE ((((vt0.c2 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c2 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((vt0.c1 IN ()) IN ()) LEFT OUTER JOIN v0 ON ((('1690156090', ((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c1))<=((HEX(vt0.c0), ((vt1.c0)||(v0.c0)), CAST(vt1.c0 AS INTEGER)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((vt0.c1 IN ()) IN ()) LEFT OUTER JOIN v0 ON ((('1690156090', ((((vt1.c0)AND(vt0.c1)))AND(vt0.c2)), vt0.c1))<=((HEX(vt0.c0), ((vt1.c0)||(v0.c0)), CAST(vt1.c0 AS INTEGER)))) WHERE ((((vt0.c2 IN ())) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON (NOT (((((((((vt1.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c2)))OR(vt0.c2)))) WHERE (((((vt0.c2)OR(((vt0.c2)IS NOT(-503245798)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(((vt0.c2)IS NOT(-503245798)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON (NOT (((((((((vt1.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c2)))OR(vt0.c2)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON (NOT (((((((((vt1.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c2)))OR(vt0.c2)))) WHERE (((((vt0.c2)OR(((vt0.c2)IS NOT(-503245798)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)OR(((vt0.c2)IS NOT(-503245798)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN vt1 ON (NOT (((((((((vt1.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c2)))OR(vt0.c2)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN vt1 ON (NOT (((((((((vt1.c0)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c2)))OR(vt0.c2)))) WHERE (((((vt0.c2)OR(((vt0.c2)IS NOT(-503245798)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS LAST, TRIM(((vt0.c1) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY vt0.c0  NULLS LAST, TRIM(((vt0.c1) IS FALSE)) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS LAST, TRIM(((vt0.c1) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY vt0.c0  NULLS LAST, TRIM(((vt0.c1) IS FALSE)) ASC);
SELECT * FROM v0, vt1, vt0 WHERE (vt1.c0) ORDER BY vt0.c0  NULLS LAST, TRIM(((vt0.c1) IS FALSE)) ASC;
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) IS FALSE), ((vt1.c0)%(vt1.c0)), ((((v0.c0)OR(vt1.c0)))OR(0.8505710477627365))))<>((vt1.c0 COLLATE BINARY, (vt1.c0 IN (v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE), ((vt1.c0)%(vt1.c0)), ((((v0.c0)OR(vt1.c0)))OR(0.8505710477627365))))<>((vt1.c0 COLLATE BINARY, (vt1.c0 IN (v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) IS FALSE), ((vt1.c0)%(vt1.c0)), ((((v0.c0)OR(vt1.c0)))OR(0.8505710477627365))))<>((vt1.c0 COLLATE BINARY, (vt1.c0 IN (v0.c0)), (+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) IS FALSE), ((vt1.c0)%(vt1.c0)), ((((v0.c0)OR(vt1.c0)))OR(0.8505710477627365))))<>((vt1.c0 COLLATE BINARY, (vt1.c0 IN (v0.c0)), (+ (v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt1 WHERE ((((((v0.c0) IS FALSE), ((vt1.c0)%(vt1.c0)), ((((v0.c0)OR(vt1.c0)))OR(0.8505710477627365))))<>((vt1.c0 COLLATE BINARY, (vt1.c0 IN (v0.c0)), (+ (v0.c0))))));
SELECT * FROM v0, vt1 WHERE ((((((((vt1.c0))<((0.6089330944475257))))AND((~ (v0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<((0.6089330944475257))))AND((~ (v0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((((vt1.c0))<((0.6089330944475257))))AND((~ (v0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))<((0.6089330944475257))))AND((~ (v0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((((((((vt1.c0))<((0.6089330944475257))))AND((~ (v0.c0)))))AND(((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY x'50b7' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY x'50b7' ASC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY x'50b7' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY x'50b7' ASC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY x'50b7' ASC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN (((vt0.c0)|(''))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND((vt0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND((vt0.c0 IN ()))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN (((vt0.c0)|(''))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN (((vt0.c0)|(''))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND((vt0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND((vt0.c0 IN ()))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN (((vt0.c0)|(''))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) BETWEEN (vt0.c1) AND (v0.c0))) BETWEEN (((vt0.c0)|(''))) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((((((((vt0.c1)OR(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)))AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND((vt0.c0 IN ()))))AND((v0.c0 IN ())))) ORDER BY vt0.c1  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY (- (vt1.c0 COLLATE RTRIM)) ASC, (((((vt1.c0)>(vt1.c0))))>=(((vt1.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY (- (vt1.c0 COLLATE RTRIM)) ASC, (((((vt1.c0)>(vt1.c0))))>=(((vt1.c0 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY (- (vt1.c0 COLLATE RTRIM)) ASC, (((((vt1.c0)>(vt1.c0))))>=(((vt1.c0 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt1, v0 ORDER BY (- (vt1.c0 COLLATE RTRIM)) ASC, (((((vt1.c0)>(vt1.c0))))>=(((vt1.c0 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, v0 WHERE (v0.c0) ORDER BY (- (vt1.c0 COLLATE RTRIM)) ASC, (((((vt1.c0)>(vt1.c0))))>=(((vt1.c0 IN ())))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS REAL)) ORDER BY UPPER(DISTINCT ((vt0.c1)LIKE(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY UPPER(DISTINCT ((vt0.c1)LIKE(v0.c0))) DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS REAL)) ORDER BY UPPER(DISTINCT ((vt0.c1)LIKE(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY UPPER(DISTINCT ((vt0.c1)LIKE(v0.c0))) DESC);
SELECT ALL * FROM v0, vt0, vt1 WHERE (CAST((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS REAL)) ORDER BY UPPER(DISTINCT ((vt0.c1)LIKE(v0.c0))) DESC;
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))||(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL))||(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1) ISNULL))||(((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE BINARY)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE BINARY)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE BINARY)>(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)))));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))IS NOT((((vt0.c2))==((vt0.c1))))) WHERE (vt0.c2) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((v0.c0, vt0.c1, vt0.c2))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))IS NOT((((vt0.c2))==((vt0.c1))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((v0.c0, vt0.c1, vt0.c2))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))IS NOT((((vt0.c2))==((vt0.c1))))) WHERE (vt0.c2) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((v0.c0, vt0.c1, vt0.c2))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))IS NOT((((vt0.c2))==((vt0.c1))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((v0.c0, vt0.c1, vt0.c2))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON (((~ (vt1.c0)))IS NOT((((vt0.c2))==((vt0.c1))))) WHERE (vt0.c2) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((v0.c0, vt0.c1, vt0.c1)) AND ((v0.c0, vt0.c1, vt0.c2))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))=(INSTR(vt0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC))=(INSTR(vt0.c1, vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))=(INSTR(vt0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c2 AS NUMERIC))=(INSTR(vt0.c1, vt1.c0)))) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (((CAST(vt0.c2 AS NUMERIC))=(INSTR(vt0.c1, vt1.c0))));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) ISNULL))) WHERE ((((((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c0))))>=(((vt1.c0 IN ()))))) ORDER BY IFNULL(DISTINCT (~ (vt0.c0)), CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c0))))>=(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) ISNULL))) ORDER BY IFNULL(DISTINCT (~ (vt0.c0)), CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) ISNULL))) WHERE ((((((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c0))))>=(((vt1.c0 IN ()))))) ORDER BY IFNULL(DISTINCT (~ (vt0.c0)), CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END);
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c0))))>=(((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) ISNULL))) ORDER BY IFNULL(DISTINCT (~ (vt0.c0)), CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END));
SELECT COUNT(*) FROM vt1, v0 RIGHT OUTER JOIN vt0 ON (NOT (((vt1.c0) ISNULL))) WHERE ((((((v0.c0) NOT BETWEEN (vt0.c2) AND (v0.c0))))>=(((vt1.c0 IN ()))))) ORDER BY IFNULL(DISTINCT (~ (vt0.c0)), CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END);
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) NOT NULL)) ORDER BY (~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)IS((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)IS((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) NOT NULL)) ORDER BY (~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)IS((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt0.c1)) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)IS((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c1)) NOT NULL)) ORDER BY (~ (((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)IS((+ (vt0.c1))));
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT NULL) THEN '-1621196843' ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT NULL) THEN '-1621196843' ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT NULL) THEN '-1621196843' ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT NULL) THEN '-1621196843' ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN ((vt1.c0) NOT NULL) THEN '-1621196843' ELSE (vt1.c0 IN ()) END);
SELECT * FROM vt1 WHERE (0.19958420102267183);
SELECT SUM(count) FROM (SELECT ALL ((0.19958420102267183) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.19958420102267183);
SELECT SUM(count) FROM (SELECT ALL ((0.19958420102267183) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.19958420102267183);
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)&(vt1.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((+ (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)&(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>>((((vt0.c2, vt0.c0, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))>>((((vt0.c2, vt0.c0, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>>((((vt0.c2, vt0.c0, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))>>((((vt0.c2, vt0.c0, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c1)))>>((((vt0.c2, vt0.c0, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2))))));
SELECT * FROM vt1, vt0 WHERE (CAST('0.5937111747724151' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.5937111747724151' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST('0.5937111747724151' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST('0.5937111747724151' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST('0.5937111747724151' AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((- (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((- (((vt0.c0)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((- (((vt0.c0)IS(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((MIN(vt0.c2, vt0.c0, 'cE', x''))==(vt0.c0))) ORDER BY ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))|(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c2, vt0.c0, 'cE', x''))=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))|(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (((MIN(vt0.c2, vt0.c0, 'cE', x''))==(vt0.c0))) ORDER BY ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))|(CAST(vt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c2, vt0.c0, 'cE', x''))=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))|(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (((MIN(vt0.c2, vt0.c0, 'cE', x''))==(vt0.c0))) ORDER BY ((((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)))|(CAST(vt0.c1 AS TEXT)));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(0.37774517518338047 AS BLOB) ASC  NULLS LAST, COALESCE(DISTINCT CAST(v0.c0 AS BLOB), x'a143') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(0.37774517518338047 AS BLOB) ASC  NULLS LAST, COALESCE(DISTINCT CAST(v0.c0 AS BLOB), x'a143') DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(0.37774517518338047 AS BLOB) ASC  NULLS LAST, COALESCE(DISTINCT CAST(v0.c0 AS BLOB), x'a143') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(0.37774517518338047 AS BLOB) ASC  NULLS LAST, COALESCE(DISTINCT CAST(v0.c0 AS BLOB), x'a143') DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY CAST(0.37774517518338047 AS BLOB) ASC  NULLS LAST, COALESCE(DISTINCT CAST(v0.c0 AS BLOB), x'a143') DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c2)<(vt1.c0)))<=(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt1.c0)))<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c2)<(vt1.c0)))<=(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)<(vt1.c0)))<=(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c2)<(vt1.c0)))<=(((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL)) ORDER BY ((vt0.c1) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL)) ORDER BY ((vt0.c1) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) NOT NULL)) ORDER BY ((vt0.c1) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((v0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (UNLIKELY(DISTINCT ((v0.c0)LIKE(vt0.c0))));
SELECT * FROM vt0, vt1, v0 WHERE ((((0Xffffffff94cf8c64, v0.c0, 0.12585344821469147)) NOT BETWEEN (((+ (vt1.c0)), ((((NULL)OR(vt0.c0)))OR(v0.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((x'', vt1.c0, vt0.c2)) AND ((vt1.c0, v0.c0, vt0.c0))))) AND ((((vt0.c0)-(v0.c0)), CAST(vt0.c1 AS BLOB), '-813761172'))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffff94cf8c64, v0.c0, 0.12585344821469147)) NOT BETWEEN (((+ (vt1.c0)), ((((NULL)OR(vt0.c0)))OR(v0.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((x'', vt1.c0, vt0.c2)) AND ((vt1.c0, v0.c0, vt0.c0))))) AND ((((vt0.c0)-(v0.c0)), CAST(vt0.c1 AS BLOB), '-813761172')))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((((0Xffffffff94cf8c64, v0.c0, 0.12585344821469147)) NOT BETWEEN (((+ (vt1.c0)), ((((NULL)OR(vt0.c0)))OR(v0.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((x'', vt1.c0, vt0.c2)) AND ((vt1.c0, v0.c0, vt0.c0))))) AND ((((vt0.c0)-(v0.c0)), CAST(vt0.c1 AS BLOB), '-813761172'))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffff94cf8c64, v0.c0, 0.12585344821469147)) NOT BETWEEN (((+ (vt1.c0)), ((((NULL)OR(vt0.c0)))OR(v0.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((x'', vt1.c0, vt0.c2)) AND ((vt1.c0, v0.c0, vt0.c0))))) AND ((((vt0.c0)-(v0.c0)), CAST(vt0.c1 AS BLOB), '-813761172')))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT * FROM vt0, vt1, v0 WHERE ((((0Xffffffff94cf8c64, v0.c0, 0.12585344821469147)) NOT BETWEEN (((+ (vt1.c0)), ((((NULL)OR(vt0.c0)))OR(v0.c0)), (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((x'', vt1.c0, vt0.c2)) AND ((vt1.c0, v0.c0, vt0.c0))))) AND ((((vt0.c0)-(v0.c0)), CAST(vt0.c1 AS BLOB), '-813761172'))));
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (x'08ff') AND (((v0.c0)|(x'16322460')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) NOT BETWEEN (x'08ff') AND (((v0.c0)|(x'16322460'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (x'08ff') AND (((v0.c0)|(x'16322460')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) NOT BETWEEN (x'08ff') AND (((v0.c0)|(x'16322460'))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT BETWEEN (x'08ff') AND (((v0.c0)|(x'16322460')))));
SELECT COUNT(*) FROM v0, vt1 WHERE ((('TCzT')>>(v0.c0))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (ABS(DISTINCT 0.5765689315116498)));
SELECT SUM(count) FROM (SELECT (((('TCzT')>>(v0.c0))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (ABS(DISTINCT 0.5765689315116498))));
SELECT COUNT(*) FROM v0, vt1 WHERE ((('TCzT')>>(v0.c0))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (ABS(DISTINCT 0.5765689315116498)));
SELECT SUM(count) FROM (SELECT (((('TCzT')>>(v0.c0))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (ABS(DISTINCT 0.5765689315116498))));
SELECT COUNT(*) FROM v0, vt1 WHERE ((('TCzT')>>(v0.c0))) ORDER BY ((((vt1.c0) ISNULL)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (ABS(DISTINCT 0.5765689315116498)));
SELECT * FROM v0, vt1, vt0 WHERE (811723458);
SELECT SUM(count) FROM (SELECT ALL ((811723458) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (811723458);
SELECT SUM(count) FROM (SELECT ALL ((811723458) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (811723458);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)||(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (NULL)));
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((x'', '1967176508', vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) ELSE vt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((x'', '1967176508', vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) ELSE vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((x'', '1967176508', vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) ELSE vt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((x'', '1967176508', vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) ELSE vt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN (((vt0.c2, vt0.c2, vt0.c1)) NOT BETWEEN ((x'', '1967176508', vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c1))) ELSE vt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM v0, vt1 WHERE ('2134670653');
SELECT SUM(count) FROM (SELECT (('2134670653') IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ('2134670653');
SELECT SUM(count) FROM (SELECT (('2134670653') IS TRUE)  as count FROM v0, vt1);
SELECT ALL * FROM v0, vt1 WHERE ('2134670653');
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (HEX(((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ('-1010466561')) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ('-1010466561')) ASC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (HEX(((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ('-1010466561')) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ('-1010466561')) ASC);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (HEX(((((vt1.c0)AND(vt1.c0)))OR(vt0.c2)))) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT v0.c0)) AND ('-1010466561')) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))) AND ((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))) AND ((NULL))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))) AND ((NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))) AND ((NULL))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c1) ORDER BY (((vt0.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c1)))) AND ((NULL))) ASC;
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL COUNT(*) FROM vt1, v0 WHERE ((- (IFNULL(DISTINCT vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (-3.63985919E8);
SELECT SUM(count) FROM (SELECT ((-3.63985919E8) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (-3.63985919E8);
SELECT SUM(count) FROM (SELECT ((-3.63985919E8) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (-3.63985919E8);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (vt0.c1 IN (v0.c0, vt0.c1)) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((((CAST(x'' AS NUMERIC))OR(vt0.c2)))OR(ABS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (vt0.c1 IN (v0.c0, vt0.c1)) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((CAST(x'' AS NUMERIC))OR(vt0.c2)))OR(ABS(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (vt0.c1 IN (v0.c0, vt0.c1)) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((((CAST(x'' AS NUMERIC))OR(vt0.c2)))OR(ABS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (vt0.c1 IN (v0.c0, vt0.c1)) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((CAST(x'' AS NUMERIC))OR(vt0.c2)))OR(ABS(vt1.c0))));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (CASE WHEN ((vt0.c0)IS NOT(v0.c0)) THEN (vt0.c1 IN (v0.c0, vt0.c1)) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((((CAST(x'' AS NUMERIC))OR(vt0.c2)))OR(ABS(vt1.c0)));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((NULL IN (vt1.c0))) IS TRUE)) ORDER BY ((NULL COLLATE BINARY)OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((NULL COLLATE BINARY)OR(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((NULL IN (vt1.c0))) IS TRUE)) ORDER BY ((NULL COLLATE BINARY)OR(CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt1 ORDER BY ((NULL COLLATE BINARY)OR(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0, vt1 WHERE ((((NULL IN (vt1.c0))) IS TRUE)) ORDER BY ((NULL COLLATE BINARY)OR(CAST(vt1.c0 AS REAL)));
SELECT * FROM vt0 WHERE (((ABS(vt0.c2)) IS TRUE)) ORDER BY ((x'') NOT BETWEEN (((vt0.c2)AND(vt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c2)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((x'') NOT BETWEEN (((vt0.c2)AND(vt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((ABS(vt0.c2)) IS TRUE)) ORDER BY ((x'') NOT BETWEEN (((vt0.c2)AND(vt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((ABS(vt0.c2)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((x'') NOT BETWEEN (((vt0.c2)AND(vt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((ABS(vt0.c2)) IS TRUE)) ORDER BY ((x'') NOT BETWEEN (((vt0.c2)AND(vt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)>(((v0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(((v0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)>(((v0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)>(((v0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0)>(((v0.c0) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c2)<<(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE RTRIM)) WHERE (((((vt1.c0)*(vt1.c0))) NOT NULL)) ORDER BY ((CAST(v0.c0 AS NUMERIC)) ISNULL), (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c2)<<(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE RTRIM)) ORDER BY ((CAST(v0.c0 AS NUMERIC)) ISNULL), (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c2)<<(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE RTRIM)) WHERE (((((vt1.c0)*(vt1.c0))) NOT NULL)) ORDER BY ((CAST(v0.c0 AS NUMERIC)) ISNULL), (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c2)<<(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE RTRIM)) ORDER BY ((CAST(v0.c0 AS NUMERIC)) ISNULL), (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c2)<<(vt0.c1))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE RTRIM)) WHERE (((((vt1.c0)*(vt1.c0))) NOT NULL)) ORDER BY ((CAST(v0.c0 AS NUMERIC)) ISNULL), (- ((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN '-1599987072' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -3.63985919E8 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c2)%(vt0.c2))) AND (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN '-1599987072' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -3.63985919E8 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c2)%(vt0.c2))) AND (vt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN '-1599987072' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -3.63985919E8 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c2)%(vt0.c2))) AND (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN '-1599987072' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -3.63985919E8 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c2)%(vt0.c2))) AND (vt0.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE vt0.c1  WHEN vt1.c0 THEN '-1599987072' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN -3.63985919E8 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c2)%(vt0.c2))) AND (vt0.c2 COLLATE BINARY));
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (0.7384156023568372) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c1))=((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7384156023568372) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c1))=((vt0.c0))) END ASC);
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (0.7384156023568372) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c1))=((vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7384156023568372) IS TRUE)  as count FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c1))=((vt0.c0))) END ASC);
SELECT ALL * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)OR(vt0.c0))) ISNULL) WHERE (0.7384156023568372) ORDER BY CASE WHEN vt1.c0 THEN (((vt0.c1))=((vt0.c0))) END ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>>(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)>>(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt1.c0)));
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))<>(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))!=(v0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))<>(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))!=(v0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM v0, vt0, vt1 WHERE (vt0.c1) ORDER BY ((((vt1.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))<>(v0.c0 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c2)/(vt0.c2))))<=((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)/(vt0.c2))))<=((x'')))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c2)/(vt0.c2))))<=((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2)/(vt0.c2))))<=((x'')))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt0.c2)/(vt0.c2))))<=((x''))));
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT COUNT(*) FROM vt0, v0, vt1 WHERE (vt0.c1);
SELECT ALL * FROM v0 WHERE (((0.24459928299986855) BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((0.24459928299986855) BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.24459928299986855) BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ((((0.24459928299986855) BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.24459928299986855) BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(vt0.c2, 0.11841834337100865))GLOB((- (vt0.c2)))) LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN vt0.c1 COLLATE RTRIM THEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END WHEN '		|l%' THEN ((((vt0.c2)AND(vt1.c0)))OR(vt0.c2)) WHEN ((0.24459928299986855) NOTNULL) THEN (((vt0.c1, vt0.c1, vt0.c2))==((v0.c0, vt0.c2, vt0.c1))) WHEN ((vt1.c0)*(vt0.c2)) THEN (((0.8505710477627365)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN CAST(x'743c' AS TEXT) THEN ((vt0.c1) IS FALSE) WHEN (((vt0.c2, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, NULL)) AND ((vt0.c2, 'q^', vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '-1185647363' END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN vt0.c1 COLLATE RTRIM THEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END WHEN '		|l%' THEN ((((vt0.c2)AND(vt1.c0)))OR(vt0.c2)) WHEN ((0.24459928299986855) NOTNULL) THEN (((vt0.c1, vt0.c1, vt0.c2))=((v0.c0, vt0.c2, vt0.c1))) WHEN ((vt1.c0)*(vt0.c2)) THEN (((0.8505710477627365)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN CAST(x'743c' AS TEXT) THEN ((vt0.c1) IS FALSE) WHEN (((vt0.c2, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, NULL)) AND ((vt0.c2, 'q^', vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(vt0.c2, 0.11841834337100865))GLOB((- (vt0.c2)))) LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS INTEGER) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '-1185647363' END ASC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(vt0.c2, 0.11841834337100865))GLOB((- (vt0.c2)))) LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN vt0.c1 COLLATE RTRIM THEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END WHEN '		|l%' THEN ((((vt0.c2)AND(vt1.c0)))OR(vt0.c2)) WHEN ((0.24459928299986855) NOTNULL) THEN (((vt0.c1, vt0.c1, vt0.c2))==((v0.c0, vt0.c2, vt0.c1))) WHEN ((vt1.c0)*(vt0.c2)) THEN (((0.8505710477627365)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN CAST(x'743c' AS TEXT) THEN ((vt0.c1) IS FALSE) WHEN (((vt0.c2, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, NULL)) AND ((vt0.c2, 'q^', vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '-1185647363' END ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN vt0.c1 COLLATE RTRIM THEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END WHEN '		|l%' THEN ((((vt0.c2)AND(vt1.c0)))OR(vt0.c2)) WHEN ((0.24459928299986855) NOTNULL) THEN (((vt0.c1, vt0.c1, vt0.c2))=((v0.c0, vt0.c2, vt0.c1))) WHEN ((vt1.c0)*(vt0.c2)) THEN (((0.8505710477627365)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN CAST(x'743c' AS TEXT) THEN ((vt0.c1) IS FALSE) WHEN (((vt0.c2, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, NULL)) AND ((vt0.c2, 'q^', vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(vt0.c2, 0.11841834337100865))GLOB((- (vt0.c2)))) LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS INTEGER) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '-1185647363' END ASC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((LIKELIHOOD(vt0.c2, 0.11841834337100865))GLOB((- (vt0.c2)))) LEFT OUTER JOIN vt1 ON CAST(((vt0.c0) ISNULL) AS INTEGER) WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN (vt1.c0 IN ()) THEN vt1.c0 WHEN vt0.c1 COLLATE RTRIM THEN CASE v0.c0  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END WHEN '		|l%' THEN ((((vt0.c2)AND(vt1.c0)))OR(vt0.c2)) WHEN ((0.24459928299986855) NOTNULL) THEN (((vt0.c1, vt0.c1, vt0.c2))==((v0.c0, vt0.c2, vt0.c1))) WHEN ((vt1.c0)*(vt0.c2)) THEN (((0.8505710477627365)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN CAST(x'743c' AS TEXT) THEN ((vt0.c1) IS FALSE) WHEN (((vt0.c2, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, NULL)) AND ((vt0.c2, 'q^', vt1.c0))) THEN ((((vt1.c0)AND(vt0.c0)))OR(v0.c0)) ELSE ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) ORDER BY CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE '-1185647363' END ASC;
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (vt0.c0)))) AND ((((vt0.c0)/(vt0.c1)))))) ORDER BY CAST(CAST(-8.61081302E8 AS BLOB) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (vt0.c0)))) AND ((((vt0.c0)/(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(-8.61081302E8 AS BLOB) AS REAL) DESC);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (vt0.c0)))) AND ((((vt0.c0)/(vt0.c1)))))) ORDER BY CAST(CAST(-8.61081302E8 AS BLOB) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (vt0.c0)))) AND ((((vt0.c0)/(vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY CAST(CAST(-8.61081302E8 AS BLOB) AS REAL) DESC);
SELECT * FROM vt0, vt1, v0 WHERE ((((vt0.c2)) NOT BETWEEN (((vt0.c2 IN (vt0.c0)))) AND ((((vt0.c0)/(vt0.c1)))))) ORDER BY CAST(CAST(-8.61081302E8 AS BLOB) AS REAL) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0) IS FALSE) IN ()));
SELECT * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN (vt0.c0)))))OR(((2119804748)<=(vt0.c2))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN (vt0.c0)))))OR(((2119804748)<=(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c2))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN (vt0.c0)))))OR(((2119804748)<=(vt0.c2))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN (vt0.c0)))))OR(((2119804748)<=(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c2))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC))OR((vt0.c1 IN (vt0.c0)))))OR(((2119804748)<=(vt0.c2))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((v0.c0, vt0.c2, v0.c0))=((v0.c0, vt0.c2, vt0.c1))))+(((vt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((v0.c0, vt0.c2, v0.c0))==((v0.c0, vt0.c2, vt0.c1))))+(((vt0.c2) ISNULL))) ASC);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((v0.c0, vt0.c2, v0.c0))=((v0.c0, vt0.c2, vt0.c1))))+(((vt0.c2) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((v0.c0, vt0.c2, v0.c0))==((v0.c0, vt0.c2, vt0.c1))))+(((vt0.c2) ISNULL))) ASC);
SELECT ALL * FROM vt0, v0, vt1 WHERE ((((vt0.c1) BETWEEN (v0.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) ORDER BY (((((v0.c0, vt0.c2, v0.c0))=((v0.c0, vt0.c2, vt0.c1))))+(((vt0.c2) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((NULL)AND(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((NULL)AND(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (((((NULL)AND(((((v0.c0)AND(vt0.c0)))AND(v0.c0)))))OR(CASE vt0.c0  WHEN vt0.c2 THEN vt1.c0 END))) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((0.295881238782821 COLLATE RTRIM)>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c2 AS BLOB))>=(json_array(vt0.c0, vt0.c0, vt0.c2, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((0.295881238782821 COLLATE RTRIM)>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS BLOB))>=(json_array(vt0.c0, vt0.c0, vt0.c2, vt0.c0, vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((0.295881238782821 COLLATE RTRIM)>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY ((CAST(vt0.c2 AS BLOB))>=(json_array(vt0.c0, vt0.c0, vt0.c2, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((0.295881238782821 COLLATE RTRIM)>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c2 AS BLOB))>=(json_array(vt0.c0, vt0.c0, vt0.c2, vt0.c0, vt0.c0, vt0.c1))));
SELECT ALL * FROM v0 WHERE ('t_Xä¡¶I') ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('t_Xä¡¶I') IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('t_Xä¡¶I') ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('t_Xä¡¶I') IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ('t_Xä¡¶I') ORDER BY v0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(x'eead' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(x'eead' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(x'eead' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CAST(x'eead' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL)) IS FALSE)) ORDER BY CAST(x'eead' AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt1, v0 WHERE (NULL) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, (~ (DATETIME(vt1.c0, vt1.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0 ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, (~ (DATETIME(vt1.c0, vt1.c0, v0.c0))) DESC);
SELECT ALL * FROM vt1, v0 WHERE (NULL) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, (~ (DATETIME(vt1.c0, vt1.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, v0 ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, (~ (DATETIME(vt1.c0, vt1.c0, v0.c0))) DESC);
SELECT ALL * FROM vt1, v0 WHERE (NULL) ORDER BY (v0.c0 COLLATE NOCASE IN ()) ASC, (~ (DATETIME(vt1.c0, vt1.c0, v0.c0))) DESC;
SELECT ALL * FROM v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c1) NOTNULL))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST, (((NOT (vt0.c0)))LIKE(x'')), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c1) NOTNULL))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST, (((NOT (vt0.c0)))LIKE(x'')), NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c1) NOTNULL))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST, (((NOT (vt0.c0)))LIKE(x'')), NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c1) NOTNULL))))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST, (((NOT (vt0.c0)))LIKE(x'')), NULL ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)OR(((vt0.c1) NOTNULL))))AND(CAST(vt0.c0 AS BLOB)))) ORDER BY (vt0.c0 IN ()) ASC  NULLS FIRST, (((NOT (vt0.c0)))LIKE(x'')), NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE v0.c0 END THEN (vt0.c2 IN ()) END LEFT OUTER JOIN v0 ON NULL WHERE (CAST((v0.c0 IN ()) AS TEXT)) ORDER BY ((((x'32df')>=(v0.c0)))>=(CAST(vt0.c1 AS NUMERIC))), (((((v0.c0)OR(vt0.c2)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE v0.c0 END THEN (vt0.c2 IN ()) END LEFT OUTER JOIN v0 ON NULL ORDER BY ((((x'32df')>=(v0.c0)))>=(CAST(vt0.c1 AS NUMERIC))), (((((v0.c0)OR(vt0.c2)))OR(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE v0.c0 END THEN (vt0.c2 IN ()) END LEFT OUTER JOIN v0 ON NULL WHERE (CAST((v0.c0 IN ()) AS TEXT)) ORDER BY ((((x'32df')>=(v0.c0)))>=(CAST(vt0.c1 AS NUMERIC))), (((((v0.c0)OR(vt0.c2)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE v0.c0 END THEN (vt0.c2 IN ()) END LEFT OUTER JOIN v0 ON NULL ORDER BY ((((x'32df')>=(v0.c0)))>=(CAST(vt0.c1 AS NUMERIC))), (((((v0.c0)OR(vt0.c2)))OR(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE vt0.c2  WHEN vt0.c2 THEN vt1.c0 ELSE v0.c0 END THEN (vt0.c2 IN ()) END LEFT OUTER JOIN v0 ON NULL WHERE (CAST((v0.c0 IN ()) AS TEXT)) ORDER BY ((((x'32df')>=(v0.c0)))>=(CAST(vt0.c1 AS NUMERIC))), (((((v0.c0)OR(vt0.c2)))OR(v0.c0)) IN ());
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'e204') ORDER BY (NOT (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((x'e204') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (NOT (((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'e204') ORDER BY (NOT (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((x'e204') IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY (NOT (((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE (x'e204') ORDER BY (NOT (((vt1.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) AS BLOB) WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) AS BLOB) WHERE (CAST('' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((((vt0.c0)AND(vt0.c2)))AND(vt0.c1)) AS BLOB) WHERE (CAST('' AS TEXT));
SELECT COUNT(*) FROM v0 WHERE ((((((((((+ (v0.c0)))AND((NOT (v0.c0)))))OR((((v0.c0))=((v0.c0))))))AND(CASE v0.c0  WHEN NULL THEN '-233443222' END)))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (v0.c0)))AND((NOT (v0.c0)))))OR((((v0.c0))==((v0.c0))))))AND(CASE v0.c0  WHEN NULL THEN '-233443222' END)))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((+ (v0.c0)))AND((NOT (v0.c0)))))OR((((v0.c0))=((v0.c0))))))AND(CASE v0.c0  WHEN NULL THEN '-233443222' END)))OR(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (v0.c0)))AND((NOT (v0.c0)))))OR((((v0.c0))==((v0.c0))))))AND(CASE v0.c0  WHEN NULL THEN '-233443222' END)))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((+ (v0.c0)))AND((NOT (v0.c0)))))OR((((v0.c0))=((v0.c0))))))AND(CASE v0.c0  WHEN NULL THEN '-233443222' END)))OR(CAST(v0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST('0.4552259174169977' AS TEXT))GLOB(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST('0.4552259174169977' AS TEXT))GLOB(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST('0.4552259174169977' AS TEXT))GLOB(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST('0.4552259174169977' AS TEXT))GLOB(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST('0.4552259174169977' AS TEXT))GLOB(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt1.c0)>=(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((json_object(vt1.c0, vt1.c0), (('-155035669') NOT NULL), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))LIKE(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((json_object(vt1.c0, vt1.c0), (('-155035669') NOT NULL), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT NULL))LIKE(((vt1.c0)>=(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((json_object(vt1.c0, vt1.c0), (('-155035669') NOT NULL), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL))LIKE(((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((json_object(vt1.c0, vt1.c0), (('-155035669') NOT NULL), vt1.c0)) AND ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), CAST(vt1.c0 AS REAL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((UPPER(DISTINCT x'') IN ())) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT x'') IN ())) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((UPPER(DISTINCT x'') IN ())) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT x'') IN ())) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE ((UPPER(DISTINCT x'') IN ())) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) ASC;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN (+ (v0.c0)) THEN ((NULL) IS FALSE) ELSE 0.3841092289942287 END WHERE (-1.798337436E9);
SELECT SUM(count) FROM (SELECT ((-1.798337436E9) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN (+ (v0.c0)) THEN ((NULL) IS FALSE) ELSE 0.3841092289942287 END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN (+ (v0.c0)) THEN ((NULL) IS FALSE) ELSE 0.3841092289942287 END WHERE (-1.798337436E9);
SELECT SUM(count) FROM (SELECT ((-1.798337436E9) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN (+ (v0.c0)) THEN ((NULL) IS FALSE) ELSE 0.3841092289942287 END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON CASE (v0.c0 IN ())  WHEN (+ (v0.c0)) THEN ((NULL) IS FALSE) ELSE 0.3841092289942287 END WHERE (-1.798337436E9);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL))!=((vt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((NULL))!=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL))!=((vt0.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((NULL))!=((vt0.c2 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((NULL))!=((vt0.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((v0.c0 IN ())))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)IS NOT(v0.c0)) IN ())) ORDER BY (x'' IN ()) ASC  NULLS LAST, CAST((- (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ()) ASC  NULLS LAST, CAST((- (v0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)IS NOT(v0.c0)) IN ())) ORDER BY (x'' IN ()) ASC  NULLS LAST, CAST((- (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)IS NOT(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (x'' IN ()) ASC  NULLS LAST, CAST((- (v0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)IS NOT(v0.c0)) IN ())) ORDER BY (x'' IN ()) ASC  NULLS LAST, CAST((- (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.451666564143395 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (CAST(-533776016 AS NUMERIC)) AND (((vt0.c2)||(vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c2 AS TEXT))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0.451666564143395 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (CAST(-533776016 AS NUMERIC)) AND (((vt0.c2)||(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c2 AS TEXT))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.451666564143395 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (CAST(-533776016 AS NUMERIC)) AND (((vt0.c2)||(vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c2 AS TEXT))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0.451666564143395 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (CAST(-533776016 AS NUMERIC)) AND (((vt0.c2)||(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c2 AS TEXT))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.451666564143395 THEN vt0.c2 ELSE vt0.c2 END) NOT BETWEEN (CAST(-533776016 AS NUMERIC)) AND (((vt0.c2)||(vt0.c1))))) ORDER BY (((vt0.c0)) BETWEEN (((+ (vt0.c1)))) AND ((CAST(vt0.c2 AS TEXT))))  NULLS FIRST, ((((CASE WHEN vt0.c1 THEN vt0.c0 END)AND(vt0.c0 COLLATE NOCASE)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((vt1.c0) IS TRUE)) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c2)))-(vt0.c0))) ORDER BY ((TYPEOF(DISTINCT -1560991550)) BETWEEN (NULL) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c2)))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(DISTINCT -1560991550)) BETWEEN (NULL) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c2)))-(vt0.c0))) ORDER BY ((TYPEOF(DISTINCT -1560991550)) BETWEEN (NULL) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c2)))-(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((TYPEOF(DISTINCT -1560991550)) BETWEEN (NULL) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c2)))-(vt0.c0))) ORDER BY ((TYPEOF(DISTINCT -1560991550)) BETWEEN (NULL) AND ((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt1, v0 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(0.8711907235957321)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)LIKE(0.8711907235957321))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(0.8711907235957321)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)LIKE(0.8711907235957321))) IS TRUE)  as count FROM vt1, v0);
SELECT * FROM vt1, v0 WHERE (((vt1.c0 COLLATE NOCASE)LIKE(0.8711907235957321)));
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(0.6063960466719414 AS INTEGER), ((vt1.c0)%(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c1)*(vt1.c0)), ((x'')<(vt1.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY json_array_length(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(0.6063960466719414 AS INTEGER), ((vt1.c0)%(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c1)*(vt1.c0)), ((x'')<(vt1.c0)), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_array_length(NULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(0.6063960466719414 AS INTEGER), ((vt1.c0)%(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c1)*(vt1.c0)), ((x'')<(vt1.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY json_array_length(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(0.6063960466719414 AS INTEGER), ((vt1.c0)%(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c1)*(vt1.c0)), ((x'')<(vt1.c0)), vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_array_length(NULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(0.6063960466719414 AS INTEGER), ((vt1.c0)%(vt0.c0)), CAST(vt1.c0 AS NUMERIC))) AND ((((vt0.c1)*(vt1.c0)), ((x'')<(vt1.c0)), vt0.c1 COLLATE NOCASE)))) ORDER BY json_array_length(NULL)  NULLS LAST;
SELECT ALL * FROM vt1, vt0, v0 WHERE (TYPEOF(DISTINCT vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c2)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (TYPEOF(DISTINCT vt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c2)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL * FROM vt1, vt0, v0 WHERE (TYPEOF(DISTINCT vt0.c2));
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, v0);
SELECT COUNT(*) FROM vt1, v0 WHERE (vt1.c0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))IS('-597100315')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))IS('-597100315'))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))IS('-597100315')));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))IS('-597100315'))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS INTEGER))IS('-597100315')));
SELECT * FROM vt0, v0 WHERE (((((v0.c0)&(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)&(vt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)&(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((v0.c0)&(vt0.c2))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE ((((((((((1737890303)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((1737890303)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((1737890303)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((1737890303)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((((((1737890303)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) IN ()));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT (('1357942280') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END, CAST((+ (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (('1357942280') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END, CAST((+ (vt1.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT (('1357942280') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END, CAST((+ (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (('1357942280') BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END, CAST((+ (vt1.c0)) AS REAL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (UNLIKELY(DISTINCT (('1357942280') BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END, CAST((+ (vt1.c0)) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((('-215291916', NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '-695429008')))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((('-215291916', NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '-695429008'))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((('-215291916', NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '-695429008')))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((('-215291916', NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '-695429008'))))) IS TRUE)  as count FROM v0, vt1);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((('-215291916', NULL, vt1.c0)) BETWEEN ((v0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, v0.c0, '-695429008')))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN ((NULL)&(vt0.c2)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))==((NOT (vt0.c2))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS NUMERIC)  WHEN ((NULL)&(vt0.c2)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))=((NOT (vt0.c2))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN ((NULL)&(vt0.c2)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))==((NOT (vt0.c2))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c2 AS NUMERIC)  WHEN ((NULL)&(vt0.c2)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))=((NOT (vt0.c2))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE CAST(vt0.c2 AS NUMERIC)  WHEN ((NULL)&(vt0.c2)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((((((vt0.c2)AND(vt1.c0)))AND(vt0.c1)))AND(NULL)))AND(vt0.c1)))==((NOT (vt0.c2))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))) COLLATE NOCASE;
SELECT * FROM vt0, v0, vt1 WHERE (vt0.c2) ORDER BY CAST(HEX(vt0.c2) AS NUMERIC) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(HEX(vt0.c2) AS NUMERIC) DESC, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0, vt1 WHERE (vt0.c2) ORDER BY CAST(HEX(vt0.c2) AS NUMERIC) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY CAST(HEX(vt0.c2) AS NUMERIC) DESC, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0, vt1 WHERE (vt0.c2) ORDER BY CAST(HEX(vt0.c2) AS NUMERIC) DESC, vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'');
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.32654356911917704))))>=(((vt0.c0 IN ()))))) ORDER BY COALESCE(((vt0.c2) IS FALSE), CAST(vt1.c0 AS INTEGER), json_valid(vt0.c0), ((vt1.c0) NOT NULL)), CASE CAST(vt0.c1 AS BLOB)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.32654356911917704))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE(((vt0.c2) IS FALSE), CAST(vt1.c0 AS INTEGER), json_valid(vt0.c0), ((vt1.c0) NOT NULL)), CASE CAST(vt0.c1 AS BLOB)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.32654356911917704))))>=(((vt0.c0 IN ()))))) ORDER BY COALESCE(((vt0.c2) IS FALSE), CAST(vt1.c0 AS INTEGER), json_valid(vt0.c0), ((vt1.c0) NOT NULL)), CASE CAST(vt0.c1 AS BLOB)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.32654356911917704))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY COALESCE(((vt0.c2) IS FALSE), CAST(vt1.c0 AS INTEGER), json_valid(vt0.c0), ((vt1.c0) NOT NULL)), CASE CAST(vt0.c1 AS BLOB)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (0.32654356911917704))))>=(((vt0.c0 IN ()))))) ORDER BY COALESCE(((vt0.c2) IS FALSE), CAST(vt1.c0 AS INTEGER), json_valid(vt0.c0), ((vt1.c0) NOT NULL)), CASE CAST(vt0.c1 AS BLOB)  WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM END;
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (json_remove((((v0.c0))>=((v0.c0))), (((v0.c0))>((vt1.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) IS FALSE) DESC, (((((NOT (v0.c0)))OR(vt1.c0)))OR(((vt1.c0)OR(vt1.c0)))) DESC  NULLS LAST, ((json_type(v0.c0))<>(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((v0.c0))>=((v0.c0))), (((v0.c0))>((vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) IS FALSE) DESC, (((((NOT (v0.c0)))OR(vt1.c0)))OR(((vt1.c0)OR(vt1.c0)))) DESC  NULLS LAST, ((json_type(v0.c0))!=(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, vt1 WHERE (json_remove((((v0.c0))>=((v0.c0))), (((v0.c0))>((vt1.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) IS FALSE) DESC, (((((NOT (v0.c0)))OR(vt1.c0)))OR(((vt1.c0)OR(vt1.c0)))) DESC  NULLS LAST, ((json_type(v0.c0))<>(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((v0.c0))>=((v0.c0))), (((v0.c0))>((vt1.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY ((CASE WHEN v0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END) IS FALSE) DESC, (((((NOT (v0.c0)))OR(vt1.c0)))OR(((vt1.c0)OR(vt1.c0)))) DESC  NULLS LAST, ((json_type(v0.c0))!=(((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, ((TRIM(vt0.c0))|(((vt0.c2)OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, ((TRIM(vt0.c0))|(((vt0.c2)OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, ((TRIM(vt0.c0))|(((vt0.c2)OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c2))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, ((TRIM(vt0.c0))|(((vt0.c2)OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c2))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, ((TRIM(vt0.c0))|(((vt0.c2)OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON highlight(json_valid(vt0.c1), (v0.c0 IN ()), CAST(vt0.c0 AS REAL), (((x'')) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) WHERE ((((vt1.c0)) BETWEEN (('-233443222')) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (('-233443222')) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON highlight(json_valid(vt0.c1), (v0.c0 IN ()), CAST(vt0.c0 AS REAL), (((x'')) BETWEEN ((vt1.c0)) AND ((vt0.c1)))));
SELECT ALL * FROM vt0, v0 CROSS JOIN vt1 ON highlight(json_valid(vt0.c1), (v0.c0 IN ()), CAST(vt0.c0 AS REAL), (((x'')) BETWEEN ((vt1.c0)) AND ((vt0.c1)))) WHERE ((((vt1.c0)) BETWEEN (('-233443222')) AND ((vt0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (('-233443222')) AND ((vt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 CROSS JOIN vt1 ON highlight(json_valid(vt0.c1), (v0.c0 IN ()), CAST(vt0.c0 AS REAL), (((x'')) BETWEEN ((vt1.c0)) AND ((vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LIKELY(vt0.c2) THEN x'238b9ab1' END) ORDER BY ((((vt0.c2)/(vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(vt0.c2) THEN x'238b9ab1' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)/(vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>(vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LIKELY(vt0.c2) THEN x'238b9ab1' END) ORDER BY ((((vt0.c2)/(vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(vt0.c2) THEN x'238b9ab1' END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c2)/(vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>(vt0.c0)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN LIKELY(vt0.c2) THEN x'238b9ab1' END) ORDER BY ((((vt0.c2)/(vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0)>(vt0.c0))));
SELECT * FROM v0, vt1 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt1);
SELECT * FROM v0, vt1 WHERE ((v0.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt0 WHERE (0.1835359705850539) ORDER BY ((((((((((vt0.c1) NOTNULL))OR(CAST(x'7f85' AS INTEGER))))OR(((vt0.c1) ISNULL))))AND(NULLIF(vt0.c0, vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1835359705850539) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOTNULL))OR(CAST(x'7f85' AS INTEGER))))OR(((vt0.c1) ISNULL))))AND(NULLIF(vt0.c0, vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.1835359705850539) ORDER BY ((((((((((vt0.c1) NOTNULL))OR(CAST(x'7f85' AS INTEGER))))OR(((vt0.c1) ISNULL))))AND(NULLIF(vt0.c0, vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1835359705850539) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) NOTNULL))OR(CAST(x'7f85' AS INTEGER))))OR(((vt0.c1) ISNULL))))AND(NULLIF(vt0.c0, vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.1835359705850539) ORDER BY ((((((((((vt0.c1) NOTNULL))OR(CAST(x'7f85' AS INTEGER))))OR(((vt0.c1) ISNULL))))AND(NULLIF(vt0.c0, vt0.c1))))AND(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((0.43212016223190874)) AND ((v0.c0)))) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ()), CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 WHEN CAST(980265102 AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'b152'))) ELSE ((v0.c0)IS NOT(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((0.43212016223190874)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ()), CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 WHEN CAST(980265102 AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'b152'))) ELSE ((v0.c0)IS NOT(v0.c0)) END DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((0.43212016223190874)) AND ((v0.c0)))) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ()), CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 WHEN CAST(980265102 AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'b152'))) ELSE ((v0.c0)IS NOT(v0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((0.43212016223190874)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ()), CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 WHEN CAST(980265102 AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'b152'))) ELSE ((v0.c0)IS NOT(v0.c0)) END DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((0.43212016223190874)) AND ((v0.c0)))) ORDER BY (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN ()), CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) THEN v0.c0 WHEN CAST(980265102 AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x'b152'))) ELSE ((v0.c0)IS NOT(v0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)+(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)+(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)+(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)+(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c0 AS INTEGER) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)+(v0.c0)) ELSE ((v0.c0)GLOB(v0.c0)) END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB);
SELECT * FROM vt0 WHERE ((((((NULL)OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL)OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL)OR(vt0.c1)))AND(vt0.c2)) IN (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((x'') NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)>=(v0.c0)))&(v0.c0 COLLATE RTRIM)), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)OR(v0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((x'') NOT NULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c0)))&(v0.c0 COLLATE RTRIM)), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)OR(v0.c0)) THEN v0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((x'') NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)>=(v0.c0)))&(v0.c0 COLLATE RTRIM)), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)OR(v0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((x'') NOT NULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>=(v0.c0)))&(v0.c0 COLLATE RTRIM)), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)OR(v0.c0)) THEN v0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN ((x'') NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)>=(v0.c0)))&(v0.c0 COLLATE RTRIM)), CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0)OR(v0.c0)) THEN v0.c0 END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c2);
SELECT COUNT(*) FROM vt1 WHERE ((load_extension(vt1.c0, x'6f80') IN ())) ORDER BY CAST(NULL COLLATE BINARY AS BLOB) DESC  NULLS FIRST, CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(vt1.c0, x'6f80') IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL COLLATE BINARY AS BLOB) DESC  NULLS FIRST, CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 ELSE vt1.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((load_extension(vt1.c0, x'6f80') IN ())) ORDER BY CAST(NULL COLLATE BINARY AS BLOB) DESC  NULLS FIRST, CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 ELSE vt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((load_extension(vt1.c0, x'6f80') IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL COLLATE BINARY AS BLOB) DESC  NULLS FIRST, CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 ELSE vt1.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((load_extension(vt1.c0, x'6f80') IN ())) ORDER BY CAST(NULL COLLATE BINARY AS BLOB) DESC  NULLS FIRST, CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c0 ELSE vt1.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))|(((vt0.c0)<>(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, ((vt0.c2)>=(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, (vt0.c0 IN ()), (vt0.c0 IN (vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))|(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, ((vt0.c2)>=(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, (vt0.c0 IN ()), (vt0.c0 IN (vt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))|(((vt0.c0)<>(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, ((vt0.c2)>=(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, (vt0.c0 IN ()), (vt0.c0 IN (vt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))|(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, ((vt0.c2)>=(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, (vt0.c0 IN ()), (vt0.c0 IN (vt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))|(((vt0.c0)<>(vt0.c0))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, ((vt0.c2)>=(vt0.c1)))) AND ((vt0.c1 COLLATE RTRIM, (vt0.c0 IN ()), (vt0.c0 IN (vt0.c2))))) ASC;
SELECT * FROM vt1, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((CASE WHEN x'adc9b7b7' THEN v0.c0 END) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN x'adc9b7b7' THEN v0.c0 END) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt1, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((CASE WHEN x'adc9b7b7' THEN v0.c0 END) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, v0 ORDER BY ((CASE WHEN x'adc9b7b7' THEN v0.c0 END) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM vt1, v0 WHERE (((((((vt1.c0)OR(v0.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((CASE WHEN x'adc9b7b7' THEN v0.c0 END) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2 COLLATE RTRIM)OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.09797457297883894 THEN vt0.c0 END)))OR(('-1599987072' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 COLLATE RTRIM)OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.09797457297883894 THEN vt0.c0 END)))OR(('-1599987072' IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2 COLLATE RTRIM)OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.09797457297883894 THEN vt0.c0 END)))OR(('-1599987072' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 COLLATE RTRIM)OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.09797457297883894 THEN vt0.c0 END)))OR(('-1599987072' IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c2 COLLATE RTRIM)OR(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN 0.09797457297883894 THEN vt0.c0 END)))OR(('-1599987072' IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c1)))) BETWEEN ((('-6827835') BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY 0.24180780389051648 DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c2, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c1)))) BETWEEN ((('-6827835') BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.24180780389051648 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c1)))) BETWEEN ((('-6827835') BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY 0.24180780389051648 DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c2, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c1)))) BETWEEN ((('-6827835') BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.24180780389051648 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c2, vt0.c2))<=((vt0.c1, vt0.c1, vt0.c1)))) BETWEEN ((('-6827835') BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt0.c2)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY 0.24180780389051648 DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END) AND (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((NULL) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ((vt0.c2) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (vt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)IS('0.7613477657032559')));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS('0.7613477657032559'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)IS('0.7613477657032559')));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)IS('0.7613477657032559'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)IS('0.7613477657032559')));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'ë½œd' THEN 0.901774226654545 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'ë½œd' THEN 0.901774226654545 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'ë½œd' THEN 0.901774226654545 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'ë½œd' THEN 0.901774226654545 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'ë½œd' THEN 0.901774226654545 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c2))>((vt0.c1))) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY ((0.16630247453101255 COLLATE NOCASE)/(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c2))>((vt0.c1))) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.16630247453101255 COLLATE NOCASE)/(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c2))>((vt0.c1))) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY ((0.16630247453101255 COLLATE NOCASE)/(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c2))>((vt0.c1))) ELSE CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.16630247453101255 COLLATE NOCASE)/(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN (((vt0.c2))>((vt0.c1))) ELSE CAST(vt0.c0 AS TEXT) END) ORDER BY ((0.16630247453101255 COLLATE NOCASE)/(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c2 COLLATE NOCASE THEN ((vt0.c1) IS TRUE) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) IS FALSE)) ORDER BY (((vt0.c0)-(vt0.c1)) IN ('9Q40R?0')) DESC, CAST(((vt0.c2)|(vt0.c1)) AS BLOB), (((CAST(vt0.c1 AS BLOB)))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)-(vt0.c1)) IN ('9Q40R?0')) DESC, CAST(((vt0.c2)|(vt0.c1)) AS BLOB), (((CAST(vt0.c1 AS BLOB)))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) IS FALSE)) ORDER BY (((vt0.c0)-(vt0.c1)) IN ('9Q40R?0')) DESC, CAST(((vt0.c2)|(vt0.c1)) AS BLOB), (((CAST(vt0.c1 AS BLOB)))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((vt0.c1)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)-(vt0.c1)) IN ('9Q40R?0')) DESC, CAST(((vt0.c2)|(vt0.c1)) AS BLOB), (((CAST(vt0.c1 AS BLOB)))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<>((vt0.c1)))) IS FALSE)) ORDER BY (((vt0.c0)-(vt0.c1)) IN ('9Q40R?0')) DESC, CAST(((vt0.c2)|(vt0.c1)) AS BLOB), (((CAST(vt0.c1 AS BLOB)))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0))))) ORDER BY (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (NULL)))) AND ((((vt0.c1)OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (NULL)))) AND ((((vt0.c1)OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (NULL)))) AND ((((vt0.c1)OR(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (NULL)))) AND ((((vt0.c1)OR(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (NULL)))) AND ((((vt0.c1)OR(vt1.c0))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, x''))) COLLATE RTRIM) ORDER BY vt0.c1 DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((vt0.c1) ISNULL), 0.5977730847652221) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, x''))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((vt0.c1) ISNULL), 0.5977730847652221) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, x''))) COLLATE RTRIM) ORDER BY vt0.c1 DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((vt0.c1) ISNULL), 0.5977730847652221) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, x''))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1 DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((vt0.c1) ISNULL), 0.5977730847652221) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, x''))) COLLATE RTRIM) ORDER BY vt0.c1 DESC  NULLS LAST, LIKELIHOOD(DISTINCT ((vt0.c1) ISNULL), 0.5977730847652221) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CAST(0.010243489807284178 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0.010243489807284178 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CAST(0.010243489807284178 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(0.010243489807284178 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CAST(0.010243489807284178 AS TEXT))));
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((v0.c0, v0.c0, vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c2, v0.c0, vt0.c2, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0, v0.c0, vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c2, v0.c0, vt0.c2, vt0.c1))) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((v0.c0, v0.c0, vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c2, v0.c0, vt0.c2, vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0, v0.c0, vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c2, v0.c0, vt0.c2, vt0.c1))) IN ())) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL * FROM v0, vt1, vt0 WHERE (((((v0.c0, v0.c0, vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, vt0.c2, v0.c0, vt0.c2, vt0.c1))) IN ()));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0))==((vt0.c0))) IN (NULL)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0))==((vt0.c0))) IN (NULL)));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0))==((vt0.c0))) IN (NULL)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0))==((vt0.c0))) IN (NULL)));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((vt1.c0))==((vt0.c0))) IN (NULL)) WHERE (vt1.c0);
SELECT ALL * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) WHERE (((CAST(vt1.c0 AS NUMERIC))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) WHERE (((CAST(vt1.c0 AS NUMERIC))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) ORDER BY v0.c0 DESC);
SELECT ALL * FROM v0 INNER JOIN vt1 ON LOWER(DISTINCT ((((((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0))) WHERE (((CAST(vt1.c0 AS NUMERIC))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY v0.c0 DESC;
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))IS NOT(-1270607353)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>=((vt1.c0))))IS NOT(-1270607353))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))IS NOT(-1270607353)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>=((vt1.c0))))IS NOT(-1270607353))) IS TRUE)  as count FROM v0, vt0, vt1);
SELECT * FROM v0, vt0, vt1 WHERE ((((((vt1.c0))>=((vt1.c0))))IS NOT(-1270607353)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0))<((v0.c0))), (~ (v0.c0)), ((v0.c0) IS FALSE)))<(((v0.c0 IN ()), v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<((v0.c0))), (~ (v0.c0)), ((v0.c0) IS FALSE)))<(((v0.c0 IN ()), v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0))<((v0.c0))), (~ (v0.c0)), ((v0.c0) IS FALSE)))<(((v0.c0 IN ()), v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<((v0.c0))), (~ (v0.c0)), ((v0.c0) IS FALSE)))<(((v0.c0 IN ()), v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0))<((v0.c0))), (~ (v0.c0)), ((v0.c0) IS FALSE)))<(((v0.c0 IN ()), v0.c0 COLLATE BINARY, CAST(v0.c0 AS BLOB))))) ORDER BY CAST(((v0.c0)AND(v0.c0)) AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST((((1.208206733E9, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((1.208206733E9, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((1.208206733E9, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((1.208206733E9, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST((((1.208206733E9, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST(((x'1f55') BETWEEN (x'') AND (v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST(((x'1f55') BETWEEN (x'') AND (v0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST(((x'1f55') BETWEEN (x'') AND (v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST(((x'1f55') BETWEEN (x'') AND (v0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((v0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END AS NUMERIC), CAST(((x'1f55') BETWEEN (x'') AND (v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c1) NOTNULL), 0.8641455355623504)) ORDER BY CAST((vt0.c1 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c1) NOTNULL), 0.8641455355623504)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c1) NOTNULL), 0.8641455355623504)) ORDER BY CAST((vt0.c1 IN ()) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((vt0.c1) NOTNULL), 0.8641455355623504)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.c1) NOTNULL), 0.8641455355623504)) ORDER BY CAST((vt0.c1 IN ()) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT ((vt0.c2)<=(vt0.c1)), ((0.10392918786445826)IS(vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((((((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)))AND(-1.492347244E9)))AND(v0.c0))))) ASC, 0.4193450574631268 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c2)<=(vt0.c1)), ((0.10392918786445826)IS(vt0.c1)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((((((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)))AND(-1.492347244E9)))AND(v0.c0))))) ASC, 0.4193450574631268 ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT ((vt0.c2)<=(vt0.c1)), ((0.10392918786445826)IS(vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((((((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)))AND(-1.492347244E9)))AND(v0.c0))))) ASC, 0.4193450574631268 ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c2)<=(vt0.c1)), ((0.10392918786445826)IS(vt0.c1)))) IS TRUE)  as count FROM vt1, v0, vt0 ORDER BY (((v0.c0)) BETWEEN (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((((((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)))AND(-1.492347244E9)))AND(v0.c0))))) ASC, 0.4193450574631268 ASC);
SELECT ALL COUNT(*) FROM vt1, v0, vt0 WHERE (TRIM(DISTINCT ((vt0.c2)<=(vt0.c1)), ((0.10392918786445826)IS(vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN (((((vt0.c1, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))) AND ((((((((((vt0.c0)OR(vt0.c2)))AND(vt1.c0)))AND(-1.492347244E9)))AND(v0.c0))))) ASC, 0.4193450574631268 ASC;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)OR(0X33a005c2)))OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(0X33a005c2)))OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)OR(0X33a005c2)))OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(0X33a005c2)))OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((vt0.c0)OR(0X33a005c2)))OR(vt0.c2)))OR(v0.c0)))AND(v0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((NOT ((((vt1.c0))<((vt1.c0)))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x33bb3f68))))&(-2.57820817E8)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x33bb3f68))))&(-2.57820817E8)) DESC);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((NOT ((((vt1.c0))<((vt1.c0)))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x33bb3f68))))&(-2.57820817E8)) DESC;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x33bb3f68))))&(-2.57820817E8)) DESC);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((NOT ((((vt1.c0))<((vt1.c0)))))) ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x33bb3f68))))&(-2.57820817E8)) DESC;
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END) ORDER BY CAST(((vt0.c2)LIKE(vt0.c2)) AS TEXT) ASC  NULLS FIRST, ((CASE NULL  WHEN vt0.c2 THEN 1171970226 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)LIKE(vt0.c2)) AS TEXT) ASC  NULLS FIRST, ((CASE NULL  WHEN vt0.c2 THEN 1171970226 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END) ORDER BY CAST(((vt0.c2)LIKE(vt0.c2)) AS TEXT) ASC  NULLS FIRST, ((CASE NULL  WHEN vt0.c2 THEN 1171970226 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c2)LIKE(vt0.c2)) AS TEXT) ASC  NULLS FIRST, ((CASE NULL  WHEN vt0.c2 THEN 1171970226 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (CAST(vt0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c2)/(vt0.c0)) ELSE ((vt0.c2)>(vt0.c1)) END) ORDER BY CAST(((vt0.c2)LIKE(vt0.c2)) AS TEXT) ASC  NULLS FIRST, ((CASE NULL  WHEN vt0.c2 THEN 1171970226 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)>=(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))  NULLS FIRST, (((+ (vt0.c0))) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE));
SELECT * FROM v0, vt1, vt0 WHERE (json_type(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE WHEN vt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (json_type(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_type(CASE WHEN vt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT * FROM v0, vt1, vt0 WHERE (json_type(CASE WHEN vt0.c1 THEN vt0.c0 END));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((LOWER(vt0.c1))<=(((vt0.c1)%(vt0.c2)))) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)) WHEN x'' THEN CASE vt0.c1  WHEN 'é—¾a' THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE ((~ (v0.c0))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END))>((((vt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((LOWER(vt0.c1))<=(((vt0.c1)%(vt0.c2)))) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)) WHEN x'' THEN CASE vt0.c1  WHEN 'é—¾a' THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END))>((((vt0.c2) ISNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((LOWER(vt0.c1))<=(((vt0.c1)%(vt0.c2)))) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)) WHEN x'' THEN CASE vt0.c1  WHEN 'é—¾a' THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE ((~ (v0.c0))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END))>((((vt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (v0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((LOWER(vt0.c1))<=(((vt0.c1)%(vt0.c2)))) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)) WHEN x'' THEN CASE vt0.c1  WHEN 'é—¾a' THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END))>((((vt0.c2) ISNULL)))) ASC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON ((LOWER(vt0.c1))<=(((vt0.c1)%(vt0.c2)))) RIGHT OUTER JOIN vt1 ON CASE ((vt0.c2) NOT NULL)  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c2 END THEN ((((((((vt1.c0)AND(vt0.c2)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1)) WHEN x'' THEN CASE vt0.c1  WHEN 'é—¾a' THEN vt1.c0 ELSE v0.c0 END ELSE ((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END WHERE ((~ (v0.c0))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 END))>((((vt0.c2) ISNULL)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN x'' THEN vt0.c1 ELSE ((vt0.c1)>(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN x'' THEN vt0.c1 ELSE ((vt0.c1)>(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN x'' THEN vt0.c1 ELSE ((vt0.c1)>(vt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN x'' THEN vt0.c1 ELSE ((vt0.c1)>(vt0.c2)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN x'' THEN vt0.c1 ELSE ((vt0.c1)>(vt0.c2)) END);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((((vt1.c0)AND(321148588)))OR(vt1.c0))  WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)OR(vt0.c2)) WHEN vt0.c0 THEN ((((((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(x'')) WHEN 0.01153032574693158 THEN NULLIF(vt0.c0, vt0.c1) WHEN ('0.34109895215770447' IN (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), ((0.6089330944475257)<=(vt0.c2)), (((vt0.c0))<((vt0.c2))))) AND (((0.5331641859076356 IN (vt0.c2)), vt0.c2, (+ (vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(321148588)))OR(vt1.c0))  WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)OR(vt0.c2)) WHEN vt0.c0 THEN ((((((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(x'')) WHEN 0.01153032574693158 THEN NULLIF(vt0.c0, vt0.c1) WHEN ('0.34109895215770447' IN (vt1.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), ((0.6089330944475257)<=(vt0.c2)), (((vt0.c0))<((vt0.c2))))) AND (((0.5331641859076356 IN (vt0.c2)), vt0.c2, (+ (vt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((((vt1.c0)AND(321148588)))OR(vt1.c0))  WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)OR(vt0.c2)) WHEN vt0.c0 THEN ((((((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(x'')) WHEN 0.01153032574693158 THEN NULLIF(vt0.c0, vt0.c1) WHEN ('0.34109895215770447' IN (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), ((0.6089330944475257)<=(vt0.c2)), (((vt0.c0))<((vt0.c2))))) AND (((0.5331641859076356 IN (vt0.c2)), vt0.c2, (+ (vt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(321148588)))OR(vt1.c0))  WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)OR(vt0.c2)) WHEN vt0.c0 THEN ((((((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(x'')) WHEN 0.01153032574693158 THEN NULLIF(vt0.c0, vt0.c1) WHEN ('0.34109895215770447' IN (vt1.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), ((0.6089330944475257)<=(vt0.c2)), (((vt0.c0))<((vt0.c2))))) AND (((0.5331641859076356 IN (vt0.c2)), vt0.c2, (+ (vt0.c2)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (CASE ((((vt1.c0)AND(321148588)))OR(vt1.c0))  WHEN CAST(vt0.c2 AS TEXT) THEN (NOT (vt0.c1)) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END THEN ((vt0.c2)OR(vt0.c2)) WHEN vt0.c0 THEN ((((((((((((vt1.c0)OR(x'')))AND(vt0.c2)))OR(vt1.c0)))OR(vt0.c1)))AND(vt1.c0)))OR(x'')) WHEN 0.01153032574693158 THEN NULLIF(vt0.c0, vt0.c1) WHEN ('0.34109895215770447' IN (vt1.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (((vt0.c1, vt1.c0, vt0.c2)) NOT BETWEEN ((((vt0.c1)LIKE(vt0.c0)), ((0.6089330944475257)<=(vt0.c2)), (((vt0.c0))<((vt0.c2))))) AND (((0.5331641859076356 IN (vt0.c2)), vt0.c2, (+ (vt0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(((0.43931648397809286)OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.43931648397809286)OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(((0.43931648397809286)OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.43931648397809286)OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE (CAST(((0.43931648397809286)OR(vt0.c0)) AS NUMERIC));
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((~ (v0.c0)))IS('2' COLLATE NOCASE)) WHERE (CASE '72630610'  WHEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN ()) WHEN (v0.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN vt0.c2 THEN ((((((((((((0x5980a9ce)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE v0.c0 END ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '72630610'  WHEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN ()) WHEN (v0.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN vt0.c2 THEN ((((((((((((0x5980a9ce)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE v0.c0 END ELSE vt0.c2 END) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON (((~ (v0.c0)))IS('2' COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((~ (v0.c0)))IS('2' COLLATE NOCASE)) WHERE (CASE '72630610'  WHEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN ()) WHEN (v0.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN vt0.c2 THEN ((((((((((((0x5980a9ce)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE v0.c0 END ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '72630610'  WHEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN ()) WHEN (v0.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN vt0.c2 THEN ((((((((((((0x5980a9ce)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE v0.c0 END ELSE vt0.c2 END) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt1 ON (((~ (v0.c0)))IS('2' COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt1 ON (((~ (v0.c0)))IS('2' COLLATE NOCASE)) WHERE (CASE '72630610'  WHEN (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN ()) WHEN (v0.c0 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN vt0.c2 THEN ((((((((((((0x5980a9ce)OR(v0.c0)))OR(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)) WHEN ((vt0.c1) ISNULL) THEN ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c2)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c2 ELSE v0.c0 END ELSE vt0.c2 END);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (UPPER(DISTINCT (((v0.c0, vt1.c0, vt0.c0, vt0.c2, vt1.c0)) NOT BETWEEN ((v0.c0, 0.005805424218421118, vt1.c0, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt1.c0, vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE BINARY END, vt1.c0 DESC, CAST(vt1.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c0, vt1.c0, vt0.c0, vt0.c2, vt1.c0)) NOT BETWEEN ((v0.c0, 0.005805424218421118, vt1.c0, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt1.c0, vt0.c1))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE BINARY END, vt1.c0 DESC, CAST(vt1.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (UPPER(DISTINCT (((v0.c0, vt1.c0, vt0.c0, vt0.c2, vt1.c0)) NOT BETWEEN ((v0.c0, 0.005805424218421118, vt1.c0, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt1.c0, vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE BINARY END, vt1.c0 DESC, CAST(vt1.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c0, vt1.c0, vt0.c0, vt0.c2, vt1.c0)) NOT BETWEEN ((v0.c0, 0.005805424218421118, vt1.c0, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt1.c0, vt0.c1))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE BINARY END, vt1.c0 DESC, CAST(vt1.c0 COLLATE RTRIM AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, vt1 WHERE (UPPER(DISTINCT (((v0.c0, vt1.c0, vt0.c0, vt0.c2, vt1.c0)) NOT BETWEEN ((v0.c0, 0.005805424218421118, vt1.c0, vt0.c2, vt1.c0)) AND ((vt0.c0, vt0.c2, vt0.c0, vt1.c0, vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN v0.c0 COLLATE BINARY END, vt1.c0 DESC, CAST(vt1.c0 COLLATE RTRIM AS BLOB)  NULLS LAST;
SELECT * FROM v0, vt0, vt1 WHERE ((+ ('')) COLLATE BINARY) ORDER BY CAST(((vt0.c2) NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((+ ('')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(((vt0.c2) NOT NULL) AS REAL));
SELECT * FROM v0, vt0, vt1 WHERE ((+ ('')) COLLATE BINARY) ORDER BY CAST(((vt0.c2) NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((+ ('')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY CAST(((vt0.c2) NOT NULL) AS REAL));
SELECT * FROM v0, vt0, vt1 WHERE ((+ ('')) COLLATE BINARY) ORDER BY CAST(((vt0.c2) NOT NULL) AS REAL);
SELECT COUNT(*) FROM vt1 WHERE (0.3161423073996016);
SELECT SUM(count) FROM (SELECT ((0.3161423073996016) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.3161423073996016);
SELECT SUM(count) FROM (SELECT ((0.3161423073996016) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.3161423073996016);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))=(((((('-778306816')AND(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))=(((((('-778306816')AND(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))=(((((('-778306816')AND(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))=(((((('-778306816')AND(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), vt0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))=(((((('-778306816')AND(vt0.c0)))AND(vt0.c0)), ((vt0.c2)<=(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN NULL THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS BLOB)  WHEN NULL THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN NULL THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c2 AS BLOB)  WHEN NULL THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, v0 WHERE (CASE CAST(vt0.c2 AS BLOB)  WHEN NULL THEN CAST(vt0.c1 AS NUMERIC) END) ORDER BY (vt0.c0 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY COALESCE(((vt0.c0) NOTNULL), (((vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, '\n\r''^DK{8ä¾½', vt1.c0, vt0.c1)) AND ((v0.c0, NULL, vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY COALESCE(((vt0.c0) NOTNULL), (((vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, '\n\r''^DK{8ä¾½', vt1.c0, vt0.c1)) AND ((v0.c0, NULL, vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY COALESCE(((vt0.c0) NOTNULL), (((vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, '\n\r''^DK{8ä¾½', vt1.c0, vt0.c1)) AND ((v0.c0, NULL, vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY COALESCE(((vt0.c0) NOTNULL), (((vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, '\n\r''^DK{8ä¾½', vt1.c0, vt0.c1)) AND ((v0.c0, NULL, vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE (vt1.c0) ORDER BY COALESCE(((vt0.c0) NOTNULL), (((vt0.c0, vt0.c2, vt1.c0, v0.c0, vt0.c0)) BETWEEN ((vt1.c0, v0.c0, '\n\r''^DK{8ä¾½', vt1.c0, vt0.c1)) AND ((v0.c0, NULL, vt1.c0, vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'2b25' AS INTEGER)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN x'e184' END COLLATE RTRIM ASC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN ((('') NOT NULL)) AND (0Xf89fce6))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'2b25' AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN x'e184' END COLLATE RTRIM ASC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN ((('') NOT NULL)) AND (0xf89fce6))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'2b25' AS INTEGER)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN x'e184' END COLLATE RTRIM ASC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN ((('') NOT NULL)) AND (0Xf89fce6))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'2b25' AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN x'e184' END COLLATE RTRIM ASC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN ((('') NOT NULL)) AND (0xf89fce6))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(x'2b25' AS INTEGER)) ORDER BY CASE v0.c0  WHEN v0.c0 THEN x'e184' END COLLATE RTRIM ASC  NULLS LAST, ((((((v0.c0)AND(v0.c0)))OR(v0.c0))) NOT BETWEEN ((('') NOT NULL)) AND (0Xf89fce6))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (NULL IN (v0.c0, NULL)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.33762443752107485))) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN x'2c3c' END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.33762443752107485))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (NULL IN (v0.c0, NULL)) COLLATE NOCASE ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN x'2c3c' END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (NULL IN (v0.c0, NULL)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.33762443752107485))) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN x'2c3c' END AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.33762443752107485))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN v0 ON (NULL IN (v0.c0, NULL)) COLLATE NOCASE ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN x'2c3c' END AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN v0 ON (NULL IN (v0.c0, NULL)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT LIKELIHOOD(DISTINCT vt1.c0, 0.33762443752107485))) ORDER BY x'' COLLATE NOCASE DESC  NULLS LAST, CAST(CASE WHEN vt1.c0 THEN x'2c3c' END AS INTEGER)  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END) NOTNULL));
SELECT * FROM vt0, vt1, v0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM vt0, vt1, v0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<=((LIKELIHOOD(DISTINCT 'R]', 0.6912357837582588)))) WHERE (((vt0.c2) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<=((LIKELIHOOD(DISTINCT 'R]', 0.6912357837582588)))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<=((LIKELIHOOD(DISTINCT 'R]', 0.6912357837582588)))) WHERE (((vt0.c2) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1, v0 CROSS JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<=((LIKELIHOOD(DISTINCT 'R]', 0.6912357837582588)))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, v0 CROSS JOIN vt0 ON (((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c2))))<=((LIKELIHOOD(DISTINCT 'R]', 0.6912357837582588)))) WHERE (((vt0.c2) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0)))) AND (((vt1.c0)>=(vt1.c0))))) ORDER BY ((((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 COLLATE RTRIM WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((LOWER(DISTINCT '1737890303'), CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)), (('MM^_c%') NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((LOWER(DISTINCT '1737890303'), CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)), (('MM^_c%') NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 COLLATE RTRIM WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((LOWER(DISTINCT '1737890303'), CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)), (('MM^_c%') NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((LOWER(DISTINCT '1737890303'), CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)), (('MM^_c%') NOT BETWEEN (vt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 COLLATE RTRIM WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((LOWER(DISTINCT '1737890303'), CASE v0.c0  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END, (NOT (v0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC), ((vt0.c2) NOT BETWEEN (NULL) AND (vt0.c0)), (('MM^_c%') NOT BETWEEN (vt0.c0) AND (v0.c0))))));
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, v0);
SELECT COUNT(*) FROM vt1, vt0, v0 WHERE ('');
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))!=(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))<>(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))!=(((vt1.c0)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))<>(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0)OR(vt1.c0)))!=(((vt1.c0)|(vt1.c0)))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)*(vt0.c2))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c2)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c2))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)*(vt0.c2))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c2)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c2))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c2)*(vt0.c2))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((vt0.c2)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((+ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((+ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL COUNT(*) FROM vt0, vt1, v0 WHERE ((+ ((vt1.c0 IN ()))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOTNULL) WHERE (((CASE WHEN 0.49402643160726534 THEN vt0.c0 ELSE vt0.c2 END)LIKE((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.49402643160726534 THEN vt0.c0 ELSE vt0.c2 END)LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOTNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOTNULL) WHERE (((CASE WHEN 0.49402643160726534 THEN vt0.c0 ELSE vt0.c2 END)LIKE((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.49402643160726534 THEN vt0.c0 ELSE vt0.c2 END)LIKE((- (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOTNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c1 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN v0 ON ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) NOTNULL) WHERE (((CASE WHEN 0.49402643160726534 THEN vt0.c0 ELSE vt0.c2 END)LIKE((- (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(LOWER(DISTINCT vt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT vt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(LOWER(DISTINCT vt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT vt0.c2) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt1);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(LOWER(DISTINCT vt0.c2) AS NUMERIC));
SELECT ALL * FROM v0, vt1 WHERE (((((((v0.c0)GLOB(vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY CAST(NULL AS BLOB) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)GLOB(vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(NULL AS BLOB) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (((((((v0.c0)GLOB(vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY CAST(NULL AS BLOB) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)GLOB(vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0, vt1 ORDER BY CAST(NULL AS BLOB) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt1 WHERE (((((((v0.c0)GLOB(vt1.c0)))OR(CAST(v0.c0 AS REAL))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY CAST(NULL AS BLOB) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt1 WHERE ((((((- (vt1.c0)))AND(UPPER(v0.c0))))OR(TRIM(DISTINCT 'nQ]g]z|å¹º', vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(UPPER(v0.c0))))OR(TRIM(DISTINCT 'nQ]g]z|å¹º', vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((((- (vt1.c0)))AND(UPPER(v0.c0))))OR(TRIM(DISTINCT 'nQ]g]z|å¹º', vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((- (vt1.c0)))AND(UPPER(v0.c0))))OR(TRIM(DISTINCT 'nQ]g]z|å¹º', vt1.c0)))) IS TRUE)  as count FROM v0, vt1);
SELECT COUNT(*) FROM v0, vt1 WHERE ((((((- (vt1.c0)))AND(UPPER(v0.c0))))OR(TRIM(DISTINCT 'nQ]g]z|å¹º', vt1.c0))));
SELECT * FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) ISNULL))) ORDER BY CAST((~ (vt1.c0)) AS TEXT), vt1.c0 ASC  NULLS FIRST, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT), vt1.c0 ASC  NULLS FIRST, (x'' IN ()));
SELECT * FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) ISNULL))) ORDER BY CAST((~ (vt1.c0)) AS TEXT), vt1.c0 ASC  NULLS FIRST, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1 ORDER BY CAST((~ (vt1.c0)) AS TEXT), vt1.c0 ASC  NULLS FIRST, (x'' IN ()));
SELECT * FROM vt1 WHERE (UPPER(DISTINCT ((vt1.c0) ISNULL))) ORDER BY CAST((~ (vt1.c0)) AS TEXT), vt1.c0 ASC  NULLS FIRST, (x'' IN ());
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((327855219, v0.c0, v0.c0))) IN ())) ORDER BY CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((327855219, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((327855219, v0.c0, v0.c0))) IN ())) ORDER BY CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((327855219, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((327855219, v0.c0, v0.c0))) IN ())) ORDER BY CAST(v0.c0 AS TEXT) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE vt0.c2 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE x'5c41130f' END WHERE (0.06191923401221244);
SELECT SUM(count) FROM (SELECT ((0.06191923401221244) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE vt0.c2 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE x'5c41130f' END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE vt0.c2 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE x'5c41130f' END WHERE (0.06191923401221244);
SELECT SUM(count) FROM (SELECT ((0.06191923401221244) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE vt0.c2 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE x'5c41130f' END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE vt0.c2 COLLATE NOCASE  WHEN vt0.c1 COLLATE BINARY THEN (v0.c0 IN ()) ELSE x'5c41130f' END WHERE (0.06191923401221244);
SELECT * FROM vt0 WHERE (CASE WHEN ((((0.43199898264908687)AND(vt0.c0)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.43199898264908687)AND(vt0.c0)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((0.43199898264908687)AND(vt0.c0)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((0.43199898264908687)AND(vt0.c0)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((((0.43199898264908687)AND(vt0.c0)))AND(vt0.c2)) THEN CAST(vt0.c1 AS REAL) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (PRINTF((~ (v0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c1)))=((NOT (vt0.c1))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF((~ (v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)||(vt0.c1)))==((NOT (vt0.c1))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))), vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (PRINTF((~ (v0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c1)))=((NOT (vt0.c1))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((PRINTF((~ (v0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)||(vt0.c1)))==((NOT (vt0.c1))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))), vt0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (PRINTF((~ (v0.c0)))) ORDER BY ((((vt0.c0)||(vt0.c1)))=((NOT (vt0.c1))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((NOT (vt0.c0)))), vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN (((x'')<(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) BETWEEN (((x'')<(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN (((x'')<(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>(v0.c0))) BETWEEN (((x'')<(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN (((x'')<(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ('-1145917856') ORDER BY (('PnDb9ë½œ') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (('-1145917856') IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (('PnDb9ë½œ') IS TRUE));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ('-1145917856') ORDER BY (('PnDb9ë½œ') IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (('-1145917856') IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (('PnDb9ë½œ') IS TRUE));
SELECT COUNT(*) FROM v0, vt0, vt1 WHERE ('-1145917856') ORDER BY (('PnDb9ë½œ') IS TRUE);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT ALL * FROM vt0, vt1, v0 WHERE ((- (vt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c0 IN ())) AND (((x'a6b3') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((v0.c0 IN ())) AND (((x'a6b3') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c0 IN ())) AND (((x'a6b3') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN ((v0.c0 IN ())) AND (((x'a6b3') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN ((v0.c0 IN ())) AND (((x'a6b3') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 DESC  NULLS FIRST, (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) ASC  NULLS LAST, CAST(((v0.c0)OR(v0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '' ASC, (((NOT (vt0.c0)))IS(vt0.c2 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY '' ASC, (((NOT (vt0.c0)))IS(vt0.c2 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '' ASC, (((NOT (vt0.c0)))IS(vt0.c2 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY '' ASC, (((NOT (vt0.c0)))IS(vt0.c2 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY '' ASC, (((NOT (vt0.c0)))IS(vt0.c2 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('')AND(vt0.c0))))>=(((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('')AND(vt0.c0))))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('')AND(vt0.c0))))>=(((~ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('')AND(vt0.c0))))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('')AND(vt0.c0))))>=(((~ (vt0.c1))))));
SELECT * FROM vt0, v0 WHERE ((('')OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((('')OR((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('')OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((('')OR((~ (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((('')OR((~ (v0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2 COLLATE RTRIM)<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM)<(((vt0.c0) IS FALSE))));
SELECT * FROM v0, vt1, vt0 NOT INDEXED WHERE (json_valid(((vt1.c0) NOT NULL))) ORDER BY ((((vt1.c0, vt1.c0, vt0.c2))>((vt0.c1, vt0.c1, vt1.c0))) IN ((vt0.c1 IN ()), vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt1.c0, vt1.c0, vt0.c2))>((vt0.c1, vt0.c1, vt1.c0))) IN ((vt0.c1 IN ()), vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0, vt1, vt0 NOT INDEXED WHERE (json_valid(((vt1.c0) NOT NULL))) ORDER BY ((((vt1.c0, vt1.c0, vt0.c2))>((vt0.c1, vt0.c1, vt1.c0))) IN ((vt0.c1 IN ()), vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(((vt1.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt1, vt0 ORDER BY ((((vt1.c0, vt1.c0, vt0.c2))>((vt0.c1, vt0.c1, vt1.c0))) IN ((vt0.c1 IN ()), vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM v0, vt1, vt0 NOT INDEXED WHERE (json_valid(((vt1.c0) NOT NULL))) ORDER BY ((((vt1.c0, vt1.c0, vt0.c2))>((vt0.c1, vt0.c1, vt1.c0))) IN ((vt0.c1 IN ()), vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM v0 NATURAL JOIN vt1 WHERE ((((v0.c0 COLLATE BINARY))<>((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL * FROM v0 NATURAL JOIN vt1 WHERE ((((v0.c0 COLLATE BINARY))<>((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE BINARY))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt1);
SELECT ALL * FROM v0 NATURAL JOIN vt1 WHERE ((((v0.c0 COLLATE BINARY))<>((((vt1.c0) ISNULL)))));
SELECT ALL * FROM vt1, v0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt1, v0);
SELECT ALL * FROM vt1, v0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1))<((vt0.c2 IN ())))) ORDER BY 0.8493494685602767  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c1))<((vt0.c2 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY 0.8493494685602767  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1))<((vt0.c2 IN ())))) ORDER BY 0.8493494685602767  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt0.c0, vt0.c1))<((vt0.c2 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0 ORDER BY 0.8493494685602767  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((IFNULL(vt0.c0, vt0.c1))<((vt0.c2 IN ())))) ORDER BY 0.8493494685602767  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE DESC, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE DESC, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE DESC, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE DESC, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT * FROM vt0, v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) ORDER BY (((vt0.c2, vt0.c2, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c1))) COLLATE NOCASE DESC, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((((v0.c0)AND(v0.c0)))OR(vt0.c1)) IN ())  NULLS LAST, LIKELIHOOD(CAST(v0.c0 AS REAL), 0.49475944170532715) ASC, ((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))&(CASE vt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((v0.c0)AND(v0.c0)))OR(vt0.c1)) IN ())  NULLS LAST, LIKELIHOOD(CAST(v0.c0 AS REAL), 0.49475944170532715) ASC, ((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))&(CASE vt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((((v0.c0)AND(v0.c0)))OR(vt0.c1)) IN ())  NULLS LAST, LIKELIHOOD(CAST(v0.c0 AS REAL), 0.49475944170532715) ASC, ((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))&(CASE vt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0, v0, vt1 ORDER BY (((((v0.c0)AND(v0.c0)))OR(vt0.c1)) IN ())  NULLS LAST, LIKELIHOOD(CAST(v0.c0 AS REAL), 0.49475944170532715) ASC, ((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))&(CASE vt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) ASC);
SELECT ALL COUNT(*) FROM vt0, v0, vt1 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY (((((v0.c0)AND(v0.c0)))OR(vt0.c1)) IN ())  NULLS LAST, LIKELIHOOD(CAST(v0.c0 AS REAL), 0.49475944170532715) ASC, ((((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))&(CASE vt0.c2  WHEN v0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)-(vt0.c1)))<>((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c1)))!=((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)-(vt0.c1)))<>((vt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)-(vt0.c1)))!=((vt0.c2 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)-(vt0.c1)))<>((vt0.c2 IN ()))));
SELECT ALL * FROM vt1, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CAST((((vt0.c0))>((v0.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST((((vt0.c0))>((v0.c0))) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CAST((((vt0.c0))>((v0.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, v0 ORDER BY CAST((((vt0.c0))>((v0.c0))) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY CAST((((vt0.c0))>((v0.c0))) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(v0.c0)), ((v0.c0)GLOB(v0.c0)), (v0.c0 IN (v0.c0))))<>(((((v0.c0))=((v0.c0))), (((''))>((v0.c0))), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(v0.c0)), ((v0.c0)GLOB(v0.c0)), (v0.c0 IN (v0.c0))))<>(((((v0.c0))=((v0.c0))), (((''))>((v0.c0))), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(v0.c0)), ((v0.c0)GLOB(v0.c0)), (v0.c0 IN (v0.c0))))<>(((((v0.c0))=((v0.c0))), (((''))>((v0.c0))), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)<=(v0.c0)), ((v0.c0)GLOB(v0.c0)), (v0.c0 IN (v0.c0))))<>(((((v0.c0))=((v0.c0))), (((''))>((v0.c0))), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(v0.c0)), ((v0.c0)GLOB(v0.c0)), (v0.c0 IN (v0.c0))))<>(((((v0.c0))=((v0.c0))), (((''))>((v0.c0))), v0.c0))));
SELECT ALL * FROM vt1, v0 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, '1880015741', vt1.c0))<=((vt1.c0, v0.c0, v0.c0))) AS BLOB) DESC, x'd562';
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((((vt1.c0, '1880015741', vt1.c0))<=((vt1.c0, v0.c0, v0.c0))) AS BLOB) DESC, x'd562');
SELECT ALL * FROM vt1, v0 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, '1880015741', vt1.c0))<=((vt1.c0, v0.c0, v0.c0))) AS BLOB) DESC, x'd562';
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, v0 ORDER BY CAST((((vt1.c0, '1880015741', vt1.c0))<=((vt1.c0, v0.c0, v0.c0))) AS BLOB) DESC, x'd562');
SELECT ALL * FROM vt1, v0 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY CAST((((vt1.c0, '1880015741', vt1.c0))<=((vt1.c0, v0.c0, v0.c0))) AS BLOB) DESC, x'd562';
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ('-163799354')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ('-163799354'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ('-163799354')));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ('-163799354'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND ('-163799354')));
SELECT COUNT(*) FROM v0 WHERE ((- (((('-813761172', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- (((('-813761172', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((('-813761172', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT (((- (((('-813761172', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((- (((('-813761172', v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((x'0b44')&(vt1.c0)))) INNER JOIN v0 ON CAST(0.2601903690205074 COLLATE NOCASE AS INTEGER) WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (((x'0b44')&(vt1.c0)))) INNER JOIN v0 ON CAST(0.2601903690205074 COLLATE NOCASE AS INTEGER) ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((x'0b44')&(vt1.c0)))) INNER JOIN v0 ON CAST(0.2601903690205074 COLLATE NOCASE AS INTEGER) WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (- (((x'0b44')&(vt1.c0)))) INNER JOIN v0 ON CAST(0.2601903690205074 COLLATE NOCASE AS INTEGER) ORDER BY vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON (- (((x'0b44')&(vt1.c0)))) INNER JOIN v0 ON CAST(0.2601903690205074 COLLATE NOCASE AS INTEGER) WHERE (NULL) ORDER BY vt0.c1  NULLS LAST;
SELECT * FROM vt0, vt1, v0 WHERE (NULL) ORDER BY (vt0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (vt0.c2 IN ())  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (NULL) ORDER BY (vt0.c2 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, v0 ORDER BY (vt0.c2 IN ())  NULLS FIRST);
SELECT * FROM vt0, vt1, v0 WHERE (NULL) ORDER BY (vt0.c2 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c2)OR(vt1.c0))))) WHERE (((((((vt0.c0)OR(v0.c0)))OR(vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c2)OR(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c2)OR(vt1.c0))))) WHERE (((((((vt0.c0)OR(v0.c0)))OR(vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(v0.c0)))OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c2)OR(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, v0 FULL OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN ((NULL)) AND ((((vt0.c2)OR(vt1.c0))))) WHERE (((((((vt0.c0)OR(v0.c0)))OR(vt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((+ (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((+ (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt1, vt0);
SELECT ALL COUNT(*) FROM v0, vt1, vt0 WHERE ((((+ (vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN ((vt1.c0 IN ())) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) ORDER BY vt1.c0;
SELECT * FROM vt1, v0, vt0 WHERE (((((((vt0.c2)<('-155035669')))OR(TOTAL_CHANGES())))AND((0.5174584073210898 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)<('-155035669')))OR(TOTAL_CHANGES())))AND((0.5174584073210898 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((((((vt0.c2)<('-155035669')))OR(TOTAL_CHANGES())))AND((0.5174584073210898 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c2)<('-155035669')))OR(TOTAL_CHANGES())))AND((0.5174584073210898 IN ())))) IS TRUE)  as count FROM vt1, v0, vt0);
SELECT * FROM vt1, v0, vt0 WHERE (((((((vt0.c2)<('-155035669')))OR(TOTAL_CHANGES())))AND((0.5174584073210898 IN ()))));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((- (v0.c0)))=(((vt0.c1)<=(vt1.c0)))) WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((- (v0.c0)))=(((vt0.c1)<=(vt1.c0)))));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((- (v0.c0)))=(((vt0.c1)<=(vt1.c0)))) WHERE ((~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1))) IS TRUE)  as count FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((- (v0.c0)))=(((vt0.c1)<=(vt1.c0)))));
SELECT COUNT(*) FROM v0, vt1 LEFT OUTER JOIN vt0 ON (((- (v0.c0)))=(((vt0.c1)<=(vt1.c0)))) WHERE ((~ (vt0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('F_%]F0&F', vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, x'8b51'))))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)LIKE(vt1.c0)))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))OR(((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((('F_%]F0&F', vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, x'8b51'))))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)LIKE(vt1.c0)))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))OR(((vt1.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('F_%]F0&F', vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, x'8b51'))))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)LIKE(vt1.c0)))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))OR(((vt1.c0)IS NOT(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((('F_%]F0&F', vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, x'8b51'))))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)LIKE(vt1.c0)))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))OR(((vt1.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('F_%]F0&F', vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, x'8b51'))))GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((vt1.c0)LIKE(vt1.c0)))))OR(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)))OR(((vt1.c0)IS NOT(vt1.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))-(((vt1.c0) NOTNULL)))) ORDER BY (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))-(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))-(((vt1.c0) NOTNULL)))) ORDER BY (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))-(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))-(((vt1.c0) NOTNULL)))) ORDER BY (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)|(vt1.c0)))))) ORDER BY ((LIKELY(DISTINCT vt1.c0))>((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)|(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(DISTINCT vt1.c0))>((+ (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)|(vt1.c0)))))) ORDER BY ((LIKELY(DISTINCT vt1.c0))>((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)|(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(DISTINCT vt1.c0))>((+ (vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), CAST(vt1.c0 AS TEXT), vt1.c0))<((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)|(vt1.c0)))))) ORDER BY ((LIKELY(DISTINCT vt1.c0))>((+ (vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((x'') NOT NULL))))OR(((v0.c0)&(NULL)))) WHERE (LTRIM(vt1.c0 COLLATE RTRIM)) ORDER BY LIKELIHOOD(json_quote(v0.c0), 0.5873825591649771), (((((v0.c0))>=((v0.c0))))>((v0.c0 IN ()))) DESC, ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)OR(LOWER(v0.c0))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((x'') NOT NULL))))OR(((v0.c0)&(NULL)))) ORDER BY LIKELIHOOD(json_quote(v0.c0), 0.5873825591649771), (((((v0.c0))>=((v0.c0))))>((v0.c0 IN ()))) DESC, ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)OR(LOWER(v0.c0))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((x'') NOT NULL))))OR(((v0.c0)&(NULL)))) WHERE (LTRIM(vt1.c0 COLLATE RTRIM)) ORDER BY LIKELIHOOD(json_quote(v0.c0), 0.5873825591649771), (((((v0.c0))>=((v0.c0))))>((v0.c0 IN ()))) DESC, ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)OR(LOWER(v0.c0))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((x'') NOT NULL))))OR(((v0.c0)&(NULL)))) ORDER BY LIKELIHOOD(json_quote(v0.c0), 0.5873825591649771), (((((v0.c0))>=((v0.c0))))>((v0.c0 IN ()))) DESC, ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)OR(LOWER(v0.c0))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt1 ON ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(((x'') NOT NULL))))OR(((v0.c0)&(NULL)))) WHERE (LTRIM(vt1.c0 COLLATE RTRIM)) ORDER BY LIKELIHOOD(json_quote(v0.c0), 0.5873825591649771), (((((v0.c0))>=((v0.c0))))>((v0.c0 IN ()))) DESC, ((((CASE vt1.c0  WHEN v0.c0 THEN vt1.c0 END)OR(LOWER(v0.c0))))OR(((((vt1.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) END) ORDER BY UPPER(v0.c0), (((((v0.c0))=((v0.c0)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY UPPER(v0.c0), (((((v0.c0))=((v0.c0)))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) END) ORDER BY UPPER(v0.c0), (((((v0.c0))=((v0.c0)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY UPPER(v0.c0), (((((v0.c0))=((v0.c0)))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN NULLIF(v0.c0, v0.c0) THEN (((v0.c0, v0.c0, v0.c0))<((v0.c0, v0.c0, v0.c0))) END) ORDER BY UPPER(v0.c0), (((((v0.c0))=((v0.c0)))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON (((('8O*[')AND((NOT (vt0.c1)))))AND(v0.c0 COLLATE BINARY)) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY (((- (vt0.c2)))<<(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON (((('8O*[')AND((NOT (vt0.c1)))))AND(v0.c0 COLLATE BINARY)) ORDER BY (((- (vt0.c2)))<<(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON (((('8O*[')AND((NOT (vt0.c1)))))AND(v0.c0 COLLATE BINARY)) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY (((- (vt0.c2)))<<(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN vt1 ON (((('8O*[')AND((NOT (vt0.c1)))))AND(v0.c0 COLLATE BINARY)) ORDER BY (((- (vt0.c2)))<<(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN vt1 ON (((('8O*[')AND((NOT (vt0.c1)))))AND(v0.c0 COLLATE BINARY)) WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) ORDER BY (((- (vt0.c2)))<<(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))<=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(((vt0.c0)>(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(((vt0.c0)>(vt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)>(vt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, v0);
SELECT COUNT(*) FROM vt0, vt1, v0 WHERE (CAST(((vt0.c0)>(vt0.c2)) AS NUMERIC));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)OR(((0.03176753623945805)<<(vt0.c0)))))AND('K8}èµœ')) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)OR(((0.03176753623945805)<<(vt0.c0)))))AND('K8}èµœ')));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)OR(((0.03176753623945805)<<(vt0.c0)))))AND('K8}èµœ')) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)OR(((0.03176753623945805)<<(vt0.c0)))))AND('K8}èµœ')));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 COLLATE RTRIM)OR(((0.03176753623945805)<<(vt0.c0)))))AND('K8}èµœ')) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS REAL));
SELECT * FROM v0, vt0, vt1 NOT INDEXED WHERE ((((((v0.c0)OR(vt0.c2))))>((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))))) ORDER BY (((v0.c0)!=(vt0.c0)) IN ())  NULLS FIRST, ((IFNULL(vt0.c2, vt0.c1))IS NOT(((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(vt0.c2))))>((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((v0.c0)!=(vt0.c0)) IN ())  NULLS FIRST, ((IFNULL(vt0.c2, vt0.c1))IS NOT(((vt0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM v0, vt0, vt1 NOT INDEXED WHERE ((((((v0.c0)OR(vt0.c2))))>((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))))) ORDER BY (((v0.c0)!=(vt0.c0)) IN ())  NULLS FIRST, ((IFNULL(vt0.c2, vt0.c1))IS NOT(((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(vt0.c2))))>((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM v0, vt0, vt1 ORDER BY (((v0.c0)!=(vt0.c0)) IN ())  NULLS FIRST, ((IFNULL(vt0.c2, vt0.c1))IS NOT(((vt0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM v0, vt0, vt1 NOT INDEXED WHERE ((((((v0.c0)OR(vt0.c2))))>((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))))) ORDER BY (((v0.c0)!=(vt0.c0)) IN ())  NULLS FIRST, ((IFNULL(vt0.c2, vt0.c1))IS NOT(((vt0.c1) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((('' COLLATE RTRIM))=((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('' COLLATE RTRIM))==((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((('' COLLATE RTRIM))=((((v0.c0)<<(v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('' COLLATE RTRIM))==((((v0.c0)<<(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((('' COLLATE RTRIM))=((((v0.c0)<<(v0.c0))))));
