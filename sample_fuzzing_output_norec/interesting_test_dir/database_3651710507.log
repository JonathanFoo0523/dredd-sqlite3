-- Time: 2024/06/11 05:59:58
-- Database: database7
-- Database version: 3.40.0
-- seed value: 3651710507
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT ); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('9', NULL, x'27e5', '9'), (NULL, 0Xffffffffa2188c7f, x'', 0.7764346198244205), ('Zo', x'', 0Xfffffffff01955e2, '1734482101'); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (x'', NULL, 0.11775704227122707, x'a3a9'), ('!Z~#', 0.3397276201778644, x'', '-321103246'), (-1203054309, '', 0.7764346198244205, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.2541920003192115); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.7764346198244205), (0.2922369450261175), (((((((((NULL COLLATE RTRIM)AND('}.+	kY_빣4' COLLATE BINARY)))AND((((x'250b', 0.2541920003192115, '1677367681'))<(('-64712718', 1.419034211E9, -1414844031))))))OR(((x'') IS FALSE))))AND(((0.18148546253847486) IS TRUE)))); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES ('128032597'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('-1203054309', 470600256, 'X)Tx', NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES ('0.11775704227122707', 0.1338973225287199, 0.18148546253847486); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (0.5534692205451031, x''), (x'', 0.4782994696643226), (0.8058761257684562, 0xffffffffa50a762f); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (0.1843409309560622, 0xfffffffff01955e2); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=('-1039520992') WHERE (((rt0.c2))<>((rt0.c0))) COLLATE NOCASE; -- 1ms;
UPDATE rt0 SET (c2)=(x'eb44'); -- 0ms;
PRAGMA optimize; -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c0) VALUES (x'', NULL, -225653065), (1.419034211E9, '窞YH-T', NULL), (0.834063125906643, '', '408046083'); -- 1ms;
INSERT OR FAIL INTO rt0(c3, c1, c2) VALUES (NULL, x'6e07', '-1e500'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (0.7257149044519773, -266775070, x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', '-346487191', 0.8186117039593828), (0xffffffffb2837047, '-1414844031', '', NULL), (x'', -1039520992, 0.9613089129191452, 0.887388871067602); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('KHax~_zU', NULL); -- 1ms;
UPDATE rt0 SET c2='-346487191'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c3)=('245000080', 'Dflgd'); -- 1ms;
INSERT OR ABORT INTO rt0(c3, c0) VALUES (0.6383524273386986, x''), (x'', x''), (0.9613089129191452, NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3, c2, c1) VALUES (NULL, x'', 0.7058051632620778, NULL); -- 1ms;
REINDEX BINARY; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 INT ); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
CREATE INDEX IF NOT EXISTS i12 ON t0((+ (x''))); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7760729388751977); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='-1300008889', c2=2049887529; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='KHax~_zU', c2=x'fd32', c3=x'' WHERE (((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET c0=NULL; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(1.677367681E9, NULL, '') WHERE (((t0.c0, x'', t0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0, t0.c0)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((x''))), t0.c0)) AND ((t0.c0, ((t0.c0) IS TRUE), ((t0.c0)<<(t0.c0))))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(0.834063125906643) WHERE ((((((t0.c0))<>((t0.c0))), ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))<=((x'', ((t0.c0)>(t0.c0)), ((((t0.c0)OR(t0.c0)))AND(t0.c0))))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1.039520992E9); -- 0ms;
ANALYZE; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c87; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'', c2=''; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (0.8675415431207982, -1302014822), (NULL, x''), (NULL, 0xffffffffb05a46db); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3, c0, c2) VALUES (0Xffffffffcfcf2782, 0.9613089129191452, 0.6383524273386986, -1.203054309E9); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES ('-605899377', -1203054309, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c2, c0, c1) VALUES (NULL, x'', 0x4c95a20e, 0.5175850045729247); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
UPDATE vt0 SET c0=0.939167015044723, c0=NULL WHERE CASE WHEN 0.6383524273386986 THEN CAST(vt0.c0 AS REAL) WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (+ (0.08467238352829098)) END; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.49792521323501593); -- 0ms;
INSERT OR IGNORE INTO t0(c87) VALUES (0.776770402701587); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37296'); -- 1ms;
UPDATE OR IGNORE t0 SET c87='!Z~#', c87=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
UPDATE t0 SET c87=NULL WHERE CAST('2049887529' COLLATE NOCASE AS TEXT); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36485'); -- 0ms;
UPDATE rt0 SET c1=')<W>Zi쩀', c0='e0^' WHERE ((rt0.c2)/(CASE WHEN x'' THEN rt0.c1 ELSE rt0.c3 END)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (x''), (''), (NULL); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('䛛'); -- 0ms;
UPDATE OR IGNORE t0 SET c87=NULL WHERE (((t0.c87 IN ())) BETWEEN (((t0.c87) ISNULL)) AND (CAST(t0.c87 AS TEXT))); -- 0ms;
UPDATE OR IGNORE t0 SET c87=NULL WHERE ((CASE WHEN 0x1362561f THEN t0.c87 WHEN t0.c87 THEN t0.c87 WHEN t0.c87 THEN t0.c87 ELSE t0.c87 END)%(TYPEOF(t0.c87))); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
UPDATE t0 SET (c87)=('1284874766') WHERE ((t0.c87) NOTNULL) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.120745347948929; -- 0ms;
UPDATE OR REPLACE t0 SET c87=0.2585952596195499 WHERE ((((t0.c87)/(NULL))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.5545722317614399); -- 0ms;
ANALYZE; -- 1ms;
DELETE FROM t0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3) VALUES (NULL, '1419034211', '	p^䮀|t'); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c87 TO c52; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c52)=(-8.22510946E8); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DROP TABLE rt1; -- 1ms;
INSERT OR FAIL INTO t0 VALUES (NULL), (NULL), (NULL); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c52, c52, c52)=(NULL, '1416800893', NULL); -- 1ms;
PRAGMA cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO t0(c52) VALUES ('4)'), (x'efd929d8'), (2.049887529E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (0Xffffffffcfcf2782); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-382715100,3');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT rt0 SET c1=x'2cb1', c0='' WHERE ((CAST(rt0.c0 AS NUMERIC))|((('C^') NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 1ms;
UPDATE OR ABORT rt0 SET c0=''; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'') WHERE CAST((((rt0.c1, rt0.c3, rt0.c2))<>((rt0.c2, rt0.c2, rt0.c2))) AS REAL); -- 0ms;
UPDATE OR REPLACE t0 SET (c52, c52, c52)=(x'', 2.4500008E8, -6.4712718E7); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE INDEX i90 ON t0(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 0ms;
DROP INDEX IF EXISTS "i12"; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 756831936); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.08467238352829098 WHERE CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN NULL THEN rt0.c3 END; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c0) VALUES (x'', -1939182102, 1.284874766E9); -- 0ms;
INSERT OR IGNORE INTO t0(c52) VALUES (NULL); -- 1ms;
UPDATE vt0 SET c0=1964669428, c0='-998552704', c0='-1137636864'; -- 0ms;
UPDATE OR ABORT vt0 SET c0=NULL; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, rt0 WHERE (t0.c52) ORDER BY t0.c52, x'' DESC, '408046083' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c52, x'' DESC, '408046083' DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c52) ORDER BY t0.c52, x'' DESC, '408046083' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c52, x'' DESC, '408046083' DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c52) ORDER BY t0.c52, x'' DESC, '408046083' DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (((SUBSTR(rt0.c3, 0.6021293569658339)) NOT BETWEEN (((rt0.c0)>=(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0)<=(rt0.c0))))  NULLS LAST, '0.9613089129191452' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt0.c3, 0.6021293569658339)) NOT BETWEEN (((rt0.c0)>=(rt0.c2))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0)<=(rt0.c0))))  NULLS LAST, '0.9613089129191452' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((SUBSTR(rt0.c3, 0.6021293569658339)) NOT BETWEEN (((rt0.c0)>=(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0)<=(rt0.c0))))  NULLS LAST, '0.9613089129191452' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((SUBSTR(rt0.c3, 0.6021293569658339)) NOT BETWEEN (((rt0.c0)>=(rt0.c2))) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0)<=(rt0.c0))))  NULLS LAST, '0.9613089129191452' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((SUBSTR(rt0.c3, 0.6021293569658339)) NOT BETWEEN (((rt0.c0)>=(rt0.c2))) AND ((NOT (rt0.c2))))) ORDER BY (((rt0.c0) NOTNULL) IN ())  NULLS FIRST, (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)), ((rt0.c0)<=(rt0.c0))))  NULLS LAST, '0.9613089129191452' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)/(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS('ᒰ\nYQ嬺%') AS BLOB)) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)>>(rt0.c1)))) ASC, (((rt0.c1 IN (rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS('ᒰ\nYQ嬺%') AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)>>(rt0.c1)))) ASC, (((rt0.c1 IN (rt0.c0))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS('ᒰ\nYQ嬺%') AS BLOB)) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)>>(rt0.c1)))) ASC, (((rt0.c1 IN (rt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS('ᒰ\nYQ嬺%') AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)>>(rt0.c1)))) ASC, (((rt0.c1 IN (rt0.c0))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS('ᒰ\nYQ嬺%') AS BLOB)) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c1))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)>>(rt0.c1)))) ASC, (((rt0.c1 IN (rt0.c0))) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (TYPEOF(DISTINCT rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE BINARY;
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((SQLITE_VERSION())>=(rt0.c2)) WHERE (TRIM(1.284874766E9) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(1.284874766E9) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED CROSS JOIN t0 ON ((SQLITE_VERSION())>=(rt0.c2)));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((SQLITE_VERSION())>=(rt0.c2)) WHERE (TRIM(1.284874766E9) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TRIM(1.284874766E9) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED CROSS JOIN t0 ON ((SQLITE_VERSION())>=(rt0.c2)));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t0 ON ((SQLITE_VERSION())>=(rt0.c2)) WHERE (TRIM(1.284874766E9) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))||(((rt0.c3)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))||(((rt0.c3)AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))||(((rt0.c3)AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))||(((rt0.c3)AND(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))||(((rt0.c3)AND(rt0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c52)||(0.9887862394523309)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52)||(0.9887862394523309)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c52)||(0.9887862394523309)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c52)||(0.9887862394523309)) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(((t0.c52)||(0.9887862394523309)) AS BLOB));
SELECT * FROM vt0 WHERE (CASE WHEN 0x564ed2d2 THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X564ed2d2 THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN 0x564ed2d2 THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0X564ed2d2 THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN 0x564ed2d2 THEN ((((vt0.c0)OR(NULL)))AND(vt0.c0)) ELSE vt0.c0 END);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((-1.039520992E9) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((-1.039520992E9) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((-1.039520992E9) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((-1.039520992E9) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((-1.039520992E9) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('160669636') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC, TYPEOF(((vt0.c0)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('160669636') IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC, TYPEOF(((vt0.c0)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('160669636') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC, TYPEOF(((vt0.c0)>(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('160669636') IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC, TYPEOF(((vt0.c0)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('160669636') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((~ (vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC, TYPEOF(((vt0.c0)>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c52 THEN t0.c52 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c52 THEN t0.c52 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c52 THEN t0.c52 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c52 THEN t0.c52 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c0 COLLATE RTRIM) AND (CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c52 THEN t0.c52 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (CASE t0.c52  WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (CASE WHEN NULL THEN rt0.c0 ELSE t0.c52 END))) ORDER BY (((''))!=((CAST(rt0.c2 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (CASE t0.c52  WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (CASE WHEN NULL THEN rt0.c0 ELSE t0.c52 END))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((''))!=((CAST(rt0.c2 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (CASE t0.c52  WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (CASE WHEN NULL THEN rt0.c0 ELSE t0.c52 END))) ORDER BY (((''))!=((CAST(rt0.c2 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (CASE t0.c52  WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (CASE WHEN NULL THEN rt0.c0 ELSE t0.c52 END))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((''))!=((CAST(rt0.c2 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (CASE t0.c52  WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) AND (CASE WHEN NULL THEN rt0.c0 ELSE t0.c52 END))) ORDER BY (((''))!=((CAST(rt0.c2 AS INTEGER)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT 0.4112136152796638)) ORDER BY TRIM(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE (x'' IN ()) END;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT 0.4112136152796638)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE (x'' IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT 0.4112136152796638)) ORDER BY TRIM(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE (x'' IN ()) END;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT 0.4112136152796638)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE (x'' IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT 0.4112136152796638)) ORDER BY TRIM(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) DESC  NULLS FIRST, CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)<<(vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) ELSE (x'' IN ()) END;
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)%(vt0.c0))))>(((((t0.c52))<=((vt0.c0))))))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (0.09105310047939486) AND (t0.c52))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>(((((t0.c52))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (0.09105310047939486) AND (t0.c52)))));
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)%(vt0.c0))))>(((((t0.c52))<=((vt0.c0))))))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (0.09105310047939486) AND (t0.c52))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)%(vt0.c0))))>(((((t0.c52))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (0.09105310047939486) AND (t0.c52)))));
SELECT * FROM vt0, t0 WHERE ((((((vt0.c0)%(vt0.c0))))>(((((t0.c52))<=((vt0.c0))))))) ORDER BY (~ (((vt0.c0) NOT BETWEEN (0.09105310047939486) AND (t0.c52))));
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)<<(rt0.c1)), TRIM(DISTINCT rt0.c1))) ORDER BY CASE WHEN (+ (rt0.c3)) THEN rt0.c3 WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN TRIM(rt0.c0) ELSE ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0)<<(rt0.c1)), TRIM(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c3)) THEN rt0.c3 WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN TRIM(rt0.c0) ELSE ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)<<(rt0.c1)), TRIM(DISTINCT rt0.c1))) ORDER BY CASE WHEN (+ (rt0.c3)) THEN rt0.c3 WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN TRIM(rt0.c0) ELSE ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c0)<<(rt0.c1)), TRIM(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c3)) THEN rt0.c3 WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN TRIM(rt0.c0) ELSE ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c0)<<(rt0.c1)), TRIM(DISTINCT rt0.c1))) ORDER BY CASE WHEN (+ (rt0.c3)) THEN rt0.c3 WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1) IS FALSE) THEN TRIM(rt0.c0) ELSE ((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)OR(((rt0.c3)|(rt0.c0)))) WHERE ((((rt0.c0)<=(rt0.c2)) IN ())) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)OR(((rt0.c3)|(rt0.c0)))) ORDER BY rt0.c3);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)OR(((rt0.c3)|(rt0.c0)))) WHERE ((((rt0.c0)<=(rt0.c2)) IN ())) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)<=(rt0.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)OR(((rt0.c3)|(rt0.c0)))) ORDER BY rt0.c3);
SELECT COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)OR(((rt0.c3)|(rt0.c0)))) WHERE ((((rt0.c0)<=(rt0.c2)) IN ())) ORDER BY rt0.c3;
SELECT COUNT(*) FROM rt0 WHERE (((0.802888979226997)||(1.964669428E9))) ORDER BY (((((- (0.09060894044812107)))AND(CAST(rt0.c0 AS REAL))))AND(TYPEOF(rt0.c2))), (+ (((x'0f76') ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.802888979226997)||(1.964669428E9))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (0.09060894044812107)))AND(CAST(rt0.c0 AS REAL))))AND(TYPEOF(rt0.c2))), (+ (((x'0f76') ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.802888979226997)||(1.964669428E9))) ORDER BY (((((- (0.09060894044812107)))AND(CAST(rt0.c0 AS REAL))))AND(TYPEOF(rt0.c2))), (+ (((x'0f76') ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.802888979226997)||(1.964669428E9))) IS TRUE)  as count FROM rt0 ORDER BY (((((- (0.09060894044812107)))AND(CAST(rt0.c0 AS REAL))))AND(TYPEOF(rt0.c2))), (+ (((x'0f76') ISNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.802888979226997)||(1.964669428E9))) ORDER BY (((((- (0.09060894044812107)))AND(CAST(rt0.c0 AS REAL))))AND(TYPEOF(rt0.c2))), (+ (((x'0f76') ISNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c3))<((rt0.c3))) AS TEXT) WHERE (LIKE(TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c3)%(t0.c52))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c3)%(t0.c52)))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c3))<((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c3))<((rt0.c3))) AS TEXT) WHERE (LIKE(TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c3)%(t0.c52))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c3)%(t0.c52)))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c3))<((rt0.c3))) AS TEXT));
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c3))<((rt0.c3))) AS TEXT) WHERE (LIKE(TRIM(DISTINCT rt0.c1, rt0.c3), ((rt0.c3)%(t0.c52))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c2)>=(t0.c52))))=((((rt0.c2) ISNULL)))) WHERE (CASE ((t0.c52)||(rt0.c1))  WHEN (((x'b1b69caa', rt0.c2, rt0.c3)) BETWEEN (('2', rt0.c2, rt0.c0)) AND ((rt0.c1, 'p5', t0.c52))) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 END END) ORDER BY (((CASE WHEN t0.c52 THEN rt0.c3 END))>(((((t0.c52))>((t0.c52))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c52)||(rt0.c1))  WHEN (((x'b1b69caa', rt0.c2, rt0.c3)) BETWEEN (('2', rt0.c2, rt0.c0)) AND ((rt0.c1, 'p5', t0.c52))) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c2)>=(t0.c52))))==((((rt0.c2) ISNULL)))) ORDER BY (((CASE WHEN t0.c52 THEN rt0.c3 END))>(((((t0.c52))>((t0.c52))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c2)>=(t0.c52))))=((((rt0.c2) ISNULL)))) WHERE (CASE ((t0.c52)||(rt0.c1))  WHEN (((x'b1b69caa', rt0.c2, rt0.c3)) BETWEEN (('2', rt0.c2, rt0.c0)) AND ((rt0.c1, 'p5', t0.c52))) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 END END) ORDER BY (((CASE WHEN t0.c52 THEN rt0.c3 END))>(((((t0.c52))>((t0.c52))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c52)||(rt0.c1))  WHEN (((x'b1b69caa', rt0.c2, rt0.c3)) BETWEEN (('2', rt0.c2, rt0.c0)) AND ((rt0.c1, 'p5', t0.c52))) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 END END) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((rt0.c2)>=(t0.c52))))==((((rt0.c2) ISNULL)))) ORDER BY (((CASE WHEN t0.c52 THEN rt0.c3 END))>(((((t0.c52))>((t0.c52))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((((rt0.c2)>=(t0.c52))))=((((rt0.c2) ISNULL)))) WHERE (CASE ((t0.c52)||(rt0.c1))  WHEN (((x'b1b69caa', rt0.c2, rt0.c3)) BETWEEN (('2', rt0.c2, rt0.c0)) AND ((rt0.c1, 'p5', t0.c52))) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 END END) ORDER BY (((CASE WHEN t0.c52 THEN rt0.c3 END))>(((((t0.c52))>((t0.c52))))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LOWER(DISTINCT NULLIF(DISTINCT rt0.c2, rt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE LIKE(vt0.c0, 0.9882008337333326) END) ORDER BY (((((vt0.c0)/('0.6383524273386986'))))>(((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE LIKE(vt0.c0, 0.9882008337333326) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/('0.6383524273386986'))))>(((vt0.c0 IN (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE LIKE(vt0.c0, 0.9882008337333326) END) ORDER BY (((((vt0.c0)/('0.6383524273386986'))))>(((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE LIKE(vt0.c0, 0.9882008337333326) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)/('0.6383524273386986'))))>(((vt0.c0 IN (vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN json_patch(vt0.c0, vt0.c0) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) ELSE LIKE(vt0.c0, 0.9882008337333326) END) ORDER BY (((((vt0.c0)/('0.6383524273386986'))))>(((vt0.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.7395576592261522 IN ())) NOTNULL) WHERE (t0.c52) ORDER BY ((json_valid('128032597'))IS(t0.c52)), CAST(LIKELIHOOD(rt0.c2, 0.6780577580956917) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((0.7395576592261522 IN ())) NOTNULL) ORDER BY ((json_valid('128032597'))IS(t0.c52)), CAST(LIKELIHOOD(rt0.c2, 0.6780577580956917) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.7395576592261522 IN ())) NOTNULL) WHERE (t0.c52) ORDER BY ((json_valid('128032597'))IS(t0.c52)), CAST(LIKELIHOOD(rt0.c2, 0.6780577580956917) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((0.7395576592261522 IN ())) NOTNULL) ORDER BY ((json_valid('128032597'))IS(t0.c52)), CAST(LIKELIHOOD(rt0.c2, 0.6780577580956917) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((0.7395576592261522 IN ())) NOTNULL) WHERE (t0.c52) ORDER BY ((json_valid('128032597'))IS(t0.c52)), CAST(LIKELIHOOD(rt0.c2, 0.6780577580956917) AS TEXT) DESC;
SELECT COUNT(*) FROM t0 WHERE (((0.4748969323775478)GLOB(((t0.c52) ISNULL)))) ORDER BY ((t0.c52 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.4748969323775478)GLOB(((t0.c52) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c52 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((0.4748969323775478)GLOB(((t0.c52) ISNULL)))) ORDER BY ((t0.c52 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.4748969323775478)GLOB(((t0.c52) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c52 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((0.4748969323775478)GLOB(((t0.c52) ISNULL)))) ORDER BY ((t0.c52 COLLATE NOCASE) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c52)) BETWEEN (('')) AND ((t0.c52)))) NOT BETWEEN (t0.c52) AND (ABS(DISTINCT t0.c52)))) ORDER BY COALESCE((((vt0.c0))<=((t0.c52))), ((vt0.c0)||(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52)) BETWEEN (('')) AND ((t0.c52)))) NOT BETWEEN (t0.c52) AND (ABS(DISTINCT t0.c52)))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((((vt0.c0))<=((t0.c52))), ((vt0.c0)||(vt0.c0))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c52)) BETWEEN (('')) AND ((t0.c52)))) NOT BETWEEN (t0.c52) AND (ABS(DISTINCT t0.c52)))) ORDER BY COALESCE((((vt0.c0))<=((t0.c52))), ((vt0.c0)||(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52)) BETWEEN (('')) AND ((t0.c52)))) NOT BETWEEN (t0.c52) AND (ABS(DISTINCT t0.c52)))) IS TRUE)  as count FROM t0, vt0 ORDER BY COALESCE((((vt0.c0))<=((t0.c52))), ((vt0.c0)||(vt0.c0))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c52)) BETWEEN (('')) AND ((t0.c52)))) NOT BETWEEN (t0.c52) AND (ABS(DISTINCT t0.c52)))) ORDER BY COALESCE((((vt0.c0))<=((t0.c52))), ((vt0.c0)||(vt0.c0))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c3) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c3) IS FALSE))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c3) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c3) IS FALSE))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) ORDER BY (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c3) IS FALSE))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.6471608844292676 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6471608844292676 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.6471608844292676 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6471608844292676 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.6471608844292676 AS REAL));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (0.1295284318552692) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c52 END COLLATE NOCASE ASC  NULLS FIRST, (- (((0.8368896643613816)==(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1295284318552692) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c52 END COLLATE NOCASE ASC  NULLS FIRST, (- (((0.8368896643613816)=(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (0.1295284318552692) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c52 END COLLATE NOCASE ASC  NULLS FIRST, (- (((0.8368896643613816)==(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1295284318552692) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c52 END COLLATE NOCASE ASC  NULLS FIRST, (- (((0.8368896643613816)=(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (0.1295284318552692) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c1 ELSE t0.c52 END COLLATE NOCASE ASC  NULLS FIRST, (- (((0.8368896643613816)==(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((x'') ISNULL) WHERE ((((t0.c52)>=(t0.c52)) IN ())) ORDER BY load_extension((- (t0.c52))) DESC, ((((t0.c52 COLLATE BINARY)OR((+ (t0.c52)))))AND(-2011665203)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)>=(t0.c52)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((x'') ISNULL) ORDER BY load_extension((- (t0.c52))) DESC, ((((t0.c52 COLLATE BINARY)OR((+ (t0.c52)))))AND(-2011665203)) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((x'') ISNULL) WHERE ((((t0.c52)>=(t0.c52)) IN ())) ORDER BY load_extension((- (t0.c52))) DESC, ((((t0.c52 COLLATE BINARY)OR((+ (t0.c52)))))AND(-2011665203)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)>=(t0.c52)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((x'') ISNULL) ORDER BY load_extension((- (t0.c52))) DESC, ((((t0.c52 COLLATE BINARY)OR((+ (t0.c52)))))AND(-2011665203)) DESC);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CAST(((t0.c52)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c52)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CAST(((t0.c52)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c52)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CAST(((t0.c52)<(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(CASE 'K|'  WHEN rt0.c3 THEN rt0.c1 END, LIKELIHOOD(rt0.c3, 0.562254651581466)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE 'K|'  WHEN rt0.c3 THEN rt0.c1 END, LIKELIHOOD(rt0.c3, 0.562254651581466))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(CASE 'K|'  WHEN rt0.c3 THEN rt0.c1 END, LIKELIHOOD(rt0.c3, 0.562254651581466)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE 'K|'  WHEN rt0.c3 THEN rt0.c1 END, LIKELIHOOD(rt0.c3, 0.562254651581466))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(CASE 'K|'  WHEN rt0.c3 THEN rt0.c1 END, LIKELIHOOD(rt0.c3, 0.562254651581466)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (highlight(rt0.c3, rt0.c2, NULL, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c3, rt0.c2, NULL, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (highlight(rt0.c3, rt0.c2, NULL, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c3, rt0.c2, NULL, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM t0, rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c1)LIKE(rt0.c1)))))AND(0Xffffffffb00496df))) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END) AND ((t0.c52 IN (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))OR(((rt0.c1)LIKE(rt0.c1)))))AND(0xffffffffb00496df))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END) AND ((t0.c52 IN (rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c1)LIKE(rt0.c1)))))AND(0Xffffffffb00496df))) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END) AND ((t0.c52 IN (rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))OR(((rt0.c1)LIKE(rt0.c1)))))AND(0xffffffffb00496df))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END) AND ((t0.c52 IN (rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((((rt0.c3 IN ()))OR(((rt0.c1)LIKE(rt0.c1)))))AND(0Xffffffffb00496df))) ORDER BY ((((rt0.c3) IS FALSE)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END) AND ((t0.c52 IN (rt0.c3)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c3)))) WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c3);
SELECT ALL * FROM t0, vt0, rt0 WHERE (HEX(CAST(vt0.c0 AS REAL))) ORDER BY (((('112874746')AND((rt0.c2 IN ()))))OR(((rt0.c2)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((('112874746')AND((rt0.c2 IN ()))))OR(((rt0.c2)OR(rt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (HEX(CAST(vt0.c0 AS REAL))) ORDER BY (((('112874746')AND((rt0.c2 IN ()))))OR(((rt0.c2)OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((('112874746')AND((rt0.c2 IN ()))))OR(((rt0.c2)OR(rt0.c1)))));
SELECT ALL * FROM t0, vt0, rt0 WHERE (HEX(CAST(vt0.c0 AS REAL))) ORDER BY (((('112874746')AND((rt0.c2 IN ()))))OR(((rt0.c2)OR(rt0.c1))));
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY CAST(((t0.c52) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((t0.c52) IS FALSE) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY CAST(((t0.c52) IS FALSE) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((t0.c52) IS FALSE) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY CAST(((t0.c52) IS FALSE) AS NUMERIC) ASC;
SELECT ALL * FROM t0, vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((t0.c52 IN ())))>((CASE t0.c52  WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN x'911e' WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c52 IN ())))>((CASE t0.c52  WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN x'911e' WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((t0.c52 IN ())))>((CASE t0.c52  WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN x'911e' WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c52 IN ())))>((CASE t0.c52  WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN x'911e' WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0))))) ORDER BY ((((t0.c52 IN ())))>((CASE t0.c52  WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN x'911e' WHEN vt0.c0 THEN '' END))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)AND(t0.c52))  WHEN (- (vt0.c0)) THEN (((t0.c52))>((vt0.c0))) WHEN t0.c52 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)-(t0.c52)) THEN (t0.c52 IN ()) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)AND(t0.c52))  WHEN (- (vt0.c0)) THEN (((t0.c52))>((vt0.c0))) WHEN t0.c52 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)-(t0.c52)) THEN (t0.c52 IN ()) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)AND(t0.c52))  WHEN (- (vt0.c0)) THEN (((t0.c52))>((vt0.c0))) WHEN t0.c52 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)-(t0.c52)) THEN (t0.c52 IN ()) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)AND(t0.c52))  WHEN (- (vt0.c0)) THEN (((t0.c52))>((vt0.c0))) WHEN t0.c52 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)-(t0.c52)) THEN (t0.c52 IN ()) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE ((vt0.c0)AND(t0.c52))  WHEN (- (vt0.c0)) THEN (((t0.c52))>((vt0.c0))) WHEN t0.c52 COLLATE NOCASE THEN ((vt0.c0)<<(vt0.c0)) WHEN ((vt0.c0)-(t0.c52)) THEN (t0.c52 IN ()) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS NUMERIC));
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c3 AS TEXT) THEN CAST(rt0.c1 AS REAL) END);
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2);
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2);
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ((~ (rt0.c2))))) ORDER BY ((CASE WHEN '2049887529' THEN -1.302014822E9 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)) DESC, HEX(DISTINCT NULL) ASC, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c2)) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN '2049887529' THEN -1.302014822E9 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)) DESC, HEX(DISTINCT NULL) ASC, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ((~ (rt0.c2))))) ORDER BY ((CASE WHEN '2049887529' THEN -1.302014822E9 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)) DESC, HEX(DISTINCT NULL) ASC, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c2)) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN '2049887529' THEN -1.302014822E9 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)) DESC, HEX(DISTINCT NULL) ASC, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)<<(rt0.c2)) IN ((~ (rt0.c2))))) ORDER BY ((CASE WHEN '2049887529' THEN -1.302014822E9 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c2)) DESC, HEX(DISTINCT NULL) ASC, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (((((+ (t0.c52))))<>((((rt0.c1)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c52))))<>((((rt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((+ (t0.c52))))<>((((rt0.c1)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c52))))<>((((rt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((((+ (t0.c52))))<>((((rt0.c1)OR(rt0.c1))))));
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c52)OR((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))))AND(x'')) ASC, (+ (((t0.c52)>>(t0.c52)))) DESC  NULLS LAST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c52)OR((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))))AND(x'')) ASC, (+ (((t0.c52)>>(t0.c52)))) DESC  NULLS LAST, x''  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c52)OR((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))))AND(x'')) ASC, (+ (((t0.c52)>>(t0.c52)))) DESC  NULLS LAST, x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c52)OR((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))))AND(x'')) ASC, (+ (((t0.c52)>>(t0.c52)))) DESC  NULLS LAST, x''  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (NULL) ORDER BY ((((t0.c52)OR((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))))AND(x'')) ASC, (+ (((t0.c52)>>(t0.c52)))) DESC  NULLS LAST, x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(rt0.c2)))AND(json_valid(rt0.c2)))) ORDER BY ((((((((LOWER(DISTINCT rt0.c3))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c3)/(NULL)))))AND(((rt0.c0)>(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND(rt0.c2)))AND(json_valid(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LOWER(DISTINCT rt0.c3))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c3)/(NULL)))))AND(((rt0.c0)>(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) ASC, rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(rt0.c2)))AND(json_valid(rt0.c2)))) ORDER BY ((((((((LOWER(DISTINCT rt0.c3))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c3)/(NULL)))))AND(((rt0.c0)>(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND(rt0.c2)))AND(json_valid(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((LOWER(DISTINCT rt0.c3))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c3)/(NULL)))))AND(((rt0.c0)>(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) ASC, rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN ()))AND(rt0.c2)))AND(json_valid(rt0.c2)))) ORDER BY ((((((((LOWER(DISTINCT rt0.c3))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c3)/(NULL)))))AND(((rt0.c0)>(rt0.c1)))))AND(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) ASC, rt0.c1;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (((rt0.c3) IS TRUE))) FULL OUTER JOIN rt0 ON (~ ((((vt0.c0, rt0.c3, rt0.c1))<>((vt0.c0, rt0.c0, rt0.c2))))) WHERE ((((rt0.c1, rt0.c2, t0.c52)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)), ((rt0.c2)||(t0.c52)), ((rt0.c3)&(rt0.c3)))) AND (((- (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (NOT ('2090168207')) THEN ((rt0.c3)/(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END, (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (((rt0.c3) NOT BETWEEN ('-1446643928') AND (rt0.c3))) AND ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, t0.c52)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)), ((rt0.c2)||(t0.c52)), ((rt0.c3)&(rt0.c3)))) AND (((- (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (((rt0.c3) IS TRUE))) FULL OUTER JOIN rt0 ON (~ ((((vt0.c0, rt0.c3, rt0.c1))<>((vt0.c0, rt0.c0, rt0.c2))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (NOT ('2090168207')) THEN ((rt0.c3)/(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END, (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (((rt0.c3) NOT BETWEEN ('-1446643928') AND (rt0.c3))) AND ((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (+ (((rt0.c3) IS TRUE))) FULL OUTER JOIN rt0 ON (~ ((((vt0.c0, rt0.c3, rt0.c1))<>((vt0.c0, rt0.c0, rt0.c2))))) WHERE ((((rt0.c1, rt0.c2, t0.c52)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)), ((rt0.c2)||(t0.c52)), ((rt0.c3)&(rt0.c3)))) AND (((- (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (NOT ('2090168207')) THEN ((rt0.c3)/(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END, (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (((rt0.c3) NOT BETWEEN ('-1446643928') AND (rt0.c3))) AND ((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, t0.c52)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)), ((rt0.c2)||(t0.c52)), ((rt0.c3)&(rt0.c3)))) AND (((- (rt0.c2)), ((rt0.c2)LIKE(rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (+ (((rt0.c3) IS TRUE))) FULL OUTER JOIN rt0 ON (~ ((((vt0.c0, rt0.c3, rt0.c1))<>((vt0.c0, rt0.c0, rt0.c2))))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (NOT ('2090168207')) THEN ((rt0.c3)/(rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END, (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (((rt0.c3) NOT BETWEEN ('-1446643928') AND (rt0.c3))) AND ((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (0Xf3b3019 IN ('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (0Xf3b3019 IN ('')) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (0Xf3b3019 IN ('')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (0Xf3b3019 IN ('')) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (0Xf3b3019 IN ('')) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.13619924904456038) NOT NULL)) ORDER BY 0.5545722317614399 ASC;
SELECT SUM(count) FROM (SELECT ((((0.13619924904456038) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.5545722317614399 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.13619924904456038) NOT NULL)) ORDER BY 0.5545722317614399 ASC;
SELECT SUM(count) FROM (SELECT ((((0.13619924904456038) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.5545722317614399 ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.13619924904456038) NOT NULL)) ORDER BY 0.5545722317614399 ASC;
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c1)==(t0.c52)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c1)==(t0.c52)))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c1)==(t0.c52)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c1)==(t0.c52)))) DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (((rt0.c0) IS TRUE) COLLATE NOCASE) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))>>(((rt0.c1)==(t0.c52)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND('s7')))) INNER JOIN vt0 ON ((((((t0.c52)OR(vt0.c0)))OR(rt0.c2))) IS TRUE) WHERE (rt0.c3) ORDER BY json_array((rt0.c3 IN (vt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND('s7')))) INNER JOIN vt0 ON ((((((t0.c52)OR(vt0.c0)))OR(rt0.c2))) IS TRUE) ORDER BY json_array((rt0.c3 IN (vt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND('s7')))) INNER JOIN vt0 ON ((((((t0.c52)OR(vt0.c0)))OR(rt0.c2))) IS TRUE) WHERE (rt0.c3) ORDER BY json_array((rt0.c3 IN (vt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (- (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND('s7')))) INNER JOIN vt0 ON ((((((t0.c52)OR(vt0.c0)))OR(rt0.c2))) IS TRUE) ORDER BY json_array((rt0.c3 IN (vt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (- (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND('s7')))) INNER JOIN vt0 ON ((((((t0.c52)OR(vt0.c0)))OR(rt0.c2))) IS TRUE) WHERE (rt0.c3) ORDER BY json_array((rt0.c3 IN (vt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) DESC;
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) IS TRUE) IN (rt0.c3, (((t0.c52))>((rt0.c3)))))) ORDER BY ('2049887529' IN ())  NULLS LAST, ((((LIKELY(rt0.c3))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END)))AND(((x'')<>(t0.c52))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (rt0.c3, (((t0.c52))>((rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ('2049887529' IN ())  NULLS LAST, ((((LIKELY(rt0.c3))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END)))AND(((x'')!=(t0.c52)))));
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) IS TRUE) IN (rt0.c3, (((t0.c52))>((rt0.c3)))))) ORDER BY ('2049887529' IN ())  NULLS LAST, ((((LIKELY(rt0.c3))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END)))AND(((x'')<>(t0.c52))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN (rt0.c3, (((t0.c52))>((rt0.c3)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ('2049887529' IN ())  NULLS LAST, ((((LIKELY(rt0.c3))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END)))AND(((x'')!=(t0.c52)))));
SELECT * FROM t0, rt0, vt0 WHERE ((((vt0.c0) IS TRUE) IN (rt0.c3, (((t0.c52))>((rt0.c3)))))) ORDER BY ('2049887529' IN ())  NULLS LAST, ((((LIKELY(rt0.c3))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END)))AND(((x'')<>(t0.c52))));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((0.3330112735526827) NOT BETWEEN (vt0.c0) AND (UNICODE(rt0.c3)))) ORDER BY (((((+ (rt0.c1)))AND((- (NULL)))))OR(TYPEOF(rt0.c1))) ASC, ((((t0.c52) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((t0.c52)))) AND ((NOT (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3330112735526827) NOT BETWEEN (vt0.c0) AND (UNICODE(rt0.c3)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((+ (rt0.c1)))AND((- (NULL)))))OR(TYPEOF(rt0.c1))) ASC, ((((t0.c52) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((t0.c52)))) AND ((NOT (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((0.3330112735526827) NOT BETWEEN (vt0.c0) AND (UNICODE(rt0.c3)))) ORDER BY (((((+ (rt0.c1)))AND((- (NULL)))))OR(TYPEOF(rt0.c1))) ASC, ((((t0.c52) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((t0.c52)))) AND ((NOT (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3330112735526827) NOT BETWEEN (vt0.c0) AND (UNICODE(rt0.c3)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((+ (rt0.c1)))AND((- (NULL)))))OR(TYPEOF(rt0.c1))) ASC, ((((t0.c52) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((t0.c52)))) AND ((NOT (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((0.3330112735526827) NOT BETWEEN (vt0.c0) AND (UNICODE(rt0.c3)))) ORDER BY (((((+ (rt0.c1)))AND((- (NULL)))))OR(TYPEOF(rt0.c1))) ASC, ((((t0.c52) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((t0.c52)))) AND ((NOT (rt0.c3))))  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE (((UNLIKELY(DISTINCT rt0.c3))=(0.09060894044812107)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c3))=(0.09060894044812107))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((UNLIKELY(DISTINCT rt0.c3))=(0.09060894044812107)));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c3))=(0.09060894044812107))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((UNLIKELY(DISTINCT rt0.c3))=(0.09060894044812107)));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((0.33061007832742684)OR(CAST(rt0.c2 AS BLOB))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))) WHERE (((LTRIM(rt0.c1, rt0.c2))IS(CAST(vt0.c0 AS REAL)))) ORDER BY ((((((x'') BETWEEN (vt0.c0) AND (0Xfffffffff3426da7)))OR(((vt0.c0)GLOB(NULL)))))OR(IFNULL(DISTINCT rt0.c1, 'Ju')));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1, rt0.c2))IS(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((0.33061007832742684)OR(CAST(rt0.c2 AS BLOB))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))) ORDER BY ((((((x'') BETWEEN (vt0.c0) AND (0xfffffffff3426da7)))OR(((vt0.c0)GLOB(NULL)))))OR(IFNULL(DISTINCT rt0.c1, 'Ju'))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((0.33061007832742684)OR(CAST(rt0.c2 AS BLOB))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))) WHERE (((LTRIM(rt0.c1, rt0.c2))IS(CAST(vt0.c0 AS REAL)))) ORDER BY ((((((x'') BETWEEN (vt0.c0) AND (0Xfffffffff3426da7)))OR(((vt0.c0)GLOB(NULL)))))OR(IFNULL(DISTINCT rt0.c1, 'Ju')));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1, rt0.c2))IS(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((0.33061007832742684)OR(CAST(rt0.c2 AS BLOB))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))) ORDER BY ((((((x'') BETWEEN (vt0.c0) AND (0xfffffffff3426da7)))OR(((vt0.c0)GLOB(NULL)))))OR(IFNULL(DISTINCT rt0.c1, 'Ju'))));
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN t0 ON ((((0.33061007832742684)OR(CAST(rt0.c2 AS BLOB))))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))) WHERE (((LTRIM(rt0.c1, rt0.c2))IS(CAST(vt0.c0 AS REAL)))) ORDER BY ((((((x'') BETWEEN (vt0.c0) AND (0Xfffffffff3426da7)))OR(((vt0.c0)GLOB(NULL)))))OR(IFNULL(DISTINCT rt0.c1, 'Ju')));
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN (rt0.c3 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c1)|(rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))<=(((((rt0.c1)AND(rt0.c1)))AND(0.6021293569658339)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS INTEGER)  WHEN (rt0.c3 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c1)|(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL))<=(((((rt0.c1)AND(rt0.c1)))AND(0.6021293569658339)))) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN (rt0.c3 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c1)|(rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))<=(((((rt0.c1)AND(rt0.c1)))AND(0.6021293569658339)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS INTEGER)  WHEN (rt0.c3 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c1)|(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT NULL))<=(((((rt0.c1)AND(rt0.c1)))AND(0.6021293569658339)))) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN (rt0.c3 IN ()) THEN (rt0.c3 IN ()) ELSE ((rt0.c1)|(rt0.c0)) END) ORDER BY ((((rt0.c1) NOT NULL))<=(((((rt0.c1)AND(rt0.c1)))AND(0.6021293569658339)))) ASC;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((t0.c52) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c52) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((t0.c52) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c52) IS TRUE)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT (((t0.c52) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (('680096257') NOTNULL) WHERE (0Xffffffff8ae1d473);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff8ae1d473) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (('680096257') NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (('680096257') NOTNULL) WHERE (0Xffffffff8ae1d473);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff8ae1d473) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (('680096257') NOTNULL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (('680096257') NOTNULL) WHERE (0Xffffffff8ae1d473);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((CASE WHEN x'3b1c' THEN rt0.c2 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((CASE WHEN x'3b1c' THEN rt0.c2 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((CASE WHEN x'3b1c' THEN rt0.c2 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((CASE WHEN x'3b1c' THEN rt0.c2 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((CASE WHEN x'3b1c' THEN rt0.c2 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c0 END))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))%(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))%(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))%(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))%(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3)))%(rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c1, t0.c52, rt0.c3)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c1, t0.c52, rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c1, t0.c52, rt0.c3)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c1, t0.c52, rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c1, t0.c52, rt0.c3)))) NOTNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((DATE(rt0.c3, rt0.c2, rt0.c2))/(((rt0.c2)/('tP%6G^T')))) WHERE (0.4317403511891069);
SELECT SUM(count) FROM (SELECT ((0.4317403511891069) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((DATE(rt0.c3, rt0.c2, rt0.c2))/(((rt0.c2)/('tP%6G^T')))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((DATE(rt0.c3, rt0.c2, rt0.c2))/(((rt0.c2)/('tP%6G^T')))) WHERE (0.4317403511891069);
SELECT SUM(count) FROM (SELECT ((0.4317403511891069) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((DATE(rt0.c3, rt0.c2, rt0.c2))/(((rt0.c2)/('tP%6G^T')))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((DATE(rt0.c3, rt0.c2, rt0.c2))/(((rt0.c2)/('tP%6G^T')))) WHERE (0.4317403511891069);
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c3 THEN rt0.c2 END)));
SELECT * FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c3)LIKE(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (((rt0.c1) IS TRUE))) ASC  NULLS LAST, ((((((((((x'')*(rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(((rt0.c2)<>(rt0.c3)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c1)) ASC  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (((rt0.c1) IS TRUE))) ASC  NULLS LAST, ((((((((((x'')*(rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(((rt0.c2)<>(rt0.c3)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c1)) ASC  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND((rt0.c3 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) ORDER BY ((((rt0.c3)LIKE(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (((rt0.c1) IS TRUE))) ASC  NULLS LAST, ((((((((((x'')*(rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(((rt0.c2)<>(rt0.c3)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c1)) ASC  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END) AND (((rt0.c1) IS TRUE))) ASC  NULLS LAST, ((((((((((x'')*(rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(((rt0.c2)<>(rt0.c3)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c1)) ASC  NULLS FIRST, ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))AND((rt0.c3 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON x'' WHERE (((((((((((vt0.c0) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND(((x'') BETWEEN (rt0.c0) AND (NULL)))))OR(t0.c52)))OR(((t0.c52)+(vt0.c0))))) ORDER BY json_array_length(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN '-11304146' THEN t0.c52 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND(((x'') BETWEEN (rt0.c0) AND (NULL)))))OR(t0.c52)))OR(((t0.c52)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON x'' ORDER BY json_array_length(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN '-11304146' THEN t0.c52 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON x'' WHERE (((((((((((vt0.c0) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND(((x'') BETWEEN (rt0.c0) AND (NULL)))))OR(t0.c52)))OR(((t0.c52)+(vt0.c0))))) ORDER BY json_array_length(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN '-11304146' THEN t0.c52 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND(((x'') BETWEEN (rt0.c0) AND (NULL)))))OR(t0.c52)))OR(((t0.c52)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON x'' ORDER BY json_array_length(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)), CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN '-11304146' THEN t0.c52 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c0 END));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((((((((rt0.c1)IS NOT(rt0.c3)))OR((rt0.c2 IN ('1642694445', rt0.c2)))))OR(CASE rt0.c0  WHEN t0.c52 THEN rt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (-1725090037)))))OR(NULL)) WHERE ((((t0.c52 IN (t0.c52)))IS NOT(((rt0.c1)=(vt0.c0))))) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c0 AS NUMERIC))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c2 THEN NULL END)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN (t0.c52)))IS NOT(((rt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((((((((rt0.c1)IS NOT(rt0.c3)))OR((rt0.c2 IN ('1642694445', rt0.c2)))))OR(CASE rt0.c0  WHEN t0.c52 THEN rt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (-1725090037)))))OR(NULL)) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c0 AS NUMERIC))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c2 THEN NULL END)))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((((((((rt0.c1)IS NOT(rt0.c3)))OR((rt0.c2 IN ('1642694445', rt0.c2)))))OR(CASE rt0.c0  WHEN t0.c52 THEN rt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (-1725090037)))))OR(NULL)) WHERE ((((t0.c52 IN (t0.c52)))IS NOT(((rt0.c1)=(vt0.c0))))) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c0 AS NUMERIC))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c2 THEN NULL END)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN (t0.c52)))IS NOT(((rt0.c1)==(vt0.c0))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((((((((rt0.c1)IS NOT(rt0.c3)))OR((rt0.c2 IN ('1642694445', rt0.c2)))))OR(CASE rt0.c0  WHEN t0.c52 THEN rt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (-1725090037)))))OR(NULL)) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c0 AS NUMERIC))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c2 THEN NULL END)))OR(CAST(rt0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON ((((((((((rt0.c1)IS NOT(rt0.c3)))OR((rt0.c2 IN ('1642694445', rt0.c2)))))OR(CASE rt0.c0  WHEN t0.c52 THEN rt0.c1 ELSE vt0.c0 END)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (-1725090037)))))OR(NULL)) WHERE ((((t0.c52 IN (t0.c52)))IS NOT(((rt0.c1)=(vt0.c0))))) ORDER BY ((((((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c0 AS NUMERIC))))AND(CAST(rt0.c1 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c2 THEN NULL END)))OR(CAST(rt0.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8450083079165637) ORDER BY (((((rt0.c1))<((rt0.c2))))<((rt0.c3 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8450083079165637) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))<((rt0.c2))))<((rt0.c3 IN (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8450083079165637) ORDER BY (((((rt0.c1))<((rt0.c2))))<((rt0.c3 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.8450083079165637) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))<((rt0.c2))))<((rt0.c3 IN (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8450083079165637) ORDER BY (((((rt0.c1))<((rt0.c2))))<((rt0.c3 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (LIKE(t0.c52, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (LIKE(t0.c52, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (LIKE(t0.c52, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (LIKE(t0.c52, rt0.c2)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (LIKE(t0.c52, rt0.c2))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CAST(rt0.c3 AS INTEGER), vt0.c0) LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, ((rt0.c2) NOTNULL)) WHERE (((((t0.c52)/(rt0.c1)))OR((rt0.c3 IN (t0.c52))))) ORDER BY ((((rt0.c3)||(t0.c52))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST, ((CAST(rt0.c0 AS REAL)) BETWEEN ((+ (t0.c52))) AND (((rt0.c3)%(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)/(rt0.c1)))OR((rt0.c3 IN (t0.c52))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CAST(rt0.c3 AS INTEGER), vt0.c0) LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, ((rt0.c2) NOTNULL)) ORDER BY ((((rt0.c3)||(t0.c52))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST, ((CAST(rt0.c0 AS REAL)) BETWEEN ((+ (t0.c52))) AND (((rt0.c3)%(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CAST(rt0.c3 AS INTEGER), vt0.c0) LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, ((rt0.c2) NOTNULL)) WHERE (((((t0.c52)/(rt0.c1)))OR((rt0.c3 IN (t0.c52))))) ORDER BY ((((rt0.c3)||(t0.c52))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST, ((CAST(rt0.c0 AS REAL)) BETWEEN ((+ (t0.c52))) AND (((rt0.c3)%(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)/(rt0.c1)))OR((rt0.c3 IN (t0.c52))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT CAST(rt0.c3 AS INTEGER), vt0.c0) LEFT OUTER JOIN vt0 ON NULLIF(rt0.c1, ((rt0.c2) NOTNULL)) ORDER BY ((((rt0.c3)||(t0.c52))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (rt0.c2)))) DESC  NULLS FIRST, ((CAST(rt0.c0 AS REAL)) BETWEEN ((+ (t0.c52))) AND (((rt0.c3)%(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3) NOTNULL))OR((NULL IN ()))))AND(0.5840029997597389)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR((NULL IN ()))))AND(0.5840029997597389))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3) NOTNULL))OR((NULL IN ()))))AND(0.5840029997597389)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR((NULL IN ()))))AND(0.5840029997597389))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c3) NOTNULL))OR((NULL IN ()))))AND(0.5840029997597389)));
SELECT * FROM t0 WHERE ((~ (t0.c52 COLLATE BINARY))) ORDER BY (((t0.c52)) BETWEEN ((((t0.c52)<>(t0.c52)))) AND (((((t0.c52, NULL, t0.c52)) BETWEEN ((t0.c52, 1079196152, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))), (- (((x'') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c52 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52)) BETWEEN ((((t0.c52)!=(t0.c52)))) AND (((((t0.c52, NULL, t0.c52)) BETWEEN ((t0.c52, 1079196152, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))), (- (((x'') NOT NULL))));
SELECT * FROM t0 WHERE ((~ (t0.c52 COLLATE BINARY))) ORDER BY (((t0.c52)) BETWEEN ((((t0.c52)<>(t0.c52)))) AND (((((t0.c52, NULL, t0.c52)) BETWEEN ((t0.c52, 1079196152, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))), (- (((x'') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c52 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52)) BETWEEN ((((t0.c52)!=(t0.c52)))) AND (((((t0.c52, NULL, t0.c52)) BETWEEN ((t0.c52, 1079196152, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))), (- (((x'') NOT NULL))));
SELECT * FROM t0 WHERE ((~ (t0.c52 COLLATE BINARY))) ORDER BY (((t0.c52)) BETWEEN ((((t0.c52)<>(t0.c52)))) AND (((((t0.c52, NULL, t0.c52)) BETWEEN ((t0.c52, 1079196152, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))), (- (((x'') NOT NULL)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (0.9497538319193749);
SELECT SUM(count) FROM (SELECT ALL ((0.9497538319193749) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (0.9497538319193749);
SELECT SUM(count) FROM (SELECT ALL ((0.9497538319193749) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (0.9497538319193749);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((t0.c52)IS(t0.c52)) END) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN ((('}'))<>((rt0.c3))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c1))>=((rt0.c3))) THEN (((t0.c52)) BETWEEN ((rt0.c0)) AND ((t0.c52))) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((t0.c52)IS(t0.c52)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN ((('}'))<>((rt0.c3))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c1))>=((rt0.c3))) THEN (((t0.c52)) BETWEEN ((rt0.c0)) AND ((t0.c52))) END ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((t0.c52)IS(t0.c52)) END) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN ((('}'))<>((rt0.c3))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c1))>=((rt0.c3))) THEN (((t0.c52)) BETWEEN ((rt0.c0)) AND ((t0.c52))) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((t0.c52)IS(t0.c52)) END) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN ((('}'))<>((rt0.c3))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c1))>=((rt0.c3))) THEN (((t0.c52)) BETWEEN ((rt0.c0)) AND ((t0.c52))) END ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN (((t0.c52)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((t0.c52)IS(t0.c52)) END) ORDER BY CASE TRIM(DISTINCT rt0.c3)  WHEN ((('}'))<>((rt0.c3))) THEN ((vt0.c0)>=(vt0.c0)) WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c2)) WHEN (((rt0.c1))>=((rt0.c3))) THEN (((t0.c52)) BETWEEN ((rt0.c0)) AND ((t0.c52))) END ASC;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (HEX(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (HEX(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (HEX(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR(((vt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)OR(((vt0.c0)IS(vt0.c0)))))OR((((t0.c52)) BETWEEN ((t0.c52)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((vt0.c0)IS(vt0.c0)))))OR((((t0.c52)) BETWEEN ((t0.c52)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)OR(((vt0.c0)IS(vt0.c0)))))OR((((t0.c52)) BETWEEN ((t0.c52)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((vt0.c0)IS(vt0.c0)))))OR((((t0.c52)) BETWEEN ((t0.c52)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((NULL)OR(((vt0.c0)IS(vt0.c0)))))OR((((t0.c52)) BETWEEN ((t0.c52)) AND ((NULL))))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))IS NOT(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((((((+ (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND('0.3330112735526827' COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))IS NOT(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((+ (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND('0.3330112735526827' COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))IS NOT(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((((((+ (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND('0.3330112735526827' COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0)))IS NOT(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((+ (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND('0.3330112735526827' COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))IS NOT(UPPER(DISTINCT vt0.c0)))) ORDER BY (((((((((+ (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR((- (vt0.c0)))))AND('0.3330112735526827' COLLATE RTRIM)))AND(vt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN (((rt0.c0))==((rt0.c1))) THEN ((t0.c52)||(x'')) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN 0.5545722317614399 THEN t0.c52 END WHEN CASE WHEN t0.c52 THEN rt0.c2 END THEN ((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)) ELSE ((rt0.c1)&(rt0.c2)) END) ORDER BY json_quote(x'');
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0))==((rt0.c1))) THEN ((t0.c52)||(x'')) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN 0.5545722317614399 THEN t0.c52 END WHEN CASE WHEN t0.c52 THEN rt0.c2 END THEN ((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)) ELSE ((rt0.c1)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY json_quote(x''));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN t0 WHERE (CASE WHEN (((rt0.c0))==((rt0.c1))) THEN ((t0.c52)||(x'')) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN 0.5545722317614399 THEN t0.c52 END WHEN CASE WHEN t0.c52 THEN rt0.c2 END THEN ((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)) ELSE ((rt0.c1)&(rt0.c2)) END) ORDER BY json_quote(x'');
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c0))==((rt0.c1))) THEN ((t0.c52)||(x'')) WHEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 WHEN 0.5545722317614399 THEN t0.c52 END WHEN CASE WHEN t0.c52 THEN rt0.c2 END THEN ((((vt0.c0)OR(rt0.c1)))AND(vt0.c0)) ELSE ((rt0.c1)&(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0 ORDER BY json_quote(x''));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0xffffffff9da3db91))), TYPEOF(vt0.c0)))!=((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), t0.c52))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff9da3db91))), TYPEOF(vt0.c0)))<>((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), t0.c52)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0xffffffff9da3db91))), TYPEOF(vt0.c0)))!=((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), t0.c52))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0Xffffffff9da3db91))), TYPEOF(vt0.c0)))<>((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), t0.c52)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0xffffffff9da3db91))), TYPEOF(vt0.c0)))!=((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), t0.c52))));
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) ELSE ((((rt0.c3)AND(rt0.c1)))OR(rt0.c0)) END);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c52)AND(t0.c52)))AND(t0.c52)) AS NUMERIC)) ORDER BY ((((t0.c52)IS(t0.c52)))IS(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c52)AND(t0.c52)))AND(t0.c52)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c52)IS(t0.c52)))IS(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c52)AND(t0.c52)))AND(t0.c52)) AS NUMERIC)) ORDER BY ((((t0.c52)IS(t0.c52)))IS(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c52)AND(t0.c52)))AND(t0.c52)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c52)IS(t0.c52)))IS(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((((t0.c52)AND(t0.c52)))AND(t0.c52)) AS NUMERIC)) ORDER BY ((((t0.c52)IS(t0.c52)))IS(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (HEX(''));
SELECT SUM(count) FROM (SELECT ALL ((HEX('')) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (HEX(''));
SELECT SUM(count) FROM (SELECT ALL ((HEX('')) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (HEX(''));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((- (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((- (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((- (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c3 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c3 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (rt0.c0) ORDER BY ((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c1 END)AND(rt0.c3 COLLATE RTRIM)) DESC;
SELECT ALL * FROM vt0 INDEXED BY i90, rt0, t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i90, rt0, t0);
SELECT ALL * FROM vt0 INDEXED BY i90, rt0, t0 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 INDEXED BY i90, rt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((rt0.c1 IN (1751045612)))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN (1751045612))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((rt0.c1 IN (1751045612)))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN (1751045612))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ ((rt0.c1 IN (1751045612)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)|(vt0.c0 COLLATE NOCASE))) ORDER BY (((+ (rt0.c0)))-((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((+ (rt0.c0)))-((rt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)|(vt0.c0 COLLATE NOCASE))) ORDER BY (((+ (rt0.c0)))-((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE RTRIM)|(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((+ (rt0.c0)))-((rt0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)|(vt0.c0 COLLATE NOCASE))) ORDER BY (((+ (rt0.c0)))-((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-998552704' END) IS FALSE) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) AND ((TRIM(t0.c52, t0.c52))))) ORDER BY (vt0.c0 COLLATE NOCASE IN (((t0.c52)IS NOT(t0.c52)))), CAST(t0.c52 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) AND ((TRIM(t0.c52, t0.c52))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-998552704' END) IS FALSE) ORDER BY (vt0.c0 COLLATE NOCASE IN (((t0.c52)IS NOT(t0.c52)))), CAST(t0.c52 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-998552704' END) IS FALSE) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) AND ((TRIM(t0.c52, t0.c52))))) ORDER BY (vt0.c0 COLLATE NOCASE IN (((t0.c52)IS NOT(t0.c52)))), CAST(t0.c52 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) AND ((TRIM(t0.c52, t0.c52))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-998552704' END) IS FALSE) ORDER BY (vt0.c0 COLLATE NOCASE IN (((t0.c52)IS NOT(t0.c52)))), CAST(t0.c52 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE '-998552704' END) IS FALSE) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) AND ((TRIM(t0.c52, t0.c52))))) ORDER BY (vt0.c0 COLLATE NOCASE IN (((t0.c52)IS NOT(t0.c52)))), CAST(t0.c52 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((~ (NULL))) ORDER BY t0.c52 ASC  NULLS FIRST, load_extension(vt0.c0);
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c52 ASC  NULLS FIRST, load_extension(vt0.c0));
SELECT * FROM vt0, t0 WHERE ((~ (NULL))) ORDER BY t0.c52 ASC  NULLS FIRST, load_extension(vt0.c0);
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c52 ASC  NULLS FIRST, load_extension(vt0.c0));
SELECT * FROM vt0, t0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (x'' COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE (((rt0.c2) BETWEEN ('680096257') AND (((x'')>=(-8.08507518E8)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ('680096257') AND (((x'')>=(-8.08507518E8))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE (((rt0.c2) BETWEEN ('680096257') AND (((x'')>=(-8.08507518E8)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ('680096257') AND (((x'')>=(-8.08507518E8))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON rt0.c0 WHERE (((rt0.c2) BETWEEN ('680096257') AND (((x'')>=(-8.08507518E8)))));
SELECT * FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((- (vt0.c0))) AND (UPPER(vt0.c0))));
SELECT * FROM t0 INNER JOIN vt0 ON (NOT (t0.c52)) COLLATE NOCASE WHERE (((t0.c52 COLLATE NOCASE)OR(((t0.c52)>>(t0.c52))))) ORDER BY (~ (vt0.c0)) DESC  NULLS LAST, load_extension(CAST(vt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)OR(((t0.c52)>>(t0.c52))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (t0.c52)) COLLATE NOCASE ORDER BY (~ (vt0.c0)) DESC  NULLS LAST, load_extension(CAST(vt0.c0 AS INTEGER)) DESC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt0 ON (NOT (t0.c52)) COLLATE NOCASE WHERE (((t0.c52 COLLATE NOCASE)OR(((t0.c52)>>(t0.c52))))) ORDER BY (~ (vt0.c0)) DESC  NULLS LAST, load_extension(CAST(vt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)OR(((t0.c52)>>(t0.c52))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (t0.c52)) COLLATE NOCASE ORDER BY (~ (vt0.c0)) DESC  NULLS LAST, load_extension(CAST(vt0.c0 AS INTEGER)) DESC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN vt0 ON (NOT (t0.c52)) COLLATE NOCASE WHERE (((t0.c52 COLLATE NOCASE)OR(((t0.c52)>>(t0.c52))))) ORDER BY (~ (vt0.c0)) DESC  NULLS LAST, load_extension(CAST(vt0.c0 AS INTEGER)) DESC  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c3)<>(rt0.c1))) NOT NULL)) ORDER BY (((((('408046083')OR(0.956144531145794)))OR(rt0.c1)))GLOB(0x405339f8)) DESC  NULLS FIRST, ((vt0.c0)<>(((rt0.c3)IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((('408046083')OR(0.956144531145794)))OR(rt0.c1)))GLOB(0x405339f8)) DESC  NULLS FIRST, ((vt0.c0)<>(((rt0.c3)IS(rt0.c1))))  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c3)<>(rt0.c1))) NOT NULL)) ORDER BY (((((('408046083')OR(0.956144531145794)))OR(rt0.c1)))GLOB(0x405339f8)) DESC  NULLS FIRST, ((vt0.c0)<>(((rt0.c3)IS(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<>(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((((('408046083')OR(0.956144531145794)))OR(rt0.c1)))GLOB(0x405339f8)) DESC  NULLS FIRST, ((vt0.c0)<>(((rt0.c3)IS(rt0.c1))))  NULLS FIRST);
SELECT * FROM t0, vt0, rt0 WHERE (((((rt0.c3)<>(rt0.c1))) NOT NULL)) ORDER BY (((((('408046083')OR(0.956144531145794)))OR(rt0.c1)))GLOB(0x405339f8)) DESC  NULLS FIRST, ((vt0.c0)<>(((rt0.c3)IS(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))+(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))+(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))+(((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))+(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))+(((rt0.c3) IS FALSE))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c52 IN ())) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (json_array_length(rt0.c0))) WHERE ((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), INSTR(rt0.c3, vt0.c0))) AND ((((rt0.c3) IS TRUE), rt0.c1 COLLATE RTRIM, ((vt0.c0)/(rt0.c1)))))) ORDER BY (((t0.c52)) BETWEEN ((HEX(DISTINCT t0.c52))) AND (((- (rt0.c0))))) ASC  NULLS LAST, (((((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((t0.c52) NOT BETWEEN (rt0.c3) AND (vt0.c0)), rt0.c0, (rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), INSTR(rt0.c3, vt0.c0))) AND ((((rt0.c3) IS TRUE), rt0.c1 COLLATE RTRIM, ((vt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c52 IN ())) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (json_array_length(rt0.c0))) ORDER BY (((t0.c52)) BETWEEN ((HEX(DISTINCT t0.c52))) AND (((- (rt0.c0))))) ASC  NULLS LAST, (((((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((t0.c52) NOT BETWEEN (rt0.c3) AND (vt0.c0)), rt0.c0, (rt0.c0 IN ())))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c52 IN ())) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (json_array_length(rt0.c0))) WHERE ((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), INSTR(rt0.c3, vt0.c0))) AND ((((rt0.c3) IS TRUE), rt0.c1 COLLATE RTRIM, ((vt0.c0)/(rt0.c1)))))) ORDER BY (((t0.c52)) BETWEEN ((HEX(DISTINCT t0.c52))) AND (((- (rt0.c0))))) ASC  NULLS LAST, (((((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((t0.c52) NOT BETWEEN (rt0.c3) AND (vt0.c0)), rt0.c0, (rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), INSTR(rt0.c3, vt0.c0))) AND ((((rt0.c3) IS TRUE), rt0.c1 COLLATE RTRIM, ((vt0.c0)/(rt0.c1)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((t0.c52 IN ())) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (json_array_length(rt0.c0))) ORDER BY (((t0.c52)) BETWEEN ((HEX(DISTINCT t0.c52))) AND (((- (rt0.c0))))) ASC  NULLS LAST, (((((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((t0.c52) NOT BETWEEN (rt0.c3) AND (vt0.c0)), rt0.c0, (rt0.c0 IN ())))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((t0.c52 IN ())) NOTNULL) LEFT OUTER JOIN vt0 ON (NOT (json_array_length(rt0.c0))) WHERE ((((rt0.c2, vt0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), INSTR(rt0.c3, vt0.c0))) AND ((((rt0.c3) IS TRUE), rt0.c1 COLLATE RTRIM, ((vt0.c0)/(rt0.c1)))))) ORDER BY (((t0.c52)) BETWEEN ((HEX(DISTINCT t0.c52))) AND (((- (rt0.c0))))) ASC  NULLS LAST, (((((vt0.c0) NOTNULL), ((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END))>((((t0.c52) NOT BETWEEN (rt0.c3) AND (vt0.c0)), rt0.c0, (rt0.c0 IN ()))));
SELECT ALL * FROM t0 WHERE (((((x'9a8e') NOT NULL)) NOT BETWEEN ((t0.c52 IN (t0.c52, t0.c52))) AND ((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, t0.c52, t0.c52))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'9a8e') NOT NULL)) NOT BETWEEN ((t0.c52 IN (t0.c52, t0.c52))) AND ((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'9a8e') NOT NULL)) NOT BETWEEN ((t0.c52 IN (t0.c52, t0.c52))) AND ((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, t0.c52, t0.c52))))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'9a8e') NOT NULL)) NOT BETWEEN ((t0.c52 IN (t0.c52, t0.c52))) AND ((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((x'9a8e') NOT NULL)) NOT BETWEEN ((t0.c52 IN (t0.c52, t0.c52))) AND ((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, t0.c52, t0.c52))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c52 THEN rt0.c0 ELSE t0.c52 END COLLATE RTRIM INNER JOIN t0 ON CAST(CAST(x'' AS NUMERIC) AS TEXT) WHERE ((((vt0.c0 IN (rt0.c0))) NOT BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN 2090168207 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c52 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c0))) NOT BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN 2090168207 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c52 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c52 THEN rt0.c0 ELSE t0.c52 END COLLATE RTRIM INNER JOIN t0 ON CAST(CAST(x'' AS NUMERIC) AS TEXT));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c52 THEN rt0.c0 ELSE t0.c52 END COLLATE RTRIM INNER JOIN t0 ON CAST(CAST(x'' AS NUMERIC) AS TEXT) WHERE ((((vt0.c0 IN (rt0.c0))) NOT BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN 2090168207 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c52 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c0))) NOT BETWEEN (x'') AND (CASE WHEN rt0.c0 THEN vt0.c0 WHEN 2090168207 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE t0.c52 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN t0.c52 THEN rt0.c0 ELSE t0.c52 END COLLATE RTRIM INNER JOIN t0 ON CAST(CAST(x'' AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((((((rt0.c3)AND(0.8105506535652345)))AND(rt0.c2)))AND(1.079196152E9)))OR(((rt0.c1)%(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((rt0.c3)AND(0.8105506535652345)))AND(rt0.c2)))AND(1.079196152E9)))OR(((rt0.c1)%(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((((((rt0.c3)AND(0.8105506535652345)))AND(rt0.c2)))AND(1.079196152E9)))OR(((rt0.c1)%(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((rt0.c3)AND(0.8105506535652345)))AND(rt0.c2)))AND(1.079196152E9)))OR(((rt0.c1)%(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT ((- (rt0.c2))))) ORDER BY ((((((((rt0.c3)AND(0.8105506535652345)))AND(rt0.c2)))AND(1.079196152E9)))OR(((rt0.c1)%(rt0.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '^>3omv2G瘇' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END))) ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<=(NULL))))<=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), vt0.c0))), UNLIKELY(vt0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '^>3omv2G瘇' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<=(NULL))))<=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), vt0.c0))), UNLIKELY(vt0.c0) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '^>3omv2G瘇' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END))) ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<=(NULL))))<=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), vt0.c0))), UNLIKELY(vt0.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '^>3omv2G瘇' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<=(NULL))))<=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), vt0.c0))), UNLIKELY(vt0.c0) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '^>3omv2G瘇' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' END))) ORDER BY ((((vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)<=(NULL))))<=((CAST(vt0.c0 AS TEXT), (vt0.c0 IN ()), vt0.c0))), UNLIKELY(vt0.c0) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULLIF(t0.c52, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULLIF(t0.c52, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULLIF(t0.c52, rt0.c2) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULLIF(t0.c52, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (NULLIF(t0.c52, rt0.c2) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)IS NOT(rt0.c1)) IN ()));
SELECT * FROM t0 WHERE (CAST('-346487191' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('-346487191' AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST('-346487191' AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST('-346487191' AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST('-346487191' AS TEXT));
SELECT * FROM t0, rt0 WHERE (((((((((x'')OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c52)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'' END)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c52)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'' END)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((x'')OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c52)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'' END)))OR((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((x'')OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c52)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'' END)))OR((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((x'')OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c52)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN x'' END)))OR((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))) ORDER BY CAST(x'6131' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((x'')) AND ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'6131' COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))) ORDER BY CAST(x'6131' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((x'')) AND ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'6131' COLLATE NOCASE AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((x'')) AND ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END)))) ORDER BY CAST(x'6131' COLLATE NOCASE AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY rt0.c3 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c3 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY rt0.c3 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c3 COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c52) ORDER BY rt0.c3 COLLATE NOCASE DESC;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON UNLIKELY(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))) CROSS JOIN vt0 ON (((rt0.c1)) BETWEEN ((((vt0.c0)GLOB(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON UNLIKELY(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))) CROSS JOIN vt0 ON (((rt0.c1)) BETWEEN ((((vt0.c0)GLOB(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON UNLIKELY(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))) CROSS JOIN vt0 ON (((rt0.c1)) BETWEEN ((((vt0.c0)GLOB(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON UNLIKELY(DISTINCT ((((rt0.c1)OR(vt0.c0)))OR(rt0.c2))) CROSS JOIN vt0 ON (((rt0.c1)) BETWEEN ((((vt0.c0)GLOB(rt0.c0)))) AND ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c52 IN ()))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))))OR((rt0.c3 IN (t0.c52))))) ORDER BY CAST(rt0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c52 IN ()))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))))OR((rt0.c3 IN (t0.c52))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c52 IN ()))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))))OR((rt0.c3 IN (t0.c52))))) ORDER BY CAST(rt0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c52 IN ()))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))))OR((rt0.c3 IN (t0.c52))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c52 IN ()))OR(NULLIF(DISTINCT rt0.c2, rt0.c1))))OR((rt0.c3 IN (t0.c52))))) ORDER BY CAST(rt0.c3 AS REAL) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND ((((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)))))) ORDER BY CAST((t0.c52 IN (t0.c52)) AS BLOB)  NULLS LAST, ((((((t0.c52))<((t0.c52)))))==(((((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((t0.c52, NULL, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) DESC, t0.c52;
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND ((((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c52 IN (t0.c52)) AS BLOB)  NULLS LAST, ((((((t0.c52))<((t0.c52)))))==(((((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((t0.c52, NULL, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) DESC, t0.c52);
SELECT ALL * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND ((((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)))))) ORDER BY CAST((t0.c52 IN (t0.c52)) AS BLOB)  NULLS LAST, ((((((t0.c52))<((t0.c52)))))==(((((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((t0.c52, NULL, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) DESC, t0.c52;
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND ((((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c52 IN (t0.c52)) AS BLOB)  NULLS LAST, ((((((t0.c52))<((t0.c52)))))==(((((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((t0.c52, NULL, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) DESC, t0.c52);
SELECT ALL * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND ((((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)))))) ORDER BY CAST((t0.c52 IN (t0.c52)) AS BLOB)  NULLS LAST, ((((((t0.c52))<((t0.c52)))))==(((((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((t0.c52, NULL, t0.c52)) AND ((t0.c52, t0.c52, t0.c52)))))) DESC, t0.c52;
SELECT * FROM t0 WHERE (((((t0.c52) IS TRUE)) ISNULL)) ORDER BY CASE WHEN ((t0.c52)||(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN ((t0.c52)>(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN t0.c52 COLLATE BINARY THEN (t0.c52 IN (t0.c52, t0.c52)) END DESC, GLOB((t0.c52 IN ()), CASE t0.c52  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c52)||(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN ((t0.c52)>(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN t0.c52 COLLATE BINARY THEN (t0.c52 IN (t0.c52, t0.c52)) END DESC, GLOB((t0.c52 IN ()), CASE t0.c52  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c52) IS TRUE)) ISNULL)) ORDER BY CASE WHEN ((t0.c52)||(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN ((t0.c52)>(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN t0.c52 COLLATE BINARY THEN (t0.c52 IN (t0.c52, t0.c52)) END DESC, GLOB((t0.c52 IN ()), CASE t0.c52  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c52)||(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN ((t0.c52)>(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN t0.c52 COLLATE BINARY THEN (t0.c52 IN (t0.c52, t0.c52)) END DESC, GLOB((t0.c52 IN ()), CASE t0.c52  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c52) IS TRUE)) ISNULL)) ORDER BY CASE WHEN ((t0.c52)||(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN ((t0.c52)>(t0.c52)) THEN ((t0.c52) IS FALSE) WHEN t0.c52 COLLATE BINARY THEN (t0.c52 IN (t0.c52, t0.c52)) END DESC, GLOB((t0.c52 IN ()), CASE t0.c52  WHEN t0.c52 THEN t0.c52 END)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((((rt0.c2 IN (rt0.c1, t0.c52)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN -2.13750361E8 ELSE rt0.c0 END)))AND((~ (rt0.c3)))) FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN '9SU''٩xo' END IN ()) WHERE (NULL) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c3))=(('2049887529', rt0.c1, rt0.c2)))))>=((((((t0.c52)AND(t0.c52)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c2 IN (rt0.c1, t0.c52)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN -2.13750361E8 ELSE rt0.c0 END)))AND((~ (rt0.c3)))) FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN '9SU''٩xo' END IN ()) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c3))==(('2049887529', rt0.c1, rt0.c2)))))>=((((((t0.c52)AND(t0.c52)))AND(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON (((((rt0.c2 IN (rt0.c1, t0.c52)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN -2.13750361E8 ELSE rt0.c0 END)))AND((~ (rt0.c3)))) FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN '9SU''٩xo' END IN ()) WHERE (NULL) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c3))=(('2049887529', rt0.c1, rt0.c2)))))>=((((((t0.c52)AND(t0.c52)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((((rt0.c2 IN (rt0.c1, t0.c52)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN -2.13750361E8 ELSE rt0.c0 END)))AND((~ (rt0.c3)))) FULL OUTER JOIN vt0 ON (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 WHEN vt0.c0 THEN '9SU''٩xo' END IN ()) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c3))==(('2049887529', rt0.c1, rt0.c2)))))>=((((((t0.c52)AND(t0.c52)))AND(rt0.c3))))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)+(x'')) COLLATE NOCASE WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c3) NOT BETWEEN (t0.c52) AND (rt0.c1)) ELSE ((rt0.c1)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c3) NOT BETWEEN (t0.c52) AND (rt0.c1)) ELSE ((rt0.c1)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)+(x'')) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)+(x'')) COLLATE NOCASE WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c3) NOT BETWEEN (t0.c52) AND (rt0.c1)) ELSE ((rt0.c1)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c3) NOT BETWEEN (t0.c52) AND (rt0.c1)) ELSE ((rt0.c1)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)+(x'')) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c0)+(x'')) COLLATE NOCASE WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c3) NOT BETWEEN (t0.c52) AND (rt0.c1)) ELSE ((rt0.c1)IS(vt0.c0)) END);
SELECT * FROM t0, vt0, rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))  WHEN (((rt0.c1, '-266775070', rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'9e0e', rt0.c3, rt0.c0, t0.c52, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c0, 'vNs9'))) THEN json_remove(x'', rt0.c2) END) ORDER BY ((NOT (NULL)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))  WHEN (((rt0.c1, '-266775070', rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'9e0e', rt0.c3, rt0.c0, t0.c52, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c0, 'vNs9'))) THEN json_remove(x'', rt0.c2) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((NOT (NULL)) IN ()));
SELECT * FROM t0, vt0, rt0 WHERE (CASE ((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))  WHEN (((rt0.c1, '-266775070', rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'9e0e', rt0.c3, rt0.c0, t0.c52, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c0, 'vNs9'))) THEN json_remove(x'', rt0.c2) END) ORDER BY ((NOT (NULL)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))  WHEN (((rt0.c1, '-266775070', rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'9e0e', rt0.c3, rt0.c0, t0.c52, rt0.c2)) AND ((rt0.c3, rt0.c2, rt0.c1, rt0.c0, 'vNs9'))) THEN json_remove(x'', rt0.c2) END) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((NOT (NULL)) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ())  NULLS FIRST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((' w4V')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c2)|(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ())  NULLS FIRST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((' w4V')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c2)|(rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ())  NULLS FIRST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((' w4V')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c2)|(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ())  NULLS FIRST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((' w4V')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c2)|(rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 END COLLATE NOCASE) ORDER BY (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ())  NULLS FIRST, CASE CAST(rt0.c0 AS NUMERIC)  WHEN (((' w4V')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) THEN ((rt0.c2)|(rt0.c0)) END ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('-64712718') AND (rt0.c2)))|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN ('-64712718') AND (rt0.c2)))|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('-64712718') AND (rt0.c2)))|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN ('-64712718') AND (rt0.c2)))|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)<(rt0.c3)))OR(rt0.c0)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('-64712718') AND (rt0.c2)))|(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((MIN(rt0.c1, rt0.c2, rt0.c1, rt0.c0))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((MIN(rt0.c1, rt0.c2, rt0.c1, rt0.c0))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((MIN(rt0.c1, rt0.c2, rt0.c1, rt0.c0))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((MIN(rt0.c1, rt0.c2, rt0.c1, rt0.c0))) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) BETWEEN ((MIN(rt0.c1, rt0.c2, rt0.c1, rt0.c0))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c3)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c1, rt0.c3)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c3)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c1, rt0.c3)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c3)) NOTNULL));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((((((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((((((vt0.c0)OR(t0.c52)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)), (- (t0.c52))))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN NULL WHEN rt0.c1 THEN t0.c52 END, LIKELY(rt0.c1), ((rt0.c3)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((((((vt0.c0)OR(t0.c52)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)), (- (t0.c52))))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN NULL WHEN rt0.c1 THEN t0.c52 END, LIKELY(rt0.c1), ((rt0.c3)>>(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((((((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((((((vt0.c0)OR(t0.c52)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)), (- (t0.c52))))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN NULL WHEN rt0.c1 THEN t0.c52 END, LIKELY(rt0.c1), ((rt0.c3)>>(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((((((vt0.c0)OR(t0.c52)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)), (- (t0.c52))))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN NULL WHEN rt0.c1 THEN t0.c52 END, LIKELY(rt0.c1), ((rt0.c3)>>(rt0.c2)))))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN rt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE ((((((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((((((vt0.c0)OR(t0.c52)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)), (- (t0.c52))))>((CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c52 THEN NULL WHEN rt0.c1 THEN t0.c52 END, LIKELY(rt0.c1), ((rt0.c3)>>(rt0.c2))))));
SELECT COUNT(*) FROM vt0 INDEXED BY i90 WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0))) IS TRUE)  as count FROM vt0 INDEXED BY i90);
SELECT COUNT(*) FROM vt0 INDEXED BY i90 WHERE (((vt0.c0 COLLATE RTRIM)<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<=(vt0.c0))) IS TRUE)  as count FROM vt0 INDEXED BY i90);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3)-(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3)-(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c3)-(rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0))) IS TRUE)) ORDER BY ((((json_quote(rt0.c2))AND((rt0.c1 IN ()))))OR(rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((json_quote(rt0.c2))AND((rt0.c1 IN ()))))OR(rt0.c3)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0))) IS TRUE)) ORDER BY ((((json_quote(rt0.c2))AND((rt0.c1 IN ()))))OR(rt0.c3)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((json_quote(rt0.c2))AND((rt0.c1 IN ()))))OR(rt0.c3)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c0))) IS TRUE)) ORDER BY ((((json_quote(rt0.c2))AND((rt0.c1 IN ()))))OR(rt0.c3)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((NULL)) AND (('&tc')))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))  NULLS FIRST, (CAST(-1.137636864E9 AS BLOB) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((NULL)) AND (('&tc')))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))  NULLS FIRST, (CAST(-1.137636864E9 AS BLOB) IN ()) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((NULL)) AND (('&tc')))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))  NULLS FIRST, (CAST(-1.137636864E9 AS BLOB) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((NULL)) AND (('&tc')))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))  NULLS FIRST, (CAST(-1.137636864E9 AS BLOB) IN ()) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((NULL)) AND (('&tc')))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END) BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))  NULLS FIRST, (CAST(-1.137636864E9 AS BLOB) IN ()) DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT 0.21962705569396124) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(HEX(DISTINCT 0.21962705569396124) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT 0.21962705569396124) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(HEX(DISTINCT 0.21962705569396124) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY CAST(HEX(DISTINCT 0.21962705569396124) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST('' AS REAL)) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.8654025441255538) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.8654025441255538) DESC);
SELECT ALL * FROM vt0 WHERE (CAST('' AS REAL)) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.8654025441255538) DESC;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.8654025441255538) DESC);
SELECT ALL * FROM vt0 WHERE (CAST('' AS REAL)) ORDER BY LIKELIHOOD(CAST(vt0.c0 AS REAL), 0.8654025441255538) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>=(vt0.c0)))>=(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))>=(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>=(vt0.c0)))>=(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))>=(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)>=(vt0.c0)))>=(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t0 ON ((((t0.c52)-(rt0.c1))) IS TRUE) WHERE ((NOT (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(0.6416521730704261)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(0.6416521730704261)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t0 ON ((((t0.c52)-(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t0 ON ((((t0.c52)-(rt0.c1))) IS TRUE) WHERE ((NOT (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(0.6416521730704261)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(0.6416521730704261)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t0 ON ((((t0.c52)-(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON rt0.c3 RIGHT OUTER JOIN t0 ON ((((t0.c52)-(rt0.c1))) IS TRUE) WHERE ((NOT (((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(0.6416521730704261)))AND(rt0.c2)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c52 THEN vt0.c0 END) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CAST(NULL AS BLOB))) WHERE ((((vt0.c0))<=((t0.c52))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((t0.c52))) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c52 THEN vt0.c0 END) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CAST(NULL AS BLOB))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c52 THEN vt0.c0 END) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CAST(NULL AS BLOB))) WHERE ((((vt0.c0))<=((t0.c52))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<=((t0.c52))) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c52 THEN vt0.c0 END) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CAST(NULL AS BLOB))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((CASE WHEN t0.c52 THEN vt0.c0 END) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND (CAST(NULL AS BLOB))) WHERE ((((vt0.c0))<=((t0.c52))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((x'')>=(rt0.c3))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) NOTNULL), (((rt0.c1 IN (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((x'')>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) NOTNULL), (((rt0.c1 IN (rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((x'')>=(rt0.c3))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) NOTNULL), (((rt0.c1 IN (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((x'')>=(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) NOTNULL), (((rt0.c1 IN (rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((x'')>=(rt0.c3))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL))) NOTNULL), (((rt0.c1 IN (rt0.c0))) NOTNULL);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)>((((rt0.c1, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, t0.c52))))) WHERE ((+ (rt0.c1 COLLATE BINARY))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN CAST(rt0.c3 AS REAL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c52 END THEN ((rt0.c1)<<(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1)>((((rt0.c1, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, t0.c52))))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN CAST(rt0.c3 AS REAL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c52 END THEN ((rt0.c1)<<(rt0.c1)) END ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)>((((rt0.c1, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, t0.c52))))) WHERE ((+ (rt0.c1 COLLATE BINARY))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN CAST(rt0.c3 AS REAL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c52 END THEN ((rt0.c1)<<(rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((rt0.c1)>((((rt0.c1, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, t0.c52))))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN CAST(rt0.c3 AS REAL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c52 END THEN ((rt0.c1)<<(rt0.c1)) END ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((rt0.c1)>((((rt0.c1, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, t0.c52))))) WHERE ((+ (rt0.c1 COLLATE BINARY))) ORDER BY CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 WHEN CAST(rt0.c3 AS REAL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c52 END THEN ((rt0.c1)<<(rt0.c1)) END ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c52)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())) ORDER BY (((((rt0.c0))>=((rt0.c2))))|((-1.137636864E9 IN (rt0.c1))))  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c52) AND (rt0.c3))  WHEN CAST(rt0.c2 AS TEXT) THEN SUBSTR(rt0.c0, t0.c52) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0))>=((rt0.c2))))|((-1.137636864E9 IN (rt0.c1))))  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c52) AND (rt0.c3))  WHEN CAST(rt0.c2 AS TEXT) THEN SUBSTR(rt0.c0, t0.c52) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c52)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())) ORDER BY (((((rt0.c0))>=((rt0.c2))))|((-1.137636864E9 IN (rt0.c1))))  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c52) AND (rt0.c3))  WHEN CAST(rt0.c2 AS TEXT) THEN SUBSTR(rt0.c0, t0.c52) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0))>=((rt0.c2))))|((-1.137636864E9 IN (rt0.c1))))  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c52) AND (rt0.c3))  WHEN CAST(rt0.c2 AS TEXT) THEN SUBSTR(rt0.c0, t0.c52) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((t0.c52)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) IN ())) ORDER BY (((((rt0.c0))>=((rt0.c2))))|((-1.137636864E9 IN (rt0.c1))))  NULLS LAST, CASE ((rt0.c1) BETWEEN (t0.c52) AND (rt0.c3))  WHEN CAST(rt0.c2 AS TEXT) THEN SUBSTR(rt0.c0, t0.c52) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c52)IS NOT(((vt0.c0)%(t0.c52)))) WHERE ((((t0.c52)) BETWEEN ((vt0.c0)) AND ((-2.13750361E8))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c52)) BETWEEN ((vt0.c0)) AND ((-2.13750361E8))) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c52)IS NOT(((vt0.c0)%(t0.c52)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c52)IS NOT(((vt0.c0)%(t0.c52)))) WHERE ((((t0.c52)) BETWEEN ((vt0.c0)) AND ((-2.13750361E8))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c52)) BETWEEN ((vt0.c0)) AND ((-2.13750361E8))) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((t0.c52)IS NOT(((vt0.c0)%(t0.c52)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((t0.c52)IS NOT(((vt0.c0)%(t0.c52)))) WHERE ((((t0.c52)) BETWEEN ((vt0.c0)) AND ((-2.13750361E8))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN x'' THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN 0.6981091495218271 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'RDhy爁D?H' END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0) ELSE vt0.c0 END) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN x'' THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN 0.6981091495218271 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'RDhy爁D?H' END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN x'' THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN 0.6981091495218271 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'RDhy爁D?H' END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0) ELSE vt0.c0 END) ORDER BY ((NULL) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN x'' THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN 0.6981091495218271 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'RDhy爁D?H' END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0)==(vt0.c0)) WHEN x'' THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN 0.6981091495218271 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 'RDhy爁D?H' END THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0) ELSE vt0.c0 END) ORDER BY ((NULL) IS FALSE);
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (vt0.c0)))==(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))==(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (vt0.c0)))==(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))==(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((NOT (vt0.c0)))==(((rt0.c3) IS TRUE))));
SELECT ALL * FROM t0 WHERE (((((t0.c52)OR(t0.c52)))>(((t0.c52)IS(t0.c52))))) ORDER BY CAST(t0.c52 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)OR(t0.c52)))>(((t0.c52)IS(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c52 AS TEXT) COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c52)OR(t0.c52)))>(((t0.c52)IS(t0.c52))))) ORDER BY CAST(t0.c52 AS TEXT) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)OR(t0.c52)))>(((t0.c52)IS(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c52 AS TEXT) COLLATE BINARY DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c52)OR(t0.c52)))>(((t0.c52)IS(t0.c52))))) ORDER BY CAST(t0.c52 AS TEXT) COLLATE BINARY DESC;
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOTNULL)) ORDER BY (~ (rt0.c0))  NULLS FIRST, ((RTRIM(rt0.c3))/(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (rt0.c0))  NULLS FIRST, ((RTRIM(rt0.c3))/(rt0.c3 COLLATE BINARY)));
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOTNULL)) ORDER BY (~ (rt0.c0))  NULLS FIRST, ((RTRIM(rt0.c3))/(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ (rt0.c0))  NULLS FIRST, ((RTRIM(rt0.c3))/(rt0.c3 COLLATE BINARY)));
SELECT * FROM rt0, t0 WHERE ((((+ (rt0.c1))) NOTNULL)) ORDER BY (~ (rt0.c0))  NULLS FIRST, ((RTRIM(rt0.c3))/(rt0.c3 COLLATE BINARY));
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (x'') ORDER BY rt0.c3, ((((((t0.c52) BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE vt0.c0  WHEN t0.c52 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c52 THEN vt0.c0 END)))AND((rt0.c2 IN ()))) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3, ((((((t0.c52) BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE vt0.c0  WHEN t0.c52 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c52 THEN vt0.c0 END)))AND((rt0.c2 IN ()))) ASC, NULL DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (x'') ORDER BY rt0.c3, ((((((t0.c52) BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE vt0.c0  WHEN t0.c52 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c52 THEN vt0.c0 END)))AND((rt0.c2 IN ()))) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c3, ((((((t0.c52) BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE vt0.c0  WHEN t0.c52 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c52 THEN vt0.c0 END)))AND((rt0.c2 IN ()))) ASC, NULL DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((0x28897201)!=(t0.c52))) AND (((t0.c52) ISNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c52)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((0X28897201)!=(t0.c52))) AND (((t0.c52) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c52)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((0x28897201)!=(t0.c52))) AND (((t0.c52) ISNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c52)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((0X28897201)!=(t0.c52))) AND (((t0.c52) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c52)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((0x28897201)!=(t0.c52))) AND (((t0.c52) ISNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (NULL) AND (t0.c52)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN LOWER(rt0.c2) THEN x'' WHEN t0.c52 THEN (('-135120607') IS TRUE) ELSE ((rt0.c1)|(rt0.c3)) END DESC  NULLS FIRST, NULL ASC  NULLS FIRST, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN LOWER(rt0.c2) THEN x'' WHEN t0.c52 THEN (('-135120607') IS TRUE) ELSE ((rt0.c1)|(rt0.c3)) END DESC  NULLS FIRST, NULL ASC  NULLS FIRST, rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN LOWER(rt0.c2) THEN x'' WHEN t0.c52 THEN (('-135120607') IS TRUE) ELSE ((rt0.c1)|(rt0.c3)) END DESC  NULLS FIRST, NULL ASC  NULLS FIRST, rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN LOWER(rt0.c2) THEN x'' WHEN t0.c52 THEN (('-135120607') IS TRUE) ELSE ((rt0.c1)|(rt0.c3)) END DESC  NULLS FIRST, NULL ASC  NULLS FIRST, rt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (NULL) ORDER BY CASE WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN LOWER(rt0.c2) THEN x'' WHEN t0.c52 THEN (('-135120607') IS TRUE) ELSE ((rt0.c1)|(rt0.c3)) END DESC  NULLS FIRST, NULL ASC  NULLS FIRST, rt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 COLLATE RTRIM))>((json_valid(t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE RTRIM))>((json_valid(t0.c52))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 COLLATE RTRIM))>((json_valid(t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE RTRIM))>((json_valid(t0.c52))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 COLLATE RTRIM))>((json_valid(t0.c52)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- ((((t0.c52, x'956b', vt0.c0, rt0.c3, vt0.c0))<((vt0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c52))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c52, x'956b', vt0.c0, rt0.c3, vt0.c0))<((vt0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c52)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- ((((t0.c52, x'956b', vt0.c0, rt0.c3, vt0.c0))<((vt0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c52))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c52, x'956b', vt0.c0, rt0.c3, vt0.c0))<((vt0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c52)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((- ((((t0.c52, x'956b', vt0.c0, rt0.c3, vt0.c0))<((vt0.c0, rt0.c0, rt0.c2, rt0.c0, t0.c52))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)<<(((((NULL)AND(NULL)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)<<(((((NULL)AND(NULL)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)<<(((((NULL)AND(NULL)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)<<(((((NULL)AND(NULL)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)<<(((((NULL)AND(NULL)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((CASE WHEN rt0.c3 THEN t0.c52 ELSE rt0.c0 END))=(((rt0.c0 IN (rt0.c2, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CASE WHEN rt0.c3 THEN t0.c52 ELSE rt0.c0 END))=(((rt0.c0 IN (rt0.c2, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((CASE WHEN rt0.c3 THEN t0.c52 ELSE rt0.c0 END))=(((rt0.c0 IN (rt0.c2, rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CASE WHEN rt0.c3 THEN t0.c52 ELSE rt0.c0 END))=(((rt0.c0 IN (rt0.c2, rt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (((((rt0.c3)OR(rt0.c3)))AND(rt0.c3))))) ORDER BY (((CASE WHEN rt0.c3 THEN t0.c52 ELSE rt0.c0 END))=(((rt0.c0 IN (rt0.c2, rt0.c1))))) DESC;
SELECT ALL * FROM t0 WHERE (((((((t0.c52, t0.c52, t0.c52, '', t0.c52))!=((t0.c52, t0.c52, t0.c52, '-638692457', '0.8450083079165637')))))<=((((t0.c52)%(t0.c52)))))) ORDER BY (((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END, ((t0.c52) ISNULL), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) AND ((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))), (t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c52, t0.c52, t0.c52, '', t0.c52))<>((t0.c52, t0.c52, t0.c52, '-638692457', '0.8450083079165637')))))<=((((t0.c52)%(t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END, ((t0.c52) ISNULL), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) AND ((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))), (t0.c52 IN ())))));
SELECT ALL * FROM t0 WHERE (((((((t0.c52, t0.c52, t0.c52, '', t0.c52))!=((t0.c52, t0.c52, t0.c52, '-638692457', '0.8450083079165637')))))<=((((t0.c52)%(t0.c52)))))) ORDER BY (((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END, ((t0.c52) ISNULL), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) AND ((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))), (t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c52, t0.c52, t0.c52, '', t0.c52))<>((t0.c52, t0.c52, t0.c52, '-638692457', '0.8450083079165637')))))<=((((t0.c52)%(t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END, ((t0.c52) ISNULL), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) AND ((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))), (t0.c52 IN ())))));
SELECT ALL * FROM t0 WHERE (((((((t0.c52, t0.c52, t0.c52, '', t0.c52))!=((t0.c52, t0.c52, t0.c52, '-638692457', '0.8450083079165637')))))<=((((t0.c52)%(t0.c52)))))) ORDER BY (((t0.c52, t0.c52, t0.c52)) NOT BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END, ((t0.c52) ISNULL), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))))) AND ((((((t0.c52)AND(t0.c52)))OR(t0.c52)), (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52))), (t0.c52 IN ()))));
SELECT * FROM t0, rt0, vt0 WHERE ((((((((vt0.c0, t0.c52, vt0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c3, vt0.c0))))AND('')))AND((((rt0.c2, t0.c52, rt0.c0)) BETWEEN ((NULL, rt0.c3, x'')) AND ((t0.c52, t0.c52, rt0.c1)))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, t0.c52, vt0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c3, vt0.c0))))AND('')))AND((((rt0.c2, t0.c52, rt0.c0)) BETWEEN ((NULL, rt0.c3, x'')) AND ((t0.c52, t0.c52, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE ((((((((vt0.c0, t0.c52, vt0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c3, vt0.c0))))AND('')))AND((((rt0.c2, t0.c52, rt0.c0)) BETWEEN ((NULL, rt0.c3, x'')) AND ((t0.c52, t0.c52, rt0.c1)))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0, t0.c52, vt0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c3, vt0.c0))))AND('')))AND((((rt0.c2, t0.c52, rt0.c0)) BETWEEN ((NULL, rt0.c3, x'')) AND ((t0.c52, t0.c52, rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS LAST);
SELECT * FROM t0, rt0, vt0 WHERE ((((((((vt0.c0, t0.c52, vt0.c0)) BETWEEN ((NULL, vt0.c0, rt0.c3)) AND ((vt0.c0, rt0.c3, vt0.c0))))AND('')))AND((((rt0.c2, t0.c52, rt0.c0)) BETWEEN ((NULL, rt0.c3, x'')) AND ((t0.c52, t0.c52, rt0.c1)))))) ORDER BY (CAST(vt0.c0 AS BLOB) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE ((((NULL)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((t0.c52)%(rt0.c2)) END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE ((((NULL)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((t0.c52)%(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE ((((NULL)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((t0.c52)%(rt0.c2)) END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE ((((NULL)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((t0.c52)%(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE ((((NULL)AND(rt0.c3)))AND(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN ((t0.c52)%(rt0.c2)) END WHERE (rt0.c0);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)LIKE(NULL)))/((t0.c52 IN (vt0.c0, vt0.c0)))) WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)LIKE(NULL)))/((t0.c52 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)LIKE(NULL)))/((t0.c52 IN (vt0.c0, vt0.c0)))) WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)LIKE(NULL)))/((t0.c52 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON ((((vt0.c0)LIKE(NULL)))/((t0.c52 IN (vt0.c0, vt0.c0)))) WHERE (((vt0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_remove(vt0.c0, vt0.c0))OR(vt0.c0 COLLATE BINARY))) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((0X5f8beef2) NOT BETWEEN (t0.c52) AND (t0.c52)))OR(rt0.c0)))AND(LENGTH(t0.c52)))) ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(((rt0.c3)>=(rt0.c2)))))AND(((rt0.c3) NOT NULL))))OR(load_extension(rt0.c0, rt0.c0))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND('1677367681')))OR(rt0.c1)))) ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0X5f8beef2) NOT BETWEEN (t0.c52) AND (t0.c52)))OR(rt0.c0)))AND(LENGTH(t0.c52)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(((rt0.c3)>=(rt0.c2)))))AND(((rt0.c3) NOT NULL))))OR(load_extension(rt0.c0, rt0.c0))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND('1677367681')))OR(rt0.c1)))) ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((0X5f8beef2) NOT BETWEEN (t0.c52) AND (t0.c52)))OR(rt0.c0)))AND(LENGTH(t0.c52)))) ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(((rt0.c3)>=(rt0.c2)))))AND(((rt0.c3) NOT NULL))))OR(load_extension(rt0.c0, rt0.c0))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND('1677367681')))OR(rt0.c1)))) ASC  NULLS LAST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((0X5f8beef2) NOT BETWEEN (t0.c52) AND (t0.c52)))OR(rt0.c0)))AND(LENGTH(t0.c52)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))AND(((rt0.c3)>=(rt0.c2)))))AND(((rt0.c3) NOT NULL))))OR(load_extension(rt0.c0, rt0.c0))))OR(((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND('1677367681')))OR(rt0.c1)))) ASC  NULLS LAST, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(t0.c52 AS BLOB))OR(((rt0.c0)LIKE(rt0.c1)))))OR(TRIM(rt0.c1)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN x'd490' THEN 0.6368460125595634 WHEN t0.c52 THEN vt0.c0 END)AND(CAST(rt0.c3 AS TEXT))))OR(((rt0.c1) NOTNULL))) ASC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((rt0.c0)AND(x'')))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c52 AS BLOB))OR(((rt0.c0)LIKE(rt0.c1)))))OR(TRIM(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN x'd490' THEN 0.6368460125595634 WHEN t0.c52 THEN vt0.c0 END)AND(CAST(rt0.c3 AS TEXT))))OR(((rt0.c1) NOTNULL))) ASC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((rt0.c0)AND(x'')))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(t0.c52 AS BLOB))OR(((rt0.c0)LIKE(rt0.c1)))))OR(TRIM(rt0.c1)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN x'd490' THEN 0.6368460125595634 WHEN t0.c52 THEN vt0.c0 END)AND(CAST(rt0.c3 AS TEXT))))OR(((rt0.c1) NOTNULL))) ASC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((rt0.c0)AND(x'')))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c52 AS BLOB))OR(((rt0.c0)LIKE(rt0.c1)))))OR(TRIM(rt0.c1)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN x'd490' THEN 0.6368460125595634 WHEN t0.c52 THEN vt0.c0 END)AND(CAST(rt0.c3 AS TEXT))))OR(((rt0.c1) NOTNULL))) ASC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((rt0.c0)AND(x'')))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((((CAST(t0.c52 AS BLOB))OR(((rt0.c0)LIKE(rt0.c1)))))OR(TRIM(rt0.c1)))) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST, ((((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN x'd490' THEN 0.6368460125595634 WHEN t0.c52 THEN vt0.c0 END)AND(CAST(rt0.c3 AS TEXT))))OR(((rt0.c1) NOTNULL))) ASC  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((rt0.c0)AND(x'')))OR(rt0.c0)))OR(vt0.c0)))AND(vt0.c0))));
SELECT * FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (- (rt0.c3)) THEN ((vt0.c0)<=(0.6528934734765234)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN t0.c52 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN ((vt0.c0)<=(0.6528934734765234)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN t0.c52 END END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (- (rt0.c3)) THEN ((vt0.c0)<=(0.6528934734765234)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN t0.c52 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN ((vt0.c0)<=(0.6528934734765234)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN t0.c52 END END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0 NOT INDEXED, t0 WHERE (CASE WHEN (- (rt0.c3)) THEN ((vt0.c0)<=(0.6528934734765234)) ELSE CASE rt0.c3  WHEN rt0.c3 THEN t0.c52 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) ORDER BY CASE (rt0.c3 IN (rt0.c1))  WHEN ((rt0.c2) ISNULL) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c3 IN (rt0.c1))  WHEN ((rt0.c2) ISNULL) THEN rt0.c0 END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) ORDER BY CASE (rt0.c3 IN (rt0.c1))  WHEN ((rt0.c2) ISNULL) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c3 IN (rt0.c1))  WHEN ((rt0.c2) ISNULL) THEN rt0.c0 END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)) AS BLOB)) ORDER BY CASE (rt0.c3 IN (rt0.c1))  WHEN ((rt0.c2) ISNULL) THEN rt0.c0 END;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)/(rt0.c3)))OR(json_extract(rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) ORDER BY '-1';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c3)))OR(json_extract(rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY '-1');
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)/(rt0.c3)))OR(json_extract(rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) ORDER BY '-1';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c3)))OR(json_extract(rt0.c3, rt0.c1, rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY '-1');
SELECT ALL * FROM vt0, rt0, t0 WHERE ((rt0.c2 IN (vt0.c0)) COLLATE RTRIM) ORDER BY load_extension((((rt0.c3, t0.c52, rt0.c1)) BETWEEN ((x'', t0.c52, t0.c52)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c3) NOT BETWEEN (x'') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY load_extension((((rt0.c3, t0.c52, rt0.c1)) BETWEEN ((x'', t0.c52, t0.c52)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c3) NOT BETWEEN (x'') AND (rt0.c2))));
SELECT ALL * FROM vt0, rt0, t0 WHERE ((rt0.c2 IN (vt0.c0)) COLLATE RTRIM) ORDER BY load_extension((((rt0.c3, t0.c52, rt0.c1)) BETWEEN ((x'', t0.c52, t0.c52)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c3) NOT BETWEEN (x'') AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY load_extension((((rt0.c3, t0.c52, rt0.c1)) BETWEEN ((x'', t0.c52, t0.c52)) AND ((rt0.c2, rt0.c0, rt0.c1))), ((rt0.c3) NOT BETWEEN (x'') AND (rt0.c2))));
SELECT * FROM t0, vt0, rt0 WHERE ((+ (0xffffffffee42a039))) ORDER BY ((rt0.c2)>=(((t0.c52)LIKE(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0Xffffffffee42a039))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c2)>=(((t0.c52)LIKE(rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((+ (0xffffffffee42a039))) ORDER BY ((rt0.c2)>=(((t0.c52)LIKE(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (0Xffffffffee42a039))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((rt0.c2)>=(((t0.c52)LIKE(rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE ((+ (0xffffffffee42a039))) ORDER BY ((rt0.c2)>=(((t0.c52)LIKE(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c52))))) ORDER BY CAST(x'020e7ced' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c52))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(x'020e7ced' AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c52))))) ORDER BY CAST(x'020e7ced' AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c52))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(x'020e7ced' AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c52))))) ORDER BY CAST(x'020e7ced' AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (rt0.c0);
SELECT * FROM t0 CROSS JOIN rt0 ON (((0.19750411689975822) NOTNULL) IN ()) WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE)) ORDER BY ((- (rt0.c1)) IN (rt0.c1 COLLATE BINARY, (x'' IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((0.19750411689975822) NOTNULL) IN ()) ORDER BY ((- (rt0.c1)) IN (rt0.c1 COLLATE BINARY, (x'' IN ())))  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON (((0.19750411689975822) NOTNULL) IN ()) WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE)) ORDER BY ((- (rt0.c1)) IN (rt0.c1 COLLATE BINARY, (x'' IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((0.19750411689975822) NOTNULL) IN ()) ORDER BY ((- (rt0.c1)) IN (rt0.c1 COLLATE BINARY, (x'' IN ())))  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON (((0.19750411689975822) NOTNULL) IN ()) WHERE ((((rt0.c1 IN (rt0.c2))) IS TRUE)) ORDER BY ((- (rt0.c1)) IN (rt0.c1 COLLATE BINARY, (x'' IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE 0Xffffffffec655002  WHEN rt0.c2 THEN rt0.c0 END)+(((rt0.c2) IS FALSE))) WHERE ((((('2103927443') NOT BETWEEN (vt0.c0) AND (0.8646058284214058))) NOT BETWEEN (x'9afc') AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('2103927443') NOT BETWEEN (vt0.c0) AND (0.8646058284214058))) NOT BETWEEN (x'9afc') AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE 0xffffffffec655002  WHEN rt0.c2 THEN rt0.c0 END)+(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE 0Xffffffffec655002  WHEN rt0.c2 THEN rt0.c0 END)+(((rt0.c2) IS FALSE))) WHERE ((((('2103927443') NOT BETWEEN (vt0.c0) AND (0.8646058284214058))) NOT BETWEEN (x'9afc') AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('2103927443') NOT BETWEEN (vt0.c0) AND (0.8646058284214058))) NOT BETWEEN (x'9afc') AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE 0xffffffffec655002  WHEN rt0.c2 THEN rt0.c0 END)+(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON ((CASE 0Xffffffffec655002  WHEN rt0.c2 THEN rt0.c0 END)+(((rt0.c2) IS FALSE))) WHERE ((((('2103927443') NOT BETWEEN (vt0.c0) AND (0.8646058284214058))) NOT BETWEEN (x'9afc') AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 COLLATE BINARY IN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END, t0.c52 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END, t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 COLLATE BINARY IN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END, t0.c52 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE BINARY IN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END, t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 COLLATE BINARY IN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END, t0.c52 COLLATE NOCASE)));
SELECT * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((((t0.c52) IS FALSE))) AND ((((((((((t0.c52)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c52))))));
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((t0.c52) IS FALSE))) AND ((((((((((t0.c52)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c52)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((((t0.c52) IS FALSE))) AND ((((((((((t0.c52)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c52))))));
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((t0.c52) IS FALSE))) AND ((((((((((t0.c52)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c52)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c52)) NOT BETWEEN ((((t0.c52) IS FALSE))) AND ((((((((((t0.c52)OR(t0.c52)))OR(t0.c52)))OR(t0.c52)))AND(t0.c52))))));
SELECT * FROM t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c52);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((LTRIM(rt0.c3))=(((((rt0.c0)OR('8s')))AND(rt0.c0)))) INNER JOIN rt0 ON ((((rt0.c0 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))))OR(rt0.c1)) WHERE ((((((0X61e9872d)-(vt0.c0)), IFNULL(DISTINCT rt0.c0, rt0.c3), rt0.c1))=((((t0.c52)/(t0.c52)), CAST(rt0.c1 AS NUMERIC), t0.c52)))) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS LAST, CASE rt0.c0  WHEN json_insert(t0.c52, rt0.c3, rt0.c3) THEN (+ (rt0.c3)) ELSE ((rt0.c3)<(rt0.c2)) END, ((rt0.c3)|(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X61e9872d)-(vt0.c0)), IFNULL(DISTINCT rt0.c0, rt0.c3), rt0.c1))==((((t0.c52)/(t0.c52)), CAST(rt0.c1 AS NUMERIC), t0.c52)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((LTRIM(rt0.c3))==(((((rt0.c0)OR('8s')))AND(rt0.c0)))) INNER JOIN rt0 ON ((((rt0.c0 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))))OR(rt0.c1)) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS LAST, CASE rt0.c0  WHEN json_insert(t0.c52, rt0.c3, rt0.c3) THEN (+ (rt0.c3)) ELSE ((rt0.c3)<(rt0.c2)) END, ((rt0.c3)|(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((LTRIM(rt0.c3))=(((((rt0.c0)OR('8s')))AND(rt0.c0)))) INNER JOIN rt0 ON ((((rt0.c0 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))))OR(rt0.c1)) WHERE ((((((0X61e9872d)-(vt0.c0)), IFNULL(DISTINCT rt0.c0, rt0.c3), rt0.c1))=((((t0.c52)/(t0.c52)), CAST(rt0.c1 AS NUMERIC), t0.c52)))) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS LAST, CASE rt0.c0  WHEN json_insert(t0.c52, rt0.c3, rt0.c3) THEN (+ (rt0.c3)) ELSE ((rt0.c3)<(rt0.c2)) END, ((rt0.c3)|(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X61e9872d)-(vt0.c0)), IFNULL(DISTINCT rt0.c0, rt0.c3), rt0.c1))==((((t0.c52)/(t0.c52)), CAST(rt0.c1 AS NUMERIC), t0.c52)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((LTRIM(rt0.c3))==(((((rt0.c0)OR('8s')))AND(rt0.c0)))) INNER JOIN rt0 ON ((((rt0.c0 COLLATE NOCASE)AND(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))))OR(rt0.c1)) ORDER BY HEX(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0))) DESC  NULLS LAST, CASE rt0.c0  WHEN json_insert(t0.c52, rt0.c3, rt0.c3) THEN (+ (rt0.c3)) ELSE ((rt0.c3)<(rt0.c2)) END, ((rt0.c3)|(rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) NOTNULL) THEN rt0.c2 END);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c52);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (t0.c52) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (t0.c52) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (t0.c52) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (t0.c52) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((+ (t0.c52)))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0) BETWEEN (t0.c52) AND (vt0.c0)))));
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT * FROM vt0, rt0, t0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0, rt0, t0 NOT INDEXED WHERE (CASE WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 NOT INDEXED WHERE (CASE WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 NOT INDEXED WHERE (CASE WHEN ((rt0.c3) NOTNULL) THEN vt0.c0 ELSE (((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) END);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c52)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY 0.1338973225287199 ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c52)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY 0.1338973225287199 ASC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c52)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY 0.1338973225287199 ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c52)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY 0.1338973225287199 ASC);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE ((((((t0.c52)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) NOTNULL)) ORDER BY 0.1338973225287199 ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 IN (rt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((- (rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((- (rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((- (rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((vt0.c0))), vt0.c0 COLLATE RTRIM)) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((vt0.c0))), vt0.c0 COLLATE RTRIM)) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (((vt0.c0))==((vt0.c0))), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))=((vt0.c0))), vt0.c0 COLLATE RTRIM)) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt0.c0))/(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, vt0.c0))/(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'');
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt0.c0))/(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, vt0.c0))/(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'');
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt0.c0))/(((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c0))))) ORDER BY x'';
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c52) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c52) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c52) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c52) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c52) NOTNULL) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0))) AND ((vt0.c0 COLLATE NOCASE)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY 'QW' ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'QW' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY 'QW' ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY 'QW' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY 'QW' ASC;
SELECT ALL * FROM rt0 WHERE ((+ (((x'c0e7') NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'c0e7') NOT BETWEEN (NULL) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((x'c0e7') NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'c0e7') NOT BETWEEN (NULL) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((x'c0e7') NOT BETWEEN (NULL) AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((0.9074355591297036, t0.c52, rt0.c1)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((NULL, t0.c52, rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((0.9074355591297036, t0.c52, rt0.c1)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((NULL, t0.c52, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((0.9074355591297036, t0.c52, rt0.c1)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((NULL, t0.c52, rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((0.9074355591297036, t0.c52, rt0.c1)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((NULL, t0.c52, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((((((0.9074355591297036, t0.c52, rt0.c1)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((NULL, t0.c52, rt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (((((((((rt0.c2)OR(0.2873270040072088)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)) IN (CASE WHEN '1419034211' THEN t0.c52 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((((rt0.c2)OR(0.2873270040072088)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)) IN (CASE WHEN '1419034211' THEN t0.c52 END)) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (((((((((rt0.c2)OR(0.2873270040072088)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)) IN (CASE WHEN '1419034211' THEN t0.c52 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((((((rt0.c2)OR(0.2873270040072088)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)) IN (CASE WHEN '1419034211' THEN t0.c52 END)) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY (((((((((rt0.c2)OR(0.2873270040072088)))AND(vt0.c0)))AND(NULL)))OR(rt0.c0)) IN (CASE WHEN '1419034211' THEN t0.c52 END)) ASC;
SELECT * FROM rt0, vt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN -1e500 THEN 0.8169604949685827 ELSE rt0.c1 END) ORDER BY (+ ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, NULL, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>>(rt0.c0))  WHEN -1e500 THEN 0.8169604949685827 ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, NULL, rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN -1e500 THEN 0.8169604949685827 ELSE rt0.c1 END) ORDER BY (+ ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, NULL, rt0.c2))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)>>(rt0.c0))  WHEN -1e500 THEN 0.8169604949685827 ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, NULL, rt0.c2))))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((rt0.c2)>>(rt0.c0))  WHEN -1e500 THEN 0.8169604949685827 ELSE rt0.c1 END) ORDER BY (+ ((((rt0.c3, rt0.c3, rt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, NULL, rt0.c2))))) ASC  NULLS FIRST;
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END) NOT NULL)) ORDER BY (~ (TYPEOF(t0.c52)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (~ (TYPEOF(t0.c52))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END) NOT NULL)) ORDER BY (~ (TYPEOF(t0.c52)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (~ (TYPEOF(t0.c52))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END) NOT NULL)) ORDER BY (~ (TYPEOF(t0.c52)));
SELECT * FROM t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c52);
SELECT * FROM vt0, t0 WHERE ('-266775070') ORDER BY (NOT (t0.c52 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-266775070') IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (t0.c52 COLLATE RTRIM)) ASC);
SELECT * FROM vt0, t0 WHERE ('-266775070') ORDER BY (NOT (t0.c52 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-266775070') IS TRUE)  as count FROM vt0, t0 ORDER BY (NOT (t0.c52 COLLATE RTRIM)) ASC);
SELECT * FROM vt0, t0 WHERE ('-266775070') ORDER BY (NOT (t0.c52 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT NULL)) ORDER BY ((0X25b875bb) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) DESC, (x'' IN ())  NULLS FIRST, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((0X25b875bb) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) DESC, (x'' IN ())  NULLS FIRST, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT NULL)) ORDER BY ((0X25b875bb) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) DESC, (x'' IN ())  NULLS FIRST, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((0X25b875bb) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) DESC, (x'' IN ())  NULLS FIRST, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE rt0.c2 END COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT NULL)) ORDER BY ((0X25b875bb) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)) DESC, (x'' IN ())  NULLS FIRST, CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE rt0.c2 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c52 IN (t0.c52)))>=(((((t0.c52)AND(t0.c52)))AND(vt0.c0)))) WHERE (((-8.22510946E8) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((-8.22510946E8) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c52 IN (t0.c52)))>=(((((t0.c52)AND(t0.c52)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c52 IN (t0.c52)))>=(((((t0.c52)AND(t0.c52)))AND(vt0.c0)))) WHERE (((-8.22510946E8) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((-8.22510946E8) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c52 IN (t0.c52)))>=(((((t0.c52)AND(t0.c52)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c52 IN (t0.c52)))>=(((((t0.c52)AND(t0.c52)))AND(vt0.c0)))) WHERE (((-8.22510946E8) NOTNULL));
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((vt0.c0 COLLATE NOCASE)<=(((vt0.c0)OR(rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(x'')))AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(x'')))AND(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(x'')))AND(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 ELSE '钣纨' END)&((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 ELSE '钣纨' END)&((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 ELSE '钣纨' END)&((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 ELSE '钣纨' END)&((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN vt0.c0 ELSE '钣纨' END)&((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((CAST(rt0.c3 AS INTEGER), '', NULL))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2)*(0.7825034023640784))))) ASC, (- ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CAST(rt0.c3 AS INTEGER), '', NULL))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2)*(0.7825034023640784))))) ASC, (- ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((CAST(rt0.c3 AS INTEGER), '', NULL))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2)*(0.7825034023640784))))) ASC, (- ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CAST(rt0.c3 AS INTEGER), '', NULL))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2)*(0.7825034023640784))))) ASC, (- ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (((CAST(rt0.c3 AS INTEGER), '', NULL))<=((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c2)*(0.7825034023640784))))) ASC, (- ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)>>(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)>>(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((rt0.c0)>>(rt0.c3)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((('-860132481')*(t0.c52))) ISNULL) WHERE (HEX(DISTINCT ((t0.c52)/(t0.c52))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t0.c52)/(t0.c52)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((('-860132481')*(t0.c52))) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((('-860132481')*(t0.c52))) ISNULL) WHERE (HEX(DISTINCT ((t0.c52)/(t0.c52))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((t0.c52)/(t0.c52)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (((('-860132481')*(t0.c52))) ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (((('-860132481')*(t0.c52))) ISNULL) WHERE (HEX(DISTINCT ((t0.c52)/(t0.c52))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('133129364' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('133129364' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('133129364' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('133129364' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('133129364' COLLATE BINARY);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c52) BETWEEN ('-346487191') AND (rt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (CASE -1.414844031E9  WHEN rt0.c3 THEN t0.c52 END)) INNER JOIN t0 ON ((((CASE rt0.c1  WHEN NULL THEN rt0.c3 END)OR(((t0.c52) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((((~ (rt0.c2)))*(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c1)))) AND ((rt0.c0 IN (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))*(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c52) BETWEEN ('-346487191') AND (rt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (CASE -1.414844031E9  WHEN rt0.c3 THEN t0.c52 END)) INNER JOIN t0 ON ((((CASE rt0.c1  WHEN NULL THEN rt0.c3 END)OR(((t0.c52) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c1)))) AND ((rt0.c0 IN (rt0.c3))))  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c52) BETWEEN ('-346487191') AND (rt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (CASE -1.414844031E9  WHEN rt0.c3 THEN t0.c52 END)) INNER JOIN t0 ON ((((CASE rt0.c1  WHEN NULL THEN rt0.c3 END)OR(((t0.c52) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((((~ (rt0.c2)))*(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c1)))) AND ((rt0.c0 IN (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))*(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((t0.c52) BETWEEN ('-346487191') AND (rt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (CASE -1.414844031E9  WHEN rt0.c3 THEN t0.c52 END)) INNER JOIN t0 ON ((((CASE rt0.c1  WHEN NULL THEN rt0.c3 END)OR(((t0.c52) ISNULL))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ORDER BY (((rt0.c2 IN ())) BETWEEN ((((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c1)))) AND ((rt0.c0 IN (rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0)<<(vt0.c0))))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, (((((vt0.c0) BETWEEN (1879389440) AND ('133129364'))))<=((vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<(vt0.c0)) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, (((((vt0.c0) BETWEEN (1879389440) AND ('133129364'))))<=((vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0)<<(vt0.c0))))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, (((((vt0.c0) BETWEEN (1879389440) AND ('133129364'))))<=((vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<(vt0.c0)) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, (((((vt0.c0) BETWEEN (1879389440) AND ('133129364'))))<=((vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN (CAST(vt0.c0 AS BLOB), ((vt0.c0)<<(vt0.c0))))) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)  NULLS FIRST, (((((vt0.c0) BETWEEN (1879389440) AND ('133129364'))))<=((vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52) NOTNULL) IN (((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)), CASE WHEN 0X266aec61 THEN t0.c52 ELSE t0.c52 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c52) NOTNULL) IN (((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)), CASE WHEN 0x266aec61 THEN t0.c52 ELSE t0.c52 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52) NOTNULL) IN (((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)), CASE WHEN 0X266aec61 THEN t0.c52 ELSE t0.c52 END)));
SELECT SUM(count) FROM (SELECT (((((t0.c52) NOTNULL) IN (((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)), CASE WHEN 0x266aec61 THEN t0.c52 ELSE t0.c52 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52) NOTNULL) IN (((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52)), CASE WHEN 0X266aec61 THEN t0.c52 ELSE t0.c52 END)));
SELECT * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (t0.c52 IN ()) THEN ((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)) WHEN ((t0.c52)+(t0.c52)) THEN NULL COLLATE BINARY WHEN ((((((((((((t0.c52)AND(t0.c52)))OR(t0.c52)))OR(vt0.c0)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT (t0.c52)) END WHERE (CAST(((((t0.c52)AND(t0.c52)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c52)AND(t0.c52)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE ((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (t0.c52 IN ()) THEN ((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)) WHEN ((t0.c52)+(t0.c52)) THEN NULL COLLATE BINARY WHEN ((((((((((((t0.c52)AND(t0.c52)))OR(t0.c52)))OR(vt0.c0)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT (t0.c52)) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (t0.c52 IN ()) THEN ((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)) WHEN ((t0.c52)+(t0.c52)) THEN NULL COLLATE BINARY WHEN ((((((((((((t0.c52)AND(t0.c52)))OR(t0.c52)))OR(vt0.c0)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT (t0.c52)) END WHERE (CAST(((((t0.c52)AND(t0.c52)))OR(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c52)AND(t0.c52)))OR(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE ((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (t0.c52 IN ()) THEN ((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)) WHEN ((t0.c52)+(t0.c52)) THEN NULL COLLATE BINARY WHEN ((((((((((((t0.c52)AND(t0.c52)))OR(t0.c52)))OR(vt0.c0)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT (t0.c52)) END);
SELECT * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (t0.c52 IN ()) THEN ((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)) WHEN ((t0.c52)+(t0.c52)) THEN NULL COLLATE BINARY WHEN ((((((((((((t0.c52)AND(t0.c52)))OR(t0.c52)))OR(vt0.c0)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52)) THEN CAST(vt0.c0 AS NUMERIC) ELSE (NOT (t0.c52)) END WHERE (CAST(((((t0.c52)AND(t0.c52)))OR(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) ORDER BY IFNULL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))  NULLS FIRST, IFNULL(DISTINCT (((((((('136033894')AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)), ((((t0.c52)OR(vt0.c0)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY IFNULL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))  NULLS FIRST, IFNULL(DISTINCT (((((((('136033894')AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)), ((((t0.c52)OR(vt0.c0)))OR(rt0.c0))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) ORDER BY IFNULL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))  NULLS FIRST, IFNULL(DISTINCT (((((((('136033894')AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)), ((((t0.c52)OR(vt0.c0)))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY IFNULL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))  NULLS FIRST, IFNULL(DISTINCT (((((((('136033894')AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)), ((((t0.c52)OR(vt0.c0)))OR(rt0.c0))));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((rt0.c1)*(rt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (((rt0.c1) NOT NULL)))) ORDER BY IFNULL(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c1 IN ()))  NULLS FIRST, IFNULL(DISTINCT (((((((('136033894')AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c1)), ((((t0.c52)OR(vt0.c0)))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2)<>(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((((rt0.c0))>((rt0.c0))))), CAST((+ (t0.c52)) AS REAL) ASC, ((((rt0.c1) NOT NULL))<<(((((rt0.c3)AND(rt0.c3)))AND(t0.c52)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((((rt0.c0))>((rt0.c0))))), CAST((+ (t0.c52)) AS REAL) ASC, ((((rt0.c1) NOT NULL))<<(((((rt0.c3)AND(rt0.c3)))AND(t0.c52)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2)<>(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((((rt0.c0))>((rt0.c0))))), CAST((+ (t0.c52)) AS REAL) ASC, ((((rt0.c1) NOT NULL))<<(((((rt0.c3)AND(rt0.c3)))AND(t0.c52)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((((rt0.c0))>((rt0.c0))))), CAST((+ (t0.c52)) AS REAL) ASC, ((((rt0.c1) NOT NULL))<<(((((rt0.c3)AND(rt0.c3)))AND(t0.c52)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2)<>(rt0.c2))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))<<((((rt0.c0))>((rt0.c0))))), CAST((+ (t0.c52)) AS REAL) ASC, ((((rt0.c1) NOT NULL))<<(((((rt0.c3)AND(rt0.c3)))AND(t0.c52)))) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT NULL) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS(rt0.c0)))IS NOT(((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE (((rt0.c1)OR(0.645681112283127))) ORDER BY (NOT (((t0.c52)/(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(0.645681112283127))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT NULL) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS(rt0.c0)))IS NOT(((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))) ORDER BY (NOT (((t0.c52)/(rt0.c3)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT NULL) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS(rt0.c0)))IS NOT(((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE (((rt0.c1)OR(0.645681112283127))) ORDER BY (NOT (((t0.c52)/(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)OR(0.645681112283127))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT NULL) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS(rt0.c0)))IS NOT(((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))) ORDER BY (NOT (((t0.c52)/(rt0.c3)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) NOT NULL) COLLATE BINARY RIGHT OUTER JOIN t0 ON ((((vt0.c0)IS(rt0.c0)))IS NOT(((((vt0.c0)AND(rt0.c2)))OR(rt0.c1)))) WHERE (((rt0.c1)OR(0.645681112283127))) ORDER BY (NOT (((t0.c52)/(rt0.c3)))) DESC;
SELECT * FROM t0, rt0 WHERE (((rt0.c3) NOT BETWEEN ('408046083') AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN ('408046083') AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c3) NOT BETWEEN ('408046083') AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN ('408046083') AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c3) NOT BETWEEN ('408046083') AND (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON (((((((((t0.c52 IN (x'', t0.c52)))AND((((632845755)) BETWEEN ((rt0.c2)) AND ((t0.c52))))))AND(0.7149790621597976 COLLATE RTRIM)))OR(((rt0.c2)AND(t0.c52)))))AND(ABS(rt0.c0))) WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(t0.c52))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((((((((t0.c52 IN (x'', t0.c52)))AND((((632845755)) BETWEEN ((rt0.c2)) AND ((t0.c52))))))AND(0.7149790621597976 COLLATE RTRIM)))OR(((rt0.c2)AND(t0.c52)))))AND(ABS(rt0.c0))) ORDER BY ((((rt0.c1)<=(t0.c52))) NOT NULL) DESC);
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON (((((((((t0.c52 IN (x'', t0.c52)))AND((((632845755)) BETWEEN ((rt0.c2)) AND ((t0.c52))))))AND(0.7149790621597976 COLLATE RTRIM)))OR(((rt0.c2)AND(t0.c52)))))AND(ABS(rt0.c0))) WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(t0.c52))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((((((((t0.c52 IN (x'', t0.c52)))AND((((632845755)) BETWEEN ((rt0.c2)) AND ((t0.c52))))))AND(0.7149790621597976 COLLATE RTRIM)))OR(((rt0.c2)AND(t0.c52)))))AND(ABS(rt0.c0))) ORDER BY ((((rt0.c1)<=(t0.c52))) NOT NULL) DESC);
SELECT * FROM t0, rt0 CROSS JOIN vt0 ON (((((((((t0.c52 IN (x'', t0.c52)))AND((((632845755)) BETWEEN ((rt0.c2)) AND ((t0.c52))))))AND(0.7149790621597976 COLLATE RTRIM)))OR(((rt0.c2)AND(t0.c52)))))AND(ABS(rt0.c0))) WHERE (rt0.c2) ORDER BY ((((rt0.c1)<=(t0.c52))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((CAST(t0.c52 AS INTEGER)))<>((CAST(t0.c52 AS TEXT)))) RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN HEX(vt0.c0) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE load_extension(t0.c52) END WHERE ((((rt0.c2) BETWEEN (t0.c52) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c52) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((CAST(t0.c52 AS INTEGER)))!=((CAST(t0.c52 AS TEXT)))) RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN HEX(vt0.c0) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE load_extension(t0.c52) END);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((CAST(t0.c52 AS INTEGER)))<>((CAST(t0.c52 AS TEXT)))) RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN HEX(vt0.c0) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE load_extension(t0.c52) END WHERE ((((rt0.c2) BETWEEN (t0.c52) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t0.c52) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((CAST(t0.c52 AS INTEGER)))!=((CAST(t0.c52 AS TEXT)))) RIGHT OUTER JOIN rt0 ON CASE rt0.c0  WHEN HEX(vt0.c0) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE load_extension(t0.c52) END);
SELECT ALL * FROM vt0, t0 WHERE (INSTR(vt0.c0 COLLATE NOCASE, (t0.c52 IN ()))) ORDER BY (((t0.c52))>((((((((((vt0.c0)OR(t0.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0 COLLATE NOCASE, (t0.c52 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c52))>((((((((((vt0.c0)OR(t0.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c52))))));
SELECT ALL * FROM vt0, t0 WHERE (INSTR(vt0.c0 COLLATE NOCASE, (t0.c52 IN ()))) ORDER BY (((t0.c52))>((((((((((vt0.c0)OR(t0.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0 COLLATE NOCASE, (t0.c52 IN ()))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c52))>((((((((((vt0.c0)OR(t0.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c52))))));
SELECT ALL * FROM vt0, t0 WHERE (INSTR(vt0.c0 COLLATE NOCASE, (t0.c52 IN ()))) ORDER BY (((t0.c52))>((((((((((vt0.c0)OR(t0.c52)))OR(vt0.c0)))OR(vt0.c0)))AND(t0.c52)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(CASE -1219760917  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c52 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))OR(CASE -1219760917  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c52 END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(CASE -1219760917  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c52 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL))OR(CASE -1219760917  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c52 END))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c2) NOTNULL))OR(CASE -1219760917  WHEN rt0.c3 THEN rt0.c3 ELSE t0.c52 END))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 NOT INDEXED WHERE (((rt0.c2 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY (('-1194532501')/(((rt0.c2)IS('133483387'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('-1194532501')/(((rt0.c2)IS('133483387'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 NOT INDEXED WHERE (((rt0.c2 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY (('-1194532501')/(((rt0.c2)IS('133483387'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (('-1194532501')/(((rt0.c2)IS('133483387'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 NOT INDEXED WHERE (((rt0.c2 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY (('-1194532501')/(((rt0.c2)IS('133483387'))))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((rt0.c2) NOTNULL) COLLATE NOCASE) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt0 WHERE ((rt0.c3 IN (t0.c52, rt0.c3)) COLLATE NOCASE) ORDER BY (((((rt0.c3))=((vt0.c0))))<(CASE NULL  WHEN '-808507518' THEN t0.c52 WHEN rt0.c2 THEN 0.5929397818095119 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (t0.c52, rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((rt0.c3))=((vt0.c0))))<(CASE NULL  WHEN '-808507518' THEN t0.c52 WHEN rt0.c2 THEN 0.5929397818095119 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((rt0.c3 IN (t0.c52, rt0.c3)) COLLATE NOCASE) ORDER BY (((((rt0.c3))=((vt0.c0))))<(CASE NULL  WHEN '-808507518' THEN t0.c52 WHEN rt0.c2 THEN 0.5929397818095119 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (t0.c52, rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((((rt0.c3))=((vt0.c0))))<(CASE NULL  WHEN '-808507518' THEN t0.c52 WHEN rt0.c2 THEN 0.5929397818095119 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((rt0.c3 IN (t0.c52, rt0.c3)) COLLATE NOCASE) ORDER BY (((((rt0.c3))=((vt0.c0))))<(CASE NULL  WHEN '-808507518' THEN t0.c52 WHEN rt0.c2 THEN 0.5929397818095119 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE))) ORDER BY -1.302014822E9 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.302014822E9 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE))) ORDER BY -1.302014822E9 DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.302014822E9 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c0 AS BLOB))OR(vt0.c0 COLLATE NOCASE))) ORDER BY -1.302014822E9 DESC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (x'8e2a');
SELECT SUM(count) FROM (SELECT ALL ((x'8e2a') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (x'8e2a');
SELECT SUM(count) FROM (SELECT ALL ((x'8e2a') IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (x'8e2a');
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (('-1194532501')||(((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (('-1194532501')||(((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (('-1194532501')||(((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (('-1194532501')||(((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (('-1194532501')||(((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (NULL) AND (-1.341876513E9))) ORDER BY (+ (((rt0.c0)==(rt0.c0))))  NULLS LAST, (((t0.c52, t0.c52, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c52, rt0.c2)) AND ((NULL, rt0.c1, vt0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (NULL) AND (-1.341876513E9))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (+ (((rt0.c0)=(rt0.c0))))  NULLS LAST, (((t0.c52, t0.c52, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c52, rt0.c2)) AND ((NULL, rt0.c1, vt0.c0))) COLLATE BINARY DESC);
SELECT * FROM vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (NULL) AND (-1.341876513E9))) ORDER BY (+ (((rt0.c0)==(rt0.c0))))  NULLS LAST, (((t0.c52, t0.c52, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c52, rt0.c2)) AND ((NULL, rt0.c1, vt0.c0))) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (NULL) AND (-1.341876513E9))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (+ (((rt0.c0)=(rt0.c0))))  NULLS LAST, (((t0.c52, t0.c52, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c52, rt0.c2)) AND ((NULL, rt0.c1, vt0.c0))) COLLATE BINARY DESC);
SELECT * FROM vt0, t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END) BETWEEN (NULL) AND (-1.341876513E9))) ORDER BY (+ (((rt0.c0)==(rt0.c0))))  NULLS LAST, (((t0.c52, t0.c52, vt0.c0)) NOT BETWEEN ((rt0.c0, t0.c52, rt0.c2)) AND ((NULL, rt0.c1, vt0.c0))) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((t0.c52 IN ('0.4317403511891069', vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c52 IN ('0.4317403511891069', vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((t0.c52 IN ('0.4317403511891069', vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c52 IN ('0.4317403511891069', vt0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ((t0.c52 IN ('0.4317403511891069', vt0.c0)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (((('')+(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('')+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('')+(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('')+(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('')+(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(0.8727983665785715)))OR(NULL))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) END) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(0.8727983665785715)))OR(NULL))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(0.8727983665785715)))OR(NULL))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) END) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(0.8727983665785715)))OR(NULL))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((((vt0.c0)OR(0.8727983665785715)))OR(NULL))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0)*(vt0.c0)) END) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)>>(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((t0.c52 COLLATE NOCASE)=(t0.c52 COLLATE NOCASE))) ORDER BY (((t0.c52 IN ()))>=((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, '', t0.c52)))));
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)==(t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52 IN ()))>=((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, '', t0.c52))))));
SELECT ALL * FROM t0 WHERE (((t0.c52 COLLATE NOCASE)=(t0.c52 COLLATE NOCASE))) ORDER BY (((t0.c52 IN ()))>=((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, '', t0.c52)))));
SELECT SUM(count) FROM (SELECT ((((t0.c52 COLLATE NOCASE)==(t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c52 IN ()))>=((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, '', t0.c52))))));
SELECT ALL * FROM t0 WHERE (((t0.c52 COLLATE NOCASE)=(t0.c52 COLLATE NOCASE))) ORDER BY (((t0.c52 IN ()))>=((((t0.c52, t0.c52, t0.c52)) BETWEEN ((t0.c52, t0.c52, t0.c52)) AND ((t0.c52, '', t0.c52)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS BLOB))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))AND(TRIM(rt0.c1))))OR(CAST(rt0.c2 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)) CROSS JOIN rt0 ON CAST('408046083' AS NUMERIC) WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS BLOB))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))AND(TRIM(rt0.c1))))OR(CAST(rt0.c2 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)) CROSS JOIN rt0 ON CAST('408046083' AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS BLOB))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))AND(TRIM(rt0.c1))))OR(CAST(rt0.c2 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)) CROSS JOIN rt0 ON CAST('408046083' AS NUMERIC) WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS BLOB))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))AND(TRIM(rt0.c1))))OR(CAST(rt0.c2 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)) CROSS JOIN rt0 ON CAST('408046083' AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((((((CAST(vt0.c0 AS BLOB))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))AND(TRIM(rt0.c1))))OR(CAST(rt0.c2 AS INTEGER))))OR(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END)) CROSS JOIN rt0 ON CAST('408046083' AS NUMERIC) WHERE (x'' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1)AND(rt0.c1)))OR(NULL)) IN (((rt0.c3)+(rt0.c3)))) WHERE ((- ('-1309091742'))) ORDER BY t0.c52 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('-1309091742'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1)AND(rt0.c1)))OR(NULL)) IN (((rt0.c3)+(rt0.c3)))) ORDER BY t0.c52 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1)AND(rt0.c1)))OR(NULL)) IN (((rt0.c3)+(rt0.c3)))) WHERE ((- ('-1309091742'))) ORDER BY t0.c52 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ('-1309091742'))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1)AND(rt0.c1)))OR(NULL)) IN (((rt0.c3)+(rt0.c3)))) ORDER BY t0.c52 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((((rt0.c1)AND(rt0.c1)))OR(NULL)) IN (((rt0.c3)+(rt0.c3)))) WHERE ((- ('-1309091742'))) ORDER BY t0.c52 ASC  NULLS LAST;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE (t0.c52 IN ())  WHEN (+ (rt0.c0)) THEN ((rt0.c3) IS TRUE) END WHERE ((NOT (((t0.c52) ISNULL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c52) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE (t0.c52 IN ())  WHEN (+ (rt0.c0)) THEN ((rt0.c3) IS TRUE) END ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE (t0.c52 IN ())  WHEN (+ (rt0.c0)) THEN ((rt0.c3) IS TRUE) END WHERE ((NOT (((t0.c52) ISNULL)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c52) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE (t0.c52 IN ())  WHEN (+ (rt0.c0)) THEN ((rt0.c3) IS TRUE) END ORDER BY rt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN t0 ON CASE (t0.c52 IN ())  WHEN (+ (rt0.c0)) THEN ((rt0.c3) IS TRUE) END WHERE ((NOT (((t0.c52) ISNULL)))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((+ (rt0.c3))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND((+ (rt0.c3)))))OR((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c1) IS FALSE))AND((+ (rt0.c3)))))OR((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((+ (rt0.c3))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND((+ (rt0.c3)))))OR((NOT (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c1) IS FALSE))AND((+ (rt0.c3)))))OR((NOT (rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((+ (rt0.c3))) IS TRUE)) ORDER BY ((((((rt0.c1) IS FALSE))AND((+ (rt0.c3)))))OR((NOT (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((rt0.c1)/(rt0.c1))))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((rt0.c1)/(rt0.c1))))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS REAL) IN (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS REAL) IN (((rt0.c1)/(rt0.c1))))) ORDER BY (CAST(rt0.c2 AS BLOB) IN ()) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((('417404080') IS TRUE))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)))))AND(TRIM(DISTINCT t0.c52))));
SELECT SUM(count) FROM (SELECT (((((((('417404080') IS TRUE))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)))))AND(TRIM(DISTINCT t0.c52)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((('417404080') IS TRUE))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)))))AND(TRIM(DISTINCT t0.c52))));
SELECT SUM(count) FROM (SELECT (((((((('417404080') IS TRUE))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)))))AND(TRIM(DISTINCT t0.c52)))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((('417404080') IS TRUE))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (vt0.c0)))))AND(TRIM(DISTINCT t0.c52))));
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (CAST(rt0.c2 AS INTEGER) IN ()) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND('-1650205807')))AND(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (CAST(rt0.c2 AS INTEGER) IN ()) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND('-1650205807')))AND(rt0.c3)) END  NULLS LAST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (CAST(rt0.c2 AS INTEGER) IN ()) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND('-1650205807')))AND(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt0 ON (CAST(rt0.c2 AS INTEGER) IN ()) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND('-1650205807')))AND(rt0.c3)) END  NULLS LAST);
SELECT * FROM vt0, t0 INNER JOIN rt0 ON (CAST(rt0.c2 AS INTEGER) IN ()) WHERE (CAST(rt0.c2 AS INTEGER) COLLATE NOCASE) ORDER BY CASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE t0.c52 END THEN (vt0.c0 IN ()) ELSE ((((vt0.c0)AND('-1650205807')))AND(rt0.c3)) END  NULLS LAST;
SELECT * FROM t0, vt0, rt0 WHERE ((((t0.c52) IS FALSE) IN (NULLIF(rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((t0.c52) IS FALSE) IN (NULLIF(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((t0.c52) IS FALSE) IN (NULLIF(rt0.c0, rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((t0.c52) IS FALSE) IN (NULLIF(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE ((((t0.c52) IS FALSE) IN (NULLIF(rt0.c0, rt0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c52 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE t0.c52 END) BETWEEN (t0.c52) AND ((((t0.c52)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52)))))) ORDER BY (((((t0.c52 IN ()))AND(((t0.c52)>=(t0.c52)))))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c52 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE t0.c52 END) BETWEEN (t0.c52) AND ((((t0.c52)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c52 IN ()))AND(((t0.c52)>=(t0.c52)))))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN t0.c52 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE t0.c52 END) BETWEEN (t0.c52) AND ((((t0.c52)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52)))))) ORDER BY (((((t0.c52 IN ()))AND(((t0.c52)>=(t0.c52)))))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c52 THEN vt0.c0 WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 ELSE t0.c52 END) BETWEEN (t0.c52) AND ((((t0.c52)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c52 IN ()))AND(((t0.c52)>=(t0.c52)))))AND(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((+ (((vt0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((+ (((vt0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((+ (((vt0.c0)<<(rt0.c2)))));
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((t0.c52)OR(t0.c52)))OR(rt0.c2)) END) ORDER BY (NOT (CASE WHEN rt0.c2 THEN t0.c52 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((t0.c52)OR(t0.c52)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN t0.c52 ELSE rt0.c3 END)));
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((t0.c52)OR(t0.c52)))OR(rt0.c2)) END) ORDER BY (NOT (CASE WHEN rt0.c2 THEN t0.c52 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((t0.c52)OR(t0.c52)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY (NOT (CASE WHEN rt0.c2 THEN t0.c52 ELSE rt0.c3 END)));
SELECT * FROM rt0, t0 WHERE (CASE ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((t0.c52)OR(t0.c52)))OR(rt0.c2)) END) ORDER BY (NOT (CASE WHEN rt0.c2 THEN t0.c52 ELSE rt0.c3 END));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY ((NULL)OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))==((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY ((NULL)OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))==((((vt0.c0)<>(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((NULL)OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))==((((vt0.c0)!=(vt0.c0)))))) ORDER BY ((NULL)OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((+ ('0}T')) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0}T')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((+ ('0}T')) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ('0}T')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((+ ('0}T')) COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER) ASC;
SELECT * FROM vt0, t0, rt0 WHERE ((+ ('-468669443'))) ORDER BY CASE WHEN CAST('k|' AS INTEGER) THEN ((((t0.c52)AND(4.70600256E8)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-468669443'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN CAST('k|' AS INTEGER) THEN ((((t0.c52)AND(4.70600256E8)))AND(rt0.c2)) END);
SELECT * FROM vt0, t0, rt0 WHERE ((+ ('-468669443'))) ORDER BY CASE WHEN CAST('k|' AS INTEGER) THEN ((((t0.c52)AND(4.70600256E8)))AND(rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-468669443'))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE WHEN CAST('k|' AS INTEGER) THEN ((((t0.c52)AND(4.70600256E8)))AND(rt0.c2)) END);
SELECT * FROM vt0, t0, rt0 WHERE ((+ ('-468669443'))) ORDER BY CASE WHEN CAST('k|' AS INTEGER) THEN ((((t0.c52)AND(4.70600256E8)))AND(rt0.c2)) END;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END THEN x'15b5' END WHERE ((- (CAST(t0.c52 AS TEXT)))) ORDER BY ((((vt0.c0) NOTNULL))IS((vt0.c0 IN ()))) DESC, ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c52 AS TEXT)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END THEN x'15b5' END ORDER BY ((((vt0.c0) NOTNULL))IS((vt0.c0 IN ()))) DESC, ((vt0.c0) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END THEN x'15b5' END WHERE ((- (CAST(t0.c52 AS TEXT)))) ORDER BY ((((vt0.c0) NOTNULL))IS((vt0.c0 IN ()))) DESC, ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT (((- (CAST(t0.c52 AS TEXT)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END THEN x'15b5' END ORDER BY ((((vt0.c0) NOTNULL))IS((vt0.c0 IN ()))) DESC, ((vt0.c0) NOTNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN CASE WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 END THEN x'15b5' END WHERE ((- (CAST(t0.c52 AS TEXT)))) ORDER BY ((((vt0.c0) NOTNULL))IS((vt0.c0 IN ()))) DESC, ((vt0.c0) NOTNULL);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)=(vt0.c0))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)=(vt0.c0))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)=(vt0.c0)));
SELECT ALL * FROM t0, rt0, vt0 WHERE ('8촩z Wy') ORDER BY (~ ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('8촩z Wy') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ ((rt0.c3 IN ()))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ('8촩z Wy') ORDER BY (~ ((rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('8촩z Wy') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ ((rt0.c3 IN ()))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ('8촩z Wy') ORDER BY (~ ((rt0.c3 IN ())));
SELECT ALL * FROM rt0, t0, vt0 WHERE (((rt0.c2)||('jhv\4i' COLLATE NOCASE))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||('jhv\4i' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((rt0.c2)||('jhv\4i' COLLATE NOCASE))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||('jhv\4i' COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0, t0, vt0 WHERE (((rt0.c2)||('jhv\4i' COLLATE NOCASE))) ORDER BY ((rt0.c3)LIKE(rt0.c2)) COLLATE NOCASE DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)))) ORDER BY (((+ (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT NULL) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)))) ORDER BY (((+ (vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) NOT NULL) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)))) ORDER BY (((+ (vt0.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt0, rt0, t0 WHERE ((('')||(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((+ (rt0.c1)), ((('745369279'))<=((rt0.c0))), ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c52))))=(((t0.c52 IN ()), (rt0.c2 IN ()), ((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT (((('')||(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((+ (rt0.c1)), ((('745369279'))<=((rt0.c0))), ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c52))))=(((t0.c52 IN ()), (rt0.c2 IN ()), ((vt0.c0) IS FALSE)))) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((('')||(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((+ (rt0.c1)), ((('745369279'))<=((rt0.c0))), ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c52))))=(((t0.c52 IN ()), (rt0.c2 IN ()), ((vt0.c0) IS FALSE)))) DESC;
SELECT SUM(count) FROM (SELECT (((('')||(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((+ (rt0.c1)), ((('745369279'))<=((rt0.c0))), ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c52))))=(((t0.c52 IN ()), (rt0.c2 IN ()), ((vt0.c0) IS FALSE)))) DESC);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((('')||(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c0))))) ORDER BY ((((+ (rt0.c1)), ((('745369279'))<=((rt0.c0))), ((vt0.c0) BETWEEN (rt0.c1) AND (t0.c52))))=(((t0.c52 IN ()), (rt0.c2 IN ()), ((vt0.c0) IS FALSE)))) DESC;
SELECT * FROM vt0 WHERE (((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND (''))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ('')));
SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((0.5545722317614399, rt0.c1, NULL, rt0.c3, rt0.c0))>((rt0.c0, rt0.c0, rt0.c3, 'kD', NULL)))))) ORDER BY -1082959538;
SELECT SUM(count) FROM (SELECT (((NOT ((((0.5545722317614399, rt0.c1, NULL, rt0.c3, rt0.c0))>((rt0.c0, rt0.c0, rt0.c3, 'kD', NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY -1082959538);
SELECT ALL * FROM t0, rt0 WHERE ((NOT ((((0.5545722317614399, rt0.c1, NULL, rt0.c3, rt0.c0))>((rt0.c0, rt0.c0, rt0.c3, 'kD', NULL)))))) ORDER BY -1082959538;
SELECT SUM(count) FROM (SELECT (((NOT ((((0.5545722317614399, rt0.c1, NULL, rt0.c3, rt0.c0))>((rt0.c0, rt0.c0, rt0.c3, 'kD', NULL)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY -1082959538);
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 END))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)*(rt0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c52 END)));
SELECT * FROM vt0, t0 WHERE (((t0.c52 COLLATE NOCASE) NOT NULL)) ORDER BY -1.341876513E9 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY -1.341876513E9 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((t0.c52 COLLATE NOCASE) NOT NULL)) ORDER BY -1.341876513E9 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY -1.341876513E9 COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((t0.c52 COLLATE NOCASE) NOT NULL)) ORDER BY -1.341876513E9 COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (MIN((rt0.c3 IN ()), (+ (rt0.c2)))) ORDER BY (NOT (rt0.c2)) DESC, ((((((rt0.c1)%(vt0.c0)))OR(((rt0.c3)OR(rt0.c2)))))OR(MAX(t0.c52, rt0.c3, vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((MIN((rt0.c3 IN ()), (+ (rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (rt0.c2)) DESC, ((((((rt0.c1)%(vt0.c0)))OR(((rt0.c3)OR(rt0.c2)))))OR(MAX(t0.c52, rt0.c3, vt0.c0, rt0.c0))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (MIN((rt0.c3 IN ()), (+ (rt0.c2)))) ORDER BY (NOT (rt0.c2)) DESC, ((((((rt0.c1)%(vt0.c0)))OR(((rt0.c3)OR(rt0.c2)))))OR(MAX(t0.c52, rt0.c3, vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((MIN((rt0.c3 IN ()), (+ (rt0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (NOT (rt0.c2)) DESC, ((((((rt0.c1)%(vt0.c0)))OR(((rt0.c3)OR(rt0.c2)))))OR(MAX(t0.c52, rt0.c3, vt0.c0, rt0.c0))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (MIN((rt0.c3 IN ()), (+ (rt0.c2)))) ORDER BY (NOT (rt0.c2)) DESC, ((((((rt0.c1)%(vt0.c0)))OR(((rt0.c3)OR(rt0.c2)))))OR(MAX(t0.c52, rt0.c3, vt0.c0, rt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE DATETIME(vt0.c0, rt0.c0, '689091282')  WHEN STRFTIME(vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0) THEN rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE DATETIME(vt0.c0, rt0.c0, '689091282')  WHEN STRFTIME(vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0) THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE DATETIME(vt0.c0, rt0.c0, '689091282')  WHEN STRFTIME(vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0) THEN rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE DATETIME(vt0.c0, rt0.c0, '689091282')  WHEN STRFTIME(vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0) THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (CASE DATETIME(vt0.c0, rt0.c0, '689091282')  WHEN STRFTIME(vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0) THEN rt0.c3 COLLATE NOCASE END);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY) ORDER BY -578877461 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY -578877461 COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY) ORDER BY -578877461 COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY -578877461 COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)OR(((((vt0.c0)AND(t0.c52)))OR(t0.c52))))) ORDER BY -1.725090037E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((((vt0.c0)AND(t0.c52)))OR(t0.c52))))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.725090037E9 DESC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)OR(((((vt0.c0)AND(t0.c52)))OR(t0.c52))))) ORDER BY -1.725090037E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(((((vt0.c0)AND(t0.c52)))OR(t0.c52))))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.725090037E9 DESC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0)OR(((((vt0.c0)AND(t0.c52)))OR(t0.c52))))) ORDER BY -1.725090037E9 DESC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c52)||(rt0.c1))) NOTNULL) LEFT OUTER JOIN rt0 ON CHAR((((rt0.c2, rt0.c1, 'HoIi<Y*!,')) NOT BETWEEN ((rt0.c2, '-1545389069', rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))), t0.c52 COLLATE BINARY, CAST(t0.c52 AS REAL)) WHERE ('160669636' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('160669636' COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c52)||(rt0.c1))) NOTNULL) LEFT OUTER JOIN rt0 ON CHAR((((rt0.c2, rt0.c1, 'HoIi<Y*!,')) NOT BETWEEN ((rt0.c2, '-1545389069', rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))), t0.c52 COLLATE BINARY, CAST(t0.c52 AS REAL)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c52)||(rt0.c1))) NOTNULL) LEFT OUTER JOIN rt0 ON CHAR((((rt0.c2, rt0.c1, 'HoIi<Y*!,')) NOT BETWEEN ((rt0.c2, '-1545389069', rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))), t0.c52 COLLATE BINARY, CAST(t0.c52 AS REAL)) WHERE ('160669636' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('160669636' COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c52)||(rt0.c1))) NOTNULL) LEFT OUTER JOIN rt0 ON CHAR((((rt0.c2, rt0.c1, 'HoIi<Y*!,')) NOT BETWEEN ((rt0.c2, '-1545389069', rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))), t0.c52 COLLATE BINARY, CAST(t0.c52 AS REAL)));
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c3 END))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c3 END))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c0  WHEN rt0.c0 THEN x'' ELSE rt0.c3 END))) ORDER BY rt0.c3  NULLS FIRST;
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(t0.c52)))AND(rt0.c0)))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(t0.c52)))AND(rt0.c0)))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(t0.c52)))AND(rt0.c0)))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(t0.c52)))AND(rt0.c0)))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN rt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((((rt0.c0)OR(t0.c52)))AND(rt0.c0)))))AND(((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN (vt0.c0)), t0.c52, ((vt0.c0)+(t0.c52))))<=((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE vt0.c0 END, ((t0.c52) NOT NULL), ((t0.c52)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0)), t0.c52, ((vt0.c0)+(t0.c52))))<=((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE vt0.c0 END, ((t0.c52) NOT NULL), ((t0.c52)%(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN (vt0.c0)), t0.c52, ((vt0.c0)+(t0.c52))))<=((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE vt0.c0 END, ((t0.c52) NOT NULL), ((t0.c52)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN (vt0.c0)), t0.c52, ((vt0.c0)+(t0.c52))))<=((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE vt0.c0 END, ((t0.c52) NOT NULL), ((t0.c52)%(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0 IN (vt0.c0)), t0.c52, ((vt0.c0)+(t0.c52))))<=((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE vt0.c0 END, ((t0.c52) NOT NULL), ((t0.c52)%(vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)>=(vt0.c0)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)>=(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)>=(vt0.c0)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)>=(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2)>=(vt0.c0)) COLLATE NOCASE WHERE (TYPEOF(DISTINCT CAST(rt0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=(((((NULL))<>((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))<=(((((NULL))!=((rt0.c1))))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=(((((NULL))<>((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))<=(((((NULL))!=((rt0.c1))))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE ((((rt0.c2 COLLATE NOCASE))<=(((((NULL))<>((rt0.c1)))))));
SELECT ALL COUNT(*) FROM t0 INDEXED BY i90, rt0, vt0 WHERE (COALESCE((((t0.c52))>=((rt0.c2))), 0.2618611163012897)) ORDER BY (((x'2523')GLOB(rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c52))>=((rt0.c2))), 0.2618611163012897)) IS TRUE)  as count FROM t0 INDEXED BY i90, rt0, vt0 ORDER BY (((x'2523')GLOB(rt0.c3)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i90, rt0, vt0 WHERE (COALESCE((((t0.c52))>=((rt0.c2))), 0.2618611163012897)) ORDER BY (((x'2523')GLOB(rt0.c3)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c52))>=((rt0.c2))), 0.2618611163012897)) IS TRUE)  as count FROM t0 INDEXED BY i90, rt0, vt0 ORDER BY (((x'2523')GLOB(rt0.c3)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i90, rt0, vt0 WHERE (COALESCE((((t0.c52))>=((rt0.c2))), 0.2618611163012897)) ORDER BY (((x'2523')GLOB(rt0.c3)) IN ())  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE (((((-1545389069)==(NULL)))<>(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((-1545389069)=(NULL)))<>(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID());
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE (((((-1545389069)==(NULL)))<>(NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((-1545389069)=(NULL)))<>(NULL COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID());
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE (((((-1545389069)==(NULL)))<>(NULL COLLATE RTRIM)));
SELECT * FROM t0, vt0 WHERE ('-1575449473');
SELECT SUM(count) FROM (SELECT (('-1575449473') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('-1575449473');
SELECT SUM(count) FROM (SELECT (('-1575449473') IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ('-1575449473');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c0 COLLATE BINARY  WHEN (- (vt0.c0)) THEN ((vt0.c0)>>(t0.c52)) WHEN COALESCE(t0.c52, t0.c52) THEN CAST('-1292720946' AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END WHERE (((((vt0.c0)>(t0.c52))) NOTNULL)) ORDER BY ((((vt0.c0)<<(t0.c52)))=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(t0.c52))) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c0 COLLATE BINARY  WHEN (- (vt0.c0)) THEN ((vt0.c0)>>(t0.c52)) WHEN COALESCE(t0.c52, t0.c52) THEN CAST('-1292720946' AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END ORDER BY ((((vt0.c0)<<(t0.c52)))=(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c0 COLLATE BINARY  WHEN (- (vt0.c0)) THEN ((vt0.c0)>>(t0.c52)) WHEN COALESCE(t0.c52, t0.c52) THEN CAST('-1292720946' AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END WHERE (((((vt0.c0)>(t0.c52))) NOTNULL)) ORDER BY ((((vt0.c0)<<(t0.c52)))=(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>(t0.c52))) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c0 COLLATE BINARY  WHEN (- (vt0.c0)) THEN ((vt0.c0)>>(t0.c52)) WHEN COALESCE(t0.c52, t0.c52) THEN CAST('-1292720946' AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END ORDER BY ((((vt0.c0)<<(t0.c52)))=(vt0.c0)) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON CASE vt0.c0 COLLATE BINARY  WHEN (- (vt0.c0)) THEN ((vt0.c0)>>(t0.c52)) WHEN COALESCE(t0.c52, t0.c52) THEN CAST('-1292720946' AS NUMERIC) WHEN (vt0.c0 IN ()) THEN (vt0.c0 IN ()) ELSE vt0.c0 END WHERE (((((vt0.c0)>(t0.c52))) NOTNULL)) ORDER BY ((((vt0.c0)<<(t0.c52)))=(vt0.c0)) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM)IS NOT(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)IS NOT(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM)IS NOT(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c3 COLLATE RTRIM)IS NOT(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((rt0.c3 COLLATE RTRIM)IS NOT(((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c52) NOTNULL))AND((+ (t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))))AND((('1611193709') NOT BETWEEN (NULL) AND (t0.c52)))))OR(((((((((t0.c52)OR(t0.c52)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52))))) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(NULL)))=(((t0.c52)|(t0.c52)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52) NOTNULL))AND((+ (t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))))AND((('1611193709') NOT BETWEEN (NULL) AND (t0.c52)))))OR(((((((((t0.c52)OR(t0.c52)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)AND(t0.c52)))AND(NULL)))==(((t0.c52)|(t0.c52)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c52) NOTNULL))AND((+ (t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))))AND((('1611193709') NOT BETWEEN (NULL) AND (t0.c52)))))OR(((((((((t0.c52)OR(t0.c52)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52))))) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(NULL)))=(((t0.c52)|(t0.c52)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52) NOTNULL))AND((+ (t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))))AND((('1611193709') NOT BETWEEN (NULL) AND (t0.c52)))))OR(((((((((t0.c52)OR(t0.c52)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)AND(t0.c52)))AND(NULL)))==(((t0.c52)|(t0.c52)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c52) NOTNULL))AND((+ (t0.c52)))))AND(CAST(t0.c52 AS NUMERIC))))AND((('1611193709') NOT BETWEEN (NULL) AND (t0.c52)))))OR(((((((((t0.c52)OR(t0.c52)))AND(t0.c52)))OR(t0.c52)))AND(t0.c52))))) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(NULL)))=(((t0.c52)|(t0.c52)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)<=(x'')) IN ())) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR((rt0.c3 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c2, rt0.c2, rt0.c1))<((vt0.c0, rt0.c1, rt0.c3))))))OR(TRIM(DISTINCT vt0.c0, rt0.c3)))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) IS FALSE)  NULLS LAST, (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c1)<<(rt0.c3)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(x'')) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR((rt0.c3 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c2, rt0.c2, rt0.c1))<((vt0.c0, rt0.c1, rt0.c3))))))OR(TRIM(DISTINCT vt0.c0, rt0.c3)))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) IS FALSE)  NULLS LAST, (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c1)<<(rt0.c3)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)<=(x'')) IN ())) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR((rt0.c3 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c2, rt0.c2, rt0.c1))<((vt0.c0, rt0.c1, rt0.c3))))))OR(TRIM(DISTINCT vt0.c0, rt0.c3)))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) IS FALSE)  NULLS LAST, (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c1)<<(rt0.c3)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<=(x'')) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR((rt0.c3 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c2, rt0.c2, rt0.c1))<((vt0.c0, rt0.c1, rt0.c3))))))OR(TRIM(DISTINCT vt0.c0, rt0.c3)))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) IS FALSE)  NULLS LAST, (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c1)<<(rt0.c3)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3)<=(x'')) IN ())) ORDER BY ((((((((LIKELY(DISTINCT rt0.c2))OR((rt0.c3 IN ()))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((((rt0.c2, rt0.c2, rt0.c1))<((vt0.c0, rt0.c1, rt0.c3))))))OR(TRIM(DISTINCT vt0.c0, rt0.c3)))  NULLS FIRST, ((rt0.c3 COLLATE RTRIM) IS FALSE)  NULLS LAST, (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)) IN (((rt0.c1)<<(rt0.c3)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c52 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c52 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c52 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c52 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CASE WHEN t0.c52 THEN vt0.c0 END COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'g!?㯳f' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 'g!?㯳f' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'g!?㯳f' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 'g!?㯳f' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(vt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 'g!?㯳f' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) NOTNULL))))AND(vt0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1336260901'))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1336260901'))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1336260901'))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1336260901'))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1336260901'))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT NULL))<((+ (vt0.c0))))) ORDER BY (((NOT (rt0.c2)))+(LIKELIHOOD(rt0.c0, 0.5036145182746598))), CAST((NOT ('133129364')) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))<((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c2)))+(LIKELIHOOD(rt0.c0, 0.5036145182746598))), CAST((NOT ('133129364')) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT NULL))<((+ (vt0.c0))))) ORDER BY (((NOT (rt0.c2)))+(LIKELIHOOD(rt0.c0, 0.5036145182746598))), CAST((NOT ('133129364')) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL))<((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c2)))+(LIKELIHOOD(rt0.c0, 0.5036145182746598))), CAST((NOT ('133129364')) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT NULL))<((+ (vt0.c0))))) ORDER BY (((NOT (rt0.c2)))+(LIKELIHOOD(rt0.c0, 0.5036145182746598))), CAST((NOT ('133129364')) AS BLOB);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((rt0.c3, rt0.c1, rt0.c0))>((vt0.c0, t0.c52, rt0.c2))))%(((rt0.c1)/(t0.c52))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c0))>((vt0.c0, t0.c52, rt0.c2))))%(((rt0.c1)/(t0.c52))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((rt0.c3, rt0.c1, rt0.c0))>((vt0.c0, t0.c52, rt0.c2))))%(((rt0.c1)/(t0.c52))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c1, rt0.c0))>((vt0.c0, t0.c52, rt0.c2))))%(((rt0.c1)/(t0.c52))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 NATURAL JOIN t0 WHERE ((((((rt0.c3, rt0.c1, rt0.c0))>((vt0.c0, t0.c52, rt0.c2))))%(((rt0.c1)/(t0.c52))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN ('3&[Lwl(F婲') AND (t0.c52)))AND(CAST(t0.c52 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('3&[Lwl(F婲') AND (t0.c52)))AND(CAST(t0.c52 AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN ('3&[Lwl(F婲') AND (t0.c52)))AND(CAST(t0.c52 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('3&[Lwl(F婲') AND (t0.c52)))AND(CAST(t0.c52 AS REAL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN ('3&[Lwl(F婲') AND (t0.c52)))AND(CAST(t0.c52 AS REAL))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((TYPEOF(rt0.c0)) IS TRUE)) ORDER BY (('-2011665203') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (('-2011665203') NOTNULL) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((TYPEOF(rt0.c0)) IS TRUE)) ORDER BY (('-2011665203') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY (('-2011665203') NOTNULL) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (((TYPEOF(rt0.c0)) IS TRUE)) ORDER BY (('-2011665203') NOTNULL) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)%(vt0.c0)) AS REAL) CROSS JOIN t0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (vt0.c0) ORDER BY (LIKELY(rt0.c2) IN (UNICODE(rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)%(vt0.c0)) AS REAL) CROSS JOIN t0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY (LIKELY(rt0.c2) IN (UNICODE(rt0.c3)))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)%(vt0.c0)) AS REAL) CROSS JOIN t0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (vt0.c0) ORDER BY (LIKELY(rt0.c2) IN (UNICODE(rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)%(vt0.c0)) AS REAL) CROSS JOIN t0 ON (((vt0.c0) NOTNULL) IN ()) ORDER BY (LIKELY(rt0.c2) IN (UNICODE(rt0.c3)))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CAST(((rt0.c0)%(vt0.c0)) AS REAL) CROSS JOIN t0 ON (((vt0.c0) NOTNULL) IN ()) WHERE (vt0.c0) ORDER BY (LIKELY(rt0.c2) IN (UNICODE(rt0.c3)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('{I' COLLATE NOCASE) ORDER BY ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) COLLATE BINARY  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (('-1137636864')/(rt0.c0)) THEN ((rt0.c3)+(t0.c52)) WHEN (- (rt0.c3)) THEN (((vt0.c0))<>((vt0.c0))) WHEN CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 ELSE vt0.c0 END THEN ((0.47682738005499314)>(t0.c52)) ELSE rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('{I' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) COLLATE BINARY  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (('-1137636864')/(rt0.c0)) THEN ((rt0.c3)+(t0.c52)) WHEN (- (rt0.c3)) THEN (((vt0.c0))!=((vt0.c0))) WHEN CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 ELSE vt0.c0 END THEN ((0.47682738005499314)>(t0.c52)) ELSE rt0.c3 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('{I' COLLATE NOCASE) ORDER BY ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) COLLATE BINARY  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (('-1137636864')/(rt0.c0)) THEN ((rt0.c3)+(t0.c52)) WHEN (- (rt0.c3)) THEN (((vt0.c0))<>((vt0.c0))) WHEN CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 ELSE vt0.c0 END THEN ((0.47682738005499314)>(t0.c52)) ELSE rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('{I' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) COLLATE BINARY  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (('-1137636864')/(rt0.c0)) THEN ((rt0.c3)+(t0.c52)) WHEN (- (rt0.c3)) THEN (((vt0.c0))!=((vt0.c0))) WHEN CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 ELSE vt0.c0 END THEN ((0.47682738005499314)>(t0.c52)) ELSE rt0.c3 COLLATE RTRIM END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('{I' COLLATE NOCASE) ORDER BY ((((t0.c52)OR(vt0.c0)))AND(t0.c52)) COLLATE BINARY  NULLS LAST, CASE CAST(rt0.c3 AS REAL)  WHEN (('-1137636864')/(rt0.c0)) THEN ((rt0.c3)+(t0.c52)) WHEN (- (rt0.c3)) THEN (((vt0.c0))<>((vt0.c0))) WHEN CASE rt0.c2  WHEN t0.c52 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 ELSE vt0.c0 END THEN ((0.47682738005499314)>(t0.c52)) ELSE rt0.c3 COLLATE RTRIM END DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN ((vt0.c0)=('	t''')) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN ((vt0.c0)=('	t''')) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN ((vt0.c0)=('	t''')) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN ((vt0.c0)=('	t''')) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0))  WHEN ((vt0.c0)=('	t''')) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE rt0.c0 END);
SELECT ALL * FROM t0 WHERE (0.5030669011977613);
SELECT SUM(count) FROM (SELECT ((0.5030669011977613) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.5030669011977613);
SELECT SUM(count) FROM (SELECT ((0.5030669011977613) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.5030669011977613);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0, rt0 WHERE (CAST('' COLLATE BINARY AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST('' COLLATE BINARY AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST('' COLLATE BINARY AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 0.03947136357553871, (NOT (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.03947136357553871, (NOT (((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 0.03947136357553871, (NOT (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.03947136357553871, (NOT (((vt0.c0)<(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY 0.03947136357553871, (NOT (((vt0.c0)<(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND((((rt0.c0))>=((rt0.c2))))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND((((rt0.c0))>=((rt0.c2))))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND((((rt0.c0))>=((rt0.c2))))))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND((((rt0.c0))>=((rt0.c2))))))AND(vt0.c0))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))AND((((rt0.c0))>=((rt0.c2))))))AND(vt0.c0)));
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN LOWER(DISTINCT vt0.c0) THEN (+ (vt0.c0)) END) ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN LOWER(DISTINCT vt0.c0) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN LOWER(DISTINCT vt0.c0) THEN (+ (vt0.c0)) END) ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN LOWER(DISTINCT vt0.c0) THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN LOWER(DISTINCT vt0.c0) THEN (+ (vt0.c0)) END) ORDER BY ((vt0.c0)IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2))) THEN rt0.c3 END) ORDER BY 1.60669636E8, ((x'') NOTNULL), ((0xffffffffb264d49a)LIKE(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2))) THEN rt0.c3 END) IS TRUE)  as count FROM rt0, t0 ORDER BY 1.60669636E8, ((x'') NOTNULL), ((0Xffffffffb264d49a)LIKE(t0.c52)));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2))) THEN rt0.c3 END) ORDER BY 1.60669636E8, ((x'') NOTNULL), ((0xffffffffb264d49a)LIKE(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2))) THEN rt0.c3 END) IS TRUE)  as count FROM rt0, t0 ORDER BY 1.60669636E8, ((x'') NOTNULL), ((0Xffffffffb264d49a)LIKE(t0.c52)));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2))) THEN rt0.c3 END) ORDER BY 1.60669636E8, ((x'') NOTNULL), ((0xffffffffb264d49a)LIKE(t0.c52));
SELECT * FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0)OR(rt0.c2)) ELSE '0.9887862394523309' END) ORDER BY ((((rt0.c2 IN (rt0.c3, rt0.c0))))<>(((+ (rt0.c0))))) DESC, ((rt0.c1 IN ('-1091469273')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0)OR(rt0.c2)) ELSE '0.9887862394523309' END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) ORDER BY ((((rt0.c2 IN (rt0.c3, rt0.c0))))!=(((+ (rt0.c0))))) DESC, ((rt0.c1 IN ('-1091469273')) IN ())  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0)OR(rt0.c2)) ELSE '0.9887862394523309' END) ORDER BY ((((rt0.c2 IN (rt0.c3, rt0.c0))))<>(((+ (rt0.c0))))) DESC, ((rt0.c1 IN ('-1091469273')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0)OR(rt0.c2)) ELSE '0.9887862394523309' END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) ORDER BY ((((rt0.c2 IN (rt0.c3, rt0.c0))))!=(((+ (rt0.c0))))) DESC, ((rt0.c1 IN ('-1091469273')) IN ())  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c0)OR(rt0.c2)) ELSE '0.9887862394523309' END) ORDER BY ((((rt0.c2 IN (rt0.c3, rt0.c0))))<>(((+ (rt0.c0))))) DESC, ((rt0.c1 IN ('-1091469273')) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c0))) THEN (((vt0.c0))<>((rt0.c0))) WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (0.4691782382553703)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)+(rt0.c0)) ELSE ((rt0.c0)<(x'')) END WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN ('996246142') AND (rt0.c3))))) ORDER BY (((((- (rt0.c2)))AND(((rt0.c3) ISNULL))))AND(((x'')!=(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN ('996246142') AND (rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c0))) THEN (((vt0.c0))<>((rt0.c0))) WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (0.4691782382553703)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)+(rt0.c0)) ELSE ((rt0.c0)<(x'')) END ORDER BY (((((- (rt0.c2)))AND(((rt0.c3) ISNULL))))AND(((x'')!=(rt0.c2)))) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c0))) THEN (((vt0.c0))<>((rt0.c0))) WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (0.4691782382553703)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)+(rt0.c0)) ELSE ((rt0.c0)<(x'')) END WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN ('996246142') AND (rt0.c3))))) ORDER BY (((((- (rt0.c2)))AND(((rt0.c3) ISNULL))))AND(((x'')!=(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN ('996246142') AND (rt0.c3))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c0))) THEN (((vt0.c0))<>((rt0.c0))) WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (0.4691782382553703)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)+(rt0.c0)) ELSE ((rt0.c0)<(x'')) END ORDER BY (((((- (rt0.c2)))AND(((rt0.c3) ISNULL))))AND(((x'')!=(rt0.c2)))) DESC);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CASE CAST(rt0.c3 AS REAL)  WHEN (((rt0.c3, vt0.c0, rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c0))) THEN (((vt0.c0))<>((rt0.c0))) WHEN ((vt0.c0) BETWEEN (rt0.c2) AND (0.4691782382553703)) THEN CAST(vt0.c0 AS TEXT) WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c2)+(rt0.c0)) ELSE ((rt0.c0)<(x'')) END WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2))) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN ('996246142') AND (rt0.c3))))) ORDER BY (((((- (rt0.c2)))AND(((rt0.c3) ISNULL))))AND(((x'')!=(rt0.c2)))) DESC;
SELECT * FROM rt0 WHERE (TIME(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)), (- ('-o')), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c0, 0xc73b41))), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (0X25b875bb) AND ('-2125736585')))) ORDER BY CASE rt0.c3  WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)||(NULL)) THEN TRIM(rt0.c3, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)), (- ('-o')), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c0, 0xc73b41))), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (0X25b875bb) AND ('-2125736585')))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)||(NULL)) THEN TRIM(rt0.c3, rt0.c1) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (TIME(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)), (- ('-o')), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c0, 0xc73b41))), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (0X25b875bb) AND ('-2125736585')))) ORDER BY CASE rt0.c3  WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)||(NULL)) THEN TRIM(rt0.c3, rt0.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)), (- ('-o')), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c0, 0xc73b41))), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (0X25b875bb) AND ('-2125736585')))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)||(NULL)) THEN TRIM(rt0.c3, rt0.c1) END  NULLS FIRST);
SELECT * FROM rt0 WHERE (TIME(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c1)), (- ('-o')), (((rt0.c2, rt0.c3, rt0.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c3, rt0.c0, 0xc73b41))), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (0X25b875bb) AND ('-2125736585')))) ORDER BY CASE rt0.c3  WHEN rt0.c3 COLLATE RTRIM THEN rt0.c3 WHEN ((rt0.c2)==(rt0.c2)) THEN rt0.c0 WHEN ((rt0.c2)||(NULL)) THEN TRIM(rt0.c3, rt0.c1) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (json_array_length(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS INTEGER)));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)) IN ()) WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)) IN ()) WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)) IN ()) WHERE ((+ (NULL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)GLOB(((vt0.c0) BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)GLOB(((vt0.c0) BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2)GLOB(((vt0.c0) BETWEEN (rt0.c2) AND (NULL)))));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((((((((((((((rt0.c3))<>((vt0.c0))))OR((+ (rt0.c3)))))OR(((rt0.c0)%(t0.c52)))))AND(CASE vt0.c0  WHEN t0.c52 THEN rt0.c2 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)))AND(((vt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (t0.c52) AND (rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (((((t0.c52) ISNULL))>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c52) ISNULL))>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((((((((((((((rt0.c3))!=((vt0.c0))))OR((+ (rt0.c3)))))OR(((rt0.c0)%(t0.c52)))))AND(CASE vt0.c0  WHEN t0.c52 THEN rt0.c2 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)))AND(((vt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (t0.c52) AND (rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((((((((((((((rt0.c3))<>((vt0.c0))))OR((+ (rt0.c3)))))OR(((rt0.c0)%(t0.c52)))))AND(CASE vt0.c0  WHEN t0.c52 THEN rt0.c2 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)))AND(((vt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (t0.c52) AND (rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (((((t0.c52) ISNULL))>(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((t0.c52) ISNULL))>(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((((((((((((((rt0.c3))!=((vt0.c0))))OR((+ (rt0.c3)))))OR(((rt0.c0)%(t0.c52)))))AND(CASE vt0.c0  WHEN t0.c52 THEN rt0.c2 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)))AND(((vt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (t0.c52) AND (rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN t0 ON (((((((((((((((rt0.c3))<>((vt0.c0))))OR((+ (rt0.c3)))))OR(((rt0.c0)%(t0.c52)))))AND(CASE vt0.c0  WHEN t0.c52 THEN rt0.c2 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 END)))AND(((vt0.c0) NOTNULL))))AND(((rt0.c1) BETWEEN (t0.c52) AND (rt0.c1)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (((((t0.c52) ISNULL))>(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM t0 WHERE ((((ROUND(t0.c52, t0.c52), CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '-1526041041' ELSE t0.c52 END, CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END))>=(((+ (t0.c52)), x'', (t0.c52 IN ())))));
SELECT SUM(count) FROM (SELECT (((((ROUND(t0.c52, t0.c52), CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '-1526041041' ELSE t0.c52 END, CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END))>=(((+ (t0.c52)), x'', (t0.c52 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((ROUND(t0.c52, t0.c52), CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '-1526041041' ELSE t0.c52 END, CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END))>=(((+ (t0.c52)), x'', (t0.c52 IN ())))));
SELECT SUM(count) FROM (SELECT (((((ROUND(t0.c52, t0.c52), CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '-1526041041' ELSE t0.c52 END, CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END))>=(((+ (t0.c52)), x'', (t0.c52 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((ROUND(t0.c52, t0.c52), CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '-1526041041' ELSE t0.c52 END, CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END))>=(((+ (t0.c52)), x'', (t0.c52 IN ())))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c0 IN (t0.c52))) BETWEEN (((t0.c52) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0)) WHERE ((CASE '0.3397276201778644'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c52 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 ELSE x'' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '0.3397276201778644'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c52 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 ELSE x'' END IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c0 IN (t0.c52))) BETWEEN (((t0.c52) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c0 IN (t0.c52))) BETWEEN (((t0.c52) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0)) WHERE ((CASE '0.3397276201778644'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c52 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 ELSE x'' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE '0.3397276201778644'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c52 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 ELSE x'' END IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((rt0.c0 IN (t0.c52))) BETWEEN (((t0.c52) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((rt0.c0 IN (t0.c52))) BETWEEN (((t0.c52) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0)) WHERE ((CASE '0.3397276201778644'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN t0.c52 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN t0.c52 ELSE x'' END IN ()));
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c0)OR(t0.c52)))AND(vt0.c0)))AND(t0.c52)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)OR(t0.c52)))AND(vt0.c0)))AND(t0.c52)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c0)OR(t0.c52)))AND(vt0.c0)))AND(t0.c52)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)OR(t0.c52)))AND(vt0.c0)))AND(t0.c52)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ((((((((((rt0.c0)OR(t0.c52)))AND(vt0.c0)))AND(t0.c52)))AND(rt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))&((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))&((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))&((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))OR(x'')))AND(t0.c52)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c52)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))OR(x'')))AND(t0.c52)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c52)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))OR(x'')))AND(t0.c52)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c52)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))OR(x'')))AND(t0.c52)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c52)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (rt0.c0) ORDER BY ((((((((((((rt0.c0)AND(vt0.c0)))OR(x'')))AND(t0.c52)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c52)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS BLOB) WHERE ((((vt0.c0 IN (rt0.c2)))*(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2)))*(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS BLOB) WHERE ((((vt0.c0 IN (rt0.c2)))*(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c2)))*(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS BLOB) WHERE ((((vt0.c0 IN (rt0.c2)))*(((rt0.c2) IS TRUE))));
SELECT * FROM rt0 WHERE (((((LIKE(NULL, rt0.c2, '1'))OR(((rt0.c0)&(rt0.c2)))))OR((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((LIKE(NULL, rt0.c2, '1'))OR(((rt0.c0)&(rt0.c2)))))OR((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((LIKE(NULL, rt0.c2, '1'))OR(((rt0.c0)&(rt0.c2)))))OR((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((LIKE(NULL, rt0.c2, '1'))OR(((rt0.c0)&(rt0.c2)))))OR((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((LIKE(NULL, rt0.c2, '1'))OR(((rt0.c0)&(rt0.c2)))))OR((NOT (rt0.c3)))));
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.6035918120653014 WHERE ((- ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.6035918120653014);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.6035918120653014 WHERE ((- ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.6035918120653014);
SELECT ALL * FROM rt0, t0 FULL OUTER JOIN vt0 ON 0.6035918120653014 WHERE ((- ((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((((((((((((x''))==((rt0.c3))))AND(((((rt0.c1)AND(rt0.c3)))OR(-2023369180)))))OR(CAST(vt0.c0 AS TEXT))))OR(((((0.12203798813033473)OR(rt0.c3)))AND(vt0.c0)))))AND((- (t0.c52)))))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((((((((((((((x''))==((rt0.c3))))AND(((((rt0.c1)AND(rt0.c3)))OR(-2023369180)))))OR(CAST(vt0.c0 AS TEXT))))OR(((((0.12203798813033473)OR(rt0.c3)))AND(vt0.c0)))))AND((- (t0.c52)))))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((((((((((((x''))==((rt0.c3))))AND(((((rt0.c1)AND(rt0.c3)))OR(-2023369180)))))OR(CAST(vt0.c0 AS TEXT))))OR(((((0.12203798813033473)OR(rt0.c3)))AND(vt0.c0)))))AND((- (t0.c52)))))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t0 ON (((((((((((((((x''))==((rt0.c3))))AND(((((rt0.c1)AND(rt0.c3)))OR(-2023369180)))))OR(CAST(vt0.c0 AS TEXT))))OR(((((0.12203798813033473)OR(rt0.c3)))AND(vt0.c0)))))AND((- (t0.c52)))))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON (((((((((((((((x''))==((rt0.c3))))AND(((((rt0.c1)AND(rt0.c3)))OR(-2023369180)))))OR(CAST(vt0.c0 AS TEXT))))OR(((((0.12203798813033473)OR(rt0.c3)))AND(vt0.c0)))))AND((- (t0.c52)))))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (rt0.c1);
SELECT * FROM t0 WHERE (NULL) ORDER BY (~ (t0.c52)) DESC  NULLS LAST, (((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND (((t0.c52 IN ())))) ASC  NULLS LAST, (('351206283')IS(json_quote(t0.c52))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c52)) DESC  NULLS LAST, (((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND (((t0.c52 IN ())))) ASC  NULLS LAST, (('351206283')IS(json_quote(t0.c52))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (NULL) ORDER BY (~ (t0.c52)) DESC  NULLS LAST, (((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND (((t0.c52 IN ())))) ASC  NULLS LAST, (('351206283')IS(json_quote(t0.c52))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c52)) DESC  NULLS LAST, (((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND (((t0.c52 IN ())))) ASC  NULLS LAST, (('351206283')IS(json_quote(t0.c52))) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (NULL) ORDER BY (~ (t0.c52)) DESC  NULLS LAST, (((t0.c52)) NOT BETWEEN ((t0.c52 COLLATE RTRIM)) AND (((t0.c52 IN ())))) ASC  NULLS LAST, (('351206283')IS(json_quote(t0.c52))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c0)<>((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)!=((- (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c0)<>((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)!=((- (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c0)<>((- (rt0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(vt0.c0, t0.c52)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, t0.c52)) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(vt0.c0, t0.c52)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, t0.c52)) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((NULLIF(vt0.c0, t0.c52)) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE ('1128851025') ORDER BY ((rt0.c1) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('1128851025') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1) NOTNULL) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ('1128851025') ORDER BY ((rt0.c1) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('1128851025') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1) NOTNULL) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ('1128851025') ORDER BY ((rt0.c1) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c52))=((t0.c52))))<>(((t0.c52)&(t0.c52))))) ORDER BY t0.c52 DESC  NULLS FIRST, UNLIKELY(DISTINCT CASE t0.c52  WHEN t0.c52 THEN t0.c52 END);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52))=((t0.c52))))!=(((t0.c52)&(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY t0.c52 DESC  NULLS FIRST, UNLIKELY(DISTINCT CASE t0.c52  WHEN t0.c52 THEN t0.c52 END));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c52))=((t0.c52))))<>(((t0.c52)&(t0.c52))))) ORDER BY t0.c52 DESC  NULLS FIRST, UNLIKELY(DISTINCT CASE t0.c52  WHEN t0.c52 THEN t0.c52 END);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c52))=((t0.c52))))!=(((t0.c52)&(t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY t0.c52 DESC  NULLS FIRST, UNLIKELY(DISTINCT CASE t0.c52  WHEN t0.c52 THEN t0.c52 END));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c52))=((t0.c52))))<>(((t0.c52)&(t0.c52))))) ORDER BY t0.c52 DESC  NULLS FIRST, UNLIKELY(DISTINCT CASE t0.c52  WHEN t0.c52 THEN t0.c52 END);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN '}' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)+(CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN '}' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN '}' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)+(CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN '}' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0, t0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)+(CASE NULL  WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN '}' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (0.4704681103768914 COLLATE RTRIM) AND (((rt0.c2) NOT NULL)))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (0.4704681103768914 COLLATE RTRIM) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (0.4704681103768914 COLLATE RTRIM) AND (((rt0.c2) NOT NULL)))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (0.4704681103768914 COLLATE RTRIM) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (((((((((((rt0.c0)AND(rt0.c3)))AND(NULL)))AND(rt0.c1)))AND(rt0.c3))) NOT BETWEEN (0.4704681103768914 COLLATE RTRIM) AND (((rt0.c2) NOT NULL)))) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(((rt0.c0)GLOB(rt0.c1)), json_insert(rt0.c1, rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c0)GLOB(rt0.c1)), json_insert(rt0.c1, rt0.c0, rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LTRIM(((rt0.c0)GLOB(rt0.c1)), json_insert(rt0.c1, rt0.c0, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c0)GLOB(rt0.c1)), json_insert(rt0.c1, rt0.c0, rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (LIKE(vt0.c0, vt0.c0, 'i'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (LIKE(vt0.c0, vt0.c0, 'i')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (LIKE(vt0.c0, vt0.c0, 'i'))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (LIKE(vt0.c0, vt0.c0, 'i')))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN (LIKE(vt0.c0, vt0.c0, 'i'))));
SELECT * FROM vt0, t0 WHERE ((((- (t0.c52)))AND((vt0.c0 IN (t0.c52, t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c52)))AND((vt0.c0 IN (t0.c52, t0.c52))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((- (t0.c52)))AND((vt0.c0 IN (t0.c52, t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c52)))AND((vt0.c0 IN (t0.c52, t0.c52))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((- (t0.c52)))AND((vt0.c0 IN (t0.c52, t0.c52)))));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (HEX(DISTINCT vt0.c0)))) ORDER BY vt0.c0  NULLS FIRST, (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY vt0.c0  NULLS FIRST, (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (HEX(DISTINCT vt0.c0)))) ORDER BY vt0.c0  NULLS FIRST, (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY vt0.c0  NULLS FIRST, (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (HEX(DISTINCT vt0.c0)))) ORDER BY vt0.c0  NULLS FIRST, (((rt0.c3 IN (rt0.c2))) NOT BETWEEN (((rt0.c0)-(rt0.c2))) AND ((rt0.c2 IN ()))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c0 COLLATE BINARY)<<(TYPEOF(DISTINCT rt0.c0))) WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((t0.c52) BETWEEN (t0.c52) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c2)))))OR(((rt0.c0)*(rt0.c2)))))AND(((rt0.c1)OR(t0.c52))))) ORDER BY CASE TRIM(DISTINCT rt0.c3, rt0.c3)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE ((((rt0.c1)OR('0.7149790621597976')))OR(0.728536526867081)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS INTEGER))OR(((t0.c52) BETWEEN (t0.c52) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c2)))))OR(((rt0.c0)*(rt0.c2)))))AND(((rt0.c1)OR(t0.c52))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt0.c0 COLLATE BINARY)<<(TYPEOF(DISTINCT rt0.c0))) ORDER BY CASE TRIM(DISTINCT rt0.c3, rt0.c3)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE ((((rt0.c1)OR('0.7149790621597976')))OR(0.728536526867081)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c0 COLLATE BINARY)<<(TYPEOF(DISTINCT rt0.c0))) WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((t0.c52) BETWEEN (t0.c52) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c2)))))OR(((rt0.c0)*(rt0.c2)))))AND(((rt0.c1)OR(t0.c52))))) ORDER BY CASE TRIM(DISTINCT rt0.c3, rt0.c3)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE ((((rt0.c1)OR('0.7149790621597976')))OR(0.728536526867081)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS INTEGER))OR(((t0.c52) BETWEEN (t0.c52) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c2)))))OR(((rt0.c0)*(rt0.c2)))))AND(((rt0.c1)OR(t0.c52))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((rt0.c0 COLLATE BINARY)<<(TYPEOF(DISTINCT rt0.c0))) ORDER BY CASE TRIM(DISTINCT rt0.c3, rt0.c3)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE ((((rt0.c1)OR('0.7149790621597976')))OR(0.728536526867081)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((rt0.c0 COLLATE BINARY)<<(TYPEOF(DISTINCT rt0.c0))) WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((t0.c52) BETWEEN (t0.c52) AND (rt0.c3)))))AND(((rt0.c2)&(rt0.c2)))))OR(((rt0.c0)*(rt0.c2)))))AND(((rt0.c1)OR(t0.c52))))) ORDER BY CASE TRIM(DISTINCT rt0.c3, rt0.c3)  WHEN CASE rt0.c3  WHEN rt0.c0 THEN t0.c52 WHEN rt0.c3 THEN t0.c52 WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) ELSE ((((rt0.c1)OR('0.7149790621597976')))OR(0.728536526867081)) END  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (0.1538420522030325) ORDER BY ((((rt0.c3) IS FALSE))<((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST, 0.5258164286898278  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1538420522030325) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS FALSE))<((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST, 0.5258164286898278  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0.1538420522030325) ORDER BY ((((rt0.c3) IS FALSE))<((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST, 0.5258164286898278  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1538420522030325) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3) IS FALSE))<((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST, 0.5258164286898278  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (0.1538420522030325) ORDER BY ((((rt0.c3) IS FALSE))<((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST, 0.5258164286898278  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52))) ELSE CASE WHEN 0.6856211061863529 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN 'ᒰ\nYQ嬺%' END END CROSS JOIN t0 ON ((rt0.c3)!=((+ (vt0.c0)))) WHERE (CASE (((NULL, rt0.c2, rt0.c0))>=((rt0.c3, rt0.c0, rt0.c3)))  WHEN ((vt0.c0)<=(-6.4712718E7)) THEN CAST(vt0.c0 AS TEXT) END) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)==(((vt0.c0)%(rt0.c2))))  NULLS LAST, (rt0.c2 IN (NULLIF(DISTINCT rt0.c0, rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((NULL, rt0.c2, rt0.c0))>=((rt0.c3, rt0.c0, rt0.c3)))  WHEN ((vt0.c0)<=(-6.4712718E7)) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52))) ELSE CASE WHEN 0.6856211061863529 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN 'ᒰ\nYQ嬺%' END END CROSS JOIN t0 ON ((rt0.c3)<>((+ (vt0.c0)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)==(((vt0.c0)%(rt0.c2))))  NULLS LAST, (rt0.c2 IN (NULLIF(DISTINCT rt0.c0, rt0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52))) ELSE CASE WHEN 0.6856211061863529 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN 'ᒰ\nYQ嬺%' END END CROSS JOIN t0 ON ((rt0.c3)!=((+ (vt0.c0)))) WHERE (CASE (((NULL, rt0.c2, rt0.c0))>=((rt0.c3, rt0.c0, rt0.c3)))  WHEN ((vt0.c0)<=(-6.4712718E7)) THEN CAST(vt0.c0 AS TEXT) END) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)==(((vt0.c0)%(rt0.c2))))  NULLS LAST, (rt0.c2 IN (NULLIF(DISTINCT rt0.c0, rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (((NULL, rt0.c2, rt0.c0))>=((rt0.c3, rt0.c0, rt0.c3)))  WHEN ((vt0.c0)<=(-6.4712718E7)) THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN LAST_INSERT_ROWID() THEN (((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t0.c52))) ELSE CASE WHEN 0.6856211061863529 THEN t0.c52 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN 'ᒰ\nYQ嬺%' END END CROSS JOIN t0 ON ((rt0.c3)<>((+ (vt0.c0)))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)==(((vt0.c0)%(rt0.c2))))  NULLS LAST, (rt0.c2 IN (NULLIF(DISTINCT rt0.c0, rt0.c3))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)OR(rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY IFNULL(DISTINCT rt0.c0, rt0.c1) COLLATE BINARY ASC, ('' IN ()) COLLATE RTRIM ASC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN ((rt0.c0)OR(rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT rt0.c0, rt0.c1) COLLATE BINARY ASC, ('' IN ()) COLLATE RTRIM ASC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)OR(rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY IFNULL(DISTINCT rt0.c0, rt0.c1) COLLATE BINARY ASC, ('' IN ()) COLLATE RTRIM ASC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c1 IN ())  WHEN ((rt0.c0)OR(rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT rt0.c0, rt0.c1) COLLATE BINARY ASC, ('' IN ()) COLLATE RTRIM ASC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c0)OR(rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) ORDER BY IFNULL(DISTINCT rt0.c0, rt0.c1) COLLATE BINARY ASC, ('' IN ()) COLLATE RTRIM ASC, ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM vt0, rt0, t0 WHERE ((((((- (rt0.c0)))AND(UNICODE(rt0.c0))))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))AND(UNICODE(rt0.c0))))OR((- (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((((- (rt0.c0)))AND(UNICODE(rt0.c0))))OR((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))AND(UNICODE(rt0.c0))))OR((- (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT * FROM vt0, rt0, t0 WHERE ((((((- (rt0.c0)))AND(UNICODE(rt0.c0))))OR((- (rt0.c0)))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c3))<=((((rt0.c0) IS FALSE)))) WHERE (rt0.c3) ORDER BY ((((rt0.c2)<<(t0.c52)))AND(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c3))<=((((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c2)<<(t0.c52)))AND(t0.c52)));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c3))<=((((rt0.c0) IS FALSE)))) WHERE (rt0.c3) ORDER BY ((((rt0.c2)<<(t0.c52)))AND(t0.c52));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c3))<=((((rt0.c0) IS FALSE)))) ORDER BY ((((rt0.c2)<<(t0.c52)))AND(t0.c52)));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN rt0 ON (((rt0.c3))<=((((rt0.c0) IS FALSE)))) WHERE (rt0.c3) ORDER BY ((((rt0.c2)<<(t0.c52)))AND(t0.c52));
SELECT ALL * FROM t0, rt0 WHERE ((((- (rt0.c0)))OR(ABS(DISTINCT rt0.c3)))) ORDER BY ((CASE WHEN t0.c52 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN 2090168207 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c52 END) BETWEEN (((NULL)LIKE(rt0.c3))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c52)))) ASC, ((((rt0.c0)AND(t0.c52))) NOT NULL) ASC, (((rt0.c0)<(rt0.c3)) IN (rt0.c3 COLLATE RTRIM, ((t0.c52)!=('-o'))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))OR(ABS(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN t0.c52 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN 2090168207 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c52 END) BETWEEN (((NULL)LIKE(rt0.c3))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c52)))) ASC, ((((rt0.c0)AND(t0.c52))) NOT NULL) ASC, (((rt0.c0)<(rt0.c3)) IN (rt0.c3 COLLATE RTRIM, ((t0.c52)!=('-o')))));
SELECT ALL * FROM t0, rt0 WHERE ((((- (rt0.c0)))OR(ABS(DISTINCT rt0.c3)))) ORDER BY ((CASE WHEN t0.c52 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN 2090168207 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c52 END) BETWEEN (((NULL)LIKE(rt0.c3))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c52)))) ASC, ((((rt0.c0)AND(t0.c52))) NOT NULL) ASC, (((rt0.c0)<(rt0.c3)) IN (rt0.c3 COLLATE RTRIM, ((t0.c52)!=('-o'))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))OR(ABS(DISTINCT rt0.c3)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN t0.c52 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN 2090168207 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c52 END) BETWEEN (((NULL)LIKE(rt0.c3))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c52)))) ASC, ((((rt0.c0)AND(t0.c52))) NOT NULL) ASC, (((rt0.c0)<(rt0.c3)) IN (rt0.c3 COLLATE RTRIM, ((t0.c52)!=('-o')))));
SELECT ALL * FROM t0, rt0 WHERE ((((- (rt0.c0)))OR(ABS(DISTINCT rt0.c3)))) ORDER BY ((CASE WHEN t0.c52 THEN NULL WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN NULL WHEN 2090168207 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c52 END) BETWEEN (((NULL)LIKE(rt0.c3))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c52)))) ASC, ((((rt0.c0)AND(t0.c52))) NOT NULL) ASC, (((rt0.c0)<(rt0.c3)) IN (rt0.c3 COLLATE RTRIM, ((t0.c52)!=('-o'))));
SELECT * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2)))))>=((DATE(rt0.c1, t0.c52, rt0.c1, rt0.c3, rt0.c3))))) ORDER BY ((t0.c52)||(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2)))))>=((DATE(rt0.c1, t0.c52, rt0.c1, rt0.c3, rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c52)||(vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2)))))>=((DATE(rt0.c1, t0.c52, rt0.c1, rt0.c3, rt0.c3))))) ORDER BY ((t0.c52)||(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2)))))>=((DATE(rt0.c1, t0.c52, rt0.c1, rt0.c3, rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((t0.c52)||(vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, vt0, t0 WHERE (((((((rt0.c1)) NOT BETWEEN ((t0.c52)) AND ((rt0.c2)))))>=((DATE(rt0.c1, t0.c52, rt0.c1, rt0.c3, rt0.c3))))) ORDER BY ((t0.c52)||(vt0.c0)) COLLATE RTRIM;
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, rt0.c1))=((rt0.c2, vt0.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2, rt0.c2, rt0.c1))==((rt0.c2, vt0.c0, x''))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, rt0.c1))=((rt0.c2, vt0.c0, x''))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2, rt0.c2, rt0.c1))==((rt0.c2, vt0.c0, x''))) IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((rt0.c2, rt0.c2, rt0.c1))=((rt0.c2, vt0.c0, x''))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (json_quote(rt0.c0));
SELECT SUM(count) FROM (SELECT ((json_quote(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_quote(rt0.c0));
SELECT SUM(count) FROM (SELECT ((json_quote(rt0.c0)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_quote(rt0.c0));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)*((('')<<(rt0.c3))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)*((('')<<(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)*((('')<<(rt0.c3))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)*((('')<<(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((rt0.c0 COLLATE NOCASE)*((('')<<(rt0.c3))))) ORDER BY (CAST(rt0.c1 AS REAL) IN ()) ASC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 END)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 END)) AND ((NULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 END)) AND ((NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 END)) AND ((NULL)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c52 END)) AND ((NULL))));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c2))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c2))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c2))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT rt0.c2))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c2))LIKE(CASE WHEN rt0.c3 THEN rt0.c3 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN x'ad10d5ee' THEN rt0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN x'ad10d5ee' THEN rt0.c0 END) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN x'ad10d5ee' THEN rt0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN x'ad10d5ee' THEN rt0.c0 END) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((CASE WHEN x'ad10d5ee' THEN rt0.c0 END) ISNULL) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((0.9882008337333326) NOTNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((0.9882008337333326) NOTNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((0.9882008337333326) NOTNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((0.9882008337333326) NOTNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((0.9882008337333326) NOTNULL)) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) AND (((('FLzX\')OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) AND (((('FLzX\')OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) AND (((('FLzX\')OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) AND (((('FLzX\')OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) AND (((('FLzX\')OR(vt0.c0)), ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)%(rt0.c2)))AND((- (rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)%(rt0.c2)))AND((- (rt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)%(rt0.c2)))AND((- (rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)%(rt0.c2)))AND((- (rt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)%(rt0.c2)))AND((- (rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1180444579'))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1180444579'))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1180444579'))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1180444579'))) ISNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('-1180444579'))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((CASE -808507518  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c52 THEN t0.c52 WHEN x'35ea' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c52 END)/(((rt0.c2)LIKE(rt0.c1))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c1)))) DESC  NULLS LAST, (~ ((t0.c52 IN (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE -808507518  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c52 THEN t0.c52 WHEN x'35ea' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c52 END)/(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c1)))) DESC  NULLS LAST, (~ ((t0.c52 IN (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((CASE -808507518  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c52 THEN t0.c52 WHEN x'35ea' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c52 END)/(((rt0.c2)LIKE(rt0.c1))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c1)))) DESC  NULLS LAST, (~ ((t0.c52 IN (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE -808507518  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c52 THEN t0.c52 WHEN x'35ea' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c52 END)/(((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c1)))) DESC  NULLS LAST, (~ ((t0.c52 IN (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((CASE -808507518  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c52 THEN t0.c52 WHEN x'35ea' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE t0.c52 END)/(((rt0.c2)LIKE(rt0.c1))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c1)))) DESC  NULLS LAST, (~ ((t0.c52 IN (rt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)>(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)>(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)>(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c52)) NOT BETWEEN ((((vt0.c0)&(x'')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(0.3330112735526827))))));
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((vt0.c0)&(x'')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(0.3330112735526827)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c52)) NOT BETWEEN ((((vt0.c0)&(x'')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(0.3330112735526827))))));
SELECT SUM(count) FROM (SELECT (((((t0.c52)) NOT BETWEEN ((((vt0.c0)&(x'')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(0.3330112735526827)))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE ((((t0.c52)) NOT BETWEEN ((((vt0.c0)&(x'')))) AND ((((((rt0.c2)AND(rt0.c0)))OR(0.3330112735526827))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN x'' THEN (+ (vt0.c0)) END) ORDER BY ((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)==(vt0.c0))  WHEN x'' THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN x'' THEN (+ (vt0.c0)) END) ORDER BY ((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)==(vt0.c0))  WHEN x'' THEN (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN x'' THEN (+ (vt0.c0)) END) ORDER BY ((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c3)AND(vt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c3)AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c3)AND(vt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c3)AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) IN (((rt0.c3)AND(vt0.c0))))) ORDER BY CAST((+ (rt0.c0)) AS INTEGER)  NULLS FIRST, (+ (rt0.c2)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)%('-1336260901'))  WHEN (t0.c52 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (t0.c52 IN ()) END) ORDER BY (((t0.c52)) BETWEEN (((~ (vt0.c0)))) AND (((t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%('-1336260901'))  WHEN (t0.c52 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (t0.c52 IN ()) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c52)) BETWEEN (((~ (vt0.c0)))) AND (((t0.c52 IN ())))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)%('-1336260901'))  WHEN (t0.c52 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (t0.c52 IN ()) END) ORDER BY (((t0.c52)) BETWEEN (((~ (vt0.c0)))) AND (((t0.c52 IN ()))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%('-1336260901'))  WHEN (t0.c52 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (t0.c52 IN ()) END) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c52)) BETWEEN (((~ (vt0.c0)))) AND (((t0.c52 IN ())))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (CASE ((vt0.c0)%('-1336260901'))  WHEN (t0.c52 IN ()) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (t0.c52 IN ()) END) ORDER BY (((t0.c52)) BETWEEN (((~ (vt0.c0)))) AND (((t0.c52 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN (vt0.c0 IN (vt0.c0)) END);
SELECT * FROM t0, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (json_array_length(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN '_^' END) NOTNULL) WHERE (((rt0.c3)<=(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<=(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN '_^' END) NOTNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN '_^' END) NOTNULL) WHERE (((rt0.c3)<=(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)<=(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN '_^' END) NOTNULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE WHEN rt0.c2 THEN '_^' END) NOTNULL) WHERE (((rt0.c3)<=(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c3))) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR((t0.c52 IN ()))))AND(HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3 COLLATE RTRIM)OR((t0.c52 IN ()))))AND(HEX(rt0.c0))));
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c3))) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR((t0.c52 IN ()))))AND(HEX(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c3 COLLATE RTRIM)OR((t0.c52 IN ()))))AND(HEX(rt0.c0))));
SELECT ALL * FROM t0, rt0 WHERE ((+ (rt0.c3))) ORDER BY ((((rt0.c3 COLLATE RTRIM)OR((t0.c52 IN ()))))AND(HEX(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((NULL IN (rt0.c0)))IS(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((NULL IN (rt0.c0)))IS(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((NULL IN (rt0.c0)))IS(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((NULL IN (rt0.c0)))IS(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (rt0.c1) ORDER BY (((NULL IN (rt0.c0)))IS(rt0.c3 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY((- (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY((- (rt0.c0))));
SELECT ALL * FROM t0 WHERE ((((t0.c52)LIKE(t0.c52)) IN (((t0.c52) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)LIKE(t0.c52)) IN (((t0.c52) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c52)LIKE(t0.c52)) IN (((t0.c52) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)LIKE(t0.c52)) IN (((t0.c52) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c52)LIKE(t0.c52)) IN (((t0.c52) IS FALSE))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (t0.c52 IN (vt0.c0)) WHEN ((vt0.c0)IS(NULL)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((t0.c52)) AND ((vt0.c0))) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (t0.c52 IN (vt0.c0)) WHEN ((vt0.c0)IS(NULL)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((t0.c52)) AND ((vt0.c0))) ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (t0.c52 IN (vt0.c0)) WHEN ((vt0.c0)IS(NULL)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((t0.c52)) AND ((vt0.c0))) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (t0.c52 IN (vt0.c0)) WHEN ((vt0.c0)IS(NULL)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((t0.c52)) AND ((vt0.c0))) ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN vt0.c0 THEN (t0.c52 IN (vt0.c0)) WHEN ((vt0.c0)IS(NULL)) THEN (vt0.c0 IN ()) WHEN CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((t0.c52)) AND ((vt0.c0))) ELSE ((vt0.c0)%(vt0.c0)) END) ORDER BY CAST(CASE WHEN vt0.c0 THEN vt0.c0 END AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY (((((((((t0.c52 IN ()))OR((~ (t0.c52)))))OR((t0.c52 IN ()))))OR(((rt0.c0)>=(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c3)<=(rt0.c1)))>>(0.09105310047939486)) ASC  NULLS LAST, (((((rt0.c2 IN (rt0.c1)))AND('')))AND(t0.c52 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((t0.c52 IN ()))OR((~ (t0.c52)))))OR((t0.c52 IN ()))))OR(((rt0.c0)>=(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c3)<=(rt0.c1)))>>(0.09105310047939486)) ASC  NULLS LAST, (((((rt0.c2 IN (rt0.c1)))AND('')))AND(t0.c52 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY (((((((((t0.c52 IN ()))OR((~ (t0.c52)))))OR((t0.c52 IN ()))))OR(((rt0.c0)>=(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c3)<=(rt0.c1)))>>(0.09105310047939486)) ASC  NULLS LAST, (((((rt0.c2 IN (rt0.c1)))AND('')))AND(t0.c52 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((((((t0.c52 IN ()))OR((~ (t0.c52)))))OR((t0.c52 IN ()))))OR(((rt0.c0)>=(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c3)<=(rt0.c1)))>>(0.09105310047939486)) ASC  NULLS LAST, (((((rt0.c2 IN (rt0.c1)))AND('')))AND(t0.c52 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))) IS TRUE)) ORDER BY (((((((((t0.c52 IN ()))OR((~ (t0.c52)))))OR((t0.c52 IN ()))))OR(((rt0.c0)>=(rt0.c2)))))AND(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))) DESC  NULLS FIRST, ((((rt0.c3)<=(rt0.c1)))>>(0.09105310047939486)) ASC  NULLS LAST, (((((rt0.c2 IN (rt0.c1)))AND('')))AND(t0.c52 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)AND(NULL)))AND(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))) ORDER BY CASE LIKELIHOOD(DISTINCT t0.c52, 0.1864774096489985)  WHEN CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END THEN (~ (t0.c52)) END ASC, ((((t0.c52)AND(t0.c52))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)AND(NULL)))AND(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY CASE LIKELIHOOD(DISTINCT t0.c52, 0.1864774096489985)  WHEN CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END THEN (~ (t0.c52)) END ASC, ((((t0.c52)AND(t0.c52))) IS FALSE) ASC);
SELECT * FROM t0 WHERE (((((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)AND(NULL)))AND(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))) ORDER BY CASE LIKELIHOOD(DISTINCT t0.c52, 0.1864774096489985)  WHEN CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END THEN (~ (t0.c52)) END ASC, ((((t0.c52)AND(t0.c52))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)AND(NULL)))AND(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))) IS TRUE)  as count FROM t0 ORDER BY CASE LIKELIHOOD(DISTINCT t0.c52, 0.1864774096489985)  WHEN CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END THEN (~ (t0.c52)) END ASC, ((((t0.c52)AND(t0.c52))) IS FALSE) ASC);
SELECT * FROM t0 WHERE (((((CASE t0.c52  WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)AND(NULL)))AND(((t0.c52) BETWEEN (t0.c52) AND (t0.c52))))) ORDER BY CASE LIKELIHOOD(DISTINCT t0.c52, 0.1864774096489985)  WHEN CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END THEN (~ (t0.c52)) END ASC, ((((t0.c52)AND(t0.c52))) IS FALSE) ASC;
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c52 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c52 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c52 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c52 COLLATE BINARY)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(t0.c52 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (t0.c52) AND (' P-{jh')) THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0 ORDER BY CASE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (t0.c52) AND (' P-{jh')) THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (t0.c52) AND (' P-{jh')) THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0 ORDER BY CASE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (t0.c52) AND (' P-{jh')) THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c1)) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((rt0.c2 IN ())) ORDER BY CASE ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (t0.c52) AND (' P-{jh')) THEN CAST(rt0.c1 AS TEXT) ELSE (NOT (rt0.c1)) END DESC;
SELECT * FROM t0 WHERE ((t0.c52 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c52 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c52 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c52 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c52 COLLATE BINARY IN ()));
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c52) ORDER BY t0.c52;
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY t0.c52);
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c52) ORDER BY t0.c52;
SELECT SUM(count) FROM (SELECT ALL ((t0.c52) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY t0.c52);
SELECT ALL * FROM vt0, t0, rt0 WHERE (t0.c52) ORDER BY t0.c52;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)) AND (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52)))))) WHERE (((NULL) NOT BETWEEN (t0.c52) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (t0.c52) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)) AND (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52)))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)) AND (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52)))))) WHERE (((NULL) NOT BETWEEN (t0.c52) AND (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (t0.c52) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)) AND (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52)))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((t0.c52)) BETWEEN ((CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END)) AND (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52)))))) WHERE (((NULL) NOT BETWEEN (t0.c52) AND (vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ('*d[~' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('*d[~' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('*d[~' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (('*d[~' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('*d[~' COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE ((((((t0.c52, t0.c52, t0.c52, rt0.c2, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (((((rt0.c1)AND(x'')))AND(rt0.c3))) AND ((('248334937') NOT BETWEEN (x'93c1') AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c52, t0.c52, t0.c52, rt0.c2, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (((((rt0.c1)AND(x'')))AND(rt0.c3))) AND ((('248334937') NOT BETWEEN (x'93c1') AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((t0.c52, t0.c52, t0.c52, rt0.c2, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (((((rt0.c1)AND(x'')))AND(rt0.c3))) AND ((('248334937') NOT BETWEEN (x'93c1') AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c52, t0.c52, t0.c52, rt0.c2, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (((((rt0.c1)AND(x'')))AND(rt0.c3))) AND ((('248334937') NOT BETWEEN (x'93c1') AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((t0.c52, t0.c52, t0.c52, rt0.c2, rt0.c2))>=((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)))) BETWEEN (((((rt0.c1)AND(x'')))AND(rt0.c3))) AND ((('248334937') NOT BETWEEN (x'93c1') AND (rt0.c3)))));
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c52)==(t0.c52))) NOT BETWEEN (((t0.c52) IS TRUE)) AND ((((t0.c52, t0.c52, '1533853719'))<=((vt0.c0, t0.c52, vt0.c0)))))) ORDER BY ((t0.c52) IS FALSE) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)==(t0.c52))) NOT BETWEEN (((t0.c52) IS TRUE)) AND ((((t0.c52, t0.c52, '1533853719'))<=((vt0.c0, t0.c52, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c52) IS FALSE) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c52)==(t0.c52))) NOT BETWEEN (((t0.c52) IS TRUE)) AND ((((t0.c52, t0.c52, '1533853719'))<=((vt0.c0, t0.c52, vt0.c0)))))) ORDER BY ((t0.c52) IS FALSE) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c52)==(t0.c52))) NOT BETWEEN (((t0.c52) IS TRUE)) AND ((((t0.c52, t0.c52, '1533853719'))<=((vt0.c0, t0.c52, vt0.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c52) IS FALSE) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((t0.c52)==(t0.c52))) NOT BETWEEN (((t0.c52) IS TRUE)) AND ((((t0.c52, t0.c52, '1533853719'))<=((vt0.c0, t0.c52, vt0.c0)))))) ORDER BY ((t0.c52) IS FALSE) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c52 IN (t0.c52)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c52 IN (t0.c52)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c52 IN (t0.c52)) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c52 IN (t0.c52)) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c52 IN (t0.c52)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN (rt0.c3 COLLATE BINARY)));
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE (CAST(QUOTE(x'd356') AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(x'd356') AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (NULL)));
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE (CAST(QUOTE(x'd356') AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(x'd356') AS BLOB)) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (NULL)));
SELECT * FROM t0, vt0 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE (CAST(QUOTE(x'd356') AS BLOB));
SELECT COUNT(*) FROM rt0, t0, vt0 INDEXED BY i90 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (CAST(t0.c52 AS INTEGER)))) ORDER BY (NOT ((rt0.c2 IN (rt0.c2, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (CAST(t0.c52 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, vt0 INDEXED BY i90 ORDER BY (NOT ((rt0.c2 IN (rt0.c2, vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt0 INDEXED BY i90 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (CAST(t0.c52 AS INTEGER)))) ORDER BY (NOT ((rt0.c2 IN (rt0.c2, vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (CAST(t0.c52 AS INTEGER)))) IS TRUE)  as count FROM rt0, t0, vt0 INDEXED BY i90 ORDER BY (NOT ((rt0.c2 IN (rt0.c2, vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52 IN ()))<=(((t0.c52)<(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN ()))<=(((t0.c52)<(t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52 IN ()))<=(((t0.c52)<(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN ()))<=(((t0.c52)<(t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52 IN ()))<=(((t0.c52)<(t0.c52)))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END, (('')<(rt0.c3)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END, (('')<(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END, (('')<(rt0.c3)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END, (('')<(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (COALESCE(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END, (('')<(rt0.c3)))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ())) ORDER BY (((NOT (vt0.c0))) ISNULL) DESC  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST, 'MR㒵Z,륋' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) ISNULL) DESC  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST, 'MR㒵Z,륋' ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ())) ORDER BY (((NOT (vt0.c0))) ISNULL) DESC  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST, 'MR㒵Z,륋' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) ISNULL) DESC  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST, 'MR㒵Z,륋' ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)<(vt0.c0)) IN ())) ORDER BY (((NOT (vt0.c0))) ISNULL) DESC  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST, 'MR㒵Z,륋' ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE RTRIM)))OR('dcCH誢')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE RTRIM)))OR('dcCH誢'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE RTRIM)))OR('dcCH誢')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE RTRIM)))OR('dcCH誢'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(rt0.c2 COLLATE RTRIM)))OR('dcCH誢')));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((0.29512097622993017)<<(((rt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.29512097622993017)<<(((rt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((0.29512097622993017)<<(((rt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.29512097622993017)<<(((rt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((0.29512097622993017)<<(((rt0.c1)>=(vt0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c52 COLLATE NOCASE)AND((NOT (vt0.c0)))) WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c52 COLLATE NOCASE)AND((NOT (vt0.c0)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c52 COLLATE NOCASE)AND((NOT (vt0.c0)))) WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(NULL AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c52 COLLATE NOCASE)AND((NOT (vt0.c0)))) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((t0.c52 COLLATE NOCASE)AND((NOT (vt0.c0)))) WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(CAST(0.06297055520360295 AS INTEGER))) ORDER BY CAST((('402970766') NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(0.06297055520360295 AS INTEGER))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((('402970766') NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(CAST(0.06297055520360295 AS INTEGER))) ORDER BY CAST((('402970766') NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(0.06297055520360295 AS INTEGER))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((('402970766') NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(CAST(0.06297055520360295 AS INTEGER))) ORDER BY CAST((('402970766') NOT NULL) AS REAL);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3))>((rt0.c3)))) IS FALSE) WHERE (((((((((rt0.c0)OR(vt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (((- (vt0.c0))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))) NOT NULL)  NULLS FIRST, UNLIKELY(DISTINCT ABS(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(vt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3))>((rt0.c3)))) IS FALSE) ORDER BY (((- (vt0.c0))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))) NOT NULL)  NULLS FIRST, UNLIKELY(DISTINCT ABS(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3))>((rt0.c3)))) IS FALSE) WHERE (((((((((rt0.c0)OR(vt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (((- (vt0.c0))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))) NOT NULL)  NULLS FIRST, UNLIKELY(DISTINCT ABS(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(vt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3))>((rt0.c3)))) IS FALSE) ORDER BY (((- (vt0.c0))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))) NOT NULL)  NULLS FIRST, UNLIKELY(DISTINCT ABS(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((((rt0.c3))>((rt0.c3)))) IS FALSE) WHERE (((((((((rt0.c0)OR(vt0.c0)))OR(x'')))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) ORDER BY (((- (vt0.c0))) NOT NULL), ((((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)))AND(rt0.c0))) NOT NULL)  NULLS FIRST, UNLIKELY(DISTINCT ABS(rt0.c1)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c52)LIKE(TRIM(DISTINCT t0.c52, vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t0.c52)LIKE(TRIM(DISTINCT t0.c52, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c52)LIKE(TRIM(DISTINCT t0.c52, vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((t0.c52)LIKE(TRIM(DISTINCT t0.c52, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c52)LIKE(TRIM(DISTINCT t0.c52, vt0.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE BINARY;
SELECT * FROM t0, vt0, rt0 WHERE ('!⁈') ORDER BY (((~ (t0.c52))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('!⁈') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((~ (t0.c52))) NOT NULL) DESC);
SELECT * FROM t0, vt0, rt0 WHERE ('!⁈') ORDER BY (((~ (t0.c52))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('!⁈') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((~ (t0.c52))) NOT NULL) DESC);
SELECT * FROM t0, vt0, rt0 WHERE ('!⁈') ORDER BY (((~ (t0.c52))) NOT NULL) DESC;
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) RIGHT OUTER JOIN vt0 ON ((TRIM(rt0.c0)) NOT NULL) WHERE (1.128851025E9) ORDER BY (~ ((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((1.128851025E9) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) RIGHT OUTER JOIN vt0 ON ((TRIM(rt0.c0)) NOT NULL) ORDER BY (~ ((- (rt0.c0)))) DESC);
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) RIGHT OUTER JOIN vt0 ON ((TRIM(rt0.c0)) NOT NULL) WHERE (1.128851025E9) ORDER BY (~ ((- (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((1.128851025E9) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) RIGHT OUTER JOIN vt0 ON ((TRIM(rt0.c0)) NOT NULL) ORDER BY (~ ((- (rt0.c0)))) DESC);
SELECT * FROM t0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END) NOTNULL) RIGHT OUTER JOIN vt0 ON ((TRIM(rt0.c0)) NOT NULL) WHERE (1.128851025E9) ORDER BY (~ ((- (rt0.c0)))) DESC;
SELECT ALL * FROM t0, rt0 WHERE (')٩)m') ORDER BY (((((rt0.c0)GLOB(rt0.c1))))!=((((rt0.c2) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((')٩)m') IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)GLOB(rt0.c1))))<>((((rt0.c2) NOT NULL)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (')٩)m') ORDER BY (((((rt0.c0)GLOB(rt0.c1))))!=((((rt0.c2) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ((')٩)m') IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0)GLOB(rt0.c1))))<>((((rt0.c2) NOT NULL)))) ASC);
SELECT ALL * FROM t0, rt0 WHERE (')٩)m') ORDER BY (((((rt0.c0)GLOB(rt0.c1))))!=((((rt0.c2) NOT NULL)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ((+ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ((+ (rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.4192817589847424)&(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST((((rt0.c3))<=((rt0.c2))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4192817589847424)&(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((((rt0.c3))<=((rt0.c2))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.4192817589847424)&(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST((((rt0.c3))<=((rt0.c2))) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4192817589847424)&(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST((((rt0.c3))<=((rt0.c2))) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0.4192817589847424)&(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN t0.c52 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST((((rt0.c3))<=((rt0.c2))) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN t0 ON ((((t0.c52) IS TRUE))OR(0.613970669008378)) WHERE ((((0.602110771406719)) BETWEEN ((x'')) AND ((rt0.c3 COLLATE NOCASE)))) ORDER BY TYPEOF(DISTINCT ((rt0.c3)/(NULL))) ASC  NULLS LAST, LOWER(((rt0.c3)AND(rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.602110771406719)) BETWEEN ((x'')) AND ((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN t0 ON ((((t0.c52) IS TRUE))OR(0.613970669008378)) ORDER BY TYPEOF(DISTINCT ((rt0.c3)/(NULL))) ASC  NULLS LAST, LOWER(((rt0.c3)AND(rt0.c3)))  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN t0 ON ((((t0.c52) IS TRUE))OR(0.613970669008378)) WHERE ((((0.602110771406719)) BETWEEN ((x'')) AND ((rt0.c3 COLLATE NOCASE)))) ORDER BY TYPEOF(DISTINCT ((rt0.c3)/(NULL))) ASC  NULLS LAST, LOWER(((rt0.c3)AND(rt0.c3)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.602110771406719)) BETWEEN ((x'')) AND ((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(t0.c52 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN t0 ON ((((t0.c52) IS TRUE))OR(0.613970669008378)) ORDER BY TYPEOF(DISTINCT ((rt0.c3)/(NULL))) ASC  NULLS LAST, LOWER(((rt0.c3)AND(rt0.c3)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((t0.c52)))) ORDER BY ((~ ('-1639155711')) IN (json_extract(vt0.c0, t0.c52)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((t0.c52)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ ('-1639155711')) IN (json_extract(vt0.c0, t0.c52)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((t0.c52)))) ORDER BY ((~ ('-1639155711')) IN (json_extract(vt0.c0, t0.c52)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((t0.c52)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((~ ('-1639155711')) IN (json_extract(vt0.c0, t0.c52)))  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))) AND ((t0.c52)))) ORDER BY ((~ ('-1639155711')) IN (json_extract(vt0.c0, t0.c52)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'' COLLATE BINARY);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c52 ELSE vt0.c0 END IN ())) ORDER BY ((((t0.c52)/(t0.c52))) NOTNULL), ((('13dJ')*(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN t0.c52 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c52)/(t0.c52))) NOTNULL), ((('13dJ')*(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c52 ELSE vt0.c0 END IN ())) ORDER BY ((((t0.c52)/(t0.c52))) NOTNULL), ((('13dJ')*(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN t0.c52 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c52)/(t0.c52))) NOTNULL), ((('13dJ')*(vt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE ((CASE WHEN vt0.c0 THEN t0.c52 ELSE vt0.c0 END IN ())) ORDER BY ((((t0.c52)/(t0.c52))) NOTNULL), ((('13dJ')*(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((IFNULL(t0.c52, rt0.c1)) NOT BETWEEN ((NOT (rt0.c0))) AND (((t0.c52) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((IFNULL(t0.c52, rt0.c1)) NOT BETWEEN ((NOT (rt0.c0))) AND (((t0.c52) ISNULL))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((IFNULL(t0.c52, rt0.c1)) NOT BETWEEN ((NOT (rt0.c0))) AND (((t0.c52) ISNULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((IFNULL(t0.c52, rt0.c1)) NOT BETWEEN ((NOT (rt0.c0))) AND (((t0.c52) ISNULL))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (vt0.c0) ORDER BY ((IFNULL(t0.c52, rt0.c1)) NOT BETWEEN ((NOT (rt0.c0))) AND (((t0.c52) ISNULL)));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((rt0.c3))=((rt0.c2))) AS BLOB)) ORDER BY (((rt0.c2))<=(('351206283')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c2))<=(('351206283')))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((rt0.c3))=((rt0.c2))) AS BLOB)) ORDER BY (((rt0.c2))<=(('351206283')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))=((rt0.c2))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((rt0.c2))<=(('351206283')))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CAST((((rt0.c3))=((rt0.c2))) AS BLOB)) ORDER BY (((rt0.c2))<=(('351206283')))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND((rt0.c1 IN ()))))AND(((rt0.c0)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(vt0.c0))AND((rt0.c1 IN ()))))AND(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND((rt0.c1 IN ()))))AND(((rt0.c0)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(vt0.c0))AND((rt0.c1 IN ()))))AND(((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND((rt0.c1 IN ()))))AND(((rt0.c0)=(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c52)IS NOT(vt0.c0))) NOT BETWEEN ((t0.c52 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c52)))) WHERE ((json_extract(vt0.c0, t0.c52) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt0.c0, t0.c52) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c52)IS NOT(vt0.c0))) NOT BETWEEN ((t0.c52 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c52)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c52)IS NOT(vt0.c0))) NOT BETWEEN ((t0.c52 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c52)))) WHERE ((json_extract(vt0.c0, t0.c52) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt0.c0, t0.c52) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c52)IS NOT(vt0.c0))) NOT BETWEEN ((t0.c52 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c52)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c52)IS NOT(vt0.c0))) NOT BETWEEN ((t0.c52 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c52)))) WHERE ((json_extract(vt0.c0, t0.c52) IN ()));
SELECT * FROM t0 WHERE (((t0.c52 IN ()) IN ())) ORDER BY CAST(((t0.c52)-(t0.c52)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c52)-(t0.c52)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c52 IN ()) IN ())) ORDER BY CAST(((t0.c52)-(t0.c52)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c52)-(t0.c52)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c52 IN ()) IN ())) ORDER BY CAST(((t0.c52)-(t0.c52)) AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE ((- (rt0.c3)) COLLATE BINARY) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c3)) AND (NULL))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c3)) AND (NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c3)) AND (NULL))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c3)) AND (NULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c3)) AND (NULL))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'6973') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'6973') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'6973') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'6973') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((x'6973') NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rtreenode(rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (rtreenode(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rtreenode(rt0.c2, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (rtreenode(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rtreenode(rt0.c2, vt0.c0))));
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (((((rt0.c3)|(t0.c52))))>((SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3)|(t0.c52))))>((SQLITE_COMPILEOPTION_GET(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (((((rt0.c3)|(t0.c52))))>((SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c1 AS BLOB))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3)|(t0.c52))))>((SQLITE_COMPILEOPTION_GET(rt0.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (TRIM(DISTINCT CAST(rt0.c1 AS BLOB))) ORDER BY (((((rt0.c3)|(t0.c52))))>((SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT * FROM rt0, t0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((vt0.c0) NOT BETWEEN (4.02970766E8) AND (t0.c52)))))) ORDER BY (((rt0.c1)!=(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))<=((((vt0.c0) NOT BETWEEN (4.02970766E8) AND (t0.c52)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c1)<>(rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((vt0.c0) NOT BETWEEN (4.02970766E8) AND (t0.c52)))))) ORDER BY (((rt0.c1)!=(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c0 AS BLOB)))<=((((vt0.c0) NOT BETWEEN (4.02970766E8) AND (t0.c52)))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((rt0.c1)<>(rt0.c3)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0, t0, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((vt0.c0) NOT BETWEEN (4.02970766E8) AND (t0.c52)))))) ORDER BY (((rt0.c1)!=(rt0.c3)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON LIKE(CASE WHEN rt0.c2 THEN vt0.c0 END, json_remove('', rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) WHERE ((~ ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKE(CASE WHEN rt0.c2 THEN vt0.c0 END, json_remove('', rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c1)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON LIKE(CASE WHEN rt0.c2 THEN vt0.c0 END, json_remove('', rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c1)) WHERE ((~ ((rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LIKE(CASE WHEN rt0.c2 THEN vt0.c0 END, json_remove('', rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c1)));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c3)=(rt0.c1)))+((NOT (x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((0.9597470974257719)<=(rt0.c2)))) AND (((+ (t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)=(rt0.c1)))+((NOT (x''))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((0.9597470974257719)<=(rt0.c2)))) AND (((+ (t0.c52))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c3)=(rt0.c1)))+((NOT (x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((0.9597470974257719)<=(rt0.c2)))) AND (((+ (t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)=(rt0.c1)))+((NOT (x''))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((((0.9597470974257719)<=(rt0.c2)))) AND (((+ (t0.c52))))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((((rt0.c3)=(rt0.c1)))+((NOT (x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((((0.9597470974257719)<=(rt0.c2)))) AND (((+ (t0.c52)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('-731219307') ORDER BY CASE CAST(x'' AS REAL)  WHEN (((rt0.c2, rt0.c3, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2))) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-731219307') IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(x'' AS REAL)  WHEN (((rt0.c2, rt0.c3, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2))) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-731219307') ORDER BY CASE CAST(x'' AS REAL)  WHEN (((rt0.c2, rt0.c3, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2))) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-731219307') IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(x'' AS REAL)  WHEN (((rt0.c2, rt0.c3, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2))) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-731219307') ORDER BY CASE CAST(x'' AS REAL)  WHEN (((rt0.c2, rt0.c3, rt0.c0))<((rt0.c0, rt0.c0, rt0.c2))) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON COALESCE(rt0.c3 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0)<=(rt0.c2)), rt0.c2) WHERE ((((((rt0.c2))=((rt0.c2)))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c1))) ORDER BY 'pX' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c2)))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON COALESCE(rt0.c3 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0)<=(rt0.c2)), rt0.c2) ORDER BY 'pX' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON COALESCE(rt0.c3 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0)<=(rt0.c2)), rt0.c2) WHERE ((((((rt0.c2))=((rt0.c2)))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c1))) ORDER BY 'pX' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))==((rt0.c2)))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c1))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON COALESCE(rt0.c3 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0)<=(rt0.c2)), rt0.c2) ORDER BY 'pX' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON COALESCE(rt0.c3 COLLATE BINARY, (rt0.c3 IN ()), ((rt0.c0)<=(rt0.c2)), rt0.c2) WHERE ((((((rt0.c2))=((rt0.c2)))) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (rt0.c1))) ORDER BY 'pX' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) NOT NULL));
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((vt0.c0)<=(t0.c52))))) ORDER BY CAST(GLOB(t0.c52, vt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<=(t0.c52))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(GLOB(t0.c52, vt0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((vt0.c0)<=(t0.c52))))) ORDER BY CAST(GLOB(t0.c52, vt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)<=(t0.c52))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(GLOB(t0.c52, vt0.c0) AS NUMERIC) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ (((vt0.c0)<=(t0.c52))))) ORDER BY CAST(GLOB(t0.c52, vt0.c0) AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c2)) WHEN -2.125736585E9 THEN rt0.c1 COLLATE RTRIM WHEN '' COLLATE RTRIM THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3)<=(rt0.c2)) END) ORDER BY ((((rt0.c2)>=(rt0.c1)))<>(load_extension(0.7842104703246837)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN (- (rt0.c2)) WHEN -2.125736585E9 THEN rt0.c1 COLLATE RTRIM WHEN '' COLLATE RTRIM THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c1)))!=(load_extension(0.7842104703246837)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (- (rt0.c2)) WHEN -2.125736585E9 THEN rt0.c1 COLLATE RTRIM WHEN '' COLLATE RTRIM THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3)<=(rt0.c2)) END) ORDER BY ((((rt0.c2)>=(rt0.c1)))<>(load_extension(0.7842104703246837)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN (- (rt0.c2)) WHEN -2.125736585E9 THEN rt0.c1 COLLATE RTRIM WHEN '' COLLATE RTRIM THEN rt0.c3 COLLATE NOCASE ELSE ((rt0.c3)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>=(rt0.c1)))!=(load_extension(0.7842104703246837)))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((t0.c52) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c52) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((t0.c52) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c52) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((t0.c52) BETWEEN (rt0.c3) AND (rt0.c3)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE NULL  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS TEXT) ELSE ABS(vt0.c0) END) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND((('''|c}so')IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS TEXT) ELSE ABS(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND((('''|c}so')IS(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE NULL  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS TEXT) ELSE ABS(vt0.c0) END) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND((('''|c}so')IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS TEXT) ELSE ABS(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND((('''|c}so')IS(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE NULL  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN CAST(vt0.c0 AS TEXT) ELSE ABS(vt0.c0) END) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))AND((('''|c}so')IS(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((((t0.c52)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND('o~e碥L^3k')) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c52)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND('o~e碥L^3k')) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((((t0.c52)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND('o~e碥L^3k')) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c52)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND('o~e碥L^3k')) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE ((((((((((t0.c52)AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c3)))AND('o~e碥L^3k')) IN (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT * FROM vt0, rt0 NOT INDEXED, t0 WHERE ((+ (((rt0.c3)+(rt0.c3))))) ORDER BY CAST((~ (x'43a3')) AS REAL), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND (((((rt0.c1, vt0.c0, rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c3, rt0.c3, vt0.c0, rt0.c0, rt0.c2)) AND (('-773881824', t0.c52, rt0.c3, vt0.c0, t0.c52))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((~ (x'43a3')) AS REAL), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND (((((rt0.c1, vt0.c0, rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c3, rt0.c3, vt0.c0, rt0.c0, rt0.c2)) AND (('-773881824', t0.c52, rt0.c3, vt0.c0, t0.c52))))))  NULLS FIRST);
SELECT * FROM vt0, rt0 NOT INDEXED, t0 WHERE ((+ (((rt0.c3)+(rt0.c3))))) ORDER BY CAST((~ (x'43a3')) AS REAL), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND (((((rt0.c1, vt0.c0, rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c3, rt0.c3, vt0.c0, rt0.c0, rt0.c2)) AND (('-773881824', t0.c52, rt0.c3, vt0.c0, t0.c52))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST((~ (x'43a3')) AS REAL), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND (((((rt0.c1, vt0.c0, rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c3, rt0.c3, vt0.c0, rt0.c0, rt0.c2)) AND (('-773881824', t0.c52, rt0.c3, vt0.c0, t0.c52))))))  NULLS FIRST);
SELECT * FROM vt0, rt0 NOT INDEXED, t0 WHERE ((+ (((rt0.c3)+(rt0.c3))))) ORDER BY CAST((~ (x'43a3')) AS REAL), (((rt0.c1)) NOT BETWEEN ((ABS(DISTINCT rt0.c1))) AND (((((rt0.c1, vt0.c0, rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c3, rt0.c3, vt0.c0, rt0.c0, rt0.c2)) AND (('-773881824', t0.c52, rt0.c3, vt0.c0, t0.c52))))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE RTRIM)<>((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)!=((- (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE RTRIM)<>((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)!=((- (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 COLLATE RTRIM)<>((- (rt0.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c0 LEFT OUTER JOIN rt0 ON TRIM(NULL) WHERE (CAST(((rt0.c0) ISNULL) AS TEXT)) ORDER BY (('-1950885360')AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0 LEFT OUTER JOIN rt0 ON TRIM(NULL) ORDER BY (('-1950885360')AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c0 LEFT OUTER JOIN rt0 ON TRIM(NULL) WHERE (CAST(((rt0.c0) ISNULL) AS TEXT)) ORDER BY (('-1950885360')AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c0 LEFT OUTER JOIN rt0 ON TRIM(NULL) ORDER BY (('-1950885360')AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c0 LEFT OUTER JOIN rt0 ON TRIM(NULL) WHERE (CAST(((rt0.c0) ISNULL) AS TEXT)) ORDER BY (('-1950885360')AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c52) BETWEEN (t0.c52) AND (t0.c52))) NOT BETWEEN (CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END) AND (CAST(t0.c52 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c52) BETWEEN (t0.c52) AND (t0.c52))) NOT BETWEEN (CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END) AND (CAST(t0.c52 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c52) BETWEEN (t0.c52) AND (t0.c52))) NOT BETWEEN (CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END) AND (CAST(t0.c52 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((t0.c52) BETWEEN (t0.c52) AND (t0.c52))) NOT BETWEEN (CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END) AND (CAST(t0.c52 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c52) BETWEEN (t0.c52) AND (t0.c52))) NOT BETWEEN (CASE WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END) AND (CAST(t0.c52 AS NUMERIC))));
SELECT ALL * FROM t0 WHERE (0.8105506535652345 COLLATE RTRIM) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(t0.c52)))%(x'7f91' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8105506535652345 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)AND(t0.c52)))AND(t0.c52)))%(x'7f91' COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.8105506535652345 COLLATE RTRIM) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(t0.c52)))%(x'7f91' COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8105506535652345 COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)AND(t0.c52)))AND(t0.c52)))%(x'7f91' COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.8105506535652345 COLLATE RTRIM) ORDER BY ((((((t0.c52)AND(t0.c52)))AND(t0.c52)))%(x'7f91' COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))AND(((t0.c52) NOTNULL))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))AND(((t0.c52) NOTNULL))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))AND(((t0.c52) NOTNULL))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))AND(((t0.c52) NOTNULL))))AND(rt0.c0))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))AND(((t0.c52) NOTNULL))))AND(rt0.c0)));
SELECT COUNT(*) FROM t0 INDEXED BY i90, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (('{]' IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (('{]' IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INDEXED BY i90, vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i90, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (('{]' IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (('{]' IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 INDEXED BY i90, vt0 ORDER BY ((vt0.c0) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0 INDEXED BY i90, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (('{]' IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE WHEN t0.c52 THEN t0.c52 WHEN '-468669443' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE WHEN t0.c52 THEN t0.c52 WHEN '-468669443' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE WHEN t0.c52 THEN t0.c52 WHEN '-468669443' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE WHEN t0.c52 THEN t0.c52 WHEN '-468669443' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0, t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS REAL)) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE WHEN t0.c52 THEN t0.c52 WHEN '-468669443' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CAST(rt0.c0 AS TEXT));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (-1312059221);
SELECT SUM(count) FROM (SELECT ALL ((-1312059221) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (-1312059221);
SELECT SUM(count) FROM (SELECT ALL ((-1312059221) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (-1312059221);
SELECT * FROM rt0, vt0 WHERE (IFNULL(CAST(rt0.c3 AS BLOB), '-328904702')) ORDER BY ((vt0.c0) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c3 AS BLOB), '-328904702')) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (IFNULL(CAST(rt0.c3 AS BLOB), '-328904702')) ORDER BY ((vt0.c0) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(rt0.c3 AS BLOB), '-328904702')) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (IFNULL(CAST(rt0.c3 AS BLOB), '-328904702')) ORDER BY ((vt0.c0) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)|(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (CAST(((vt0.c0)|(rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(NULL))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(NULL))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((~ (SQLITE_COMPILEOPTION_USED(NULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(DISTINCT rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LOWER(DISTINCT rt0.c0) AS BLOB));
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((rt0.c1) NOTNULL) COLLATE NOCASE);
SELECT * FROM t0, rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c2) AS NUMERIC));
SELECT * FROM rt0, vt0, t0 WHERE (COALESCE(rt0.c0 COLLATE NOCASE, json_extract(rt0.c2, t0.c52, rt0.c3, rt0.c1), CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 END)) ORDER BY ((((t0.c52)AND(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c0 COLLATE NOCASE, json_extract(rt0.c2, t0.c52, rt0.c3, rt0.c1), CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c52)AND(rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (COALESCE(rt0.c0 COLLATE NOCASE, json_extract(rt0.c2, t0.c52, rt0.c3, rt0.c1), CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 END)) ORDER BY ((((t0.c52)AND(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c0 COLLATE NOCASE, json_extract(rt0.c2, t0.c52, rt0.c3, rt0.c1), CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 END)) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c52)AND(rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0, t0 WHERE (COALESCE(rt0.c0 COLLATE NOCASE, json_extract(rt0.c2, t0.c52, rt0.c3, rt0.c1), CASE WHEN vt0.c0 THEN t0.c52 WHEN t0.c52 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN t0.c52 WHEN t0.c52 THEN vt0.c0 END)) ORDER BY ((((t0.c52)AND(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(COALESCE(DISTINCT rt0.c3, x'ae36', rt0.c0, rt0.c0))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(COALESCE(DISTINCT rt0.c3, x'ae36', rt0.c0, rt0.c0))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(COALESCE(DISTINCT rt0.c3, x'ae36', rt0.c0, rt0.c0))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c1)))AND(COALESCE(DISTINCT rt0.c3, x'ae36', rt0.c0, rt0.c0))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(COALESCE(DISTINCT rt0.c3, x'ae36', rt0.c0, rt0.c0))))OR(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (0.490492004439375 IN ()) THEN rt0.c2 END FULL OUTER JOIN vt0 ON LENGTH(((t0.c52) IS TRUE)) WHERE (COALESCE(NULL, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (0.490492004439375 IN ()) THEN rt0.c2 END FULL OUTER JOIN vt0 ON LENGTH(((t0.c52) IS TRUE)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (0.490492004439375 IN ()) THEN rt0.c2 END FULL OUTER JOIN vt0 ON LENGTH(((t0.c52) IS TRUE)) WHERE (COALESCE(NULL, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (0.490492004439375 IN ()) THEN rt0.c2 END FULL OUTER JOIN vt0 ON LENGTH(((t0.c52) IS TRUE)));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON CASE WHEN (0.490492004439375 IN ()) THEN rt0.c2 END FULL OUTER JOIN vt0 ON LENGTH(((t0.c52) IS TRUE)) WHERE (COALESCE(NULL, rt0.c2) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL))+(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL))+(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL))+(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS REAL))+(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (((CAST(rt0.c3 AS REAL))+(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) ASC;
SELECT * FROM vt0 WHERE (0.8100227886513738);
SELECT SUM(count) FROM (SELECT ALL ((0.8100227886513738) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8100227886513738);
SELECT SUM(count) FROM (SELECT ALL ((0.8100227886513738) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8100227886513738);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0xffffffff89ac8553) ISNULL)) ORDER BY (((rt0.c1, 265778840, rt0.c2)) BETWEEN ((((rt0.c2)OR(rt0.c0)), ((((((((rt0.c0)OR(t0.c52)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c2)))) AND (((+ (rt0.c2)), t0.c52 COLLATE BINARY, TRIM(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff89ac8553) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1, 265778840, rt0.c2)) BETWEEN ((((rt0.c2)OR(rt0.c0)), ((((((((rt0.c0)OR(t0.c52)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c2)))) AND (((+ (rt0.c2)), t0.c52 COLLATE BINARY, TRIM(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0xffffffff89ac8553) ISNULL)) ORDER BY (((rt0.c1, 265778840, rt0.c2)) BETWEEN ((((rt0.c2)OR(rt0.c0)), ((((((((rt0.c0)OR(t0.c52)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c2)))) AND (((+ (rt0.c2)), t0.c52 COLLATE BINARY, TRIM(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff89ac8553) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1, 265778840, rt0.c2)) BETWEEN ((((rt0.c2)OR(rt0.c0)), ((((((((rt0.c0)OR(t0.c52)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c2)))) AND (((+ (rt0.c2)), t0.c52 COLLATE BINARY, TRIM(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((0xffffffff89ac8553) ISNULL)) ORDER BY (((rt0.c1, 265778840, rt0.c2)) BETWEEN ((((rt0.c2)OR(rt0.c0)), ((((((((rt0.c0)OR(t0.c52)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)), (~ (rt0.c2)))) AND (((+ (rt0.c2)), t0.c52 COLLATE BINARY, TRIM(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) NOTNULL)) NOTNULL) ASC  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((t0.c52)OR('-B')))AND(t0.c52)) AS BLOB)) ORDER BY (((rt0.c0, '-1046416382', rt0.c0)) BETWEEN (((((rt0.c3))<((t0.c52))), LIKELIHOOD(DISTINCT rt0.c0, 0.9663187294657549), '255537177')) AND ((vt0.c0 COLLATE RTRIM, t0.c52 COLLATE BINARY, 0.1562134438756826))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c52)OR('-B')))AND(t0.c52)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c0, '-1046416382', rt0.c0)) BETWEEN (((((rt0.c3))<((t0.c52))), LIKELIHOOD(DISTINCT rt0.c0, 0.9663187294657549), '255537177')) AND ((vt0.c0 COLLATE RTRIM, t0.c52 COLLATE BINARY, 0.1562134438756826))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((t0.c52)OR('-B')))AND(t0.c52)) AS BLOB)) ORDER BY (((rt0.c0, '-1046416382', rt0.c0)) BETWEEN (((((rt0.c3))<((t0.c52))), LIKELIHOOD(DISTINCT rt0.c0, 0.9663187294657549), '255537177')) AND ((vt0.c0 COLLATE RTRIM, t0.c52 COLLATE BINARY, 0.1562134438756826))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c52)OR('-B')))AND(t0.c52)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY (((rt0.c0, '-1046416382', rt0.c0)) BETWEEN (((((rt0.c3))<((t0.c52))), LIKELIHOOD(DISTINCT rt0.c0, 0.9663187294657549), '255537177')) AND ((vt0.c0 COLLATE RTRIM, t0.c52 COLLATE BINARY, 0.1562134438756826))) DESC  NULLS LAST);
SELECT * FROM t0, vt0, rt0 WHERE (CAST(((((t0.c52)OR('-B')))AND(t0.c52)) AS BLOB)) ORDER BY (((rt0.c0, '-1046416382', rt0.c0)) BETWEEN (((((rt0.c3))<((t0.c52))), LIKELIHOOD(DISTINCT rt0.c0, 0.9663187294657549), '255537177')) AND ((vt0.c0 COLLATE RTRIM, t0.c52 COLLATE BINARY, 0.1562134438756826))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (((0Xffffffffd5f18b8d) NOT NULL)) ORDER BY ((((((t0.c52)-(t0.c52)))OR((t0.c52 IN (t0.c52)))))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END)) DESC, CAST(((t0.c52)>=(t0.c52)) AS INTEGER) DESC, (((t0.c52 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd5f18b8d) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)-(t0.c52)))OR((t0.c52 IN (t0.c52)))))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END)) DESC, CAST(((t0.c52)>=(t0.c52)) AS INTEGER) DESC, (((t0.c52 IN ())) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((0Xffffffffd5f18b8d) NOT NULL)) ORDER BY ((((((t0.c52)-(t0.c52)))OR((t0.c52 IN (t0.c52)))))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END)) DESC, CAST(((t0.c52)>=(t0.c52)) AS INTEGER) DESC, (((t0.c52 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((0Xffffffffd5f18b8d) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)-(t0.c52)))OR((t0.c52 IN (t0.c52)))))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END)) DESC, CAST(((t0.c52)>=(t0.c52)) AS INTEGER) DESC, (((t0.c52 IN ())) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((0Xffffffffd5f18b8d) NOT NULL)) ORDER BY ((((((t0.c52)-(t0.c52)))OR((t0.c52 IN (t0.c52)))))OR(CASE WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN t0.c52 END)) DESC, CAST(((t0.c52)>=(t0.c52)) AS INTEGER) DESC, (((t0.c52 IN ())) NOT NULL) ASC;
SELECT * FROM rt0, t0 WHERE (((((t0.c52)<(rt0.c0)))LIKE(((t0.c52)IS NOT(t0.c52))))) ORDER BY '0.4112136152796638'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)<(rt0.c0)))LIKE(((t0.c52)IS NOT(t0.c52))))) IS TRUE)  as count FROM rt0, t0 ORDER BY '0.4112136152796638'  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((t0.c52)<(rt0.c0)))LIKE(((t0.c52)IS NOT(t0.c52))))) ORDER BY '0.4112136152796638'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c52)<(rt0.c0)))LIKE(((t0.c52)IS NOT(t0.c52))))) IS TRUE)  as count FROM rt0, t0 ORDER BY '0.4112136152796638'  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((t0.c52)<(rt0.c0)))LIKE(((t0.c52)IS NOT(t0.c52))))) ORDER BY '0.4112136152796638'  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (((((t0.c52)AND(t0.c52)))AND(t0.c52)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c52)AND(t0.c52)))AND(t0.c52)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c52)AND(t0.c52)))AND(t0.c52)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c52)AND(t0.c52)))AND(t0.c52)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c52)AND(t0.c52)))AND(t0.c52)) COLLATE NOCASE);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(((2090168207)>(t0.c52)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(((2090168207)>(t0.c52)) AS REAL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(((2090168207)>(t0.c52)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CAST(((2090168207)>(t0.c52)) AS REAL));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON CAST(((2090168207)>(t0.c52)) AS REAL) WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c0)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c0)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) AND (rt0.c0));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY ((((((rt0.c3)*(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)*(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY ((((((rt0.c3)*(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((rt0.c3)*(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c2) ORDER BY ((((((rt0.c3)*(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (t0.c52)))) AND ((0Xffffffffb2f2a4ce)))) ORDER BY ((CASE t0.c52  WHEN t0.c52 THEN rt0.c2 ELSE t0.c52 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((NOT (t0.c52)))) AND ((0xffffffffb2f2a4ce)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE t0.c52  WHEN t0.c52 THEN rt0.c2 ELSE t0.c52 END) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (t0.c52)))) AND ((0Xffffffffb2f2a4ce)))) ORDER BY ((CASE t0.c52  WHEN t0.c52 THEN rt0.c2 ELSE t0.c52 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((NOT (t0.c52)))) AND ((0xffffffffb2f2a4ce)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CASE t0.c52  WHEN t0.c52 THEN rt0.c2 ELSE t0.c52 END) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (t0.c52)))) AND ((0Xffffffffb2f2a4ce)))) ORDER BY ((CASE t0.c52  WHEN t0.c52 THEN rt0.c2 ELSE t0.c52 END) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(t0.c52))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c52))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(t0.c52))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c52))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0, t0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(t0.c52))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(t0.c52)))AND(rt0.c3)))<(((((rt0.c2)AND('0.19750411689975822')))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c1)<>(rt0.c3)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((t0.c52 IN ())) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (t0.c52 IN ()), ((((HEX(DISTINCT rt0.c2))AND(rt0.c1)))OR(t0.c52 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((t0.c52 IN ())) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(t0.c52)))AND(rt0.c3)))<(((((rt0.c2)AND('0.19750411689975822')))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c1)<>(rt0.c3)) COLLATE NOCASE ORDER BY (t0.c52 IN ()), ((((HEX(DISTINCT rt0.c2))AND(rt0.c1)))OR(t0.c52 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(t0.c52)))AND(rt0.c3)))<(((((rt0.c2)AND('0.19750411689975822')))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c1)<>(rt0.c3)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((t0.c52 IN ())) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (t0.c52 IN ()), ((((HEX(DISTINCT rt0.c2))AND(rt0.c1)))OR(t0.c52 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((t0.c52 IN ())) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(t0.c52)))AND(rt0.c3)))<(((((rt0.c2)AND('0.19750411689975822')))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c1)<>(rt0.c3)) COLLATE NOCASE ORDER BY (t0.c52 IN ()), ((((HEX(DISTINCT rt0.c2))AND(rt0.c1)))OR(t0.c52 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((((rt0.c0)AND(t0.c52)))AND(rt0.c3)))<(((((rt0.c2)AND('0.19750411689975822')))AND(rt0.c2)))) LEFT OUTER JOIN vt0 ON ((rt0.c1)<>(rt0.c3)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((t0.c52 IN ())) AND (rt0.c3 COLLATE RTRIM))) ORDER BY (t0.c52 IN ()), ((((HEX(DISTINCT rt0.c2))AND(rt0.c1)))OR(t0.c52 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c52, t0.c52)) AND ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, (((t0.c52))>((t0.c52))))))) ORDER BY 0.03199693214507726 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c52, t0.c52)) AND ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, (((t0.c52))>((t0.c52))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.03199693214507726 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c52, t0.c52)) AND ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, (((t0.c52))>((t0.c52))))))) ORDER BY 0.03199693214507726 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c52, t0.c52)) AND ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, (((t0.c52))>((t0.c52))))))) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.03199693214507726 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((t0.c52) BETWEEN (vt0.c0) AND (vt0.c0)), t0.c52, t0.c52)) AND ((((vt0.c0) IS FALSE), vt0.c0 COLLATE BINARY, (((t0.c52))>((t0.c52))))))) ORDER BY 0.03199693214507726 DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((t0.c52)AND(t0.c52)))AND(t0.c52)))<<((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52)))))) ORDER BY load_extension(((0.5534692205451031)<(t0.c52)), (t0.c52 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c52)AND(t0.c52)))AND(t0.c52)))<<((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY load_extension(((0.5534692205451031)<(t0.c52)), (t0.c52 IN ()))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((((t0.c52)AND(t0.c52)))AND(t0.c52)))<<((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52)))))) ORDER BY load_extension(((0.5534692205451031)<(t0.c52)), (t0.c52 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c52)AND(t0.c52)))AND(t0.c52)))<<((((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((t0.c52)))))) IS TRUE)  as count FROM t0 ORDER BY load_extension(((0.5534692205451031)<(t0.c52)), (t0.c52 IN ()))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((x'7519') NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY 0.06297055520360295  NULLS LAST, (((rt0.c2)) BETWEEN ((COALESCE(rt0.c2, rt0.c0))) AND ((((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'7519') NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.06297055520360295  NULLS LAST, (((rt0.c2)) BETWEEN ((COALESCE(rt0.c2, rt0.c0))) AND ((((rt0.c2)IS(rt0.c1))))));
SELECT ALL * FROM t0, rt0 WHERE (((x'7519') NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY 0.06297055520360295  NULLS LAST, (((rt0.c2)) BETWEEN ((COALESCE(rt0.c2, rt0.c0))) AND ((((rt0.c2)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((x'7519') NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY 0.06297055520360295  NULLS LAST, (((rt0.c2)) BETWEEN ((COALESCE(rt0.c2, rt0.c0))) AND ((((rt0.c2)IS(rt0.c1))))));
SELECT ALL * FROM t0, rt0 WHERE (((x'7519') NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY 0.06297055520360295  NULLS LAST, (((rt0.c2)) BETWEEN ((COALESCE(rt0.c2, rt0.c0))) AND ((((rt0.c2)IS(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE ((+ ((- (rt0.c1))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST, (~ (((t0.c52) BETWEEN (rt0.c0) AND (rt0.c3)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt0.c3 IN (rt0.c3)))+(((rt0.c1)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST, (~ (((t0.c52) BETWEEN (rt0.c0) AND (rt0.c3)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt0.c3 IN (rt0.c3)))+(((rt0.c1)GLOB(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE ((+ ((- (rt0.c1))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST, (~ (((t0.c52) BETWEEN (rt0.c0) AND (rt0.c3)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt0.c3 IN (rt0.c3)))+(((rt0.c1)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST, (~ (((t0.c52) BETWEEN (rt0.c0) AND (rt0.c3)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt0.c3 IN (rt0.c3)))+(((rt0.c1)GLOB(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON NULL COLLATE NOCASE WHERE ((+ ((- (rt0.c1))))) ORDER BY (NULL IN ()) COLLATE BINARY DESC  NULLS FIRST, (~ (((t0.c52) BETWEEN (rt0.c0) AND (rt0.c3)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, (((rt0.c3 IN (rt0.c3)))+(((rt0.c1)GLOB(rt0.c2))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) RIGHT OUTER JOIN rt0 ON (+ (((t0.c52) IS FALSE))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) RIGHT OUTER JOIN rt0 ON (+ (((t0.c52) IS FALSE))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) RIGHT OUTER JOIN rt0 ON (+ (((t0.c52) IS FALSE))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) RIGHT OUTER JOIN rt0 ON (+ (((t0.c52) IS FALSE))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2)|('' COLLATE BINARY))) ORDER BY ((vt0.c0)<=(((rt0.c2)&(x'328fe72e'))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|('' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((vt0.c0)<=(((rt0.c2)&(x'328fe72e')))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2)|('' COLLATE BINARY))) ORDER BY ((vt0.c0)<=(((rt0.c2)&(x'328fe72e'))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)|('' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((vt0.c0)<=(((rt0.c2)&(x'328fe72e')))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((rt0.c2)|('' COLLATE BINARY))) ORDER BY ((vt0.c0)<=(((rt0.c2)&(x'328fe72e'))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((vt0.c0 IN (((rt0.c0)/(rt0.c3))))) ORDER BY (((1))>=((t0.c52 COLLATE RTRIM))), COALESCE(CAST(rt0.c3 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((rt0.c0)/(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((1))>=((t0.c52 COLLATE RTRIM))), COALESCE(CAST(rt0.c3 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((vt0.c0 IN (((rt0.c0)/(rt0.c3))))) ORDER BY (((1))>=((t0.c52 COLLATE RTRIM))), COALESCE(CAST(rt0.c3 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (((rt0.c0)/(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((1))>=((t0.c52 COLLATE RTRIM))), COALESCE(CAST(rt0.c3 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((vt0.c0 IN (((rt0.c0)/(rt0.c3))))) ORDER BY (((1))>=((t0.c52 COLLATE RTRIM))), COALESCE(CAST(rt0.c3 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2)+(rt0.c1)) AS INTEGER) WHERE (TOTAL_CHANGES()) ORDER BY (((((('^W') NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c0 IN ()))))AND(((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2)+(rt0.c1)) AS INTEGER) ORDER BY (((((('^W') NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c0 IN ()))))AND(((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2)+(rt0.c1)) AS INTEGER) WHERE (TOTAL_CHANGES()) ORDER BY (((((('^W') NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c0 IN ()))))AND(((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(((rt0.c2)+(rt0.c1)) AS INTEGER) ORDER BY (((((('^W') NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND((rt0.c0 IN ()))))AND(((t0.c52) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (json_extract(t0.c52 COLLATE NOCASE, CAST(t0.c52 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(t0.c52 COLLATE NOCASE, CAST(t0.c52 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (json_extract(t0.c52 COLLATE NOCASE, CAST(t0.c52 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(t0.c52 COLLATE NOCASE, CAST(t0.c52 AS NUMERIC))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (0xffffffffe80dc872) AND (((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (0Xffffffffe80dc872) AND (((rt0.c3)IS(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (0xffffffffe80dc872) AND (((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL)) BETWEEN (0Xffffffffe80dc872) AND (((rt0.c3)IS(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((CAST(rt0.c0 AS REAL)) BETWEEN (0xffffffffe80dc872) AND (((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<((~ (rt0.c3)))) DESC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<((~ (rt0.c3)))) DESC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<((~ (rt0.c3)))) DESC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<((~ (rt0.c3)))) DESC  NULLS FIRST, rt0.c0  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))<((~ (rt0.c3)))) DESC  NULLS FIRST, rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c2)))OR(((((rt0.c1)AND(x'816f')))AND(rt0.c2)))))AND((+ (rt0.c0)))))OR(((('-1964911501')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c2)))OR(((((rt0.c1)AND(x'816f')))AND(rt0.c2)))))AND((+ (rt0.c0)))))OR(((('-1964911501')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c2)))OR(((((rt0.c1)AND(x'816f')))AND(rt0.c2)))))AND((+ (rt0.c0)))))OR(((('-1964911501')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c2)))OR(((((rt0.c1)AND(x'816f')))AND(rt0.c2)))))AND((+ (rt0.c0)))))OR(((('-1964911501')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))AND(rt0.c2)))OR(((((rt0.c1)AND(x'816f')))AND(rt0.c2)))))AND((+ (rt0.c0)))))OR(((('-1964911501')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, t0.c52, rt0.c3, rt0.c1, x''))<=((rt0.c1, rt0.c3, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((t0.c52 IN ())) AND (((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((rt0.c3, t0.c52, rt0.c3, rt0.c1, x''))<=((rt0.c1, rt0.c3, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((t0.c52 IN ())) AND (((rt0.c2) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, t0.c52, rt0.c3, rt0.c1, x''))<=((rt0.c1, rt0.c3, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((t0.c52 IN ())) AND (((rt0.c2) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (((((rt0.c3, t0.c52, rt0.c3, rt0.c1, x''))<=((rt0.c1, rt0.c3, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((t0.c52 IN ())) AND (((rt0.c2) NOTNULL))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (rt0.c1) ORDER BY (((((rt0.c3, t0.c52, rt0.c3, rt0.c1, x''))<=((rt0.c1, rt0.c3, vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((t0.c52 IN ())) AND (((rt0.c2) NOTNULL))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((('')AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY SUBSTR((rt0.c2 IN ()), ((((((((t0.c52)OR(rt0.c1)))AND(rt0.c2)))AND(t0.c52)))AND(t0.c52)));
SELECT SUM(count) FROM (SELECT (((((('')AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY SUBSTR((rt0.c2 IN ()), ((((((((t0.c52)OR(rt0.c1)))AND(rt0.c2)))AND(t0.c52)))AND(t0.c52))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((('')AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY SUBSTR((rt0.c2 IN ()), ((((((((t0.c52)OR(rt0.c1)))AND(rt0.c2)))AND(t0.c52)))AND(t0.c52)));
SELECT SUM(count) FROM (SELECT (((((('')AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 ORDER BY SUBSTR((rt0.c2 IN ()), ((((((((t0.c52)OR(rt0.c1)))AND(rt0.c2)))AND(t0.c52)))AND(t0.c52))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((('')AND(rt0.c1)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY SUBSTR((rt0.c2 IN ()), ((((((((t0.c52)OR(rt0.c1)))AND(rt0.c2)))AND(t0.c52)))AND(t0.c52)));
SELECT COUNT(*) FROM t0 WHERE (((((((NULL)AND(t0.c52)))OR(t0.c52)))<(t0.c52)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(t0.c52)))OR(t0.c52)))<(t0.c52))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((NULL)AND(t0.c52)))OR(t0.c52)))<(t0.c52)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(t0.c52)))OR(t0.c52)))<(t0.c52))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((NULL)AND(t0.c52)))OR(t0.c52)))<(t0.c52)));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON LENGTH('-851377633') WHERE (('X,' IN ())) ORDER BY TYPEOF(DISTINCT ((rt0.c1)<(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('X,' IN ())) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON LENGTH('-851377633') ORDER BY TYPEOF(DISTINCT ((rt0.c1)<(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON LENGTH('-851377633') WHERE (('X,' IN ())) ORDER BY TYPEOF(DISTINCT ((rt0.c1)<(rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((('X,' IN ())) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON LENGTH('-851377633') ORDER BY TYPEOF(DISTINCT ((rt0.c1)<(rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON LENGTH('-851377633') WHERE (('X,' IN ())) ORDER BY TYPEOF(DISTINCT ((rt0.c1)<(rt0.c2))) ASC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(t0.c52 AS BLOB)  WHEN ((rt0.c2) ISNULL) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c52 AS BLOB)  WHEN ((rt0.c2) ISNULL) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(t0.c52 AS BLOB)  WHEN ((rt0.c2) ISNULL) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c52 AS BLOB)  WHEN ((rt0.c2) ISNULL) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE CAST(t0.c52 AS BLOB)  WHEN ((rt0.c2) ISNULL) THEN (rt0.c1 IN ()) END);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND('')))OR(((rt0.c3)IS(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND('')))OR(((rt0.c3)IS(x''))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND('')))OR(((rt0.c3)IS(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND('')))OR(((rt0.c3)IS(x''))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND('')))OR(((rt0.c3)IS(x'')))));
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE (t0.c52 IN ())  WHEN vt0.c0 THEN IFNULL(rt0.c1, rt0.c1) END) ORDER BY 1.734482101E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c52 IN ())  WHEN vt0.c0 THEN IFNULL(rt0.c1, rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY 1.734482101E9 DESC);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE (t0.c52 IN ())  WHEN vt0.c0 THEN IFNULL(rt0.c1, rt0.c1) END) ORDER BY 1.734482101E9 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c52 IN ())  WHEN vt0.c0 THEN IFNULL(rt0.c1, rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0 ORDER BY 1.734482101E9 DESC);
SELECT COUNT(*) FROM vt0, rt0 NATURAL JOIN t0 WHERE (CASE (t0.c52 IN ())  WHEN vt0.c0 THEN IFNULL(rt0.c1, rt0.c1) END) ORDER BY 1.734482101E9 DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c52)) THEN CAST('Z1ݝQ' AS REAL) WHEN NULL THEN (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, t0.c52, rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c52)) THEN CAST('Z1ݝQ' AS REAL) WHEN NULL THEN (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, t0.c52, rt0.c1))) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c52)) THEN CAST('Z1ݝQ' AS REAL) WHEN NULL THEN (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, t0.c52, rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c52)) THEN CAST('Z1ݝQ' AS REAL) WHEN NULL THEN (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, t0.c52, rt0.c1))) END  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c1 WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c52)) THEN CAST('Z1ݝQ' AS REAL) WHEN NULL THEN (((rt0.c1, rt0.c2, rt0.c2))==((rt0.c1, t0.c52, rt0.c1))) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ((HEX(DISTINCT t0.c52)) ISNULL) WHERE (((((rt0.c2) ISNULL))IS(LOWER(DISTINCT rt0.c1)))) ORDER BY (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((json_remove(t0.c52, vt0.c0)))) ASC  NULLS FIRST, (((x'') NOT NULL) IN ((NOT (t0.c52)), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))IS(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 CROSS JOIN t0 ON ((HEX(DISTINCT t0.c52)) ISNULL) ORDER BY (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((json_remove(t0.c52, vt0.c0)))) ASC  NULLS FIRST, (((x'') NOT NULL) IN ((NOT (t0.c52)), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ((HEX(DISTINCT t0.c52)) ISNULL) WHERE (((((rt0.c2) ISNULL))IS(LOWER(DISTINCT rt0.c1)))) ORDER BY (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((json_remove(t0.c52, vt0.c0)))) ASC  NULLS FIRST, (((x'') NOT NULL) IN ((NOT (t0.c52)), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) ISNULL))IS(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 CROSS JOIN t0 ON ((HEX(DISTINCT t0.c52)) ISNULL) ORDER BY (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((json_remove(t0.c52, vt0.c0)))) ASC  NULLS FIRST, (((x'') NOT NULL) IN ((NOT (t0.c52)), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN t0 ON ((HEX(DISTINCT t0.c52)) ISNULL) WHERE (((((rt0.c2) ISNULL))IS(LOWER(DISTINCT rt0.c1)))) ORDER BY (((t0.c52)) NOT BETWEEN ((t0.c52)) AND ((json_remove(t0.c52, vt0.c0)))) ASC  NULLS FIRST, (((x'') NOT NULL) IN ((NOT (t0.c52)), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN '1㜋jK9ﳈ]' THEN ((rt0.c0)<(rt0.c1)) WHEN (rt0.c2 IN ()) THEN UNLIKELY(rt0.c3) WHEN (- (0.3857108596673654)) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE ((((vt0.c0)AND('715262310')))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1㜋jK9ﳈ]' THEN ((rt0.c0)<(rt0.c1)) WHEN (rt0.c2 IN ()) THEN UNLIKELY(rt0.c3) WHEN (- (0.3857108596673654)) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE ((((vt0.c0)AND('715262310')))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN '1㜋jK9ﳈ]' THEN ((rt0.c0)<(rt0.c1)) WHEN (rt0.c2 IN ()) THEN UNLIKELY(rt0.c3) WHEN (- (0.3857108596673654)) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE ((((vt0.c0)AND('715262310')))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '1㜋jK9ﳈ]' THEN ((rt0.c0)<(rt0.c1)) WHEN (rt0.c2 IN ()) THEN UNLIKELY(rt0.c3) WHEN (- (0.3857108596673654)) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE ((((vt0.c0)AND('715262310')))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN '1㜋jK9ﳈ]' THEN ((rt0.c0)<(rt0.c1)) WHEN (rt0.c2 IN ()) THEN UNLIKELY(rt0.c3) WHEN (- (0.3857108596673654)) THEN ((((vt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE ((((vt0.c0)AND('715262310')))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')))AND(((x'') NOT BETWEEN ('') AND (vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')))AND(((x'') NOT BETWEEN ('') AND (vt0.c0)))))OR(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')))AND(((x'') NOT BETWEEN ('') AND (vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')))AND(((x'') NOT BETWEEN ('') AND (vt0.c0)))))OR(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(x'')))AND(((x'') NOT BETWEEN ('') AND (vt0.c0)))))OR(((vt0.c0)>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (rt0.c3 IN ()) WHERE (((rt0.c3) IS TRUE) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))&(((rt0.c2) IS TRUE))) DESC, CASE ((rt0.c3)<<(t0.c52))  WHEN CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c52)) THEN (rt0.c3 IN (rt0.c0)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))<=((rt0.c2))) END, ((((rt0.c0) BETWEEN (rt0.c2) AND ('-980682251'))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (rt0.c3 IN ()) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))&(((rt0.c2) IS TRUE))) DESC, CASE ((rt0.c3)<<(t0.c52))  WHEN CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c52)) THEN (rt0.c3 IN (rt0.c0)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))<=((rt0.c2))) END, ((((rt0.c0) BETWEEN (rt0.c2) AND ('-980682251'))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (rt0.c3 IN ()) WHERE (((rt0.c3) IS TRUE) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))&(((rt0.c2) IS TRUE))) DESC, CASE ((rt0.c3)<<(t0.c52))  WHEN CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c52)) THEN (rt0.c3 IN (rt0.c0)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))<=((rt0.c2))) END, ((((rt0.c0) BETWEEN (rt0.c2) AND ('-980682251'))) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (rt0.c3 IN ()) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))&(((rt0.c2) IS TRUE))) DESC, CASE ((rt0.c3)<<(t0.c52))  WHEN CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c52)) THEN (rt0.c3 IN (rt0.c0)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))<=((rt0.c2))) END, ((((rt0.c0) BETWEEN (rt0.c2) AND ('-980682251'))) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON (rt0.c3 IN ()) WHERE (((rt0.c3) IS TRUE) COLLATE RTRIM) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))&(((rt0.c2) IS TRUE))) DESC, CASE ((rt0.c3)<<(t0.c52))  WHEN CASE WHEN t0.c52 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN rt0.c0 COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (t0.c52)) THEN (rt0.c3 IN (rt0.c0)) WHEN ((rt0.c2)!=(rt0.c0)) THEN (((rt0.c0))<=((rt0.c2))) END, ((((rt0.c0) BETWEEN (rt0.c2) AND ('-980682251'))) IS FALSE) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c52 RIGHT OUTER JOIN vt0 ON json_array_length(((t0.c52)GLOB(rt0.c2)), LIKELIHOOD(rt0.c1, 0.1394708974232397)) WHERE (NULLIF(t0.c52, vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c52, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c52 RIGHT OUTER JOIN vt0 ON json_array_length(((t0.c52)GLOB(rt0.c2)), LIKELIHOOD(rt0.c1, 0.1394708974232397)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON t0.c52 RIGHT OUTER JOIN vt0 ON json_array_length(((t0.c52)GLOB(rt0.c2)), LIKELIHOOD(rt0.c1, 0.1394708974232397)) WHERE (NULLIF(t0.c52, vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c52, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON t0.c52 RIGHT OUTER JOIN vt0 ON json_array_length(((t0.c52)GLOB(rt0.c2)), LIKELIHOOD(rt0.c1, 0.1394708974232397)));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c52)<=(t0.c52)) IN ())) ORDER BY (NOT (((t0.c52)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c52)<=(t0.c52)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((t0.c52)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c52)<=(t0.c52)) IN ())) ORDER BY (NOT (((t0.c52)IS NOT(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c52)<=(t0.c52)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (((t0.c52)IS NOT(vt0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c52)<=(t0.c52)) IN ())) ORDER BY (NOT (((t0.c52)IS NOT(vt0.c0)))) DESC;
SELECT * FROM vt0, t0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c52)||(t0.c52)))AND(LOWER(t0.c52))))OR(ABS(t0.c52))))OR(NULLIF(t0.c52, t0.c52))))OR('' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52)||(t0.c52)))AND(LOWER(t0.c52))))OR(ABS(t0.c52))))OR(NULLIF(t0.c52, t0.c52))))OR('' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c52)||(t0.c52)))AND(LOWER(t0.c52))))OR(ABS(t0.c52))))OR(NULLIF(t0.c52, t0.c52))))OR('' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c52)||(t0.c52)))AND(LOWER(t0.c52))))OR(ABS(t0.c52))))OR(NULLIF(t0.c52, t0.c52))))OR('' COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c52)||(t0.c52)))AND(LOWER(t0.c52))))OR(ABS(t0.c52))))OR(NULLIF(t0.c52, t0.c52))))OR('' COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c3)>=(x'')) IN ()) WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c3)>=(x'')) IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c3)>=(x'')) IN ()) WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((rt0.c3)>=(x'')) IN ()));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((rt0.c3)>=(x'')) IN ()) WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>=(0.03199693214507726)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=(0.03199693214507726)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>=(0.03199693214507726)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=(0.03199693214507726)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>=(0.03199693214507726)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c52 IN (rt0.c3, rt0.c2)))|(rt0.c3 COLLATE RTRIM)) WHERE ((- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c52 IN (rt0.c3, rt0.c2)))|(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c52 IN (rt0.c3, rt0.c2)))|(rt0.c3 COLLATE RTRIM)) WHERE ((- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c52 IN (rt0.c3, rt0.c2)))|(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c52 IN (rt0.c3, rt0.c2)))|(rt0.c3 COLLATE RTRIM)) WHERE ((- (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM t0, vt0, rt0 WHERE (((TYPEOF(rt0.c0))||((((vt0.c0))<>((t0.c52))))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0))||((((vt0.c0))<>((t0.c52)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((TYPEOF(rt0.c0))||((((vt0.c0))<>((t0.c52))))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0))||((((vt0.c0))<>((t0.c52)))))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT * FROM t0, vt0, rt0 WHERE (((TYPEOF(rt0.c0))||((((vt0.c0))<>((t0.c52))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'');
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC);
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC);
SELECT * FROM t0, rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c2) NOT NULL)) IS TRUE) ASC;
SELECT ALL * FROM vt0 WHERE ((((('')<(vt0.c0)))%((vt0.c0 IN ())))) ORDER BY '-524862801' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('')<(vt0.c0)))%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '-524862801' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('')<(vt0.c0)))%((vt0.c0 IN ())))) ORDER BY '-524862801' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('')<(vt0.c0)))%((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY '-524862801' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((('')<(vt0.c0)))%((vt0.c0 IN ())))) ORDER BY '-524862801' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((('521354623', vt0.c0, '|+(E^ꂜaX%')) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'', rt0.c0, t0.c52))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((('521354623', vt0.c0, '|+(E^ꂜaX%')) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'', rt0.c0, t0.c52))) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((('521354623', vt0.c0, '|+(E^ꂜaX%')) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'', rt0.c0, t0.c52))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((('521354623', vt0.c0, '|+(E^ꂜaX%')) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'', rt0.c0, t0.c52))) AS TEXT)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((('521354623', vt0.c0, '|+(E^ꂜaX%')) NOT BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((x'', rt0.c0, t0.c52))) AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((NULL)*(x'c95a')))LIKE(((t0.c52)|(vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((NULL)*(x'c95a')))LIKE(((t0.c52)|(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((NULL)*(x'c95a')))LIKE(((t0.c52)|(vt0.c0)))) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t0, vt0 CROSS JOIN rt0 ON ((((NULL)*(x'c95a')))LIKE(((t0.c52)|(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 CROSS JOIN rt0 ON ((((NULL)*(x'c95a')))LIKE(((t0.c52)|(vt0.c0)))) WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((rt0.c1)<<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE WHERE (((((('f6')AND(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((('f6')AND(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((rt0.c1)<<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((rt0.c1)<<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE WHERE (((((('f6')AND(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((('f6')AND(rt0.c1)))AND(rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((rt0.c1)<<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((rt0.c1)<<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE WHERE (((((('f6')AND(rt0.c1)))AND(rt0.c3)) IN ()));
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((x'')OR((((t0.c52)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((+ (rt0.c3))))) ORDER BY (((((vt0.c0))<((t0.c52)))) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c3)))%((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, 'js', rt0.c2)) AND ((t0.c52, vt0.c0, x''))))), (t0.c52 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((((t0.c52)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c0))<((t0.c52)))) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c3)))%((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, 'js', rt0.c2)) AND ((t0.c52, vt0.c0, x''))))), (t0.c52 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((x'')OR((((t0.c52)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((+ (rt0.c3))))) ORDER BY (((((vt0.c0))<((t0.c52)))) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c3)))%((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, 'js', rt0.c2)) AND ((t0.c52, vt0.c0, x''))))), (t0.c52 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((((t0.c52)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY (((((vt0.c0))<((t0.c52)))) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c3)))%((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, 'js', rt0.c2)) AND ((t0.c52, vt0.c0, x''))))), (t0.c52 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((x'')OR((((t0.c52)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))))AND((+ (rt0.c3))))) ORDER BY (((((vt0.c0))<((t0.c52)))) BETWEEN ((- (rt0.c2))) AND (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, ((((rt0.c1)>(rt0.c3)))%((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, 'js', rt0.c2)) AND ((t0.c52, vt0.c0, x''))))), (t0.c52 IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((ROUND(t0.c52, t0.c52))AND(CAST(t0.c52 AS BLOB))))OR(t0.c52))) ORDER BY ((((((t0.c52)<>('!⁈')))OR(CASE WHEN 0.9432330559685884 THEN t0.c52 END)))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST, (~ ('SFZQB' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((ROUND(t0.c52, t0.c52))AND(CAST(t0.c52 AS BLOB))))OR(t0.c52))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)<>('!⁈')))OR(CASE WHEN 0.9432330559685884 THEN t0.c52 END)))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST, (~ ('SFZQB' COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((ROUND(t0.c52, t0.c52))AND(CAST(t0.c52 AS BLOB))))OR(t0.c52))) ORDER BY ((((((t0.c52)<>('!⁈')))OR(CASE WHEN 0.9432330559685884 THEN t0.c52 END)))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST, (~ ('SFZQB' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((ROUND(t0.c52, t0.c52))AND(CAST(t0.c52 AS BLOB))))OR(t0.c52))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c52)<>('!⁈')))OR(CASE WHEN 0.9432330559685884 THEN t0.c52 END)))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST, (~ ('SFZQB' COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((ROUND(t0.c52, t0.c52))AND(CAST(t0.c52 AS BLOB))))OR(t0.c52))) ORDER BY ((((((t0.c52)<>('!⁈')))OR(CASE WHEN 0.9432330559685884 THEN t0.c52 END)))OR(((t0.c52) NOT BETWEEN (t0.c52) AND (t0.c52))))  NULLS LAST, (~ ('SFZQB' COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ('}.+	kY_빣4');
SELECT SUM(count) FROM (SELECT ALL (('}.+	kY_빣4') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('}.+	kY_빣4');
SELECT SUM(count) FROM (SELECT ALL (('}.+	kY_빣4') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('}.+	kY_빣4');
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c3, t0.c52))))!=(((t0.c52) ISNULL)))) ORDER BY CAST(((rt0.c2)|(t0.c52)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c3, t0.c52))))<>(((t0.c52) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((rt0.c2)|(t0.c52)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c3, t0.c52))))!=(((t0.c52) ISNULL)))) ORDER BY CAST(((rt0.c2)|(t0.c52)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c3, t0.c52))))<>(((t0.c52) ISNULL)))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY CAST(((rt0.c2)|(t0.c52)) AS BLOB) DESC);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE ((((((rt0.c1, rt0.c1, t0.c52)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((vt0.c0, rt0.c3, t0.c52))))!=(((t0.c52) ISNULL)))) ORDER BY CAST(((rt0.c2)|(t0.c52)) AS BLOB) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c52 IN ()))%((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN ()))%((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c52 IN ()))%((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c52 IN ()))%((- (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c52 IN ()))%((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, json_array(vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB((~ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, json_array(vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB((~ (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, json_array(vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB((~ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, json_array(vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB((~ (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER)) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM DESC, json_array(vt0.c0, vt0.c0) COLLATE NOCASE  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)GLOB((~ (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM WHERE (((rt0.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM WHERE (((rt0.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM WHERE (((rt0.c3) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.638343298999746);
SELECT SUM(count) FROM (SELECT ((0.638343298999746) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.638343298999746);
SELECT SUM(count) FROM (SELECT ((0.638343298999746) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (0.638343298999746);
SELECT * FROM rt0 WHERE ((((- (746696994)))&(((rt0.c0) NOT BETWEEN (rt0.c3) AND (x''))))) ORDER BY (((((rt0.c2))<((rt0.c0))))*(load_extension(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (746696994)))&(((rt0.c0) NOT BETWEEN (rt0.c3) AND (x''))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c0))))*(load_extension(rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((- (746696994)))&(((rt0.c0) NOT BETWEEN (rt0.c3) AND (x''))))) ORDER BY (((((rt0.c2))<((rt0.c0))))*(load_extension(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (746696994)))&(((rt0.c0) NOT BETWEEN (rt0.c3) AND (x''))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))<((rt0.c0))))*(load_extension(rt0.c0)))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<=(((rt0.c0)<=(rt0.c1))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)<=(((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<=(((rt0.c0)<=(rt0.c1))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)<=(((rt0.c0)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)<=(((rt0.c0)<=(rt0.c1))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)/(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)/(rt0.c2)) IN ()));
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (CAST(t0.c52 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c52 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (CAST(t0.c52 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c52 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt0);
SELECT * FROM t0, vt0 NATURAL JOIN rt0 WHERE (CAST(t0.c52 AS TEXT) COLLATE RTRIM);
SELECT * FROM vt0, t0, rt0 WHERE (((((NULL)AND((+ (rt0.c0)))))OR('*䙙')));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((+ (rt0.c0)))))OR('*䙙'))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((NULL)AND((+ (rt0.c0)))))OR('*䙙')));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((+ (rt0.c0)))))OR('*䙙'))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((NULL)AND((+ (rt0.c0)))))OR('*䙙')));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c52) IS FALSE) COLLATE BINARY COLLATE RTRIM) ORDER BY NULL ASC, ((((((((UPPER(DISTINCT t0.c52))AND(((t0.c52)-(t0.c52)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52) IS FALSE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC, ((((((((UPPER(DISTINCT t0.c52))AND(((t0.c52)-(t0.c52)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c52) IS FALSE) COLLATE BINARY COLLATE RTRIM) ORDER BY NULL ASC, ((((((((UPPER(DISTINCT t0.c52))AND(((t0.c52)-(t0.c52)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52) IS FALSE) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY NULL ASC, ((((((((UPPER(DISTINCT t0.c52))AND(((t0.c52)-(t0.c52)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)<>(vt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c52) IS FALSE) COLLATE BINARY COLLATE RTRIM) ORDER BY NULL ASC, ((((((((UPPER(DISTINCT t0.c52))AND(((t0.c52)-(t0.c52)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0)!=(vt0.c0)))))AND(((vt0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i90, vt0, t0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 INDEXED BY i90, vt0, t0);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i90, vt0, t0 WHERE (CAST(((rt0.c1) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0 INDEXED BY i90, vt0, t0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c1) AND ('716943998')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c1) AND ('716943998'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c1) AND ('716943998')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c1) AND ('716943998'))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c1) AND ('716943998')));
SELECT * FROM t0 WHERE (0.8058761257684562) ORDER BY DATETIME(((t0.c52) BETWEEN (t0.c52) AND (t0.c52)), CAST(t0.c52 AS NUMERIC), CAST(t0.c52 AS REAL)), CASE WHEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END THEN ((t0.c52)>(t0.c52)) WHEN ((t0.c52) NOT NULL) THEN ((t0.c52)AND(0.40790562203022374)) WHEN (NOT (t0.c52)) THEN (- (t0.c52)) END ASC;
SELECT SUM(count) FROM (SELECT ((0.8058761257684562) IS TRUE)  as count FROM t0 ORDER BY DATETIME(((t0.c52) BETWEEN (t0.c52) AND (t0.c52)), CAST(t0.c52 AS NUMERIC), CAST(t0.c52 AS REAL)), CASE WHEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END THEN ((t0.c52)>(t0.c52)) WHEN ((t0.c52) NOT NULL) THEN ((t0.c52)AND(0.40790562203022374)) WHEN (NOT (t0.c52)) THEN (- (t0.c52)) END ASC);
SELECT * FROM t0 WHERE (0.8058761257684562) ORDER BY DATETIME(((t0.c52) BETWEEN (t0.c52) AND (t0.c52)), CAST(t0.c52 AS NUMERIC), CAST(t0.c52 AS REAL)), CASE WHEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END THEN ((t0.c52)>(t0.c52)) WHEN ((t0.c52) NOT NULL) THEN ((t0.c52)AND(0.40790562203022374)) WHEN (NOT (t0.c52)) THEN (- (t0.c52)) END ASC;
SELECT SUM(count) FROM (SELECT ((0.8058761257684562) IS TRUE)  as count FROM t0 ORDER BY DATETIME(((t0.c52) BETWEEN (t0.c52) AND (t0.c52)), CAST(t0.c52 AS NUMERIC), CAST(t0.c52 AS REAL)), CASE WHEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END THEN ((t0.c52)>(t0.c52)) WHEN ((t0.c52) NOT NULL) THEN ((t0.c52)AND(0.40790562203022374)) WHEN (NOT (t0.c52)) THEN (- (t0.c52)) END ASC);
SELECT * FROM t0 WHERE (0.8058761257684562) ORDER BY DATETIME(((t0.c52) BETWEEN (t0.c52) AND (t0.c52)), CAST(t0.c52 AS NUMERIC), CAST(t0.c52 AS REAL)), CASE WHEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END THEN ((t0.c52)>(t0.c52)) WHEN ((t0.c52) NOT NULL) THEN ((t0.c52)AND(0.40790562203022374)) WHEN (NOT (t0.c52)) THEN (- (t0.c52)) END ASC;
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ABS(vt0.c0)))=((NULL, x'aca6' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, CASE (- (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ABS(vt0.c0)))=((NULL, x'aca6' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, CASE (- (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ABS(vt0.c0)))=((NULL, x'aca6' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, CASE (- (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ABS(vt0.c0)))=((NULL, x'aca6' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, CASE (- (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (CAST(vt0.c0 AS BLOB)) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c0 AS REAL), ABS(vt0.c0)))=((NULL, x'aca6' COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, CASE (- (vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<<(vt0.c0)) END  NULLS LAST;
SELECT * FROM rt0, vt0, t0 WHERE (((((((((vt0.c0)AND(((vt0.c0)>=(t0.c52)))))AND((((rt0.c1))>=((rt0.c0))))))OR(((t0.c52)==(rt0.c2)))))OR('810789997' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(((vt0.c0)>=(t0.c52)))))AND((((rt0.c1))>=((rt0.c0))))))OR(((t0.c52)=(rt0.c2)))))OR('810789997' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((((((vt0.c0)AND(((vt0.c0)>=(t0.c52)))))AND((((rt0.c1))>=((rt0.c0))))))OR(((t0.c52)==(rt0.c2)))))OR('810789997' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(((vt0.c0)>=(t0.c52)))))AND((((rt0.c1))>=((rt0.c0))))))OR(((t0.c52)=(rt0.c2)))))OR('810789997' COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT * FROM rt0, vt0, t0 WHERE (((((((((vt0.c0)AND(((vt0.c0)>=(t0.c52)))))AND((((rt0.c1))>=((rt0.c0))))))OR(((t0.c52)==(rt0.c2)))))OR('810789997' COLLATE BINARY)));
SELECT * FROM t0, rt0 WHERE ((((rt0.c3, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (- (0.07294658161095524)), (rt0.c3 IN ()))) AND ((rt0.c0, rt0.c0 COLLATE NOCASE, TRIM(DISTINCT rt0.c0))))) ORDER BY (((CAST(rt0.c2 AS INTEGER)))<((((((t0.c52)AND('-1e500')))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (- (0.07294658161095524)), (rt0.c3 IN ()))) AND ((rt0.c0, rt0.c0 COLLATE NOCASE, TRIM(DISTINCT rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS INTEGER)))<((((((t0.c52)AND('-1e500')))AND(rt0.c1))))));
SELECT * FROM t0, rt0 WHERE ((((rt0.c3, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (- (0.07294658161095524)), (rt0.c3 IN ()))) AND ((rt0.c0, rt0.c0 COLLATE NOCASE, TRIM(DISTINCT rt0.c0))))) ORDER BY (((CAST(rt0.c2 AS INTEGER)))<((((((t0.c52)AND('-1e500')))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (- (0.07294658161095524)), (rt0.c3 IN ()))) AND ((rt0.c0, rt0.c0 COLLATE NOCASE, TRIM(DISTINCT rt0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((CAST(rt0.c2 AS INTEGER)))<((((((t0.c52)AND('-1e500')))AND(rt0.c1))))));
SELECT * FROM t0, rt0 WHERE ((((rt0.c3, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, (- (0.07294658161095524)), (rt0.c3 IN ()))) AND ((rt0.c0, rt0.c0 COLLATE NOCASE, TRIM(DISTINCT rt0.c0))))) ORDER BY (((CAST(rt0.c2 AS INTEGER)))<((((((t0.c52)AND('-1e500')))AND(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CAST(0.3641922347677776 AS TEXT))OR(0.18148546253847486)))AND((('a빼CUsPqhh') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((CAST(0.3641922347677776 AS TEXT))OR(0.18148546253847486)))AND((('a빼CUsPqhh') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY NULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CAST(0.3641922347677776 AS TEXT))OR(0.18148546253847486)))AND((('a빼CUsPqhh') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((CAST(0.3641922347677776 AS TEXT))OR(0.18148546253847486)))AND((('a빼CUsPqhh') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY NULL);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((CAST(0.3641922347677776 AS TEXT))OR(0.18148546253847486)))AND((('a빼CUsPqhh') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY NULL;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)||(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL))) ORDER BY rt0.c3 COLLATE BINARY ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c3 COLLATE BINARY ASC, rt0.c1);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)||(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL))) ORDER BY rt0.c3 COLLATE BINARY ASC, rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c3 COLLATE BINARY ASC, rt0.c1);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)||(rt0.c1))) NOT BETWEEN (TRIM(rt0.c1)) AND (NULL))) ORDER BY rt0.c3 COLLATE BINARY ASC, rt0.c1;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)*(t0.c52)))&(((rt0.c1) IS TRUE)))) ORDER BY ((CAST(t0.c52 AS INTEGER))GLOB(((vt0.c0)*(vt0.c0)))), '<|' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)*(t0.c52)))&(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(t0.c52 AS INTEGER))GLOB(((vt0.c0)*(vt0.c0)))), '<|' DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)*(t0.c52)))&(((rt0.c1) IS TRUE)))) ORDER BY ((CAST(t0.c52 AS INTEGER))GLOB(((vt0.c0)*(vt0.c0)))), '<|' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)*(t0.c52)))&(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY ((CAST(t0.c52 AS INTEGER))GLOB(((vt0.c0)*(vt0.c0)))), '<|' DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)*(t0.c52)))&(((rt0.c1) IS TRUE)))) ORDER BY ((CAST(t0.c52 AS INTEGER))GLOB(((vt0.c0)*(vt0.c0)))), '<|' DESC;
SELECT ALL * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((CASE rt0.c2  WHEN x'3a4eb01c' THEN rt0.c2 ELSE 0Xffffffff96ac61e8 END)%(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c2  WHEN x'3a4eb01c' THEN rt0.c2 ELSE 0Xffffffff96ac61e8 END)%(((rt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((CASE rt0.c2  WHEN x'3a4eb01c' THEN rt0.c2 ELSE 0Xffffffff96ac61e8 END)%(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE rt0.c2  WHEN x'3a4eb01c' THEN rt0.c2 ELSE 0Xffffffff96ac61e8 END)%(((rt0.c0) ISNULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((CASE rt0.c2  WHEN x'3a4eb01c' THEN rt0.c2 ELSE 0Xffffffff96ac61e8 END)%(((rt0.c0) ISNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST((1.563522567E9 IN ()) AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) ORDER BY DATE(NULL, ((rt0.c2)AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))AND(x''))) DESC, CAST(('2025748645' IN ()) AS NUMERIC)  NULLS FIRST, (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST((1.563522567E9 IN ()) AS NUMERIC) ORDER BY DATE(NULL, ((rt0.c2)AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))AND(x''))) DESC, CAST(('2025748645' IN ()) AS NUMERIC)  NULLS FIRST, (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST((1.563522567E9 IN ()) AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) ORDER BY DATE(NULL, ((rt0.c2)AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))AND(x''))) DESC, CAST(('2025748645' IN ()) AS NUMERIC)  NULLS FIRST, (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST((1.563522567E9 IN ()) AS NUMERIC) ORDER BY DATE(NULL, ((rt0.c2)AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))AND(x''))) DESC, CAST(('2025748645' IN ()) AS NUMERIC)  NULLS FIRST, (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST((1.563522567E9 IN ()) AS NUMERIC) WHERE (((rt0.c2 COLLATE BINARY) NOT NULL)) ORDER BY DATE(NULL, ((rt0.c2)AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))AND(x''))) DESC, CAST(('2025748645' IN ()) AS NUMERIC)  NULLS FIRST, (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT * FROM t0, rt0, vt0 WHERE (CASE ((((t0.c52)OR(vt0.c0)))OR(vt0.c0))  WHEN ((rt0.c0)<<(t0.c52)) THEN CAST(rt0.c3 AS BLOB) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 WHEN ((((0.44492442690389744)AND(rt0.c3)))OR(vt0.c0)) THEN NULL ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c52)OR(vt0.c0)))OR(vt0.c0))  WHEN ((rt0.c0)<<(t0.c52)) THEN CAST(rt0.c3 AS BLOB) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 WHEN ((((0.44492442690389744)AND(rt0.c3)))OR(vt0.c0)) THEN NULL ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE ((((t0.c52)OR(vt0.c0)))OR(vt0.c0))  WHEN ((rt0.c0)<<(t0.c52)) THEN CAST(rt0.c3 AS BLOB) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 WHEN ((((0.44492442690389744)AND(rt0.c3)))OR(vt0.c0)) THEN NULL ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c52)OR(vt0.c0)))OR(vt0.c0))  WHEN ((rt0.c0)<<(t0.c52)) THEN CAST(rt0.c3 AS BLOB) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 WHEN ((((0.44492442690389744)AND(rt0.c3)))OR(vt0.c0)) THEN NULL ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (CASE ((((t0.c52)OR(vt0.c0)))OR(vt0.c0))  WHEN ((rt0.c0)<<(t0.c52)) THEN CAST(rt0.c3 AS BLOB) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 WHEN ((((0.44492442690389744)AND(rt0.c3)))OR(vt0.c0)) THEN NULL ELSE rt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (SQLITE_VERSION());
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)IS(t0.c52))) AND (rt0.c3))) ORDER BY (NOT ((t0.c52 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)IS(t0.c52))) AND (rt0.c3))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT ((t0.c52 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)IS(t0.c52))) AND (rt0.c3))) ORDER BY (NOT ((t0.c52 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)IS(t0.c52))) AND (rt0.c3))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY (NOT ((t0.c52 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)IS(t0.c52))) AND (rt0.c3))) ORDER BY (NOT ((t0.c52 IN ()))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)*(((((((((x'')AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (LIKELY(DISTINCT 0xfffffffffe6a2e89) COLLATE NOCASE) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))==(((rt0.c1 IN (rt0.c1, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT 0Xfffffffffe6a2e89) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))=(((rt0.c1 IN (rt0.c1, rt0.c0))))) ASC);
SELECT * FROM rt0, vt0 WHERE (LIKELY(DISTINCT 0xfffffffffe6a2e89) COLLATE NOCASE) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))==(((rt0.c1 IN (rt0.c1, rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT 0Xfffffffffe6a2e89) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))=(((rt0.c1 IN (rt0.c1, rt0.c0))))) ASC);
SELECT * FROM rt0, vt0 WHERE (LIKELY(DISTINCT 0xfffffffffe6a2e89) COLLATE NOCASE) ORDER BY (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))==(((rt0.c1 IN (rt0.c1, rt0.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c3 THEN rt0.c3 END COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (((((- (rt0.c1)))OR(0.18421665815421717 COLLATE BINARY)))AND(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c1)))OR(0.18421665815421717 COLLATE BINARY)))AND(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (((((- (rt0.c1)))OR(0.18421665815421717 COLLATE BINARY)))AND(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c1)))OR(0.18421665815421717 COLLATE BINARY)))AND(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (((((- (rt0.c1)))OR(0.18421665815421717 COLLATE BINARY)))AND(((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(NULL)))AND(rt0.c1))));
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('-346487191');
SELECT SUM(count) FROM (SELECT (('-346487191') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('-346487191');
SELECT SUM(count) FROM (SELECT (('-346487191') IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ('-346487191');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)<=(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)) WHERE ((((((vt0.c0)|(x''))))<((CAST(rt0.c0 AS NUMERIC))))) ORDER BY CAST(UNLIKELY(rt0.c2) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(x''))))<((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)<=(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)) ORDER BY CAST(UNLIKELY(rt0.c2) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)<=(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)) WHERE ((((((vt0.c0)|(x''))))<((CAST(rt0.c0 AS NUMERIC))))) ORDER BY CAST(UNLIKELY(rt0.c2) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(x''))))<((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)<=(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)) ORDER BY CAST(UNLIKELY(rt0.c2) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)<=(CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 END)) WHERE ((((((vt0.c0)|(x''))))<((CAST(rt0.c0 AS NUMERIC))))) ORDER BY CAST(UNLIKELY(rt0.c2) AS REAL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c52))) NOT BETWEEN ((t0.c52 IN ())) AND (((((t0.c52)AND(0.8100227886513738)))AND(t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c52))) NOT BETWEEN ((t0.c52 IN ())) AND (((((t0.c52)AND(0.8100227886513738)))AND(t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c52))) NOT BETWEEN ((t0.c52 IN ())) AND (((((t0.c52)AND(0.8100227886513738)))AND(t0.c52)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c52))) NOT BETWEEN ((t0.c52 IN ())) AND (((((t0.c52)AND(0.8100227886513738)))AND(t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c52))) NOT BETWEEN ((t0.c52 IN ())) AND (((((t0.c52)AND(0.8100227886513738)))AND(t0.c52)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c52) ORDER BY ((STRFTIME(vt0.c0, t0.c52, vt0.c0))IS NOT(CASE WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) ASC  NULLS LAST, (NOT ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, vt0 ORDER BY ((STRFTIME(vt0.c0, t0.c52, vt0.c0))IS NOT(CASE WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) ASC  NULLS LAST, (NOT ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c52) ORDER BY ((STRFTIME(vt0.c0, t0.c52, vt0.c0))IS NOT(CASE WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) ASC  NULLS LAST, (NOT ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, vt0 ORDER BY ((STRFTIME(vt0.c0, t0.c52, vt0.c0))IS NOT(CASE WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) ASC  NULLS LAST, (NOT ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c52) ORDER BY ((STRFTIME(vt0.c0, t0.c52, vt0.c0))IS NOT(CASE WHEN t0.c52 THEN t0.c52 WHEN vt0.c0 THEN t0.c52 WHEN vt0.c0 THEN vt0.c0 ELSE t0.c52 END)) ASC  NULLS LAST, (NOT ((+ (vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c52) NOT BETWEEN (x'e2ba') AND (t0.c52))  WHEN (((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) THEN ((t0.c52) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c52) NOT BETWEEN (x'e2ba') AND (t0.c52))  WHEN (((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) THEN ((t0.c52) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c52) NOT BETWEEN (x'e2ba') AND (t0.c52))  WHEN (((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) THEN ((t0.c52) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c52) NOT BETWEEN (x'e2ba') AND (t0.c52))  WHEN (((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) THEN ((t0.c52) IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c52) NOT BETWEEN (x'e2ba') AND (t0.c52))  WHEN (((t0.c52)) BETWEEN ((t0.c52)) AND ((t0.c52))) THEN ((t0.c52) IS FALSE) END);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c0))<((vt0.c0, 'SH', rt0.c3))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c0))<((vt0.c0, 'SH', rt0.c3))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c0))<((vt0.c0, 'SH', rt0.c3))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c0))<((vt0.c0, 'SH', rt0.c3))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c0, vt0.c0, rt0.c0))<((vt0.c0, 'SH', rt0.c3))))) AND ((CASE WHEN vt0.c0 THEN rt0.c2 END))));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) WHERE (((CASE WHEN vt0.c0 THEN t0.c52 END)||(((((((((vt0.c0)OR(0xffffffff82dfc567)))AND(t0.c52)))OR(vt0.c0)))OR(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c52 END)||(((((((((vt0.c0)OR(0xffffffff82dfc567)))AND(t0.c52)))OR(vt0.c0)))OR(t0.c52))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) WHERE (((CASE WHEN vt0.c0 THEN t0.c52 END)||(((((((((vt0.c0)OR(0xffffffff82dfc567)))AND(t0.c52)))OR(vt0.c0)))OR(t0.c52)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN t0.c52 END)||(((((((((vt0.c0)OR(0xffffffff82dfc567)))AND(t0.c52)))OR(vt0.c0)))OR(t0.c52))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) WHERE (((CASE WHEN vt0.c0 THEN t0.c52 END)||(((((((((vt0.c0)OR(0xffffffff82dfc567)))AND(t0.c52)))OR(vt0.c0)))OR(t0.c52)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END IN (((rt0.c3)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END IN (((rt0.c3)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END IN (((rt0.c3)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END IN (((rt0.c3)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END IN (((rt0.c3)IS NOT(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c52)>((((rt0.c2, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52)>((((rt0.c2, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c52)>((((rt0.c2, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c52)>((((rt0.c2, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c52)>((((rt0.c2, t0.c52, rt0.c3))<=((rt0.c0, rt0.c1, rt0.c2))))));
SELECT ALL * FROM t0 WHERE (((('' IN (t0.c52))) NOT BETWEEN (((NULL) IS TRUE)) AND ((NOT (t0.c52)))));
SELECT SUM(count) FROM (SELECT ((((('' IN (t0.c52))) NOT BETWEEN (((NULL) IS TRUE)) AND ((NOT (t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('' IN (t0.c52))) NOT BETWEEN (((NULL) IS TRUE)) AND ((NOT (t0.c52)))));
SELECT SUM(count) FROM (SELECT ((((('' IN (t0.c52))) NOT BETWEEN (((NULL) IS TRUE)) AND ((NOT (t0.c52))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((('' IN (t0.c52))) NOT BETWEEN (((NULL) IS TRUE)) AND ((NOT (t0.c52)))));
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((rt0.c0)||(rt0.c2)))>>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (- (rt0.c0)) END) ORDER BY (~ (((rt0.c1)|(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((rt0.c0)||(rt0.c2)))>>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) ORDER BY (~ (((rt0.c1)|(rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((rt0.c0)||(rt0.c2)))>>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (- (rt0.c0)) END) ORDER BY (~ (((rt0.c1)|(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON ((((rt0.c0)||(rt0.c2)))>>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) ORDER BY (~ (((rt0.c1)|(rt0.c3)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt0 ON ((((rt0.c0)||(rt0.c2)))>>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)) WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) ISNULL) ELSE (- (rt0.c0)) END) ORDER BY (~ (((rt0.c1)|(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY (+ (((rt0.c2)>(rt0.c3)))) DESC, ((((rt0.c0)LIKE(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c2)>(rt0.c3)))) DESC, ((((rt0.c0)LIKE(rt0.c3))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY (+ (((rt0.c2)>(rt0.c3)))) DESC, ((((rt0.c0)LIKE(rt0.c3))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((rt0.c2)>(rt0.c3)))) DESC, ((((rt0.c0)LIKE(rt0.c3))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY (+ (((rt0.c2)>(rt0.c3)))) DESC, ((((rt0.c0)LIKE(rt0.c3))) NOT NULL);
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(DISTINCT vt0.c0)  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c0)  WHEN (- (vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM t0, vt0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c52);
SELECT SUM(count) FROM (SELECT ((t0.c52) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c52);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))<=((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(vt0.c0))))<=((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))<=((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS NOT(vt0.c0))))<=((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((vt0.c0)IS NOT(vt0.c0))))<=((COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) IS TRUE) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) IS TRUE) END) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) IS TRUE) END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON rt0.c2 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(0.98260502107511, t0.c52))) AND ((TYPEOF(DISTINCT rt0.c1)))) WHERE ((((('嶆Te!h|KR')OR((((t0.c52, vt0.c0, rt0.c0))>=((t0.c52, t0.c52, 0.48476763300045767))))))AND(rt0.c1))) ORDER BY ((((vt0.c0)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(json_extract(rt0.c0, vt0.c0))), COALESCE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), TYPEOF(DISTINCT rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('嶆Te!h|KR')OR((((t0.c52, vt0.c0, rt0.c0))>=((t0.c52, t0.c52, 0.48476763300045767))))))AND(rt0.c1))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON rt0.c2 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(0.98260502107511, t0.c52))) AND ((TYPEOF(DISTINCT rt0.c1)))) ORDER BY ((((vt0.c0)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(json_extract(rt0.c0, vt0.c0))), COALESCE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), TYPEOF(DISTINCT rt0.c2))  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON rt0.c2 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(0.98260502107511, t0.c52))) AND ((TYPEOF(DISTINCT rt0.c1)))) WHERE ((((('嶆Te!h|KR')OR((((t0.c52, vt0.c0, rt0.c0))>=((t0.c52, t0.c52, 0.48476763300045767))))))AND(rt0.c1))) ORDER BY ((((vt0.c0)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(json_extract(rt0.c0, vt0.c0))), COALESCE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), TYPEOF(DISTINCT rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('嶆Te!h|KR')OR((((t0.c52, vt0.c0, rt0.c0))>=((t0.c52, t0.c52, 0.48476763300045767))))))AND(rt0.c1))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON rt0.c2 INNER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((json_array_length(0.98260502107511, t0.c52))) AND ((TYPEOF(DISTINCT rt0.c1)))) ORDER BY ((((vt0.c0)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(json_extract(rt0.c0, vt0.c0))), COALESCE(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), TYPEOF(DISTINCT rt0.c2))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((~ (t0.c52 COLLATE NOCASE))) ORDER BY CASE CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '325211679' WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END  WHEN DATETIME(t0.c52, t0.c52, 0x3a6f56d5) THEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '325211679' WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END  WHEN DATETIME(t0.c52, t0.c52, 0x3a6f56d5) THEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (t0.c52 COLLATE NOCASE))) ORDER BY CASE CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '325211679' WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END  WHEN DATETIME(t0.c52, t0.c52, 0x3a6f56d5) THEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c52 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '325211679' WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END  WHEN DATETIME(t0.c52, t0.c52, 0x3a6f56d5) THEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (t0.c52 COLLATE NOCASE))) ORDER BY CASE CASE t0.c52  WHEN t0.c52 THEN t0.c52 WHEN t0.c52 THEN '325211679' WHEN t0.c52 THEN t0.c52 ELSE t0.c52 END  WHEN DATETIME(t0.c52, t0.c52, 0x3a6f56d5) THEN CASE t0.c52  WHEN t0.c52 THEN t0.c52 END ELSE ((t0.c52) BETWEEN (t0.c52) AND (t0.c52)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON rt0.c2 WHERE ('_^');
SELECT SUM(count) FROM (SELECT ALL (('_^') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON rt0.c2 WHERE ('_^');
SELECT SUM(count) FROM (SELECT ALL (('_^') IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t0 ON rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 FULL OUTER JOIN t0 ON rt0.c2 WHERE ('_^');
