-- Time: 2024/06/09 04:11:20
-- Database: database81
-- Database version: 3.40.0
-- seed value: 1033600981
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT ); -- 7ms;
INSERT OR ABORT INTO rt0(c3, c1, c0) VALUES (x'', 'S%%8Rn', 0.8508813743203354); -- 0ms;
CREATE VIEW v0(c0) AS SELECT rt0.c3 FROM rt0 WHERE ((UPPER(NULL) IN ((((0.9704652522712387, 0.2772168806500348, x''))<=((-285368376, NULL, x'2989'))), CAST(0.5925195106215049 AS NUMERIC)))) GROUP BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) AND ((('Z}7\nGV') NOT BETWEEN (rt0.c3) AND (rt0.c1)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES (x''); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES ('-915520447', -285368376, -285368376), (NULL, NULL, NULL), (x'', NULL, (+ (UNLIKELY(DISTINCT x'd25f')))), (0xffffffffc96e4441, x'f52e', NULL), (x'00f5', NULL, ''); -- 1ms;
ANALYZE; -- 3ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (''), (0.5925195106215049), (-2.85368376E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0, c1) VALUES (x'', -820586132, 0.7275170655845514, '0.8508813743203354'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='T'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', ' sz=-818992836'); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c3) VALUES (NULL, 0.8773323623526476); -- 1ms;
PRAGMA wal_autocheckpoint; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 5ms;
INSERT OR IGNORE INTO rt0(c2, c3, c1) VALUES ('C4-}^⤼', '-820586132', 'jj'); -- 0ms;
ANALYZE rt0; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'aa0f'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.2772168806500348  WHEN '-584016789' THEN x'' END)AND(((('-820586132')) BETWEEN ((0.2702864475874104)) AND ((0.10586816778290331))))))OR(((0.5596085534597859) NOT NULL))); -- 0ms;
PRAGMA stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES ('-1237254068', '685373485'), ('-584016789', NULL), ('H!G1蔇i )b', x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c0) VALUES (0.12046924090573152, x'e5ee6b41'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
COMMIT; -- 3ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 5ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c0 ON v0 WHEN CASE CAST(v0.c0 AS REAL)  WHEN CASE WHEN '507020551' THEN v0.c0 END THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE (v0.c0 IN ()) END BEGIN DELETE FROM rt0;END; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('0.5925195106215049', x'', NULL), (NULL, 576880131, 'qFSfW0M'), (NULL, '576880131', CAST(0.2854605441696765 AS NUMERIC)); -- 4ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (NULL), (NULL); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='tiq,Pq' WHERE (~ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', ''), ('-1237254068', 0xffffffffeefd9fc8), ('-1237254068', ''), (44742959, 0X1e388507), (-497745408, '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL, c0='g8Ab2>FB'; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (0Xffffffffa08aacea, '%Hd\rp4#T8', '_FX,H\n4vI'), (1771662860, 0.1764480985197775, '0.8508813743203354'), (x'3a6f', '576880131', '\q'); -- 0ms;
BEGIN  TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO vt0 VALUES (0.6091739683156246); -- 1ms;
INSERT OR FAIL INTO rt0(c3) VALUES (0.9277322684596522); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('44742959'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c0) VALUES ('576880131', 0.6376114564082215, NULL, x''); -- 0ms;
REINDEX; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33132'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', x'b409'), (0.7426650910478944, NULL), (0.020307295238671252, '0.0'), (NULL, '-820586132'), (0.9031928597137079, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (x'', 1771662860); -- 0ms;
UPDATE rt0 SET c1='', c1=x'' WHERE (rt0.c0 IN ()); -- 0ms;
PRAGMA main.recursive_triggers; -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('\8!rJCq%'); -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR REPLACE rt0 SET c1='-820586132', c2=-8.18992836E8; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0) VALUES ('0.020307295238671252', x'b278ae47'); -- 0ms;
BEGIN  TRANSACTION; -- 7ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c3) VALUES ('-915520447', NULL, -9.15520447E8), (NULL, x'', x''), (0xffffffff937bbad4, 0xffffffff94b68c0a, NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 5ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('鱫EU1j[H?g'), (x''), (''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1771662860 unordered'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''); -- 6ms;
INSERT OR REPLACE INTO rt0(c0, c3) VALUES (0.09417177915864228, 1606100864); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c3) VALUES (x'', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (0.28762126880290595, x''); -- 0ms;
PRAGMA temp.stats; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((rt0.c3)==(rt0.c0)) ELSE (('1606100864') NOT BETWEEN (rt0.c1) AND ('-820586132')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((rt0.c3)=(rt0.c0)) ELSE (('1606100864') NOT BETWEEN (rt0.c1) AND ('-820586132')) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((rt0.c3)==(rt0.c0)) ELSE (('1606100864') NOT BETWEEN (rt0.c1) AND ('-820586132')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN ((rt0.c3)=(rt0.c0)) ELSE (('1606100864') NOT BETWEEN (rt0.c1) AND ('-820586132')) END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN ((rt0.c3)==(rt0.c0)) ELSE (('1606100864') NOT BETWEEN (rt0.c1) AND ('-820586132')) END);
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (+ (-132435578)) WHERE ((((CAST(rt0.c1 AS INTEGER)))>((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))>((NULL)))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (+ (-132435578)));
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (+ (-132435578)) WHERE ((((CAST(rt0.c1 AS INTEGER)))>((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c1 AS INTEGER)))>((NULL)))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON (+ (-132435578)));
SELECT ALL * FROM v0, vt0 CROSS JOIN rt0 ON (+ (-132435578)) WHERE ((((CAST(rt0.c1 AS INTEGER)))>((NULL))));
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (1771662860) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((1771662860) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS FIRST, x'' COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (1771662860) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((1771662860) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS FIRST, x'' COLLATE NOCASE DESC);
SELECT COUNT(*) FROM v0, vt0 NOT INDEXED WHERE (1771662860) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)  NULLS FIRST, x'' COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END) AND (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(-585737575 AS INTEGER))IS NOT(STRFTIME(v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c2)))) ORDER BY ((rt0.c1) NOTNULL) ASC  NULLS FIRST, ((rt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(-585737575 AS INTEGER))IS NOT(STRFTIME(v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOTNULL) ASC  NULLS FIRST, ((rt0.c0) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(-585737575 AS INTEGER))IS NOT(STRFTIME(v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c2)))) ORDER BY ((rt0.c1) NOTNULL) ASC  NULLS FIRST, ((rt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(-585737575 AS INTEGER))IS NOT(STRFTIME(v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOTNULL) ASC  NULLS FIRST, ((rt0.c0) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CAST(-585737575 AS INTEGER))IS NOT(STRFTIME(v0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c2)))) ORDER BY ((rt0.c1) NOTNULL) ASC  NULLS FIRST, ((rt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) NOTNULL));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(((rt0.c2) IS TRUE) AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)LIKE(rt0.c0)))OR(((0.5418921133377801) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ((((rt0.c2)==(rt0.c3))) BETWEEN (0.7334277149718932) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(rt0.c0)))OR(((0.5418921133377801) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)=(rt0.c3))) BETWEEN (0.7334277149718932) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)LIKE(rt0.c0)))OR(((0.5418921133377801) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ((((rt0.c2)==(rt0.c3))) BETWEEN (0.7334277149718932) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)LIKE(rt0.c0)))OR(((0.5418921133377801) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c2)=(rt0.c3))) BETWEEN (0.7334277149718932) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((rt0.c1)LIKE(rt0.c0)))OR(((0.5418921133377801) IS TRUE))))OR(((v0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) ORDER BY ((((rt0.c2)==(rt0.c3))) BETWEEN (0.7334277149718932) AND (CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((x'' IN ((vt0.c0 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((vt0.c0 IN ()), CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((x'' IN ((vt0.c0 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((vt0.c0 IN ()), CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((x'' IN ((vt0.c0 IN ()), CAST(rt0.c2 AS REAL)))) ORDER BY ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON 1.606100864E9 WHERE ('-1310531627') ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c2 COLLATE BINARY)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS FIRST, (+ (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1310531627') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON 1.606100864E9 ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c2 COLLATE BINARY)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS FIRST, (+ (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON 1.606100864E9 WHERE ('-1310531627') ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c2 COLLATE BINARY)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS FIRST, (+ (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1310531627') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON 1.606100864E9 ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c2 COLLATE BINARY)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS FIRST, (+ (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON 1.606100864E9 WHERE ('-1310531627') ORDER BY (((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR(rt0.c2 COLLATE BINARY)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) DESC  NULLS FIRST, (+ (((((rt0.c1)OR(rt0.c2)))AND(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (x'3f90') ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0.8097023286977258)))<<('1675703400'));
SELECT SUM(count) FROM (SELECT ((x'3f90') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0.8097023286977258)))<<('1675703400')));
SELECT ALL COUNT(*) FROM v0 WHERE (x'3f90') ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0.8097023286977258)))<<('1675703400'));
SELECT SUM(count) FROM (SELECT ((x'3f90') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0.8097023286977258)))<<('1675703400')));
SELECT ALL COUNT(*) FROM v0 WHERE (x'3f90') ORDER BY ((((((v0.c0)AND(v0.c0)))OR(0.8097023286977258)))<<('1675703400'));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (- (((vt0.c0)==(rt0.c2)))) INNER JOIN rt0 ON ((0.3026100777358003)LIKE(TRIM(rt0.c2, rt0.c3))) WHERE (NULLIF(DISTINCT LIKELY(v0.c0), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT LIKELY(v0.c0), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (- (((vt0.c0)=(rt0.c2)))) INNER JOIN rt0 ON ((0.3026100777358003)LIKE(TRIM(rt0.c2, rt0.c3))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (- (((vt0.c0)==(rt0.c2)))) INNER JOIN rt0 ON ((0.3026100777358003)LIKE(TRIM(rt0.c2, rt0.c3))) WHERE (NULLIF(DISTINCT LIKELY(v0.c0), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT LIKELY(v0.c0), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (- (((vt0.c0)=(rt0.c2)))) INNER JOIN rt0 ON ((0.3026100777358003)LIKE(TRIM(rt0.c2, rt0.c3))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON (- (((vt0.c0)==(rt0.c2)))) INNER JOIN rt0 ON ((0.3026100777358003)LIKE(TRIM(rt0.c2, rt0.c3))) WHERE (NULLIF(DISTINCT LIKELY(v0.c0), CASE WHEN x'' THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY (LAST_INSERT_ROWID() IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (LAST_INSERT_ROWID() IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY (LAST_INSERT_ROWID() IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (LAST_INSERT_ROWID() IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY (LAST_INSERT_ROWID() IN ()) ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((rt0.c2)||(rt0.c0))) IS TRUE) ASC, (((((rt0.c1))!=((rt0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)||(rt0.c0))) IS TRUE) ASC, (((((rt0.c1))!=((rt0.c1)))) IS TRUE) DESC);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((rt0.c2)||(rt0.c0))) IS TRUE) ASC, (((((rt0.c1))!=((rt0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)||(rt0.c0))) IS TRUE) ASC, (((((rt0.c1))!=((rt0.c1)))) IS TRUE) DESC);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE BINARY) ORDER BY ((((rt0.c2)||(rt0.c0))) IS TRUE) ASC, (((((rt0.c1))!=((rt0.c1)))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN (((rt0.c0)>('1771662860'))))) ORDER BY (rt0.c2 IN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN (((rt0.c0)>('1771662860'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN (((rt0.c0)>('1771662860'))))) ORDER BY (rt0.c2 IN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c2)) IN (((rt0.c0)>('1771662860'))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((NOT (rt0.c2)) IN (((rt0.c0)>('1771662860'))))) ORDER BY (rt0.c2 IN (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((vt0.c0)||(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(rt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((vt0.c0)||(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(rt0.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)||(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(rt0.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((~ (((vt0.c0)||(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS BLOB) THEN CAST(rt0.c0 AS REAL) END;
SELECT * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOTNULL) WHERE (json_array((v0.c0 IN (vt0.c0)), ((rt0.c3)GLOB(-85373340))));
SELECT SUM(count) FROM (SELECT ((json_array((v0.c0 IN (vt0.c0)), ((rt0.c3)GLOB(-85373340)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOTNULL) WHERE (json_array((v0.c0 IN (vt0.c0)), ((rt0.c3)GLOB(-85373340))));
SELECT SUM(count) FROM (SELECT ((json_array((v0.c0 IN (vt0.c0)), ((rt0.c3)GLOB(-85373340)))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN v0 ON (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOTNULL) WHERE (json_array((v0.c0 IN (vt0.c0)), ((rt0.c3)GLOB(-85373340))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((NOT (v0.c0)) AS REAL)) ORDER BY UPPER(((v0.c0)||(rt0.c0))) ASC  NULLS LAST, ((CAST('335912059' AS TEXT))-(((rt0.c1)+(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY UPPER(((v0.c0)||(rt0.c0))) ASC  NULLS LAST, ((CAST('335912059' AS TEXT))-(((rt0.c1)+(rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((NOT (v0.c0)) AS REAL)) ORDER BY UPPER(((v0.c0)||(rt0.c0))) ASC  NULLS LAST, ((CAST('335912059' AS TEXT))-(((rt0.c1)+(rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY UPPER(((v0.c0)||(rt0.c0))) ASC  NULLS LAST, ((CAST('335912059' AS TEXT))-(((rt0.c1)+(rt0.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST((NOT (v0.c0)) AS REAL)) ORDER BY UPPER(((v0.c0)||(rt0.c0))) ASC  NULLS LAST, ((CAST('335912059' AS TEXT))-(((rt0.c1)+(rt0.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'7376') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'7376') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'7376') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'7376') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'7376') ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) WHEN (v0.c0 IN ()) THEN (- (rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (((-1.32435578E8)) BETWEEN (((~ (v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) WHERE (LIKELY(PRINTF(v0.c0, 0.49868833388375466, v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(PRINTF(v0.c0, 0.49868833388375466, v0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) WHEN (v0.c0 IN ()) THEN (- (rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (((-1.32435578E8)) BETWEEN (((~ (v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) WHEN (v0.c0 IN ()) THEN (- (rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (((-1.32435578E8)) BETWEEN (((~ (v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) WHERE (LIKELY(PRINTF(v0.c0, 0.49868833388375466, v0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(PRINTF(v0.c0, 0.49868833388375466, v0.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) WHEN (v0.c0 IN ()) THEN (- (rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (((-1.32435578E8)) BETWEEN (((~ (v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON CASE WHEN (- (rt0.c2)) THEN ((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)) WHEN (v0.c0 IN ()) THEN (- (rt0.c1)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (~ (rt0.c1)) END LEFT OUTER JOIN vt0 ON (((-1.32435578E8)) BETWEEN (((~ (v0.c0)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) WHERE (LIKELY(PRINTF(v0.c0, 0.49868833388375466, v0.c0)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<=((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1))<=((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c1))<=((rt0.c3))) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(UNLIKELY(vt0.c0))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(UNLIKELY(vt0.c0))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(UNLIKELY(vt0.c0))))AND(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))AND(UNLIKELY(vt0.c0))))AND(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) IS TRUE))AND(UNLIKELY(vt0.c0))))AND(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY ((((v0.c0)&(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT NULL))) DESC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)&(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT NULL))) DESC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY ((((v0.c0)&(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT NULL))) DESC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)AND(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)&(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT NULL))) DESC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ())) ORDER BY ((((v0.c0)&(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0) NOT NULL))) DESC  NULLS FIRST, CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((LIKELY(DISTINCT NULL))OR(((rt0.c1)*(v0.c0)))))OR(((rt0.c0)>(v0.c0))))) ORDER BY ((v0.c0)%(rt0.c3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT NULL))OR(((rt0.c1)*(v0.c0)))))OR(((rt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0)%(rt0.c3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((LIKELY(DISTINCT NULL))OR(((rt0.c1)*(v0.c0)))))OR(((rt0.c0)>(v0.c0))))) ORDER BY ((v0.c0)%(rt0.c3)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT NULL))OR(((rt0.c1)*(v0.c0)))))OR(((rt0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0)%(rt0.c3)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((LIKELY(DISTINCT NULL))OR(((rt0.c1)*(v0.c0)))))OR(((rt0.c0)>(v0.c0))))) ORDER BY ((v0.c0)%(rt0.c3)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c3)))AND(x'')))AND(rt0.c0)))AND(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c3)))>=(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c3)))AND(x'')))AND(rt0.c0)))AND(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (rt0.c3)))>=(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END)) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c3)))AND(x'')))AND(rt0.c0)))AND(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c3)))>=(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(rt0.c3)))AND(x'')))AND(rt0.c0)))AND(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((+ (rt0.c3)))>=(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END)) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c3)))AND(x'')))AND(rt0.c0)))AND(rt0.c3))) NOTNULL)) ORDER BY (((+ (rt0.c3)))>=(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END)) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (0.24400523053285472) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ((0.24400523053285472) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_VERSION() DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.24400523053285472) ORDER BY SQLITE_VERSION() DESC;
SELECT SUM(count) FROM (SELECT ((0.24400523053285472) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_VERSION() DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.24400523053285472) ORDER BY SQLITE_VERSION() DESC;
SELECT ALL * FROM v0 WHERE (((RTRIM(v0.c0))/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((RTRIM(v0.c0))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((RTRIM(v0.c0))/(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((RTRIM(v0.c0))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((RTRIM(v0.c0))/(v0.c0 COLLATE NOCASE)));
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON ((x'') NOTNULL) WHERE (x'') ORDER BY CASE WHEN (~ (v0.c0)) THEN ((rt0.c0)>(-1.02734185E8)) END  NULLS FIRST, NULL DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((x'') NOTNULL) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((rt0.c0)>(-1.02734185E8)) END  NULLS FIRST, NULL DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON ((x'') NOTNULL) WHERE (x'') ORDER BY CASE WHEN (~ (v0.c0)) THEN ((rt0.c0)>(-1.02734185E8)) END  NULLS FIRST, NULL DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON ((x'') NOTNULL) ORDER BY CASE WHEN (~ (v0.c0)) THEN ((rt0.c0)>(-1.02734185E8)) END  NULLS FIRST, NULL DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON ((x'') NOTNULL) WHERE (x'') ORDER BY CASE WHEN (~ (v0.c0)) THEN ((rt0.c0)>(-1.02734185E8)) END  NULLS FIRST, NULL DESC  NULLS FIRST, (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((UPPER(rt0.c1)))==((rt0.c3))) WHERE (CAST((((rt0.c3))=((rt0.c1))) AS REAL)) ORDER BY (((0.17096543357730942)) BETWEEN ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c3 IN ())))) DESC, (((((rt0.c0, v0.c0, x'', rt0.c0, rt0.c3))>((rt0.c3, v0.c0, v0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (json_array(rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ('0.28762126880290595')), CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))=((rt0.c1))) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((UPPER(rt0.c1)))=((rt0.c3))) ORDER BY (((0.17096543357730942)) BETWEEN ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c3 IN ())))) DESC, (((((rt0.c0, v0.c0, x'', rt0.c0, rt0.c3))>((rt0.c3, v0.c0, v0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (json_array(rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ('0.28762126880290595')), CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((UPPER(rt0.c1)))==((rt0.c3))) WHERE (CAST((((rt0.c3))=((rt0.c1))) AS REAL)) ORDER BY (((0.17096543357730942)) BETWEEN ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c3 IN ())))) DESC, (((((rt0.c0, v0.c0, x'', rt0.c0, rt0.c3))>((rt0.c3, v0.c0, v0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (json_array(rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ('0.28762126880290595')), CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c3))=((rt0.c1))) AS REAL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((UPPER(rt0.c1)))=((rt0.c3))) ORDER BY (((0.17096543357730942)) BETWEEN ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c3 IN ())))) DESC, (((((rt0.c0, v0.c0, x'', rt0.c0, rt0.c3))>((rt0.c3, v0.c0, v0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (json_array(rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ('0.28762126880290595')), CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((UPPER(rt0.c1)))==((rt0.c3))) WHERE (CAST((((rt0.c3))=((rt0.c1))) AS REAL)) ORDER BY (((0.17096543357730942)) BETWEEN ((CASE v0.c0  WHEN rt0.c0 THEN rt0.c2 END)) AND (((rt0.c3 IN ())))) DESC, (((((rt0.c0, v0.c0, x'', rt0.c0, rt0.c3))>((rt0.c3, v0.c0, v0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (json_array(rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ('0.28762126880290595')), CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (((CAST(rt0.c3 AS NUMERIC)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9066958881350633) ISNULL)) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(((rt0.c2)==(rt0.c0)))))AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.9066958881350633) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(((rt0.c2)==(rt0.c0)))))AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9066958881350633) ISNULL)) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(((rt0.c2)==(rt0.c0)))))AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.9066958881350633) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(((rt0.c2)==(rt0.c0)))))AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.9066958881350633) ISNULL)) ORDER BY ((((((rt0.c0)OR(rt0.c2)))OR(((rt0.c2)==(rt0.c0)))))AND(((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0)OR(NULL)))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)) IN ())) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) ORDER BY UNLIKELY(0.9066958881350633);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(0.9066958881350633));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) ORDER BY UNLIKELY(0.9066958881350633);
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(0.9066958881350633));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)OR(vt0.c0)) AS BLOB)) ORDER BY UNLIKELY(0.9066958881350633);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.452656531333705), x''));
SELECT SUM(count) FROM (SELECT ((MIN(CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.452656531333705), x'')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.452656531333705), x''));
SELECT SUM(count) FROM (SELECT ((MIN(CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.452656531333705), x'')) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MIN(CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.452656531333705), x''));
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((((rt0.c0)AND('685373485')))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND((((x'')) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND('685373485')))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND((((x'')) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((((rt0.c0)AND('685373485')))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND((((x'')) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND('685373485')))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND((((x'')) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((((((((((((rt0.c0)AND('685373485')))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND((((x'')) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c0)))IS(CAST(rt0.c3 AS REAL))) WHERE (((HEX(rt0.c2))<=(((rt0.c3) ISNULL)))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(x'')))AND(rt0.c2)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2))<=(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c0)))IS(CAST(rt0.c3 AS REAL))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(x'')))AND(rt0.c2)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE vt0.c0 END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c0)))IS(CAST(rt0.c3 AS REAL))) WHERE (((HEX(rt0.c2))<=(((rt0.c3) ISNULL)))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(x'')))AND(rt0.c2)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c2))<=(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c0)))IS(CAST(rt0.c3 AS REAL))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(x'')))AND(rt0.c2)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE vt0.c0 END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((+ (rt0.c0)))IS(CAST(rt0.c3 AS REAL))) WHERE (((HEX(rt0.c2))<=(((rt0.c3) ISNULL)))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c1)))OR(x'')))AND(rt0.c2)) THEN (rt0.c1 IN ()) WHEN rt0.c2 COLLATE RTRIM THEN (rt0.c2 IN ()) ELSE vt0.c0 END;
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))+(((rt0.c0)<=(rt0.c3))))) ORDER BY ((((((rt0.c2) NOTNULL))AND(rt0.c2)))OR(vt0.c0 COLLATE RTRIM)) DESC, (((('')>=(rt0.c3))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))+(((rt0.c0)<=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2) NOTNULL))AND(rt0.c2)))OR(vt0.c0 COLLATE RTRIM)) DESC, (((('')>=(rt0.c3))) NOT NULL) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))+(((rt0.c0)<=(rt0.c3))))) ORDER BY ((((((rt0.c2) NOTNULL))AND(rt0.c2)))OR(vt0.c0 COLLATE RTRIM)) DESC, (((('')>=(rt0.c3))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))+(((rt0.c0)<=(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c2) NOTNULL))AND(rt0.c2)))OR(vt0.c0 COLLATE RTRIM)) DESC, (((('')>=(rt0.c3))) NOT NULL) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))+(((rt0.c0)<=(rt0.c3))))) ORDER BY ((((((rt0.c2) NOTNULL))AND(rt0.c2)))OR(vt0.c0 COLLATE RTRIM)) DESC, (((('')>=(rt0.c3))) NOT NULL) DESC;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((-1110061962)IS(((vt0.c0)/(vt0.c0))))) ORDER BY (- (CAST('1361960799' AS TEXT))) DESC, LTRIM((- (-1237254068)), NULL);
SELECT SUM(count) FROM (SELECT ALL ((((-1110061962)IS(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (- (CAST('1361960799' AS TEXT))) DESC, LTRIM((- (-1237254068)), NULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((-1110061962)IS(((vt0.c0)/(vt0.c0))))) ORDER BY (- (CAST('1361960799' AS TEXT))) DESC, LTRIM((- (-1237254068)), NULL);
SELECT SUM(count) FROM (SELECT ALL ((((-1110061962)IS(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (- (CAST('1361960799' AS TEXT))) DESC, LTRIM((- (-1237254068)), NULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((-1110061962)IS(((vt0.c0)/(vt0.c0))))) ORDER BY (- (CAST('1361960799' AS TEXT))) DESC, LTRIM((- (-1237254068)), NULL);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c3))=((rt0.c1)))  WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)>>(rt0.c3)) END) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3))=((rt0.c1)))  WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)>>(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c3))=((rt0.c1)))  WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)>>(rt0.c3)) END) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c3))=((rt0.c1)))  WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)>>(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (((rt0.c3))=((rt0.c1)))  WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)>>(rt0.c3)) END) ORDER BY (+ (rt0.c1)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN x'a553' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c0 THEN x'a553' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN x'a553' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE v0.c0  WHEN v0.c0 THEN x'a553' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (CASE v0.c0  WHEN v0.c0 THEN x'a553' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c2)) WHEN (+ (rt0.c3)) THEN ((rt0.c1)=(rt0.c3)) WHEN NULL COLLATE NOCASE THEN (((rt0.c3, rt0.c2, x'8e727013'))>((rt0.c2, rt0.c3, rt0.c2))) ELSE '' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c2)) WHEN (+ (rt0.c3)) THEN ((rt0.c1)==(rt0.c3)) WHEN NULL COLLATE NOCASE THEN (((rt0.c3, rt0.c2, x'8e727013'))>((rt0.c2, rt0.c3, rt0.c2))) ELSE '' COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c2)) WHEN (+ (rt0.c3)) THEN ((rt0.c1)=(rt0.c3)) WHEN NULL COLLATE NOCASE THEN (((rt0.c3, rt0.c2, x'8e727013'))>((rt0.c2, rt0.c3, rt0.c2))) ELSE '' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c2)) WHEN (+ (rt0.c3)) THEN ((rt0.c1)==(rt0.c3)) WHEN NULL COLLATE NOCASE THEN (((rt0.c3, rt0.c2, x'8e727013'))>((rt0.c2, rt0.c3, rt0.c2))) ELSE '' COLLATE RTRIM END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN SQLITE_SOURCE_ID() WHEN ((rt0.c3) NOT NULL) THEN (~ (rt0.c2)) WHEN (+ (rt0.c3)) THEN ((rt0.c1)=(rt0.c3)) WHEN NULL COLLATE NOCASE THEN (((rt0.c3, rt0.c2, x'8e727013'))>((rt0.c2, rt0.c3, rt0.c2))) ELSE '' COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))LIKE(COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))LIKE(COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))LIKE(COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))LIKE(COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))LIKE(COALESCE(v0.c0, vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((-915520447)AND(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((-915520447)AND(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((-915520447)AND(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((-915520447)AND(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((-915520447)AND(((v0.c0)>(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5750410459922167 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5750410459922167);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5750410459922167 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5750410459922167);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0.5750410459922167 WHERE (CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER));
SELECT ALL * FROM v0, rt0 WHERE (((NULL)*(((rt0.c0)==(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((rt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)*(((rt0.c0)==(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((rt0.c0)==(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)*(((rt0.c0)==(v0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0 COLLATE BINARY)<>(((v0.c0)AND(rt0.c2))))) ORDER BY ('-1766691920' IN (((rt0.c2) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>(((v0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ('-1766691920' IN (((rt0.c2) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0 COLLATE BINARY)<>(((v0.c0)AND(rt0.c2))))) ORDER BY ('-1766691920' IN (((rt0.c2) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>(((v0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ('-1766691920' IN (((rt0.c2) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0 COLLATE BINARY)<>(((v0.c0)AND(rt0.c2))))) ORDER BY ('-1766691920' IN (((rt0.c2) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY LOWER(DISTINCT ((x'')||(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT ((x'')||(rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY LOWER(DISTINCT ((x'')||(rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT ((x'')||(rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT NULL))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 END))) ORDER BY LOWER(DISTINCT ((x'')||(rt0.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (((rt0.c0)%(rt0.c2))))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY x'' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (((rt0.c0)%(rt0.c2))))) ORDER BY x'' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY x'' COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (((rt0.c0)%(rt0.c2))))) ORDER BY x'' COLLATE NOCASE;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))-(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))-(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))-(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c2))-(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))-(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(-1.799975926E9)))OR(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(-1.799975926E9)))OR(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(-1.799975926E9)))OR(((vt0.c0)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(-1.799975926E9)))OR(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(-1.799975926E9)))OR(((vt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c0)>>(rt0.c2)))/(((vt0.c0)LIKE(rt0.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c2)))/(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c0)>>(rt0.c2)))/(((vt0.c0)LIKE(rt0.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c2)))/(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED NATURAL JOIN rt0 WHERE (((((rt0.c0)>>(rt0.c2)))/(((vt0.c0)LIKE(rt0.c2))))) ORDER BY ((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))|(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c3)))OR(rt0.c1)))) ASC;
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) FULL OUTER JOIN rt0 ON (((vt0.c0)-(rt0.c0)) IN ()) WHERE (-1.7976931348623157E308) ORDER BY IFNULL(CAST(rt0.c0 AS TEXT), ((rt0.c3)>=(rt0.c2)))  NULLS FIRST, ((((CAST(rt0.c2 AS TEXT))OR((NOT (rt0.c2)))))AND(rt0.c1))  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((-1.7976931348623157E308) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) FULL OUTER JOIN rt0 ON (((vt0.c0)-(rt0.c0)) IN ()) ORDER BY IFNULL(CAST(rt0.c0 AS TEXT), ((rt0.c3)>=(rt0.c2)))  NULLS FIRST, ((((CAST(rt0.c2 AS TEXT))OR((NOT (rt0.c2)))))AND(rt0.c1))  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) FULL OUTER JOIN rt0 ON (((vt0.c0)-(rt0.c0)) IN ()) WHERE (-1.7976931348623157E308) ORDER BY IFNULL(CAST(rt0.c0 AS TEXT), ((rt0.c3)>=(rt0.c2)))  NULLS FIRST, ((((CAST(rt0.c2 AS TEXT))OR((NOT (rt0.c2)))))AND(rt0.c1))  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((-1.7976931348623157E308) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) FULL OUTER JOIN rt0 ON (((vt0.c0)-(rt0.c0)) IN ()) ORDER BY IFNULL(CAST(rt0.c0 AS TEXT), ((rt0.c3)>=(rt0.c2)))  NULLS FIRST, ((((CAST(rt0.c2 AS TEXT))OR((NOT (rt0.c2)))))AND(rt0.c1))  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0)) ASC);
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) FULL OUTER JOIN rt0 ON (((vt0.c0)-(rt0.c0)) IN ()) WHERE (-1.7976931348623157E308) ORDER BY IFNULL(CAST(rt0.c0 AS TEXT), ((rt0.c3)>=(rt0.c2)))  NULLS FIRST, ((((CAST(rt0.c2 AS TEXT))OR((NOT (rt0.c2)))))AND(rt0.c1))  NULLS FIRST, (((vt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0)) ASC;
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c0) NOTNULL))) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c0) NOTNULL))) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (HEX(((vt0.c0) NOTNULL))) ORDER BY ((vt0.c0)&(vt0.c0)) COLLATE BINARY;
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT NULL))) AND ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY (((rt0.c2 IN (rt0.c3, v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT NULL))) AND ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY (((rt0.c2 IN (rt0.c3, v0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT NULL))) AND ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY (((rt0.c2 IN (rt0.c3, v0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT NULL))) AND ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY (((rt0.c2 IN (rt0.c3, v0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT NULL))) AND ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))AND(v0.c0)))))) ORDER BY (((rt0.c2 IN (rt0.c3, v0.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN '' THEN IFNULL(rt0.c0, rt0.c0) WHEN (('-299498290') IS FALSE) THEN '0.0' WHEN (rt0.c2 IN ()) THEN ((vt0.c0)%(576880131)) ELSE ((rt0.c3)OR(vt0.c0)) END FULL OUTER JOIN rt0 ON 'qFSfW0M' WHERE (CASE WHEN ((rt0.c3) BETWEEN ('') AND (rt0.c1)) THEN ((vt0.c0)||(rt0.c3)) ELSE ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)) END) ORDER BY (((NOT (vt0.c0)))>=(IFNULL(vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) BETWEEN ('') AND (rt0.c1)) THEN ((vt0.c0)||(rt0.c3)) ELSE ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN '' THEN IFNULL(rt0.c0, rt0.c0) WHEN (('-299498290') IS FALSE) THEN '0.0' WHEN (rt0.c2 IN ()) THEN ((vt0.c0)%(576880131)) ELSE ((rt0.c3)OR(vt0.c0)) END FULL OUTER JOIN rt0 ON 'qFSfW0M' ORDER BY (((NOT (vt0.c0)))>=(IFNULL(vt0.c0, rt0.c2))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN '' THEN IFNULL(rt0.c0, rt0.c0) WHEN (('-299498290') IS FALSE) THEN '0.0' WHEN (rt0.c2 IN ()) THEN ((vt0.c0)%(576880131)) ELSE ((rt0.c3)OR(vt0.c0)) END FULL OUTER JOIN rt0 ON 'qFSfW0M' WHERE (CASE WHEN ((rt0.c3) BETWEEN ('') AND (rt0.c1)) THEN ((vt0.c0)||(rt0.c3)) ELSE ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)) END) ORDER BY (((NOT (vt0.c0)))>=(IFNULL(vt0.c0, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) BETWEEN ('') AND (rt0.c1)) THEN ((vt0.c0)||(rt0.c3)) ELSE ((rt0.c3) BETWEEN (v0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN '' THEN IFNULL(rt0.c0, rt0.c0) WHEN (('-299498290') IS FALSE) THEN '0.0' WHEN (rt0.c2 IN ()) THEN ((vt0.c0)%(576880131)) ELSE ((rt0.c3)OR(vt0.c0)) END FULL OUTER JOIN rt0 ON 'qFSfW0M' ORDER BY (((NOT (vt0.c0)))>=(IFNULL(vt0.c0, rt0.c2))));
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))=((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))==((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))=((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))==((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))=((- (rt0.c3)))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)&(rt0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)&(rt0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)&(rt0.c2)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((rt0.c2)&(rt0.c2)))LIKE(rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt0, v0 WHERE (((v0.c0)>>(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT * FROM vt0, v0 WHERE (((v0.c0)>>(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((v0.c0)>>(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0);
SELECT * FROM vt0, v0 WHERE (((v0.c0)>>(vt0.c0)) COLLATE RTRIM) ORDER BY vt0.c0;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) ORDER BY ((NULL) BETWEEN ((((0xffffffffb8e9abc8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN ((((0xffffffffb8e9abc8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND ((+ (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) ORDER BY ((NULL) BETWEEN ((((0xffffffffb8e9abc8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND ((+ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL) BETWEEN ((((0xffffffffb8e9abc8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND ((+ (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS TEXT)) ORDER BY ((NULL) BETWEEN ((((0xffffffffb8e9abc8, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))) AND ((+ (vt0.c0)))) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL))>(NULL COLLATE BINARY)) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((NOT (rt0.c3)))) AND ((CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END))) WHERE ((((rt0.c3)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((((((((v0.c0) IS TRUE))OR(((rt0.c1)<=(vt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))))OR((+ (rt0.c2)))))AND(rt0.c1)) ASC  NULLS FIRST, (((((rt0.c1) NOTNULL)))>=(((v0.c0 IN ())))) DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((~ (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1799975926'))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL))>(NULL COLLATE BINARY)) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((NOT (rt0.c3)))) AND ((CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((((v0.c0) IS TRUE))OR(((rt0.c1)<=(vt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))))OR((+ (rt0.c2)))))AND(rt0.c1)) ASC  NULLS FIRST, (((((rt0.c1) NOTNULL)))>=(((v0.c0 IN ())))) DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((~ (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1799975926'))))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL))>(NULL COLLATE BINARY)) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((NOT (rt0.c3)))) AND ((CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END))) WHERE ((((rt0.c3)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) ORDER BY ((((((((((v0.c0) IS TRUE))OR(((rt0.c1)<=(vt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))))OR((+ (rt0.c2)))))AND(rt0.c1)) ASC  NULLS FIRST, (((((rt0.c1) NOTNULL)))>=(((v0.c0 IN ())))) DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((~ (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1799975926'))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((CAST(rt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((v0.c0) NOTNULL))>(NULL COLLATE BINARY)) INNER JOIN v0 ON (((vt0.c0)) BETWEEN (((NOT (rt0.c3)))) AND ((CASE WHEN v0.c0 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((((((v0.c0) IS TRUE))OR(((rt0.c1)<=(vt0.c0)))))AND(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))))OR((+ (rt0.c2)))))AND(rt0.c1)) ASC  NULLS FIRST, (((((rt0.c1) NOTNULL)))>=(((v0.c0 IN ())))) DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((~ (rt0.c0)))) AND (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1799975926'))))))  NULLS LAST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) AND (rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) AND (rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c3))) AND (rt0.c1 COLLATE BINARY)) WHERE (rt0.c0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST('-584016789' AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST, (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))), (((rt0.c2)GLOB(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST('-584016789' AS INTEGER)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY rt0.c2 DESC  NULLS LAST, (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))), (((rt0.c2)GLOB(rt0.c3)) IN ()));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST('-584016789' AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST, (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))), (((rt0.c2)GLOB(rt0.c3)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST('-584016789' AS INTEGER)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY rt0.c2 DESC  NULLS LAST, (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))), (((rt0.c2)GLOB(rt0.c3)) IN ()));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CAST('-584016789' AS INTEGER)) ORDER BY rt0.c2 DESC  NULLS LAST, (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))), (((rt0.c2)GLOB(rt0.c3)) IN ());
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((+ (rt0.c3))) AND (CASE 0.1061032139477982  WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE '-1237254068' END)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN ((+ (rt0.c3))) AND (CASE 0.1061032139477982  WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE '-1237254068' END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((+ (rt0.c3))) AND (CASE 0.1061032139477982  WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE '-1237254068' END)));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN ((+ (rt0.c3))) AND (CASE 0.1061032139477982  WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE '-1237254068' END))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (rt0.c1))) NOT BETWEEN ((+ (rt0.c3))) AND (CASE 0.1061032139477982  WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE '-1237254068' END)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN ()))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN ()))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((v0.c0 IN ()))IS(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))-(CASE rt0.c2  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY ((((v0.c0 IN (rt0.c2))))==((rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))-(CASE rt0.c2  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY ((((v0.c0 IN (rt0.c2))))==((rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))-(CASE rt0.c2  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY ((((v0.c0 IN (rt0.c2))))==((rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE))-(CASE rt0.c2  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0 ORDER BY ((((v0.c0 IN (rt0.c2))))==((rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((v0.c0) IS FALSE))-(CASE rt0.c2  WHEN rt0.c3 THEN v0.c0 ELSE rt0.c0 END))) ORDER BY ((((v0.c0 IN (rt0.c2))))==((rt0.c3)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0)))>(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0)))>(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0)))>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c0)))>(CAST(rt0.c0 AS REAL))));
SELECT * FROM v0, rt0 WHERE (((((((((((((rt0.c1)AND('-299498290')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) ISNULL))))OR((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND('-299498290')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) ISNULL))))OR((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((((rt0.c1)AND('-299498290')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) ISNULL))))OR((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt0.c1)AND('-299498290')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) ISNULL))))OR((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((((((((((rt0.c1)AND('-299498290')))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END)))OR(((rt0.c1) IS TRUE))))OR(((v0.c0) ISNULL))))OR((((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (0.7872520782736907) AND (v0.c0)))==((rt0.c1 IN (rt0.c1, rt0.c1))))) ORDER BY ((((((((v0.c0)OR(rt0.c0)))OR(NULL)))AND(((v0.c0) BETWEEN (0xfffffffffef0b879) AND (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.7872520782736907) AND (v0.c0)))=((rt0.c1 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((v0.c0)OR(rt0.c0)))OR(NULL)))AND(((v0.c0) BETWEEN (0Xfffffffffef0b879) AND (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (0.7872520782736907) AND (v0.c0)))==((rt0.c1 IN (rt0.c1, rt0.c1))))) ORDER BY ((((((((v0.c0)OR(rt0.c0)))OR(NULL)))AND(((v0.c0) BETWEEN (0xfffffffffef0b879) AND (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.7872520782736907) AND (v0.c0)))=((rt0.c1 IN (rt0.c1, rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((((v0.c0)OR(rt0.c0)))OR(NULL)))AND(((v0.c0) BETWEEN (0Xfffffffffef0b879) AND (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) BETWEEN (0.7872520782736907) AND (v0.c0)))==((rt0.c1 IN (rt0.c1, rt0.c1))))) ORDER BY ((((((((v0.c0)OR(rt0.c0)))OR(NULL)))AND(((v0.c0) BETWEEN (0xfffffffffef0b879) AND (rt0.c0)))))AND(CAST(rt0.c0 AS REAL))) DESC  NULLS FIRST, v0.c0 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(TRIM(DISTINCT vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(TRIM(DISTINCT vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(TRIM(DISTINCT vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))AND(TRIM(DISTINCT vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0 IN ()))AND(TRIM(DISTINCT vt0.c0))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(((v0.c0)>=(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR('0' COLLATE BINARY)))OR(((-5.85737575E8) BETWEEN (-1135864404) AND (rt0.c2))))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) END, CAST(((NULL)<<(rt0.c3)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(((v0.c0)>=(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR('0' COLLATE BINARY)))OR(((-5.85737575E8) BETWEEN (-1135864404) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) END, CAST(((NULL)<<(rt0.c3)) AS REAL) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(((v0.c0)>=(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR('0' COLLATE BINARY)))OR(((-5.85737575E8) BETWEEN (-1135864404) AND (rt0.c2))))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) END, CAST(((NULL)<<(rt0.c3)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(((v0.c0)>=(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR('0' COLLATE BINARY)))OR(((-5.85737575E8) BETWEEN (-1135864404) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) END, CAST(((NULL)<<(rt0.c3)) AS REAL) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(v0.c0)))OR(vt0.c0)))AND(rt0.c2)))OR(((v0.c0)>=(rt0.c1)))))AND(CAST(vt0.c0 AS INTEGER))))OR('0' COLLATE BINARY)))OR(((-5.85737575E8) BETWEEN (-1135864404) AND (rt0.c2))))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) END, CAST(((NULL)<<(rt0.c3)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)-(v0.c0)))) AND ((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)-(v0.c0)))) AND ((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)-(v0.c0)))) AND ((((v0.c0)|(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((((v0.c0)-(v0.c0)))) AND ((((v0.c0)|(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)-(v0.c0)))) AND ((((v0.c0)|(v0.c0))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c0)))=(((rt0.c1)+(rt0.c3))))) ORDER BY 0.8294543811885375 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))==(((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.8294543811885375 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c0)))=(((rt0.c1)+(rt0.c3))))) ORDER BY 0.8294543811885375 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))==(((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.8294543811885375 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c0)))=(((rt0.c1)+(rt0.c3))))) ORDER BY 0.8294543811885375 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))LIKE(GLOB(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))LIKE(GLOB(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))LIKE(GLOB(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))LIKE(GLOB(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(rt0.c2 AS INTEGER))LIKE(GLOB(vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(('b>' IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(('b>' IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(('b>' IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(('b>' IN ()))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(('b>' IN ()))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((vt0.c0 COLLATE RTRIM, (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (MIN(CASE WHEN v0.c0 THEN v0.c0 WHEN 0.7051061189530373 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN 0xffffffffeefd9fc8 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CASE WHEN v0.c0 THEN v0.c0 WHEN 0.7051061189530373 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN 0Xffffffffeefd9fc8 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (MIN(CASE WHEN v0.c0 THEN v0.c0 WHEN 0.7051061189530373 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN 0xffffffffeefd9fc8 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((MIN(CASE WHEN v0.c0 THEN v0.c0 WHEN 0.7051061189530373 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN 0Xffffffffeefd9fc8 THEN v0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (MIN(CASE WHEN v0.c0 THEN v0.c0 WHEN 0.7051061189530373 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, CASE WHEN 0xffffffffeefd9fc8 THEN v0.c0 ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) ORDER BY ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) IS TRUE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE CAST(v0.c0 AS BLOB)  WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN ((v0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END)IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c0 END)IS((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END)IS((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c0 END)IS((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END)IS((vt0.c0 IN ()))));
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((rt0.c1 IN (0.30642017401159927)))OR(json_patch(rt0.c3, rt0.c1))))OR(((rt0.c1)-(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c0)+(rt0.c2)) THEN LIKELIHOOD(rt0.c2, 0.40052130877604575) WHEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0) THEN CAST(rt0.c3 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (0.30642017401159927)))OR(json_patch(rt0.c3, rt0.c1))))OR(((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)+(rt0.c2)) THEN LIKELIHOOD(rt0.c2, 0.40052130877604575) WHEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0) THEN CAST(rt0.c3 AS TEXT) END);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((((rt0.c1 IN (0.30642017401159927)))OR(json_patch(rt0.c3, rt0.c1))))OR(((rt0.c1)-(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c0)+(rt0.c2)) THEN LIKELIHOOD(rt0.c2, 0.40052130877604575) WHEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0) THEN CAST(rt0.c3 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (0.30642017401159927)))OR(json_patch(rt0.c3, rt0.c1))))OR(((rt0.c1)-(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)+(rt0.c2)) THEN LIKELIHOOD(rt0.c2, 0.40052130877604575) WHEN ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)) WHEN COALESCE(DISTINCT rt0.c1, rt0.c0, vt0.c0, rt0.c0, rt0.c3, rt0.c0, rt0.c2, rt0.c0) THEN CAST(rt0.c3 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(((vt0.c0)<<(rt0.c0)), CASE WHEN '-85373340' THEN rt0.c2 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END) FULL OUTER JOIN rt0 ON (((((rt0.c0, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((v0.c0, rt0.c1, rt0.c2)))) ISNULL) WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((UPPER(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((UPPER(DISTINCT rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(((vt0.c0)<<(rt0.c0)), CASE WHEN '-85373340' THEN rt0.c2 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END) FULL OUTER JOIN rt0 ON (((((rt0.c0, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((v0.c0, rt0.c1, rt0.c2)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(((vt0.c0)<<(rt0.c0)), CASE WHEN '-85373340' THEN rt0.c2 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END) FULL OUTER JOIN rt0 ON (((((rt0.c0, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((v0.c0, rt0.c1, rt0.c2)))) ISNULL) WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((UPPER(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) AND ((UPPER(DISTINCT rt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON json_array_length(((vt0.c0)<<(rt0.c0)), CASE WHEN '-85373340' THEN rt0.c2 WHEN NULL THEN v0.c0 WHEN rt0.c1 THEN v0.c0 END) FULL OUTER JOIN rt0 ON (((((rt0.c0, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((v0.c0, rt0.c1, rt0.c2)))) ISNULL));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE (((vt0.c0)!=(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE (((vt0.c0)!=(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (rt0.c1)) COLLATE RTRIM WHERE (((vt0.c0)!=(rt0.c3)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.5360979083638017) ORDER BY ('' IN ()), CAST(((rt0.c1)/(rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0.5360979083638017) IS TRUE)  as count FROM rt0 ORDER BY ('' IN ()), CAST(((rt0.c1)/(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.5360979083638017) ORDER BY ('' IN ()), CAST(((rt0.c1)/(rt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((0.5360979083638017) IS TRUE)  as count FROM rt0 ORDER BY ('' IN ()), CAST(((rt0.c1)/(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.5360979083638017) ORDER BY ('' IN ()), CAST(((rt0.c1)/(rt0.c0)) AS TEXT);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c0)<<(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULL COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS REAL)) NOT NULL) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((0.4421534408282949)OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE (x'6d60ab41');
SELECT SUM(count) FROM (SELECT ((x'6d60ab41') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((0.4421534408282949)OR(rt0.c0)))AND((vt0.c0 IN ()))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((0.4421534408282949)OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE (x'6d60ab41');
SELECT SUM(count) FROM (SELECT ((x'6d60ab41') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((0.4421534408282949)OR(rt0.c0)))AND((vt0.c0 IN ()))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((0.4421534408282949)OR(rt0.c0)))AND((vt0.c0 IN ()))) WHERE (x'6d60ab41');
SELECT * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>((((vt0.c0)=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>((((vt0.c0)=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))!=((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<>((((vt0.c0)=(vt0.c0))))));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)) COLLATE BINARY) ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((TRIM(rt0.c0)))) WHERE (CASE ((rt0.c2)OR(rt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)OR(rt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((TRIM(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((TRIM(rt0.c0)))) WHERE (CASE ((rt0.c2)OR(rt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)OR(rt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((TRIM(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((rt0.c2)) NOT BETWEEN ((CAST(NULL AS NUMERIC))) AND ((TRIM(rt0.c0)))) WHERE (CASE ((rt0.c2)OR(rt0.c0))  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN rt0.c0 THEN rt0.c0 END END);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON rt0.c2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON rt0.c2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON rt0.c2 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))&(v0.c0))) ORDER BY CAST(LTRIM(NULL, v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))&(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(LTRIM(NULL, v0.c0) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))&(v0.c0))) ORDER BY CAST(LTRIM(NULL, v0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))&(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(LTRIM(NULL, v0.c0) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) ISNULL))&(v0.c0))) ORDER BY CAST(LTRIM(NULL, v0.c0) AS REAL);
SELECT * FROM v0, rt0, vt0 WHERE (HEX(DISTINCT rt0.c3 COLLATE RTRIM)) ORDER BY ((CHAR(v0.c0))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CHAR(v0.c0))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE (HEX(DISTINCT rt0.c3 COLLATE RTRIM)) ORDER BY ((CHAR(v0.c0))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CHAR(v0.c0))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE (HEX(DISTINCT rt0.c3 COLLATE RTRIM)) ORDER BY ((CHAR(v0.c0))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC;
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((v0.c0) IS TRUE));
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)AND((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, v0 WHERE ('w(');
SELECT SUM(count) FROM (SELECT (('w(') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ('w(');
SELECT SUM(count) FROM (SELECT (('w(') IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ('w(');
SELECT ALL * FROM rt0 WHERE (((LTRIM(rt0.c0))AND(((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c0))AND(((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LTRIM(rt0.c0))AND(((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c0))AND(((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LTRIM(rt0.c0))AND(((rt0.c0)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3) IS TRUE)))>=(((+ (rt0.c2)))))) ORDER BY ((json_insert(rt0.c3, rt0.c0, rt0.c3))%(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) IS TRUE)))>=(((+ (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((json_insert(rt0.c3, rt0.c0, rt0.c3))%(CAST(rt0.c1 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3) IS TRUE)))>=(((+ (rt0.c2)))))) ORDER BY ((json_insert(rt0.c3, rt0.c0, rt0.c3))%(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) IS TRUE)))>=(((+ (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((json_insert(rt0.c3, rt0.c0, rt0.c3))%(CAST(rt0.c1 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (('0.8294543811885375')AND(TYPEOF(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('0.8294543811885375')AND(TYPEOF(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (('0.8294543811885375')AND(TYPEOF(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('0.8294543811885375')AND(TYPEOF(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY (('0.8294543811885375')AND(TYPEOF(DISTINCT rt0.c1)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c2) IS FALSE))>=(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))>=(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c2) IS FALSE))>=(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))>=(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON x'');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((((rt0.c2) IS FALSE))>=(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c3))<>((x'', rt0.c2, rt0.c3)))) AND (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c3))!=((x'', rt0.c2, rt0.c3)))) AND (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c3))<>((x'', rt0.c2, rt0.c3)))) AND (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c3))!=((x'', rt0.c2, rt0.c3)))) AND (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((((vt0.c0, rt0.c1, rt0.c3))<>((x'', rt0.c2, rt0.c3)))) AND (((rt0.c3) NOT NULL))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)<>(rt0.c1))) NOTNULL) FULL OUTER JOIN rt0 ON CAST((((0.9358978299385414, rt0.c2, rt0.c0, x'', rt0.c0))<((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3))) AS TEXT) WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END THEN ((v0.c0)>=(v0.c0)) ELSE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) END) ORDER BY CASE WHEN ((rt0.c0) NOT NULL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN CAST('0.4421534408282949' AS BLOB) WHEN COALESCE(DISTINCT rt0.c3, rt0.c2) THEN ((NULL) NOT BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c2 THEN 0.9066958881350633 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END THEN ((v0.c0)>=(v0.c0)) ELSE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)!=(rt0.c1))) NOTNULL) FULL OUTER JOIN rt0 ON CAST((((0.9358978299385414, rt0.c2, rt0.c0, x'', rt0.c0))<((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3))) AS TEXT) ORDER BY CASE WHEN ((rt0.c0) NOT NULL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN CAST('0.4421534408282949' AS BLOB) WHEN COALESCE(DISTINCT rt0.c3, rt0.c2) THEN ((NULL) NOT BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c2 THEN 0.9066958881350633 END ASC);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)<>(rt0.c1))) NOTNULL) FULL OUTER JOIN rt0 ON CAST((((0.9358978299385414, rt0.c2, rt0.c0, x'', rt0.c0))<((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3))) AS TEXT) WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END THEN ((v0.c0)>=(v0.c0)) ELSE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) END) ORDER BY CASE WHEN ((rt0.c0) NOT NULL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN CAST('0.4421534408282949' AS BLOB) WHEN COALESCE(DISTINCT rt0.c3, rt0.c2) THEN ((NULL) NOT BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c2 THEN 0.9066958881350633 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END THEN ((v0.c0)>=(v0.c0)) ELSE ((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0)!=(rt0.c1))) NOTNULL) FULL OUTER JOIN rt0 ON CAST((((0.9358978299385414, rt0.c2, rt0.c0, x'', rt0.c0))<((rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c3))) AS TEXT) ORDER BY CASE WHEN ((rt0.c0) NOT NULL) THEN v0.c0 COLLATE BINARY WHEN (NOT (v0.c0)) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END WHEN ((rt0.c2) IS TRUE) THEN CAST('0.4421534408282949' AS BLOB) WHEN COALESCE(DISTINCT rt0.c3, rt0.c2) THEN ((NULL) NOT BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c2 THEN 0.9066958881350633 END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(-473560385)))OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (0.5633664855282756 COLLATE RTRIM) AND (((rt0.c3)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(-473560385)))OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (0.5633664855282756 COLLATE RTRIM) AND (((rt0.c3)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(-473560385)))OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (0.5633664855282756 COLLATE RTRIM) AND (((rt0.c3)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(-473560385)))OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (0.5633664855282756 COLLATE RTRIM) AND (((rt0.c3)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((x'')AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(-473560385)))OR(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (0.5633664855282756 COLLATE RTRIM) AND (((rt0.c3)GLOB(rt0.c0)))));
SELECT * FROM v0, vt0, rt0 WHERE (((+ (rt0.c3)) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((CAST(v0.c0 AS INTEGER))&(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c3)) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CAST(v0.c0 AS INTEGER))&(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT * FROM v0, vt0, rt0 WHERE (((+ (rt0.c3)) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((CAST(v0.c0 AS INTEGER))&(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c3)) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CAST(v0.c0 AS INTEGER))&(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)));
SELECT * FROM v0, vt0, rt0 WHERE (((+ (rt0.c3)) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY ((CAST(v0.c0 AS INTEGER))&(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END));
SELECT COUNT(*) FROM vt0 WHERE ((('' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT (((('' IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT (((('' IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('' IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN (v0.c0 IN (rt0.c3)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((((CASE v0.c0  WHEN x'881fb563' THEN vt0.c0 END)AND((((rt0.c3))!=((rt0.c2))))))AND(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(v0.c0))))  NULLS LAST, CHANGES() ASC, (~ (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN (rt0.c3)) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CASE v0.c0  WHEN x'881fb563' THEN vt0.c0 END)AND((((rt0.c3))<>((rt0.c2))))))AND(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(v0.c0))))  NULLS LAST, CHANGES() ASC, (~ (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN (v0.c0 IN (rt0.c3)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((((CASE v0.c0  WHEN x'881fb563' THEN vt0.c0 END)AND((((rt0.c3))!=((rt0.c2))))))AND(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(v0.c0))))  NULLS LAST, CHANGES() ASC, (~ (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN (rt0.c3)) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CASE v0.c0  WHEN x'881fb563' THEN vt0.c0 END)AND((((rt0.c3))<>((rt0.c2))))))AND(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(v0.c0))))  NULLS LAST, CHANGES() ASC, (~ (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN (v0.c0 IN (rt0.c3)) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((((CASE v0.c0  WHEN x'881fb563' THEN vt0.c0 END)AND((((rt0.c3))!=((rt0.c2))))))AND(((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(v0.c0))))  NULLS LAST, CHANGES() ASC, (~ (rt0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((x'' COLLATE NOCASE) NOTNULL)) ORDER BY rt0.c1 COLLATE RTRIM ASC  NULLS LAST, ((rt0.c0)-(((((vt0.c0)AND(v0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY rt0.c1 COLLATE RTRIM ASC  NULLS LAST, ((rt0.c0)-(((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((x'' COLLATE NOCASE) NOTNULL)) ORDER BY rt0.c1 COLLATE RTRIM ASC  NULLS LAST, ((rt0.c0)-(((((vt0.c0)AND(v0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 ORDER BY rt0.c1 COLLATE RTRIM ASC  NULLS LAST, ((rt0.c0)-(((((vt0.c0)AND(v0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((x'' COLLATE NOCASE) NOTNULL)) ORDER BY rt0.c1 COLLATE RTRIM ASC  NULLS LAST, ((rt0.c0)-(((((vt0.c0)AND(v0.c0)))OR(rt0.c0))));
SELECT * FROM rt0, v0 WHERE (((x'') NOT BETWEEN (SQLITE_VERSION()) AND (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (SQLITE_VERSION()) AND (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'') NOT BETWEEN (SQLITE_VERSION()) AND (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (SQLITE_VERSION()) AND (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'') NOT BETWEEN (SQLITE_VERSION()) AND (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c3)))OR(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS FALSE)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS FALSE)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) IS FALSE)) ORDER BY (~ (CAST(rt0.c0 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(rt0.c0 AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS NUMERIC)) ORDER BY (((((v0.c0)%(v0.c0))))<((((((((((v0.c0)OR(v0.c0)))AND('c4-}^⤼')))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))!=((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)%(v0.c0))))<((((((((((v0.c0)OR(v0.c0)))AND('c4-}^⤼')))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS NUMERIC)) ORDER BY (((((v0.c0)%(v0.c0))))<((((((((((v0.c0)OR(v0.c0)))AND('c4-}^⤼')))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0))!=((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)%(v0.c0))))<((((((((((v0.c0)OR(v0.c0)))AND('c4-}^⤼')))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))<>((v0.c0))) AS NUMERIC)) ORDER BY (((((v0.c0)%(v0.c0))))<((((((((((v0.c0)OR(v0.c0)))AND('c4-}^⤼')))AND(v0.c0)))AND(v0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((rt0.c3)GLOB(rt0.c2)))=(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)GLOB(rt0.c2)))=(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((rt0.c3)GLOB(rt0.c2)))=(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)GLOB(rt0.c2)))=(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON CASE WHEN v0.c0 THEN rt0.c0 END COLLATE NOCASE WHERE (((((rt0.c3)GLOB(rt0.c2)))=(((rt0.c3) IS TRUE))));
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY CASE WHEN ((x'')GLOB(v0.c0)) THEN (~ (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0) IS TRUE) END  NULLS LAST, ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (vt0.c0)))))AND(((v0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((x'')GLOB(v0.c0)) THEN (~ (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0) IS TRUE) END  NULLS LAST, ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (vt0.c0)))))AND(((v0.c0)AND(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY CASE WHEN ((x'')GLOB(v0.c0)) THEN (~ (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0) IS TRUE) END  NULLS LAST, ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (vt0.c0)))))AND(((v0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN ((x'')GLOB(v0.c0)) THEN (~ (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0) IS TRUE) END  NULLS LAST, ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (vt0.c0)))))AND(((v0.c0)AND(vt0.c0)))));
SELECT * FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) IS FALSE)) ORDER BY CASE WHEN ((x'')GLOB(v0.c0)) THEN (~ (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN ((v0.c0) IS TRUE) END  NULLS LAST, ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND((+ (vt0.c0)))))AND(((v0.c0)AND(vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<>(rt0.c2)))|(0.7051061189530373)) WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) ELSE CASE rt0.c0  WHEN '-1820607788' THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)!=(rt0.c2)))|(0.7051061189530373)) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)==(rt0.c0)) ELSE CASE rt0.c0  WHEN '-1820607788' THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<>(rt0.c2)))|(0.7051061189530373)) WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) ELSE CASE rt0.c0  WHEN '-1820607788' THEN rt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)!=(rt0.c2)))|(0.7051061189530373)) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)==(rt0.c0)) ELSE CASE rt0.c0  WHEN '-1820607788' THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c0)<>(rt0.c2)))|(0.7051061189530373)) WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) ELSE CASE rt0.c0  WHEN '-1820607788' THEN rt0.c0 END END;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3))) IS FALSE));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (CASE ABS(rt0.c3)  WHEN TYPEOF(DISTINCT x'') THEN ((rt0.c0)+(rt0.c0)) ELSE ((rt0.c1)LIKE('M8 G.5fWd')) END) ORDER BY ABS((v0.c0 IN (vt0.c0)))  NULLS FIRST, (((((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c0, v0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((~ (v0.c0)))) DESC, CASE WHEN ((0xffffffffeefd9fc8) ISNULL) THEN (rt0.c2 IN (rt0.c0)) WHEN v0.c0 THEN (- (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c0)=(vt0.c0)) ELSE '-102734185' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c3)  WHEN TYPEOF(DISTINCT x'') THEN ((rt0.c0)+(rt0.c0)) ELSE ((rt0.c1)LIKE('M8 G.5fWd')) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY ABS((v0.c0 IN (vt0.c0)))  NULLS FIRST, (((((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c0, v0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((~ (v0.c0)))) DESC, CASE WHEN ((0xffffffffeefd9fc8) ISNULL) THEN (rt0.c2 IN (rt0.c0)) WHEN v0.c0 THEN (- (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c0)=(vt0.c0)) ELSE '-102734185' END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (CASE ABS(rt0.c3)  WHEN TYPEOF(DISTINCT x'') THEN ((rt0.c0)+(rt0.c0)) ELSE ((rt0.c1)LIKE('M8 G.5fWd')) END) ORDER BY ABS((v0.c0 IN (vt0.c0)))  NULLS FIRST, (((((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c0, v0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((~ (v0.c0)))) DESC, CASE WHEN ((0xffffffffeefd9fc8) ISNULL) THEN (rt0.c2 IN (rt0.c0)) WHEN v0.c0 THEN (- (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c0)=(vt0.c0)) ELSE '-102734185' END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c3)  WHEN TYPEOF(DISTINCT x'') THEN ((rt0.c0)+(rt0.c0)) ELSE ((rt0.c1)LIKE('M8 G.5fWd')) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON (~ (rt0.c1 COLLATE RTRIM)) ORDER BY ABS((v0.c0 IN (vt0.c0)))  NULLS FIRST, (((((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c0, v0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((~ (v0.c0)))) DESC, CASE WHEN ((0xffffffffeefd9fc8) ISNULL) THEN (rt0.c2 IN (rt0.c0)) WHEN v0.c0 THEN (- (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c0)=(vt0.c0)) ELSE '-102734185' END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c2 CROSS JOIN v0 ON (~ (rt0.c1 COLLATE RTRIM)) WHERE (CASE ABS(rt0.c3)  WHEN TYPEOF(DISTINCT x'') THEN ((rt0.c0)+(rt0.c0)) ELSE ((rt0.c1)LIKE('M8 G.5fWd')) END) ORDER BY ABS((v0.c0 IN (vt0.c0)))  NULLS FIRST, (((((rt0.c3, vt0.c0, rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c3, v0.c0, vt0.c0, vt0.c0)) AND ((rt0.c3, vt0.c0, v0.c0, v0.c0, vt0.c0)))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND ((~ (v0.c0)))) DESC, CASE WHEN ((0xffffffffeefd9fc8) ISNULL) THEN (rt0.c2 IN (rt0.c0)) WHEN v0.c0 THEN (- (rt0.c1)) WHEN CAST(rt0.c2 AS TEXT) THEN ((vt0.c0)=(vt0.c0)) ELSE '-102734185' END ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE NULL END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE NULL END)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE NULL END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE NULL END)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY TRIM(DISTINCT CASE WHEN rt0.c3 THEN rt0.c3 ELSE NULL END)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM vt0, v0 LEFT OUTER JOIN rt0 ON x'' WHERE (CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 END AS REAL));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT NULLIF(vt0.c0, rt0.c3), (rt0.c0 IN (vt0.c0, x''))) WHERE ((('XM%!')<=(((v0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('XM%!')<=(((v0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT NULLIF(vt0.c0, rt0.c3), (rt0.c0 IN (vt0.c0, x''))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT NULLIF(vt0.c0, rt0.c3), (rt0.c0 IN (vt0.c0, x''))) WHERE ((('XM%!')<=(((v0.c0)|(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('XM%!')<=(((v0.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT NULLIF(vt0.c0, rt0.c3), (rt0.c0 IN (vt0.c0, x''))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON TRIM(DISTINCT NULLIF(vt0.c0, rt0.c3), (rt0.c0 IN (vt0.c0, x''))) WHERE ((('XM%!')<=(((v0.c0)|(vt0.c0)))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (- (1.7976931348623157E308)) WHEN (NOT (rt0.c3)) THEN '' WHEN MIN(rt0.c3, rt0.c0, rt0.c1, rt0.c3) THEN rt0.c0 ELSE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY CASE rt0.c3  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN rt0.c1 END, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))<>(((rt0.c3)<(rt0.c0)))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN (- (1.7976931348623157E308)) WHEN (NOT (rt0.c3)) THEN '' WHEN MIN(rt0.c3, rt0.c0, rt0.c1, rt0.c3) THEN rt0.c0 ELSE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN rt0.c1 END, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))<>(((rt0.c3)<(rt0.c0)))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (- (1.7976931348623157E308)) WHEN (NOT (rt0.c3)) THEN '' WHEN MIN(rt0.c3, rt0.c0, rt0.c1, rt0.c3) THEN rt0.c0 ELSE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY CASE rt0.c3  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN rt0.c1 END, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))<>(((rt0.c3)<(rt0.c0)))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) ISNULL) THEN (- (1.7976931348623157E308)) WHEN (NOT (rt0.c3)) THEN '' WHEN MIN(rt0.c3, rt0.c0, rt0.c1, rt0.c3) THEN rt0.c0 ELSE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN rt0.c1 END, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))<>(((rt0.c3)<(rt0.c0)))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS INTEGER) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (- (1.7976931348623157E308)) WHEN (NOT (rt0.c3)) THEN '' WHEN MIN(rt0.c3, rt0.c0, rt0.c1, rt0.c3) THEN rt0.c0 ELSE ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) END) ORDER BY CASE rt0.c3  WHEN ((((rt0.c2)OR(rt0.c2)))OR(x'')) THEN rt0.c1 END, ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2)))<>(((rt0.c3)<(rt0.c0)))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((('')||(0.4278320554073326))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0)<>(''))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')||(0.4278320554073326))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0)!=(''))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((('')||(0.4278320554073326))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0)<>(''))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')||(0.4278320554073326))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0)!=(''))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((('')||(0.4278320554073326))) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c1))) NOT BETWEEN (((vt0.c0)<>(''))) AND (CAST(rt0.c3 AS REAL))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)|(vt0.c0)))IS(CAST('*v' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))IS(CAST('*v' AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)|(vt0.c0)))IS(CAST('*v' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0)))IS(CAST('*v' AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((vt0.c0)|(vt0.c0)))IS(CAST('*v' AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((((((((v0.c0)%(v0.c0)))OR(((v0.c0)<<('gl쥳2')))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))AND(0.7975984139910082)))OR(((v0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)%(v0.c0)))OR(((v0.c0)<<('gl쥳2')))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))AND(0.7975984139910082)))OR(((v0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((((((((v0.c0)%(v0.c0)))OR(((v0.c0)<<('gl쥳2')))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))AND(0.7975984139910082)))OR(((v0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)%(v0.c0)))OR(((v0.c0)<<('gl쥳2')))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))AND(0.7975984139910082)))OR(((v0.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((((((((((v0.c0)%(v0.c0)))OR(((v0.c0)<<('gl쥳2')))))AND((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))AND(0.7975984139910082)))OR(((v0.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c0 IN ()), (NOT (rt0.c1)), CAST(rt0.c2 AS TEXT)))<>((TRIM(DISTINCT rt0.c0, rt0.c0), ((((vt0.c0)OR(rt0.c1)))OR(v0.c0)), TRIM(DISTINCT rt0.c0))))  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0 IN ()), (NOT (rt0.c1)), CAST(rt0.c2 AS TEXT)))<>((TRIM(DISTINCT rt0.c0, rt0.c0), ((((vt0.c0)OR(rt0.c1)))OR(v0.c0)), TRIM(DISTINCT rt0.c0))))  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c0 IN ()), (NOT (rt0.c1)), CAST(rt0.c2 AS TEXT)))<>((TRIM(DISTINCT rt0.c0, rt0.c0), ((((vt0.c0)OR(rt0.c1)))OR(v0.c0)), TRIM(DISTINCT rt0.c0))))  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0 IN ()), (NOT (rt0.c1)), CAST(rt0.c2 AS TEXT)))<>((TRIM(DISTINCT rt0.c0, rt0.c0), ((((vt0.c0)OR(rt0.c1)))OR(v0.c0)), TRIM(DISTINCT rt0.c0))))  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((rt0.c0) ISNULL)) ORDER BY ((((rt0.c0 IN ()), (NOT (rt0.c1)), CAST(rt0.c2 AS TEXT)))<>((TRIM(DISTINCT rt0.c0, rt0.c0), ((((vt0.c0)OR(rt0.c1)))OR(v0.c0)), TRIM(DISTINCT rt0.c0))))  NULLS FIRST, rt0.c2;
SELECT * FROM v0 WHERE ('H嚷v') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE BINARY)), (v0.c0 COLLATE BINARY IN (((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (x'')))) ASC;
SELECT SUM(count) FROM (SELECT (('H嚷v') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE BINARY)), (v0.c0 COLLATE BINARY IN (((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (x'')))) ASC);
SELECT * FROM v0 WHERE ('H嚷v') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE BINARY)), (v0.c0 COLLATE BINARY IN (((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (x'')))) ASC;
SELECT SUM(count) FROM (SELECT (('H嚷v') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE BINARY)), (v0.c0 COLLATE BINARY IN (((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (x'')))) ASC);
SELECT * FROM v0 WHERE ('H嚷v') ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))>=(v0.c0 COLLATE BINARY)), (v0.c0 COLLATE BINARY IN (((v0.c0)OR(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (x'')))) ASC;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN (('609132464')) AND ((v0.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((v0.c0)>(v0.c0)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((v0.c0)>(v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN (('609132464')) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN (('609132464')) AND ((v0.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((v0.c0)>(v0.c0)))) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((v0.c0)>(v0.c0)))) AND ((v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN (('609132464')) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN (('609132464')) AND ((v0.c0))))) WHERE ((((vt0.c0)) BETWEEN ((((v0.c0)>(v0.c0)))) AND ((v0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1901242697');
SELECT SUM(count) FROM (SELECT ALL (('-1901242697') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1901242697');
SELECT SUM(count) FROM (SELECT ALL (('-1901242697') IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1901242697');
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('')OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('')OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('')OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('')OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('')OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rtreenode((rt0.c3 IN (rt0.c1)), ((rt0.c1)==(rt0.c0)))) ORDER BY '1718773773' COLLATE BINARY DESC, ((((rt0.c3)<(rt0.c0))) ISNULL)  NULLS LAST, ((rt0.c0)GLOB(((rt0.c3) BETWEEN (rt0.c3) AND ('-1350092404')))) ASC;
SELECT SUM(count) FROM (SELECT ((rtreenode((rt0.c3 IN (rt0.c1)), ((rt0.c1)==(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY '1718773773' COLLATE BINARY DESC, ((((rt0.c3)<(rt0.c0))) ISNULL)  NULLS LAST, ((rt0.c0)GLOB(((rt0.c3) BETWEEN (rt0.c3) AND ('-1350092404')))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rtreenode((rt0.c3 IN (rt0.c1)), ((rt0.c1)==(rt0.c0)))) ORDER BY '1718773773' COLLATE BINARY DESC, ((((rt0.c3)<(rt0.c0))) ISNULL)  NULLS LAST, ((rt0.c0)GLOB(((rt0.c3) BETWEEN (rt0.c3) AND ('-1350092404')))) ASC;
SELECT SUM(count) FROM (SELECT ((rtreenode((rt0.c3 IN (rt0.c1)), ((rt0.c1)==(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY '1718773773' COLLATE BINARY DESC, ((((rt0.c3)<(rt0.c0))) ISNULL)  NULLS LAST, ((rt0.c0)GLOB(((rt0.c3) BETWEEN (rt0.c3) AND ('-1350092404')))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rtreenode((rt0.c3 IN (rt0.c1)), ((rt0.c1)==(rt0.c0)))) ORDER BY '1718773773' COLLATE BINARY DESC, ((((rt0.c3)<(rt0.c0))) ISNULL)  NULLS LAST, ((rt0.c0)GLOB(((rt0.c3) BETWEEN (rt0.c3) AND ('-1350092404')))) ASC;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) IS FALSE), x'' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) IS FALSE), x'' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) IS FALSE), x'' COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt0.c0) IS FALSE), x'' COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(((vt0.c0) IS FALSE), x'' COLLATE NOCASE));
SELECT * FROM rt0, vt0 WHERE (0.6612336475815659) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0.6612336475815659) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1);
SELECT * FROM rt0, vt0 WHERE (0.6612336475815659) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((0.6612336475815659) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1);
SELECT * FROM rt0, vt0 WHERE (0.6612336475815659) ORDER BY rt0.c1;
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY x'4a0f6113' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY x'4a0f6113' DESC);
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY x'4a0f6113' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0 ORDER BY x'4a0f6113' DESC);
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))))) ORDER BY x'4a0f6113' DESC;
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c3)==(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)==(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c3)==(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)==(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((rt0.c3)==(rt0.c2)) COLLATE NOCASE);
SELECT * FROM vt0, v0 WHERE ((~ (((((((((0.12046924090573152)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((0.12046924090573152)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ (((((((((0.12046924090573152)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((0.12046924090573152)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((~ (((((((((0.12046924090573152)OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN ((vt0.c0)<=(0.2055417560226982)) THEN LIKELIHOOD(v0.c0, 0.3068887324284476) WHEN v0.c0 COLLATE BINARY THEN ('-1350092404' IN (v0.c0, vt0.c0)) WHEN -1350046444 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN ((vt0.c0)>(vt0.c0)) THEN (v0.c0 IN ()) END WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN ((vt0.c0)<=(0.2055417560226982)) THEN LIKELIHOOD(v0.c0, 0.3068887324284476) WHEN v0.c0 COLLATE BINARY THEN ('-1350092404' IN (v0.c0, vt0.c0)) WHEN -1350046444 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN ((vt0.c0)>(vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN ((vt0.c0)<=(0.2055417560226982)) THEN LIKELIHOOD(v0.c0, 0.3068887324284476) WHEN v0.c0 COLLATE BINARY THEN ('-1350092404' IN (v0.c0, vt0.c0)) WHEN -1350046444 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN ((vt0.c0)>(vt0.c0)) THEN (v0.c0 IN ()) END WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN ((vt0.c0)<=(0.2055417560226982)) THEN LIKELIHOOD(v0.c0, 0.3068887324284476) WHEN v0.c0 COLLATE BINARY THEN ('-1350092404' IN (v0.c0, vt0.c0)) WHEN -1350046444 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN ((vt0.c0)>(vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE (~ (v0.c0))  WHEN ((vt0.c0)<=(0.2055417560226982)) THEN LIKELIHOOD(v0.c0, 0.3068887324284476) WHEN v0.c0 COLLATE BINARY THEN ('-1350092404' IN (v0.c0, vt0.c0)) WHEN -1350046444 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN ((vt0.c0)>(vt0.c0)) THEN (v0.c0 IN ()) END WHERE (TYPEOF(v0.c0) COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((x'', v0.c0, rt0.c2, rt0.c2, x'')) NOT BETWEEN ((((((((((rt0.c3)OR(x'')))OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c0)), ((vt0.c0)!=(rt0.c0)), (rt0.c0 IN (x'42f1')), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (NULL) AND (v0.c0)))) AND ((((vt0.c0) IS FALSE), (rt0.c3 IN (rt0.c1, rt0.c1)), ((rt0.c3) IS TRUE), rt0.c3 COLLATE RTRIM, (- (rt0.c3))))) LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c3)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((x'', v0.c0, rt0.c2, rt0.c2, x'')) NOT BETWEEN ((((((((((rt0.c3)OR(x'')))OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c0)), ((vt0.c0)<>(rt0.c0)), (rt0.c0 IN (x'42f1')), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (NULL) AND (v0.c0)))) AND ((((vt0.c0) IS FALSE), (rt0.c3 IN (rt0.c1, rt0.c1)), ((rt0.c3) IS TRUE), rt0.c3 COLLATE RTRIM, (- (rt0.c3))))) LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c3)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (((x'', v0.c0, rt0.c2, rt0.c2, x'')) NOT BETWEEN ((((((((((rt0.c3)OR(x'')))OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c0)), ((vt0.c0)!=(rt0.c0)), (rt0.c0 IN (x'42f1')), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (NULL) AND (v0.c0)))) AND ((((vt0.c0) IS FALSE), (rt0.c3 IN (rt0.c1, rt0.c1)), ((rt0.c3) IS TRUE), rt0.c3 COLLATE RTRIM, (- (rt0.c3))))) LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c3)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((x'', v0.c0, rt0.c2, rt0.c2, x'')) NOT BETWEEN ((((((((((rt0.c3)OR(x'')))OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c0)), ((vt0.c0)<>(rt0.c0)), (rt0.c0 IN (x'42f1')), rt0.c0 COLLATE RTRIM, ((rt0.c0) BETWEEN (NULL) AND (v0.c0)))) AND ((((vt0.c0) IS FALSE), (rt0.c3 IN (rt0.c1, rt0.c1)), ((rt0.c3) IS TRUE), rt0.c3 COLLATE RTRIM, (- (rt0.c3))))) LEFT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)!=(rt0.c3)));
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(v0.c0, v0.c0) IN ((v0.c0 IN (v0.c0)), ((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(v0.c0, v0.c0) IN ((v0.c0 IN (v0.c0)), ((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(v0.c0, v0.c0) IN ((v0.c0 IN (v0.c0)), ((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(v0.c0, v0.c0) IN ((v0.c0 IN (v0.c0)), ((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NULLIF(v0.c0, v0.c0) IN ((v0.c0 IN (v0.c0)), ((v0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((vt0.c0 IN (vt0.c0)))OR((- (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) WHEN (- (rt0.c2)) THEN (((rt0.c1))<=((rt0.c2))) WHEN -512855359 THEN ((((rt0.c0)AND(rt0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) WHEN (- (rt0.c2)) THEN (((rt0.c1))<=((rt0.c2))) WHEN -512855359 THEN ((((rt0.c0)AND(rt0.c0)))OR(NULL)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) WHEN (- (rt0.c2)) THEN (((rt0.c1))<=((rt0.c2))) WHEN -512855359 THEN ((((rt0.c0)AND(rt0.c0)))OR(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) WHEN (- (rt0.c2)) THEN (((rt0.c1))<=((rt0.c2))) WHEN -512855359 THEN ((((rt0.c0)AND(rt0.c0)))OR(NULL)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((rt0.c2)AND(rt0.c2)) THEN ((rt0.c2)>(rt0.c2)) WHEN (- (rt0.c2)) THEN (((rt0.c1))<=((rt0.c2))) WHEN -512855359 THEN ((((rt0.c0)AND(rt0.c0)))OR(NULL)) END);
SELECT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0) BETWEEN (-8.18992836E8) AND (rt0.c2)) IN ()) FULL OUTER JOIN v0 ON ((CASE rt0.c0  WHEN x'e3f6' THEN rt0.c0 ELSE rt0.c3 END)>((+ (rt0.c2)))) WHERE ((((- (rt0.c3)))GLOB(COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))GLOB(COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0) BETWEEN (-8.18992836E8) AND (rt0.c2)) IN ()) FULL OUTER JOIN v0 ON ((CASE rt0.c0  WHEN x'e3f6' THEN rt0.c0 ELSE rt0.c3 END)>((+ (rt0.c2)))));
SELECT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0) BETWEEN (-8.18992836E8) AND (rt0.c2)) IN ()) FULL OUTER JOIN v0 ON ((CASE rt0.c0  WHEN x'e3f6' THEN rt0.c0 ELSE rt0.c3 END)>((+ (rt0.c2)))) WHERE ((((- (rt0.c3)))GLOB(COALESCE(v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3)))GLOB(COALESCE(v0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c0) BETWEEN (-8.18992836E8) AND (rt0.c2)) IN ()) FULL OUTER JOIN v0 ON ((CASE rt0.c0  WHEN x'e3f6' THEN rt0.c0 ELSE rt0.c3 END)>((+ (rt0.c2)))));
SELECT * FROM vt0 INNER JOIN rt0 ON (((rt0.c0) BETWEEN (-8.18992836E8) AND (rt0.c2)) IN ()) FULL OUTER JOIN v0 ON ((CASE rt0.c0  WHEN x'e3f6' THEN rt0.c0 ELSE rt0.c3 END)>((+ (rt0.c2)))) WHERE ((((- (rt0.c3)))GLOB(COALESCE(v0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(CAST(vt0.c0 AS BLOB) AS REAL);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY v0.c0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY v0.c0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c0) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS NUMERIC)) ORDER BY ((CASE rt0.c3  WHEN '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta' THEN rt0.c1 END)&(COALESCE(DISTINCT v0.c0, v0.c0, vt0.c0, NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE rt0.c3  WHEN '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta' THEN rt0.c1 END)&(COALESCE(DISTINCT v0.c0, v0.c0, vt0.c0, NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS NUMERIC)) ORDER BY ((CASE rt0.c3  WHEN '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta' THEN rt0.c1 END)&(COALESCE(DISTINCT v0.c0, v0.c0, vt0.c0, NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>=(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE rt0.c3  WHEN '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta' THEN rt0.c1 END)&(COALESCE(DISTINCT v0.c0, v0.c0, vt0.c0, NULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(((v0.c0)>=(v0.c0)) AS NUMERIC)) ORDER BY ((CASE rt0.c3  WHEN '*|s-7082320621194522436T537 -2028928340504941057-2850013810543761642-336:-1621554939663807109-1628T865677385850432327:145Ta' THEN rt0.c1 END)&(COALESCE(DISTINCT v0.c0, v0.c0, vt0.c0, NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (((((rt0.c0 IN (rt0.c0, rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0) IS TRUE)))>((CAST(v0.c0 AS INTEGER), ((rt0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((+ (v0.c0)) IN ())  NULLS FIRST, ((rt0.c3)<=(((rt0.c1)>=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN (rt0.c0, rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0) IS TRUE)))>((CAST(v0.c0 AS INTEGER), ((rt0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))AND(CAST(rt0.c1 AS INTEGER))) ORDER BY ((+ (v0.c0)) IN ())  NULLS FIRST, ((rt0.c3)<=(((rt0.c1)>=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (((((rt0.c0 IN (rt0.c0, rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0) IS TRUE)))>((CAST(v0.c0 AS INTEGER), ((rt0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((+ (v0.c0)) IN ())  NULLS FIRST, ((rt0.c3)<=(((rt0.c1)>=(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN (rt0.c0, rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0) IS TRUE)))>((CAST(v0.c0 AS INTEGER), ((rt0.c0) NOTNULL), ((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0 NOT INDEXED CROSS JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))AND(CAST(rt0.c1 AS INTEGER))) ORDER BY ((+ (v0.c0)) IN ())  NULLS FIRST, ((rt0.c3)<=(((rt0.c1)>=(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON ((((((rt0.c2) ISNULL))OR(((((rt0.c3)AND(rt0.c2)))AND(NULL)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (((((rt0.c0 IN (rt0.c0, rt0.c2)), CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c0) IS TRUE)))>((CAST(v0.c0 AS INTEGER), ((rt0.c0) NOTNULL), ((v0.c0) IS FALSE))))) ORDER BY ((+ (v0.c0)) IN ())  NULLS FIRST, ((rt0.c3)<=(((rt0.c1)>=(v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE BINARY COLLATE BINARY) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) THEN UNLIKELY(rt0.c2) ELSE load_extension(rt0.c3, rt0.c1) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) THEN UNLIKELY(rt0.c2) ELSE load_extension(rt0.c3, rt0.c1) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (NULL COLLATE BINARY COLLATE BINARY) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) THEN UNLIKELY(rt0.c2) ELSE load_extension(rt0.c3, rt0.c1) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)) THEN UNLIKELY(rt0.c2) ELSE load_extension(rt0.c3, rt0.c1) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT NULL))>(TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))>(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT NULL))>(TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))>(TYPEOF(rt0.c2)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((rt0.c1) NOT NULL))>(TYPEOF(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('c4-}^⤼')|(((v0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(0X5f99bbbd AS NUMERIC)) AND (((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((('c4-}^⤼')|(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(0X5f99bbbd AS NUMERIC)) AND (((x'') IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('c4-}^⤼')|(((v0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(0X5f99bbbd AS NUMERIC)) AND (((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((('c4-}^⤼')|(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(0X5f99bbbd AS NUMERIC)) AND (((x'') IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((('c4-}^⤼')|(((v0.c0) NOTNULL)))) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (CAST(0X5f99bbbd AS NUMERIC)) AND (((x'') IS FALSE))) ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 COLLATE NOCASE CROSS JOIN v0 ON (~ (((rt0.c1)%(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 COLLATE NOCASE CROSS JOIN v0 ON (~ (((rt0.c1)%(rt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 COLLATE NOCASE CROSS JOIN v0 ON (~ (((rt0.c1)%(rt0.c1)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0 COLLATE NOCASE CROSS JOIN v0 ON (~ (((rt0.c1)%(rt0.c1)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c0 COLLATE NOCASE CROSS JOIN v0 ON (~ (((rt0.c1)%(rt0.c1)))) WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.223454516715884))))) WHERE (((SUBSTR(rt0.c1, rt0.c0))GLOB(((rt0.c3) ISNULL)))) ORDER BY TRIM(DISTINCT (~ (rt0.c0))) ASC, ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)*(rt0.c2)))))AND(CAST(0.1629331550823062 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(rt0.c1, rt0.c0))GLOB(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.223454516715884))))) ORDER BY TRIM(DISTINCT (~ (rt0.c0))) ASC, ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)*(rt0.c2)))))AND(CAST(0.1629331550823062 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.223454516715884))))) WHERE (((SUBSTR(rt0.c1, rt0.c0))GLOB(((rt0.c3) ISNULL)))) ORDER BY TRIM(DISTINCT (~ (rt0.c0))) ASC, ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)*(rt0.c2)))))AND(CAST(0.1629331550823062 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(rt0.c1, rt0.c0))GLOB(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.223454516715884))))) ORDER BY TRIM(DISTINCT (~ (rt0.c0))) ASC, ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)*(rt0.c2)))))AND(CAST(0.1629331550823062 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((0.223454516715884))))) WHERE (((SUBSTR(rt0.c1, rt0.c0))GLOB(((rt0.c3) ISNULL)))) ORDER BY TRIM(DISTINCT (~ (rt0.c0))) ASC, ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))AND(((vt0.c0)*(rt0.c2)))))AND(CAST(0.1629331550823062 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM v0 CROSS JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)==(rt0.c3)) THEN (- (v0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN 0.3026100777358003 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((((+ (rt0.c3))) BETWEEN (v0.c0) AND (rt0.c3))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)+(((rt0.c2) NOTNULL))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR('-915520447')))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) BETWEEN (v0.c0) AND (rt0.c3))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)==(rt0.c3)) THEN (- (v0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN 0.3026100777358003 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)+(((rt0.c2) NOTNULL))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR('-915520447')))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c1 AS TEXT))));
SELECT * FROM v0 CROSS JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)==(rt0.c3)) THEN (- (v0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN 0.3026100777358003 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((((+ (rt0.c3))) BETWEEN (v0.c0) AND (rt0.c3))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)+(((rt0.c2) NOTNULL))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR('-915520447')))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) BETWEEN (v0.c0) AND (rt0.c3))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)==(rt0.c3)) THEN (- (v0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN 0.3026100777358003 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)+(((rt0.c2) NOTNULL))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR('-915520447')))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c1 AS TEXT))));
SELECT * FROM v0 CROSS JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY FULL OUTER JOIN rt0 ON CASE WHEN ((vt0.c0)==(rt0.c3)) THEN (- (v0.c0)) WHEN rt0.c0 COLLATE RTRIM THEN 0.3026100777358003 WHEN ((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((((+ (rt0.c3))) BETWEEN (v0.c0) AND (rt0.c3))) ORDER BY ((CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c2 END)+(((rt0.c2) NOTNULL))) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE BINARY)OR('-915520447')))OR(vt0.c0 COLLATE BINARY)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(CAST(rt0.c1 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))!=((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))!=((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))!=((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS INTEGER))!=((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))!=((~ (v0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON NULL WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ('-1350092404')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON NULL ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ('-1350092404')) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON NULL WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ('-1350092404')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON NULL ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ('-1350092404')) ASC);
SELECT COUNT(*) FROM vt0 CROSS JOIN v0 ON ((v0.c0) ISNULL) COLLATE NOCASE LEFT OUTER JOIN rt0 ON NULL WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND ('-1350092404')) ASC;
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((v0.c0)<<(vt0.c0)))))OR(((v0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(v0.c0)))AND(vt0.c0 COLLATE BINARY))) ORDER BY json_remove(v0.c0 COLLATE BINARY, COALESCE(DISTINCT v0.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)OR(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((v0.c0)<<(vt0.c0)))))OR(((v0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(v0.c0)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_remove(v0.c0 COLLATE BINARY, COALESCE(DISTINCT v0.c0, vt0.c0)) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((v0.c0)<<(vt0.c0)))))OR(((v0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(v0.c0)))AND(vt0.c0 COLLATE BINARY))) ORDER BY json_remove(v0.c0 COLLATE BINARY, COALESCE(DISTINCT v0.c0, vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((v0.c0)OR(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((v0.c0)<<(vt0.c0)))))OR(((v0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(v0.c0)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY json_remove(v0.c0 COLLATE BINARY, COALESCE(DISTINCT v0.c0, vt0.c0)) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(CAST(vt0.c0 AS BLOB))))AND(((v0.c0)<<(vt0.c0)))))OR(((v0.c0)%(vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)))AND(v0.c0)))AND(vt0.c0 COLLATE BINARY))) ORDER BY json_remove(v0.c0 COLLATE BINARY, COALESCE(DISTINCT v0.c0, vt0.c0)) DESC;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(TRIM(rt0.c3))) INNER JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND (((1797769045)IS NOT(rt0.c2)))) WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(TRIM(rt0.c3))) INNER JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND (((1797769045)IS NOT(rt0.c2)))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(TRIM(rt0.c3))) INNER JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND (((1797769045)IS NOT(rt0.c2)))) WHERE (CAST(rt0.c2 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c2 IN (rt0.c2)))AND(((rt0.c3) IS TRUE))))AND(TRIM(rt0.c3))) INNER JOIN rt0 ON ((((rt0.c0) IS TRUE)) BETWEEN (CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND (((1797769045)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ('T''?悶퇱*FQ') ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC  NULLS FIRST, x'29b8' ASC, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT (('T''?悶퇱*FQ') IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC  NULLS FIRST, x'29b8' ASC, (- (NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('T''?悶퇱*FQ') ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC  NULLS FIRST, x'29b8' ASC, (- (NULL)) DESC;
SELECT SUM(count) FROM (SELECT (('T''?悶퇱*FQ') IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC  NULLS FIRST, x'29b8' ASC, (- (NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE ('T''?悶퇱*FQ') ORDER BY CAST(rt0.c1 COLLATE RTRIM AS BLOB) ASC  NULLS FIRST, x'29b8' ASC, (- (NULL)) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (+ (((('-1766691920'))<=((v0.c0))))) INNER JOIN v0 ON ((CASE 1514995790  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 1795922775 THEN rt0.c2 ELSE v0.c0 END)%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN '-122276042' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))!=((((vt0.c0) ISNULL))))) ORDER BY ((CASE WHEN '-1549909823' THEN rt0.c1 ELSE rt0.c0 END)IS NOT((NOT (x'')))), x'7736';
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN '-122276042' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))<>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (+ (((('-1766691920'))<=((v0.c0))))) INNER JOIN v0 ON ((CASE 1514995790  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 1795922775 THEN rt0.c2 ELSE v0.c0 END)%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ORDER BY ((CASE WHEN '-1549909823' THEN rt0.c1 ELSE rt0.c0 END)IS NOT((NOT (x'')))), x'7736');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (+ (((('-1766691920'))<=((v0.c0))))) INNER JOIN v0 ON ((CASE 1514995790  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 1795922775 THEN rt0.c2 ELSE v0.c0 END)%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN '-122276042' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))!=((((vt0.c0) ISNULL))))) ORDER BY ((CASE WHEN '-1549909823' THEN rt0.c1 ELSE rt0.c0 END)IS NOT((NOT (x'')))), x'7736';
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN '-122276042' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))<>((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (+ (((('-1766691920'))<=((v0.c0))))) INNER JOIN v0 ON ((CASE 1514995790  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 1795922775 THEN rt0.c2 ELSE v0.c0 END)%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ORDER BY ((CASE WHEN '-1549909823' THEN rt0.c1 ELSE rt0.c0 END)IS NOT((NOT (x'')))), x'7736');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (+ (((('-1766691920'))<=((v0.c0))))) INNER JOIN v0 ON ((CASE 1514995790  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN 1795922775 THEN rt0.c2 ELSE v0.c0 END)%(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) WHERE ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN '-122276042' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))!=((((vt0.c0) ISNULL))))) ORDER BY ((CASE WHEN '-1549909823' THEN rt0.c1 ELSE rt0.c0 END)IS NOT((NOT (x'')))), x'7736';
SELECT ALL * FROM vt0, v0 WHERE (((((0.20496625485630893)OR((((vt0.c0))<>((vt0.c0))))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.20496625485630893)OR((((vt0.c0))!=((vt0.c0))))))AND((+ (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((0.20496625485630893)OR((((vt0.c0))<>((vt0.c0))))))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.20496625485630893)OR((((vt0.c0))!=((vt0.c0))))))AND((+ (v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((0.20496625485630893)OR((((vt0.c0))<>((vt0.c0))))))AND((+ (v0.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) ISNULL)) NOTNULL) INNER JOIN rt0 ON ((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c0) ISNULL))))AND((NOT ('2124565971')))))OR((v0.c0 IN ()))))OR(((rt0.c0)AND('507020551')))) WHERE (((QUOTE(rt0.c3)) BETWEEN (((vt0.c0)!=(rt0.c0))) AND ((vt0.c0 IN (rt0.c1))))) ORDER BY TRIM(((rt0.c1)<(rt0.c0)), ((((v0.c0)OR(x'')))OR(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c3)) BETWEEN (((vt0.c0)!=(rt0.c0))) AND ((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) ISNULL)) NOTNULL) INNER JOIN rt0 ON ((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c0) ISNULL))))AND((NOT ('2124565971')))))OR((v0.c0 IN ()))))OR(((rt0.c0)AND('507020551')))) ORDER BY TRIM(((rt0.c1)<(rt0.c0)), ((((v0.c0)OR(x'')))OR(v0.c0))) ASC);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) ISNULL)) NOTNULL) INNER JOIN rt0 ON ((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c0) ISNULL))))AND((NOT ('2124565971')))))OR((v0.c0 IN ()))))OR(((rt0.c0)AND('507020551')))) WHERE (((QUOTE(rt0.c3)) BETWEEN (((vt0.c0)!=(rt0.c0))) AND ((vt0.c0 IN (rt0.c1))))) ORDER BY TRIM(((rt0.c1)<(rt0.c0)), ((((v0.c0)OR(x'')))OR(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c3)) BETWEEN (((vt0.c0)!=(rt0.c0))) AND ((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) ISNULL)) NOTNULL) INNER JOIN rt0 ON ((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c0) ISNULL))))AND((NOT ('2124565971')))))OR((v0.c0 IN ()))))OR(((rt0.c0)AND('507020551')))) ORDER BY TRIM(((rt0.c1)<(rt0.c0)), ((((v0.c0)OR(x'')))OR(v0.c0))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (rt0.c3)) COLLATE BINARY) ORDER BY CAST(((0.9773077033951753) IS TRUE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((0.9773077033951753) IS TRUE) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (rt0.c3)) COLLATE BINARY) ORDER BY CAST(((0.9773077033951753) IS TRUE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(((0.9773077033951753) IS TRUE) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((+ (rt0.c3)) COLLATE BINARY) ORDER BY CAST(((0.9773077033951753) IS TRUE) AS TEXT)  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (JULIANDAY(v0.c0, rt0.c1, 0.4841729432670663, rt0.c0, rt0.c2) COLLATE BINARY) ORDER BY CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((v0.c0)OR(NULL)) THEN CASE WHEN rt0.c3 THEN NULL ELSE rt0.c1 END END ASC, CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END  WHEN LIKELY(rt0.c0) THEN ((rt0.c0) IS FALSE) WHEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, '3by', rt0.c1)) AND ((v0.c0, rt0.c1, NULL))) THEN (rt0.c3 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))OR(x'')) THEN CAST(rt0.c1 AS NUMERIC) ELSE '-1135864404' END  NULLS FIRST, (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), LIKE(rt0.c0, rt0.c1, '}'), NULL))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, v0.c0, ((v0.c0)OR(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(v0.c0, rt0.c1, 0.4841729432670663, rt0.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((v0.c0)OR(NULL)) THEN CASE WHEN rt0.c3 THEN NULL ELSE rt0.c1 END END ASC, CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END  WHEN LIKELY(rt0.c0) THEN ((rt0.c0) IS FALSE) WHEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, '3by', rt0.c1)) AND ((v0.c0, rt0.c1, NULL))) THEN (rt0.c3 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))OR(x'')) THEN CAST(rt0.c1 AS NUMERIC) ELSE '-1135864404' END  NULLS FIRST, (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), LIKE(rt0.c0, rt0.c1, '}'), NULL))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, v0.c0, ((v0.c0)OR(rt0.c3))))) DESC);
SELECT * FROM rt0, v0 WHERE (JULIANDAY(v0.c0, rt0.c1, 0.4841729432670663, rt0.c0, rt0.c2) COLLATE BINARY) ORDER BY CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((v0.c0)OR(NULL)) THEN CASE WHEN rt0.c3 THEN NULL ELSE rt0.c1 END END ASC, CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END  WHEN LIKELY(rt0.c0) THEN ((rt0.c0) IS FALSE) WHEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, '3by', rt0.c1)) AND ((v0.c0, rt0.c1, NULL))) THEN (rt0.c3 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))OR(x'')) THEN CAST(rt0.c1 AS NUMERIC) ELSE '-1135864404' END  NULLS FIRST, (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), LIKE(rt0.c0, rt0.c1, '}'), NULL))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, v0.c0, ((v0.c0)OR(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((JULIANDAY(v0.c0, rt0.c1, 0.4841729432670663, rt0.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((v0.c0)OR(NULL)) THEN CASE WHEN rt0.c3 THEN NULL ELSE rt0.c1 END END ASC, CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END  WHEN LIKELY(rt0.c0) THEN ((rt0.c0) IS FALSE) WHEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, '3by', rt0.c1)) AND ((v0.c0, rt0.c1, NULL))) THEN (rt0.c3 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))OR(x'')) THEN CAST(rt0.c1 AS NUMERIC) ELSE '-1135864404' END  NULLS FIRST, (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), LIKE(rt0.c0, rt0.c1, '}'), NULL))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, v0.c0, ((v0.c0)OR(rt0.c3))))) DESC);
SELECT * FROM rt0, v0 WHERE (JULIANDAY(v0.c0, rt0.c1, 0.4841729432670663, rt0.c0, rt0.c2) COLLATE BINARY) ORDER BY CASE ((rt0.c0)LIKE(rt0.c0))  WHEN ((v0.c0)OR(NULL)) THEN CASE WHEN rt0.c3 THEN NULL ELSE rt0.c1 END END ASC, CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END  WHEN LIKELY(rt0.c0) THEN ((rt0.c0) IS FALSE) WHEN (((v0.c0, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, '3by', rt0.c1)) AND ((v0.c0, rt0.c1, NULL))) THEN (rt0.c3 IN ()) WHEN ((((rt0.c1)AND(rt0.c0)))OR(x'')) THEN CAST(rt0.c1 AS NUMERIC) ELSE '-1135864404' END  NULLS FIRST, (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)), LIKE(rt0.c0, rt0.c1, '}'), NULL))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, v0.c0, ((v0.c0)OR(rt0.c3))))) DESC;
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c3);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3))) IS TRUE)  NULLS FIRST, (- ((rt0.c3 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3))) IS TRUE)  NULLS FIRST, (- ((rt0.c3 IN (vt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3))) IS TRUE)  NULLS FIRST, (- ((rt0.c3 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3))) IS TRUE)  NULLS FIRST, (- ((rt0.c3 IN (vt0.c0)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0 IN ()))AND(((rt0.c1) IS TRUE))))OR(((rt0.c2) ISNULL)))) ORDER BY ((((((rt0.c0)OR(vt0.c0)))AND(rt0.c3))) IS TRUE)  NULLS FIRST, (- ((rt0.c3 IN (vt0.c0)))) ASC;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1)/(rt0.c3)))<=(((vt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c3)))<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1)/(rt0.c3)))<=(((vt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c3)))<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1)/(rt0.c3)))<=(((vt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN 0xffffffffa39e40c1 END THEN ((vt0.c0)==(vt0.c0)) WHEN (((rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c2, rt0.c2, NULL))) THEN ABS(vt0.c0) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c1)<=(rt0.c2)) THEN LAST_INSERT_ROWID() END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN 0Xffffffffa39e40c1 END THEN ((vt0.c0)=(vt0.c0)) WHEN (((rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c2, rt0.c2, NULL))) THEN ABS(vt0.c0) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c1)<=(rt0.c2)) THEN LAST_INSERT_ROWID() END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN 0xffffffffa39e40c1 END THEN ((vt0.c0)==(vt0.c0)) WHEN (((rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c2, rt0.c2, NULL))) THEN ABS(vt0.c0) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c1)<=(rt0.c2)) THEN LAST_INSERT_ROWID() END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN 0Xffffffffa39e40c1 END THEN ((vt0.c0)=(vt0.c0)) WHEN (((rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c2, rt0.c2, NULL))) THEN ABS(vt0.c0) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c1)<=(rt0.c2)) THEN LAST_INSERT_ROWID() END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN CASE WHEN rt0.c2 THEN 0xffffffffa39e40c1 END THEN ((vt0.c0)==(vt0.c0)) WHEN (((rt0.c1, rt0.c0, vt0.c0, rt0.c3, rt0.c3))<((rt0.c0, rt0.c0, rt0.c2, rt0.c2, NULL))) THEN ABS(vt0.c0) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END END) ORDER BY CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))  WHEN ((rt0.c1)<=(rt0.c2)) THEN LAST_INSERT_ROWID() END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)AND(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)AND(rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((NULL)AND(rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0, rt0.c1, 0.2055417560226982)) NOT BETWEEN ((vt0.c0, x'', v0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1))) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (-971948953) AND (((rt0.c3)-('(Ix\n\r''<z'))))  NULLS FIRST, '-2071213128';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c1, 0.2055417560226982)) NOT BETWEEN ((vt0.c0, x'', v0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (-971948953) AND (((rt0.c3)-('(Ix\n\r''<z'))))  NULLS FIRST, '-2071213128');
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0, rt0.c1, 0.2055417560226982)) NOT BETWEEN ((vt0.c0, x'', v0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1))) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (-971948953) AND (((rt0.c3)-('(Ix\n\r''<z'))))  NULLS FIRST, '-2071213128';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, rt0.c1, 0.2055417560226982)) NOT BETWEEN ((vt0.c0, x'', v0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (-971948953) AND (((rt0.c3)-('(Ix\n\r''<z'))))  NULLS FIRST, '-2071213128');
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((v0.c0, rt0.c1, 0.2055417560226982)) NOT BETWEEN ((vt0.c0, x'', v0.c0)) AND ((rt0.c3, rt0.c3, rt0.c1))) COLLATE NOCASE) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c3 END) NOT BETWEEN (-971948953) AND (((rt0.c3)-('(Ix\n\r''<z'))))  NULLS FIRST, '-2071213128';
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND ('-102734185'))) ORDER BY TRIM((rt0.c1 IN ()), (((rt0.c2))<=((x''))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND ('-102734185'))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c1 IN ()), (((rt0.c2))<=((x'')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND ('-102734185'))) ORDER BY TRIM((rt0.c1 IN ()), (((rt0.c2))<=((x''))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND ('-102734185'))) IS TRUE)  as count FROM rt0 ORDER BY TRIM((rt0.c1 IN ()), (((rt0.c2))<=((x'')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND ('-102734185'))) ORDER BY TRIM((rt0.c1 IN ()), (((rt0.c2))<=((x''))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((json_object(v0.c0, v0.c0)) NOTNULL) WHERE ((((((((('')AND(NULL)))AND(((v0.c0)!=(v0.c0)))))AND(STRFTIME(vt0.c0, vt0.c0, v0.c0))))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, vt0.c0)))) BETWEEN (v0.c0) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, 0.30642017401159927  NULLS FIRST, CASE WHEN v0.c0 COLLATE RTRIM THEN x'' WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (v0.c0 IN (vt0.c0, v0.c0)) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN '786538660' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('')AND(NULL)))AND(((v0.c0)!=(v0.c0)))))AND(STRFTIME(vt0.c0, vt0.c0, v0.c0))))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((json_object(v0.c0, v0.c0)) NOTNULL) ORDER BY (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, vt0.c0)))) BETWEEN (v0.c0) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, 0.30642017401159927  NULLS FIRST, CASE WHEN v0.c0 COLLATE RTRIM THEN x'' WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (v0.c0 IN (vt0.c0, v0.c0)) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN '786538660' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((json_object(v0.c0, v0.c0)) NOTNULL) WHERE ((((((((('')AND(NULL)))AND(((v0.c0)!=(v0.c0)))))AND(STRFTIME(vt0.c0, vt0.c0, v0.c0))))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, vt0.c0)))) BETWEEN (v0.c0) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, 0.30642017401159927  NULLS FIRST, CASE WHEN v0.c0 COLLATE RTRIM THEN x'' WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (v0.c0 IN (vt0.c0, v0.c0)) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN '786538660' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('')AND(NULL)))AND(((v0.c0)!=(v0.c0)))))AND(STRFTIME(vt0.c0, vt0.c0, v0.c0))))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((json_object(v0.c0, v0.c0)) NOTNULL) ORDER BY (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, vt0.c0)))) BETWEEN (v0.c0) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, 0.30642017401159927  NULLS FIRST, CASE WHEN v0.c0 COLLATE RTRIM THEN x'' WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (v0.c0 IN (vt0.c0, v0.c0)) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN '786538660' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((json_object(v0.c0, v0.c0)) NOTNULL) WHERE ((((((((('')AND(NULL)))AND(((v0.c0)!=(v0.c0)))))AND(STRFTIME(vt0.c0, vt0.c0, v0.c0))))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, NULL, vt0.c0)))) BETWEEN (v0.c0) AND (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST, 0.30642017401159927  NULLS FIRST, CASE WHEN v0.c0 COLLATE RTRIM THEN x'' WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (v0.c0 IN (vt0.c0, v0.c0)) WHEN ((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) THEN '786538660' END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (0xffffffffc96e4441)) IN (CAST(vt0.c0 AS TEXT)))) ORDER BY rt0.c2 ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (0xffffffffc96e4441)) IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (0xffffffffc96e4441)) IN (CAST(vt0.c0 AS TEXT)))) ORDER BY rt0.c2 ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (0xffffffffc96e4441)) IN (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((- (0xffffffffc96e4441)) IN (CAST(vt0.c0 AS TEXT)))) ORDER BY rt0.c2 ASC, (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE (- (vt0.c0)) END) ORDER BY (+ (CAST('H~' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST('H~' AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE (- (vt0.c0)) END) ORDER BY (+ (CAST('H~' AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST('H~' AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)IS NOT(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0)>(vt0.c0)) ELSE (- (vt0.c0)) END) ORDER BY (+ (CAST('H~' AS TEXT)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((v0.c0 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c0) ISNULL))AND(((((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'cf31')))))AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND(((((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'cf31')))))AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c0) ISNULL))AND(((((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'cf31')))))AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) ISNULL))AND(((((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'cf31')))))AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((rt0.c0) ISNULL))AND(((((((((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(x'cf31')))))AND(CAST(rt0.c3 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)+(((rt0.c3)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)+(((rt0.c3)=(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)+(((rt0.c3)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)+(((rt0.c3)=(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c0 END)+(((rt0.c3)=(rt0.c2))));
SELECT * FROM rt0, v0 WHERE ((rt0.c3 COLLATE NOCASE IN (CAST(rt0.c3 AS REAL)))) ORDER BY (rt0.c0 IN ()) ASC, CAST(rt0.c0 AS INTEGER) ASC  NULLS FIRST, (((((((((((('0.1629331550823062')OR(rt0.c3)))OR(rt0.c2)))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(NULL)))OR(0.1386103500995236))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE NOCASE IN (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN ()) ASC, CAST(rt0.c0 AS INTEGER) ASC  NULLS FIRST, (((((((((((('0.1629331550823062')OR(rt0.c3)))OR(rt0.c2)))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(NULL)))OR(0.1386103500995236))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((rt0.c3 COLLATE NOCASE IN (CAST(rt0.c3 AS REAL)))) ORDER BY (rt0.c0 IN ()) ASC, CAST(rt0.c0 AS INTEGER) ASC  NULLS FIRST, (((((((((((('0.1629331550823062')OR(rt0.c3)))OR(rt0.c2)))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(NULL)))OR(0.1386103500995236))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 COLLATE NOCASE IN (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c0 IN ()) ASC, CAST(rt0.c0 AS INTEGER) ASC  NULLS FIRST, (((((((((((('0.1629331550823062')OR(rt0.c3)))OR(rt0.c2)))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(NULL)))OR(0.1386103500995236))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((rt0.c3 COLLATE NOCASE IN (CAST(rt0.c3 AS REAL)))) ORDER BY (rt0.c0 IN ()) ASC, CAST(rt0.c0 AS INTEGER) ASC  NULLS FIRST, (((((((((((('0.1629331550823062')OR(rt0.c3)))OR(rt0.c2)))OR(((((v0.c0)AND(v0.c0)))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(NULL)))OR(0.1386103500995236))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR((('') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR((('') IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR((('') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) IS FALSE))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR((('') IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) IS FALSE))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR((('') IS FALSE))));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS FIRST, CASE rtreenode(v0.c0, v0.c0)  WHEN v0.c0 THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS FIRST, CASE rtreenode(v0.c0, v0.c0)  WHEN v0.c0 THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS FIRST, CASE rtreenode(v0.c0, v0.c0)  WHEN v0.c0 THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((~ ((+ (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS FIRST, CASE rtreenode(v0.c0, v0.c0)  WHEN v0.c0 THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 END DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ ((+ (v0.c0))))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOTNULL) DESC  NULLS FIRST, CASE rtreenode(v0.c0, v0.c0)  WHEN v0.c0 THEN v0.c0 WHEN ((v0.c0) IS FALSE) THEN v0.c0 COLLATE RTRIM WHEN v0.c0 THEN v0.c0 END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN 0.6431238142452108 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)%(((rt0.c2)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN 0.6431238142452108 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)%(((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN 0.6431238142452108 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)%(((rt0.c2)+(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN 0.6431238142452108 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)%(((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 THEN 0.6431238142452108 WHEN rt0.c2 THEN x'' WHEN rt0.c0 THEN rt0.c0 END)%(((rt0.c2)+(rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((((0.4919185576323195)AND(rt0.c0)))OR(x''))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (0X7de76faa))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4919185576323195)AND(rt0.c0)))OR(x''))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (0x7de76faa))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((((0.4919185576323195)AND(rt0.c0)))OR(x''))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (0X7de76faa))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.4919185576323195)AND(rt0.c0)))OR(x''))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (0x7de76faa))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((((0.4919185576323195)AND(rt0.c0)))OR(x''))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (0X7de76faa))) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0)%(v0.c0)))&(CAST(rt0.c0 AS INTEGER)))) ORDER BY (~ (rt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST, (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt0.c0, (+ (vt0.c0)), (((NULL)) NOT BETWEEN ((rt0.c0)) AND (('609132464'))))) AND ((v0.c0 COLLATE NOCASE, JULIANDAY(0.32527457916752833, rt0.c2, 0.12032978686273976, rt0.c0, rt0.c1), (~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0)))&(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST, (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt0.c0, (+ (vt0.c0)), (((NULL)) NOT BETWEEN ((rt0.c0)) AND (('609132464'))))) AND ((v0.c0 COLLATE NOCASE, JULIANDAY(0.32527457916752833, rt0.c2, 0.12032978686273976, rt0.c0, rt0.c1), (~ (rt0.c1))))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0)%(v0.c0)))&(CAST(rt0.c0 AS INTEGER)))) ORDER BY (~ (rt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST, (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt0.c0, (+ (vt0.c0)), (((NULL)) NOT BETWEEN ((rt0.c0)) AND (('609132464'))))) AND ((v0.c0 COLLATE NOCASE, JULIANDAY(0.32527457916752833, rt0.c2, 0.12032978686273976, rt0.c0, rt0.c1), (~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(v0.c0)))&(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (~ (rt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST, (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt0.c0, (+ (vt0.c0)), (((NULL)) NOT BETWEEN ((rt0.c0)) AND (('609132464'))))) AND ((v0.c0 COLLATE NOCASE, JULIANDAY(0.32527457916752833, rt0.c2, 0.12032978686273976, rt0.c0, rt0.c1), (~ (rt0.c1))))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((((rt0.c0)%(v0.c0)))&(CAST(rt0.c0 AS INTEGER)))) ORDER BY (~ (rt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST, (((rt0.c0, rt0.c3, rt0.c3)) BETWEEN ((vt0.c0, (+ (vt0.c0)), (((NULL)) NOT BETWEEN ((rt0.c0)) AND (('609132464'))))) AND ((v0.c0 COLLATE NOCASE, JULIANDAY(0.32527457916752833, rt0.c2, 0.12032978686273976, rt0.c0, rt0.c1), (~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)=(rt0.c1)))))OR(((rt0.c3)&(rt0.c3)))))OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c3) ISNULL)))) ORDER BY (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END))<=((((((x'')OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)==(rt0.c1)))))OR(((rt0.c3)&(rt0.c3)))))OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END))<=((((((x'')OR(rt0.c2)))OR(rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)=(rt0.c1)))))OR(((rt0.c3)&(rt0.c3)))))OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c3) ISNULL)))) ORDER BY (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END))<=((((((x'')OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)==(rt0.c1)))))OR(((rt0.c3)&(rt0.c3)))))OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END))<=((((((x'')OR(rt0.c2)))OR(rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))OR(((rt0.c3)=(rt0.c1)))))OR(((rt0.c3)&(rt0.c3)))))OR(((rt0.c2)&(rt0.c3)))))AND(((rt0.c3) ISNULL)))) ORDER BY (((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END))<=((((((x'')OR(rt0.c2)))OR(rt0.c3)))));
SELECT * FROM rt0 WHERE ((((0.6835305610907605)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) AND (((((rt0.c2))<=((rt0.c0))))))) ORDER BY ((rt0.c0 COLLATE RTRIM)+((+ (-1379416687))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0)AND(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.6835305610907605)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) AND (((((rt0.c2))<=((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)+((+ (-1379416687))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0)AND(rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.6835305610907605)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) AND (((((rt0.c2))<=((rt0.c0))))))) ORDER BY ((rt0.c0 COLLATE RTRIM)+((+ (-1379416687))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0)AND(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((0.6835305610907605)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) AND (((((rt0.c2))<=((rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)+((+ (-1379416687))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0)AND(rt0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.6835305610907605)) BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) AND (((((rt0.c2))<=((rt0.c0))))))) ORDER BY ((rt0.c0 COLLATE RTRIM)+((+ (-1379416687))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c0)AND(rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT * FROM vt0, v0 WHERE (CASE WHEN MIN(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE ((v0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MIN(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE ((v0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN MIN(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE ((v0.c0)<(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MIN(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE ((v0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CASE WHEN MIN(vt0.c0, vt0.c0) THEN ((vt0.c0) ISNULL) ELSE ((v0.c0)<(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (CAST('x螡m0' AS NUMERIC) COLLATE RTRIM) ORDER BY ((((vt0.c0)OR(NULL))) BETWEEN (HEX(DISTINCT '170107166')) AND (((vt0.c0)OR(vt0.c0)))) DESC, NULL DESC  NULLS LAST, (((~ (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0 COLLATE NOCASE)AND(7.8653866E8)))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('x螡m0' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(NULL))) BETWEEN (HEX(DISTINCT '170107166')) AND (((vt0.c0)OR(vt0.c0)))) DESC, NULL DESC  NULLS LAST, (((~ (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0 COLLATE NOCASE)AND(7.8653866E8)))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST('x螡m0' AS NUMERIC) COLLATE RTRIM) ORDER BY ((((vt0.c0)OR(NULL))) BETWEEN (HEX(DISTINCT '170107166')) AND (((vt0.c0)OR(vt0.c0)))) DESC, NULL DESC  NULLS LAST, (((~ (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0 COLLATE NOCASE)AND(7.8653866E8)))AND((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('x螡m0' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(NULL))) BETWEEN (HEX(DISTINCT '170107166')) AND (((vt0.c0)OR(vt0.c0)))) DESC, NULL DESC  NULLS LAST, (((~ (vt0.c0))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt0.c0 AS TEXT))), ((((vt0.c0 COLLATE NOCASE)AND(7.8653866E8)))AND((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN (v0.c0, vt0.c0)))OR(json_insert(rt0.c1, vt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0, vt0.c0)))OR(json_insert(rt0.c1, vt0.c0, v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN (v0.c0, vt0.c0)))OR(json_insert(rt0.c1, vt0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0, vt0.c0)))OR(json_insert(rt0.c1, vt0.c0, v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((rt0.c0 IN (v0.c0, vt0.c0)))OR(json_insert(rt0.c1, vt0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)/((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, NULL))) THEN ((vt0.c0)>=(vt0.c0)) ELSE ((vt0.c0) IS TRUE) END);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB)) ORDER BY (+ (0x74f8d02d COLLATE RTRIM)), (((((NULL)*(rt0.c1))))<=((((rt0.c1)-(rt0.c2))))), ((((rt0.c2)=(rt0.c2)))<(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0X74f8d02d COLLATE RTRIM)), (((((NULL)*(rt0.c1))))<=((((rt0.c1)-(rt0.c2))))), ((((rt0.c2)==(rt0.c2)))<(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB)) ORDER BY (+ (0x74f8d02d COLLATE RTRIM)), (((((NULL)*(rt0.c1))))<=((((rt0.c1)-(rt0.c2))))), ((((rt0.c2)=(rt0.c2)))<(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0X74f8d02d COLLATE RTRIM)), (((((NULL)*(rt0.c1))))<=((((rt0.c1)-(rt0.c2))))), ((((rt0.c2)==(rt0.c2)))<(NULL)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS BLOB)) ORDER BY (+ (0x74f8d02d COLLATE RTRIM)), (((((NULL)*(rt0.c1))))<=((((rt0.c1)-(rt0.c2))))), ((((rt0.c2)=(rt0.c2)))<(NULL)) DESC;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0) ORDER BY ((((0.03366280749827777)AND(CAST(rt0.c3 AS BLOB))))AND(((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((0.03366280749827777)AND(CAST(rt0.c3 AS BLOB))))AND(((v0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0) ORDER BY ((((0.03366280749827777)AND(CAST(rt0.c3 AS BLOB))))AND(((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((0.03366280749827777)AND(CAST(rt0.c3 AS BLOB))))AND(((v0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (v0.c0) ORDER BY ((((0.03366280749827777)AND(CAST(rt0.c3 AS BLOB))))AND(((v0.c0) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((ABS(vt0.c0))<(((rt0.c3)*(rt0.c3)))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((LIKELY(rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((NULL)) AND ((0x515e64a3))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((LIKELY(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((ABS(vt0.c0))<(((rt0.c3)*(rt0.c3)))) ORDER BY CAST((((rt0.c2)) BETWEEN ((NULL)) AND ((0X515e64a3))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((ABS(vt0.c0))<(((rt0.c3)*(rt0.c3)))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((LIKELY(rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((NULL)) AND ((0x515e64a3))) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((LIKELY(rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((ABS(vt0.c0))<(((rt0.c3)*(rt0.c3)))) ORDER BY CAST((((rt0.c2)) BETWEEN ((NULL)) AND ((0X515e64a3))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((ABS(vt0.c0))<(((rt0.c3)*(rt0.c3)))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((LIKELY(rt0.c1))))) ORDER BY CAST((((rt0.c2)) BETWEEN ((NULL)) AND ((0x515e64a3))) AS INTEGER);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))GLOB(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0)))GLOB(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0)))GLOB(NULL COLLATE BINARY)));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))|((vt0.c0 IN ())))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), x'' COLLATE BINARY, vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE 0.7334277149718932 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)<=(0.17096543357730942)), UNLIKELY(DISTINCT vt0.c0), rtreenode(vt0.c0, vt0.c0)))) DESC, CASE ABS(vt0.c0)  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) ELSE NULL END ASC, ((((x'ef7a') NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), x'' COLLATE BINARY, vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE 0.7334277149718932 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)<=(0.17096543357730942)), UNLIKELY(DISTINCT vt0.c0), rtreenode(vt0.c0, vt0.c0)))) DESC, CASE ABS(vt0.c0)  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) ELSE NULL END ASC, ((((x'ef7a') NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))|((vt0.c0 IN ())))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), x'' COLLATE BINARY, vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE 0.7334277149718932 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)<=(0.17096543357730942)), UNLIKELY(DISTINCT vt0.c0), rtreenode(vt0.c0, vt0.c0)))) DESC, CASE ABS(vt0.c0)  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) ELSE NULL END ASC, ((((x'ef7a') NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))|((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), x'' COLLATE BINARY, vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE 0.7334277149718932 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)<=(0.17096543357730942)), UNLIKELY(DISTINCT vt0.c0), rtreenode(vt0.c0, vt0.c0)))) DESC, CASE ABS(vt0.c0)  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) ELSE NULL END ASC, ((((x'ef7a') NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))|((vt0.c0 IN ())))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), x'' COLLATE BINARY, vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE 0.7334277149718932 END)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)), ((vt0.c0)<=(0.17096543357730942)), UNLIKELY(DISTINCT vt0.c0), rtreenode(vt0.c0, vt0.c0)))) DESC, CASE ABS(vt0.c0)  WHEN (((vt0.c0))>=((vt0.c0))) THEN ((vt0.c0)>>(vt0.c0)) ELSE NULL END ASC, ((((x'ef7a') NOT BETWEEN (vt0.c0) AND (vt0.c0)))/(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ((((((((((rt0.c0)<=(rt0.c3)))OR((~ (rt0.c0)))))AND((NOT (rt0.c2)))))OR(x'')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))) WHERE (rtreenode((~ (rt0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((~ (rt0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((((((((((rt0.c0)<=(rt0.c3)))OR((~ (rt0.c0)))))AND((NOT (rt0.c2)))))OR(x'')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ((((((((((rt0.c0)<=(rt0.c3)))OR((~ (rt0.c0)))))AND((NOT (rt0.c2)))))OR(x'')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))) WHERE (rtreenode((~ (rt0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode((~ (rt0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON ((((((((((rt0.c0)<=(rt0.c3)))OR((~ (rt0.c0)))))AND((NOT (rt0.c2)))))OR(x'')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON ((((((((((rt0.c0)<=(rt0.c3)))OR((~ (rt0.c0)))))AND((NOT (rt0.c2)))))OR(x'')))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))) WHERE (rtreenode((~ (rt0.c0)), CASE WHEN vt0.c0 THEN v0.c0 ELSE rt0.c0 END));
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (rt0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((~ (((rt0.c1)IS(rt0.c2))))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0))==((NULL, rt0.c3, v0.c0))) COLLATE RTRIM ASC, (((rt0.c1 IN ())) BETWEEN ((NOT (x'45eb'))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((rt0.c3, rt0.c2, rt0.c0))==((NULL, rt0.c3, v0.c0))) COLLATE RTRIM ASC, (((rt0.c1 IN ())) BETWEEN ((NOT (x'45eb'))) AND ((+ (rt0.c2))))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((~ (((rt0.c1)IS(rt0.c2))))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0))==((NULL, rt0.c3, v0.c0))) COLLATE RTRIM ASC, (((rt0.c1 IN ())) BETWEEN ((NOT (x'45eb'))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)IS(rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY (((rt0.c3, rt0.c2, rt0.c0))==((NULL, rt0.c3, v0.c0))) COLLATE RTRIM ASC, (((rt0.c1 IN ())) BETWEEN ((NOT (x'45eb'))) AND ((+ (rt0.c2))))  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((~ (((rt0.c1)IS(rt0.c2))))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0))==((NULL, rt0.c3, v0.c0))) COLLATE RTRIM ASC, (((rt0.c1 IN ())) BETWEEN ((NOT (x'45eb'))) AND ((+ (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)||(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)||(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)||(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)||(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)||(v0.c0)) AS BLOB));
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c0 IN (v0.c0, vt0.c0))))) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN (v0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c0 IN (v0.c0, vt0.c0))))) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN (v0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c0 IN (v0.c0, vt0.c0))))) ORDER BY vt0.c0  NULLS LAST, ((((vt0.c0) IS FALSE))<(((((vt0.c0)OR(v0.c0)))AND(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN ('-299498290') AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN ('-299498290') AND (v0.c0))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN ('-299498290') AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN ('-299498290') AND (v0.c0))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN ('-299498290') AND (v0.c0)));
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)-((1771662860 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)-((1771662860 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)-((1771662860 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)-((1771662860 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY ((vt0.c0)-((1771662860 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((x'e27b' IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'e27b' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((x'e27b' IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'e27b' IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((x'e27b' IN ())) ORDER BY (vt0.c0 COLLATE RTRIM IN (((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)-((rt0.c2 IN (vt0.c0)))) WHERE (CASE rt0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((((v0.c0)AND(vt0.c0))))) DESC, ('1030281895' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)-((rt0.c2 IN (vt0.c0)))) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((((v0.c0)AND(vt0.c0))))) DESC, ('1030281895' IN ()) ASC);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)-((rt0.c2 IN (vt0.c0)))) WHERE (CASE rt0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((((v0.c0)AND(vt0.c0))))) DESC, ('1030281895' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)-((rt0.c2 IN (vt0.c0)))) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((((v0.c0)AND(vt0.c0))))) DESC, ('1030281895' IN ()) ASC);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CASE rt0.c3  WHEN rt0.c3 THEN v0.c0 END)-((rt0.c2 IN (vt0.c0)))) WHERE (CASE rt0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c3 THEN v0.c0 END)) AND ((((v0.c0)AND(vt0.c0))))) DESC, ('1030281895' IN ()) ASC;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c0)-(rt0.c3))))<>((UPPER(DISTINCT x'c03d')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)-(rt0.c3))))<>((UPPER(DISTINCT x'c03d')))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c0)-(rt0.c3))))<>((UPPER(DISTINCT x'c03d')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)-(rt0.c3))))<>((UPPER(DISTINCT x'c03d')))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (((((rt0.c0)-(rt0.c3))))<>((UPPER(DISTINCT x'c03d')))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ('jq') ORDER BY (+ (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('jq') IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ('jq') ORDER BY (+ (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('jq') IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ('jq') ORDER BY (+ (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((v0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((v0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND ((v0.c0 IN (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE ('1418561441');
SELECT SUM(count) FROM (SELECT (('1418561441') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1418561441');
SELECT SUM(count) FROM (SELECT (('1418561441') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1418561441');
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)-(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)-(v0.c0)) IN ()));
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((((rt0.c3)<=(rt0.c1))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c3))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c1))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c3))>((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((((rt0.c3)<=(rt0.c1))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c3))>((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<=(rt0.c1))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c3))>((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 FULL OUTER JOIN vt0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((((rt0.c3)<=(rt0.c1))) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((((rt0.c3))>((rt0.c1))))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('-539247920')OR(('0.09417177915864228' IN ('39481180')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((('-539247920')OR(('0.09417177915864228' IN ('39481180')))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('-539247920')OR(('0.09417177915864228' IN ('39481180')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((('-539247920')OR(('0.09417177915864228' IN ('39481180')))))AND(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((('-539247920')OR(('0.09417177915864228' IN ('39481180')))))AND(rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (x'') ORDER BY v0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3)GLOB(vt0.c0)))) AND ((NULL)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c3)GLOB(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3)GLOB(vt0.c0)))) AND ((NULL)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c3)GLOB(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c3)GLOB(vt0.c0)))) AND ((NULL)))) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(TRIM(rt0.c0))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((vt0.c0)|(rt0.c2))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(TRIM(rt0.c0))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((vt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY x'' DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(TRIM(rt0.c0))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((vt0.c0)|(rt0.c2))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(TRIM(rt0.c0))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((vt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY x'' DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON (((((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c2)) IN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) WHERE (((((((((NULL)OR(((vt0.c0)*(vt0.c0)))))OR(TRIM(rt0.c0))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(((vt0.c0)|(rt0.c2))))) ORDER BY x'' DESC;
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))!=(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN (((vt0.c0)<=(vt0.c0))) AND ((vt0.c0 IN (vt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (ABS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (NULL COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (ABS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (NULL COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (ABS(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ORDER BY (NULL COLLATE RTRIM IN ());
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN HEX(DISTINCT rt0.c2) THEN ((rt0.c3)||(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN HEX(DISTINCT rt0.c2) THEN ((rt0.c3)||(rt0.c1)) END);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN HEX(DISTINCT rt0.c2) THEN ((rt0.c3)||(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN HEX(DISTINCT rt0.c2) THEN ((rt0.c3)||(rt0.c1)) END);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c3)GLOB(rt0.c0))) AND (CAST(rt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN HEX(DISTINCT rt0.c2) THEN ((rt0.c3)||(rt0.c1)) END;
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0) ISNULL) THEN rt0.c2 WHEN ((((rt0.c3)AND(rt0.c0)))AND('-1135864404')) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2)||(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((((rt0.c2)OR(rt0.c3)))OR(('䃁⺢' IN ()))))OR(rt0.c3 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0) ISNULL) THEN rt0.c2 WHEN ((((rt0.c3)AND(rt0.c0)))AND('-1135864404')) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2)||(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((rt0.c2)OR(rt0.c3)))OR(('䃁⺢' IN ()))))OR(rt0.c3 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0) ISNULL) THEN rt0.c2 WHEN ((((rt0.c3)AND(rt0.c0)))AND('-1135864404')) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2)||(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((((rt0.c2)OR(rt0.c3)))OR(('䃁⺢' IN ()))))OR(rt0.c3 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0) ISNULL) THEN rt0.c2 WHEN ((((rt0.c3)AND(rt0.c0)))AND('-1135864404')) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2)||(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((((rt0.c2)OR(rt0.c3)))OR(('䃁⺢' IN ()))))OR(rt0.c3 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (CASE ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((vt0.c0) ISNULL) THEN rt0.c2 WHEN ((((rt0.c3)AND(rt0.c0)))AND('-1135864404')) THEN CAST(rt0.c0 AS BLOB) WHEN ((rt0.c2)||(rt0.c3)) THEN rt0.c2 END) ORDER BY ((((((rt0.c2)OR(rt0.c3)))OR(('䃁⺢' IN ()))))OR(rt0.c3 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))=(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))==(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))=(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0)))==(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))=(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY ((((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))) IS FALSE);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (+ ((('') BETWEEN (rt0.c0) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((('') BETWEEN (rt0.c0) AND (rt0.c3)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (+ ((('') BETWEEN (rt0.c0) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)IS(rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((('') BETWEEN (rt0.c0) AND (rt0.c3)))) ASC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS NUMERIC)))) ORDER BY (+ ((('') BETWEEN (rt0.c0) AND (rt0.c3)))) ASC;
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(-1.820607788E9)) IN ((NOT (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c1)))AND(-1.820607788E9)) IN ((NOT (x''))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(-1.820607788E9)) IN ((NOT (x'')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)AND(rt0.c1)))AND(-1.820607788E9)) IN ((NOT (x''))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)AND(rt0.c1)))AND(-1.820607788E9)) IN ((NOT (x'')))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (UPPER(DISTINCT rt0.c3)) AND (((rt0.c2) NOTNULL)))) ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (UPPER(DISTINCT rt0.c3)) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (UPPER(DISTINCT rt0.c3)) AND (((rt0.c2) NOTNULL)))) ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) BETWEEN (UPPER(DISTINCT rt0.c3)) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (UPPER(DISTINCT rt0.c3)) AND (((rt0.c2) NOTNULL)))) ORDER BY (((rt0.c1) IS TRUE) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE NOCASE))=((((v0.c0)<=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))==((((v0.c0)<=(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE NOCASE))=((((v0.c0)<=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE))==((((v0.c0)<=(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE NOCASE))=((((v0.c0)<=(v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(DISTINCT 'IkKu<Zשׂ'));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 'IkKu<Zשׂ')) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(DISTINCT 'IkKu<Zשׂ'));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT 'IkKu<Zשׂ')) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (TYPEOF(DISTINCT 'IkKu<Zשׂ'));
SELECT * FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT v0.c0))>((((vt0.c0))<((v0.c0)))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0)!=(NULL))) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0))>((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0)!=(NULL))) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT v0.c0))>((((vt0.c0))<((v0.c0)))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0)!=(NULL))) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0))>((((vt0.c0))<((v0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0)!=(NULL))) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (((TRIM(DISTINCT v0.c0))>((((vt0.c0))<((v0.c0)))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0)!=(NULL))) AND (CAST(rt0.c1 AS REAL))) ASC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((- (vt0.c0))))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((- (vt0.c0))))<((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c0))))<((vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (((((- (vt0.c0))))<((vt0.c0))));
SELECT * FROM rt0 WHERE (0Xfffffffff77f587c) ORDER BY ((CASE rt0.c3  WHEN 0.9358978299385414 THEN rt0.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((0Xfffffffff77f587c) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN 0.9358978299385414 THEN rt0.c1 END) ISNULL));
SELECT * FROM rt0 WHERE (0Xfffffffff77f587c) ORDER BY ((CASE rt0.c3  WHEN 0.9358978299385414 THEN rt0.c1 END) ISNULL);
SELECT SUM(count) FROM (SELECT ((0Xfffffffff77f587c) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN 0.9358978299385414 THEN rt0.c1 END) ISNULL));
SELECT * FROM rt0 WHERE (0Xfffffffff77f587c) ORDER BY ((CASE rt0.c3  WHEN 0.9358978299385414 THEN rt0.c1 END) ISNULL);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (v0.c0) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.46717032039864204 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=(CASE WHEN x'0c5d' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.46717032039864204 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)==(CASE WHEN x'0c5d' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.46717032039864204 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=(CASE WHEN x'0c5d' THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.46717032039864204 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)==(CASE WHEN x'0c5d' THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.46717032039864204 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)=(CASE WHEN x'0c5d' THEN vt0.c0 END)));
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((NOT (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((NOT (v0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((NOT (v0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CASE (x'268c' IN (vt0.c0, vt0.c0))  WHEN IFNULL(DISTINCT vt0.c0, x'c7c0') THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((1855614772)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (x'268c' IN (vt0.c0, vt0.c0))  WHEN IFNULL(DISTINCT vt0.c0, x'c7c0') THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((1855614772)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CASE (x'268c' IN (vt0.c0, vt0.c0))  WHEN IFNULL(DISTINCT vt0.c0, x'c7c0') THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((1855614772)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE (x'268c' IN (vt0.c0, vt0.c0))  WHEN IFNULL(DISTINCT vt0.c0, x'c7c0') THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((1855614772)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY CASE (x'268c' IN (vt0.c0, vt0.c0))  WHEN IFNULL(DISTINCT vt0.c0, x'c7c0') THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) WHEN vt0.c0 THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((1855614772)AND(vt0.c0)))OR(vt0.c0)) WHEN ((vt0.c0)-(vt0.c0)) THEN ((vt0.c0) IS TRUE) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(x''))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT NULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(x''))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(x''))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT NULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(x''))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))AND(x''))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT NULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON json_array_length(rt0.c1) COLLATE RTRIM WHERE ((+ (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR('*p*fL/7%#')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR('*p*fL/7%#')))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON json_array_length(rt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON json_array_length(rt0.c1) COLLATE RTRIM WHERE ((+ (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR('*p*fL/7%#')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR('*p*fL/7%#')))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON json_array_length(rt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON json_array_length(rt0.c1) COLLATE RTRIM WHERE ((+ (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0)))OR('*p*fL/7%#')))OR(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c3))<((rt0.c1)))  WHEN (NOT (vt0.c0)) THEN '1030281895' ELSE (rt0.c1 IN (rt0.c2, rt0.c1)) END WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2)LIKE(rt0.c3)), (((vt0.c0))=((rt0.c0)))))>((((rt0.c2)>=(vt0.c0)), rt0.c0, (((rt0.c2, 0Xffffffff869736b6, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2)LIKE(rt0.c3)), (((vt0.c0))==((rt0.c0)))))>((((rt0.c2)>=(vt0.c0)), rt0.c0, (((rt0.c2, 0Xffffffff869736b6, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c3))<((rt0.c1)))  WHEN (NOT (vt0.c0)) THEN '1030281895' ELSE (rt0.c1 IN (rt0.c2, rt0.c1)) END);
SELECT * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c3))<((rt0.c1)))  WHEN (NOT (vt0.c0)) THEN '1030281895' ELSE (rt0.c1 IN (rt0.c2, rt0.c1)) END WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2)LIKE(rt0.c3)), (((vt0.c0))=((rt0.c0)))))>((((rt0.c2)>=(vt0.c0)), rt0.c0, (((rt0.c2, 0Xffffffff869736b6, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2)LIKE(rt0.c3)), (((vt0.c0))==((rt0.c0)))))>((((rt0.c2)>=(vt0.c0)), rt0.c0, (((rt0.c2, 0Xffffffff869736b6, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c3))<((rt0.c1)))  WHEN (NOT (vt0.c0)) THEN '1030281895' ELSE (rt0.c1 IN (rt0.c2, rt0.c1)) END);
SELECT * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c3))<((rt0.c1)))  WHEN (NOT (vt0.c0)) THEN '1030281895' ELSE (rt0.c1 IN (rt0.c2, rt0.c1)) END WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c2)LIKE(rt0.c3)), (((vt0.c0))=((rt0.c0)))))>((((rt0.c2)>=(vt0.c0)), rt0.c0, (((rt0.c2, 0Xffffffff869736b6, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2)))))));
SELECT * FROM v0 WHERE (x'c9f9');
SELECT SUM(count) FROM (SELECT ((x'c9f9') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'c9f9');
SELECT SUM(count) FROM (SELECT ((x'c9f9') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'c9f9');
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) BETWEEN (-1021406155) AND (rt0.c1)) WHEN (rt0.c3 IN ()) THEN x'' WHEN json_valid(rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c3) ISNULL) END) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE 0.3409801392728812  WHEN '' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END) AND (DATE(rt0.c2, rt0.c1, rt0.c1))) DESC, ((((CAST(vt0.c0 AS TEXT))AND((+ (x'0953e986')))))AND(((vt0.c0) NOTNULL))) DESC, (((rt0.c1 IN (rt0.c2))) BETWEEN ((- (vt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) BETWEEN (-1021406155) AND (rt0.c1)) WHEN (rt0.c3 IN ()) THEN x'' WHEN json_valid(rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE 0.3409801392728812  WHEN '' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END) AND (DATE(rt0.c2, rt0.c1, rt0.c1))) DESC, ((((CAST(vt0.c0 AS TEXT))AND((+ (x'0953e986')))))AND(((vt0.c0) NOTNULL))) DESC, (((rt0.c1 IN (rt0.c2))) BETWEEN ((- (vt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) BETWEEN (-1021406155) AND (rt0.c1)) WHEN (rt0.c3 IN ()) THEN x'' WHEN json_valid(rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c3) ISNULL) END) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE 0.3409801392728812  WHEN '' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END) AND (DATE(rt0.c2, rt0.c1, rt0.c1))) DESC, ((((CAST(vt0.c0 AS TEXT))AND((+ (x'0953e986')))))AND(((vt0.c0) NOTNULL))) DESC, (((rt0.c1 IN (rt0.c2))) BETWEEN ((- (vt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) BETWEEN (-1021406155) AND (rt0.c1)) WHEN (rt0.c3 IN ()) THEN x'' WHEN json_valid(rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c3) ISNULL) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE 0.3409801392728812  WHEN '' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END) AND (DATE(rt0.c2, rt0.c1, rt0.c1))) DESC, ((((CAST(vt0.c0 AS TEXT))AND((+ (x'0953e986')))))AND(((vt0.c0) NOTNULL))) DESC, (((rt0.c1 IN (rt0.c2))) BETWEEN ((- (vt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c1) BETWEEN (-1021406155) AND (rt0.c1)) WHEN (rt0.c3 IN ()) THEN x'' WHEN json_valid(rt0.c1) THEN rt0.c2 COLLATE RTRIM ELSE ((rt0.c3) ISNULL) END) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE 0.3409801392728812  WHEN '' THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c0 END) AND (DATE(rt0.c2, rt0.c1, rt0.c1))) DESC, ((((CAST(vt0.c0 AS TEXT))AND((+ (x'0953e986')))))AND(((vt0.c0) NOTNULL))) DESC, (((rt0.c1 IN (rt0.c2))) BETWEEN ((- (vt0.c0))) AND ((((rt0.c2, rt0.c1, rt0.c1, rt0.c2, rt0.c3))>=((rt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X5f99bbbd THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0X3580e22d THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)%((- (v0.c0))))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X5f99bbbd THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0x3580e22d THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)%((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X5f99bbbd THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0X3580e22d THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)%((- (v0.c0))))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X5f99bbbd THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0x3580e22d THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)%((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X5f99bbbd THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0X3580e22d THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)%((- (v0.c0))))) ORDER BY (+ (v0.c0 COLLATE RTRIM)) ASC;
SELECT * FROM rt0, vt0 WHERE ((ABS(rt0.c3) IN ())) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c3) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((ABS(rt0.c3) IN ())) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c3) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((ABS(rt0.c3) IN ())) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)||((((rt0.c3))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)||((((rt0.c3))<((rt0.c3)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)||((((rt0.c3))<((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)||((((rt0.c3))<((rt0.c3)))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)||((((rt0.c3))<((rt0.c3))))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY 0.9896392509842241 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9896392509842241 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY 0.9896392509842241 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9896392509842241 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c3 IN ())) IS TRUE)) ORDER BY 0.9896392509842241 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.780834501132874))AND((v0.c0 IN (v0.c0)))))OR(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT v0.c0, 0.780834501132874))AND((v0.c0 IN (v0.c0)))))OR(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.780834501132874))AND((v0.c0 IN (v0.c0)))))OR(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELIHOOD(DISTINCT v0.c0, 0.780834501132874))AND((v0.c0 IN (v0.c0)))))OR(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.780834501132874))AND((v0.c0 IN (v0.c0)))))OR(COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)))) ORDER BY NULL;
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON json_type(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END) WHERE ((((((vt0.c0 IN ()))AND((~ (rt0.c1)))))OR(0.7755338627862917)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((~ (rt0.c1)))))OR(0.7755338627862917))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON json_type(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON json_type(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END) WHERE ((((((vt0.c0 IN ()))AND((~ (rt0.c1)))))OR(0.7755338627862917)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND((~ (rt0.c1)))))OR(0.7755338627862917))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON json_type(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON json_type(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN v0.c0 THEN rt0.c0 END) WHERE ((((((vt0.c0 IN ()))AND((~ (rt0.c1)))))OR(0.7755338627862917)));
SELECT * FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT BETWEEN (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND (CAST(rt0.c3 AS INTEGER))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) IN ()));
SELECT * FROM rt0 WHERE (NULL) ORDER BY (~ (((((0.223454516715884)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((0.223454516715884)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY (~ (((((0.223454516715884)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((0.223454516715884)AND(rt0.c1)))AND(rt0.c0)))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY (~ (((((0.223454516715884)AND(rt0.c1)))AND(rt0.c0))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (~ (v0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (~ (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (~ (v0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (~ (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (~ (v0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c0 AS TEXT) AS NUMERIC));
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) ORDER BY ((rt0.c0)>(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c0)>(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) ORDER BY ((rt0.c0)>(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((rt0.c0)>(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(((rt0.c0)*(rt0.c2)) AS NUMERIC)) ORDER BY ((rt0.c0)>(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((x'')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((x'')+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((x'')+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((x'')+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND(((x'')+(vt0.c0)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c3 IN ((((rt0.c0))<((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c3 IN ((((rt0.c0))<((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((((rt0.c0))<((rt0.c1)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((rt0.c3 IN ((((rt0.c0))<((rt0.c1))))));
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (x'2715');
SELECT SUM(count) FROM (SELECT ALL ((x'2715') IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (x'2715');
SELECT SUM(count) FROM (SELECT ALL ((x'2715') IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON rt0.c1);
SELECT * FROM v0, rt0 FULL OUTER JOIN vt0 ON rt0.c1 WHERE (x'2715');
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(v0.c0) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(TYPEOF(v0.c0) AS REAL));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) ORDER BY CAST((((x'aa27', v0.c0, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST((((x'aa27', v0.c0, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c0))) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) ORDER BY CAST((((x'aa27', v0.c0, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c0))) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST((((x'aa27', v0.c0, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c0))) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT (((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1))))) ORDER BY CAST((((x'aa27', v0.c0, rt0.c2))<=((rt0.c2, rt0.c2, vt0.c0))) AS REAL)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))&(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))&(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (TRIM(TYPEOF(v0.c0), (v0.c0 IN ()))) ORDER BY ((((rtreenode(v0.c0, x''))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(v0.c0), (v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY ((((rtreenode(v0.c0, x''))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(TYPEOF(v0.c0), (v0.c0 IN ()))) ORDER BY ((((rtreenode(v0.c0, x''))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(TYPEOF(v0.c0), (v0.c0 IN ()))) IS TRUE)  as count FROM v0 ORDER BY ((((rtreenode(v0.c0, x''))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (TRIM(TYPEOF(v0.c0), (v0.c0 IN ()))) ORDER BY ((((rtreenode(v0.c0, x''))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1549909823')) AND (((((rt0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2))>((vt0.c0, 'yO', rt0.c2, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-1549909823')) AND (((((rt0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2))>((vt0.c0, 'yO', rt0.c2, v0.c0, v0.c0))))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1549909823')) AND (((((rt0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2))>((vt0.c0, 'yO', rt0.c2, v0.c0, v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('-1549909823')) AND (((((rt0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2))>((vt0.c0, 'yO', rt0.c2, v0.c0, v0.c0))))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('-1549909823')) AND (((((rt0.c0, vt0.c0, v0.c0, rt0.c0, rt0.c2))>((vt0.c0, 'yO', rt0.c2, v0.c0, v0.c0)))))));
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((((((rt0.c1)OR('IkKu<Zשׂ')))AND(rt0.c2))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(rt0.c2 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR('IkKu<Zשׂ')))AND(rt0.c2))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(rt0.c2 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((((((rt0.c1)OR('IkKu<Zשׂ')))AND(rt0.c2))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(rt0.c2 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR('IkKu<Zשׂ')))AND(rt0.c2))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(rt0.c2 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) ORDER BY ((((((rt0.c1)OR('IkKu<Zשׂ')))AND(rt0.c2))) NOT BETWEEN (((rt0.c3)OR(rt0.c0))) AND (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, CAST(rt0.c2 AS REAL) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((CAST(0.3546061572629061 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3546061572629061 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((CAST(0.3546061572629061 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(0.3546061572629061 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (((CAST(0.3546061572629061 AS TEXT)) NOTNULL));
SELECT * FROM rt0, v0 WHERE ((((+ (0xffffffffbf12b7a7)))>(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0xffffffffbf12b7a7)))>(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((+ (0xffffffffbf12b7a7)))>(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (0xffffffffbf12b7a7)))>(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((+ (0xffffffffbf12b7a7)))>(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c3)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c3)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c3)))) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN (vt0.c0 IN (vt0.c0, v0.c0)) END);
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((0xfffffffff77f587c IN (rt0.c0, rt0.c0)))+(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) CROSS JOIN v0 ON v0.c0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((0Xfffffffff77f587c IN (rt0.c0, rt0.c0)))+(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) CROSS JOIN v0 ON v0.c0);
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((0xfffffffff77f587c IN (rt0.c0, rt0.c0)))+(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) CROSS JOIN v0 ON v0.c0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((0Xfffffffff77f587c IN (rt0.c0, rt0.c0)))+(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) CROSS JOIN v0 ON v0.c0);
SELECT ALL * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (((0xfffffffff77f587c IN (rt0.c0, rt0.c0)))+(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) CROSS JOIN v0 ON v0.c0 WHERE ((~ (((vt0.c0) NOT NULL))));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0)|(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN vt0 ON LENGTH(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) WHERE (CAST(LIKE(rt0.c3, 0.833342895779299, 'l') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c3, 0.833342895779299, 'l') AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0)|(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN vt0 ON LENGTH(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0)|(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN vt0 ON LENGTH(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) WHERE (CAST(LIKE(rt0.c3, 0.833342895779299, 'l') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(rt0.c3, 0.833342895779299, 'l') AS TEXT)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0)|(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN vt0 ON LENGTH(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((v0.c0)|(rt0.c3)) COLLATE NOCASE FULL OUTER JOIN vt0 ON LENGTH(CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END) WHERE (CAST(LIKE(rt0.c3, 0.833342895779299, 'l') AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|((rt0.c3 IN (rt0.c1))))) ORDER BY CAST((((0.36962360408295303))!=((rt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((0.36962360408295303))!=((rt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|((rt0.c3 IN (rt0.c1))))) ORDER BY CAST((((0.36962360408295303))!=((rt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((0.36962360408295303))!=((rt0.c0))) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))|((rt0.c3 IN (rt0.c1))))) ORDER BY CAST((((0.36962360408295303))!=((rt0.c0))) AS NUMERIC);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)+(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)+(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)+(rt0.c1)) IN ()));
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NULL))>((((rt0.c2)<(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NULL))>((((rt0.c2)<(v0.c0)))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NULL))>((((rt0.c2)<(v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (NULL))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((NULL))>((((rt0.c2)<(v0.c0)))))  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((rt0.c1) ISNULL)) BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (NULL))) ORDER BY (((NULL))>((((rt0.c2)<(v0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((DATETIME(vt0.c0, rt0.c2, vt0.c0, v0.c0, v0.c0, rt0.c1, rt0.c2)) BETWEEN (x'') AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1)AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((DATETIME(vt0.c0, rt0.c2, vt0.c0, v0.c0, v0.c0, rt0.c1, rt0.c2)) BETWEEN (x'') AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1)AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((DATETIME(vt0.c0, rt0.c2, vt0.c0, v0.c0, v0.c0, rt0.c1, rt0.c2)) BETWEEN (x'') AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1)AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((DATETIME(vt0.c0, rt0.c2, vt0.c0, v0.c0, v0.c0, rt0.c1, rt0.c2)) BETWEEN (x'') AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1)AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((DATETIME(vt0.c0, rt0.c2, vt0.c0, v0.c0, v0.c0, rt0.c1, rt0.c2)) BETWEEN (x'') AND (vt0.c0 COLLATE BINARY))) ORDER BY ((((rt0.c1)AND(((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c1 COLLATE NOCASE));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)-(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(0.3581509249747459)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)-(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(0.3581509249747459)) DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)-(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(0.3581509249747459)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)-(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(0.3581509249747459)) DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY ((((((((((v0.c0)-(v0.c0)))OR(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(0.3581509249747459)) DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY (- (v0.c0)) COLLATE RTRIM, CASE WHEN CASE 0.2709709989539414  WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((('w(')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c0, rt0.c2))) THEN (- (rt0.c0)) WHEN CASE NULL  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN rt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (- (v0.c0)) COLLATE RTRIM, CASE WHEN CASE 0.2709709989539414  WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((('w(')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c0, rt0.c1, rt0.c0))!=((rt0.c3, rt0.c0, rt0.c2))) THEN (- (rt0.c0)) WHEN CASE NULL  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN rt0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY (- (v0.c0)) COLLATE RTRIM, CASE WHEN CASE 0.2709709989539414  WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((('w(')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c0, rt0.c2))) THEN (- (rt0.c0)) WHEN CASE NULL  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN rt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (- (v0.c0)) COLLATE RTRIM, CASE WHEN CASE 0.2709709989539414  WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((('w(')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c0, rt0.c1, rt0.c0))!=((rt0.c3, rt0.c0, rt0.c2))) THEN (- (rt0.c0)) WHEN CASE NULL  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN rt0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ('') ORDER BY (- (v0.c0)) COLLATE RTRIM, CASE WHEN CASE 0.2709709989539414  WHEN vt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN rt0.c0 THEN v0.c0 ELSE NULL END THEN ((('w(')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (((vt0.c0, rt0.c1, rt0.c0))<>((rt0.c3, rt0.c0, rt0.c2))) THEN (- (rt0.c0)) WHEN CASE NULL  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN rt0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(vt0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN 1541207877 ELSE rt0.c3 END)&(((rt0.c2) BETWEEN (rt0.c3) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN 1541207877 ELSE rt0.c3 END)&(((rt0.c2) BETWEEN (rt0.c3) AND (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN 1541207877 ELSE rt0.c3 END)&(((rt0.c2) BETWEEN (rt0.c3) AND (x'')))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c2 THEN 1541207877 ELSE rt0.c3 END)&(((rt0.c2) BETWEEN (rt0.c3) AND (x''))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c2 THEN 1541207877 ELSE rt0.c3 END)&(((rt0.c2) BETWEEN (rt0.c3) AND (x'')))));
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((vt0.c0)AND(v0.c0)), ((v0.c0) NOT BETWEEN ('1795922775') AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)AND(v0.c0)), ((v0.c0) NOT BETWEEN ('1795922775') AND (v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((vt0.c0)AND(v0.c0)), ((v0.c0) NOT BETWEEN ('1795922775') AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)AND(v0.c0)), ((v0.c0) NOT BETWEEN ('1795922775') AND (v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (IFNULL(((vt0.c0)AND(v0.c0)), ((v0.c0) NOT BETWEEN ('1795922775') AND (v0.c0))));
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((+ (((rt0.c0)AND(rt0.c2)))));
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((vt0.c0)AND(vt0.c0))) IS FALSE) WHERE (((load_extension('*v', v0.c0)) NOTNULL)) ORDER BY ABS(rt0.c2) COLLATE RTRIM, (((((rt0.c3) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension('*v', v0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((vt0.c0)AND(vt0.c0))) IS FALSE) ORDER BY ABS(rt0.c2) COLLATE RTRIM, (((((rt0.c3) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((vt0.c0)AND(vt0.c0))) IS FALSE) WHERE (((load_extension('*v', v0.c0)) NOTNULL)) ORDER BY ABS(rt0.c2) COLLATE RTRIM, (((((rt0.c3) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((load_extension('*v', v0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((vt0.c0)AND(vt0.c0))) IS FALSE) ORDER BY ABS(rt0.c2) COLLATE RTRIM, (((((rt0.c3) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 CROSS JOIN vt0 ON ((((vt0.c0)AND(vt0.c0))) IS FALSE) WHERE (((load_extension('*v', v0.c0)) NOTNULL)) ORDER BY ABS(rt0.c2) COLLATE RTRIM, (((((rt0.c3) IS TRUE)))<((CAST(rt0.c2 AS BLOB)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (NULL)) LEFT OUTER JOIN vt0 ON NULL WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c3)OR(v0.c0)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c3)OR(v0.c0)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (NULL)) LEFT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (NULL)) LEFT OUTER JOIN vt0 ON NULL WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c3)OR(v0.c0)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c3)OR(v0.c0)))AND(rt0.c2))) AND (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (NULL)) LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((0.38200572905871655)AND(vt0.c0)))AND(v0.c0)) IN (LENGTH(v0.c0))) WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((0.38200572905871655)AND(vt0.c0)))AND(v0.c0)) IN (LENGTH(v0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((0.38200572905871655)AND(vt0.c0)))AND(v0.c0)) IN (LENGTH(v0.c0))) WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((((0.38200572905871655)AND(vt0.c0)))AND(v0.c0)) IN (LENGTH(v0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (((((0.38200572905871655)AND(vt0.c0)))AND(v0.c0)) IN (LENGTH(v0.c0))) WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'') ORDER BY x''  NULLS LAST;
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))>=((rt0.c3 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))>=((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))>=((rt0.c3 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))>=((rt0.c3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT * FROM v0, vt0 NATURAL JOIN rt0 WHERE ((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))>=((rt0.c3 COLLATE NOCASE))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c3 IN ()))) WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c1) NOT NULL) WHEN -1223105342 THEN IFNULL(rt0.c1, rt0.c1) WHEN '-2061824621' THEN CAST(rt0.c0 AS REAL) ELSE ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c1) NOT NULL) WHEN -1223105342 THEN IFNULL(rt0.c1, rt0.c1) WHEN '-2061824621' THEN CAST(rt0.c0 AS REAL) ELSE ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c3 IN ()))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c3 IN ()))) WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c1) NOT NULL) WHEN -1223105342 THEN IFNULL(rt0.c1, rt0.c1) WHEN '-2061824621' THEN CAST(rt0.c0 AS REAL) ELSE ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c1) NOT NULL) WHEN -1223105342 THEN IFNULL(rt0.c1, rt0.c1) WHEN '-2061824621' THEN CAST(rt0.c0 AS REAL) ELSE ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c3 IN ()))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c3 IN ()))) WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0))) THEN ((rt0.c1) NOT NULL) WHEN -1223105342 THEN IFNULL(rt0.c1, rt0.c1) WHEN '-2061824621' THEN CAST(rt0.c0 AS REAL) ELSE ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) END);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR(((v0.c0)&(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR(((v0.c0)&(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR(((v0.c0)&(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR(((v0.c0)&(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))OR(((v0.c0)&(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))||((NOT (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))||((NOT (rt0.c3)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))||((NOT (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))||((NOT (rt0.c3)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c3 END AS TEXT)) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))||((NOT (rt0.c3)))) ASC;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ('1541207877');
SELECT SUM(count) FROM (SELECT ALL (('1541207877') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ('1541207877');
SELECT SUM(count) FROM (SELECT ALL (('1541207877') IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ('1541207877');
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c1);
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c1);
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c1 WHERE (CAST(((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3)) AS TEXT));
SELECT * FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))*(((v0.c0)<=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))*(((v0.c0)<=(v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))*(((v0.c0)<=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))*(((v0.c0)<=(v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY ((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))*(((v0.c0)<=(v0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (DATETIME(((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (DATETIME(((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATETIME(((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (DATETIME(((v0.c0) IS FALSE), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((~ (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('609132464') NOTNULL) DESC, LOWER(DISTINCT (NOT (0.793928328656535))) DESC  NULLS FIRST, ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('609132464') NOTNULL) DESC, LOWER(DISTINCT (NOT (0.793928328656535))) DESC  NULLS FIRST, ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('609132464') NOTNULL) DESC, LOWER(DISTINCT (NOT (0.793928328656535))) DESC  NULLS FIRST, ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (('609132464') NOTNULL) DESC, LOWER(DISTINCT (NOT (0.793928328656535))) DESC  NULLS FIRST, ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (('609132464') NOTNULL) DESC, LOWER(DISTINCT (NOT (0.793928328656535))) DESC  NULLS FIRST, ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (NULL) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE ORDER BY ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (NULL) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE ORDER BY ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE NOCASE WHERE (NULL) ORDER BY ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2)))) ASC  NULLS LAST;
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)GLOB(v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)GLOB(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) ISNULL))) AND ((((v0.c0)GLOB(v0.c0))))));
SELECT * FROM v0, vt0 WHERE (((vt0.c0)IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c0)IS(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((rt0.c1) ISNULL), 0.17553052468225339) WHERE (CASE ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END THEN (- (rt0.c3)) END) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END THEN (- (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((rt0.c1) ISNULL), 0.17553052468225339) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((~ (v0.c0)))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((rt0.c1) ISNULL), 0.17553052468225339) WHERE (CASE ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END THEN (- (rt0.c3)) END) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END THEN (- (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((rt0.c1) ISNULL), 0.17553052468225339) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((~ (v0.c0)))));
SELECT * FROM vt0, rt0 LEFT OUTER JOIN v0 ON IFNULL(DISTINCT ((rt0.c1) ISNULL), 0.17553052468225339) WHERE (CASE ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0))  WHEN CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END THEN (- (rt0.c3)) END) ORDER BY ((((((rt0.c2)AND(rt0.c1)))OR(vt0.c0))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((~ (v0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0.6123579361193093 END)) WHERE (COALESCE(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END, ((rt0.c2) ISNULL), IFNULL(rt0.c3, rt0.c2), CASE WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END, ((rt0.c2) ISNULL), IFNULL(rt0.c3, rt0.c2), CASE WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0.6123579361193093 END)) ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0.6123579361193093 END)) WHERE (COALESCE(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END, ((rt0.c2) ISNULL), IFNULL(rt0.c3, rt0.c2), CASE WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END, ((rt0.c2) ISNULL), IFNULL(rt0.c3, rt0.c2), CASE WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0.6123579361193093 END)) ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c0 AS REAL))<(CASE WHEN rt0.c3 THEN rt0.c3 ELSE 0.6123579361193093 END)) WHERE (COALESCE(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN NULL END, ((rt0.c2) ISNULL), IFNULL(rt0.c3, rt0.c2), CASE WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1768128943');
SELECT SUM(count) FROM (SELECT (('-1768128943') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1768128943');
SELECT SUM(count) FROM (SELECT (('-1768128943') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-1768128943');
SELECT * FROM v0, rt0 WHERE ('-122276042' COLLATE BINARY COLLATE BINARY) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (('-122276042' COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC);
SELECT * FROM v0, rt0 WHERE ('-122276042' COLLATE BINARY COLLATE BINARY) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (('-122276042' COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL ASC);
SELECT * FROM v0, rt0 WHERE ('-122276042' COLLATE BINARY COLLATE BINARY) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE TRIM(DISTINCT v0.c0)  WHEN ((rt0.c3) IS TRUE) THEN TYPEOF(x'429cac9f') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT v0.c0)  WHEN ((rt0.c3) IS TRUE) THEN TYPEOF(x'429cac9f') END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE TRIM(DISTINCT v0.c0)  WHEN ((rt0.c3) IS TRUE) THEN TYPEOF(x'429cac9f') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT v0.c0)  WHEN ((rt0.c3) IS TRUE) THEN TYPEOF(x'429cac9f') END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE TRIM(DISTINCT v0.c0)  WHEN ((rt0.c3) IS TRUE) THEN TYPEOF(x'429cac9f') END);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c3 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((5.07020551E8)AND(rt0.c3)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) WHERE (((((rt0.c1)!=(vt0.c0)))LIKE(rt0.c2))) ORDER BY ((((rt0.c1)<<(x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(vt0.c0)))LIKE(rt0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((5.07020551E8)AND(rt0.c3)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY ((((rt0.c1)<<(x''))) IS FALSE));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((5.07020551E8)AND(rt0.c3)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) WHERE (((((rt0.c1)!=(vt0.c0)))LIKE(rt0.c2))) ORDER BY ((((rt0.c1)<<(x''))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(vt0.c0)))LIKE(rt0.c2))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((5.07020551E8)AND(rt0.c3)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY ((((rt0.c1)<<(x''))) IS FALSE));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((5.07020551E8)AND(rt0.c3)))IS NOT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) WHERE (((((rt0.c1)!=(vt0.c0)))LIKE(rt0.c2))) ORDER BY ((((rt0.c1)<<(x''))) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0))<=((vt0.c0))))>>(((vt0.c0)AND(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c0) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<=((vt0.c0))))>>(((vt0.c0)AND(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c0) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0))<=((vt0.c0))))>>(((vt0.c0)AND(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c0) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))<=((vt0.c0))))>>(((vt0.c0)AND(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c0) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((((vt0.c0))<=((vt0.c0))))>>(((vt0.c0)AND(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c0) IN (((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON 1.541207877E9 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((x'')<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 1.541207877E9 ORDER BY ((x'')<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON 1.541207877E9 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((x'')<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 1.541207877E9 ORDER BY ((x'')<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON 1.541207877E9 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY ((x'')<=(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)>(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((rt0.c0 IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END) IS TRUE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((x'')<(CASE 0.8239887221082695  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (CHAR(rt0.c2, rt0.c2, rt0.c3) IN ()) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CASE 0.8239887221082695  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (CHAR(rt0.c2, rt0.c2, rt0.c3) IN ()) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN ()) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((x'')<(CASE 0.8239887221082695  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (CHAR(rt0.c2, rt0.c2, rt0.c3) IN ()) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')<(CASE 0.8239887221082695  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (CHAR(rt0.c2, rt0.c2, rt0.c3) IN ()) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN ()) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((x'')<(CASE 0.8239887221082695  WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (CHAR(rt0.c2, rt0.c2, rt0.c3) IN ()) DESC  NULLS LAST, (CAST(rt0.c2 AS NUMERIC) IN ()) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))-(((vt0.c0) IS TRUE))) WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((1.855614772E9)IS NOT(rt0.c1))) AND ((- (rt0.c1))))) ORDER BY (NOT ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC, (((((rt0.c0))<=((vt0.c0))))%(((rt0.c2)>>(vt0.c0)))), CASE WHEN NULL THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2))<>((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) NOT BETWEEN (((1.855614772E9)IS NOT(rt0.c1))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))-(((vt0.c0) IS TRUE))) ORDER BY (NOT ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC, (((((rt0.c0))<=((vt0.c0))))%(((rt0.c2)>>(vt0.c0)))), CASE WHEN NULL THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2))!=((rt0.c0))) END  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))-(((vt0.c0) IS TRUE))) WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((1.855614772E9)IS NOT(rt0.c1))) AND ((- (rt0.c1))))) ORDER BY (NOT ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC, (((((rt0.c0))<=((vt0.c0))))%(((rt0.c2)>>(vt0.c0)))), CASE WHEN NULL THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2))<>((rt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) NOT BETWEEN (((1.855614772E9)IS NOT(rt0.c1))) AND ((- (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))-(((vt0.c0) IS TRUE))) ORDER BY (NOT ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC, (((((rt0.c0))<=((vt0.c0))))%(((rt0.c2)>>(vt0.c0)))), CASE WHEN NULL THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2))!=((rt0.c0))) END  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)))-(((vt0.c0) IS TRUE))) WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((1.855614772E9)IS NOT(rt0.c1))) AND ((- (rt0.c1))))) ORDER BY (NOT ((((rt0.c1, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) DESC, (((((rt0.c0))<=((vt0.c0))))%(((rt0.c2)>>(vt0.c0)))), CASE WHEN NULL THEN ((rt0.c0) IS FALSE) ELSE (((rt0.c2))<>((rt0.c0))) END  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(rt0.c2 AS TEXT)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(rt0.c2 AS TEXT)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c1 COLLATE NOCASE) NOTNULL)) ORDER BY ((CAST(rt0.c2 AS TEXT)) IS FALSE) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c3))<((vt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c3))<((vt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c3))<((vt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c3))<((vt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c3))<((vt0.c0))))))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM v0, vt0 WHERE (('0.9277322684596522' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.9277322684596522' IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (('0.9277322684596522' IN ()));
SELECT SUM(count) FROM (SELECT ((('0.9277322684596522' IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (('0.9277322684596522' IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LOWER(((v0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6123579361193093 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((0.6123579361193093 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6123579361193093 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((0.6123579361193093 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((0.6123579361193093 IN ())) NOTNULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-0.0)IS(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((-0.0)IS(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-0.0)IS(vt0.c0)))<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((-0.0)IS(vt0.c0)))<(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((-0.0)IS(vt0.c0)))<(vt0.c0)));
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) IS FALSE)) ORDER BY LIKELY(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) IS FALSE)) ORDER BY LIKELY(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<=((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)  NULLS LAST);
SELECT * FROM v0 WHERE ((((((v0.c0))<=((v0.c0)))) IS FALSE)) ORDER BY LIKELY(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)  NULLS LAST;
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)<=(vt0.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY LIKE(vt0.c0, v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)<=(vt0.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY LIKE(vt0.c0, v0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)<=(vt0.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY LIKE(vt0.c0, v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)<=(vt0.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY LIKE(vt0.c0, v0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM v0, rt0 RIGHT OUTER JOIN vt0 ON x'' WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c3)<=(vt0.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY LIKE(vt0.c0, v0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM v0, vt0, rt0 WHERE (json_quote((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_quote((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (json_quote((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_quote((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (json_quote((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (1.962463277E9);
SELECT SUM(count) FROM (SELECT ((1.962463277E9) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (1.962463277E9);
SELECT SUM(count) FROM (SELECT ((1.962463277E9) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (1.962463277E9);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>>(rt0.c0)) IN ())) ORDER BY ((((rt0.c3)||(rt0.c0)))<>(CASE 0Xffffffffe6afd94a  WHEN rt0.c3 THEN rt0.c1 ELSE '/B\Fx+양' END));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3)||(rt0.c0)))!=(CASE 0xffffffffe6afd94a  WHEN rt0.c3 THEN rt0.c1 ELSE '/B\Fx+양' END)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>>(rt0.c0)) IN ())) ORDER BY ((((rt0.c3)||(rt0.c0)))<>(CASE 0Xffffffffe6afd94a  WHEN rt0.c3 THEN rt0.c1 ELSE '/B\Fx+양' END));
SELECT SUM(count) FROM (SELECT (((((v0.c0)>>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c3)||(rt0.c0)))!=(CASE 0xffffffffe6afd94a  WHEN rt0.c3 THEN rt0.c1 ELSE '/B\Fx+양' END)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((v0.c0)>>(rt0.c0)) IN ())) ORDER BY ((((rt0.c3)||(rt0.c0)))<>(CASE 0Xffffffffe6afd94a  WHEN rt0.c3 THEN rt0.c1 ELSE '/B\Fx+양' END));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c3))<((rt0.c2))))GLOB(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c1))) CROSS JOIN rt0 ON ((- (vt0.c0)) IN ()) WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN UPPER(DISTINCT rt0.c2) THEN (('R') BETWEEN (rt0.c1) AND (0.4803365044336404)) END ASC  NULLS LAST, ((UNLIKELY(rt0.c2)) BETWEEN (rt0.c3) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c3))<((rt0.c2))))GLOB(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c1))) CROSS JOIN rt0 ON ((- (vt0.c0)) IN ()) ORDER BY CASE WHEN UPPER(DISTINCT rt0.c2) THEN (('R') BETWEEN (rt0.c1) AND (0.4803365044336404)) END ASC  NULLS LAST, ((UNLIKELY(rt0.c2)) BETWEEN (rt0.c3) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c3))<((rt0.c2))))GLOB(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c1))) CROSS JOIN rt0 ON ((- (vt0.c0)) IN ()) WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN UPPER(DISTINCT rt0.c2) THEN (('R') BETWEEN (rt0.c1) AND (0.4803365044336404)) END ASC  NULLS LAST, ((UNLIKELY(rt0.c2)) BETWEEN (rt0.c3) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c3))<((rt0.c2))))GLOB(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c1))) CROSS JOIN rt0 ON ((- (vt0.c0)) IN ()) ORDER BY CASE WHEN UPPER(DISTINCT rt0.c2) THEN (('R') BETWEEN (rt0.c1) AND (0.4803365044336404)) END ASC  NULLS LAST, ((UNLIKELY(rt0.c2)) BETWEEN (rt0.c3) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((rt0.c3))<((rt0.c2))))GLOB(COALESCE(DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c1))) CROSS JOIN rt0 ON ((- (vt0.c0)) IN ()) WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0 COLLATE NOCASE)) ORDER BY CASE WHEN UPPER(DISTINCT rt0.c2) THEN (('R') BETWEEN (rt0.c1) AND (0.4803365044336404)) END ASC  NULLS LAST, ((UNLIKELY(rt0.c2)) BETWEEN (rt0.c3) AND (((v0.c0) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((('e')>=((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((('e')>=((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('e')>=((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((('e')>=((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('e')>=((((vt0.c0))>((vt0.c0))))));
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c2, '621550226', v0.c0))>((rt0.c3, v0.c0, rt0.c0, rt0.c0, rt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE ((((v0.c0)AND(x'')))AND(rt0.c2)) END ASC  NULLS FIRST, (((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN ((rt0.c3 IN (rt0.c3)), ((rt0.c3) NOT NULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c2, rt0.c2, '621550226', v0.c0))>((rt0.c3, v0.c0, rt0.c0, rt0.c0, rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE ((((v0.c0)AND(x'')))AND(rt0.c2)) END ASC  NULLS FIRST, (((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN ((rt0.c3 IN (rt0.c3)), ((rt0.c3) NOT NULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c2, '621550226', v0.c0))>((rt0.c3, v0.c0, rt0.c0, rt0.c0, rt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE ((((v0.c0)AND(x'')))AND(rt0.c2)) END ASC  NULLS FIRST, (((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN ((rt0.c3 IN (rt0.c3)), ((rt0.c3) NOT NULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c2, rt0.c2, '621550226', v0.c0))>((rt0.c3, v0.c0, rt0.c0, rt0.c0, rt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE ((((v0.c0)AND(x'')))AND(rt0.c2)) END ASC  NULLS FIRST, (((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN ((rt0.c3 IN (rt0.c3)), ((rt0.c3) NOT NULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE BINARY);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c2, rt0.c2, rt0.c2, '621550226', v0.c0))>((rt0.c3, v0.c0, rt0.c0, rt0.c0, rt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0)) THEN CAST(rt0.c3 AS BLOB) ELSE ((((v0.c0)AND(x'')))AND(rt0.c2)) END ASC  NULLS FIRST, (((((((((v0.c0)AND(rt0.c3)))AND(v0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN ((rt0.c3 IN (rt0.c3)), ((rt0.c3) NOT NULL))) ASC  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) COLLATE BINARY;
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((('') BETWEEN (v0.c0) AND (v0.c0)))&(x'' COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((('') BETWEEN (v0.c0) AND (v0.c0)))&(x'' COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((('') BETWEEN (v0.c0) AND (v0.c0)))&(x'' COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((('') BETWEEN (v0.c0) AND (v0.c0)))&(x'' COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((('') BETWEEN (v0.c0) AND (v0.c0)))&(x'' COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))AND(x'' COLLATE BINARY)))AND(((rt0.c1)/(rt0.c3)))))AND((- (rt0.c0)))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))AND(x'' COLLATE BINARY)))AND(((rt0.c1)/(rt0.c3)))))AND((- (rt0.c0)))))AND((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))AND(x'' COLLATE BINARY)))AND(((rt0.c1)/(rt0.c3)))))AND((- (rt0.c0)))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))AND(x'' COLLATE BINARY)))AND(((rt0.c1)/(rt0.c3)))))AND((- (rt0.c0)))))AND((- (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))AND(x'' COLLATE BINARY)))AND(((rt0.c1)/(rt0.c3)))))AND((- (rt0.c0)))))AND((- (v0.c0)))));
SELECT * FROM rt0, v0 WHERE (-1.021406155E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.021406155E9) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (-1.021406155E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.021406155E9) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (-1.021406155E9);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((rt0.c2)<(NULL))))) WHERE (LTRIM(rt0.c1, load_extension(rt0.c3, x''))) ORDER BY CAST('ꑕ7' AS BLOB), x''  NULLS LAST, ((((((((CAST(rt0.c2 AS REAL))AND(CASE WHEN x'' THEN v0.c0 END)))AND(((rt0.c0)AND(rt0.c2)))))AND((((NULL, rt0.c2, rt0.c1, vt0.c0, rt0.c1))>=((x'', rt0.c3, x'', v0.c0, 0.6318219440588551))))))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c1, load_extension(rt0.c3, x''))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((rt0.c2)<(NULL))))) ORDER BY CAST('ꑕ7' AS BLOB), x''  NULLS LAST, ((((((((CAST(rt0.c2 AS REAL))AND(CASE WHEN x'' THEN v0.c0 END)))AND(((rt0.c0)AND(rt0.c2)))))AND((((NULL, rt0.c2, rt0.c1, vt0.c0, rt0.c1))>=((x'', rt0.c3, x'', v0.c0, 0.6318219440588551))))))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) ASC);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((rt0.c2)<(NULL))))) WHERE (LTRIM(rt0.c1, load_extension(rt0.c3, x''))) ORDER BY CAST('ꑕ7' AS BLOB), x''  NULLS LAST, ((((((((CAST(rt0.c2 AS REAL))AND(CASE WHEN x'' THEN v0.c0 END)))AND(((rt0.c0)AND(rt0.c2)))))AND((((NULL, rt0.c2, rt0.c1, vt0.c0, rt0.c1))>=((x'', rt0.c3, x'', v0.c0, 0.6318219440588551))))))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c1, load_extension(rt0.c3, x''))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((((rt0.c2)<(NULL))))) ORDER BY CAST('ꑕ7' AS BLOB), x''  NULLS LAST, ((((((((CAST(rt0.c2 AS REAL))AND(CASE WHEN x'' THEN v0.c0 END)))AND(((rt0.c0)AND(rt0.c2)))))AND((((NULL, rt0.c2, rt0.c1, vt0.c0, rt0.c1))>=((x'', rt0.c3, x'', v0.c0, 0.6318219440588551))))))OR((((rt0.c3)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))) ASC);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((x'55d8') NOT BETWEEN (rt0.c3) AND (rt0.c3))))) WHERE (((((CAST(rt0.c0 AS INTEGER))OR((NOT (rt0.c0)))))AND(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))OR((NOT (rt0.c0)))))AND(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((x'55d8') NOT BETWEEN (rt0.c3) AND (rt0.c3))))));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((x'55d8') NOT BETWEEN (rt0.c3) AND (rt0.c3))))) WHERE (((((CAST(rt0.c0 AS INTEGER))OR((NOT (rt0.c0)))))AND(LIKELY(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS INTEGER))OR((NOT (rt0.c0)))))AND(LIKELY(DISTINCT rt0.c2)))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((x'55d8') NOT BETWEEN (rt0.c3) AND (rt0.c3))))));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((x'55d8') NOT BETWEEN (rt0.c3) AND (rt0.c3))))) WHERE (((((CAST(rt0.c0 AS INTEGER))OR((NOT (rt0.c0)))))AND(LIKELY(DISTINCT rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c1)>>(0.8488128528707243)) COLLATE BINARY COLLATE RTRIM) ORDER BY (~ (CASE vt0.c0  WHEN rt0.c3 THEN 0x28d9f82d END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(0.8488128528707243)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (~ (CASE vt0.c0  WHEN rt0.c3 THEN 0X28d9f82d END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c1)>>(0.8488128528707243)) COLLATE BINARY COLLATE RTRIM) ORDER BY (~ (CASE vt0.c0  WHEN rt0.c3 THEN 0x28d9f82d END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(0.8488128528707243)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (~ (CASE vt0.c0  WHEN rt0.c3 THEN 0X28d9f82d END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c1)>>(0.8488128528707243)) COLLATE BINARY COLLATE RTRIM) ORDER BY (~ (CASE vt0.c0  WHEN rt0.c3 THEN 0x28d9f82d END))  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((~ (((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0)AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0)AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((v0.c0)AND(vt0.c0 COLLATE NOCASE)))AND(((rt0.c3) NOT NULL))));
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN (('', rt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c0)))OR(0Xffffffffb3b2f4e1)))) AND ((rt0.c0, ((rt0.c3) NOT NULL), (~ (vt0.c0)))))) ORDER BY (((((((((vt0.c0 IN ()))OR(CAST(rt0.c0 AS REAL))))AND(((((((((((((v0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0)))))AND(((vt0.c0) IS TRUE))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC, ((((((rt0.c3)AND(0.2907359776557201)))OR(rt0.c2))) NOT BETWEEN (rt0.c3) AND ((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN (('', rt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c0)))OR(0Xffffffffb3b2f4e1)))) AND ((rt0.c0, ((rt0.c3) NOT NULL), (~ (vt0.c0)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY (((((((((vt0.c0 IN ()))OR(CAST(rt0.c0 AS REAL))))AND(((((((((((((v0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0)))))AND(((vt0.c0) IS TRUE))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC, ((((((rt0.c3)AND(0.2907359776557201)))OR(rt0.c2))) NOT BETWEEN (rt0.c3) AND ((rt0.c3 IN (rt0.c1)))));
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN (('', rt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c0)))OR(0Xffffffffb3b2f4e1)))) AND ((rt0.c0, ((rt0.c3) NOT NULL), (~ (vt0.c0)))))) ORDER BY (((((((((vt0.c0 IN ()))OR(CAST(rt0.c0 AS REAL))))AND(((((((((((((v0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0)))))AND(((vt0.c0) IS TRUE))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC, ((((((rt0.c3)AND(0.2907359776557201)))OR(rt0.c2))) NOT BETWEEN (rt0.c3) AND ((rt0.c3 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN (('', rt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c0)))OR(0Xffffffffb3b2f4e1)))) AND ((rt0.c0, ((rt0.c3) NOT NULL), (~ (vt0.c0)))))) IS TRUE)  as count FROM v0, rt0 NATURAL JOIN vt0 ORDER BY (((((((((vt0.c0 IN ()))OR(CAST(rt0.c0 AS REAL))))AND(((((((((((((v0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0)))))AND(((vt0.c0) IS TRUE))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC, ((((((rt0.c3)AND(0.2907359776557201)))OR(rt0.c2))) NOT BETWEEN (rt0.c3) AND ((rt0.c3 IN (rt0.c1)))));
SELECT * FROM v0, rt0 NATURAL JOIN vt0 WHERE ((((rt0.c3, rt0.c2, vt0.c0)) NOT BETWEEN (('', rt0.c1 COLLATE RTRIM, ((((vt0.c0)AND(rt0.c0)))OR(0Xffffffffb3b2f4e1)))) AND ((rt0.c0, ((rt0.c3) NOT NULL), (~ (vt0.c0)))))) ORDER BY (((((((((vt0.c0 IN ()))OR(CAST(rt0.c0 AS REAL))))AND(((((((((((((v0.c0)AND(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(v0.c0)))))AND(((vt0.c0) IS TRUE))))OR((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC, ((((((rt0.c3)AND(0.2907359776557201)))OR(rt0.c2))) NOT BETWEEN (rt0.c3) AND ((rt0.c3 IN (rt0.c1))));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY CAST(((rt0.c2)<<(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2)<<(rt0.c1)) AS INTEGER) ASC);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY CAST(((rt0.c2)<<(rt0.c1)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2)<<(rt0.c1)) AS INTEGER) ASC);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY CAST(((rt0.c2)<<(rt0.c1)) AS INTEGER) ASC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((~ (v0.c0)) AS REAL)) ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (0.4298979378704999) AND (rt0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (0.4298979378704999) AND (rt0.c3)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((~ (v0.c0)) AS REAL)) ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (0.4298979378704999) AND (rt0.c3)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (v0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (0.4298979378704999) AND (rt0.c3)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((~ (v0.c0)) AS REAL)) ORDER BY CASE x''  WHEN (+ (rt0.c3)) THEN ((rt0.c1) NOT BETWEEN (0.4298979378704999) AND (rt0.c3)) END  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (SQLITE_SOURCE_ID()) ORDER BY (PRINTF(rt0.c1) IN (LIKELY(DISTINCT rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL ORDER BY (PRINTF(rt0.c1) IN (LIKELY(DISTINCT rt0.c3)))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (SQLITE_SOURCE_ID()) ORDER BY (PRINTF(rt0.c1) IN (LIKELY(DISTINCT rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON NULL ORDER BY (PRINTF(rt0.c1) IN (LIKELY(DISTINCT rt0.c3)))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON NULL WHERE (SQLITE_SOURCE_ID()) ORDER BY (PRINTF(rt0.c1) IN (LIKELY(DISTINCT rt0.c3)))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CASE ((' ?ZȀq[ml8') NOTNULL)  WHEN ((rt0.c2)|(v0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) WHEN (rt0.c3 IN ()) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((' ?ZȀq[ml8') NOTNULL)  WHEN ((rt0.c2)|(v0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) WHEN (rt0.c3 IN ()) THEN rt0.c0 END);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CASE ((' ?ZȀq[ml8') NOTNULL)  WHEN ((rt0.c2)|(v0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) WHEN (rt0.c3 IN ()) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY CASE ((' ?ZȀq[ml8') NOTNULL)  WHEN ((rt0.c2)|(v0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) WHEN (rt0.c3 IN ()) THEN rt0.c0 END);
SELECT * FROM v0, rt0 WHERE (x'') ORDER BY CASE ((' ?ZȀq[ml8') NOTNULL)  WHEN ((rt0.c2)|(v0.c0)) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c0 THEN (rt0.c3 IN ()) WHEN (rt0.c3 IN ()) THEN rt0.c0 END;
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((((((rt0.c1, 'go{9', rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0))))OR((~ (rt0.c0)))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (CASE ((v0.c0) ISNULL)  WHEN TIME(vt0.c0, vt0.c0, rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c3)!=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN TIME(vt0.c0, vt0.c0, rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c3)<>(rt0.c3)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((((((rt0.c1, 'go{9', rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0))))OR((~ (rt0.c0)))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((((((rt0.c1, 'go{9', rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0))))OR((~ (rt0.c0)))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (CASE ((v0.c0) ISNULL)  WHEN TIME(vt0.c0, vt0.c0, rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c3)!=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) ISNULL)  WHEN TIME(vt0.c0, vt0.c0, rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c3)<>(rt0.c3)) END) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((((((rt0.c1, 'go{9', rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0))))OR((~ (rt0.c0)))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((((((rt0.c1, 'go{9', rt0.c0, rt0.c3, vt0.c0)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((vt0.c0, rt0.c1, v0.c0, rt0.c2, v0.c0))))OR((~ (rt0.c0)))))AND(((vt0.c0) BETWEEN (x'') AND (v0.c0)))) WHERE (CASE ((v0.c0) ISNULL)  WHEN TIME(vt0.c0, vt0.c0, rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c3)!=(rt0.c3)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c0, v0.c0))&(((((v0.c0)OR(v0.c0)))OR(x'cafcc29f'))))) ORDER BY (+ (v0.c0))  NULLS LAST, ((CASE '\r*'  WHEN v0.c0 THEN v0.c0 END) IS FALSE)  NULLS FIRST, (- ((((v0.c0))<((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c0, v0.c0))&(((((v0.c0)OR(v0.c0)))OR(x'cafcc29f'))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0))  NULLS LAST, ((CASE '\r*'  WHEN v0.c0 THEN v0.c0 END) IS FALSE)  NULLS FIRST, (- ((((v0.c0))<((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c0, v0.c0))&(((((v0.c0)OR(v0.c0)))OR(x'cafcc29f'))))) ORDER BY (+ (v0.c0))  NULLS LAST, ((CASE '\r*'  WHEN v0.c0 THEN v0.c0 END) IS FALSE)  NULLS FIRST, (- ((((v0.c0))<((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(v0.c0, v0.c0))&(((((v0.c0)OR(v0.c0)))OR(x'cafcc29f'))))) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0))  NULLS LAST, ((CASE '\r*'  WHEN v0.c0 THEN v0.c0 END) IS FALSE)  NULLS FIRST, (- ((((v0.c0))<((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c0, v0.c0))&(((((v0.c0)OR(v0.c0)))OR(x'cafcc29f'))))) ORDER BY (+ (v0.c0))  NULLS LAST, ((CASE '\r*'  WHEN v0.c0 THEN v0.c0 END) IS FALSE)  NULLS FIRST, (- ((((v0.c0))<((v0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 RIGHT OUTER JOIN v0 ON (((rt0.c1, rt0.c0 COLLATE RTRIM, ((rt0.c1)<=(v0.c0))))<=((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, rt0.c2 COLLATE RTRIM, ((rt0.c1)&(x''))))) WHERE (((((((((((rt0.c3)IS(v0.c0)))OR(((((v0.c0)OR(rt0.c3)))AND(v0.c0)))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(x'cd71')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY v0.c0 ASC  NULLS LAST, CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(vt0.c0)))OR('-2036910410')))AND(rt0.c1)))OR(v0.c0)) THEN (rt0.c3 IN ()) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)IS(v0.c0)))OR(((((v0.c0)OR(rt0.c3)))AND(v0.c0)))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(x'cd71')))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 RIGHT OUTER JOIN v0 ON (((rt0.c1, rt0.c0 COLLATE RTRIM, ((rt0.c1)<=(v0.c0))))<=((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, rt0.c2 COLLATE RTRIM, ((rt0.c1)&(x''))))) ORDER BY v0.c0 ASC  NULLS LAST, CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(vt0.c0)))OR('-2036910410')))AND(rt0.c1)))OR(v0.c0)) THEN (rt0.c3 IN ()) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 RIGHT OUTER JOIN v0 ON (((rt0.c1, rt0.c0 COLLATE RTRIM, ((rt0.c1)<=(v0.c0))))<=((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, rt0.c2 COLLATE RTRIM, ((rt0.c1)&(x''))))) WHERE (((((((((((rt0.c3)IS(v0.c0)))OR(((((v0.c0)OR(rt0.c3)))AND(v0.c0)))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(x'cd71')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY v0.c0 ASC  NULLS LAST, CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(vt0.c0)))OR('-2036910410')))AND(rt0.c1)))OR(v0.c0)) THEN (rt0.c3 IN ()) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)IS(v0.c0)))OR(((((v0.c0)OR(rt0.c3)))AND(v0.c0)))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(x'cd71')))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 RIGHT OUTER JOIN v0 ON (((rt0.c1, rt0.c0 COLLATE RTRIM, ((rt0.c1)<=(v0.c0))))<=((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, rt0.c2 COLLATE RTRIM, ((rt0.c1)&(x''))))) ORDER BY v0.c0 ASC  NULLS LAST, CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(vt0.c0)))OR('-2036910410')))AND(rt0.c1)))OR(v0.c0)) THEN (rt0.c3 IN ()) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c3 RIGHT OUTER JOIN v0 ON (((rt0.c1, rt0.c0 COLLATE RTRIM, ((rt0.c1)<=(v0.c0))))<=((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, rt0.c2 COLLATE RTRIM, ((rt0.c1)&(x''))))) WHERE (((((((((((rt0.c3)IS(v0.c0)))OR(((((v0.c0)OR(rt0.c3)))AND(v0.c0)))))AND(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(x'cd71')))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY v0.c0 ASC  NULLS LAST, CASE vt0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(vt0.c0)))OR('-2036910410')))AND(rt0.c1)))OR(v0.c0)) THEN (rt0.c3 IN ()) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY (((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, rt0.c2, ((vt0.c0) IS TRUE), (- (vt0.c0)), ((rt0.c3)<(rt0.c1)))) AND (((rt0.c0 IN (rt0.c0, rt0.c2)), ((rt0.c3) NOT NULL), (rt0.c3 IN ()), (((0.7612881162931511, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), CAST(rt0.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) ORDER BY (((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, rt0.c2, ((vt0.c0) IS TRUE), (- (vt0.c0)), ((rt0.c3)<(rt0.c1)))) AND (((rt0.c0 IN (rt0.c0, rt0.c2)), ((rt0.c3) NOT NULL), (rt0.c3 IN ()), (((0.7612881162931511, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), CAST(rt0.c1 AS NUMERIC)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY (((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, rt0.c2, ((vt0.c0) IS TRUE), (- (vt0.c0)), ((rt0.c3)<(rt0.c1)))) AND (((rt0.c0 IN (rt0.c0, rt0.c2)), ((rt0.c3) NOT NULL), (rt0.c3 IN ()), (((0.7612881162931511, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), CAST(rt0.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) ORDER BY (((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, rt0.c2, ((vt0.c0) IS TRUE), (- (vt0.c0)), ((rt0.c3)<(rt0.c1)))) AND (((rt0.c0 IN (rt0.c0, rt0.c2)), ((rt0.c3) NOT NULL), (rt0.c3 IN ()), (((0.7612881162931511, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), CAST(rt0.c1 AS NUMERIC)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS NUMERIC)) ISNULL) WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) ORDER BY (((rt0.c2, rt0.c3, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END, rt0.c2, ((vt0.c0) IS TRUE), (- (vt0.c0)), ((rt0.c3)<(rt0.c1)))) AND (((rt0.c0 IN (rt0.c0, rt0.c2)), ((rt0.c3) NOT NULL), (rt0.c3 IN ()), (((0.7612881162931511, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, x'', vt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))), CAST(rt0.c1 AS NUMERIC)))) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(0.7530865234948262)) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END END CROSS JOIN v0 ON (~ (((rt0.c2)IS(rt0.c0)))) WHERE (LIKELY(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY ((TRIM(DISTINCT v0.c0))GLOB((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(0.7530865234948262)) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END END CROSS JOIN v0 ON (~ (((rt0.c2)IS(rt0.c0)))) ORDER BY ((TRIM(DISTINCT v0.c0))GLOB((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(0.7530865234948262)) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END END CROSS JOIN v0 ON (~ (((rt0.c2)IS(rt0.c0)))) WHERE (LIKELY(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY ((TRIM(DISTINCT v0.c0))GLOB((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(0.7530865234948262)) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END END CROSS JOIN v0 ON (~ (((rt0.c2)IS(rt0.c0)))) ORDER BY ((TRIM(DISTINCT v0.c0))GLOB((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(0.7530865234948262)) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 END END CROSS JOIN v0 ON (~ (((rt0.c2)IS(rt0.c0)))) WHERE (LIKELY(DISTINCT ((vt0.c0) IS FALSE))) ORDER BY ((TRIM(DISTINCT v0.c0))GLOB((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (~ (rt0.c0)) ELSE rt0.c2 COLLATE RTRIM END);
SELECT ALL * FROM vt0 WHERE (CAST(CHANGES() AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CHANGES() AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CHANGES() AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CHANGES() AS BLOB));
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(1.962463277E9 AS NUMERIC))))OR((((rt0.c1))=((rt0.c0))))))AND(((rt0.c0)>(rt0.c1)))))OR(((rt0.c2) IS TRUE))) WHERE ((CASE WHEN rt0.c0 THEN v0.c0 ELSE -1.223105342E9 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN v0.c0 ELSE -1.223105342E9 END IN ())) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(1.962463277E9 AS NUMERIC))))OR((((rt0.c1))==((rt0.c0))))))AND(((rt0.c0)>(rt0.c1)))))OR(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(1.962463277E9 AS NUMERIC))))OR((((rt0.c1))=((rt0.c0))))))AND(((rt0.c0)>(rt0.c1)))))OR(((rt0.c2) IS TRUE))) WHERE ((CASE WHEN rt0.c0 THEN v0.c0 ELSE -1.223105342E9 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN v0.c0 ELSE -1.223105342E9 END IN ())) IS TRUE)  as count FROM rt0, v0 CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(1.962463277E9 AS NUMERIC))))OR((((rt0.c1))==((rt0.c0))))))AND(((rt0.c0)>(rt0.c1)))))OR(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0, v0 CROSS JOIN vt0 ON ((((((((CAST(rt0.c1 AS TEXT))AND(CAST(1.962463277E9 AS NUMERIC))))OR((((rt0.c1))=((rt0.c0))))))AND(((rt0.c0)>(rt0.c1)))))OR(((rt0.c2) IS TRUE))) WHERE ((CASE WHEN rt0.c0 THEN v0.c0 ELSE -1.223105342E9 END IN ()));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)<=(v0.c0)))))AND((((('')OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)<=(v0.c0)))))AND((((('')OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)<=(v0.c0)))))AND((((('')OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((((v0.c0 IN ()))AND(((v0.c0)<=(v0.c0)))))AND((((('')OR(NULL)))OR(v0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON CASE (+ (vt0.c0))  WHEN ((0Xfffffffff9e06697) NOT NULL) THEN ((rt0.c1)>(vt0.c0)) ELSE (rt0.c1 IN ()) END WHERE (HEX(-818992836)) ORDER BY (NOT (((vt0.c0)>>(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(-818992836)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON CASE (+ (vt0.c0))  WHEN ((0xfffffffff9e06697) NOT NULL) THEN ((rt0.c1)>(vt0.c0)) ELSE (rt0.c1 IN ()) END ORDER BY (NOT (((vt0.c0)>>(rt0.c2)))) ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON CASE (+ (vt0.c0))  WHEN ((0Xfffffffff9e06697) NOT NULL) THEN ((rt0.c1)>(vt0.c0)) ELSE (rt0.c1 IN ()) END WHERE (HEX(-818992836)) ORDER BY (NOT (((vt0.c0)>>(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((HEX(-818992836)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON CASE (+ (vt0.c0))  WHEN ((0xfffffffff9e06697) NOT NULL) THEN ((rt0.c1)>(vt0.c0)) ELSE (rt0.c1 IN ()) END ORDER BY (NOT (((vt0.c0)>>(rt0.c2)))) ASC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) FULL OUTER JOIN v0 ON CASE (+ (vt0.c0))  WHEN ((0Xfffffffff9e06697) NOT NULL) THEN ((rt0.c1)>(vt0.c0)) ELSE (rt0.c1 IN ()) END WHERE (HEX(-818992836)) ORDER BY (NOT (((vt0.c0)>>(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0Xffffffff9b9fbf83)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0xffffffff9b9fbf83)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0Xffffffff9b9fbf83)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0xffffffff9b9fbf83)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0Xffffffff9b9fbf83)))OR(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c1 COLLATE NOCASE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (x'')))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (x'')))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c1 COLLATE NOCASE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (x'')))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (x'')))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (rt0.c1 COLLATE NOCASE))) ORDER BY (((rt0.c0)) NOT BETWEEN (((~ (x'')))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST, v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST, v0.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY ((v0.c0 COLLATE BINARY) NOT NULL) DESC  NULLS LAST, v0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c2)))%(TRIM(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c1)))AND(x'')))AND(rt0.c2)))AND(rt0.c3)))) DESC  NULLS LAST, CASE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c3) BETWEEN (0.7848004672869904) AND ('0.6376114564082215')) WHEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN TRIM(rt0.c2) WHEN LAST_INSERT_ROWID() THEN (rt0.c3 IN ()) END, CAST(CAST(rt0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (rt0.c2)))%(TRIM(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c1)))AND(x'')))AND(rt0.c2)))AND(rt0.c3)))) DESC  NULLS LAST, CASE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c3) BETWEEN (0.7848004672869904) AND ('0.6376114564082215')) WHEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN TRIM(rt0.c2) WHEN LAST_INSERT_ROWID() THEN (rt0.c3 IN ()) END, CAST(CAST(rt0.c0 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c2)))%(TRIM(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c1)))AND(x'')))AND(rt0.c2)))AND(rt0.c3)))) DESC  NULLS LAST, CASE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c3) BETWEEN (0.7848004672869904) AND ('0.6376114564082215')) WHEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN TRIM(rt0.c2) WHEN LAST_INSERT_ROWID() THEN (rt0.c3 IN ()) END, CAST(CAST(rt0.c0 AS INTEGER) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((('' IN (rt0.c2)))%(TRIM(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c1)))AND(x'')))AND(rt0.c2)))AND(rt0.c3)))) DESC  NULLS LAST, CASE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c3) BETWEEN (0.7848004672869904) AND ('0.6376114564082215')) WHEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN TRIM(rt0.c2) WHEN LAST_INSERT_ROWID() THEN (rt0.c3 IN ()) END, CAST(CAST(rt0.c0 AS INTEGER) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('' IN (rt0.c2)))%(TRIM(DISTINCT rt0.c2, rt0.c0)))) ORDER BY (NOT (((((((((rt0.c0)AND(rt0.c1)))AND(x'')))AND(rt0.c2)))AND(rt0.c3)))) DESC  NULLS LAST, CASE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((rt0.c3) BETWEEN (0.7848004672869904) AND ('0.6376114564082215')) WHEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) THEN TRIM(rt0.c2) WHEN LAST_INSERT_ROWID() THEN (rt0.c3 IN ()) END, CAST(CAST(rt0.c0 AS INTEGER) AS REAL);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(SQLITE_SOURCE_ID())))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(SQLITE_SOURCE_ID())))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(SQLITE_SOURCE_ID())))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)LIKE(vt0.c0)))OR(SQLITE_SOURCE_ID())))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)LIKE(vt0.c0)))OR(SQLITE_SOURCE_ID())))OR(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE ((((v0.c0) ISNULL) IN ((((vt0.c0))>=((vt0.c0))), ((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ((((vt0.c0))>=((vt0.c0))), ((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE ((((v0.c0) ISNULL) IN ((((vt0.c0))>=((vt0.c0))), ((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) ISNULL) IN ((((vt0.c0))>=((vt0.c0))), ((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON vt0.c0 WHERE ((((v0.c0) ISNULL) IN ((((vt0.c0))>=((vt0.c0))), ((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c0)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c0)))) AND (v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c0)))) AND (v0.c0))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))) BETWEEN ((((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c2, rt0.c0)))) AND (v0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((NULL)AND(vt0.c0))))) ORDER BY (+ (((vt0.c0)>(vt0.c0))))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((NULL)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)>(vt0.c0))))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((NULL)AND(vt0.c0))))) ORDER BY (+ (((vt0.c0)>(vt0.c0))))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((NULL)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)>(vt0.c0))))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((NULL)AND(vt0.c0))))) ORDER BY (+ (((vt0.c0)>(vt0.c0))))  NULLS FIRST, (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((CHANGES()) NOT BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c3))) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c1 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES()) NOT BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c3))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (rt0.c1 IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((CHANGES()) NOT BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c3))) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c1 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CHANGES()) NOT BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c3))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (rt0.c1 IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((CHANGES()) NOT BETWEEN (((((((((rt0.c0)OR(v0.c0)))OR(x'')))OR(rt0.c1)))OR(rt0.c3))) AND ((rt0.c0 IN ())))) ORDER BY (rt0.c1 IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '0.7530865234948262' RIGHT OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((((((((rt0.c2)OR(0.9753055028980557)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)))) WHERE ((~ (((rt0.c2)AND(x'c233')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)AND(x'c233'))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '0.7530865234948262' RIGHT OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((((((((rt0.c2)OR(0.9753055028980557)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '0.7530865234948262' RIGHT OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((((((((rt0.c2)OR(0.9753055028980557)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)))) WHERE ((~ (((rt0.c2)AND(x'c233')))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)AND(x'c233'))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '0.7530865234948262' RIGHT OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((((((((rt0.c2)OR(0.9753055028980557)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '0.7530865234948262' RIGHT OUTER JOIN rt0 ON ((((CAST(v0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))AND(((((((((rt0.c2)OR(0.9753055028980557)))AND(rt0.c2)))AND(vt0.c0)))AND(rt0.c0)))) WHERE ((~ (((rt0.c2)AND(x'c233')))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((1.7976931348623157E308) IS FALSE)) BETWEEN (-1168753586) AND (rt0.c1))) ORDER BY (((- (x'0142')))LIKE(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((1.7976931348623157E308) IS FALSE)) BETWEEN (-1168753586) AND (rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((- (x'0142')))LIKE(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((1.7976931348623157E308) IS FALSE)) BETWEEN (-1168753586) AND (rt0.c1))) ORDER BY (((- (x'0142')))LIKE(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((1.7976931348623157E308) IS FALSE)) BETWEEN (-1168753586) AND (rt0.c1))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((- (x'0142')))LIKE(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((1.7976931348623157E308) IS FALSE)) BETWEEN (-1168753586) AND (rt0.c1))) ORDER BY (((- (x'0142')))LIKE(((rt0.c2) ISNULL)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_object(((rt0.c1)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.22541754286133253))), CASE WHEN rt0.c1 THEN rt0.c0 END, LIKELY(DISTINCT vt0.c0))) ORDER BY CAST(((rt0.c0) ISNULL) AS BLOB) ASC  NULLS FIRST, (- ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c1)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.22541754286133253))), CASE WHEN rt0.c1 THEN rt0.c0 END, LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0) ISNULL) AS BLOB) ASC  NULLS FIRST, (- ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_object(((rt0.c1)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.22541754286133253))), CASE WHEN rt0.c1 THEN rt0.c0 END, LIKELY(DISTINCT vt0.c0))) ORDER BY CAST(((rt0.c0) ISNULL) AS BLOB) ASC  NULLS FIRST, (- ((rt0.c1 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c1)GLOB(vt0.c0)), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.22541754286133253))), CASE WHEN rt0.c1 THEN rt0.c0 END, LIKELY(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0) ISNULL) AS BLOB) ASC  NULLS FIRST, (- ((rt0.c1 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) ORDER BY rt0.c0 DESC;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0))>((rt0.c1, v0.c0, v0.c0)))) IS TRUE)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (rt0.c2, LIKE(x'', vt0.c0, '0')))  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c0))>((rt0.c1, v0.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (rt0.c2, LIKE(x'', vt0.c0, '0')))  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0))>((rt0.c1, v0.c0, v0.c0)))) IS TRUE)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (rt0.c2, LIKE(x'', vt0.c0, '0')))  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c0))>((rt0.c1, v0.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (rt0.c2, LIKE(x'', vt0.c0, '0')))  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0))>((rt0.c1, v0.c0, v0.c0)))) IS TRUE)) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN (rt0.c2, LIKE(x'', vt0.c0, '0')))  NULLS LAST, ((((rt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c3))) ORDER BY ((NULL)!=((~ (0.24531841560911538))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<>((~ (0.24531841560911538)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c3))) ORDER BY ((NULL)!=((~ (0.24531841560911538))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) NOTNULL))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL)<>((~ (0.24531841560911538)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) NOTNULL))OR(rt0.c2 COLLATE BINARY)))AND(rt0.c3))) ORDER BY ((NULL)!=((~ (0.24531841560911538))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(rt0.c3 AS BLOB))))AND(((vt0.c0)>=(rt0.c1))))  NULLS LAST, (((rt0.c1))>((rt0.c3))) COLLATE BINARY ASC, ((LIKELIHOOD(DISTINCT rt0.c3, 0.8314967570546684)) BETWEEN ((NOT (rt0.c0))) AND (CAST('1560161954' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(rt0.c3 AS BLOB))))AND(((vt0.c0)>=(rt0.c1))))  NULLS LAST, (((rt0.c1))>((rt0.c3))) COLLATE BINARY ASC, ((LIKELIHOOD(DISTINCT rt0.c3, 0.8314967570546684)) BETWEEN ((NOT (rt0.c0))) AND (CAST('1560161954' AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(rt0.c3 AS BLOB))))AND(((vt0.c0)>=(rt0.c1))))  NULLS LAST, (((rt0.c1))>((rt0.c3))) COLLATE BINARY ASC, ((LIKELIHOOD(DISTINCT rt0.c3, 0.8314967570546684)) BETWEEN ((NOT (rt0.c0))) AND (CAST('1560161954' AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(rt0.c3 AS BLOB))))AND(((vt0.c0)>=(rt0.c1))))  NULLS LAST, (((rt0.c1))>((rt0.c3))) COLLATE BINARY ASC, ((LIKELIHOOD(DISTINCT rt0.c3, 0.8314967570546684)) BETWEEN ((NOT (rt0.c0))) AND (CAST('1560161954' AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END IN ())) ORDER BY ((((CAST(v0.c0 AS NUMERIC))AND(CAST(rt0.c3 AS BLOB))))AND(((vt0.c0)>=(rt0.c1))))  NULLS LAST, (((rt0.c1))>((rt0.c3))) COLLATE BINARY ASC, ((LIKELIHOOD(DISTINCT rt0.c3, 0.8314967570546684)) BETWEEN ((NOT (rt0.c0))) AND (CAST('1560161954' AS INTEGER)))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (TRIM(((rt0.c3)|(rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3)|(rt0.c0)), rt0.c2)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (TRIM(((rt0.c3)|(rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c3)|(rt0.c0)), rt0.c2)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (TRIM(((rt0.c3)|(rt0.c0)), rt0.c2));
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0, '11OS[W]~') COLLATE NOCASE) ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))GLOB(TRIM(0.2444608750479106)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c0, '11OS[W]~') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))GLOB(TRIM(0.2444608750479106))));
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0, '11OS[W]~') COLLATE NOCASE) ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))GLOB(TRIM(0.2444608750479106)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c0, '11OS[W]~') COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))GLOB(TRIM(0.2444608750479106))));
SELECT COUNT(*) FROM v0 WHERE (TRIM(v0.c0, '11OS[W]~') COLLATE NOCASE) ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))))GLOB(TRIM(0.2444608750479106)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-122276042' ELSE v0.c0 END ELSE vt0.c0 END) ORDER BY DATE(CAST(vt0.c0 AS REAL), x'', vt0.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-122276042' ELSE v0.c0 END ELSE vt0.c0 END) IS TRUE)  as count FROM v0, vt0 ORDER BY DATE(CAST(vt0.c0 AS REAL), x'', vt0.c0 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-122276042' ELSE v0.c0 END ELSE vt0.c0 END) ORDER BY DATE(CAST(vt0.c0 AS REAL), x'', vt0.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-122276042' ELSE v0.c0 END ELSE vt0.c0 END) IS TRUE)  as count FROM v0, vt0 ORDER BY DATE(CAST(vt0.c0 AS REAL), x'', vt0.c0 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-122276042' ELSE v0.c0 END ELSE vt0.c0 END) ORDER BY DATE(CAST(vt0.c0 AS REAL), x'', vt0.c0 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)>>(((v0.c0) NOTNULL))) WHERE (((vt0.c0 IN (vt0.c0)) IN ((('c!Wg') ISNULL), ((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) IN ()), (((+ (v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ((('c!Wg') ISNULL), ((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)>>(((v0.c0) NOTNULL))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) IN ()), (((+ (v0.c0))) IS TRUE));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)>>(((v0.c0) NOTNULL))) WHERE (((vt0.c0 IN (vt0.c0)) IN ((('c!Wg') ISNULL), ((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) IN ()), (((+ (v0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ((('c!Wg') ISNULL), ((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)>>(((v0.c0) NOTNULL))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) IN ()), (((+ (v0.c0))) IS TRUE));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END)>>(((v0.c0) NOTNULL))) WHERE (((vt0.c0 IN (vt0.c0)) IN ((('c!Wg') ISNULL), ((v0.c0)GLOB(v0.c0))))) ORDER BY (((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) IN ()), (((+ (v0.c0))) IS TRUE);
SELECT * FROM v0 WHERE (((((UNLIKELY(v0.c0))OR(NULL)))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(v0.c0))OR(NULL)))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((UNLIKELY(v0.c0))OR(NULL)))AND(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(v0.c0))OR(NULL)))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((UNLIKELY(v0.c0))OR(NULL)))AND(CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL IN ())))>=((NULL)))) ORDER BY CAST(((((v0.c0)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))>=((NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c0)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL IN ())))>=((NULL)))) ORDER BY CAST(((((v0.c0)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))>=((NULL)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((((v0.c0)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((NULL IN ())))>=((NULL)))) ORDER BY CAST(((((v0.c0)AND(rt0.c0)))OR(rt0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c1)))-(CAST(vt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0)OR(rt0.c2)))) WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c1)))-(CAST(vt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0)OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c1)))-(CAST(vt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0)OR(rt0.c2)))) WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c1)))-(CAST(vt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0)OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c2)&(rt0.c1)))-(CAST(vt0.c0 AS NUMERIC))) LEFT OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)!=(((vt0.c0)OR(rt0.c2)))) WHERE ((rt0.c3 IN ()));
SELECT * FROM vt0 WHERE ('1631246880') ORDER BY (NOT (vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('1631246880') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ('1631246880') ORDER BY (NOT (vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (('1631246880') IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE ('1631246880') ORDER BY (NOT (vt0.c0)), ((vt0.c0 COLLATE BINARY) IS FALSE)  NULLS LAST, ((((vt0.c0)IS(vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)*(vt0.c0)))) ASC;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (((rt0.c2))>((rt0.c3))) ELSE '1664368371' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN (((rt0.c2))>((rt0.c3))) ELSE '1664368371' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (((rt0.c2))>((rt0.c3))) ELSE '1664368371' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN (((rt0.c2))>((rt0.c3))) ELSE '1664368371' END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN (((rt0.c2))>((rt0.c3))) ELSE '1664368371' END);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(((0.18973507025404723)<<(vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST, (((LIKELY(vt0.c0)))>=(((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(((0.18973507025404723)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST, (((LIKELY(vt0.c0)))>=(((+ (vt0.c0))))));
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(((0.18973507025404723)<<(vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST, (((LIKELY(vt0.c0)))>=(((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))<(((0.18973507025404723)<<(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST, (((LIKELY(vt0.c0)))>=(((+ (vt0.c0))))));
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))<(((0.18973507025404723)<<(vt0.c0))))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC  NULLS LAST, (((LIKELY(vt0.c0)))>=(((+ (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<=(vt0.c0))) AND (((rt0.c3)IS(rt0.c0))))) ORDER BY (((((((((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c3)), (- (rt0.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))<=((LTRIM(rt0.c0), -2.03691041E9, ((rt0.c1)!=(vt0.c0))))), ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)+(((rt0.c3) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<=(vt0.c0))) AND (((rt0.c3)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c3)), (- (rt0.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))<=((LTRIM(rt0.c0), -2.03691041E9, ((rt0.c1)!=(vt0.c0))))), ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)+(((rt0.c3) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<=(vt0.c0))) AND (((rt0.c3)IS(rt0.c0))))) ORDER BY (((((((((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c3)), (- (rt0.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))<=((LTRIM(rt0.c0), -2.03691041E9, ((rt0.c1)!=(vt0.c0))))), ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)+(((rt0.c3) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<=(vt0.c0))) AND (((rt0.c3)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c3)), (- (rt0.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))<=((LTRIM(rt0.c0), -2.03691041E9, ((rt0.c1)!=(vt0.c0))))), ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)+(((rt0.c3) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((rt0.c2)<=(vt0.c0))) AND (((rt0.c3)IS(rt0.c0))))) ORDER BY (((((((((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c3)), (- (rt0.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0))))<=((LTRIM(rt0.c0), -2.03691041E9, ((rt0.c1)!=(vt0.c0))))), ((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END)+(((rt0.c3) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((('	I')+(rt0.c1))) NOT BETWEEN ((- (rt0.c3))) AND ((((rt0.c3))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((('	I')+(rt0.c1))) NOT BETWEEN ((- (rt0.c3))) AND ((((rt0.c3))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((('	I')+(rt0.c1))) NOT BETWEEN ((- (rt0.c3))) AND ((((rt0.c3))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((('	I')+(rt0.c1))) NOT BETWEEN ((- (rt0.c3))) AND ((((rt0.c3))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((('	I')+(rt0.c1))) NOT BETWEEN ((- (rt0.c3))) AND ((((rt0.c3))>((rt0.c2))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))<(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))<(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS REAL))<(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS REAL))<(CAST(v0.c0 AS TEXT)))) ORDER BY (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c0)%(rt0.c0)))) WHERE (((((((((((((CASE WHEN '' THEN vt0.c0 END)OR((- (rt0.c1)))))OR(((0.7132781647365988)<<(rt0.c1)))))AND(((rt0.c1)OR(rt0.c0)))))AND((('L,')==(rt0.c1)))))AND(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN '' THEN vt0.c0 END)OR((- (rt0.c1)))))OR(((0.7132781647365988)<<(rt0.c1)))))AND(((rt0.c1)OR(rt0.c0)))))AND((('L,')=(rt0.c1)))))AND(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c0)%(rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c0)%(rt0.c0)))) WHERE (((((((((((((CASE WHEN '' THEN vt0.c0 END)OR((- (rt0.c1)))))OR(((0.7132781647365988)<<(rt0.c1)))))AND(((rt0.c1)OR(rt0.c0)))))AND((('L,')==(rt0.c1)))))AND(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN '' THEN vt0.c0 END)OR((- (rt0.c1)))))OR(((0.7132781647365988)<<(rt0.c1)))))AND(((rt0.c1)OR(rt0.c0)))))AND((('L,')=(rt0.c1)))))AND(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c0)%(rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON (((~ (rt0.c1))) NOT BETWEEN (((rt0.c3)-(vt0.c0))) AND (((rt0.c0)%(rt0.c0)))) WHERE (((((((((((((CASE WHEN '' THEN vt0.c0 END)OR((- (rt0.c1)))))OR(((0.7132781647365988)<<(rt0.c1)))))AND(((rt0.c1)OR(rt0.c0)))))AND((('L,')==(rt0.c1)))))AND(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) ORDER BY (((rt0.c1)) BETWEEN ((0.16403503001753994)) AND ((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((0.16403503001753994)) AND ((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) ORDER BY (((rt0.c1)) BETWEEN ((0.16403503001753994)) AND ((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((0.16403503001753994)) AND ((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c1 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) ORDER BY (((rt0.c1)) BETWEEN ((0.16403503001753994)) AND ((rt0.c0 COLLATE BINARY))) DESC  NULLS FIRST, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT BETWEEN (vt0.c0) AND (CAST(rt0.c1 AS INTEGER))) DESC;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS NOT(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0)IS NOT(v0.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(x'6f974158')))OR(vt0.c0)))OR(x'')))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))OR(x'6f974158')))OR(vt0.c0)))OR(x'')))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(x'6f974158')))OR(vt0.c0)))OR(x'')))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)AND(vt0.c0)))OR(x'6f974158')))OR(vt0.c0)))OR(x'')))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))OR(x'6f974158')))OR(vt0.c0)))OR(x'')))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c3, rt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c3, rt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c3, rt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN (rt0.c3, rt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 IN (rt0.c3, rt0.c0)) IN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT 0.9662349160821335)) ORDER BY (((- (v0.c0)))*((~ (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.9662349160821335)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))*((~ (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT 0.9662349160821335)) ORDER BY (((- (v0.c0)))*((~ (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT 0.9662349160821335)) IS TRUE)  as count FROM v0 ORDER BY (((- (v0.c0)))*((~ (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(DISTINCT 0.9662349160821335)) ORDER BY (((- (v0.c0)))*((~ (v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)||(vt0.c0))))!=(((((vt0.c0))<>((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)||(vt0.c0))))<>(((((vt0.c0))!=((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)||(vt0.c0))))!=(((((vt0.c0))<>((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)||(vt0.c0))))<>(((((vt0.c0))!=((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((TRIM(vt0.c0), (vt0.c0 IN ()), ((vt0.c0)||(vt0.c0))))!=(((((vt0.c0))<>((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))))) ORDER BY (+ (vt0.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)||(UNLIKELY(rt0.c3)))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c2)-(rt0.c0)))) DESC  NULLS LAST, ((((((((((((((rt0.c2)|(rt0.c1)))AND(((rt0.c1) BETWEEN ('1797087300') AND (rt0.c3)))))AND(CAST(0.7822087992991409 AS BLOB))))AND(((rt0.c1)>>(rt0.c3)))))AND(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(IFNULL(DISTINCT x'', '')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)||(UNLIKELY(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c2)-(rt0.c0)))) DESC  NULLS LAST, ((((((((((((((rt0.c2)|(rt0.c1)))AND(((rt0.c1) BETWEEN ('1797087300') AND (rt0.c3)))))AND(CAST(0.7822087992991409 AS BLOB))))AND(((rt0.c1)>>(rt0.c3)))))AND(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(IFNULL(DISTINCT x'', '')))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)||(UNLIKELY(rt0.c3)))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c2)-(rt0.c0)))) DESC  NULLS LAST, ((((((((((((((rt0.c2)|(rt0.c1)))AND(((rt0.c1) BETWEEN ('1797087300') AND (rt0.c3)))))AND(CAST(0.7822087992991409 AS BLOB))))AND(((rt0.c1)>>(rt0.c3)))))AND(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(IFNULL(DISTINCT x'', '')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)||(UNLIKELY(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c2)-(rt0.c0)))) DESC  NULLS LAST, ((((((((((((((rt0.c2)|(rt0.c1)))AND(((rt0.c1) BETWEEN ('1797087300') AND (rt0.c3)))))AND(CAST(0.7822087992991409 AS BLOB))))AND(((rt0.c1)>>(rt0.c3)))))AND(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(IFNULL(DISTINCT x'', '')))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)||(UNLIKELY(rt0.c3)))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((rt0.c3) IS TRUE)) AND (((rt0.c2)-(rt0.c0)))) DESC  NULLS LAST, ((((((((((((((rt0.c2)|(rt0.c1)))AND(((rt0.c1) BETWEEN ('1797087300') AND (rt0.c3)))))AND(CAST(0.7822087992991409 AS BLOB))))AND(((rt0.c1)>>(rt0.c3)))))AND(HEX(rt0.c3))))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)))AND(IFNULL(DISTINCT x'', '')))  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((rt0.c2) NOTNULL)) WHERE (((((rt0.c1)!=(rt0.c0)))%(((rt0.c0)+(rt0.c3))))) ORDER BY ((((rt0.c2)OR(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(rt0.c0)))%(((rt0.c0)+(rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((rt0.c2) NOTNULL)) ORDER BY ((((rt0.c2)OR(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((rt0.c2) NOTNULL)) WHERE (((((rt0.c1)!=(rt0.c0)))%(((rt0.c0)+(rt0.c3))))) ORDER BY ((((rt0.c2)OR(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(rt0.c0)))%(((rt0.c0)+(rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((rt0.c2) NOTNULL)) ORDER BY ((((rt0.c2)OR(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON UPPER(((rt0.c2) NOTNULL)) WHERE (((((rt0.c1)!=(rt0.c0)))%(((rt0.c0)+(rt0.c3))))) ORDER BY ((((rt0.c2)OR(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((+ (rt0.c0)))-(rt0.c0)) WHERE (((((((((((v0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((+ (rt0.c0)))-(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((+ (rt0.c0)))-(rt0.c0)) WHERE (((((((((((v0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((+ (rt0.c0)))-(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((+ (rt0.c0)))-(rt0.c0)) WHERE (((((((((((v0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(v0.c0)))AND(rt0.c3))) NOTNULL));
SELECT * FROM rt0, v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((v0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((v0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c3)<>(rt0.c2)) AS REAL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c3)<>(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c3)<>(rt0.c2)) AS REAL) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c3)<>(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((rt0.c3)<>(rt0.c2)) AS REAL) WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (x'1bc8') AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (x'1bc8') AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (x'1bc8') AND ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (x'1bc8') AND ((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (x'1bc8') AND ((v0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN '2062279696' THEN CAST(rt0.c1 AS NUMERIC) END WHERE (json_extract(rt0.c2 COLLATE BINARY, ((((rt0.c1)AND(0xffffffff952e3032)))OR(rt0.c1)), x'', ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c2 COLLATE BINARY, ((((rt0.c1)AND(0Xffffffff952e3032)))OR(rt0.c1)), x'', ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN '2062279696' THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN '2062279696' THEN CAST(rt0.c1 AS NUMERIC) END WHERE (json_extract(rt0.c2 COLLATE BINARY, ((((rt0.c1)AND(0xffffffff952e3032)))OR(rt0.c1)), x'', ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(rt0.c2 COLLATE BINARY, ((((rt0.c1)AND(0Xffffffff952e3032)))OR(rt0.c1)), x'', ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN '2062279696' THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN '2062279696' THEN CAST(rt0.c1 AS NUMERIC) END WHERE (json_extract(rt0.c2 COLLATE BINARY, ((((rt0.c1)AND(0xffffffff952e3032)))OR(rt0.c1)), x'', ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2))));
SELECT * FROM rt0 WHERE (NULL) ORDER BY '塽!';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY '塽!');
SELECT * FROM rt0 WHERE (NULL) ORDER BY '塽!';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY '塽!');
SELECT * FROM rt0 WHERE (NULL) ORDER BY '塽!';
SELECT COUNT(*) FROM rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c2)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c2)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c2)AND(rt0.c3)))));
SELECT ALL * FROM vt0 WHERE ((- (0.7465223804501541)));
SELECT SUM(count) FROM (SELECT (((- (0.7465223804501541))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (0.7465223804501541)));
SELECT SUM(count) FROM (SELECT (((- (0.7465223804501541))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (0.7465223804501541)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((+ (0.8133241923349178)))<(rt0.c1)) RIGHT OUTER JOIN rt0 ON ((((TRIM(rt0.c1))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((+ (0.8133241923349178)))<(rt0.c1)) RIGHT OUTER JOIN rt0 ON ((((TRIM(rt0.c1))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((+ (0.8133241923349178)))<(rt0.c1)) RIGHT OUTER JOIN rt0 ON ((((TRIM(rt0.c1))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((+ (0.8133241923349178)))<(rt0.c1)) RIGHT OUTER JOIN rt0 ON ((((TRIM(rt0.c1))OR(((((((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(v0.c0)))OR(vt0.c0)))AND(rt0.c0)))))OR(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM rt0, v0, vt0 WHERE ((((((rt0.c3) IS TRUE)))>=((rt0.c1)))) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(COALESCE(v0.c0, -1239309003))))AND((rt0.c1 IN ()))))OR(((rt0.c2) IS TRUE))))AND((- (rt0.c3)))) DESC, (((((vt0.c0) NOT NULL)))!=((((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) IS TRUE)))>=((rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(COALESCE(v0.c0, -1239309003))))AND((rt0.c1 IN ()))))OR(((rt0.c2) IS TRUE))))AND((- (rt0.c3)))) DESC, (((((vt0.c0) NOT NULL)))<>((((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) DESC);
SELECT * FROM rt0, v0, vt0 WHERE ((((((rt0.c3) IS TRUE)))>=((rt0.c1)))) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(COALESCE(v0.c0, -1239309003))))AND((rt0.c1 IN ()))))OR(((rt0.c2) IS TRUE))))AND((- (rt0.c3)))) DESC, (((((vt0.c0) NOT NULL)))!=((((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3) IS TRUE)))>=((rt0.c1)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(COALESCE(v0.c0, -1239309003))))AND((rt0.c1 IN ()))))OR(((rt0.c2) IS TRUE))))AND((- (rt0.c3)))) DESC, (((((vt0.c0) NOT NULL)))<>((((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) DESC);
SELECT * FROM rt0, v0, vt0 WHERE ((((((rt0.c3) IS TRUE)))>=((rt0.c1)))) ORDER BY ((((((((rt0.c0 COLLATE BINARY)OR(COALESCE(v0.c0, -1239309003))))AND((rt0.c1 IN ()))))OR(((rt0.c2) IS TRUE))))AND((- (rt0.c3)))) DESC, (((((vt0.c0) NOT NULL)))!=((((v0.c0) BETWEEN (rt0.c0) AND (vt0.c0))))) DESC;
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))/(NULL)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))/(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))/(NULL)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))/(NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))/(NULL)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (+ (v0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)));
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (+ (v0.c0));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, v0.c0, '-878333171')) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0)-(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, v0.c0, '-878333171')) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0)-(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, v0.c0, '-878333171')) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0)-(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, v0.c0, '-878333171')) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0)-(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), v0.c0 COLLATE RTRIM, v0.c0 COLLATE NOCASE, v0.c0, '-878333171')) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), (+ (v0.c0)), ((v0.c0)&(v0.c0)), ((v0.c0)-(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.14471497931278487)), ((v0.c0) ISNULL), (((vt0.c0))=((vt0.c0))))) AND ((((v0.c0) IS TRUE), ((v0.c0) NOTNULL), CASE WHEN 0.7963573604679137 THEN vt0.c0 END))) WHERE (CASE NULL  WHEN (~ (v0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (~ (v0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.14471497931278487)), ((v0.c0) ISNULL), (((vt0.c0))=((vt0.c0))))) AND ((((v0.c0) IS TRUE), ((v0.c0) NOTNULL), CASE WHEN 0.7963573604679137 THEN vt0.c0 END))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.14471497931278487)), ((v0.c0) ISNULL), (((vt0.c0))=((vt0.c0))))) AND ((((v0.c0) IS TRUE), ((v0.c0) NOTNULL), CASE WHEN 0.7963573604679137 THEN vt0.c0 END))) WHERE (CASE NULL  WHEN (~ (v0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (~ (v0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.14471497931278487)), ((v0.c0) ISNULL), (((vt0.c0))=((vt0.c0))))) AND ((((v0.c0) IS TRUE), ((v0.c0) NOTNULL), CASE WHEN 0.7963573604679137 THEN vt0.c0 END))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((v0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(0.14471497931278487)), ((v0.c0) ISNULL), (((vt0.c0))=((vt0.c0))))) AND ((((v0.c0) IS TRUE), ((v0.c0) NOTNULL), CASE WHEN 0.7963573604679137 THEN vt0.c0 END))) WHERE (CASE NULL  WHEN (~ (v0.c0)) THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM v0 WHERE ((((CASE WHEN '-1093858545' THEN v0.c0 ELSE v0.c0 END))<=((v0.c0)))) ORDER BY CAST('+w' AS TEXT);
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '-1093858545' THEN v0.c0 ELSE v0.c0 END))<=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST('+w' AS TEXT));
SELECT ALL * FROM v0 WHERE ((((CASE WHEN '-1093858545' THEN v0.c0 ELSE v0.c0 END))<=((v0.c0)))) ORDER BY CAST('+w' AS TEXT);
SELECT SUM(count) FROM (SELECT (((((CASE WHEN '-1093858545' THEN v0.c0 ELSE v0.c0 END))<=((v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CAST('+w' AS TEXT));
SELECT ALL * FROM v0 WHERE ((((CASE WHEN '-1093858545' THEN v0.c0 ELSE v0.c0 END))<=((v0.c0)))) ORDER BY CAST('+w' AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((CAST(v0.c0 AS BLOB))LIKE(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))LIKE(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((CAST(v0.c0 AS BLOB))LIKE(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB))LIKE(rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY ((CAST(v0.c0 AS BLOB))LIKE(rt0.c3 COLLATE BINARY));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2) IS TRUE)) BETWEEN ((rt0.c1 IN ())) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY 'GV' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY 'GV' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY 'GV' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0 ORDER BY 'GV' DESC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (x'') ORDER BY 'GV' DESC  NULLS FIRST;
SELECT * FROM vt0, rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))-(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))-(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))-(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt0.c1))-(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((HEX(DISTINCT rt0.c1))-(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((x'') IS TRUE))<<('1797087300'))) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))<<('1797087300'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((x'') IS TRUE))<<('1797087300'))) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') IS TRUE))<<('1797087300'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((x'') IS TRUE))<<('1797087300'))) ORDER BY (((rt0.c1)) BETWEEN (((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) AND ((((rt0.c0)<(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT CAST('|_l' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST('|_l' AS NUMERIC))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT CAST('|_l' AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CAST('|_l' AS NUMERIC))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT CAST('|_l' AS NUMERIC)));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7465223804501541 THEN rt0.c0 END))<=((rt0.c1 COLLATE BINARY)))) ORDER BY (((((x'88ab')AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7465223804501541 THEN rt0.c0 END))<=((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((x'88ab')AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7465223804501541 THEN rt0.c0 END))<=((rt0.c1 COLLATE BINARY)))) ORDER BY (((((x'88ab')AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7465223804501541 THEN rt0.c0 END))<=((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((x'88ab')AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN 0.7465223804501541 THEN rt0.c0 END))<=((rt0.c1 COLLATE BINARY)))) ORDER BY (((((x'88ab')AND(rt0.c1)))OR(rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (NOT ('965574613')) THEN ((rt0.c2)/(rt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c3 IN (rt0.c3)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT ('965574613')) THEN ((rt0.c2)/(rt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c3 IN (rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (NOT ('965574613')) THEN ((rt0.c2)/(rt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c3 IN (rt0.c3)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT ('965574613')) THEN ((rt0.c2)/(rt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c3 IN (rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN (NOT ('965574613')) THEN ((rt0.c2)/(rt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN HEX(DISTINCT rt0.c0) WHEN (rt0.c3 IN (rt0.c3)) THEN rt0.c2 END);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('0.7975984139910082')))OR(v0.c0)) THEN (((0X2091e739))>((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('0.7975984139910082')))OR(v0.c0)) THEN (((0x2091e739))>((v0.c0))) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('0.7975984139910082')))OR(v0.c0)) THEN (((0X2091e739))>((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('0.7975984139910082')))OR(v0.c0)) THEN (((0x2091e739))>((v0.c0))) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (CASE WHEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('0.7975984139910082')))OR(v0.c0)) THEN (((0X2091e739))>((v0.c0))) ELSE ((v0.c0) NOTNULL) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ''  WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c3 END WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c0))<=((vt0.c0))) END WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) BETWEEN (ABS(vt0.c0)) AND (((rt0.c0) BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) BETWEEN (ABS(vt0.c0)) AND (((rt0.c0) BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ''  WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c3 END WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c0))<=((vt0.c0))) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ''  WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c3 END WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c0))<=((vt0.c0))) END WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) BETWEEN (ABS(vt0.c0)) AND (((rt0.c0) BETWEEN (x'') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) BETWEEN (ABS(vt0.c0)) AND (((rt0.c0) BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ''  WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c3 END WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c0))<=((vt0.c0))) END);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE ''  WHEN (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c3 END THEN CASE WHEN rt0.c1 THEN rt0.c3 END WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c0))<=((vt0.c0))) END WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) BETWEEN (ABS(vt0.c0)) AND (((rt0.c0) BETWEEN (x'') AND (rt0.c0)))));
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (+ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (+ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (vt0.c0) ORDER BY (+ (CAST(v0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((((+ (vt0.c0)))AND('' COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.10714839488758054))) WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((+ (vt0.c0)))AND('' COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.10714839488758054))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((((+ (vt0.c0)))AND('' COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.10714839488758054))) WHERE (CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS TEXT)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((((+ (vt0.c0)))AND('' COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.10714839488758054))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON (((((+ (vt0.c0)))AND('' COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT v0.c0, 0.10714839488758054))) WHERE (CAST(v0.c0 AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(json_patch(rt0.c3, rt0.c2), 0.024710906654604847));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(json_patch(rt0.c3, rt0.c2), 0.024710906654604847)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(json_patch(rt0.c3, rt0.c2), 0.024710906654604847));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(json_patch(rt0.c3, rt0.c2), 0.024710906654604847)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3)))|(((x'') BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))|(((x'') BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3)))|(((x'') BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))|(((x'') BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((- (rt0.c3)))|(((x'') BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (x'fce9');
SELECT SUM(count) FROM (SELECT ALL ((x'fce9') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'fce9');
SELECT SUM(count) FROM (SELECT ALL ((x'fce9') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'fce9');
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (rt0.c2);
SELECT * FROM rt0 CROSS JOIN v0 ON CHANGES() WHERE (((((((rt0.c2)OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(TRIM(rt0.c3)))) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC  NULLS FIRST, (NULL IN (CAST(v0.c0 AS TEXT), x'')) ASC  NULLS FIRST, (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CHANGES() ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC  NULLS FIRST, (NULL IN (CAST(v0.c0 AS TEXT), x'')) ASC  NULLS FIRST, (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN v0 ON CHANGES() WHERE (((((((rt0.c2)OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(TRIM(rt0.c3)))) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC  NULLS FIRST, (NULL IN (CAST(v0.c0 AS TEXT), x'')) ASC  NULLS FIRST, (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(TRIM(rt0.c3)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CHANGES() ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC  NULLS FIRST, (NULL IN (CAST(v0.c0 AS TEXT), x'')) ASC  NULLS FIRST, (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN v0 ON CHANGES() WHERE (((((((rt0.c2)OR(rt0.c3)))OR(CAST(rt0.c1 AS INTEGER))))AND(TRIM(rt0.c3)))) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC  NULLS FIRST, (NULL IN (CAST(v0.c0 AS TEXT), x'')) ASC  NULLS FIRST, (NOT ((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((rt0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>((rt0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((rt0.c2 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))>((rt0.c2 IN (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((rt0.c2 IN (rt0.c3)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((UPPER(DISTINCT rt0.c3)))<>((((rt0.c3)IS NOT(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT rt0.c3)))<>((((rt0.c3)IS NOT(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((UPPER(DISTINCT rt0.c3)))<>((((rt0.c3)IS NOT(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((UPPER(DISTINCT rt0.c3)))<>((((rt0.c3)IS NOT(rt0.c1)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((UPPER(DISTINCT rt0.c3)))<>((((rt0.c3)IS NOT(rt0.c1))))));
SELECT * FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3)>=((((rt0.c0))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>=((((rt0.c0))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3)>=((((rt0.c0))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)>=((((rt0.c0))<=((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3)>=((((rt0.c0))<=((rt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('y*');
SELECT SUM(count) FROM (SELECT ALL (('y*') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('y*');
SELECT SUM(count) FROM (SELECT ALL (('y*') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('y*');
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN -2135399796 ELSE CASE rt0.c2  WHEN rt0.c1 THEN '7''uꯈ-' END END WHERE (((x'')|(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN -2135399796 ELSE CASE rt0.c2  WHEN rt0.c1 THEN '7''uꯈ-' END END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN -2135399796 ELSE CASE rt0.c2  WHEN rt0.c1 THEN '7''uꯈ-' END END WHERE (((x'')|(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')|(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN -2135399796 ELSE CASE rt0.c2  WHEN rt0.c1 THEN '7''uꯈ-' END END);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE (rt0.c1 IN ())  WHEN CAST(rt0.c0 AS INTEGER) THEN -2135399796 ELSE CASE rt0.c2  WHEN rt0.c1 THEN '7''uꯈ-' END END WHERE (((x'')|(CAST(rt0.c0 AS REAL))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))/(((x'')+(335912059)))) WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))/(((x'')+(335912059)))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))/(((x'')+(335912059)))) WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))/(((x'')+(335912059)))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0)<=(v0.c0)))/(((x'')+(335912059)))) WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((v0.c0))<((vt0.c0))))))) ORDER BY ((((vt0.c0)>=(v0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) AND (LIKE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((v0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)>=(v0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) AND (LIKE(vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((v0.c0))<((vt0.c0))))))) ORDER BY ((((vt0.c0)>=(v0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) AND (LIKE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((v0.c0))<((vt0.c0))))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)>=(v0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) AND (LIKE(vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((((v0.c0))<((vt0.c0))))))) ORDER BY ((((vt0.c0)>=(v0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(v0.c0))) AND (LIKE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)IS NOT(vt0.c0))  WHEN CAST('' AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE (v0.c0 IN ()) END) ORDER BY x'', SUBSTR(v0.c0 COLLATE RTRIM, (NOT (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS NOT(vt0.c0))  WHEN CAST('' AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY x'', SUBSTR(v0.c0 COLLATE RTRIM, (NOT (v0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)IS NOT(vt0.c0))  WHEN CAST('' AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE (v0.c0 IN ()) END) ORDER BY x'', SUBSTR(v0.c0 COLLATE RTRIM, (NOT (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)IS NOT(vt0.c0))  WHEN CAST('' AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY x'', SUBSTR(v0.c0 COLLATE RTRIM, (NOT (v0.c0))) ASC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (CASE ((v0.c0)IS NOT(vt0.c0))  WHEN CAST('' AS NUMERIC) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt0.c0)) THEN v0.c0 COLLATE BINARY WHEN CASE WHEN v0.c0 THEN vt0.c0 END THEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) ELSE (v0.c0 IN ()) END) ORDER BY x'', SUBSTR(v0.c0 COLLATE RTRIM, (NOT (v0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)LIKE(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<>((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)LIKE(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)LIKE(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))<>((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)LIKE(vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE COALESCE(DISTINCT vt0.c0, vt0.c0)  WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)LIKE(vt0.c0)) END ASC  NULLS LAST;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), 0.036526066585904626)) ORDER BY (- (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN x'4efe' THEN 0Xfffffffff7708458 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), 0.036526066585904626)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER) ORDER BY (- (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN x'4efe' THEN 0xfffffffff7708458 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), 0.036526066585904626)) ORDER BY (- (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN x'4efe' THEN 0Xfffffffff7708458 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), 0.036526066585904626)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER) ORDER BY (- (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN x'4efe' THEN 0xfffffffff7708458 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)), 0.036526066585904626)) ORDER BY (- (CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN x'4efe' THEN 0Xfffffffff7708458 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((SQLITE_SOURCE_ID())<(rt0.c0))) ORDER BY TRIM((rt0.c1 IN ()), ((v0.c0)*(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM((rt0.c1 IN ()), ((v0.c0)*(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((SQLITE_SOURCE_ID())<(rt0.c0))) ORDER BY TRIM((rt0.c1 IN ()), ((v0.c0)*(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_SOURCE_ID())<(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY TRIM((rt0.c1 IN ()), ((v0.c0)*(v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((SQLITE_SOURCE_ID())<(rt0.c0))) ORDER BY TRIM((rt0.c1 IN ()), ((v0.c0)*(v0.c0)))  NULLS LAST;
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT rt0.c1)) ORDER BY (((((rt0.c2)GLOB(rt0.c1))))==(((rt0.c2 IN (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((rt0.c2)GLOB(rt0.c1))))==(((rt0.c2 IN (v0.c0))))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT rt0.c1)) ORDER BY (((((rt0.c2)GLOB(rt0.c1))))==(((rt0.c2 IN (v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((((rt0.c2)GLOB(rt0.c1))))==(((rt0.c2 IN (v0.c0))))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (TRIM(DISTINCT rt0.c1)) ORDER BY (((((rt0.c2)GLOB(rt0.c1))))==(((rt0.c2 IN (v0.c0))))) ASC;
SELECT * FROM vt0, v0, rt0 WHERE (((~ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((~ (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((~ (rt0.c3)) IN ()));
SELECT * FROM v0 WHERE ((((x'' IN ()))|(json_patch(v0.c0, v0.c0)))) ORDER BY (- ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))|(json_patch(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((x'' IN ()))|(json_patch(v0.c0, v0.c0)))) ORDER BY (- ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))|(json_patch(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((x'' IN ()))|(json_patch(v0.c0, v0.c0)))) ORDER BY (- ((v0.c0 IN (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c3) THEN (('0.3546061572629061')&(rt0.c1)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END END WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c3) THEN (('0.3546061572629061')&(rt0.c1)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c3) THEN (('0.3546061572629061')&(rt0.c1)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END END WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c3) THEN (('0.3546061572629061')&(rt0.c1)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT ALL * FROM v0, vt0 INNER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt0.c1, rt0.c3) THEN (('0.3546061572629061')&(rt0.c1)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END END WHERE ((rt0.c3 IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0.2558713910791295 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.2558713910791295 AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0.2558713910791295 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(0.2558713910791295 AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(0.2558713910791295 AS TEXT));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(rt0.c0 COLLATE BINARY))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (~ (((rt0.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(rt0.c0 COLLATE BINARY))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (~ (((rt0.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0)<(rt0.c0 COLLATE BINARY))) ORDER BY (~ (((rt0.c1) IS TRUE))) ASC;
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c0 END AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)-(v0.c0)))/((((vt0.c0))!=((rt0.c2)))))) ORDER BY x'cb3f';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(v0.c0)))/((((vt0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY x'cb3f');
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)-(v0.c0)))/((((vt0.c0))!=((rt0.c2)))))) ORDER BY x'cb3f';
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(v0.c0)))/((((vt0.c0))<>((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY x'cb3f');
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((rt0.c1)-(v0.c0)))/((((vt0.c0))!=((rt0.c2)))))) ORDER BY x'cb3f';
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c2)>=(rt0.c0)) IN (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(0.9437971100812517)))OR(rt0.c1))))) ORDER BY ((CHAR(rt0.c2, rt0.c3, rt0.c2))<<(((rt0.c3)+(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c0)) IN (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(0.9437971100812517)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CHAR(rt0.c2, rt0.c3, rt0.c2))<<(((rt0.c3)+(rt0.c3)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c2)>=(rt0.c0)) IN (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(0.9437971100812517)))OR(rt0.c1))))) ORDER BY ((CHAR(rt0.c2, rt0.c3, rt0.c2))<<(((rt0.c3)+(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c0)) IN (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(0.9437971100812517)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CHAR(rt0.c2, rt0.c3, rt0.c2))<<(((rt0.c3)+(rt0.c3)))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c2)>=(rt0.c0)) IN (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c2)))AND(0.9437971100812517)))OR(rt0.c1))))) ORDER BY ((CHAR(rt0.c2, rt0.c3, rt0.c2))<<(((rt0.c3)+(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((NOT (rt0.c3)) IN ()) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND('1855614772')))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND('1855614772')))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((NOT (rt0.c3)) IN ()) CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((NOT (rt0.c3)) IN ()) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND('1855614772')))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND('1855614772')))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((NOT (rt0.c3)) IN ()) CROSS JOIN vt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((NOT (rt0.c3)) IN ()) CROSS JOIN vt0 ON rt0.c1 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND('1855614772')))AND(rt0.c3))) ISNULL));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY '' ASC, v0.c0  NULLS FIRST, CAST(((v0.c0)>=(v0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY '' ASC, v0.c0  NULLS FIRST, CAST(((v0.c0)>=(v0.c0)) AS NUMERIC) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY '' ASC, v0.c0  NULLS FIRST, CAST(((v0.c0)>=(v0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY '' ASC, v0.c0  NULLS FIRST, CAST(((v0.c0)>=(v0.c0)) AS NUMERIC) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY '' ASC, v0.c0  NULLS FIRST, CAST(((v0.c0)>=(v0.c0)) AS NUMERIC) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY CAST((- (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY CAST((- (rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CAST((- (rt0.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ())) ORDER BY CAST((- (rt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.0') ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.0') ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (('0.0') IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.0') ORDER BY rt0.c1 DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))+(UPPER(DISTINCT v0.c0)))) ORDER BY 'UQ';
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))+(UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY 'UQ');
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))+(UPPER(DISTINCT v0.c0)))) ORDER BY 'UQ';
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))+(UPPER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY 'UQ');
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))+(UPPER(DISTINCT v0.c0)))) ORDER BY 'UQ';
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) AND ((rt0.c3)))) ORDER BY ((rt0.c2)&(((rt0.c1)<=(NULL)))) ASC, (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (0x7aebe410)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)&(((rt0.c1)<=(NULL)))) ASC, (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (0X7aebe410)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) AND ((rt0.c3)))) ORDER BY ((rt0.c2)&(((rt0.c1)<=(NULL)))) ASC, (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (0x7aebe410)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) AND ((rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)&(((rt0.c1)<=(NULL)))) ASC, (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (0X7aebe410)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)) AND ((rt0.c3)))) ORDER BY ((rt0.c2)&(((rt0.c1)<=(NULL)))) ASC, (NOT (((rt0.c3) BETWEEN (rt0.c0) AND (0x7aebe410)))) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((((rt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))OR(rt0.c3))) ORDER BY ((((((((((((((((NULL)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))AND((((0.7530865234948262))>((rt0.c0))))))AND(COALESCE(rt0.c2, x'', rt0.c3, rt0.c3))))AND(((v0.c0) ISNULL))))AND(rt0.c3)))AND(((rt0.c2)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((((rt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((((((((((NULL)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))AND((((0.7530865234948262))>((rt0.c0))))))AND(COALESCE(rt0.c2, x'', rt0.c3, rt0.c3))))AND(((v0.c0) ISNULL))))AND(rt0.c3)))AND(((rt0.c2)AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((((rt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))OR(rt0.c3))) ORDER BY ((((((((((((((((NULL)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))AND((((0.7530865234948262))>((rt0.c0))))))AND(COALESCE(rt0.c2, x'', rt0.c3, rt0.c3))))AND(((v0.c0) ISNULL))))AND(rt0.c3)))AND(((rt0.c2)AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((((rt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))OR(rt0.c3))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((((((((((((((NULL)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))AND((((0.7530865234948262))>((rt0.c0))))))AND(COALESCE(rt0.c2, x'', rt0.c3, rt0.c3))))AND(((v0.c0) ISNULL))))AND(rt0.c3)))AND(((rt0.c2)AND(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((((((((((rt0.c0) IS FALSE))AND(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((((rt0.c0)OR(v0.c0)))OR(v0.c0)))))OR(((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))))OR(rt0.c3))) ORDER BY ((((((((((((((((NULL)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))AND((((0.7530865234948262))>((rt0.c0))))))AND(COALESCE(rt0.c2, x'', rt0.c3, rt0.c3))))AND(((v0.c0) ISNULL))))AND(rt0.c3)))AND(((rt0.c2)AND(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON v0.c0 WHERE (rt0.c0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c2), rt0.c1 COLLATE NOCASE, (~ (rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((0.38200572905871655))), ((rt0.c2)|(v0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c2), rt0.c1 COLLATE NOCASE, (~ (rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((0.38200572905871655))), ((rt0.c2)|(v0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c2), rt0.c1 COLLATE NOCASE, (~ (rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((0.38200572905871655))), ((rt0.c2)|(v0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c2), rt0.c1 COLLATE NOCASE, (~ (rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((0.38200572905871655))), ((rt0.c2)|(v0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL)))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((IFNULL(rt0.c1, rt0.c2), rt0.c1 COLLATE NOCASE, (~ (rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((0.38200572905871655))), ((rt0.c2)|(v0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (NULL))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TOTAL_CHANGES())==(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())=(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TOTAL_CHANGES())==(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())=(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TOTAL_CHANGES())==(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY '-1207129117' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY '-1207129117' ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY '-1207129117' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY '-1207129117' ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY '-1207129117' ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC, (v0.c0 IN (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC, (v0.c0 IN (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC, (v0.c0 IN (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC, (v0.c0 IN (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC) DESC, (v0.c0 IN (vt0.c0)) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((rt0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((rt0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY ((rt0.c0 COLLATE BINARY) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(((rt0.c0)|(-188316522)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(((rt0.c0)|(-188316522))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(((rt0.c0)|(-188316522)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)<<(((rt0.c0)|(-188316522))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1 COLLATE NOCASE)<<(((rt0.c0)|(-188316522)))));
SELECT ALL * FROM vt0, rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY (CAST('-1731706866' AS TEXT) IN ())  NULLS LAST, rt0.c3 DESC, ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CAST('-1731706866' AS TEXT) IN ())  NULLS LAST, rt0.c3 DESC, ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((v0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY (CAST('-1731706866' AS TEXT) IN ())  NULLS LAST, rt0.c3 DESC, ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (CAST('-1731706866' AS TEXT) IN ())  NULLS LAST, rt0.c3 DESC, ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((v0.c0 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) ORDER BY (CAST('-1731706866' AS TEXT) IN ())  NULLS LAST, rt0.c3 DESC, ((((rt0.c0) NOTNULL)) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ((v0.c0 IN ()))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0, NULL)) NOT NULL)) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))%(((rt0.c2)<=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, NULL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))%(((rt0.c2)<=(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0, NULL)) NOT NULL)) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))%(((rt0.c2)<=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, NULL)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c2)))%(((rt0.c2)<=(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((TRIM(DISTINCT vt0.c0, NULL)) NOT NULL)) ORDER BY ((((rt0.c3)LIKE(rt0.c2)))%(((rt0.c2)<=(rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((- ((rt0.c2 IN (rt0.c3, vt0.c0))))) ORDER BY rt0.c1  NULLS LAST, UNLIKELY(vt0.c0) COLLATE NOCASE  NULLS LAST, (~ (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN (rt0.c3, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST, UNLIKELY(vt0.c0) COLLATE NOCASE  NULLS LAST, (~ (CAST(vt0.c0 AS BLOB))));
SELECT * FROM rt0, vt0 WHERE ((- ((rt0.c2 IN (rt0.c3, vt0.c0))))) ORDER BY rt0.c1  NULLS LAST, UNLIKELY(vt0.c0) COLLATE NOCASE  NULLS LAST, (~ (CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN (rt0.c3, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST, UNLIKELY(vt0.c0) COLLATE NOCASE  NULLS LAST, (~ (CAST(vt0.c0 AS BLOB))));
SELECT * FROM rt0, vt0 WHERE ((- ((rt0.c2 IN (rt0.c3, vt0.c0))))) ORDER BY rt0.c1  NULLS LAST, UNLIKELY(vt0.c0) COLLATE NOCASE  NULLS LAST, (~ (CAST(vt0.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE ('1400572413');
SELECT SUM(count) FROM (SELECT ALL (('1400572413') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1400572413');
SELECT SUM(count) FROM (SELECT ALL (('1400572413') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1400572413');
SELECT ALL * FROM rt0 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON v0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON v0.c0);
SELECT ALL * FROM rt0 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON v0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON v0.c0);
SELECT ALL * FROM rt0 INNER JOIN v0 ON v0.c0 INNER JOIN vt0 ON v0.c0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 END AS BLOB)) ORDER BY (((vt0.c0)) NOT BETWEEN (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0))))) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((((rt0.c0))<>((rt0.c0)))))>=((((rt0.c2)&(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0))<>((rt0.c0)))))>=((((rt0.c2)&(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((((rt0.c0))<>((rt0.c0)))))>=((((rt0.c2)&(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0))<>((rt0.c0)))))>=((((rt0.c2)&(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((((((rt0.c0))<>((rt0.c0)))))>=((((rt0.c2)&(rt0.c0))))) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((- ((((v0.c0))>((rt0.c2)))))) ORDER BY LENGTH(rt0.c3) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LENGTH(rt0.c3) COLLATE RTRIM ASC);
SELECT * FROM rt0, v0 WHERE ((- ((((v0.c0))>((rt0.c2)))))) ORDER BY LENGTH(rt0.c3) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((- ((((v0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY LENGTH(rt0.c3) COLLATE RTRIM ASC);
SELECT * FROM rt0, v0 WHERE ((- ((((v0.c0))>((rt0.c2)))))) ORDER BY LENGTH(rt0.c3) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN (((rt0.c3))<=((rt0.c0))) WHEN json_array_length(rt0.c3, rt0.c0) THEN (rt0.c0 IN (rt0.c1)) WHEN ((v0.c0)&(rt0.c2)) THEN ((v0.c0)%(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END WHERE ((((((rt0.c3)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN (((rt0.c3))<=((rt0.c0))) WHEN json_array_length(rt0.c3, rt0.c0) THEN (rt0.c0 IN (rt0.c1)) WHEN ((v0.c0)&(rt0.c2)) THEN ((v0.c0)%(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN (((rt0.c3))<=((rt0.c0))) WHEN json_array_length(rt0.c3, rt0.c0) THEN (rt0.c0 IN (rt0.c1)) WHEN ((v0.c0)&(rt0.c2)) THEN ((v0.c0)%(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END WHERE ((((((rt0.c3)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)AND(v0.c0)))AND(v0.c0)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN (((rt0.c3))<=((rt0.c0))) WHEN json_array_length(rt0.c3, rt0.c0) THEN (rt0.c0 IN (rt0.c1)) WHEN ((v0.c0)&(rt0.c2)) THEN ((v0.c0)%(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c3 THEN (((rt0.c3))<=((rt0.c0))) WHEN json_array_length(rt0.c3, rt0.c0) THEN (rt0.c0 IN (rt0.c1)) WHEN ((v0.c0)&(rt0.c2)) THEN ((v0.c0)%(rt0.c2)) ELSE rt0.c3 COLLATE NOCASE END WHERE ((((((rt0.c3)AND(v0.c0)))AND(v0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1) IS FALSE))=(vt0.c0 COLLATE BINARY))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, (- (rt0.c2)) DESC, CASE (~ (rt0.c3))  WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, (- (rt0.c2)) DESC, CASE (~ (rt0.c3))  WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) END ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1) IS FALSE))=(vt0.c0 COLLATE BINARY))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, (- (rt0.c2)) DESC, CASE (~ (rt0.c3))  WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))=(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, (- (rt0.c2)) DESC, CASE (~ (rt0.c3))  WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) END ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((((rt0.c1) IS FALSE))=(vt0.c0 COLLATE BINARY))) ORDER BY rt0.c2 COLLATE BINARY  NULLS LAST, (- (rt0.c2)) DESC, CASE (~ (rt0.c3))  WHEN ((rt0.c0) NOTNULL) THEN ((vt0.c0) IS FALSE) END ASC;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)) ELSE ((v0.c0)<=(v0.c0)) END FULL OUTER JOIN vt0 ON '-1701717117' WHERE (((UPPER(DISTINCT v0.c0))-((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT v0.c0))-((rt0.c3 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)) ELSE ((v0.c0)<=(v0.c0)) END FULL OUTER JOIN vt0 ON '-1701717117');
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)) ELSE ((v0.c0)<=(v0.c0)) END FULL OUTER JOIN vt0 ON '-1701717117' WHERE (((UPPER(DISTINCT v0.c0))-((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT v0.c0))-((rt0.c3 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE WHEN ((rt0.c2) IS FALSE) THEN ((((((((rt0.c1)OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)) ELSE ((v0.c0)<=(v0.c0)) END FULL OUTER JOIN vt0 ON '-1701717117');
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (((NULL) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (((NULL) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOTNULL)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((- (((NULL) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((~ (rt0.c1)))));
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)<>((NOT (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (+ (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)<>((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (+ (((v0.c0) NOTNULL))));
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)<>((NOT (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (+ (((v0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)<>((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (+ (((v0.c0) NOTNULL))));
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END)<>((NOT (v0.c0))))) ORDER BY (v0.c0 COLLATE NOCASE IN ()) DESC  NULLS FIRST, (+ (((v0.c0) NOTNULL)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER)  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER)  NULLS FIRST, vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER)  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER)  NULLS FIRST, vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST(rt0.c3 AS TEXT)))) ORDER BY CAST(v0.c0 COLLATE RTRIM AS INTEGER)  NULLS FIRST, vt0.c0 COLLATE NOCASE;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END))>=((((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END))>=((((vt0.c0) BETWEEN (rt0.c2) AND (NULL)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END))>=((((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END))>=((((vt0.c0) BETWEEN (rt0.c2) AND (NULL)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c3 END))>=((((vt0.c0) BETWEEN (rt0.c2) AND (NULL))))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS INTEGER)) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS INTEGER)) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<(v0.c0)) AS INTEGER)) ORDER BY (NOT (v0.c0)) COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (((x'246e') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (')dc	壈X|,') AND (CASE vt0.c0  WHEN 0.7410587195885232 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((x'246e') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (')dc	壈X|,') AND (CASE vt0.c0  WHEN 0.7410587195885232 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()) ASC);
SELECT * FROM vt0 WHERE (((x'246e') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (')dc	壈X|,') AND (CASE vt0.c0  WHEN 0.7410587195885232 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((x'246e') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (')dc	壈X|,') AND (CASE vt0.c0  WHEN 0.7410587195885232 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()) ASC);
SELECT * FROM vt0 WHERE (((x'246e') NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (vt0.c0 COLLATE RTRIM))) ORDER BY (((- (vt0.c0)))OR(((((vt0.c0)AND(vt0.c0)))OR(NULL))))  NULLS LAST, ((vt0.c0) NOT BETWEEN (')dc	壈X|,') AND (CASE vt0.c0  WHEN 0.7410587195885232 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST, (((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()) ASC;
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0)))) NOT BETWEEN (0x5e90e8fe) AND (x'f5dd')) WHERE (LIKELIHOOD(((rt0.c2)==(vt0.c0)), 8.578831370508189E-4));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2)==(vt0.c0)), 8.578831370508189E-4)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0)))) NOT BETWEEN (0X5e90e8fe) AND (x'f5dd')));
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0)))) NOT BETWEEN (0x5e90e8fe) AND (x'f5dd')) WHERE (LIKELIHOOD(((rt0.c2)==(vt0.c0)), 8.578831370508189E-4));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2)==(vt0.c0)), 8.578831370508189E-4)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0)))) NOT BETWEEN (0X5e90e8fe) AND (x'f5dd')));
SELECT ALL * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c0)))) NOT BETWEEN (0x5e90e8fe) AND (x'f5dd')) WHERE (LIKELIHOOD(((rt0.c2)==(vt0.c0)), 8.578831370508189E-4));
SELECT * FROM vt0, v0, rt0 WHERE ('H!G1蔇I )B') ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS TEXT), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) AND ((5.76880131E8, 1.418561441E9, NULL))) DESC, CAST(rt0.c3 COLLATE RTRIM AS TEXT);
SELECT SUM(count) FROM (SELECT (('H!G1蔇I )B') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS TEXT), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) AND ((5.76880131E8, 1.418561441E9, NULL))) DESC, CAST(rt0.c3 COLLATE RTRIM AS TEXT));
SELECT * FROM vt0, v0, rt0 WHERE ('H!G1蔇I )B') ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS TEXT), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) AND ((5.76880131E8, 1.418561441E9, NULL))) DESC, CAST(rt0.c3 COLLATE RTRIM AS TEXT);
SELECT SUM(count) FROM (SELECT (('H!G1蔇I )B') IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS TEXT), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) AND ((5.76880131E8, 1.418561441E9, NULL))) DESC, CAST(rt0.c3 COLLATE RTRIM AS TEXT));
SELECT * FROM vt0, v0, rt0 WHERE ('H!G1蔇I )B') ORDER BY (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS TEXT), (((rt0.c2)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) AND ((5.76880131E8, 1.418561441E9, NULL))) DESC, CAST(rt0.c3 COLLATE RTRIM AS TEXT);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN x'' END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN x'' END);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY 0.03899581010961517 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.03899581010961517 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY 0.03899581010961517 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY 0.03899581010961517 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (x'') ORDER BY 0.03899581010961517 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))=(('(ix\n\r''<z')))) NOT BETWEEN ((((v0.c0))>=((rt0.c2)))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.03760924254110454))) INNER JOIN v0 ON '0.7051061189530373' WHERE ((~ ((((((((('1240277958')AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((((((((('1240277958')AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))=(('(ix\n\r''<z')))) NOT BETWEEN ((((v0.c0))>=((rt0.c2)))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.03760924254110454))) INNER JOIN v0 ON '0.7051061189530373');
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))=(('(ix\n\r''<z')))) NOT BETWEEN ((((v0.c0))>=((rt0.c2)))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.03760924254110454))) INNER JOIN v0 ON '0.7051061189530373' WHERE ((~ ((((((((('1240277958')AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((((((((('1240277958')AND(vt0.c0)))OR(v0.c0)))AND(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((rt0.c1))=(('(ix\n\r''<z')))) NOT BETWEEN ((((v0.c0))>=((rt0.c2)))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.03760924254110454))) INNER JOIN v0 ON '0.7051061189530373');
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CAST(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) AS INTEGER);
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c1))<=((rt0.c3))))*(((rt0.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c3))))*(((rt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c1))<=((rt0.c3))))*(((rt0.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))<=((rt0.c3))))*(((rt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((rt0.c1))<=((rt0.c3))))*(((rt0.c1)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((((0.21229717642302148)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c3, NULL)) AND ((rt0.c1, rt0.c3, '-1652514669', rt0.c3, rt0.c0))) ELSE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'' COLLATE NOCASE  WHEN ((((0.21229717642302148)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c3, NULL)) AND ((rt0.c1, rt0.c3, '-1652514669', rt0.c3, rt0.c0))) ELSE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((((0.21229717642302148)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c3, NULL)) AND ((rt0.c1, rt0.c3, '-1652514669', rt0.c3, rt0.c0))) ELSE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'' COLLATE NOCASE  WHEN ((((0.21229717642302148)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c3, NULL)) AND ((rt0.c1, rt0.c3, '-1652514669', rt0.c3, rt0.c0))) ELSE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((((0.21229717642302148)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c2, rt0.c1, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c0, rt0.c0, rt0.c3, NULL)) AND ((rt0.c1, rt0.c3, '-1652514669', rt0.c3, rt0.c0))) ELSE ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) END);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (~ (rt0.c3)), TRIM(DISTINCT rt0.c2)))<=((((v0.c0)LIKE(rt0.c2)), CASE WHEN x'' THEN rt0.c3 ELSE v0.c0 END, '1706464390')))) ORDER BY NULLIF(((rt0.c2)||(rt0.c3)), (((rt0.c2))<((v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (~ (rt0.c3)), TRIM(DISTINCT rt0.c2)))<=((((v0.c0)LIKE(rt0.c2)), CASE WHEN x'' THEN rt0.c3 ELSE v0.c0 END, '1706464390')))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULLIF(((rt0.c2)||(rt0.c3)), (((rt0.c2))<((v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (~ (rt0.c3)), TRIM(DISTINCT rt0.c2)))<=((((v0.c0)LIKE(rt0.c2)), CASE WHEN x'' THEN rt0.c3 ELSE v0.c0 END, '1706464390')))) ORDER BY NULLIF(((rt0.c2)||(rt0.c3)), (((rt0.c2))<((v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (~ (rt0.c3)), TRIM(DISTINCT rt0.c2)))<=((((v0.c0)LIKE(rt0.c2)), CASE WHEN x'' THEN rt0.c3 ELSE v0.c0 END, '1706464390')))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY NULLIF(((rt0.c2)||(rt0.c3)), (((rt0.c2))<((v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)), (~ (rt0.c3)), TRIM(DISTINCT rt0.c2)))<=((((v0.c0)LIKE(rt0.c2)), CASE WHEN x'' THEN rt0.c3 ELSE v0.c0 END, '1706464390')))) ORDER BY NULLIF(((rt0.c2)||(rt0.c3)), (((rt0.c2))<((v0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (1939324839) ORDER BY (+ (rt0.c0)), rt0.c2, UPPER(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((1939324839) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)), rt0.c2, UPPER(rt0.c2) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (1939324839) ORDER BY (+ (rt0.c0)), rt0.c2, UPPER(rt0.c2) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((1939324839) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (+ (rt0.c0)), rt0.c2, UPPER(rt0.c2) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (1939324839) ORDER BY (+ (rt0.c0)), rt0.c2, UPPER(rt0.c2) COLLATE RTRIM;
SELECT * FROM rt0, vt0, v0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(LIKELY(DISTINCT rt0.c0) AS REAL), (((rt0.c2 IN ())) NOT BETWEEN ((((0.14125342121165674, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(LIKELY(DISTINCT rt0.c0) AS REAL), (((rt0.c2 IN ())) NOT BETWEEN ((((0.14125342121165674, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0, vt0, v0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(LIKELY(DISTINCT rt0.c0) AS REAL), (((rt0.c2 IN ())) NOT BETWEEN ((((0.14125342121165674, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY CAST(LIKELY(DISTINCT rt0.c0) AS REAL), (((rt0.c2 IN ())) NOT BETWEEN ((((0.14125342121165674, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0, vt0, v0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(LIKELY(DISTINCT rt0.c0) AS REAL), (((rt0.c2 IN ())) NOT BETWEEN ((((0.14125342121165674, vt0.c0, rt0.c1)) BETWEEN ((vt0.c0, v0.c0, v0.c0)) AND ((rt0.c3, rt0.c1, rt0.c1)))) AND ((NOT (rt0.c3))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((0.5633664855282756) NOT NULL)  NULLS LAST, ((((- (vt0.c0))))>=((UPPER(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.5633664855282756) NOT NULL)  NULLS LAST, ((((- (vt0.c0))))>=((UPPER(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((0.5633664855282756) NOT NULL)  NULLS LAST, ((((- (vt0.c0))))>=((UPPER(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((0.5633664855282756) NOT NULL)  NULLS LAST, ((((- (vt0.c0))))>=((UPPER(vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY ((0.5633664855282756) NOT NULL)  NULLS LAST, ((((- (vt0.c0))))>=((UPPER(vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (TYPEOF(rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (TYPEOF(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (TYPEOF(rt0.c1)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (rt0.c0 COLLATE RTRIM) AND (TYPEOF(rt0.c1))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ((('uC ]')>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)&(v0.c0)) IN ((('uC ]')>=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ((('uC ]')>=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)&(v0.c0)) IN ((('uC ]')>=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)&(v0.c0)) IN ((('uC ]')>=(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE '-220213594'  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN NULL WHEN v0.c0 THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE '-220213594'  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN NULL WHEN v0.c0 THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE '-220213594'  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN NULL WHEN v0.c0 THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CASE '-220213594'  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN NULL WHEN v0.c0 THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) AS TEXT)) ORDER BY CASE '-220213594'  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0) IS TRUE) THEN NULL WHEN v0.c0 THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC  NULLS LAST;
