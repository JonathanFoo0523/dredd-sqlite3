-- Time: 2024/06/09 09:25:32
-- Database: database81
-- Database version: 3.40.0
-- seed value: 345020881
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, matchinfo=fts3); -- 0ms;
UPDATE OR FAIL vt0 SET (c0, c0, c0)=(NULL, x'88c0', ''); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x''), (0x9b7f9c2), (0.31346716466501356); -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR ABORT vt0 SET (c0, c0)=('', -480729893); -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0=0.7562240537902861 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 END)*((vt0.c0 IN ()))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffda50554b; -- 0ms;
END; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
REINDEX; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE vt0 SET c0=x'', c0=x'4f80', c0=NULL WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT NULL))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((vt0.c0 COLLATE NOCASE)GLOB((x'' IN ()))); -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'707c' WHERE CAST(((vt0.c0) IS FALSE) AS NUMERIC); -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=('1588744426', '2', 0x9b7f9c2) WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (1.6305197E8)))==(CASE NULL  WHEN 'DHU(	~x' THEN '0' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-598775703 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1588744426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)IS NOT((('1588744426') NOT BETWEEN ('2') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('163051970')))<=(0.03682764300031238 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-480729893'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1505224349 sz=1558262498 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((-283209644)OR(0X83cc774)))AND(-6.32269493E8)))AND(819192072)))OR(x''))  WHEN (0.5515374595064348 IN ()) THEN (NOT (0.8281357538087196)) WHEN CAST(1962946746 AS INTEGER) THEN ((x'') IS TRUE) WHEN ((((-480729893)OR(0.6152448848952291)))AND('1588744426')) THEN ((((x'')OR(0.8346026605168)))AND('138200948')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=156608761 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2004153809 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('163051970'))<=((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1558262498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2004153809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=999983343 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE NOCASE THEN ('' IN ()) ELSE (('ᑇ>')-(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=819192072'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('}dao4') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1457743252 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1558262498 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'b984'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1482907 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'df30') ISNULL))<<(((-1.713236921E9)-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9840143365307554) NOT BETWEEN (0.7138175861154733) AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1646433157 sz=767925820 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, x'', '-1530667251'))>=(('', x'', x''))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 979856805 sz=-598775703 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.7138175861154733')*('Ehgz')))%(((NULL)>>('ᑇ>')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1662195114 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1713236921'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2041248741 sz=-674991298 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, '', '')) NOT BETWEEN ((0.34445733650275623, x'', '138200948')) AND (('', x'', 0xffffffffa2220e58))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.7570457398167233 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X5c2ec715) IS TRUE) IN ((x'' IN ('1717577733')), NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.3049906796753261; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=156608761 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8250946057545215, x'', '')) NOT BETWEEN (('1244967992', x'', NULL)) AND ((NULL, '-283209644', x'2f92'))) IN ('-1530667251', (('')!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN CAST(x'' AS BLOB) THEN (((NULL, 'b马', NULL))<=((x'ab0d75e1', '', ''))) ELSE ((((((((0.37948065530354125)OR(x'')))AND(0.33420874075231943)))AND(NULL)))OR(1345198836)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=87926913'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-632269493 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-164682540 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=200834687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1279532652 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('-80176765')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1258513844 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')&('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1962946746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1085923742 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-89259065 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-598775703 999983343 sz=-1708846449 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1970304721 sz=1800590573 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(('-1279532652' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1498721394 sz=1593868531 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1507690169 1505224349 sz=1737479752 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1626704685 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1737479752 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((((((((NULL)OR(-2021850740)))OR(1e500)))AND(0X5eb250ea)))OR('-1279532652')))AND(0X45003089)))OR('661779212')))AND('')))AND('?d')))OR('-480729893')))OR(x'f48d')))<((- (0.7570457398167233)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1157640329 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0.33420874075231943)) THEN CAST('0.33420874075231943' AS REAL) WHEN 0.575097608355291 THEN ((('-1457743252'))<((''))) WHEN ((x'b737') NOT BETWEEN (0.37948065530354125) AND (x'')) THEN (('1LJ') BETWEEN (495971608) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND (1713321733)))>(TRIM(DISTINCT '!Eꓛm馃>b'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '745087544 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1825736312'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNLIKELY('-1574826408') IN (CAST('' AS NUMERIC), ((NULL)AND(0X59b7e69d)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1457743252'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.6247398983382674)) NOT BETWEEN (('1713321733')) AND ((x''))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((((x'071c')OR(0.238668394447765)))OR(''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('j]\rXh\') BETWEEN (6.61779212E8) AND ('\''')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.6152448848952291)<<(-6.74991298E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0Xffffffffa28a53cb)))%(((((0.4057191787381206)AND(x'')))OR('6g')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '610265239 sz=-1482907 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('a鷰<k2' AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((('0.37948065530354125')>=(1.507690169E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=767925820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-183764047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-921519846'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1171112589 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.6891226217114238))) NOT BETWEEN ((('')<=(-1048372089))) AND (((((0.7764638153454557)AND(0x5e4fc1cd)))OR(x'')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1717866246 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1608240466'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1507690169 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.4198596073455849)OR('v}')))OR(0Xa24c5cd)))%((9.99983343E8 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_extract(x'', ('1529652727' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'ZW'  WHEN NULL THEN x'' ELSE NULL END) NOT BETWEEN ((((0Xfffffffff132490b)) NOT BETWEEN ((x'')) AND ((-5.98775703E8)))) AND (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-571608174 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1135006047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.48264122305759793 AS INTEGER))OR((('-89259065')IS NOT(-2.83209644E8)))))AND(((0Xffffffff82c70ec8) NOT BETWEEN (0.3287282145513265) AND (NULL)))))AND(-183764047)))AND((NOT ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-921519846 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4198596073455849)<>(NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(1.713321733E9 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1304081440'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(9.99983343E8 AS INTEGER))OR(((((((((0.9869592070261965)AND('979856805')))OR(NULL)))OR(NULL)))AND('-268466274')))))AND(((0.6419547897369365)<<(0.8712239806836245)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1904951815 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=999983343 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-248362741 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-342394015'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-861414704 2 sz=-2080533419 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2100883768 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffffe8b2dd7f THEN x'' WHEN '979856805' THEN NULL WHEN '-532796889' THEN '1796214155' END)IS NOT(ABS(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.09012183783432248) BETWEEN ('1787819871') AND (0.8897339214136902))) NOT BETWEEN ((('6矝9')AND(0Xffffffffdbe4676d))) AND (((((NULL)OR('2041248741')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1457743252 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-198763896 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-342394015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '150439390 -1258513844 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-505433255'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1013832303 -1229562804 sz=-89259065 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09449290510442776)) BETWEEN (('賉1')) AND ((((0x631315aa) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1970304721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((0.5183884366575788 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'dce5') NOT BETWEEN ('_T') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5470905532771648)-((('-1189411519') BETWEEN (0.05529763761511186) AND ('1049634850')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09012183783432248 IN ()))IS NOT(UNLIKELY(0x59dd86b9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-80176765 COLLATE NOCASE) NOT BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN x'' THEN NULL ELSE x'9206' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-1292261494')IS('-390931073')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1406457333 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=979856805 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1304081440 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.46507873572486247 AS INTEGER)))>=((((x'') BETWEEN (x'051d') AND (0.20489767246177304))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.6140210037156535 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1552930323 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 87926913 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2050602426') NOT BETWEEN (HEX(x'')) AND ((('ཁ')>>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '998335190 sz=1789652847 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1737479752'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e55c')>>('-145148972'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-557333847'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-597011090 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.4198596073455849) NOT BETWEEN (0xffffffff91cd03cd) AND (x''))  WHEN ((x'') NOTNULL) THEN '1558262498' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)IS NOT((((('98937108')AND(x'')))OR(0x4ff07a34)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-46954269 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS BLOB) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('g') IS FALSE)) BETWEEN ((('')==(NULL))) AND ((('ud2K')>(1608240466)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-8485461 sz=-115350801 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1231540841 sz=87926913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9869592070261965') NOT BETWEEN (x'') AND (x'406b')) IN (('wE⣔+>l{' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -984514987 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1848835123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('*i쵒E{ᖪV){' IN ()))OR((('')-(0.8346026605168)))))OR(CASE WHEN '1537987435' THEN '0.7562240537902861' WHEN -674991298 THEN NULL WHEN 'nlC#' THEN '814872829' ELSE -1.457743252E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-1154725979')||('')))<(('-145148972' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-632269493 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1216232143 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=489956699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2011434438 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-674991298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.21424228149078162) BETWEEN (-1722485085) AND (''))) BETWEEN (CAST('-1085923742' AS REAL)) AND ('156608761' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-597011090 sz=-552722705 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-52837591 -80176765 sz=-1602089151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)OR(x'')))AND(NULL)) THEN ((0.8281357538087196)-(x'')) WHEN ((x'') IS TRUE) THEN ((0X5b2ca5f7)%('')) WHEN SQLITE_VERSION() THEN CASE WHEN 0.8464964460237222 THEN x'' ELSE x'' END WHEN LIKELIHOOD(DISTINCT x'', 0.9899668875111207) THEN ((((699526331)OR(x'5f52')))AND('1172853822')) WHEN (((('')OR('-1951687526')))OR('SS')) THEN ((0.8842358364780964)%('P2Z,b')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '144651290 2 sz=-2021850740 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((('w5,e9Z!')OR(NULL)))AND(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=799303440'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1945468692 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((('-908350544') NOT BETWEEN (x'') AND (x'10d5')), CASE WHEN 0.014723331324662414 THEN 767925820 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1227336 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-939919372 sz=-1196005235'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=804018711 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-164682540 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X5aeed7c3; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1708846449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1613839268'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'9adf98979075')) NOT BETWEEN ((x'3a98')) AND ((NULL))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6266964603022402; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (1.345198836E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1641557705 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-632269493'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-2004153809')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=98937108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1439377778'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('_	')*(x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 1464740609 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.4198596073455849 IN ())  WHEN x'' COLLATE BINARY THEN ((0.16042981554005142) BETWEEN (NULL) AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1870718481'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1204307111 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a4df961b') NOT BETWEEN ('-2021850740') AND (0.16042981554005142)))>=(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0x56a19b55)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11017978339065759 IN ())) BETWEEN ('-89259065' COLLATE BINARY) AND ((((NULL, 0.3049906796753261, 0xffffffffd1f5a7f8)) NOT BETWEEN ((x'', '<n', NULL)) AND ((NULL, 2079130614, '144227918'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffa8d1f25f COLLATE RTRIM)/((0.3316492648109718 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -3.90931073E8 THEN 'b4cy쑤츨c' ELSE '' END) BETWEEN ((+ ('Kq'))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'8dbe')OR(-842024529)))AND(NULL)))OR(((NULL)<<(x'')))))OR(NULL)))AND((+ (0X5f0eb90f)))))AND(MIN(0.40306629107729586, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1914898541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=767925820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1082032228'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1892272324 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xfffffffff2dd62da; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-837417452 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1295418312'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1171112589 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1588744426 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1303517924 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')%(0x1a384088)) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1805377373 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1023056335 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1436788289 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((x'2c8e')OR(x'5740')), (('-1739562626')>(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=1313381286 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.967960619347713, x'', 'DM', 0.381169898544787, 0.9205017689082315)) NOT BETWEEN ((NULL, '<b', '1546569493', NULL, '-1107574447')) AND ((NULL, '1909254756', 'zw', 0.3626885679629138, '998335190'))))AND(CAST('-1999136857' AS REAL))))AND(((x'')IS NOT(-674991298)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1407876733 sz=156608761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('0.11017978339065759' COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(0.8119356660204788))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1536279051'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1011504288 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=767925820 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-469882801)>>(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1812158676 sz=1625369501'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))AND(((x'') IS TRUE))))AND(((((((((0.09684373027292192)AND('-571905517')))AND(x'')))OR(x'')))AND(x'08e6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0X79aafbe5 ELSE x'' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=707374653'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1832044438'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1189411519 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')<>('䐣Lcm6f%')) IN (((((-1135006047)OR(x'')))OR(0.4346394656891065)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-232037218'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=726824475 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(0xffffffffa2220e58) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1258513844'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))>=((0.5149652746111781 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1811388413'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-555877365'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-632269493 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1646433157'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1497857419)IS NOT(1.789652847E9)))AND(CASE '0.37948065530354125'  WHEN x'' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 0x6cd28678 WHEN x'' THEN '?OZOo됸' WHEN 0.0115533347585135 THEN 0X35e5f862 WHEN 487931550 THEN 0.7299147253018976 WHEN -1.457743252E9 THEN 0.951225850143611 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'97f4' IN ())) NOT BETWEEN ((((NULL)) NOT BETWEEN ((NULL)) AND (('0.7570457398167233')))) AND (((NULL)LIKE(0Xffffffffe3d01a9e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-532796889 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1552930323') NOT BETWEEN (0xffffffffb4f38537) AND (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((('-1904951815') BETWEEN (-598775703) AND (0.8900577888517999)))) AND ((CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8244071877550674 COLLATE BINARY) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-342394015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((('1283034284') BETWEEN (0.9840143365307554) AND (NULL))) AND (-2031923839 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN (('-651452830') NOT BETWEEN (NULL) AND ('')) THEN ((x'')OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((-325455717)<<(0X2749b67)) THEN CAST('㰌k덭' AS REAL) WHEN (NOT (0.3057511953770282)) THEN (- (1.505224349E9)) WHEN TRIM('-1904951815', 0xffffffffed5b87e1) THEN 0.062153180795375795 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=454396907 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN -390931073 THEN NULL END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1266875255 sz=-1550940521 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1558408629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=783690050 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1633468132 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-4380419 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1708846449 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X39d270d7) IS FALSE))<(CASE 0.00976880899981969  WHEN x'24083579' THEN '39699020' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR(((2041248741) NOT BETWEEN (-1.904951815E9) AND (-480729893)))))OR(TRIM('1_l	'))))OR(0.21293062347476377)))AND('l_osY')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1892494678'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2137669968 979856805 sz=1753118685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-921519846 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1530667251 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.7764638153454557')LIKE('-1623429438')))|(TRIM(DISTINCT 0.8876185210403424, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1049634850'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1590246785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('\nho)8≯')<<('\nS僪i')), (((('\n')AND(x'e516')))OR(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1063621931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1442560087 sz=1389380806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=437917219 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1292261494 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.7013639831120306  WHEN 0.27023756231591023 THEN 'MFA๘' END)>(2071303873 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-571608174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-435038599'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=499743154 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=557846312'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('181110351', NULL, x'')) BETWEEN ((CAST('l4' AS REAL), (('1970304721') IS TRUE), JULIANDAY(0.5183884366575788, '&', 0X49ffdd6b))) AND ((HEX(0.3049906796753261), ((x'')IS NOT('~Y')), ((-1482907.0)LIKE('-339265217'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CASE '-608647987'  WHEN -2.68466274E8 THEN '387877224' WHEN 0X30d3e108 THEN '' WHEN NULL THEN NULL END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-267082443'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '472421603 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1861479009 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '577741454 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'ee7b')<<(0.3057511953770282)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'e7d9' AS TEXT) COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'9decb16f')OR(NULL)))AND(0.46507873572486247)))OR(((x'')%(0.7299147253018976)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1552930323 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=94876803'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((('')) NOT BETWEEN ((x'')) AND ((0X2771f30c))))))AND((('0.40306629107729586') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((-2.080533419E9)) BETWEEN (('2090712625')) AND ((0.7570457398167233))) THEN ABS(NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2050602426 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-198763896 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8765784310018656) BETWEEN (0.07862172724312988) AND (0.48264122305759793)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1696153556 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '593255960'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '' THEN 'Pkώ喊)hr' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')OR(NULL)))AND(0.09684373027292192)))OR('1F䤋')))AND(x''))) NOT BETWEEN (((x'') NOT NULL)) AND ((+ (0.7377491643507181)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-152588125 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.062153180795375795) IS TRUE)) NOT BETWEEN (CASE WHEN '1962946746' THEN 0Xffffffff9ddd6c7b WHEN 0.7398156277833091 THEN -287107606 WHEN '-1550474267' THEN '+k' ELSE NULL END) AND (CASE NULL  WHEN 'k~_+' THEN 0x6f9080e END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1991535962 sz=-613755911 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'ccf3' AS BLOB) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1511581502'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN 0.7138175861154733 THEN x'' WHEN -1474754924 THEN '' WHEN 'X(l' THEN NULL END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1482907 0 sz=-1828321651 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=621055294'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((x'')<=(0.00976880899981969)) WHEN ((0.6908170644923929) IS TRUE) THEN ((((((((x'')AND(x'a72c')))AND(0.3683840072737671)))OR(NULL)))AND(NULL)) WHEN ((NULL) NOT BETWEEN (x'') AND (NULL)) THEN (((x'', '1091277633', 'TRUE')) BETWEEN (('1519361612', '-236481249', 1552930323)) AND (('-342394015', 0xffffffffec070ffb, '-283209644'))) ELSE CASE WHEN '1377930441' THEN 0x1060543d END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2117052848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=454251914 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '783206179 sz=-116265962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX('-368714271', x''))<<(CASE WHEN 0.019059869379020378 THEN 'ue' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(x'', x'e151' COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN x'' WHEN '-1848835123' THEN x'' WHEN x'8eaf992b' THEN '' ELSE 'fTia' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-691078194 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')/(x''))  WHEN NULLIF(DISTINCT 0.20174764158692704, '-1788634163') THEN ((((((((x'b865')AND('-583262166')))OR('1304081440')))AND('-513931079')))AND(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3366281250077362, '', 'v')) BETWEEN ((CASE WHEN -198763896 THEN 0x4f399c97 END, '&ln(' COLLATE NOCASE, (0.6797187408215466 IN (x'b15f', 0.008995543504743853)))) AND (((('Y') IS FALSE), (- (x'')), (('1048639692') NOT BETWEEN ('') AND ('-198763896'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-164682540 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(x'18ab') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1877934695 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(0x52ef9df0 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1080583753'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1404360670 sz=-80176765 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'2de7' COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1589751916 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=150439390 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1737479752 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 978336623; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-1264112734, -1752693439, 0.10304033083766517))=((x'', '', NULL))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract('-1574826408', 0.9414905421264146))<(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0.910285301499545) AND ('')))>>((((x''))<>(('i*f^r0'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-390931073 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1706120612 -1887555699'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('nr')||(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffff9c321a3d; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1787819871 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2115642108 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-532796889'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', '-1228668230')) NOT BETWEEN (((((x'9d41050c'))>=(('|('))), (('-183764047')<(0.8597207759964398)), CASE WHEN NULL THEN 0.3683840072737671 END)) AND (((NOT (x'')), ((NULL) IS FALSE), ((((0.32714080376997123)AND('?r'')')))OR('檄.36,኏['))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1331377432) NOT BETWEEN ('25580297') AND ('1391435248')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=244489365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')IS('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1737479752 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1013832303 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=983291111 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=98937108 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)IS(CAST('0.9869592070261965' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2142907174 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 145574888 sz=-1006945503 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2100883768'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (0.8590745677133328)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1013832303 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (0.6220453706668168) AND ('-1785077827')))LIKE(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(-2.48362741E8)))/(209260394 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1609054265'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('qύ')) NOT BETWEEN ((75625324)) AND ((0xffffffff992da088))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1428193695 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1508238968 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2141451985 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1124035282 sz=-1626704685'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('0.8876185210403424' AS REAL)  WHEN ((NULL) BETWEEN (0Xffffffffa2220e58) AND (x'b47afd3d')) THEN (((('')OR(NULL)))OR('')) ELSE ((((((((((((0.914714039417987)AND('-1114076657')))OR(0.09221590032368276)))AND(x'')))AND(0x2a443ac2)))OR(0.9607683231936263)))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-674991298 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1269979505 1787819871 sz=456735839 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2090848836 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)OR(x'')))OR(0.1923659660329916)))OR('-80176765')))AND(0.9551671444008316)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'78a6')OR(NULL)))OR(0.46003515289118324)))*(((((0.49488213496203337)OR(0.7891396761037343)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1332584795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-897664126 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=156608761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1749518436 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-180272829 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE NOCASE)IS NOT(((x'')>=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1062208200 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1531010832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-605788307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND((('495971608') NOT NULL))))AND(((1.800590573E9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('2112141124')OR(NULL)))AND(NULL)))OR(x'b24c')))OR(1.391435248E9)))AND(NULL)))AND('208977721')))>(((((((((0.5649827169384342)OR(0.8464964460237222)))OR(NULL)))AND(x'fe2f')))OR(558392186)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1969231527'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=156608761'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=150439390'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'1462')OR(NULL)))AND('-268466274')) IN ((('1552930323')&('1452906863')), 0.5184461523513398 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1377930441 sz=-1930080909 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3333235480793155)>>(0.8238621321369528)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-557333847'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('827769354')==(0.1923659660329916)), 0.32895803924936196); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1009030587 sz=-1848835123'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '896858259'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) ISNULL))OR((('') IS FALSE))))OR(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=495971608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '0.0115533347585135' THEN x'd996afc5' END)AND(((('163051970'))!=(('-1292261494'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3267801433648435 COLLATE BINARY)LIKE((('V8Q') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1823906149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2004235796 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-342394015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL))<>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1826047133 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('kJ') AND (x'fff0')))<=(ROUND(0Xd6f8966, x'ba73'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(64584194 AS NUMERIC))OR(((-1530667251)AND('-1284946266')))))OR((+ (-2.050602426E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1554228361 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '672864898 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)GLOB(NULL)))AND(CASE WHEN x'' THEN NULL END)))AND((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.027639497924658363 AS TEXT)) NOT BETWEEN (CASE 0.40306629107729586  WHEN '' THEN 'lW' END) AND (((NULL) BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '138200948 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS BLOB), (+ ('495971608')), (999983343 IN ())))<((((x'd2d9') NOT BETWEEN ('1293502238') AND (-1.567992885E9)), json_patch('', x'2865'), CASE WHEN '' THEN x'' END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('&ln(')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1716634098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1646433157'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-807908049')<=(0.10458373123272646))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.34445733650275623 COLLATE NOCASE COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((0.0903570411480118 IN ()))) AND ((((('')) NOT BETWEEN ((x'ee1a')) AND ((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 169563811 0 sz=1612792789 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-248362741'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('')OR(NULL)))AND(NULL)))AND(7.45087544E8)))OR('1319037270')))OR(CAST('1240417253' AS TEXT))))AND(((((NULL)OR(NULL)))AND('>Md')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ftia') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (-1602089151) AND ('+!'))) NOT BETWEEN (UPPER(NULL)) AND ((NOT (0.3041852320702967)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'Rw' THEN '' ELSE '745087544' END)GLOB(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (x'4560')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-937625709 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=819192072'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1039750960 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND (-5.9701109E8))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (x'') AND (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1134901303'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'fqTp!<6'  WHEN 0.9992761236784794 THEN x'' END)|(((((0.15880035562049222)AND(x'')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4343')<(NULL))) NOT NULL); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.2971447401477828 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1074818335 sz=1406457333 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-815351054'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('714696882')) BETWEEN ((0.8236428839225737)) AND (('170182093'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.520321618831109)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-582481963 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-587970182 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1082643216 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7473') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=726493712 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('z') BETWEEN (x'ea4e') AND ('0.48264122305759793')))GLOB(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '370467985 sz=1868306060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ((('639113592')||('')), ((('1391435248', -1048372089, '')) BETWEEN ((0.7474909699432329, x'', x'')) AND ((NULL, x'', '1713321733'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1157640329'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1034141247 sz=1529652727'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.5149652746111781'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 977819779 sz=-1450747611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((1558262498) NOT BETWEEN ('(L') AND ('TFI6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1489508359')IS NOT(((NULL) BETWEEN (-2.83209644E8) AND ('198329414')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(NULL, x'')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1272105299'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-747552926 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (x''))))>(((('V8Q')&(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (INSTR(x'', 'po'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1083028592 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '-670867056' THEN x'' ELSE '' END  WHEN ((x'') IS FALSE) THEN (NOT (NULL)) WHEN (~ (NULL)) THEN COALESCE(DISTINCT x'ec70', '-1176022862') WHEN TYPEOF('1216589193') THEN UPPER(DISTINCT 0xffffffffcbf9ed46) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2037911082 COLLATE RTRIM)=((('-404548731')/(0.24675788871447635)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1552930323 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1283183809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1748719640')AND(0.5765467708773652)))OR(-1.602089151E9)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2041955978 sz=-1229562804 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=767925820'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1345198836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1787819871'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0.12076764665026096 THEN NULL WHEN '' THEN 0.3366281250077362 WHEN '98937108' THEN x'' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2004153809'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1279532652 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1157640329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.048372089E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4057191787381206)>(0.92448642567522)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1789652847 sz=1407112776 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN 0x270daa14 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT NULL)  WHEN ('1593868531' IN ()) THEN ((((0.6105655838575322)OR(x'')))OR('')) ELSE (('') BETWEEN (0.7377491643507181) AND (9223372036854775807)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'550c')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=200834687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)GLOB('m+jHI')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1292261494 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('P)')AND('-419693131')))AND(x'')))||(CASE NULL  WHEN NULL THEN '' WHEN x'' THEN x'' WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-832410385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.012624121392267762) NOTNULL)) BETWEEN ((('-1430224481')|('^\n4w瑺/뷹J<'))) AND (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=27555767'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0Xffffffffaf1576e7 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1751639767 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1013061998 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-825566528'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1588744426 sz=532779842 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.25614734191766986 IN ()) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2038517329')GLOB(1.157640329E9)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(610230970 AS INTEGER) IN (((x'')<<('98937108')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN x'' ELSE 0.07963957754113804 END THEN ((0.1178541425774402) BETWEEN ('745087544') AND ('-1144290548')) ELSE (+ ('XX0F%')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<>('195947704')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1846223530 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=170182093 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2080533419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1334770694 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL, 0Xffffffffb6b65c4c, x'')) BETWEEN ((0.24502950048739047, x'', '+K')) AND ((0.7900887581403329, x'', '2061523949'))))AND(((0.3291787589320194) IS TRUE))))AND((NOT (-1602089151)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE WHEN -183764047 THEN x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-592853627 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1574826408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN NULL THEN '' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '87926913'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.7138175861154733 THEN 0xffffffffeb72cd8a END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-62167445 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=759964724 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5259451057542537 AS INTEGER)) NOT BETWEEN ((('-2080533419') NOT BETWEEN (0Xffffffffda50554b) AND (NULL))) AND (CASE WHEN NULL THEN '1_l	' ELSE 0.8464964460237222 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1193594454 sz=-1626704685 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1482907 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '163051970' COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-183764047 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1192253811')>(0.506286509310573)) THEN ((x'') BETWEEN (x'') AND ('이')) ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-182886537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '914487235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-281928044 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1436758614 sz=304914682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME('hl', NULL, x''))LIKE((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffffe95f65) ISNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '237697288 0 sz=-1550598730'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=925289882 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (NULL)) THEN (0.5690595610379412 IN ('0.46507873572486247', '')) ELSE ((x'') BETWEEN (0.45959919773524305) AND (0.28079594377335126)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-779090902 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-428503546 sz=-1080519477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2089608789 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1059014026 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1996207750 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(CASE ''  WHEN -2.48362741E8 THEN x'87fe4deb' END, ('1753118685' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-505433255 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x''))<=(('F_3x<d'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-570779081')>('FALSE')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2059042638 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=819192072 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT x''))|(((('/Q5z'))<((1505224349))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-989816332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '344488597 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1700946272 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('|#' AS NUMERIC)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1928756589' COLLATE NOCASE  WHEN (('0.7377491643507181') NOTNULL) THEN ((((0.914714039417987)OR('-1145364883')))AND(x'')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL))==((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-141320221 sz=-1447438369 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(-984087336) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-301083917'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 998335190'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1258513844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (TRIM('0.9551671444008316', '-1013832303')) AND ((((895158446))>=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=703303013 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=('B.'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-196827794,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18856'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1727991853'); -- 0ms;
COMMIT TRANSACTION; -- 2ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (927822211); -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
UPDATE vt0 SET c0=x'', c0=x'', c0='-1013313846'; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), (x'e93a'), (x''); -- 2ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.3316492648109718), (x'c51f'), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '39650'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 116404736); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE (((TRIM(vt0.c0)))<=((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-2021850740', c0=x'', c0=305201762, c0=0.9996836838856741 WHERE (((('693458935') NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (x'')); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('0.3626885679629138'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA stats; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0X5c0719fc WHERE (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('FTIA', ((vt0.c0)||(vt0.c0)), ((vt0.c0)GLOB(0.5723372153952859)))) AND ((CAST(0Xffffffff8201174f AS TEXT), ((vt0.c0)>>(vt0.c0)), x''))); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 TEXT ); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c0) VALUES (x'', 0.6266964603022402, 0.390942062280486); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, '', '') WHERE vt0.c0; -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=(NULL, '2137256551'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'e9dc'; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1, c0) VALUES (x'', '0.7299147253018976', 0X52ef9df0); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('k~_+'); -- 0ms;
REINDEX  vt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 2ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('O9'), (0.9278408886967002), (x''); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.34181806320248675, c0=0Xffffffff9a25128f, c0=0.6160410388069978; -- 0ms;
PRAGMA temp.application_id = 6359940961037196115; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES (0.7848386321420004, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '56739'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1762032278);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM vt0 WHERE vt0.c0; -- 2ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE vt0 SET (c0)=(-1877016073) WHERE 0Xffffffffdfae39f0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (x''); -- 1ms;
UPDATE vt0 SET c0='{}' WHERE (vt0.c0 COLLATE RTRIM IN ()); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=87926913,2');\n; -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('-164682540'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET (c0)=(NULL); -- 2ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 2ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-164682540'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (((((0xffffffff8aa8e89a)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0xffffffff8aa8e89a)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((0xffffffff8aa8e89a)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0xffffffff8aa8e89a)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((0xffffffff8aa8e89a)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((('1543892277') IS TRUE)))) ORDER BY -2.004153809E9;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((('1543892277') IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY -2.004153809E9);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((('1543892277') IS TRUE)))) ORDER BY -2.004153809E9;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c3))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((('1543892277') IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY -2.004153809E9);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c3))) NOT BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND ((('1543892277') IS TRUE)))) ORDER BY -2.004153809E9;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN json_patch(rt0.c1, rt0.c1) THEN TRIM(rt0.c0) WHEN (('-mQ+-')>>(rt0.c1)) THEN (~ (rt0.c2)) WHEN (NOT (rt0.c1)) THEN json_remove(rt0.c3, rt0.c0, rt0.c2, '-1e500') ELSE CAST(rt0.c3 AS TEXT) END) ORDER BY CAST(((rt0.c2)IS NOT('156608761')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(rt0.c1, rt0.c1) THEN TRIM(rt0.c0) WHEN (('-mQ+-')>>(rt0.c1)) THEN (~ (rt0.c2)) WHEN (NOT (rt0.c1)) THEN json_remove(rt0.c3, rt0.c0, rt0.c2, '-1e500') ELSE CAST(rt0.c3 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)IS NOT('156608761')) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN json_patch(rt0.c1, rt0.c1) THEN TRIM(rt0.c0) WHEN (('-mQ+-')>>(rt0.c1)) THEN (~ (rt0.c2)) WHEN (NOT (rt0.c1)) THEN json_remove(rt0.c3, rt0.c0, rt0.c2, '-1e500') ELSE CAST(rt0.c3 AS TEXT) END) ORDER BY CAST(((rt0.c2)IS NOT('156608761')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_patch(rt0.c1, rt0.c1) THEN TRIM(rt0.c0) WHEN (('-mQ+-')>>(rt0.c1)) THEN (~ (rt0.c2)) WHEN (NOT (rt0.c1)) THEN json_remove(rt0.c3, rt0.c0, rt0.c2, '-1e500') ELSE CAST(rt0.c3 AS TEXT) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)IS NOT('156608761')) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)!=(rt0.c3)) AS INTEGER) WHERE ((~ (rt0.c3))) ORDER BY (((- (rt0.c2)))|(rt0.c0 COLLATE BINARY))  NULLS FIRST, CASE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN NULL WHEN (vt0.c0 IN (rt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN x'0f52' THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)!=(rt0.c3)) AS INTEGER) ORDER BY (((- (rt0.c2)))|(rt0.c0 COLLATE BINARY))  NULLS FIRST, CASE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN NULL WHEN (vt0.c0 IN (rt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN x'0f52' THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)!=(rt0.c3)) AS INTEGER) WHERE ((~ (rt0.c3))) ORDER BY (((- (rt0.c2)))|(rt0.c0 COLLATE BINARY))  NULLS FIRST, CASE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN NULL WHEN (vt0.c0 IN (rt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN x'0f52' THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)!=(rt0.c3)) AS INTEGER) ORDER BY (((- (rt0.c2)))|(rt0.c0 COLLATE BINARY))  NULLS FIRST, CASE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN NULL WHEN (vt0.c0 IN (rt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN x'0f52' THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c0)!=(rt0.c3)) AS INTEGER) WHERE ((~ (rt0.c3))) ORDER BY (((- (rt0.c2)))|(rt0.c0 COLLATE BINARY))  NULLS FIRST, CASE CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END  WHEN ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3)) THEN NULL WHEN (vt0.c0 IN (rt0.c1)) THEN CAST(rt0.c2 AS TEXT) WHEN x'0f52' THEN rt0.c1 COLLATE RTRIM ELSE ((rt0.c2) IS TRUE) END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NULL IN ())))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NULL IN ())))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((NULL IN ())))) ORDER BY ((vt0.c0)OR(vt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ((rt0.c2 IN (x''))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)&(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) NOT BETWEEN ((rt0.c2 IN (x''))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)&(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ((rt0.c2 IN (x''))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)&(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) NOT BETWEEN ((rt0.c2 IN (x''))) AND (CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)&(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((SQLITE_VERSION()) NOT BETWEEN ((rt0.c2 IN (x''))) AND (CAST(rt0.c0 AS INTEGER)))) ORDER BY ((((vt0.c0) ISNULL))||(((rt0.c2)&(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c3)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c3)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c3)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c3)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0)))-(((rt0.c3)LIKE(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (TRIM(vt0.c0, '')) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) BETWEEN (TRIM(vt0.c0, '')) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (TRIM(vt0.c0, '')) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) BETWEEN (TRIM(vt0.c0, '')) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((NULL) NOT NULL)) BETWEEN (TRIM(vt0.c0, '')) AND (NULL)));
SELECT ALL * FROM rt0 WHERE ((+ (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(DISTINCT rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(DISTINCT rt0.c3, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (TRIM(DISTINCT rt0.c3, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)<>(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((vt0.c0)LIKE(rt0.c2)) END) ORDER BY (((((rt0.c3) ISNULL)))>((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((vt0.c0)LIKE(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3) ISNULL)))>((rt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)<>(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((vt0.c0)LIKE(rt0.c2)) END) ORDER BY (((((rt0.c3) ISNULL)))>((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)!=(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((vt0.c0)LIKE(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c3) ISNULL)))>((rt0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((vt0.c0)<>(rt0.c2))  WHEN CASE WHEN vt0.c0 THEN rt0.c3 END THEN (rt0.c2 IN ()) WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END THEN (rt0.c0 IN ()) WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((vt0.c0)LIKE(rt0.c2)) END) ORDER BY (((((rt0.c3) ISNULL)))>((rt0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c3)))*(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))*(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c3)))*(NULL)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))*(NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c3)))*(NULL)));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('-1967638556')))))OR('1713321733')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('-1967638556')))))OR('1713321733'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('-1967638556')))))OR('1713321733')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<=(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('-1967638556')))))OR('1713321733'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c0)))OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND('-1967638556')))))OR('1713321733')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))<(((rt0.c1)<<(vt0.c0)))) WHERE (((rt0.c2)%(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND ((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))<(((rt0.c1)<<(vt0.c0)))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND ((~ (rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))<(((rt0.c1)<<(vt0.c0)))) WHERE (((rt0.c2)%(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND ((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))<(((rt0.c1)<<(vt0.c0)))) ORDER BY ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND ((~ (rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((x''))))<(((rt0.c1)<<(vt0.c0)))) WHERE (((rt0.c2)%(vt0.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c2)AND(rt0.c2))) AND ((~ (rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c3 AS BLOB))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))))AND(((rt0.c0)+(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC, (((-797799176, rt0.c0, ((vt0.c0)OR(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3)>=(NULL)), CAST(rt0.c0 AS INTEGER))))  NULLS LAST, ((((rt0.c1)LIKE(rt0.c1)))AND((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c3 AS BLOB))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))))AND(((rt0.c0)+(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC, (((-797799176, rt0.c0, ((vt0.c0)OR(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3)>=(NULL)), CAST(rt0.c0 AS INTEGER))))  NULLS LAST, ((((rt0.c1)LIKE(rt0.c1)))AND((~ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c3 AS BLOB))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))))AND(((rt0.c0)+(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC, (((-797799176, rt0.c0, ((vt0.c0)OR(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3)>=(NULL)), CAST(rt0.c0 AS INTEGER))))  NULLS LAST, ((((rt0.c1)LIKE(rt0.c1)))AND((~ (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c3 AS BLOB))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))))AND(((rt0.c0)+(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC, (((-797799176, rt0.c0, ((vt0.c0)OR(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3)>=(NULL)), CAST(rt0.c0 AS INTEGER))))  NULLS LAST, ((((rt0.c1)LIKE(rt0.c1)))AND((~ (rt0.c2)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (rt0.c1) AND (((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))AND(CAST(rt0.c3 AS BLOB))))AND(NULLIF(DISTINCT rt0.c2, rt0.c0))))AND(((rt0.c0)+(rt0.c2)))))OR(rt0.c2 COLLATE NOCASE)) DESC, (((-797799176, rt0.c0, ((vt0.c0)OR(rt0.c0))))!=(((rt0.c2 IN ()), ((rt0.c3)>=(NULL)), CAST(rt0.c0 AS INTEGER))))  NULLS LAST, ((((rt0.c1)LIKE(rt0.c1)))AND((~ (rt0.c2)))) DESC;
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(rt0.c2, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(rt0.c2, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(rt0.c2, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c0))))=(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0))))==(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c0))))=(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c0))))==(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((~ (rt0.c0))))=(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))) ORDER BY ((((rt0.c3)IS NOT(rt0.c2)))>>(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) NOT NULL)) ORDER BY ((((rt0.c2) ISNULL))>>((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))>>((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) NOT NULL)) ORDER BY ((((rt0.c2) ISNULL))>>((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) ISNULL))>>((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3 IN ())) NOT NULL)) ORDER BY ((((rt0.c2) ISNULL))>>((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.7202480761639967))==(((rt0.c3)LIKE('695630619')))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.7202480761639967))==(((rt0.c3)LIKE('695630619'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.7202480761639967))==(((rt0.c3)LIKE('695630619')))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c2, 0.7202480761639967))==(((rt0.c3)LIKE('695630619'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(rt0.c2, 0.7202480761639967))==(((rt0.c3)LIKE('695630619')))));
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(x'')) DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(x'')) DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(x'')) DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(x'')) DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN (vt0.c0 COLLATE NOCASE, (((vt0.c0))>=((vt0.c0)))))) ORDER BY CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)GLOB(vt0.c0)) END ASC  NULLS LAST, CAST((vt0.c0 IN ()) AS NUMERIC) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(x'')) DESC  NULLS FIRST, (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) NOT NULL))<=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((((((((rt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND((('ⳎD&쇍''x.V') NOT BETWEEN (0X4bcc0d) AND (NULL)))))OR(CAST(rt0.c0 AS TEXT))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND((('ⳎD&쇍''x.V') NOT BETWEEN (0x4bcc0d) AND (NULL)))))OR(CAST(rt0.c0 AS TEXT))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) NOT NULL))<=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) NOT NULL))<=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((((((((rt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND((('ⳎD&쇍''x.V') NOT BETWEEN (0X4bcc0d) AND (NULL)))))OR(CAST(rt0.c0 AS TEXT))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND((('ⳎD&쇍''x.V') NOT BETWEEN (0x4bcc0d) AND (NULL)))))OR(CAST(rt0.c0 AS TEXT))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) NOT NULL))<=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) NOT NULL))<=(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((((((((rt0.c1)AND(vt0.c0 COLLATE NOCASE)))AND((('ⳎD&쇍''x.V') NOT BETWEEN (0X4bcc0d) AND (NULL)))))OR(CAST(rt0.c0 AS TEXT))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<((~ (x'f038'))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<((~ (x'f038')))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<((~ (x'f038'))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<((~ (x'f038')))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))<((~ (x'f038'))));
SELECT * FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS FALSE)) ORDER BY (NOT (rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c3)) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS FALSE)) ORDER BY (NOT (rt0.c3)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c3)) DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)||(rt0.c2))) IS FALSE)) ORDER BY (NOT (rt0.c3)) DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) ORDER BY (NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) ORDER BY (NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) ORDER BY (NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) ORDER BY (NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CAST(TRIM(vt0.c0) AS NUMERIC) WHERE (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN ())) ORDER BY (NOT (CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 END)) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN (((- (rt0.c2)), (NOT (rt0.c0)), CAST(rt0.c1 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, x'', CAST(rt0.c0 AS INTEGER)))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY (json_object(rt0.c0, '') IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN (((- (rt0.c2)), (NOT (rt0.c0)), CAST(rt0.c1 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, x'', CAST(rt0.c0 AS INTEGER)))) ORDER BY (json_object(rt0.c0, '') IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN (((- (rt0.c2)), (NOT (rt0.c0)), CAST(rt0.c1 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, x'', CAST(rt0.c0 AS INTEGER)))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY (json_object(rt0.c0, '') IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN (((- (rt0.c2)), (NOT (rt0.c0)), CAST(rt0.c1 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, x'', CAST(rt0.c0 AS INTEGER)))) ORDER BY (json_object(rt0.c0, '') IN ()) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN (((- (rt0.c2)), (NOT (rt0.c0)), CAST(rt0.c1 AS NUMERIC))) AND ((vt0.c0 COLLATE BINARY, x'', CAST(rt0.c0 AS INTEGER)))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY (json_object(rt0.c0, '') IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)<<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0)<<(vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY CAST(('-1471860645' IN ()) AS NUMERIC), (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(('-1471860645' IN ()) AS NUMERIC), (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY CAST(('-1471860645' IN ()) AS NUMERIC), (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(('-1471860645' IN ()) AS NUMERIC), (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(rt0.c2 COLLATE RTRIM)) ORDER BY CAST(('-1471860645' IN ()) AS NUMERIC), (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3)-(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3)-(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c3)-(rt0.c1))));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((0.3326513982525139) NOTNULL) THEN ((0.9396709970857868) NOT NULL) ELSE (((rt0.c2))>=((rt0.c1))) END) ORDER BY -1.292261494E9 DESC  NULLS LAST, ((IFNULL(rt0.c0, rt0.c2))<<(0x23ae212b));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.3326513982525139) NOTNULL) THEN ((0.9396709970857868) NOT NULL) ELSE (((rt0.c2))>=((rt0.c1))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY -1.292261494E9 DESC  NULLS LAST, ((IFNULL(rt0.c0, rt0.c2))<<(0x23ae212b)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((0.3326513982525139) NOTNULL) THEN ((0.9396709970857868) NOT NULL) ELSE (((rt0.c2))>=((rt0.c1))) END) ORDER BY -1.292261494E9 DESC  NULLS LAST, ((IFNULL(rt0.c0, rt0.c2))<<(0x23ae212b));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((0.3326513982525139) NOTNULL) THEN ((0.9396709970857868) NOT NULL) ELSE (((rt0.c2))>=((rt0.c1))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY -1.292261494E9 DESC  NULLS LAST, ((IFNULL(rt0.c0, rt0.c2))<<(0x23ae212b)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((0.3326513982525139) NOTNULL) THEN ((0.9396709970857868) NOT NULL) ELSE (((rt0.c2))>=((rt0.c1))) END) ORDER BY -1.292261494E9 DESC  NULLS LAST, ((IFNULL(rt0.c0, rt0.c2))<<(0x23ae212b));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM WHERE (((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(1825736312)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(1825736312)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM WHERE (((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(1825736312)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(1825736312)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE RTRIM WHERE (((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))OR(1825736312)))OR(vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ('j')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ('j'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ('j')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ('j'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS REAL)) AND ('j')));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((- (rt0.c0))) NOT BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (NULL)) WHERE (((((rt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((- (rt0.c0))) NOT BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((- (rt0.c0))) NOT BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (NULL)) WHERE (((((rt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((- (rt0.c0))) NOT BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((- (rt0.c0))) NOT BETWEEN (((rt0.c0)GLOB(rt0.c0))) AND (NULL)) WHERE (((((rt0.c1) IS FALSE)) NOTNULL));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (NULLIF(rt0.c2, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(rt0.c2, rt0.c3)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (NULLIF(rt0.c2, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULLIF(rt0.c2, rt0.c3)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((+ (NULLIF(rt0.c2, rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c3 THEN 0.3953066915487188 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN rt0.c3 THEN 0.3953066915487188 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c3 THEN 0.3953066915487188 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN rt0.c3 THEN 0.3953066915487188 END IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE vt0.c0  WHEN rt0.c3 THEN 0.3953066915487188 END IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_quote(rt0.c2))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((json_quote(rt0.c2))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_quote(rt0.c2))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((json_quote(rt0.c2))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((json_quote(rt0.c2))IS NOT((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY rt0.c2 DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ())) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(((rt0.c3)+(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(((rt0.c3)+(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ())) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(((rt0.c3)+(rt0.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c3 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(((rt0.c3)+(rt0.c3)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c3 AS NUMERIC) IN ())) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))*(((rt0.c3)+(rt0.c3)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c3, 0.46611196986635006) AS NUMERIC)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT rt0.c3, 0.46611196986635006) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c3, 0.46611196986635006) AS NUMERIC)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT rt0.c3, 0.46611196986635006) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE (CAST(IFNULL(DISTINCT rt0.c3, 0.46611196986635006) AS NUMERIC)) ORDER BY rt0.c1 DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.6891226217114238 WHERE ((((- (rt0.c0)))-((rt0.c3 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))-((rt0.c3 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.6891226217114238);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.6891226217114238 WHERE ((((- (rt0.c0)))-((rt0.c3 IN (rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0)))-((rt0.c3 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON 0.6891226217114238);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON 0.6891226217114238 WHERE ((((- (rt0.c0)))-((rt0.c3 IN (rt0.c0, rt0.c1)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY vt0.c0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY vt0.c0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c3) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0Xffffffffa28a53cb, 'F\n䏹A', vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-89259065', '', 1.546569493E9, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, 0Xffffffffa28a53cb, 'F\n䏹A', vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-89259065', '', 1.546569493E9, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0Xffffffffa28a53cb, 'F\n䏹A', vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-89259065', '', 1.546569493E9, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, 0Xffffffffa28a53cb, 'F\n䏹A', vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-89259065', '', 1.546569493E9, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, 0Xffffffffa28a53cb, 'F\n䏹A', vt0.c0)) NOT BETWEEN ((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, '-89259065', '', 1.546569493E9, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (+ (vt0.c0))  WHEN rt0.c3 THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c0)<<(0Xffffffffb12e75e7)) THEN DATETIME('\y1s-\r', rt0.c3, rt0.c0, NULL, rt0.c0) WHEN ((0.02706796477194484)!=(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c3)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN rt0.c3 THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c0)<<(0Xffffffffb12e75e7)) THEN DATETIME('\y1s-\r', rt0.c3, rt0.c0, NULL, rt0.c0) WHEN ((0.02706796477194484)<>(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c3)>(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (+ (vt0.c0))  WHEN rt0.c3 THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c0)<<(0Xffffffffb12e75e7)) THEN DATETIME('\y1s-\r', rt0.c3, rt0.c0, NULL, rt0.c0) WHEN ((0.02706796477194484)!=(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c3)>(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c0))  WHEN rt0.c3 THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c0)<<(0Xffffffffb12e75e7)) THEN DATETIME('\y1s-\r', rt0.c3, rt0.c0, NULL, rt0.c0) WHEN ((0.02706796477194484)<>(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c3)>(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE (+ (vt0.c0))  WHEN rt0.c3 THEN ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) WHEN ((rt0.c0)<<(0Xffffffffb12e75e7)) THEN DATETIME('\y1s-\r', rt0.c3, rt0.c0, NULL, rt0.c0) WHEN ((0.02706796477194484)!=(rt0.c2)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c3)>(vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (0Xffffffff85307e3b))) IS FALSE)) ORDER BY (x'' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (0Xffffffff85307e3b))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (0Xffffffff85307e3b))) IS FALSE)) ORDER BY (x'' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (0Xffffffff85307e3b))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (0Xffffffff85307e3b))) IS FALSE)) ORDER BY (x'' IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))OR((+ (rt0.c1)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c3)))OR((+ (rt0.c1)))))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))OR((+ (rt0.c1)))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c3)))OR((+ (rt0.c1)))))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c3)))OR((+ (rt0.c1)))))OR(x'')));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c2) NOT NULL))) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN ((((vt0.c0, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, '-1848835123', vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN vt0.c0 ELSE (~ (rt0.c2)) END, ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<<(((rt0.c2)<<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN ((((vt0.c0, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, '-1848835123', vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c2) NOT NULL))) ORDER BY CASE WHEN ((rt0.c3)!=(rt0.c2)) THEN vt0.c0 ELSE (~ (rt0.c2)) END, ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<<(((rt0.c2)<<(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c2) NOT NULL))) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN ((((vt0.c0, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, '-1848835123', vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN vt0.c0 ELSE (~ (rt0.c2)) END, ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<<(((rt0.c2)<<(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN ((((vt0.c0, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, '-1848835123', vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c2) NOT NULL))) ORDER BY CASE WHEN ((rt0.c3)!=(rt0.c2)) THEN vt0.c0 ELSE (~ (rt0.c2)) END, ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<<(((rt0.c2)<<(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC))<<(((rt0.c2) NOT NULL))) WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END) BETWEEN ((((vt0.c0, vt0.c0, rt0.c3)) BETWEEN ((rt0.c1, '-1848835123', vt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3)<>(rt0.c2)) THEN vt0.c0 ELSE (~ (rt0.c2)) END, ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<<(((rt0.c2)<<(rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((('')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((('')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((('')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((('')) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND (((NOT (rt0.c3))))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.3038993235900622 WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) BETWEEN (rt0.c0) AND ('i*f^r0')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.3038993235900622 WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) BETWEEN (rt0.c0) AND ('i*f^r0'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.3038993235900622 WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) BETWEEN (rt0.c0) AND ('i*f^r0')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.3038993235900622 WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) BETWEEN (rt0.c0) AND ('i*f^r0'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN 0.3038993235900622 WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c3) BETWEEN (rt0.c0) AND ('i*f^r0')))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(TRIM(rt0.c1))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(TRIM(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(TRIM(rt0.c1))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((HEX(TRIM(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX(TRIM(rt0.c1))) ORDER BY (((rt0.c1)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1))))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((vt0.c0) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((vt0.c0) ISNULL)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((((vt0.c0) ISNULL)) NOT NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (rt0.c1 IN (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN (rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (rt0.c1 IN (rt0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN (rt0.c0)) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2) ISNULL))||(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY (rt0.c1 IN (rt0.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, vt0.c0, -164682540)) BETWEEN ((rt0.c1, CAST(vt0.c0 AS NUMERIC), ((rt0.c3)-(vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0))>=((rt0.c1))), ((rt0.c3) NOTNULL)))) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))||(CAST('-1904951815' AS BLOB)))) ORDER BY ((((((rt0.c0) NOTNULL))OR((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))||(CAST('-1904951815' AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, vt0.c0, -164682540)) BETWEEN ((rt0.c1, CAST(vt0.c0 AS NUMERIC), ((rt0.c3)-(vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0))>=((rt0.c1))), ((rt0.c3) NOTNULL)))) ORDER BY ((((((rt0.c0) NOTNULL))OR((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, vt0.c0, -164682540)) BETWEEN ((rt0.c1, CAST(vt0.c0 AS NUMERIC), ((rt0.c3)-(vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0))>=((rt0.c1))), ((rt0.c3) NOTNULL)))) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))||(CAST('-1904951815' AS BLOB)))) ORDER BY ((((((rt0.c0) NOTNULL))OR((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))||(CAST('-1904951815' AS BLOB)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, vt0.c0, -164682540)) BETWEEN ((rt0.c1, CAST(vt0.c0 AS NUMERIC), ((rt0.c3)-(vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0))>=((rt0.c1))), ((rt0.c3) NOTNULL)))) ORDER BY ((((((rt0.c0) NOTNULL))OR((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((rt0.c0, vt0.c0, -164682540)) BETWEEN ((rt0.c1, CAST(vt0.c0 AS NUMERIC), ((rt0.c3)-(vt0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (((rt0.c0))>=((rt0.c1))), ((rt0.c3) NOTNULL)))) WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))||(CAST('-1904951815' AS BLOB)))) ORDER BY ((((((rt0.c0) NOTNULL))OR((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) END) ORDER BY (~ (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) END) ORDER BY (~ (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN (vt0.c0 IN ()) END) ORDER BY (~ (((vt0.c0)>=(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3))))>=((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3))))>=((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3))))>=((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3))))>=((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c3))))>=((CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c1 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY LOWER(GLOB(vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY LOWER(GLOB(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY LOWER(GLOB(vt0.c0, vt0.c0));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY LOWER(GLOB(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ('') ORDER BY LOWER(GLOB(vt0.c0, vt0.c0));
SELECT COUNT(*) FROM rt0 WHERE ((((((x'5cb2', rt0.c2, rt0.c1))!=((rt0.c2, rt0.c3, rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((x'5cb2', rt0.c2, rt0.c1))<>((rt0.c2, rt0.c3, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((x'5cb2', rt0.c2, rt0.c1))!=((rt0.c2, rt0.c3, rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((x'5cb2', rt0.c2, rt0.c1))<>((rt0.c2, rt0.c3, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((x'5cb2', rt0.c2, rt0.c1))!=((rt0.c2, rt0.c3, rt0.c0)))) IS FALSE));
SELECT ALL * FROM rt0, vt0 WHERE (json_object(((rt0.c2)==(rt0.c0)), CAST(rt0.c1 AS BLOB), INSTR(rt0.c0, rt0.c0), rt0.c2 COLLATE BINARY, (~ (vt0.c0)), ((x'')*(x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c2)=(rt0.c0)), CAST(rt0.c1 AS BLOB), INSTR(rt0.c0, rt0.c0), rt0.c2 COLLATE BINARY, (~ (vt0.c0)), ((x'')*(x'')))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json_object(((rt0.c2)==(rt0.c0)), CAST(rt0.c1 AS BLOB), INSTR(rt0.c0, rt0.c0), rt0.c2 COLLATE BINARY, (~ (vt0.c0)), ((x'')*(x''))));
SELECT SUM(count) FROM (SELECT ALL ((json_object(((rt0.c2)=(rt0.c0)), CAST(rt0.c1 AS BLOB), INSTR(rt0.c0, rt0.c0), rt0.c2 COLLATE BINARY, (~ (vt0.c0)), ((x'')*(x'')))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json_object(((rt0.c2)==(rt0.c0)), CAST(rt0.c1 AS BLOB), INSTR(rt0.c0, rt0.c0), rt0.c2 COLLATE BINARY, (~ (vt0.c0)), ((x'')*(x''))));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)<=(rt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)<=(rt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2)<=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c2)<=(rt0.c0))))) ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND (((rt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND (((rt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND (((rt0.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND (((rt0.c0) NOTNULL))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE RTRIM) ORDER BY ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND (((rt0.c0) NOTNULL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ('(y)\n');
SELECT SUM(count) FROM (SELECT ALL (('(y)\n') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('(y)\n');
SELECT SUM(count) FROM (SELECT ALL (('(y)\n') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('(y)\n');
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY ABS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END), ((CAST(rt0.c1 AS NUMERIC))%((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, x'', rt0.c2, rt0.c1, rt0.c3)) AND ((vt0.c0, vt0.c0, rt0.c3, x'', rt0.c1)))))  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN (((rt0.c2, rt0.c1, 0.3147581262639161)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, NULL, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c2, rt0.c3, x'', ''))>=((rt0.c1, 0.7573933830171309, rt0.c1, vt0.c0, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END), ((CAST(rt0.c1 AS NUMERIC))%((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, x'', rt0.c2, rt0.c1, rt0.c3)) AND ((vt0.c0, vt0.c0, rt0.c3, x'', rt0.c1)))))  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN (((rt0.c2, rt0.c1, 0.3147581262639161)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, NULL, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c2, rt0.c3, x'', ''))>=((rt0.c1, 0.7573933830171309, rt0.c1, vt0.c0, vt0.c0))) END ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY ABS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END), ((CAST(rt0.c1 AS NUMERIC))%((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, x'', rt0.c2, rt0.c1, rt0.c3)) AND ((vt0.c0, vt0.c0, rt0.c3, x'', rt0.c1)))))  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN (((rt0.c2, rt0.c1, 0.3147581262639161)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, NULL, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c2, rt0.c3, x'', ''))>=((rt0.c1, 0.7573933830171309, rt0.c1, vt0.c0, vt0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END), ((CAST(rt0.c1 AS NUMERIC))%((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, x'', rt0.c2, rt0.c1, rt0.c3)) AND ((vt0.c0, vt0.c0, rt0.c3, x'', rt0.c1)))))  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN (((rt0.c2, rt0.c1, 0.3147581262639161)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, NULL, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c2, rt0.c3, x'', ''))>=((rt0.c1, 0.7573933830171309, rt0.c1, vt0.c0, vt0.c0))) END ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY ABS(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END), ((CAST(rt0.c1 AS NUMERIC))%((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((NULL, x'', rt0.c2, rt0.c1, rt0.c3)) AND ((vt0.c0, vt0.c0, rt0.c3, x'', rt0.c1)))))  NULLS LAST, CASE ((rt0.c2) IS TRUE)  WHEN (((rt0.c2, rt0.c1, 0.3147581262639161)) BETWEEN ((vt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c1))) THEN (((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c3)) BETWEEN ((rt0.c1, NULL, vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, vt0.c0, rt0.c2, rt0.c1))) ELSE (((rt0.c2, rt0.c2, rt0.c3, x'', ''))>=((rt0.c1, 0.7573933830171309, rt0.c1, vt0.c0, vt0.c0))) END ASC;
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)OR(rt0.c3)))OR(rt0.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')/((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.09130537575626618)GLOB(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')/((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.09130537575626618)GLOB(((vt0.c0)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')/((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.09130537575626618)GLOB(((vt0.c0)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((('')/((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((0.09130537575626618)GLOB(((vt0.c0)>=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('')/((vt0.c0 IN (vt0.c0))))) ORDER BY ((0.09130537575626618)GLOB(((vt0.c0)>=(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY DATETIME(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1)<<(rt0.c2)), (- (rt0.c2)), (vt0.c0 IN ()), ((vt0.c0)>>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATETIME(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1)<<(rt0.c2)), (- (rt0.c2)), (vt0.c0 IN ()), ((vt0.c0)>>(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY DATETIME(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1)<<(rt0.c2)), (- (rt0.c2)), (vt0.c0 IN ()), ((vt0.c0)>>(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATETIME(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1)<<(rt0.c2)), (- (rt0.c2)), (vt0.c0 IN ()), ((vt0.c0)>>(rt0.c3))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY DATETIME(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END, ((rt0.c1)<<(rt0.c2)), (- (rt0.c2)), (vt0.c0 IN ()), ((vt0.c0)>>(rt0.c3)));
SELECT * FROM rt0, vt0 WHERE (((('-145148972' IN ())) NOT NULL)) ORDER BY ((((((((((((-5.71608174E8)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-145148972' IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((-5.71608174E8)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((('-145148972' IN ())) NOT NULL)) ORDER BY ((((((((((((-5.71608174E8)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-145148972' IN ())) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((-5.71608174E8)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((('-145148972' IN ())) NOT NULL)) ORDER BY ((((((((((((-5.71608174E8)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (MAX(vt0.c0, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c1)) THEN x'' ELSE IFNULL(DISTINCT rt0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN (rt0.c1)) THEN x'' ELSE IFNULL(DISTINCT rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c1)) THEN x'' ELSE IFNULL(DISTINCT rt0.c0, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN (rt0.c1)) THEN x'' ELSE IFNULL(DISTINCT rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (rt0.c2 IN (rt0.c1)) THEN x'' ELSE IFNULL(DISTINCT rt0.c0, rt0.c0) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3)&(rt0.c3)) WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((NULL) NOTNULL) WHEN ((rt0.c0)<=(rt0.c1)) THEN ((rt0.c1)%(rt0.c3)) WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((NULL) NOTNULL) WHEN ((rt0.c0)<=(rt0.c1)) THEN ((rt0.c1)%(rt0.c3)) WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3)&(rt0.c3)));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3)&(rt0.c3)) WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((NULL) NOTNULL) WHEN ((rt0.c0)<=(rt0.c1)) THEN ((rt0.c1)%(rt0.c3)) WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((NULL) NOTNULL) WHEN ((rt0.c0)<=(rt0.c1)) THEN ((rt0.c1)%(rt0.c3)) WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3)&(rt0.c3)));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c3)&(rt0.c3)) WHERE (CASE WHEN ((rt0.c1)LIKE(rt0.c2)) THEN ((NULL) NOTNULL) WHEN ((rt0.c0)<=(rt0.c1)) THEN ((rt0.c1)%(rt0.c3)) WHEN (~ (rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE BINARY IN (IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TOTAL_CHANGES()  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(x'' AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOT BETWEEN ('87926913') AND ((('L')|(rt0.c3))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((rt0.c1 IN ())))) DESC, CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((''))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) NOT BETWEEN ('87926913') AND ((('L')|(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((rt0.c1 IN ())))) DESC, CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((''))) AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOT BETWEEN ('87926913') AND ((('L')|(rt0.c3))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((rt0.c1 IN ())))) DESC, CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((''))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) NOT BETWEEN ('87926913') AND ((('L')|(rt0.c3))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((rt0.c1 IN ())))) DESC, CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((''))) AS BLOB) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) NOT BETWEEN ('87926913') AND ((('L')|(rt0.c3))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND (((rt0.c1 IN ())))) DESC, CAST((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((''))) AS BLOB) DESC;
SELECT * FROM vt0, rt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ('w5,e9Z!')) ELSE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)) END) ORDER BY (UPPER(rt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ('w5,e9Z!')) ELSE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (UPPER(rt0.c0) IN ()));
SELECT * FROM vt0, rt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ('w5,e9Z!')) ELSE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)) END) ORDER BY (UPPER(rt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ('w5,e9Z!')) ELSE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (UPPER(rt0.c0) IN ()));
SELECT * FROM vt0, rt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c0 ELSE vt0.c0 END THEN (vt0.c0 IN ('w5,e9Z!')) ELSE ((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)) END) ORDER BY (UPPER(rt0.c0) IN ());
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(UNLIKELY(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(UNLIKELY(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(UNLIKELY(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (0.3824663140523924) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE NOCASE DESC, 1.970304721E9 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((0.3824663140523924) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE NOCASE DESC, 1.970304721E9 COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (0.3824663140523924) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE NOCASE DESC, 1.970304721E9 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((0.3824663140523924) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE NOCASE DESC, 1.970304721E9 COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (0.3824663140523924) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE NOCASE DESC, 1.970304721E9 COLLATE BINARY ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c3, rt0.c3, rt0.c2))))))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS FIRST, (((((rt0.c0)<(rt0.c2))))<=((((0xffffffffb2f9a78a)-(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c3, rt0.c3, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS FIRST, (((((rt0.c0)<(rt0.c2))))<=((((0xffffffffb2f9a78a)-(rt0.c0))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c3, rt0.c3, rt0.c2))))))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS FIRST, (((((rt0.c0)<(rt0.c2))))<=((((0xffffffffb2f9a78a)-(rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c3, rt0.c3, rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS FIRST, (((((rt0.c0)<(rt0.c2))))<=((((0xffffffffb2f9a78a)-(rt0.c0))))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c2 IN (rt0.c3, rt0.c0)))) AND (((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c3, rt0.c3, rt0.c2))))))) ORDER BY (- ((rt0.c2 IN ()))) ASC  NULLS FIRST, (((((rt0.c0)<(rt0.c2))))<=((((0xffffffffb2f9a78a)-(rt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)|(0.4024719022717158))))) ORDER BY (((+ (vt0.c0)))OR(((vt0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)|(0.4024719022717158))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)|(0.4024719022717158))))) ORDER BY (((+ (vt0.c0)))OR(((vt0.c0)<>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)|(0.4024719022717158))))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))IS(((vt0.c0)|(0.4024719022717158))))) ORDER BY (((+ (vt0.c0)))OR(((vt0.c0)<>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ('902740472') AND ((((vt0.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ('902740472') AND ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ('902740472') AND ((((vt0.c0))!=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ('902740472') AND ((((vt0.c0))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) NOT BETWEEN ('902740472') AND ((((vt0.c0))!=((vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((UPPER(DISTINCT rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c0))))>((UPPER(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((UPPER(DISTINCT rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)>>(rt0.c0))))>((UPPER(DISTINCT rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)>>(rt0.c0))))>((UPPER(DISTINCT rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE NOCASE AS TEXT) ASC;
SELECT * FROM rt0, vt0 WHERE (CAST(x'fdfc' AS TEXT)) ORDER BY ((rt0.c1)AND(GLOB('1457105772', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'fdfc' AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)AND(GLOB('1457105772', rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(x'fdfc' AS TEXT)) ORDER BY ((rt0.c1)AND(GLOB('1457105772', rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'fdfc' AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c1)AND(GLOB('1457105772', rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(x'fdfc' AS TEXT)) ORDER BY ((rt0.c1)AND(GLOB('1457105772', rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY (x'' IN ());
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY (x'' IN ());
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY (x'' IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN 0xffffffffeb977b61 WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN 0xffffffffeb977b61 WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN 0xffffffffeb977b61 WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN 0xffffffffeb977b61 WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN 0xffffffffeb977b61 WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (- (vt0.c0)) WHEN (- (vt0.c0)) THEN (vt0.c0 IN ()) ELSE CASE WHEN vt0.c0 THEN vt0.c0 END END);
SELECT * FROM rt0 WHERE (((((0.5328430514023558)OR(CASE x'7e8b'  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((0.5328430514023558)OR(CASE x'7e8b'  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.5328430514023558)OR(CASE x'7e8b'  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((0.5328430514023558)OR(CASE x'7e8b'  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.5328430514023558)OR(CASE x'7e8b'  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END)))OR(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER));
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY ((((((rt0.c1) IS TRUE))AND((((rt0.c2))!=((rt0.c3))))))OR(((rt0.c2)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))AND((((rt0.c2))!=((rt0.c3))))))OR(((rt0.c2)>(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY ((((((rt0.c1) IS TRUE))AND((((rt0.c2))!=((rt0.c3))))))OR(((rt0.c2)>(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) IS TRUE))AND((((rt0.c2))!=((rt0.c3))))))OR(((rt0.c2)>(rt0.c0)))));
SELECT * FROM rt0 WHERE ((((+ (rt0.c1)))LIKE((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY ((((((rt0.c1) IS TRUE))AND((((rt0.c2))!=((rt0.c3))))))OR(((rt0.c2)>(rt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (((rt0.c3)/(rt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (((rt0.c3)/(rt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (((rt0.c3)/(rt0.c1)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (((rt0.c3)/(rt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (NOT (((rt0.c3)/(rt0.c1)))) WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((-1197090060, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1197090060, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((-1197090060, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((-1197090060, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((-1197090060, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) ORDER BY (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY ((((rt0.c2) IS TRUE)) IS FALSE);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND (('~Y')))) NOT NULL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c0)==(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND (('~Y')))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c0)=(rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND (('~Y')))) NOT NULL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c0)==(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND (('~Y')))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c0)=(rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND (('~Y')))) NOT NULL)) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c0)==(rt0.c0)) END;
SELECT COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c2 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c0)) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c2 IN (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TYPEOF(rt0.c0)) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c2 IN (rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))+(((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((x'980c') NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c0))+(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'980c') NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))+(((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((x'980c') NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c0))+(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'980c') NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))+(((vt0.c0)GLOB(vt0.c0))))) ORDER BY ((((x'980c') NOTNULL)) NOT BETWEEN (((vt0.c0)|(vt0.c0))) AND (CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (-1.708846449E9)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c3) IS FALSE)) AND (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((rt0.c3)-(0.3057511953770282)) COLLATE RTRIM  NULLS LAST, 0.11017978339065759;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c3) IS FALSE)) AND (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (-1.708846449E9)) ORDER BY ((rt0.c3)-(0.3057511953770282)) COLLATE RTRIM  NULLS LAST, 0.11017978339065759);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (-1.708846449E9)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c3) IS FALSE)) AND (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((rt0.c3)-(0.3057511953770282)) COLLATE RTRIM  NULLS LAST, 0.11017978339065759;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c3) IS FALSE)) AND (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (-1.708846449E9)) ORDER BY ((rt0.c3)-(0.3057511953770282)) COLLATE RTRIM  NULLS LAST, 0.11017978339065759);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (NOT (-1.708846449E9)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((rt0.c3) IS FALSE)) AND (((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((rt0.c3)-(0.3057511953770282)) COLLATE RTRIM  NULLS LAST, 0.11017978339065759;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0xffffffffee143581 WHERE ((NOT (((rt0.c3) IS TRUE)))) ORDER BY TRIM(((rt0.c1)&(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0Xffffffffee143581 ORDER BY TRIM(((rt0.c1)&(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0xffffffffee143581 WHERE ((NOT (((rt0.c3) IS TRUE)))) ORDER BY TRIM(((rt0.c1)&(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON 0Xffffffffee143581 ORDER BY TRIM(((rt0.c1)&(rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON 0xffffffffee143581 WHERE ((NOT (((rt0.c3) IS TRUE)))) ORDER BY TRIM(((rt0.c1)&(rt0.c2))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1171206511', vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1171206511', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1171206511', vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)||(vt0.c0)))>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1171206511', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0)))>>((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, '-1171206511', vt0.c0, vt0.c0))))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY)) AND (('9404803', ((vt0.c0)AND(vt0.c0)), vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY)) AND (('9404803', ((vt0.c0)AND(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY)) AND (('9404803', ((vt0.c0)AND(vt0.c0)), vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY)) AND (('9404803', ((vt0.c0)AND(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)), vt0.c0 COLLATE NOCASE, vt0.c0 COLLATE BINARY)) AND (('9404803', ((vt0.c0)AND(vt0.c0)), vt0.c0)))) ORDER BY ((((vt0.c0)==(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((json_object(rt0.c1, rt0.c2, rt0.c1, rt0.c3))))) ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c3 AS REAL)) BETWEEN (0.17527872437494563) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-80176765')))), 0.6908170644923929 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((json_object(rt0.c1, rt0.c2, rt0.c1, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c3 AS REAL)) BETWEEN (0.17527872437494563) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-80176765')))), 0.6908170644923929 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((json_object(rt0.c1, rt0.c2, rt0.c1, rt0.c3))))) ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c3 AS REAL)) BETWEEN (0.17527872437494563) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-80176765')))), 0.6908170644923929 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((json_object(rt0.c1, rt0.c2, rt0.c1, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((CAST(rt0.c3 AS REAL)) BETWEEN (0.17527872437494563) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('-80176765')))), 0.6908170644923929 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((vt0.c0, NULL, vt0.c0))>=((x'', vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)!=(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, NULL, vt0.c0))>=((x'', vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<>(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((vt0.c0, NULL, vt0.c0))>=((x'', vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)!=(vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, NULL, vt0.c0))>=((x'', vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)<>(vt0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((((vt0.c0, NULL, vt0.c0))>=((x'', vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, (~ (vt0.c0))))==((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)!=(vt0.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))IS(((rt0.c3)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))IS(((rt0.c3)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))IS(((rt0.c3)>(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE))IS(((rt0.c3)>(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3) IS FALSE))IS(((rt0.c3)>(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY CASE x'' COLLATE RTRIM  WHEN x'' THEN (rt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN DATE(vt0.c0, rt0.c2, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE 0X4bab27f END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE x'' COLLATE RTRIM  WHEN x'' THEN (rt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN DATE(vt0.c0, rt0.c2, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE 0X4bab27f END ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY CASE x'' COLLATE RTRIM  WHEN x'' THEN (rt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN DATE(vt0.c0, rt0.c2, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE 0X4bab27f END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE x'' COLLATE RTRIM  WHEN x'' THEN (rt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN DATE(vt0.c0, rt0.c2, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE 0X4bab27f END ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN rt0.c0 THEN vt0.c0 END COLLATE BINARY) ORDER BY CASE x'' COLLATE RTRIM  WHEN x'' THEN (rt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN rt0.c0 COLLATE NOCASE WHEN DATE(vt0.c0, rt0.c2, rt0.c1) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END ELSE 0X4bab27f END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((x'')OR(vt0.c0)))AND(vt0.c0))) AND (((((0Xffffffffbb3c5276)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((x'')OR(vt0.c0)))AND(vt0.c0))) AND (((((0Xffffffffbb3c5276)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((x'')OR(vt0.c0)))AND(vt0.c0))) AND (((((0Xffffffffbb3c5276)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((x'')OR(vt0.c0)))AND(vt0.c0))) AND (((((0Xffffffffbb3c5276)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((((x'')OR(vt0.c0)))AND(vt0.c0))) AND (((((0Xffffffffbb3c5276)AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c0))<((rt0.c1))) AS REAL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c0, vt0.c0, rt0.c3, rt0.c0, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2, '', rt0.c2)) AND ((vt0.c0, rt0.c0, x'', '922817785', rt0.c0))))<(((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0, vt0.c0, rt0.c3, rt0.c0, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2, '', rt0.c2)) AND ((vt0.c0, rt0.c0, x'', '922817785', rt0.c0))))<(((rt0.c1) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c0, vt0.c0, rt0.c3, rt0.c0, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2, '', rt0.c2)) AND ((vt0.c0, rt0.c0, x'', '922817785', rt0.c0))))<(((rt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0, vt0.c0, rt0.c3, rt0.c0, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2, '', rt0.c2)) AND ((vt0.c0, rt0.c0, x'', '922817785', rt0.c0))))<(((rt0.c1) NOT NULL))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c0, vt0.c0, rt0.c3, rt0.c0, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2, '', rt0.c2)) AND ((vt0.c0, rt0.c0, x'', '922817785', rt0.c0))))<(((rt0.c1) NOT NULL))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(0Xffffffff8a1faebf)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(0Xffffffff8a1faebf)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(0Xffffffff8a1faebf)))OR((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt0.c0)))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(0Xffffffff8a1faebf)))OR((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((+ (vt0.c0)))AND((- (vt0.c0)))))OR(CAST(vt0.c0 AS REAL))))AND(0Xffffffff8a1faebf)))OR((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.10512477824952271 IN ())) AND (LIKELIHOOD(vt0.c0, 0.6832816446374335)))) ORDER BY ((vt0.c0)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.10512477824952271 IN ())) AND (LIKELIHOOD(vt0.c0, 0.6832816446374335)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.10512477824952271 IN ())) AND (LIKELIHOOD(vt0.c0, 0.6832816446374335)))) ORDER BY ((vt0.c0)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.10512477824952271 IN ())) AND (LIKELIHOOD(vt0.c0, 0.6832816446374335)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.10512477824952271 IN ())) AND (LIKELIHOOD(vt0.c0, 0.6832816446374335)))) ORDER BY ((vt0.c0)+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0))/((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0))/((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED WHERE (((MAX(vt0.c0, vt0.c0, vt0.c0, vt0.c0))/((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (json_array_length(vt0.c0, ((rt0.c0) IS FALSE))) ORDER BY (NOT (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0, ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (''))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (json_array_length(vt0.c0, ((rt0.c0) IS FALSE))) ORDER BY (NOT (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0, ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (''))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (json_array_length(vt0.c0, ((rt0.c0) IS FALSE))) ORDER BY (NOT (''))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END IN ())) ORDER BY ((((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3))<=((rt0.c0))))==(((rt0.c0) NOT BETWEEN ('days') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<=((rt0.c0))))==(((rt0.c0) NOT BETWEEN ('days') AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3))<=((rt0.c0))))==(((rt0.c0) NOT BETWEEN ('days') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<=((rt0.c0))))==(((rt0.c0) NOT BETWEEN ('days') AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c3))<=((rt0.c0))))==(((rt0.c0) NOT BETWEEN ('days') AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c2) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (LOWER(DISTINCT rt0.c2) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(NULL))) BETWEEN ((rt0.c3 IN (vt0.c0, vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(NULL))) BETWEEN ((rt0.c3 IN (vt0.c0, vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(NULL))) BETWEEN ((rt0.c3 IN (vt0.c0, vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(NULL))) BETWEEN ((rt0.c3 IN (vt0.c0, vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((NULL) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(NULL))) BETWEEN ((rt0.c3 IN (vt0.c0, vt0.c0))) AND (CASE rt0.c0  WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))=((NULL)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))&((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))==((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0))))&((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))=((NULL)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))&((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ())))==((NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0))))&((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))=((NULL)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))&((vt0.c0 IN ()))) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB));
SELECT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY CAST(((((x'')AND(vt0.c0)))AND(vt0.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)*(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)*(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)*(vt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c2)))OR('-198763896'))))) ORDER BY CASE (rt0.c0 IN (rt0.c2))  WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))OR(x'')))AND(rt0.c3)) THEN ((rt0.c1)/(rt0.c1)) WHEN (((rt0.c1))!=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c3 IN (rt0.c3)) THEN (((x'', rt0.c2, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c3))) ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)AND(rt0.c2)))OR('-198763896'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN (rt0.c2))  WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))OR(x'')))AND(rt0.c3)) THEN ((rt0.c1)/(rt0.c1)) WHEN (((rt0.c1))<>((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c3 IN (rt0.c3)) THEN (((x'', rt0.c2, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c3))) ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c2)))OR('-198763896'))))) ORDER BY CASE (rt0.c0 IN (rt0.c2))  WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))OR(x'')))AND(rt0.c3)) THEN ((rt0.c1)/(rt0.c1)) WHEN (((rt0.c1))!=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c3 IN (rt0.c3)) THEN (((x'', rt0.c2, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c3))) ELSE (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c0)AND(rt0.c2)))OR('-198763896'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN (rt0.c2))  WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))OR(x'')))AND(rt0.c3)) THEN ((rt0.c1)/(rt0.c1)) WHEN (((rt0.c1))<>((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c3 IN (rt0.c3)) THEN (((x'', rt0.c2, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c3))) ELSE (rt0.c1 IN ()) END);
SELECT ALL * FROM rt0 WHERE ((~ (((((rt0.c0)AND(rt0.c2)))OR('-198763896'))))) ORDER BY CASE (rt0.c0 IN (rt0.c2))  WHEN ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))OR(x'')))AND(rt0.c3)) THEN ((rt0.c1)/(rt0.c1)) WHEN (((rt0.c1))!=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)) WHEN (rt0.c3 IN (rt0.c3)) THEN (((x'', rt0.c2, rt0.c3))<=((rt0.c0, rt0.c0, rt0.c3))) ELSE (rt0.c1 IN ()) END;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TYPEOF(rt0.c2)) NOTNULL)) ORDER BY 0.5280289143517143  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5280289143517143  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TYPEOF(rt0.c2)) NOTNULL)) ORDER BY 0.5280289143517143  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5280289143517143  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((TYPEOF(rt0.c2)) NOTNULL)) ORDER BY 0.5280289143517143  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN 0.19599199638456732 END)) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))+(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))+(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN 0.19599199638456732 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN 0.19599199638456732 END)) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))+(rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))+(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN 0.19599199638456732 END)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c0 IN (rt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN 0.19599199638456732 END)) WHERE (((((((rt0.c1)AND(vt0.c0)))AND(vt0.c0)))+(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (x'')));
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0)>>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c1, rt0.c0  NULLS LAST, ((rt0.c0)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c1, rt0.c0  NULLS LAST, ((rt0.c0)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0)>>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c1, rt0.c0  NULLS LAST, ((rt0.c0)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)!=(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)>>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c1, rt0.c0  NULLS LAST, ((rt0.c0)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c0))) ISNULL)) ORDER BY ((rt0.c0)>>(rt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c1, rt0.c0  NULLS LAST, ((rt0.c0)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c3), (((((((('qύ')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) AND ((CASE 0.3626885679629138  WHEN rt0.c1 THEN '' WHEN rt0.c1 THEN 0.6509365926028594 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c0 END, ((((x'4c06')OR(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c3), (((((((('qύ')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) AND ((CASE 0.3626885679629138  WHEN rt0.c1 THEN '' WHEN rt0.c1 THEN 0.6509365926028594 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c0 END, ((((x'4c06')OR(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c3), (((((((('qύ')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) AND ((CASE 0.3626885679629138  WHEN rt0.c1 THEN '' WHEN rt0.c1 THEN 0.6509365926028594 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c0 END, ((((x'4c06')OR(rt0.c0)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c3), (((((((('qύ')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) AND ((CASE 0.3626885679629138  WHEN rt0.c1 THEN '' WHEN rt0.c1 THEN 0.6509365926028594 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c0 END, ((((x'4c06')OR(rt0.c0)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END, TIME(rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c3), (((((((('qύ')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))) AND ((CASE 0.3626885679629138  WHEN rt0.c1 THEN '' WHEN rt0.c1 THEN 0.6509365926028594 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END, CASE WHEN rt0.c3 THEN rt0.c0 END, ((((x'4c06')OR(rt0.c0)))AND(rt0.c3))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)%(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0))))<=((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c3 AS TEXT) ELSE '1244967992' END) ORDER BY (- (JULIANDAY(rt0.c0, rt0.c1, rt0.c3, NULL, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c3 AS TEXT) ELSE '1244967992' END) IS TRUE)  as count FROM rt0 ORDER BY (- (JULIANDAY(rt0.c0, rt0.c1, rt0.c3, NULL, rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c3 AS TEXT) ELSE '1244967992' END) ORDER BY (- (JULIANDAY(rt0.c0, rt0.c1, rt0.c3, NULL, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c3 AS TEXT) ELSE '1244967992' END) IS TRUE)  as count FROM rt0 ORDER BY (- (JULIANDAY(rt0.c0, rt0.c1, rt0.c3, NULL, rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c3))  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c3 AS TEXT) ELSE '1244967992' END) ORDER BY (- (JULIANDAY(rt0.c0, rt0.c1, rt0.c3, NULL, rt0.c2)))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB((~ (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))AND((('6VzXT*')&(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))GLOB((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC))AND((('6VzXT*')&(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB((~ (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))AND((('6VzXT*')&(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c2)))GLOB((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS NUMERIC))AND((('6VzXT*')&(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)IS NOT(rt0.c2)))GLOB((~ (rt0.c1))))) ORDER BY ((CAST(rt0.c2 AS NUMERIC))AND((('6VzXT*')&(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c3)) IN (((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST(((rt0.c0)>=(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)*(rt0.c3)) IN (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>=(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c3)) IN (((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST(((rt0.c0)>=(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)*(rt0.c3)) IN (((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)>=(rt0.c1)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)*(rt0.c3)) IN (((rt0.c2)LIKE(rt0.c2))))) ORDER BY CAST(((rt0.c0)>=(rt0.c1)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0Xffffffffbf461e62) AND (rt0.c1))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (0xffffffffbf461e62) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0Xffffffffbf461e62) AND (rt0.c1))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (0xffffffffbf461e62) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (0Xffffffffbf461e62) AND (rt0.c1))) ISNULL)) ORDER BY (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c2)||(0.8489168823160169)))AND((((rt0.c0))!=((rt0.c1))))))OR(CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))GLOB(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)||(0.8489168823160169)))AND((((rt0.c0))!=((rt0.c1))))))OR(CAST(rt0.c1 AS REAL))) DESC);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c2)||(0.8489168823160169)))AND((((rt0.c0))!=((rt0.c1))))))OR(CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1)))GLOB(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)||(0.8489168823160169)))AND((((rt0.c0))!=((rt0.c1))))))OR(CAST(rt0.c1 AS REAL))) DESC);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c2)||(0.8489168823160169)))AND((((rt0.c0))!=((rt0.c1))))))OR(CAST(rt0.c1 AS REAL))) DESC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))<=((+ (rt0.c1)))) WHERE ((((~ (vt0.c0))) BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))<=((+ (rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))<=((+ (rt0.c1)))) WHERE ((((~ (vt0.c0))) BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))<=((+ (rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c0)))<=((+ (rt0.c1)))) WHERE ((((~ (vt0.c0))) BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3)))));
SELECT ALL * FROM vt0 WHERE ('~Y');
SELECT SUM(count) FROM (SELECT ALL (('~Y') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('~Y');
SELECT SUM(count) FROM (SELECT ALL (('~Y') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('~Y');
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)|(((rt0.c2)-(rt0.c1))))) ORDER BY (((rt0.c1) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(((rt0.c2)-(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ())  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)|(((rt0.c2)-(rt0.c1))))) ORDER BY (((rt0.c1) NOT NULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)|(((rt0.c2)-(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ())  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((vt0.c0)|(((rt0.c2)-(rt0.c1))))) ORDER BY (((rt0.c1) NOT NULL) IN ())  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c0) NOTNULL) AS INTEGER));
SELECT ALL * FROM vt0, rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (NULL COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE))%((NOT (rt0.c0)))) WHERE (LOWER(DISTINCT rt0.c0 COLLATE BINARY)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE))%((NOT (rt0.c0)))) ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE))%((NOT (rt0.c0)))) WHERE (LOWER(DISTINCT rt0.c0 COLLATE BINARY)) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE))%((NOT (rt0.c0)))) ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) IS TRUE))%((NOT (rt0.c0)))) WHERE (LOWER(DISTINCT rt0.c0 COLLATE BINARY)) ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN (+ (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (+ (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN (+ (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN (+ (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN x'' THEN (+ (vt0.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) END) ORDER BY '';
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((((((((0.12571401908059376)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC, (((((vt0.c0))<=((vt0.c0)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((((((((0.12571401908059376)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC, (((((vt0.c0))<=((vt0.c0)))) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((((((((0.12571401908059376)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC, (((((vt0.c0))<=((vt0.c0)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((((((((0.12571401908059376)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC, (((((vt0.c0))<=((vt0.c0)))) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN ((((((((0.12571401908059376)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) END ASC, (((((vt0.c0))<=((vt0.c0)))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ())) ORDER BY (- ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST, (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST, (+ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ())) ORDER BY (- ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST, (+ ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(vt0.c0, vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST, (+ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NULLIF(vt0.c0, vt0.c0) IN ())) ORDER BY (- ((vt0.c0 IN (vt0.c0)))) DESC  NULLS LAST, (+ ((vt0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY TRIM(DISTINCT (vt0.c0 IN ()), UPPER(DISTINCT vt0.c0)) DESC  NULLS FIRST, (CAST(vt0.c0 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT (vt0.c0 IN ()), UPPER(DISTINCT vt0.c0)) DESC  NULLS FIRST, (CAST(vt0.c0 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY TRIM(DISTINCT (vt0.c0 IN ()), UPPER(DISTINCT vt0.c0)) DESC  NULLS FIRST, (CAST(vt0.c0 AS INTEGER) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT (vt0.c0 IN ()), UPPER(DISTINCT vt0.c0)) DESC  NULLS FIRST, (CAST(vt0.c0 AS INTEGER) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY TRIM(DISTINCT (vt0.c0 IN ()), UPPER(DISTINCT vt0.c0)) DESC  NULLS FIRST, (CAST(vt0.c0 AS INTEGER) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN CAST(vt0.c0 AS TEXT) END);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c2)IS('쑫&h1-Cncw')))))OR((NOT (rt0.c0))))) ORDER BY ((0.9793547734281499) NOTNULL) DESC, UNLIKELY('hl') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c2)IS('쑫&h1-Cncw')))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.9793547734281499) NOTNULL) DESC, UNLIKELY('hl') DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c2)IS('쑫&h1-Cncw')))))OR((NOT (rt0.c0))))) ORDER BY ((0.9793547734281499) NOTNULL) DESC, UNLIKELY('hl') DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c2)IS('쑫&h1-Cncw')))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.9793547734281499) NOTNULL) DESC, UNLIKELY('hl') DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))OR(((rt0.c2)IS('쑫&h1-Cncw')))))OR((NOT (rt0.c0))))) ORDER BY ((0.9793547734281499) NOTNULL) DESC, UNLIKELY('hl') DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c3 THEN NULL ELSE rt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c3 THEN NULL ELSE rt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c3 THEN NULL ELSE rt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c3 THEN NULL ELSE rt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) ORDER BY CASE WHEN rt0.c3 THEN NULL ELSE rt0.c0 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (UNICODE(rt0.c0))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))>>(CAST(rt0.c3 AS TEXT)))) ORDER BY json_type((vt0.c0 IN ()))  NULLS FIRST, LIKELIHOOD(DISTINCT ((((rt0.c3)AND(rt0.c3)))AND(vt0.c0)), 0.9924096340954776)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))>>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (UNICODE(rt0.c0))) ORDER BY json_type((vt0.c0 IN ()))  NULLS FIRST, LIKELIHOOD(DISTINCT ((((rt0.c3)AND(rt0.c3)))AND(vt0.c0)), 0.9924096340954776)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (UNICODE(rt0.c0))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))>>(CAST(rt0.c3 AS TEXT)))) ORDER BY json_type((vt0.c0 IN ()))  NULLS FIRST, LIKELIHOOD(DISTINCT ((((rt0.c3)AND(rt0.c3)))AND(vt0.c0)), 0.9924096340954776)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))>>(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (- (UNICODE(rt0.c0))) ORDER BY json_type((vt0.c0 IN ()))  NULLS FIRST, LIKELIHOOD(DISTINCT ((((rt0.c3)AND(rt0.c3)))AND(vt0.c0)), 0.9924096340954776)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (- (UNICODE(rt0.c0))) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))>>(CAST(rt0.c3 AS TEXT)))) ORDER BY json_type((vt0.c0 IN ()))  NULLS FIRST, LIKELIHOOD(DISTINCT ((((rt0.c3)AND(rt0.c3)))AND(vt0.c0)), 0.9924096340954776)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('Jt0Cfh*p') ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))||((((rt0.c3))<((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Jt0Cfh*p') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))||((((rt0.c3))<((rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('Jt0Cfh*p') ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))||((((rt0.c3))<((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Jt0Cfh*p') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))||((((rt0.c3))<((rt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('Jt0Cfh*p') ORDER BY ((((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c2)))||((((rt0.c3))<((rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ ('+྘>/U3'))) NOTNULL)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((((rt0.c0)AND(rt0.c1)))AND(0.8402702153149282)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END DESC, (NOT (((vt0.c0)>>(rt0.c1)))) ASC, ((((rt0.c3)>=('-spd')))LIKE('1406457333')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('+྘>/U3'))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((((rt0.c0)AND(rt0.c1)))AND(0.8402702153149282)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END DESC, (NOT (((vt0.c0)>>(rt0.c1)))) ASC, ((((rt0.c3)>=('-spd')))LIKE('1406457333')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ ('+྘>/U3'))) NOTNULL)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((((rt0.c0)AND(rt0.c1)))AND(0.8402702153149282)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END DESC, (NOT (((vt0.c0)>>(rt0.c1)))) ASC, ((((rt0.c3)>=('-spd')))LIKE('1406457333')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ ('+྘>/U3'))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((((rt0.c0)AND(rt0.c1)))AND(0.8402702153149282)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END DESC, (NOT (((vt0.c0)>>(rt0.c1)))) ASC, ((((rt0.c3)>=('-spd')))LIKE('1406457333')) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ ('+྘>/U3'))) NOTNULL)) ORDER BY CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 END THEN ((((rt0.c0)AND(rt0.c1)))AND(0.8402702153149282)) ELSE CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END END DESC, (NOT (((vt0.c0)>>(rt0.c1)))) ASC, ((((rt0.c3)>=('-spd')))LIKE('1406457333')) DESC;
SELECT * FROM vt0 WHERE (((UNICODE(vt0.c0))%(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt0.c0))%(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UNICODE(vt0.c0))%(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((UNICODE(vt0.c0))%(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((UNICODE(vt0.c0))%(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY vt0.c0;
SELECT ALL * FROM rt0 WHERE ('-1258513844') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-1258513844') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE ('-1258513844') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (('-1258513844') IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE ('-1258513844') ORDER BY CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(((vt0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ORDER BY ((((vt0.c0)>>(vt0.c0)))>=(((vt0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((vt0.c0)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY (((rt0.c1) ISNULL) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY SQLITE_VERSION() ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY SQLITE_VERSION() ASC);
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY SQLITE_VERSION() ASC;
SELECT COUNT(*) FROM rt0 WHERE (((0.23730402594106814) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.23730402594106814) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.23730402594106814) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((0.23730402594106814) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0.23730402594106814) IS FALSE));
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0))))>>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c0))))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0))))>>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))==((vt0.c0))))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))==((vt0.c0))))>>((vt0.c0 IN ()))));
SELECT * FROM rt0, vt0 WHERE (COALESCE(load_extension(rt0.c3, rt0.c1), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN '-1094918342' THEN rt0.c3 COLLATE RTRIM ELSE (rt0.c3 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(load_extension(rt0.c3, rt0.c1), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN '-1094918342' THEN rt0.c3 COLLATE RTRIM ELSE (rt0.c3 IN ()) END ASC);
SELECT * FROM rt0, vt0 WHERE (COALESCE(load_extension(rt0.c3, rt0.c1), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN '-1094918342' THEN rt0.c3 COLLATE RTRIM ELSE (rt0.c3 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(load_extension(rt0.c3, rt0.c1), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN '-1094918342' THEN rt0.c3 COLLATE RTRIM ELSE (rt0.c3 IN ()) END ASC);
SELECT * FROM rt0, vt0 WHERE (COALESCE(load_extension(rt0.c3, rt0.c1), ((((rt0.c3)OR(rt0.c3)))AND(rt0.c3)))) ORDER BY CASE WHEN ((rt0.c2)GLOB(rt0.c2)) THEN (vt0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN '-1094918342' THEN rt0.c3 COLLATE RTRIM ELSE (rt0.c3 IN ()) END ASC;
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c0)OR(((rt0.c2)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)OR(((rt0.c2)==(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c0)OR(((rt0.c2)=(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)OR(((rt0.c2)==(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY ((rt0.c0)OR(((rt0.c2)=(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY CAST(((-2064262193)>(rt0.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((-2064262193)>(rt0.c3)) AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY CAST(((-2064262193)>(rt0.c3)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((-2064262193)>(rt0.c3)) AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY CAST(((-2064262193)>(rt0.c3)) AS INTEGER);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON UPPER(((vt0.c0)+(rt0.c3))) WHERE (((((UPPER(''))AND(vt0.c0 COLLATE RTRIM)))AND((((rt0.c1))<=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(''))AND(vt0.c0 COLLATE RTRIM)))AND((((rt0.c1))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON UPPER(((vt0.c0)+(rt0.c3))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON UPPER(((vt0.c0)+(rt0.c3))) WHERE (((((UPPER(''))AND(vt0.c0 COLLATE RTRIM)))AND((((rt0.c1))<=((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((UPPER(''))AND(vt0.c0 COLLATE RTRIM)))AND((((rt0.c1))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON UPPER(((vt0.c0)+(rt0.c3))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON UPPER(((vt0.c0)+(rt0.c3))) WHERE (((((UPPER(''))AND(vt0.c0 COLLATE RTRIM)))AND((((rt0.c1))<=((rt0.c3))))));
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 'BB.g~r'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY 'BB.g~r'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 'BB.g~r'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY 'BB.g~r'  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((NULL IN ()))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY 'BB.g~r'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON LOWER(DISTINCT CAST('' AS BLOB)) WHERE ((NOT (((x'') NOT NULL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c3 IN (rt0.c2))) AND ((('0p')%(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON LOWER(DISTINCT CAST('' AS BLOB)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c3 IN (rt0.c2))) AND ((('0p')%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON LOWER(DISTINCT CAST('' AS BLOB)) WHERE ((NOT (((x'') NOT NULL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c3 IN (rt0.c2))) AND ((('0p')%(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON LOWER(DISTINCT CAST('' AS BLOB)) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c3 IN (rt0.c2))) AND ((('0p')%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON LOWER(DISTINCT CAST('' AS BLOB)) WHERE ((NOT (((x'') NOT NULL)))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN ((rt0.c3 IN (rt0.c2))) AND ((('0p')%(rt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN ())) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((x'' COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((x'' COLLATE BINARY)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT NULL))) AND ((x'' COLLATE BINARY))));
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ()));
SELECT * FROM vt0 WHERE (0X955a8f9);
SELECT SUM(count) FROM (SELECT ((0X955a8f9) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0X955a8f9);
SELECT SUM(count) FROM (SELECT ((0X955a8f9) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0X955a8f9);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)+(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)+(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)+(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0)<>(rt0.c1))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, CASE 1.30408144E9  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' COLLATE RTRIM WHEN CAST(610265239 AS TEXT) THEN '' END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, CASE 1.30408144E9  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' COLLATE RTRIM WHEN CAST(610265239 AS TEXT) THEN '' END  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0)<>(rt0.c1))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, CASE 1.30408144E9  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' COLLATE RTRIM WHEN CAST(610265239 AS TEXT) THEN '' END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)!=(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, CASE 1.30408144E9  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' COLLATE RTRIM WHEN CAST(610265239 AS TEXT) THEN '' END  NULLS LAST, vt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (((vt0.c0)<>(rt0.c1))))) ORDER BY ((vt0.c0) NOT NULL)  NULLS FIRST, CASE 1.30408144E9  WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))) WHEN (- (vt0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (rt0.c0 IN ()) THEN (~ (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' COLLATE RTRIM WHEN CAST(610265239 AS TEXT) THEN '' END  NULLS LAST, vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))) ISNULL));
SELECT ALL * FROM vt0, rt0 WHERE (GLOB((((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, x'6515'))), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, x'6515'))), (+ (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (GLOB((((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, x'6515'))), (+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, x'6515'))), (+ (rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (GLOB((((vt0.c0, rt0.c0, rt0.c0))<>((vt0.c0, rt0.c2, x'6515'))), (+ (rt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE (((0.36818917918056704) BETWEEN (((rt0.c3)LIKE(vt0.c0))) AND (((rt0.c2)>>(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0.36818917918056704) BETWEEN (((rt0.c3)LIKE(vt0.c0))) AND (((rt0.c2)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT * FROM rt0, vt0 WHERE (((0.36818917918056704) BETWEEN (((rt0.c3)LIKE(vt0.c0))) AND (((rt0.c2)>>(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((0.36818917918056704) BETWEEN (((rt0.c3)LIKE(vt0.c0))) AND (((rt0.c2)>>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT NULL));
SELECT * FROM rt0, vt0 WHERE (((0.36818917918056704) BETWEEN (((rt0.c3)LIKE(vt0.c0))) AND (((rt0.c2)>>(rt0.c0))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOT NULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS INTEGER))) WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('-597011090') NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.3056265751650188 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY (((((- (rt0.c0)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL)))  NULLS LAST, (((CASE WHEN rt0.c1 THEN rt0.c1 END))>=((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))))) DESC, CAST((NOT (rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('-597011090') NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.3056265751650188 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS INTEGER))) ORDER BY (((((- (rt0.c0)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL)))  NULLS LAST, (((CASE WHEN rt0.c1 THEN rt0.c1 END))>=((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))))) DESC, CAST((NOT (rt0.c3)) AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS INTEGER))) WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('-597011090') NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.3056265751650188 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY (((((- (rt0.c0)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL)))  NULLS LAST, (((CASE WHEN rt0.c1 THEN rt0.c1 END))>=((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))))) DESC, CAST((NOT (rt0.c3)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('-597011090') NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.3056265751650188 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS INTEGER))) ORDER BY (((((- (rt0.c0)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL)))  NULLS LAST, (((CASE WHEN rt0.c1 THEN rt0.c1 END))>=((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))))) DESC, CAST((NOT (rt0.c3)) AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS INTEGER))) WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('-597011090') NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.3056265751650188 WHEN vt0.c0 THEN vt0.c0 END END) ORDER BY (((((- (rt0.c0)))OR(((rt0.c2)||(rt0.c2)))))AND(((rt0.c3) ISNULL)))  NULLS LAST, (((CASE WHEN rt0.c1 THEN rt0.c1 END))>=((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3))))) DESC, CAST((NOT (rt0.c3)) AS BLOB);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('661779212');
SELECT SUM(count) FROM (SELECT ALL (('661779212') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('661779212');
SELECT SUM(count) FROM (SELECT ALL (('661779212') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('661779212');
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))<<(CASE 0.0982997191079914  WHEN vt0.c0 THEN x'2b2d5345' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))<<(CASE 0.0982997191079914  WHEN vt0.c0 THEN x'2b2d5345' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))<<(CASE 0.0982997191079914  WHEN vt0.c0 THEN x'2b2d5345' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&(vt0.c0)))<<(CASE 0.0982997191079914  WHEN vt0.c0 THEN x'2b2d5345' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)&(vt0.c0)))<<(CASE 0.0982997191079914  WHEN vt0.c0 THEN x'2b2d5345' ELSE vt0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (NOT (rt0.c1)) THEN x'1a09' WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c3)) ELSE json_type(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (NOT (rt0.c1)) THEN x'1a09' WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c3)) ELSE json_type(rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (NOT (rt0.c1)) THEN x'1a09' WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c3)) ELSE json_type(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (NOT (rt0.c1)) THEN x'1a09' WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c3)) ELSE json_type(rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c2 THEN CAST(rt0.c0 AS REAL) WHEN (NOT (rt0.c1)) THEN x'1a09' WHEN rt0.c0 COLLATE BINARY THEN (~ (rt0.c3)) ELSE json_type(rt0.c1) END);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c0 IN ()) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((vt0.c0) ISNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (~ (rt0.c3))  WHEN CAST(vt0.c0 AS REAL) THEN rt0.c2 COLLATE NOCASE ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END) ORDER BY IFNULL(DISTINCT (((rt0.c0))>((NULL))), NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN CAST(vt0.c0 AS REAL) THEN rt0.c2 COLLATE NOCASE ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT (((rt0.c0))>((NULL))), NULL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (~ (rt0.c3))  WHEN CAST(vt0.c0 AS REAL) THEN rt0.c2 COLLATE NOCASE ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END) ORDER BY IFNULL(DISTINCT (((rt0.c0))>((NULL))), NULL) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (rt0.c3))  WHEN CAST(vt0.c0 AS REAL) THEN rt0.c2 COLLATE NOCASE ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT (((rt0.c0))>((NULL))), NULL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (~ (rt0.c3))  WHEN CAST(vt0.c0 AS REAL) THEN rt0.c2 COLLATE NOCASE ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) END) ORDER BY IFNULL(DISTINCT (((rt0.c0))>((NULL))), NULL) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))IS((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))IS((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))IS((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))IS((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))IS((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS INTEGER));
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY CAST((((0.6891226217114238, rt0.c3, rt0.c1))<>((rt0.c3, rt0.c2, 0.22936233905559367))) AS INTEGER), ((NULL) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((0.6891226217114238, rt0.c3, rt0.c1))!=((rt0.c3, rt0.c2, 0.22936233905559367))) AS INTEGER), ((NULL) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)) ASC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY CAST((((0.6891226217114238, rt0.c3, rt0.c1))<>((rt0.c3, rt0.c2, 0.22936233905559367))) AS INTEGER), ((NULL) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((((0.6891226217114238, rt0.c3, rt0.c1))!=((rt0.c3, rt0.c2, 0.22936233905559367))) AS INTEGER), ((NULL) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)) ASC);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) ORDER BY CAST((((0.6891226217114238, rt0.c3, rt0.c1))<>((rt0.c3, rt0.c2, 0.22936233905559367))) AS INTEGER), ((NULL) NOT BETWEEN (((rt0.c0)<(rt0.c3))) AND (rt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-1646433157')))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-1646433157')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-1646433157')))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-1646433157')))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND (('-1646433157')))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)>=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)>=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((rt0.c2)>=(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)) ORDER BY ''  NULLS FIRST, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ''  NULLS FIRST, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)) ORDER BY ''  NULLS FIRST, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ''  NULLS FIRST, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE((rt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END) NOTNULL)) ORDER BY ''  NULLS FIRST, ((CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE((rt0.c1 IN ())));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1558262498' THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1558262498' THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1558262498' THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1558262498' THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1558262498' THEN vt0.c0 ELSE vt0.c0 END))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c3)<=(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((((rt0.c1, rt0.c1, '1795658183')) NOT BETWEEN ((rt0.c0, rt0.c1, 0.3045691224243432)) AND ((rt0.c2, rt0.c1, rt0.c0))), (~ (rt0.c1)), ((rt0.c1)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c3)<=(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((((rt0.c1, rt0.c1, '1795658183')) NOT BETWEEN ((rt0.c0, rt0.c1, 0.3045691224243432)) AND ((rt0.c2, rt0.c1, rt0.c0))), (~ (rt0.c1)), ((rt0.c1)<=(rt0.c3))))));
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c3)<=(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((((rt0.c1, rt0.c1, '1795658183')) NOT BETWEEN ((rt0.c0, rt0.c1, 0.3045691224243432)) AND ((rt0.c2, rt0.c1, rt0.c0))), (~ (rt0.c1)), ((rt0.c1)<=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c3)<=(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((((rt0.c1, rt0.c1, '1795658183')) NOT BETWEEN ((rt0.c0, rt0.c1, 0.3045691224243432)) AND ((rt0.c2, rt0.c1, rt0.c0))), (~ (rt0.c1)), ((rt0.c1)<=(rt0.c3))))));
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((rt0.c3)<=(rt0.c3)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) AND (((((rt0.c1, rt0.c1, '1795658183')) NOT BETWEEN ((rt0.c0, rt0.c1, 0.3045691224243432)) AND ((rt0.c2, rt0.c1, rt0.c0))), (~ (rt0.c1)), ((rt0.c1)<=(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.5515374595064348, NULL, rt0.c3))=(((rt0.c3 IN (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)<=(rt0.c3)))))) ORDER BY CAST((- (rt0.c2)) AS REAL), ((vt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.5515374595064348, NULL, rt0.c3))=(((rt0.c3 IN (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)<=(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((- (rt0.c2)) AS REAL), ((vt0.c0) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.5515374595064348, NULL, rt0.c3))=(((rt0.c3 IN (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)<=(rt0.c3)))))) ORDER BY CAST((- (rt0.c2)) AS REAL), ((vt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.5515374595064348, NULL, rt0.c3))=(((rt0.c3 IN (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)<=(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((- (rt0.c2)) AS REAL), ((vt0.c0) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.5515374595064348, NULL, rt0.c3))=(((rt0.c3 IN (rt0.c1)), (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))), ((rt0.c3)<=(rt0.c3)))))) ORDER BY CAST((- (rt0.c2)) AS REAL), ((vt0.c0) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) AS TEXT));
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)<<(vt0.c0)))) AND (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((+ (vt0.c0))) ISNULL) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((+ (vt0.c0))) ISNULL) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0))) ISNULL) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)IS NOT(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (((+ (vt0.c0))) ISNULL) ASC, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ASC, ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c1) IS TRUE), NULL COLLATE BINARY))>=(((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c3, rt0.c2, rt0.c3))), ((rt0.c1)GLOB(rt0.c3)), (- (rt0.c0)))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE RTRIM, ((rt0.c1) IS TRUE), NULL COLLATE BINARY))>=(((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c3, rt0.c2, rt0.c3))), ((rt0.c1)GLOB(rt0.c3)), (- (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c1) IS TRUE), NULL COLLATE BINARY))>=(((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c3, rt0.c2, rt0.c3))), ((rt0.c1)GLOB(rt0.c3)), (- (rt0.c0)))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE RTRIM, ((rt0.c1) IS TRUE), NULL COLLATE BINARY))>=(((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c3, rt0.c2, rt0.c3))), ((rt0.c1)GLOB(rt0.c3)), (- (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM, ((rt0.c1) IS TRUE), NULL COLLATE BINARY))>=(((((rt0.c1, rt0.c0, rt0.c1))>((rt0.c3, rt0.c2, rt0.c3))), ((rt0.c1)GLOB(rt0.c3)), (- (rt0.c0)))))) ORDER BY (+ (CAST(rt0.c1 AS REAL))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Xd]8!U.>'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Xd]8!U.>'))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Xd]8!U.>'))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Xd]8!U.>'))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND ('Xd]8!U.>'))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) IS FALSE)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) IS FALSE)) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt0.c0) IS FALSE)) IS FALSE) DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN ())) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN json_array_length(rt0.c0, rt0.c1) END  NULLS LAST, ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN json_array_length(rt0.c0, rt0.c1) END  NULLS LAST, ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN ())) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN json_array_length(rt0.c0, rt0.c1) END  NULLS LAST, ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN json_array_length(rt0.c0, rt0.c1) END  NULLS LAST, ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) IN ())) ORDER BY CASE WHEN CAST(rt0.c3 AS REAL) THEN json_array_length(rt0.c0, rt0.c1) END  NULLS LAST, ((rt0.c2 COLLATE BINARY) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c3)))||((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(rt0.c3)))||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c3)))||((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(rt0.c3)))||((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c3)))||((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<>((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))!=((vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0), 'C', ((vt0.c0)<<(1.789652847E9))))<((GLOB(vt0.c0, 'M-'), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, vt0.c0), 'C', ((vt0.c0)<<(1.789652847E9))))<((GLOB(vt0.c0, 'M-'), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0), 'C', ((vt0.c0)<<(1.789652847E9))))<((GLOB(vt0.c0, 'M-'), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, vt0.c0), 'C', ((vt0.c0)<<(1.789652847E9))))<((GLOB(vt0.c0, 'M-'), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0), 'C', ((vt0.c0)<<(1.789652847E9))))<((GLOB(vt0.c0, 'M-'), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)>(vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((vt0.c0)-(rt0.c2))))) ORDER BY ((((rt0.c1)OR(CAST(vt0.c0 AS REAL))))OR('1588744426'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)-(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)OR(CAST(vt0.c0 AS REAL))))OR('1588744426'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((vt0.c0)-(rt0.c2))))) ORDER BY ((((rt0.c1)OR(CAST(vt0.c0 AS REAL))))OR('1588744426'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0)-(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)OR(CAST(vt0.c0 AS REAL))))OR('1588744426'))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((vt0.c0)-(rt0.c2))))) ORDER BY ((((rt0.c1)OR(CAST(vt0.c0 AS REAL))))OR('1588744426'))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c2 END) ORDER BY CASE CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)%('1384001105')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)%('1384001105')) END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c2 END) ORDER BY CASE CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)%('1384001105')) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c2 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)%('1384001105')) END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)) THEN rt0.c2 END) ORDER BY CASE CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END  WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c0)%('1384001105')) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL) NOT BETWEEN (((vt0.c0) IS FALSE)) AND ((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c0)))OR((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))))OR(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)IS NOT(rt0.c0)))OR((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))))OR(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c0)))OR((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))))OR(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)IS NOT(rt0.c0)))OR((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))))OR(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c0)))OR((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))))))OR(((((((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2))))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((~ (ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (ABS(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (ABS(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (ABS(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((~ (ABS(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN '-89259065' ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN '-89259065' ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN '-89259065' ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN '-89259065' ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN '-89259065' ELSE vt0.c0 END)))OR((((vt0.c0))>((vt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((((x'')AND(rt0.c3)))AND(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((((x'')AND(rt0.c3)))AND(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((((x'')AND(rt0.c3)))AND(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((((x'')AND(rt0.c3)))AND(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN ((rt0.c2)>(rt0.c3)) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((((x'')AND(rt0.c3)))AND(rt0.c3)) THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c3 WHERE ((((rt0.c1 IN ()))==((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c3);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c3 WHERE ((((rt0.c1 IN ()))==((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c3);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c3 WHERE ((((rt0.c1 IN ()))==((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ()));
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOTNULL)) ORDER BY (((rt0.c1)GLOB(rt0.c1)) IN ());
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<((- (vt0.c0))))) ORDER BY ((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<((- (vt0.c0))))) ORDER BY ((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<((- (vt0.c0))))) ORDER BY ((((vt0.c0)OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.44990068368378966);
SELECT SUM(count) FROM (SELECT ALL ((0.44990068368378966) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.44990068368378966);
SELECT SUM(count) FROM (SELECT ALL ((0.44990068368378966) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (0.44990068368378966);
SELECT * FROM vt0 WHERE (CAST('327022113' AS TEXT) COLLATE BINARY) ORDER BY (((((((('-2021850740')OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))))OR((vt0.c0 IN (0Xffffffffda361a4e)))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('327022113' AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((((('-2021850740')OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))))OR((vt0.c0 IN (0xffffffffda361a4e)))))AND((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('327022113' AS TEXT) COLLATE BINARY) ORDER BY (((((((('-2021850740')OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))))OR((vt0.c0 IN (0Xffffffffda361a4e)))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('327022113' AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((((('-2021850740')OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))))OR((vt0.c0 IN (0xffffffffda361a4e)))))AND((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('327022113' AS TEXT) COLLATE BINARY) ORDER BY (((((((('-2021850740')OR(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)))))AND((((vt0.c0))>((vt0.c0))))))OR((vt0.c0 IN (0Xffffffffda361a4e)))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(CAST(rt0.c1 AS REAL))) WHERE ((((x'')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))) ORDER BY (rt0.c1 IN (rt0.c2, rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(CAST(rt0.c1 AS REAL))) ORDER BY (rt0.c1 IN (rt0.c2, rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(CAST(rt0.c1 AS REAL))) WHERE ((((x'')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))) ORDER BY (rt0.c1 IN (rt0.c2, rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(CAST(rt0.c1 AS REAL))) ORDER BY (rt0.c1 IN (rt0.c2, rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))|(CAST(rt0.c1 AS REAL))) WHERE ((((x'')) BETWEEN (((rt0.c2 IN ()))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))))) ORDER BY (rt0.c1 IN (rt0.c2, rt0.c1)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((('-1102227605')<(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((('-1102227605')<(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((('-1102227605')<(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((('-1102227605')<(rt0.c1))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((('-1102227605')<(rt0.c1)));
SELECT * FROM rt0 WHERE ('\8t.NOAi^');
SELECT SUM(count) FROM (SELECT (('\8t.NOAi^') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('\8t.NOAi^');
SELECT SUM(count) FROM (SELECT (('\8t.NOAi^') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('\8t.NOAi^');
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c1)|(rt0.c0)), ((rt0.c3)*('')))) AND ((CAST(rt0.c1 AS REAL), SQLITE_COMPILEOPTION_GET(x'fc9f'), ((rt0.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c1)|(rt0.c0)), ((rt0.c3)*('')))) AND ((CAST(rt0.c1 AS REAL), SQLITE_COMPILEOPTION_GET(x'fc9f'), ((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c1)|(rt0.c0)), ((rt0.c3)*('')))) AND ((CAST(rt0.c1 AS REAL), SQLITE_COMPILEOPTION_GET(x'fc9f'), ((rt0.c3) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c1)|(rt0.c0)), ((rt0.c3)*('')))) AND ((CAST(rt0.c1 AS REAL), SQLITE_COMPILEOPTION_GET(x'fc9f'), ((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c0, NULL)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c1)|(rt0.c0)), ((rt0.c3)*('')))) AND ((CAST(rt0.c1 AS REAL), SQLITE_COMPILEOPTION_GET(x'fc9f'), ((rt0.c3) NOTNULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN TRIM(vt0.c0, x'd0a8') THEN ((0.3683840072737671)<<(vt0.c0)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN TRIM(vt0.c0, x'd0a8') THEN ((0.3683840072737671)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN TRIM(vt0.c0, x'd0a8') THEN ((0.3683840072737671)<<(vt0.c0)) END) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN TRIM(vt0.c0, x'd0a8') THEN ((0.3683840072737671)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN TRIM(vt0.c0, x'd0a8') THEN ((0.3683840072737671)<<(vt0.c0)) END) ORDER BY NULL ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>=((((-133410009))>((vt0.c0))))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)|(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)|(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>=((((-133410009))>((vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>=((((-133410009))>((vt0.c0))))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)|(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)|(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>=((((-133410009))>((vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c3 AS NUMERIC))>=((((-133410009))>((vt0.c0))))) WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)|(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c1 IN ()) IN ())) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)*(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)*(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c3)*(rt0.c3)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.32714080376997123);
SELECT SUM(count) FROM (SELECT ALL ((0.32714080376997123) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.32714080376997123);
SELECT SUM(count) FROM (SELECT ALL ((0.32714080376997123) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.32714080376997123);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, vt0.c0, NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, vt0.c0, NULL))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, vt0.c0, NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, vt0.c0, NULL))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c3)) THEN (((rt0.c0, rt0.c1, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt0.c0, vt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c1, vt0.c0, NULL))) END);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>>(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)>>(rt0.c3))) IS TRUE));
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0 IN ()))<<(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END) ISNULL));
SELECT * FROM vt0, rt0 WHERE (x'4fc5');
SELECT SUM(count) FROM (SELECT ((x'4fc5') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'4fc5');
SELECT SUM(count) FROM (SELECT ((x'4fc5') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (x'4fc5');
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(CAST(rt0.c3 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE (((((rt0.c1) ISNULL))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))OR(UNLIKELY('-1772123790'))), CAST((rt0.c3 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ORDER BY ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))OR(UNLIKELY('-1772123790'))), CAST((rt0.c3 IN ()) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE (((((rt0.c1) ISNULL))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))OR(UNLIKELY('-1772123790'))), CAST((rt0.c3 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ORDER BY ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))OR(UNLIKELY('-1772123790'))), CAST((rt0.c3 IN ()) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c0)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE (((((rt0.c1) ISNULL))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c3 COLLATE BINARY)OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END)))OR(UNLIKELY('-1772123790'))), CAST((rt0.c3 IN ()) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)/(rt0.c1)) COLLATE BINARY WHERE (((rt0.c3 COLLATE BINARY)IS NOT(NULL))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)IS NOT(NULL))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)/(rt0.c1)) COLLATE BINARY ORDER BY (((- (rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)/(rt0.c1)) COLLATE BINARY WHERE (((rt0.c3 COLLATE BINARY)IS NOT(NULL))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)IS NOT(NULL))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)/(rt0.c1)) COLLATE BINARY ORDER BY (((- (rt0.c2))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c3)/(rt0.c1)) COLLATE BINARY WHERE (((rt0.c3 COLLATE BINARY)IS NOT(NULL))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT * FROM rt0, vt0 WHERE ((((((((((+ (rt0.c2)))AND(((rt0.c1)&(rt0.c3)))))AND((('1667998444')IS(vt0.c0)))))OR(((rt0.c2)||(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(((rt0.c1)&(rt0.c3)))))AND((('1667998444')IS(vt0.c0)))))OR(((rt0.c2)||(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((((+ (rt0.c2)))AND(((rt0.c1)&(rt0.c3)))))AND((('1667998444')IS(vt0.c0)))))OR(((rt0.c2)||(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (rt0.c2)))AND(((rt0.c1)&(rt0.c3)))))AND((('1667998444')IS(vt0.c0)))))OR(((rt0.c2)||(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((((((+ (rt0.c2)))AND(((rt0.c1)&(rt0.c3)))))AND((('1667998444')IS(vt0.c0)))))OR(((rt0.c2)||(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL))||(PRINTF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c3)))AND(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL))||(PRINTF(rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL))||(PRINTF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(rt0.c3)))AND(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT NULL))||(PRINTF(rt0.c2))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0)OR(rt0.c3)))AND(x'')))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0) NOT NULL))||(PRINTF(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(json(rt0.c3) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL ORDER BY CAST(json(rt0.c3) AS TEXT)  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(json(rt0.c3) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL ORDER BY CAST(json(rt0.c3) AS TEXT)  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON NULL WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(json(rt0.c3) AS TEXT)  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((LOWER(rt0.c3)) IS TRUE)) ORDER BY TIME(rt0.c3, rt0.c2, rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c3)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY TIME(rt0.c3, rt0.c2, rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((LOWER(rt0.c3)) IS TRUE)) ORDER BY TIME(rt0.c3, rt0.c2, rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c3)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY TIME(rt0.c3, rt0.c2, rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((LOWER(rt0.c3)) IS TRUE)) ORDER BY TIME(rt0.c3, rt0.c2, rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0)OR(rt0.c0)))AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((('200834687')>>((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('200834687')>>((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('200834687')>>((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('200834687')>>((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('200834687')>>((((vt0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((x'')IS NOT(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((x'')IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((x'')IS NOT(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((x'')IS NOT(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((x'')IS NOT(vt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((SQLITE_VERSION())) AND ((0.7038437362163935)))) ORDER BY (~ ((('m+jlI')IS(vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY)==(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((SQLITE_VERSION())) AND ((0.7038437362163935)))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((('m+jlI')IS(vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY)==(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((SQLITE_VERSION())) AND ((0.7038437362163935)))) ORDER BY (~ ((('m+jlI')IS(vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY)==(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((SQLITE_VERSION())) AND ((0.7038437362163935)))) IS TRUE)  as count FROM vt0 ORDER BY (~ ((('m+jlI')IS(vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY)==(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((SQLITE_VERSION())) AND ((0.7038437362163935)))) ORDER BY (~ ((('m+jlI')IS(vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY)==(((vt0.c0)*(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) BETWEEN (UPPER(DISTINCT rt0.c1)) AND (((rt0.c3) NOT NULL)))) ORDER BY 0.9840143365307554 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) BETWEEN (UPPER(DISTINCT rt0.c1)) AND (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9840143365307554 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) BETWEEN (UPPER(DISTINCT rt0.c1)) AND (((rt0.c3) NOT NULL)))) ORDER BY 0.9840143365307554 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) BETWEEN (UPPER(DISTINCT rt0.c1)) AND (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9840143365307554 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.c0) AND (rt0.c3))) BETWEEN (UPPER(DISTINCT rt0.c1)) AND (((rt0.c3) NOT NULL)))) ORDER BY 0.9840143365307554 ASC;
SELECT ALL * FROM vt0 WHERE (((0X3de03bd0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0X3de03bd0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0X3de03bd0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0X3de03bd0) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((0X3de03bd0) NOT NULL));
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))AND('1546569493')))AND(x''))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))AND('1546569493')))AND(x''))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END DESC, NULL);
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))AND('1546569493')))AND(x''))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((((COALESCE(vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))AND('1546569493')))AND(x''))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END DESC, NULL);
SELECT * FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))OR(CAST(vt0.c0 AS NUMERIC))))AND((vt0.c0 IN ()))))AND('1546569493')))AND(x''))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN (vt0.c0 IN (vt0.c0, vt0.c0)) ELSE ((vt0.c0)AND(vt0.c0)) END DESC, NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c3 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)AND(CAST(rt0.c3 AS TEXT))));
SELECT * FROM rt0 WHERE (((rt0.c0)<>(rt0.c1 COLLATE NOCASE))) ORDER BY (('L') NOT NULL) COLLATE NOCASE ASC  NULLS LAST, CAST(rt0.c2 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (('L') NOT NULL) COLLATE NOCASE ASC  NULLS LAST, CAST(rt0.c2 AS BLOB) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c0)<>(rt0.c1 COLLATE NOCASE))) ORDER BY (('L') NOT NULL) COLLATE NOCASE ASC  NULLS LAST, CAST(rt0.c2 AS BLOB) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<>(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (('L') NOT NULL) COLLATE NOCASE ASC  NULLS LAST, CAST(rt0.c2 AS BLOB) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((rt0.c0)<>(rt0.c1 COLLATE NOCASE))) ORDER BY (('L') NOT NULL) COLLATE NOCASE ASC  NULLS LAST, CAST(rt0.c2 AS BLOB) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c1  WHEN x'' THEN rt0.c2 END))) ORDER BY (0.20164351469429598 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c1  WHEN x'' THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (0.20164351469429598 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c1  WHEN x'' THEN rt0.c2 END))) ORDER BY (0.20164351469429598 IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c1  WHEN x'' THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (0.20164351469429598 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CASE rt0.c1  WHEN x'' THEN rt0.c2 END))) ORDER BY (0.20164351469429598 IN ());
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LTRIM(((rt0.c0)>>(vt0.c0))) WHERE (((((((((((rt0.c2)OR('<<勓_>')))OR(1171112589)))AND(rt0.c2)))OR(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR('<<勓_>')))OR(1171112589)))AND(rt0.c2)))OR(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LTRIM(((rt0.c0)>>(vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LTRIM(((rt0.c0)>>(vt0.c0))) WHERE (((((((((((rt0.c2)OR('<<勓_>')))OR(1171112589)))AND(rt0.c2)))OR(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR('<<勓_>')))OR(1171112589)))AND(rt0.c2)))OR(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON LTRIM(((rt0.c0)>>(vt0.c0))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON LTRIM(((rt0.c0)>>(vt0.c0))) WHERE (((((((((((rt0.c2)OR('<<勓_>')))OR(1171112589)))AND(rt0.c2)))OR(rt0.c3))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((rt0.c0)IS(rt0.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c3 AS BLOB)) NOT NULL) WHERE (rt0.c0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)OR(rt0.c3)), (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0, '1936467149', rt0.c0))))) AND ((((rt0.c3)LIKE(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)OR(rt0.c3)), (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0, '1936467149', rt0.c0))))) AND ((((rt0.c3)LIKE(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)OR(rt0.c3)), (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0, '1936467149', rt0.c0))))) AND ((((rt0.c3)LIKE(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)OR(rt0.c3)), (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0, '1936467149', rt0.c0))))) AND ((((rt0.c3)LIKE(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL)))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END, ((rt0.c0)OR(rt0.c3)), (((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c0))=((rt0.c1, rt0.c1, rt0.c0, '1936467149', rt0.c0))))) AND ((((rt0.c3)LIKE(rt0.c3)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END, rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x'')))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(x''))));
SELECT ALL * FROM vt0, rt0 WHERE (DATE(rt0.c2 COLLATE RTRIM, (- (rt0.c0)), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c2 COLLATE RTRIM, (- (rt0.c0)), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (DATE(rt0.c2 COLLATE RTRIM, (- (rt0.c0)), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((DATE(rt0.c2 COLLATE RTRIM, (- (rt0.c0)), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (DATE(rt0.c2 COLLATE RTRIM, (- (rt0.c0)), rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)) AS REAL));
SELECT * FROM rt0 INNER JOIN vt0 ON IFNULL(((vt0.c0)IS(vt0.c0)), CAST(rt0.c3 AS REAL)) WHERE ('') ORDER BY (((((+ (rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))OR(NULL));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(((vt0.c0)IS(vt0.c0)), CAST(rt0.c3 AS REAL)) ORDER BY (((((+ (rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))OR(NULL)));
SELECT * FROM rt0 INNER JOIN vt0 ON IFNULL(((vt0.c0)IS(vt0.c0)), CAST(rt0.c3 AS REAL)) WHERE ('') ORDER BY (((((+ (rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))OR(NULL));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(((vt0.c0)IS(vt0.c0)), CAST(rt0.c3 AS REAL)) ORDER BY (((((+ (rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))OR(NULL)));
SELECT * FROM rt0 INNER JOIN vt0 ON IFNULL(((vt0.c0)IS(vt0.c0)), CAST(rt0.c3 AS REAL)) WHERE ('') ORDER BY (((((+ (rt0.c0)))AND(((rt0.c1)*(rt0.c1)))))OR(NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((((vt0.c0))>((vt0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN (((vt0.c0))<=((vt0.c0))) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN (((vt0.c0))<=((vt0.c0))) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN (((vt0.c0))<=((vt0.c0))) ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN (((vt0.c0))<=((vt0.c0))) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL))) THEN (((vt0.c0))<=((vt0.c0))) ELSE (+ (vt0.c0)) END);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((rt0.c0 IN ()))IS(ABS(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN ()))IS(ABS(DISTINCT rt0.c2))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((rt0.c0 IN ()))IS(ABS(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c0 IN ()))IS(ABS(DISTINCT rt0.c2))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) ORDER BY (((rt0.c0 IN ()))IS(ABS(DISTINCT rt0.c2))) DESC;
SELECT * FROM rt0 WHERE ((CAST('Eb' AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('Eb' AS BLOB) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST('Eb' AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST('Eb' AS BLOB) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CAST('Eb' AS BLOB) IN ()));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c1))) AND (((- (rt0.c3))))) WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '-1157848406' END)&(LOWER(DISTINCT rt0.c3)))) ORDER BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '-1157848406' END)&(LOWER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c1))) AND (((- (rt0.c3))))) ORDER BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOTNULL) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c1))) AND (((- (rt0.c3))))) WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '-1157848406' END)&(LOWER(DISTINCT rt0.c3)))) ORDER BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '-1157848406' END)&(LOWER(DISTINCT rt0.c3)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c1))) AND (((- (rt0.c3))))) ORDER BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOTNULL) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((TYPEOF(DISTINCT rt0.c1))) AND (((- (rt0.c3))))) WHERE (((CASE rt0.c3  WHEN x'' THEN rt0.c2 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE '-1157848406' END)&(LOWER(DISTINCT rt0.c3)))) ORDER BY ((((((vt0.c0)AND(rt0.c2)))AND(vt0.c0))) NOTNULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((CASE '-1483327418'  WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE '-1483327418'  WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((CASE '-1483327418'  WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE '-1483327418'  WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((- (CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((CASE '-1483327418'  WHEN vt0.c0 THEN vt0.c0 END)LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt0, vt0 WHERE (((((CASE x''  WHEN rt0.c2 THEN '-164682540' END)OR(LIKELIHOOD(rt0.c2, 0.10559567094311395))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x''  WHEN rt0.c2 THEN '-164682540' END)OR(LIKELIHOOD(rt0.c2, 0.10559567094311395))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CASE x''  WHEN rt0.c2 THEN '-164682540' END)OR(LIKELIHOOD(rt0.c2, 0.10559567094311395))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE x''  WHEN rt0.c2 THEN '-164682540' END)OR(LIKELIHOOD(rt0.c2, 0.10559567094311395))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((CASE x''  WHEN rt0.c2 THEN '-164682540' END)OR(LIKELIHOOD(rt0.c2, 0.10559567094311395))))OR((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE (((0.21424228149078162) IS FALSE)) ORDER BY CASE SQLITE_VERSION()  WHEN ROUND(rt0.c3, rt0.c1) THEN rt0.c0 END ASC  NULLS FIRST, CAST(0.9846340057714832 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.21424228149078162) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE SQLITE_VERSION()  WHEN ROUND(rt0.c3, rt0.c1) THEN rt0.c0 END ASC  NULLS FIRST, CAST(0.9846340057714832 AS INTEGER)  NULLS LAST);
SELECT * FROM rt0 WHERE (((0.21424228149078162) IS FALSE)) ORDER BY CASE SQLITE_VERSION()  WHEN ROUND(rt0.c3, rt0.c1) THEN rt0.c0 END ASC  NULLS FIRST, CAST(0.9846340057714832 AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.21424228149078162) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE SQLITE_VERSION()  WHEN ROUND(rt0.c3, rt0.c1) THEN rt0.c0 END ASC  NULLS FIRST, CAST(0.9846340057714832 AS INTEGER)  NULLS LAST);
SELECT * FROM rt0 WHERE (((0.21424228149078162) IS FALSE)) ORDER BY CASE SQLITE_VERSION()  WHEN ROUND(rt0.c3, rt0.c1) THEN rt0.c0 END ASC  NULLS FIRST, CAST(0.9846340057714832 AS INTEGER)  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((rt0.c1 IN (vt0.c0)) COLLATE NOCASE) ORDER BY (CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c2))) ORDER BY (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (- (CAST('-1441794044' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT TRIM(DISTINCT rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (- (CAST('-1441794044' AS REAL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c2))) ORDER BY (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (- (CAST('-1441794044' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT TRIM(DISTINCT rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (- (CAST('-1441794044' AS REAL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c2))) ORDER BY (~ (CASE WHEN rt0.c1 THEN rt0.c2 END)), (- (CAST('-1441794044' AS REAL)))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (1.787819871E9) AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((vt0.c0) NOTNULL)))=((0.7395509252597258)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c2)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))==((0.7395509252597258)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (1.787819871E9) AND (rt0.c2 COLLATE RTRIM)) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c2)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (1.787819871E9) AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((vt0.c0) NOTNULL)))=((0.7395509252597258)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c2)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOTNULL)))==((0.7395509252597258)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (1.787819871E9) AND (rt0.c2 COLLATE RTRIM)) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c2)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (1.787819871E9) AND (rt0.c2 COLLATE RTRIM)) WHERE ((((((vt0.c0) NOTNULL)))=((0.7395509252597258)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c2)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(((rt0.c0)|(rt0.c3)))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(((rt0.c0)|(rt0.c3)))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(((rt0.c0)|(rt0.c3)))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(((rt0.c0)|(rt0.c3)))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((rt0.c0)AND(((rt0.c0)|(rt0.c3)))))OR(rt0.c0)))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))OR(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((vt0.c0)*(vt0.c0))) AND (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)+(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) IS TRUE))IS((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))IS((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)+(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)+(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) IS TRUE))IS((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))IS((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)+(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c1)+(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) IS TRUE))IS((+ (rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (((((((((rt0.c0)OR(0.09587644564800357)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) WHERE ((+ ((((rt0.c1))>((rt0.c1)))))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))>((rt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (((((((((rt0.c0)OR(0.09587644564800357)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (((((((((rt0.c0)OR(0.09587644564800357)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) WHERE ((+ ((((rt0.c1))>((rt0.c1)))))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt0.c1))>((rt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (((((((((rt0.c0)OR(0.09587644564800357)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT (((((((((rt0.c0)OR(0.09587644564800357)))AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c2)))) WHERE ((+ ((((rt0.c1))>((rt0.c1)))))) ORDER BY (rt0.c3 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1))<(('(?')))) NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)>=(rt0.c2))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(json_patch(vt0.c0, rt0.c3)))  NULLS FIRST, ((((((rt0.c1)%(rt0.c3)))AND(((((rt0.c2)OR(vt0.c0)))OR('2059367510')))))AND(((rt0.c2)-(0.17215570429630866)))), (((rt0.c2) IS TRUE) IN (x'')) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<(('(?')))) NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(json_patch(vt0.c0, rt0.c3)))  NULLS FIRST, ((((((rt0.c1)%(rt0.c3)))AND(((((rt0.c2)OR(vt0.c0)))OR('2059367510')))))AND(((rt0.c2)-(0.17215570429630866)))), (((rt0.c2) IS TRUE) IN (x'')) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1))<(('(?')))) NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)>=(rt0.c2))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(json_patch(vt0.c0, rt0.c3)))  NULLS FIRST, ((((((rt0.c1)%(rt0.c3)))AND(((((rt0.c2)OR(vt0.c0)))OR('2059367510')))))AND(((rt0.c2)-(0.17215570429630866)))), (((rt0.c2) IS TRUE) IN (x'')) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<(('(?')))) NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(json_patch(vt0.c0, rt0.c3)))  NULLS FIRST, ((((((rt0.c1)%(rt0.c3)))AND(((((rt0.c2)OR(vt0.c0)))OR('2059367510')))))AND(((rt0.c2)-(0.17215570429630866)))), (((rt0.c2) IS TRUE) IN (x'')) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c1))<(('(?')))) NOT BETWEEN ((+ (rt0.c0))) AND (((rt0.c2)>=(rt0.c2))))) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)))/(json_patch(vt0.c0, rt0.c3)))  NULLS FIRST, ((((((rt0.c1)%(rt0.c3)))AND(((((rt0.c2)OR(vt0.c0)))OR('2059367510')))))AND(((rt0.c2)-(0.17215570429630866)))), (((rt0.c2) IS TRUE) IN (x'')) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 AS NUMERIC)) ORDER BY rt0.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((RTRIM(vt0.c0))))) ORDER BY (CAST(rt0.c3 AS TEXT) IN (CAST(vt0.c0 AS NUMERIC), rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((RTRIM(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c3 AS TEXT) IN (CAST(vt0.c0 AS NUMERIC), rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((RTRIM(vt0.c0))))) ORDER BY (CAST(rt0.c3 AS TEXT) IN (CAST(vt0.c0 AS NUMERIC), rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((RTRIM(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(rt0.c3 AS TEXT) IN (CAST(vt0.c0 AS NUMERIC), rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((RTRIM(vt0.c0))))) ORDER BY (CAST(rt0.c3 AS TEXT) IN (CAST(vt0.c0 AS NUMERIC), rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)-(rt0.c0)))<(((rt0.c2)<<('-1146015489')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c0)))<(((rt0.c2)<<('-1146015489'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)-(rt0.c0)))<(((rt0.c2)<<('-1146015489')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c0)))<(((rt0.c2)<<('-1146015489'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)-(rt0.c0)))<(((rt0.c2)<<('-1146015489')))));
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(615966201)))OR(((((1914824517)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(615966201)))OR(((((1914824517)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(615966201)))OR(((((1914824517)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(615966201)))OR(((((1914824517)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((+ (vt0.c0)) IN ((- (vt0.c0))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(615966201)))OR(((((1914824517)OR(vt0.c0)))OR(vt0.c0))))  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c3))) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((rt0.c0) NOT BETWEEN ('-33889979') AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c1, rt0.c1, rt0.c3))) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((rt0.c0) NOT BETWEEN ('-33889979') AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c3))) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((rt0.c0) NOT BETWEEN ('-33889979') AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c1, rt0.c1, rt0.c3))) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((rt0.c0) NOT BETWEEN ('-33889979') AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN (((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c1, rt0.c3))) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((rt0.c0) NOT BETWEEN ('-33889979') AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (rt0.c3))) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND(NULL)))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR((((rt0.c0))<=((rt0.c3)))))) ORDER BY CASE (- (rt0.c2))  WHEN (- (rt0.c3)) THEN ((rt0.c2) IS FALSE) ELSE (- (rt0.c3)) END DESC  NULLS LAST, (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE BINARY)AND(NULL)))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR((((rt0.c0))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN (- (rt0.c3)) THEN ((rt0.c2) IS FALSE) ELSE (- (rt0.c3)) END DESC  NULLS LAST, (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND(NULL)))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR((((rt0.c0))<=((rt0.c3)))))) ORDER BY CASE (- (rt0.c2))  WHEN (- (rt0.c3)) THEN ((rt0.c2) IS FALSE) ELSE (- (rt0.c3)) END DESC  NULLS LAST, (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2 COLLATE BINARY)AND(NULL)))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR((((rt0.c0))<=((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (- (rt0.c2))  WHEN (- (rt0.c3)) THEN ((rt0.c2) IS FALSE) ELSE (- (rt0.c3)) END DESC  NULLS LAST, (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE BINARY)AND(NULL)))AND((rt0.c2 IN ()))))AND(rt0.c2)))OR((((rt0.c0))<=((rt0.c3)))))) ORDER BY CASE (- (rt0.c2))  WHEN (- (rt0.c3)) THEN ((rt0.c2) IS FALSE) ELSE (- (rt0.c3)) END DESC  NULLS LAST, (~ (rt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))-(vt0.c0 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))=('1377930441'))) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('gA}z') AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))=('1377930441'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('gA}z') AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))=('1377930441'))) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('gA}z') AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))=('1377930441'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('gA}z') AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) NOT NULL))=('1377930441'))) ORDER BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('gA}z') AND (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((vt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (LOWER((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (LOWER((~ (rt0.c1))));
SELECT * FROM rt0, vt0 WHERE (((((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9741100111002026))))OR((rt0.c0 IN ()))))OR((((rt0.c3))>((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9741100111002026))))OR((rt0.c0 IN ()))))OR((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9741100111002026))))OR((rt0.c0 IN ()))))OR((((rt0.c3))>((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9741100111002026))))OR((rt0.c0 IN ()))))OR((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((((((((((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)))))OR(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))OR(LIKELIHOOD(DISTINCT rt0.c0, 0.9741100111002026))))OR((rt0.c0 IN ()))))OR((((rt0.c3))>((rt0.c3))))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3)IS NOT(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((1.04963485E9) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL)) ORDER BY (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))))>((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))), (((0Xffffffff84184ad7))==(((rt0.c3 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((1.04963485E9) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))))>((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))), (((0xffffffff84184ad7))==(((rt0.c3 IN ())))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((1.04963485E9) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL)) ORDER BY (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))))>((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))), (((0Xffffffff84184ad7))==(((rt0.c3 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((1.04963485E9) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))))>((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))), (((0xffffffff84184ad7))==(((rt0.c3 IN ())))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((1.04963485E9) BETWEEN (rt0.c1) AND (rt0.c0)) AS REAL)) ORDER BY (((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0))))>((((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))))), (((0Xffffffff84184ad7))==(((rt0.c3 IN ())))) DESC;
SELECT * FROM rt0 WHERE (ABS(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (ABS(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END));
SELECT COUNT(*) FROM rt0 WHERE (((x'')|((((rt0.c1))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')|((((rt0.c1))>((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'')|((((rt0.c1))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((x'')|((((rt0.c1))>((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((x'')|((((rt0.c1))>((rt0.c0))))));
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((x'') IS TRUE) THEN vt0.c0 COLLATE BINARY END) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((x'') IS TRUE) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((x'') IS TRUE) THEN vt0.c0 COLLATE BINARY END) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((x'') IS TRUE) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) WHEN ((x'') IS TRUE) THEN vt0.c0 COLLATE BINARY END) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR((NOT (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY CAST(x'' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0)OR('')))OR(((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0)OR('')))OR(((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY CAST(x'' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0)OR('')))OR(((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(x'' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0)OR('')))OR(((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (- (vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) THEN (vt0.c0 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END) ORDER BY CAST(x'' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0)OR('')))OR(((vt0.c0)<=(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((rt0.c0) NOT NULL))LIKE(CAST(rt0.c2 AS NUMERIC))) DESC, (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT NULL))LIKE(CAST(rt0.c2 AS NUMERIC))) DESC, (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((rt0.c0) NOT NULL))LIKE(CAST(rt0.c2 AS NUMERIC))) DESC, (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) NOT NULL))LIKE(CAST(rt0.c2 AS NUMERIC))) DESC, (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL)) ORDER BY ((((rt0.c0) NOT NULL))LIKE(CAST(rt0.c2 AS NUMERIC))) DESC, (NOT (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS TEXT)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT * FROM rt0 WHERE (HEX(0.4681662015139688)) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST, (((rt0.c2, rt0.c3, ABS(rt0.c3)))<((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), (NULL IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(0.4681662015139688)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST, (((rt0.c2, rt0.c3, ABS(rt0.c3)))<((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), (NULL IN ()))))  NULLS LAST);
SELECT * FROM rt0 WHERE (HEX(0.4681662015139688)) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST, (((rt0.c2, rt0.c3, ABS(rt0.c3)))<((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), (NULL IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(0.4681662015139688)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST, (((rt0.c2, rt0.c3, ABS(rt0.c3)))<((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), (NULL IN ()))))  NULLS LAST);
SELECT * FROM rt0 WHERE (HEX(0.4681662015139688)) ORDER BY CASE WHEN ((rt0.c3) IS TRUE) THEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END  NULLS FIRST, (((rt0.c2, rt0.c3, ABS(rt0.c3)))<((CAST(rt0.c1 AS INTEGER), ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c2)))AND(NULL)), (NULL IN ()))))  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ORDER BY ((((vt0.c0) IS TRUE))!=(rt0.c0)) DESC, (((rt0.c3) IS TRUE) IN (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0) IS TRUE))<>(rt0.c0)) DESC, (((rt0.c3) IS TRUE) IN (rt0.c0)) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ORDER BY ((((vt0.c0) IS TRUE))!=(rt0.c0)) DESC, (((rt0.c3) IS TRUE) IN (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((vt0.c0) IS TRUE))<>(rt0.c0)) DESC, (((rt0.c3) IS TRUE) IN (rt0.c0)) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) ORDER BY ((((vt0.c0) IS TRUE))!=(rt0.c0)) DESC, (((rt0.c3) IS TRUE) IN (rt0.c0)) DESC;
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT rt0.c3) COLLATE RTRIM) ORDER BY CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT rt0.c3) COLLATE RTRIM) ORDER BY CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE ASC);
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT rt0.c3) COLLATE RTRIM) ORDER BY CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0))))) ORDER BY (- (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0))))) ORDER BY (- (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))))AND(((rt0.c2)<(vt0.c0))))) ORDER BY (- (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) DESC;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON rt0.c0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS FALSE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) IS FALSE)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.39425233242838453))) AND ((((rt0.c2) IS FALSE)))) WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)), 0.2174275769189592));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)), 0.2174275769189592)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.39425233242838453))) AND ((((rt0.c2) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.39425233242838453))) AND ((((rt0.c2) IS FALSE)))) WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)), 0.2174275769189592));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)), 0.2174275769189592)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.39425233242838453))) AND ((((rt0.c2) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((LIKELIHOOD(DISTINCT rt0.c1, 0.39425233242838453))) AND ((((rt0.c2) IS FALSE)))) WHERE (LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)), 0.2174275769189592));
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((NULL) BETWEEN (vt0.c0) AND (rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), (~ (rt0.c3)))) AND ((json_insert('', rt0.c2, rt0.c3), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) WHERE ((+ ((rt0.c1 IN (rt0.c2, vt0.c0))))) ORDER BY TRIM((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), (~ (rt0.c3)))) AND ((json_insert('', rt0.c2, rt0.c3), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) ORDER BY TRIM((NOT (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), (~ (rt0.c3)))) AND ((json_insert('', rt0.c2, rt0.c3), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) WHERE ((+ ((rt0.c1 IN (rt0.c2, vt0.c0))))) ORDER BY TRIM((NOT (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c1 IN (rt0.c2, vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), (~ (rt0.c3)))) AND ((json_insert('', rt0.c2, rt0.c3), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) ORDER BY TRIM((NOT (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), (~ (rt0.c3)))) AND ((json_insert('', rt0.c2, rt0.c3), ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2))))) WHERE ((+ ((rt0.c1 IN (rt0.c2, vt0.c0))))) ORDER BY TRIM((NOT (rt0.c2)));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0 WHERE ((('') BETWEEN (NULL) AND ('TJ' COLLATE NOCASE))) ORDER BY rt0.c2, ((((rt0.c0)+(rt0.c2))) NOT BETWEEN (QUOTE(rt0.c2)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (NULL) AND ('TJ' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((((rt0.c0)+(rt0.c2))) NOT BETWEEN (QUOTE(rt0.c2)) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((('') BETWEEN (NULL) AND ('TJ' COLLATE NOCASE))) ORDER BY rt0.c2, ((((rt0.c0)+(rt0.c2))) NOT BETWEEN (QUOTE(rt0.c2)) AND (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN (NULL) AND ('TJ' COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, ((((rt0.c0)+(rt0.c2))) NOT BETWEEN (QUOTE(rt0.c2)) AND (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((('') BETWEEN (NULL) AND ('TJ' COLLATE NOCASE))) ORDER BY rt0.c2, ((((rt0.c0)+(rt0.c2))) NOT BETWEEN (QUOTE(rt0.c2)) AND (rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY CAST(((rt0.c3)IS(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c3)IS(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY CAST(((rt0.c3)IS(rt0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((- (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c3)IS(rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((- (rt0.c0)) IN ())) ORDER BY CAST(((rt0.c3)IS(rt0.c2)) AS REAL);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((0.8517247261595536)<=(rt0.c0))) IS TRUE) WHERE ((((((((((((1616965033, rt0.c2, rt0.c3))<((rt0.c0, rt0.c3, rt0.c3))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)))AND(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN 'FaYrP (f' THEN CAST(vt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE RTRIM THEN '' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((1616965033, rt0.c2, rt0.c3))<((rt0.c0, rt0.c3, rt0.c3))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)))AND(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((0.8517247261595536)<=(rt0.c0))) IS TRUE) ORDER BY CASE WHEN 'FaYrP (f' THEN CAST(vt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE RTRIM THEN '' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((0.8517247261595536)<=(rt0.c0))) IS TRUE) WHERE ((((((((((((1616965033, rt0.c2, rt0.c3))<((rt0.c0, rt0.c3, rt0.c3))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)))AND(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN 'FaYrP (f' THEN CAST(vt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE RTRIM THEN '' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((1616965033, rt0.c2, rt0.c3))<((rt0.c0, rt0.c3, rt0.c3))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)))AND(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((0.8517247261595536)<=(rt0.c0))) IS TRUE) ORDER BY CASE WHEN 'FaYrP (f' THEN CAST(vt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE RTRIM THEN '' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((0.8517247261595536)<=(rt0.c0))) IS TRUE) WHERE ((((((((((((1616965033, rt0.c2, rt0.c3))<((rt0.c0, rt0.c3, rt0.c3))))OR(CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))OR(CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)))AND(CASE rt0.c2  WHEN NULL THEN rt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(vt0.c0))))) ORDER BY CASE WHEN 'FaYrP (f' THEN CAST(vt0.c0 AS NUMERIC) WHEN rt0.c2 THEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))) WHEN rt0.c0 COLLATE RTRIM THEN '' ELSE (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (0.9173630297002944) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(0x2f81c09d))) AND ((0.54165290400645 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0.9173630297002944) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(0x2f81c09d))) AND ((0.54165290400645 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (0.9173630297002944) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(0x2f81c09d))) AND ((0.54165290400645 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (0.9173630297002944) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(0x2f81c09d))) AND ((0.54165290400645 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (0.9173630297002944) AND (rt0.c1))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(0x2f81c09d))) AND ((0.54165290400645 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)IS NOT('1546569493')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)IS NOT('1546569493'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)IS NOT('1546569493')))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)IS NOT('1546569493'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) BETWEEN (x'') AND (((vt0.c0)IS NOT('1546569493')))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL))|(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))|(((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL))|(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))|(((vt0.c0)>=(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) IS TRUE)) ORDER BY ((((vt0.c0) NOT NULL))|(((vt0.c0)>=(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((((((((((~ (NULL)))OR(((vt0.c0) IS TRUE))))OR((rt0.c3 IN ()))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('U!')))))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2)) WHERE (((rt0.c1 COLLATE NOCASE)>(((rt0.c1)==(vt0.c0))))) ORDER BY (+ (((rt0.c2) ISNULL))) ASC, (x'39ba' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)>(((rt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((((((((((((~ (NULL)))OR(((vt0.c0) IS TRUE))))OR((rt0.c3 IN ()))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('U!')))))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2)) ORDER BY (+ (((rt0.c2) ISNULL))) ASC, (x'39ba' IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((((((((((~ (NULL)))OR(((vt0.c0) IS TRUE))))OR((rt0.c3 IN ()))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('U!')))))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2)) WHERE (((rt0.c1 COLLATE NOCASE)>(((rt0.c1)==(vt0.c0))))) ORDER BY (+ (((rt0.c2) ISNULL))) ASC, (x'39ba' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE)>(((rt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((((((((((((~ (NULL)))OR(((vt0.c0) IS TRUE))))OR((rt0.c3 IN ()))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('U!')))))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2)) ORDER BY (+ (((rt0.c2) ISNULL))) ASC, (x'39ba' IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((((((((((~ (NULL)))OR(((vt0.c0) IS TRUE))))OR((rt0.c3 IN ()))))AND(CASE WHEN NULL THEN vt0.c0 END)))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND ('U!')))))OR(CAST(vt0.c0 AS NUMERIC))))OR(rt0.c2)) WHERE (((rt0.c1 COLLATE NOCASE)>(((rt0.c1)==(vt0.c0))))) ORDER BY (+ (((rt0.c2) ISNULL))) ASC, (x'39ba' IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY CASE ((NULL) NOTNULL)  WHEN (- (rt0.c3)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY CASE ((NULL) NOTNULL)  WHEN (- (rt0.c3)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY CASE ((NULL) NOTNULL)  WHEN (- (rt0.c3)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY CASE ((NULL) NOTNULL)  WHEN (- (rt0.c3)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY CASE ((NULL) NOTNULL)  WHEN (- (rt0.c3)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((((((rt0.c1)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (UNLIKELY(rt0.c3)) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (UNLIKELY(rt0.c3)) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((((((rt0.c1)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (UNLIKELY(rt0.c3)) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c1)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (UNLIKELY(rt0.c3)) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((((((rt0.c1)OR(rt0.c3)))AND(NULL))) NOT BETWEEN (UNLIKELY(rt0.c3)) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB) ASC;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0Xffffffff948c33ee THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)GLOB(((vt0.c0) NOT BETWEEN ('3I8xS솭gx') AND (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0Xffffffff948c33ee THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)GLOB(((vt0.c0) NOT BETWEEN ('3I8xS솭gx') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0Xffffffff948c33ee THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)GLOB(((vt0.c0) NOT BETWEEN ('3I8xS솭gx') AND (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN 0Xffffffff948c33ee THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)GLOB(((vt0.c0) NOT BETWEEN ('3I8xS솭gx') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0Xffffffff948c33ee THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END)GLOB(((vt0.c0) NOT BETWEEN ('3I8xS솭gx') AND (vt0.c0))))) ORDER BY ((vt0.c0)>=(vt0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE ('1850951077' COLLATE BINARY) ORDER BY (((~ ('-1135006047')))AND(((0.09012183783432248) IS TRUE))) ASC, ((((vt0.c0)IS('1391435248')))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('1850951077' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((~ ('-1135006047')))AND(((0.09012183783432248) IS TRUE))) ASC, ((((vt0.c0)IS('1391435248')))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1850951077' COLLATE BINARY) ORDER BY (((~ ('-1135006047')))AND(((0.09012183783432248) IS TRUE))) ASC, ((((vt0.c0)IS('1391435248')))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (('1850951077' COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((~ ('-1135006047')))AND(((0.09012183783432248) IS TRUE))) ASC, ((((vt0.c0)IS('1391435248')))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('1850951077' COLLATE BINARY) ORDER BY (((~ ('-1135006047')))AND(((0.09012183783432248) IS TRUE))) ASC, ((((vt0.c0)IS('1391435248')))|(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))));
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((+ (rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((NOT (vt0.c0))))) ORDER BY (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c3)), ((((rt0.c2)AND(0X1ce66962)))OR(rt0.c2)), NULLIF(2.00834687E8, rt0.c0))) AND ((((rt0.c0)/(rt0.c3)), ((((rt0.c2)AND(NULL)))AND(rt0.c1)), CAST('' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c3)), ((((rt0.c2)AND(0X1ce66962)))OR(rt0.c2)), NULLIF(2.00834687E8, rt0.c0))) AND ((((rt0.c0)/(rt0.c3)), ((((rt0.c2)AND(NULL)))AND(rt0.c1)), CAST('' AS TEXT)))));
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((NOT (vt0.c0))))) ORDER BY (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c3)), ((((rt0.c2)AND(0X1ce66962)))OR(rt0.c2)), NULLIF(2.00834687E8, rt0.c0))) AND ((((rt0.c0)/(rt0.c3)), ((((rt0.c2)AND(NULL)))AND(rt0.c1)), CAST('' AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))IS NOT((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c3)), ((((rt0.c2)AND(0X1ce66962)))OR(rt0.c2)), NULLIF(2.00834687E8, rt0.c0))) AND ((((rt0.c0)/(rt0.c3)), ((((rt0.c2)AND(NULL)))AND(rt0.c1)), CAST('' AS TEXT)))));
SELECT * FROM vt0, rt0 WHERE ((((- (rt0.c1)))IS NOT((NOT (vt0.c0))))) ORDER BY (((vt0.c0, rt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)/(rt0.c3)), ((((rt0.c2)AND(0X1ce66962)))OR(rt0.c2)), NULLIF(2.00834687E8, rt0.c0))) AND ((((rt0.c0)/(rt0.c3)), ((((rt0.c2)AND(NULL)))AND(rt0.c1)), CAST('' AS TEXT))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))<((NULL)))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)))AND((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))<((NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)))AND((+ (rt0.c0)))) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))<((NULL)))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)))AND((+ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ())))<((NULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)))AND((+ (rt0.c0)))) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0 IN ())))<((NULL)))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(((rt0.c3)-(rt0.c2)))))AND(rt0.c2 COLLATE BINARY)))AND(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 ELSE vt0.c0 END)))AND((+ (rt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-436461151') IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((UNLIKELY(rt0.c0))) AND ((((rt0.c3) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-436461151') IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((UNLIKELY(rt0.c0))) AND ((((rt0.c3) IS TRUE)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-436461151') IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((UNLIKELY(rt0.c0))) AND ((((rt0.c3) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('-436461151') IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((UNLIKELY(rt0.c0))) AND ((((rt0.c3) IS TRUE)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-436461151') IS FALSE)) ORDER BY (((rt0.c1)) BETWEEN ((UNLIKELY(rt0.c0))) AND ((((rt0.c3) IS TRUE)))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (9.79856805E8);
SELECT SUM(count) FROM (SELECT ((9.79856805E8) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (9.79856805E8);
SELECT SUM(count) FROM (SELECT ((9.79856805E8) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (9.79856805E8);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((UPPER(vt0.c0), ((vt0.c0) NOT NULL), 'wEI+>l{' COLLATE RTRIM))==((vt0.c0, (NOT (vt0.c0)), NULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((UPPER(vt0.c0), ((vt0.c0) NOT NULL), 'wEI+>l{' COLLATE RTRIM))=((vt0.c0, (NOT (vt0.c0)), NULL))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((UPPER(vt0.c0), ((vt0.c0) NOT NULL), 'wEI+>l{' COLLATE RTRIM))==((vt0.c0, (NOT (vt0.c0)), NULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((UPPER(vt0.c0), ((vt0.c0) NOT NULL), 'wEI+>l{' COLLATE RTRIM))=((vt0.c0, (NOT (vt0.c0)), NULL))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((UPPER(vt0.c0), ((vt0.c0) NOT NULL), 'wEI+>l{' COLLATE RTRIM))==((vt0.c0, (NOT (vt0.c0)), NULL)));
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (HEX(DISTINCT NULL));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))&(CAST(rt0.c2 AS TEXT))) WHERE (CAST((((rt0.c2))<((rt0.c3))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))<((rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))&(CAST(rt0.c2 AS TEXT))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))&(CAST(rt0.c2 AS TEXT))) WHERE (CAST((((rt0.c2))<((rt0.c3))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2))<((rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))&(CAST(rt0.c2 AS TEXT))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) IS TRUE))&(CAST(rt0.c2 AS TEXT))) WHERE (CAST((((rt0.c2))<((rt0.c3))) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))))<>((0.9190977257193952)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))))!=((0.9190977257193952))));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))))<>((0.9190977257193952)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))))!=((0.9190977257193952))));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))))<>((0.9190977257193952)));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(vt0.c0 AS INTEGER))) WHERE (((((rt0.c3)OR(0.46003515289118324)))AND(LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(0.46003515289118324)))AND(LOWER(rt0.c3)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(vt0.c0 AS INTEGER))) WHERE (((((rt0.c3)OR(0.46003515289118324)))AND(LOWER(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR(0.46003515289118324)))AND(LOWER(rt0.c3)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (CAST(vt0.c0 AS INTEGER))) WHERE (((((rt0.c3)OR(0.46003515289118324)))AND(LOWER(rt0.c3))));
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE '1345198836'  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)||(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE '1345198836'  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)||(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE '1345198836'  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)||(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE '1345198836'  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)||(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((vt0.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CASE '1345198836'  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)), ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), ((vt0.c0)||(vt0.c0)) COLLATE BINARY DESC;
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0, rt0 WHERE ((('~Ox') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('~Ox') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((('~Ox') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((('~Ox') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((('~Ox') BETWEEN (rt0.c0) AND (rt0.c2 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((+ (rt0.c1))) IS TRUE));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN (((- (0Xfffffffffeeb754a)), ((rt0.c0)GLOB(rt0.c1)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, rt0.c3, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN (((- (0Xfffffffffeeb754a)), ((rt0.c0)GLOB(rt0.c1)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, rt0.c3, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN (((- (0Xfffffffffeeb754a)), ((rt0.c0)GLOB(rt0.c1)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, rt0.c3, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN (((- (0Xfffffffffeeb754a)), ((rt0.c0)GLOB(rt0.c1)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, rt0.c3, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN (((- (0Xfffffffffeeb754a)), ((rt0.c0)GLOB(rt0.c1)), CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c2, rt0.c3, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE) WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS TRUE) WHERE ((- (NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0)))>>(((rt0.c3)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))>>(((rt0.c3)%(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0)))>>(((rt0.c3)%(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))>>(((rt0.c3)%(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c0)))>>(((rt0.c3)%(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (0.48264122305759793);
SELECT SUM(count) FROM (SELECT ((0.48264122305759793) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.48264122305759793);
SELECT SUM(count) FROM (SELECT ((0.48264122305759793) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (0.48264122305759793);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (HEX(DISTINCT (~ (vt0.c0)))) ORDER BY vt0.c0;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS TEXT))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS TEXT))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS TEXT))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS TEXT))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((ABS(vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS TEXT))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt0.c0, CAST(vt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)IS NOT(rt0.c2)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((~ (vt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c3)|(rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((~ (vt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c3)|(rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((~ (vt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c3)|(rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((~ (vt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c3)|(rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE ((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN (((~ (vt0.c0)), CAST(vt0.c0 AS TEXT), ((rt0.c3)|(rt0.c0)))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), rt0.c0, ((((rt0.c0)AND(vt0.c0)))OR(rt0.c2))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0))>((vt0.c0)))) NOTNULL));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((CAST(rt0.c1 AS TEXT)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((((vt0.c0, rt0.c1, rt0.c0))>=((rt0.c0, vt0.c0, vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((TRIM(rt0.c2, rt0.c3))/(((rt0.c0)IS NOT(rt0.c3))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((SUBSTR(rt0.c3, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((TRIM(rt0.c2, rt0.c3))/(((rt0.c0)IS NOT(rt0.c3))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((SUBSTR(rt0.c3, rt0.c0)))) DESC);
SELECT * FROM rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((TRIM(rt0.c2, rt0.c3))/(((rt0.c0)IS NOT(rt0.c3))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((SUBSTR(rt0.c3, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((TRIM(rt0.c2, rt0.c3))/(((rt0.c0)IS NOT(rt0.c3))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((SUBSTR(rt0.c3, rt0.c0)))) DESC);
SELECT * FROM rt0, vt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (CASE WHEN rt0.c1 THEN vt0.c0 END))) ORDER BY ((TRIM(rt0.c2, rt0.c3))/(((rt0.c0)IS NOT(rt0.c3))))  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((SUBSTR(rt0.c3, rt0.c0)))) DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c3)<(rt0.c1)) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c1)LIKE(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c3)<(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c1)LIKE(rt0.c3)))) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c3)<(rt0.c1)) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c1)LIKE(rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c3)<(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c1)LIKE(rt0.c3)))) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN ((rt0.c3)<(rt0.c1)) END) ORDER BY ((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c3 COLLATE BINARY) AND (((rt0.c1)LIKE(rt0.c3)))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)==(((rt0.c3)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(((rt0.c3)*(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)==(((rt0.c3)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)==(((rt0.c3)*(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)==(((rt0.c3)*(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))!=(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))!=(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))!=(NULL)));
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN '277962177' WHEN vt0.c0 THEN '1775712594' WHEN vt0.c0 THEN '1009226285' END)OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ASC, ((((((((((((((((vt0.c0)OR(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN '277962177' WHEN vt0.c0 THEN '1775712594' WHEN vt0.c0 THEN '1009226285' END)OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ASC, ((((((((((((((((vt0.c0)OR(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN '277962177' WHEN vt0.c0 THEN '1775712594' WHEN vt0.c0 THEN '1009226285' END)OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ASC, ((((((((((((((((vt0.c0)OR(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN vt0.c0 THEN '277962177' WHEN vt0.c0 THEN '1775712594' WHEN vt0.c0 THEN '1009226285' END)OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ASC, ((((((((((((((((vt0.c0)OR(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN '277962177' WHEN vt0.c0 THEN '1775712594' WHEN vt0.c0 THEN '1009226285' END)OR(vt0.c0 COLLATE RTRIM)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0, vt0.c0, x''))>=((vt0.c0, vt0.c0, vt0.c0)))))<=((((vt0.c0) BETWEEN (vt0.c0) AND (x''))))) ASC, ((((((((((((((((vt0.c0)OR(x'')))OR(NULL)))AND(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CHAR(GLOB(vt0.c0, vt0.c0))) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0.1924879780108828;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(GLOB(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0.1924879780108828);
SELECT COUNT(*) FROM vt0 WHERE (CHAR(GLOB(vt0.c0, vt0.c0))) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0.1924879780108828;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(GLOB(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0.1924879780108828);
SELECT COUNT(*) FROM vt0 WHERE (CHAR(GLOB(vt0.c0, vt0.c0))) ORDER BY (- ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))), 0.1924879780108828;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<<((~ (rt0.c3))))) ORDER BY COALESCE(MIN(rt0.c0, rt0.c2), CAST(rt0.c3 AS BLOB)), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<<((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(MIN(rt0.c0, rt0.c2), CAST(rt0.c3 AS BLOB)), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<<((~ (rt0.c3))))) ORDER BY COALESCE(MIN(rt0.c0, rt0.c2), CAST(rt0.c3 AS BLOB)), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<<((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(MIN(rt0.c0, rt0.c2), CAST(rt0.c3 AS BLOB)), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<<((~ (rt0.c3))))) ORDER BY COALESCE(MIN(rt0.c0, rt0.c2), CAST(rt0.c3 AS BLOB)), CAST(rt0.c0 AS BLOB) COLLATE RTRIM ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (0.5002398713957368);
SELECT SUM(count) FROM (SELECT ((0.5002398713957368) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.5002398713957368);
SELECT SUM(count) FROM (SELECT ((0.5002398713957368) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.5002398713957368);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS INTEGER))))AND((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT BETWEEN (0.914714039417987) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ')V';
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT BETWEEN (0.914714039417987) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ')V');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT BETWEEN (0.914714039417987) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ')V';
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT BETWEEN (0.914714039417987) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ')V');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3)))) NOT BETWEEN (0.914714039417987) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ORDER BY ')V';
SELECT ALL COUNT(*) FROM rt0 WHERE ((IFNULL(DISTINCT rt0.c2, rt0.c3) IN (((((rt0.c2)OR(rt0.c2)))OR('2027337899')))));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT rt0.c2, rt0.c3) IN (((((rt0.c2)OR(rt0.c2)))OR('2027337899'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((IFNULL(DISTINCT rt0.c2, rt0.c3) IN (((((rt0.c2)OR(rt0.c2)))OR('2027337899')))));
SELECT SUM(count) FROM (SELECT ALL (((IFNULL(DISTINCT rt0.c2, rt0.c3) IN (((((rt0.c2)OR(rt0.c2)))OR('2027337899'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((IFNULL(DISTINCT rt0.c2, rt0.c3) IN (((((rt0.c2)OR(rt0.c2)))OR('2027337899')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5836343473765728)OR(((rt0.c2)LIKE(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5836343473765728)OR(((rt0.c2)LIKE(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5836343473765728)OR(((rt0.c2)LIKE(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0.5836343473765728)OR(((rt0.c2)LIKE(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((0.5836343473765728)OR(((rt0.c2)LIKE(rt0.c2)))))OR(((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))) ORDER BY (NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((vt0.c0 IN ()))) ORDER BY 0.8842219828464647  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY 0.8842219828464647  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((vt0.c0 IN ()))) ORDER BY 0.8842219828464647  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_valid((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY 0.8842219828464647  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_valid((vt0.c0 IN ()))) ORDER BY 0.8842219828464647  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))&(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL))&(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))&(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) ISNULL))&(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL))&(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR('TXZ0')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)>>(0.9009960171640683)))))AND(((vt0.c0)=(vt0.c0)))))AND((((vt0.c0))<((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR('TXZ0')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)>>(0.9009960171640683)))))AND(((vt0.c0)==(vt0.c0)))))AND((((vt0.c0))<((NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR('TXZ0')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)>>(0.9009960171640683)))))AND(((vt0.c0)=(vt0.c0)))))AND((((vt0.c0))<((NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR('TXZ0')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)>>(0.9009960171640683)))))AND(((vt0.c0)==(vt0.c0)))))AND((((vt0.c0))<((NULL)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR('TXZ0')))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0)>>(0.9009960171640683)))))AND(((vt0.c0)=(vt0.c0)))))AND((((vt0.c0))<((NULL))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(((rt0.c1)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)LIKE(((rt0.c1)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((NULL)LIKE(((rt0.c1)<(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT SUM(count) FROM (SELECT ((ROUND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), vt0.c0));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(x'a2fc')))AND(vt0.c0)) THEN '' WHEN (rt0.c0 IN ()) THEN ((NULL) IS FALSE) WHEN CAST(rt0.c2 AS BLOB) THEN x'' ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(x'a2fc')))AND(vt0.c0)) THEN '' WHEN (rt0.c0 IN ()) THEN ((NULL) IS FALSE) WHEN CAST(rt0.c2 AS BLOB) THEN x'' ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(x'a2fc')))AND(vt0.c0)) THEN '' WHEN (rt0.c0 IN ()) THEN ((NULL) IS FALSE) WHEN CAST(rt0.c2 AS BLOB) THEN x'' ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(x'a2fc')))AND(vt0.c0)) THEN '' WHEN (rt0.c0 IN ()) THEN ((NULL) IS FALSE) WHEN CAST(rt0.c2 AS BLOB) THEN x'' ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)))AND(x'a2fc')))AND(vt0.c0)) THEN '' WHEN (rt0.c0 IN ()) THEN ((NULL) IS FALSE) WHEN CAST(rt0.c2 AS BLOB) THEN x'' ELSE CAST(rt0.c1 AS REAL) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN -5.32796889E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 0.46507873572486247 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c1 THEN (- (rt0.c3)) WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END) ORDER BY CAST('' COLLATE BINARY AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN -5.32796889E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 0.46507873572486247 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c1 THEN (- (rt0.c3)) WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST('' COLLATE BINARY AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN -5.32796889E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 0.46507873572486247 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c1 THEN (- (rt0.c3)) WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END) ORDER BY CAST('' COLLATE BINARY AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN -5.32796889E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 0.46507873572486247 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c1 THEN (- (rt0.c3)) WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST('' COLLATE BINARY AS BLOB) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE CASE WHEN -5.32796889E8 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN 0.46507873572486247 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END  WHEN rt0.c1 THEN (- (rt0.c3)) WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) ISNULL) WHEN LOWER(DISTINCT rt0.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) END) ORDER BY CAST('' COLLATE BINARY AS BLOB) ASC;
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) BETWEEN ((((rt0.c3, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, 1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1)))) AND (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2))))) ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0, rt0.c3, rt0.c2))>=((rt0.c0, vt0.c0, 0.40992777691946947))))) AND (((rt0.c2 IN (rt0.c1, rt0.c3))))) DESC, '1085837021';
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN ((((rt0.c3, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, 1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1)))) AND (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0, rt0.c3, rt0.c2))>=((rt0.c0, vt0.c0, 0.40992777691946947))))) AND (((rt0.c2 IN (rt0.c1, rt0.c3))))) DESC, '1085837021');
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) BETWEEN ((((rt0.c3, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, 1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1)))) AND (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2))))) ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0, rt0.c3, rt0.c2))>=((rt0.c0, vt0.c0, 0.40992777691946947))))) AND (((rt0.c2 IN (rt0.c1, rt0.c3))))) DESC, '1085837021';
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN ((((rt0.c3, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, 1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1)))) AND (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0, rt0.c3, rt0.c2))>=((rt0.c0, vt0.c0, 0.40992777691946947))))) AND (((rt0.c2 IN (rt0.c1, rt0.c3))))) DESC, '1085837021');
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN ())) BETWEEN ((((rt0.c3, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, 1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1)))) AND (((((rt0.c3)AND(rt0.c3)))OR(rt0.c2))))) ORDER BY (((rt0.c1)) BETWEEN (((((vt0.c0, rt0.c3, rt0.c2))>=((rt0.c0, vt0.c0, 0.40992777691946947))))) AND (((rt0.c2 IN (rt0.c1, rt0.c3))))) DESC, '1085837021';
SELECT ALL * FROM rt0 WHERE (CAST(-775823167 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(-775823167 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(-775823167 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(-775823167 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(-775823167 AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (+ (vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (+ (vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (+ (vt0.c0)))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (vt0.c0) AND (LIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) ISNULL), 0.1532218077472296)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) ISNULL), 0.1532218077472296)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) ISNULL), 0.1532218077472296)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) ISNULL), 0.1532218077472296)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0)*(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) ISNULL), 0.1532218077472296)) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(((vt0.c0)*(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))OR(-1048372089)) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY '-p'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))OR(-1048372089)) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '-p'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))OR(-1048372089)) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY '-p'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))OR(-1048372089)) ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY '-p'  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE (~ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)OR(vt0.c0)))OR(-1048372089)) ELSE (vt0.c0 IN (vt0.c0)) END) ORDER BY '-p'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c0)))>((((rt0.c3))!=((rt0.c0))))) WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c0)))>((((rt0.c3))!=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c0)))>((((rt0.c3))!=((rt0.c0))))) WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c0)))>((((rt0.c3))!=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c3)IS NOT(rt0.c0)))>((((rt0.c3))!=((rt0.c0))))) WHERE (((IFNULL(DISTINCT rt0.c1, rt0.c2)) NOTNULL));
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(TRIM(vt0.c0) AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (STRFTIME(((0xffffffffff01a279)>>(rt0.c0)), (rt0.c0 IN (rt0.c0, x'')), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((0Xffffffffff01a279)>>(rt0.c0)), (rt0.c0 IN (rt0.c0, x'')), (+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME(((0xffffffffff01a279)>>(rt0.c0)), (rt0.c0 IN (rt0.c0, x'')), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((0Xffffffffff01a279)>>(rt0.c0)), (rt0.c0 IN (rt0.c0, x'')), (+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (STRFTIME(((0xffffffffff01a279)>>(rt0.c0)), (rt0.c0 IN (rt0.c0, x'')), (+ (vt0.c0))));
SELECT ALL * FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CAST(vt0.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CAST(vt0.c0 AS NUMERIC))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS TEXT)) ORDER BY LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (NULL)), CAST(vt0.c0 AS NUMERIC))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ('k됸&kLgZJR') AND (CAST('0.4346394656891065' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) BETWEEN ('k됸&kLgZJR') AND (CAST('0.4346394656891065' AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ('k됸&kLgZJR') AND (CAST('0.4346394656891065' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) BETWEEN ('k됸&kLgZJR') AND (CAST('0.4346394656891065' AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ('k됸&kLgZJR') AND (CAST('0.4346394656891065' AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((- (rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(rt0.c3 COLLATE RTRIM)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR('VSpNGqcmx')))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((((- (rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(rt0.c3 COLLATE RTRIM)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR('VSpNGqcmx')))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((- (rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(rt0.c3 COLLATE RTRIM)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR('VSpNGqcmx')))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((((- (rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(rt0.c3 COLLATE RTRIM)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR('VSpNGqcmx')))AND(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((((((- (rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))OR((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))))OR(rt0.c3 COLLATE RTRIM)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR('VSpNGqcmx')))AND(NULL)));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) ISNULL))AND(LOWER(vt0.c0))))AND((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))AND(LOWER(vt0.c0))))AND((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) ISNULL))AND(LOWER(vt0.c0))))AND((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) ISNULL))AND(LOWER(vt0.c0))))AND((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ())) ORDER BY ((((((vt0.c0) ISNULL))AND(LOWER(vt0.c0))))AND((~ (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3) IS TRUE) IN (0.552549701281795)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) IS TRUE) IN (0.552549701281795))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3) IS TRUE) IN (0.552549701281795)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) IS TRUE) IN (0.552549701281795))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c3) IS TRUE) IN (0.552549701281795)));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1)))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1)))<=(vt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1)))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1)))<=(vt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1)))<=(vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL)) ISNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL)) ISNULL) DESC);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY ((((rt0.c1) NOTNULL)) ISNULL) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('-605788307' AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('-605788307' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('-605788307' AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST('-605788307' AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST('-605788307' AS INTEGER) COLLATE BINARY);
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c0) IS TRUE)) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c0) IS TRUE)) AND ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c0) IS TRUE)) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>=(rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c0) IS TRUE)) AND ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1)>=(rt0.c3)) COLLATE NOCASE) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (((rt0.c0) IS TRUE)) AND ((NOT (rt0.c0))));
SELECT * FROM vt0, rt0 WHERE (json_quote(CAST(0.9657724256650582 AS BLOB))) ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(0.9657724256650582 AS BLOB))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (json_quote(CAST(0.9657724256650582 AS BLOB))) ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(0.9657724256650582 AS BLOB))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c0 IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (0xffffffffba5d91ab) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (0xffffffffba5d91ab) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (0xffffffffba5d91ab) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) BETWEEN (0xffffffffba5d91ab) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (0xffffffffba5d91ab) AND (rt0.c1)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (x'') AND ((NOT (rt0.c0)))), (NOT ((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (x'') AND ((NOT (rt0.c0)))), (NOT ((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (x'') AND ((NOT (rt0.c0)))), (NOT ((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (x'') AND ((NOT (rt0.c0)))), (NOT ((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1) ORDER BY ((rt0.c1)>>(rt0.c1)) COLLATE RTRIM ASC  NULLS FIRST, ((LIKELY(DISTINCT rt0.c0)) NOT BETWEEN (x'') AND ((NOT (rt0.c0)))), (NOT ((rt0.c1 IN ())))  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(0.6786475489138792))  NULLS LAST, ((NULL)!=(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN (((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(0.6786475489138792))  NULLS LAST, ((NULL)<>(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(0.6786475489138792))  NULLS LAST, ((NULL)!=(vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<=(vt0.c0)) IN (((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(0.6786475489138792))  NULLS LAST, ((NULL)<>(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)<=(vt0.c0)) IN (((vt0.c0) NOT NULL), vt0.c0 COLLATE BINARY))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(0.6786475489138792))  NULLS LAST, ((NULL)!=(vt0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.09246610253256582);
SELECT SUM(count) FROM (SELECT ALL ((0.09246610253256582) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.09246610253256582);
SELECT SUM(count) FROM (SELECT ALL ((0.09246610253256582) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.09246610253256582);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2)LIKE(vt0.c0)) COLLATE NOCASE WHERE (((CAST(rt0.c2 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)OR(vt0.c0)), (((vt0.c0, vt0.c0, -1938209247))>=((0.4346394656891065, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)OR(vt0.c0)), (((vt0.c0, vt0.c0, -1938209247))>=((0.4346394656891065, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)OR(vt0.c0)), (((vt0.c0, vt0.c0, -1938209247))>=((0.4346394656891065, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)OR(vt0.c0)), (((vt0.c0, vt0.c0, -1938209247))>=((0.4346394656891065, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)OR(vt0.c0)), (((vt0.c0, vt0.c0, -1938209247))>=((0.4346394656891065, vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (TRIM(DISTINCT rt0.c0)) AND ((NOT (rt0.c3)))));
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c2 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c2 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ ((rt0.c2 IN (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, NULL, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, NULL, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, NULL, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, NULL, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c0, NULL, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c3 AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(x'')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>>(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(x'')));
SELECT * FROM vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((INSTR('-1692361483', rt0.c3))OR(((rt0.c3) NOTNULL))))AND((~ (''))))) ORDER BY x'' DESC, UPPER(1.507690169E9) ASC, IFNULL((((rt0.c2, rt0.c1, vt0.c0))<((0.1956664938222099, rt0.c0, rt0.c3))), ((rt0.c0)%(rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((INSTR('-1692361483', rt0.c3))OR(((rt0.c3) NOTNULL))))AND((~ (''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC, UPPER(1.507690169E9) ASC, IFNULL((((rt0.c2, rt0.c1, vt0.c0))<((0.1956664938222099, rt0.c0, rt0.c3))), ((rt0.c0)%(rt0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((INSTR('-1692361483', rt0.c3))OR(((rt0.c3) NOTNULL))))AND((~ (''))))) ORDER BY x'' DESC, UPPER(1.507690169E9) ASC, IFNULL((((rt0.c2, rt0.c1, vt0.c0))<((0.1956664938222099, rt0.c0, rt0.c3))), ((rt0.c0)%(rt0.c3))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((INSTR('-1692361483', rt0.c3))OR(((rt0.c3) NOTNULL))))AND((~ (''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'' DESC, UPPER(1.507690169E9) ASC, IFNULL((((rt0.c2, rt0.c1, vt0.c0))<((0.1956664938222099, rt0.c0, rt0.c3))), ((rt0.c0)%(rt0.c3))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((INSTR('-1692361483', rt0.c3))OR(((rt0.c3) NOTNULL))))AND((~ (''))))) ORDER BY x'' DESC, UPPER(1.507690169E9) ASC, IFNULL((((rt0.c2, rt0.c1, vt0.c0))<((0.1956664938222099, rt0.c0, rt0.c3))), ((rt0.c0)%(rt0.c3))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (1914371025)));
SELECT SUM(count) FROM (SELECT (((NOT (1914371025))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (1914371025)));
SELECT SUM(count) FROM (SELECT (((NOT (1914371025))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (1914371025)));
SELECT COUNT(*) FROM rt0 WHERE (((0Xffffffffe62100a0) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffe62100a0) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0Xffffffffe62100a0) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((0xffffffffe62100a0) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((0Xffffffffe62100a0) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE NULL END THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c3 END) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST, ((((x'097e343c') NOTNULL))OR((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE NULL END THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST, ((((x'097e343c') NOTNULL))OR((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE NULL END THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c3 END) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST, ((((x'097e343c') NOTNULL))OR((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE NULL END THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST, ((((x'097e343c') NOTNULL))OR((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE NULL END THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c3 END) ORDER BY (NOT ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))  NULLS FIRST, ((((x'097e343c') NOTNULL))OR((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN QUOTE(vt0.c0) THEN NULL END) ORDER BY MIN((vt0.c0 IN (vt0.c0)), (vt0.c0 IN (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0)<(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN QUOTE(vt0.c0) THEN NULL END) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN((vt0.c0 IN (vt0.c0)), (vt0.c0 IN (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0)<(rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN QUOTE(vt0.c0) THEN NULL END) ORDER BY MIN((vt0.c0 IN (vt0.c0)), (vt0.c0 IN (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0)<(rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN QUOTE(vt0.c0) THEN NULL END) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN((vt0.c0 IN (vt0.c0)), (vt0.c0 IN (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0)<(rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN QUOTE(vt0.c0) THEN NULL END) ORDER BY MIN((vt0.c0 IN (vt0.c0)), (vt0.c0 IN (rt0.c1)), ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((vt0.c0)<(rt0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN 0.2900703361527901 WHEN '-742315338' THEN vt0.c0 END, (NOT ('-2145946088')), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))==((TOTAL_CHANGES(), (~ (rt0.c1)), ((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN 0.2900703361527901 WHEN '-742315338' THEN vt0.c0 END, (NOT ('-2145946088')), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))==((TOTAL_CHANGES(), (~ (rt0.c1)), ((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN 0.2900703361527901 WHEN '-742315338' THEN vt0.c0 END, (NOT ('-2145946088')), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))==((TOTAL_CHANGES(), (~ (rt0.c1)), ((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN 0.2900703361527901 WHEN '-742315338' THEN vt0.c0 END, (NOT ('-2145946088')), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))==((TOTAL_CHANGES(), (~ (rt0.c1)), ((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON CASE WHEN (rt0.c1 IN ()) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) ELSE CAST(vt0.c0 AS BLOB) END WHERE ((((CASE WHEN rt0.c3 THEN rt0.c3 WHEN vt0.c0 THEN 0.2900703361527901 WHEN '-742315338' THEN vt0.c0 END, (NOT ('-2145946088')), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 END))==((TOTAL_CHANGES(), (~ (rt0.c1)), ((rt0.c1) IS TRUE)))));
SELECT * FROM rt0 WHERE ((NOT (('' IN (rt0.c3, rt0.c3))))) ORDER BY ((((((rt0.c0)AND(0.6775199323218549)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (('' IN (rt0.c3, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(0.6775199323218549)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (('' IN (rt0.c3, rt0.c3))))) ORDER BY ((((((rt0.c0)AND(0.6775199323218549)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (('' IN (rt0.c3, rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)AND(0.6775199323218549)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (('' IN (rt0.c3, rt0.c3))))) ORDER BY ((((((rt0.c0)AND(0.6775199323218549)))AND(rt0.c0)))OR(CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c1 IN ()) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE '趩vc' END WHEN ((rt0.c0)LIKE(rt0.c2)) THEN x'ae0b' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c1 IN ()) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE '趩vc' END WHEN ((rt0.c0)LIKE(rt0.c2)) THEN x'ae0b' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c1 IN ()) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE '趩vc' END WHEN ((rt0.c0)LIKE(rt0.c2)) THEN x'ae0b' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c1 IN ()) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE '趩vc' END WHEN ((rt0.c0)LIKE(rt0.c2)) THEN x'ae0b' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN (rt0.c1 IN ()) THEN CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 ELSE '趩vc' END WHEN ((rt0.c0)LIKE(rt0.c2)) THEN x'ae0b' WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN vt0.c0 COLLATE BINARY END) ORDER BY CAST(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>=(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))>=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>=(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) ISNULL))>=(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) ISNULL))>=(((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(DISTINCT rt0.c2, NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(DISTINCT rt0.c2, NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(DISTINCT rt0.c2, NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON IFNULL(DISTINCT rt0.c2, NULL));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON IFNULL(DISTINCT rt0.c2, NULL) WHERE (rt0.c3);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c2))) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, CAST((rt0.c2 IN ()) AS INTEGER), (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, CAST((rt0.c2 IN ()) AS INTEGER), (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c2))) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, CAST((rt0.c2 IN ()) AS INTEGER), (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, CAST((rt0.c2 IN ()) AS INTEGER), (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)))OR(rt0.c2))) ORDER BY (NOT (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST, CAST((rt0.c2 IN ()) AS INTEGER), (~ (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) WHEN 2057080377 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2032914530))) END) ORDER BY (+ (NULL)) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) WHEN 2057080377 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2032914530))) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (+ (NULL)) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) WHEN 2057080377 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2032914530))) END) ORDER BY (+ (NULL)) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) WHEN 2057080377 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2032914530))) END) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (+ (NULL)) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0) IS FALSE) WHEN 2057080377 COLLATE RTRIM THEN (NOT (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((2032914530))) END) ORDER BY (+ (NULL)) ASC, ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ())) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((INSTR(rt0.c1, vt0.c0), ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2))))>((((rt0.c2) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((0.32387742527516683)<<(rt0.c0)))))) ORDER BY CHAR((((-421185245, rt0.c3, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2)))), CAST((- (rt0.c3)) AS INTEGER) ASC, ((((rt0.c3)<>(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((INSTR(rt0.c1, vt0.c0), ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2))))>((((rt0.c2) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((0.32387742527516683)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHAR((((-421185245, rt0.c3, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2)))), CAST((- (rt0.c3)) AS INTEGER) ASC, ((((rt0.c3)!=(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((INSTR(rt0.c1, vt0.c0), ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2))))>((((rt0.c2) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((0.32387742527516683)<<(rt0.c0)))))) ORDER BY CHAR((((-421185245, rt0.c3, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2)))), CAST((- (rt0.c3)) AS INTEGER) ASC, ((((rt0.c3)<>(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((INSTR(rt0.c1, vt0.c0), ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2))))>((((rt0.c2) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((0.32387742527516683)<<(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CHAR((((-421185245, rt0.c3, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2)))), CAST((- (rt0.c3)) AS INTEGER) ASC, ((((rt0.c3)!=(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((INSTR(rt0.c1, vt0.c0), ((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), (rt0.c0 IN (rt0.c2))))>((((rt0.c2) IS FALSE), ((rt0.c2)AND(rt0.c3)), ((0.32387742527516683)<<(rt0.c0)))))) ORDER BY CHAR((((-421185245, rt0.c3, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2)))), CAST((- (rt0.c3)) AS INTEGER) ASC, ((((rt0.c3)<>(rt0.c2))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))<<(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE))<<(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN -1436072218 WHEN NULL THEN NULL WHEN x'' THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN -1436072218 WHEN NULL THEN NULL WHEN x'' THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) ISNULL)) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN -1436072218 WHEN NULL THEN NULL WHEN x'' THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c3 THEN -1436072218 WHEN NULL THEN NULL WHEN x'' THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) ISNULL)) DESC);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c3 THEN -1436072218 WHEN NULL THEN NULL WHEN x'' THEN rt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY IFNULL(((rt0.c2) NOT NULL), ((rt0.c0) ISNULL)) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (NULL, x''))) ORDER BY (((vt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (NULL, x''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3) IS FALSE)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (NULL, x''))) ORDER BY (((vt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3) IS FALSE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (NULL, x''))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3) IS FALSE)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN (NULL, x''))) ORDER BY (((vt0.c0)) BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3) IS FALSE)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(DISTINCT (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(DISTINCT (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY NULLIF(DISTINCT (((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(x'')))||(0.9205017689082315))) ORDER BY (((rt0.c3, rt0.c2, '')) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c3)), 0x70fd8051 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ())))), PRINTF(vt0.c0, rt0.c3 COLLATE NOCASE, ((rt0.c0)IS(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(x'')))||(0.9205017689082315))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c2, '')) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c3)), 0x70fd8051 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ())))), PRINTF(vt0.c0, rt0.c3 COLLATE NOCASE, ((rt0.c0)IS(rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(x'')))||(0.9205017689082315))) ORDER BY (((rt0.c3, rt0.c2, '')) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c3)), 0x70fd8051 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ())))), PRINTF(vt0.c0, rt0.c3 COLLATE NOCASE, ((rt0.c0)IS(rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(x'')))||(0.9205017689082315))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c3, rt0.c2, '')) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c3)), 0x70fd8051 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ())))), PRINTF(vt0.c0, rt0.c3 COLLATE NOCASE, ((rt0.c0)IS(rt0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)!=(x'')))||(0.9205017689082315))) ORDER BY (((rt0.c3, rt0.c2, '')) NOT BETWEEN ((((rt0.c2)LIKE(rt0.c3)), 0x70fd8051 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC))) AND (((rt0.c3 IN ()), (NOT (vt0.c0)), (vt0.c0 IN ())))), PRINTF(vt0.c0, rt0.c3 COLLATE NOCASE, ((rt0.c0)IS(rt0.c2))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, 'uT')) NOT BETWEEN (((((rt0.c3))<=((rt0.c1))), (+ (rt0.c0)), ((rt0.c0)IS NOT(rt0.c1)))) AND ((rt0.c2, (((rt0.c0))<=((rt0.c1))), ((((((((rt0.c1)AND(rt0.c3)))AND(x'')))OR(rt0.c2)))AND(rt0.c3)))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, 'uT')) NOT BETWEEN (((((rt0.c3))<=((rt0.c1))), (+ (rt0.c0)), ((rt0.c0)IS NOT(rt0.c1)))) AND ((rt0.c2, (((rt0.c0))<=((rt0.c1))), ((((((((rt0.c1)AND(rt0.c3)))AND(x'')))OR(rt0.c2)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, 'uT')) NOT BETWEEN (((((rt0.c3))<=((rt0.c1))), (+ (rt0.c0)), ((rt0.c0)IS NOT(rt0.c1)))) AND ((rt0.c2, (((rt0.c0))<=((rt0.c1))), ((((((((rt0.c1)AND(rt0.c3)))AND(x'')))OR(rt0.c2)))AND(rt0.c3)))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, 'uT')) NOT BETWEEN (((((rt0.c3))<=((rt0.c1))), (+ (rt0.c0)), ((rt0.c0)IS NOT(rt0.c1)))) AND ((rt0.c2, (((rt0.c0))<=((rt0.c1))), ((((((((rt0.c1)AND(rt0.c3)))AND(x'')))OR(rt0.c2)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, 'uT')) NOT BETWEEN (((((rt0.c3))<=((rt0.c1))), (+ (rt0.c0)), ((rt0.c0)IS NOT(rt0.c1)))) AND ((rt0.c2, (((rt0.c0))<=((rt0.c1))), ((((((((rt0.c1)AND(rt0.c3)))AND(x'')))OR(rt0.c2)))AND(rt0.c3)))))) ORDER BY '';
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((rt0.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((rt0.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN rt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c3) IS TRUE) THEN rt0.c1 COLLATE RTRIM END) ORDER BY ((rt0.c3 IN ()) IN ());
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((0.3904785108965434)) AND ((rt0.c2))) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((0.3904785108965434)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((0.3904785108965434)) AND ((rt0.c2))) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)) BETWEEN ((0.3904785108965434)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2)) BETWEEN ((0.3904785108965434)) AND ((rt0.c2))) IN ())) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((LTRIM(x'', vt0.c0)) NOT BETWEEN (vt0.c0) AND (CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((x'317d29b3')OR(vt0.c0)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(x'', vt0.c0)) NOT BETWEEN (vt0.c0) AND (CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR(((x'317d29b3')OR(vt0.c0)))))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LTRIM(x'', vt0.c0)) NOT BETWEEN (vt0.c0) AND (CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((x'317d29b3')OR(vt0.c0)))))AND(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(x'', vt0.c0)) NOT BETWEEN (vt0.c0) AND (CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR(((x'317d29b3')OR(vt0.c0)))))AND(x''))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LTRIM(x'', vt0.c0)) NOT BETWEEN (vt0.c0) AND (CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((((((vt0.c0) IS TRUE))OR(((x'317d29b3')OR(vt0.c0)))))AND(x''))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((0.791848098839393)>>(0.3684931016236359))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), vt0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((0.791848098839393)>>(0.3684931016236359))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), vt0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((0.791848098839393)>>(0.3684931016236359))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), vt0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((0.791848098839393)>>(0.3684931016236359))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), vt0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((0.791848098839393)>>(0.3684931016236359))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (vt0.c0 COLLATE RTRIM)), vt0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((NOT (NULL)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- ((NOT (NULL)))) ORDER BY CAST(x'' AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((NOT (NULL)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (- ((NOT (NULL)))) ORDER BY CAST(x'' AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (- ((NOT (NULL)))) WHERE ((((vt0.c0)) NOT BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))) AND ((((((rt0.c0)OR(rt0.c1)))AND(vt0.c0)))))) ORDER BY CAST(x'' AS NUMERIC)  NULLS LAST;
SELECT * FROM rt0 WHERE ((MIN(rt0.c1, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((MIN(rt0.c1, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((MIN(rt0.c1, rt0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((MIN(rt0.c1, rt0.c1) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((MIN(rt0.c1, rt0.c1) IN ()));
SELECT ALL * FROM vt0 WHERE (((659241163)IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((659241163)IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((659241163)IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((659241163)IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((659241163)IS(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE json_object(rt0.c1, rt0.c3, rt0.c0, rt0.c3)  WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) END) ORDER BY (SUBSTR(rt0.c3, x'b960') IN (((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE json_object(rt0.c1, rt0.c3, rt0.c0, rt0.c3)  WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (SUBSTR(rt0.c3, x'b960') IN (((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE json_object(rt0.c1, rt0.c3, rt0.c0, rt0.c3)  WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) END) ORDER BY (SUBSTR(rt0.c3, x'b960') IN (((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE json_object(rt0.c1, rt0.c3, rt0.c0, rt0.c3)  WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (SUBSTR(rt0.c3, x'b960') IN (((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE json_object(rt0.c1, rt0.c3, rt0.c0, rt0.c3)  WHEN CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)) END) ORDER BY (SUBSTR(rt0.c3, x'b960') IN (((((vt0.c0)OR(rt0.c0)))OR(rt0.c0)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (((vt0.c0))>=((rt0.c3))) ELSE ((rt0.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE BINARY THEN (((vt0.c0))>=((rt0.c3))) ELSE ((rt0.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (((vt0.c0))>=((rt0.c3))) ELSE ((rt0.c1)GLOB(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE BINARY THEN (((vt0.c0))>=((rt0.c3))) ELSE ((rt0.c1)GLOB(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN rt0.c3 COLLATE BINARY THEN (((vt0.c0))>=((rt0.c3))) ELSE ((rt0.c1)GLOB(rt0.c2)) END);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((('-80176765')AND(rt0.c2)))<=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('-80176765')AND(rt0.c2)))<=((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((('-80176765')AND(rt0.c2)))<=((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('-80176765')AND(rt0.c2)))<=((rt0.c2 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (((('-80176765')AND(rt0.c2)))<=((rt0.c2 IN ())));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) IS TRUE))))) ORDER BY '1e500' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1e500' COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) IS TRUE))))) ORDER BY '1e500' COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1e500' COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((((rt0.c1) IS TRUE))))) ORDER BY '1e500' COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(DISTINCT vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(DISTINCT vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY LIKELY(DISTINCT vt0.c0) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS BLOB))*(vt0.c0 COLLATE BINARY))) ORDER BY LIKELY(DISTINCT vt0.c0) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c2 AS BLOB)))) ORDER BY (NOT (rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c2 AS BLOB)))) ORDER BY (NOT (rt0.c3)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c3)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT(CAST(rt0.c2 AS BLOB)))) ORDER BY (NOT (rt0.c3)) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)IS(((rt0.c0)GLOB(x''))))) ORDER BY (- (rt0.c3)) COLLATE RTRIM COLLATE NOCASE, (NULL IN (CAST(rt0.c1 AS TEXT))) ASC, CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c3, rt0.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)IS(((rt0.c0)GLOB(x''))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c3)) COLLATE RTRIM COLLATE NOCASE, (NULL IN (CAST(rt0.c1 AS TEXT))) ASC, CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c3, rt0.c2) END DESC);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)IS(((rt0.c0)GLOB(x''))))) ORDER BY (- (rt0.c3)) COLLATE RTRIM COLLATE NOCASE, (NULL IN (CAST(rt0.c1 AS TEXT))) ASC, CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c3, rt0.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)IS(((rt0.c0)GLOB(x''))))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c3)) COLLATE RTRIM COLLATE NOCASE, (NULL IN (CAST(rt0.c1 AS TEXT))) ASC, CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c3, rt0.c2) END DESC);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)IS(((rt0.c0)GLOB(x''))))) ORDER BY (- (rt0.c3)) COLLATE RTRIM COLLATE NOCASE, (NULL IN (CAST(rt0.c1 AS TEXT))) ASC, CASE ((rt0.c3)IS NOT(rt0.c2))  WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c3, rt0.c2) END DESC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND (rt0.c2)) WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((x'4c29')*(rt0.c2)))) ORDER BY ((((NULL)IS(vt0.c0))) NOT BETWEEN (((0.7815774909629268) IS FALSE)) AND (rt0.c2)), ((~ (rt0.c2)) IN (PRINTF(rt0.c3, rt0.c1, rt0.c0))), (((vt0.c0)) BETWEEN ((((rt0.c3)==(rt0.c2)))) AND ((rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c2 IN ()), ((x'4c29')*(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND (rt0.c2)) ORDER BY ((((NULL)IS(vt0.c0))) NOT BETWEEN (((0.7815774909629268) IS FALSE)) AND (rt0.c2)), ((~ (rt0.c2)) IN (PRINTF(rt0.c3, rt0.c1, rt0.c0))), (((vt0.c0)) BETWEEN ((((rt0.c3)=(rt0.c2)))) AND ((rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND (rt0.c2)) WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((x'4c29')*(rt0.c2)))) ORDER BY ((((NULL)IS(vt0.c0))) NOT BETWEEN (((0.7815774909629268) IS FALSE)) AND (rt0.c2)), ((~ (rt0.c2)) IN (PRINTF(rt0.c3, rt0.c1, rt0.c0))), (((vt0.c0)) BETWEEN ((((rt0.c3)==(rt0.c2)))) AND ((rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (rt0.c2 IN ()), ((x'4c29')*(rt0.c2)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND (rt0.c2)) ORDER BY ((((NULL)IS(vt0.c0))) NOT BETWEEN (((0.7815774909629268) IS FALSE)) AND (rt0.c2)), ((~ (rt0.c2)) IN (PRINTF(rt0.c3, rt0.c1, rt0.c0))), (((vt0.c0)) BETWEEN ((((rt0.c3)=(rt0.c2)))) AND ((rt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND (rt0.c2)) WHERE (IFNULL(DISTINCT (rt0.c2 IN ()), ((x'4c29')*(rt0.c2)))) ORDER BY ((((NULL)IS(vt0.c0))) NOT BETWEEN (((0.7815774909629268) IS FALSE)) AND (rt0.c2)), ((~ (rt0.c2)) IN (PRINTF(rt0.c3, rt0.c1, rt0.c0))), (((vt0.c0)) BETWEEN ((((rt0.c3)==(rt0.c2)))) AND ((rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN HEX(DISTINCT vt0.c0) THEN ((vt0.c0)GLOB(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (0.09012183783432248) ORDER BY (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.09012183783432248) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (0.09012183783432248) ORDER BY (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.09012183783432248) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (0.09012183783432248) ORDER BY (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((x'')))) NOTNULL)  NULLS LAST, LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (((rt0.c0)IS NOT(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c3 AS NUMERIC) THEN (~ (0Xffffffff8f756c18)) WHEN rt0.c2 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)|(rt0.c2)) THEN HEX(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c3 AS NUMERIC) THEN (~ (0xffffffff8f756c18)) WHEN rt0.c2 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)|(rt0.c2)) THEN HEX(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c3 AS NUMERIC) THEN (~ (0Xffffffff8f756c18)) WHEN rt0.c2 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)|(rt0.c2)) THEN HEX(DISTINCT rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c3 AS NUMERIC) THEN (~ (0xffffffff8f756c18)) WHEN rt0.c2 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)|(rt0.c2)) THEN HEX(DISTINCT rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 END  WHEN CAST(rt0.c3 AS NUMERIC) THEN (~ (0Xffffffff8f756c18)) WHEN rt0.c2 THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c1)|(rt0.c2)) THEN HEX(DISTINCT rt0.c2) END);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((CAST(LAST_INSERT_ROWID() AS TEXT)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(LAST_INSERT_ROWID() AS TEXT)) ORDER BY rt0.c2;
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT CASE WHEN rt0.c0 THEN rt0.c0 END));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(x'')))AND((NOT (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(x'')))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(x'')))AND((NOT (vt0.c0))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(x'')))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<(x'')))AND((NOT (vt0.c0))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (UPPER(rt0.c0) IN (rt0.c2 COLLATE BINARY)) WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (UPPER(rt0.c0) IN (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (UPPER(rt0.c0) IN (rt0.c2 COLLATE BINARY)) WHERE ((NOT ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (UPPER(rt0.c0) IN (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (UPPER(rt0.c0) IN (rt0.c2 COLLATE BINARY)) WHERE ((NOT ((NOT (vt0.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(DISTINCT rt0.c3) END WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY '1457629138';
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(DISTINCT rt0.c3) END ORDER BY '1457629138');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(DISTINCT rt0.c3) END WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY '1457629138';
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(DISTINCT rt0.c3) END ORDER BY '1457629138');
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) THEN LOWER(DISTINCT rt0.c3) END WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY '1457629138';
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<=(NULL)) WHEN CASE '-499468445'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE TYPEOF(DISTINCT '-689582110') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<=(NULL)) WHEN CASE '-499468445'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE TYPEOF(DISTINCT '-689582110') END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<=(NULL)) WHEN CASE '-499468445'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE TYPEOF(DISTINCT '-689582110') END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<=(NULL)) WHEN CASE '-499468445'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE TYPEOF(DISTINCT '-689582110') END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<=(NULL)) WHEN CASE '-499468445'  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN NULL WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE TYPEOF(DISTINCT '-689582110') END);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))!=(''))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)/((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<>(''))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)/((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))!=(''))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)/((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))<>(''))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)/((vt0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))!=(''))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)/((vt0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((HEX(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((HEX(DISTINCT rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((HEX(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((HEX(DISTINCT rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (rt0.c1)))) AND ((HEX(DISTINCT rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)|(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3)|(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(CAST('2124204224' AS NUMERIC)))) ORDER BY ((((vt0.c0)>>(0.6958090745892368))) ISNULL) DESC  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, ((((- (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)OR(CAST('2124204224' AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(0.6958090745892368))) ISNULL) DESC  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, ((((- (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(CAST('2124204224' AS NUMERIC)))) ORDER BY ((((vt0.c0)>>(0.6958090745892368))) ISNULL) DESC  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, ((((- (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)OR(CAST('2124204224' AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>>(0.6958090745892368))) ISNULL) DESC  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, ((((- (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)OR(CAST('2124204224' AS NUMERIC)))) ORDER BY ((((vt0.c0)>>(0.6958090745892368))) ISNULL) DESC  NULLS FIRST, (((- (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, ((((- (vt0.c0))))>=(((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (NULL))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST, 1478374117 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST, 1478374117 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (NULL))) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST, 1478374117 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM  NULLS LAST, 1478374117 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) NOT NULL) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END) ORDER BY x'2eb9';
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) NOT NULL) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) ORDER BY x'2eb9');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) NOT NULL) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END) ORDER BY x'2eb9';
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) NOT NULL) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) ORDER BY x'2eb9');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c2) NOT NULL) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) END) ORDER BY x'2eb9';
SELECT ALL * FROM vt0, rt0 WHERE (((LIKE(rt0.c0, vt0.c0)) BETWEEN ((+ (rt0.c2))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt0.c0, vt0.c0)) BETWEEN ((+ (rt0.c2))) AND (x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((LIKE(rt0.c0, vt0.c0)) BETWEEN ((+ (rt0.c2))) AND (x'')));
SELECT SUM(count) FROM (SELECT ((((LIKE(rt0.c0, vt0.c0)) BETWEEN ((+ (rt0.c2))) AND (x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((LIKE(rt0.c0, vt0.c0)) BETWEEN ((+ (rt0.c2))) AND (x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(vt0.c0, vt0.c0, '.') WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '马C' THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 'hl' END THEN (+ (0x554dee74)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(vt0.c0, vt0.c0, '.') WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '马C' THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 'hl' END THEN (+ (0x554dee74)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(vt0.c0, vt0.c0, '.') WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '马C' THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 'hl' END THEN (+ (0x554dee74)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(vt0.c0, vt0.c0, '.') WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '马C' THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 'hl' END THEN (+ (0x554dee74)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)%(vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN LIKE(vt0.c0, vt0.c0, '.') WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((vt0.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN '马C' THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE 'hl' END THEN (+ (0x554dee74)) WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE BINARY ELSE (vt0.c0 IN (vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (0X6cd28678) AND ((~ (x''))))) ORDER BY UPPER(LIKELY(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (0x6cd28678) AND ((~ (x''))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(LIKELY(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (0X6cd28678) AND ((~ (x''))))) ORDER BY UPPER(LIKELY(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (0x6cd28678) AND ((~ (x''))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(LIKELY(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (0X6cd28678) AND ((~ (x''))))) ORDER BY UPPER(LIKELY(vt0.c0))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((((rt0.c1 IN ()), (rt0.c3 IN ()), (~ (NULL))))>(((rt0.c1 IN (rt0.c2, rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c0) IS FALSE)  WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (~ (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN ()), (rt0.c3 IN ()), (~ (NULL))))>(((rt0.c1 IN (rt0.c2, rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c0) IS FALSE)  WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (~ (rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((((rt0.c1 IN ()), (rt0.c3 IN ()), (~ (NULL))))>(((rt0.c1 IN (rt0.c2, rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c0) IS FALSE)  WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (~ (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 IN ()), (rt0.c3 IN ()), (~ (NULL))))>(((rt0.c1 IN (rt0.c2, rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c0) IS FALSE)  WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (~ (rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c3 COLLATE RTRIM) ORDER BY ((((rt0.c1 IN ()), (rt0.c3 IN ()), (~ (NULL))))>(((rt0.c1 IN (rt0.c2, rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)), CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c0) IS FALSE)  WHEN ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (~ (rt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (LOWER(0x631315aa)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (LOWER(0x631315aa)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (LOWER(0x631315aa)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (LOWER(0x631315aa)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (LOWER(0x631315aa)) AND ((vt0.c0 IN ()))));
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER) DESC, (('-689636221' COLLATE NOCASE)LIKE(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER) DESC, (('-689636221' COLLATE NOCASE)LIKE(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER) DESC, (('-689636221' COLLATE NOCASE)LIKE(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER) DESC, (('-689636221' COLLATE NOCASE)LIKE(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS NUMERIC)) ORDER BY CAST(((vt0.c0)/(rt0.c1)) AS INTEGER) DESC, (('-689636221' COLLATE NOCASE)LIKE(((rt0.c3)IS NOT(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (rt0.c1) AND (((vt0.c0)AND(NULL))))) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, rt0.c3 COLLATE BINARY, ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))))!=((vt0.c0 COLLATE RTRIM, CAST(0xffffffffe1dfb359 AS REAL), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (rt0.c1) AND (((vt0.c0)AND(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, rt0.c3 COLLATE BINARY, ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))))<>((vt0.c0 COLLATE RTRIM, CAST(0Xffffffffe1dfb359 AS REAL), rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (rt0.c1) AND (((vt0.c0)AND(NULL))))) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, rt0.c3 COLLATE BINARY, ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))))!=((vt0.c0 COLLATE RTRIM, CAST(0xffffffffe1dfb359 AS REAL), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (rt0.c1) AND (((vt0.c0)AND(NULL))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, rt0.c3 COLLATE BINARY, ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))))<>((vt0.c0 COLLATE RTRIM, CAST(0Xffffffffe1dfb359 AS REAL), rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (x''))) NOT BETWEEN (rt0.c1) AND (((vt0.c0)AND(NULL))))) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END, rt0.c3 COLLATE BINARY, ((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3))))!=((vt0.c0 COLLATE RTRIM, CAST(0xffffffffe1dfb359 AS REAL), rt0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (rt0.c0))) ORDER BY LIKELY(DISTINCT CASE WHEN NULL THEN rt0.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(DISTINCT CASE WHEN NULL THEN rt0.c2 END)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (rt0.c0))) ORDER BY LIKELY(DISTINCT CASE WHEN NULL THEN rt0.c2 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LIKELY(DISTINCT CASE WHEN NULL THEN rt0.c2 END)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (rt0.c0))) ORDER BY LIKELY(DISTINCT CASE WHEN NULL THEN rt0.c2 END)  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)<(rt0.c3)))=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c3)))==(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)<(rt0.c3)))=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<(rt0.c3)))==(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0)<(rt0.c3)))=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE x''  WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY END) ORDER BY CAST(IFNULL(rt0.c2, rt0.c2) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(IFNULL(rt0.c2, rt0.c2) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE x''  WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY END) ORDER BY CAST(IFNULL(rt0.c2, rt0.c2) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE x''  WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(IFNULL(rt0.c2, rt0.c2) AS INTEGER) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE x''  WHEN (rt0.c3 IN ()) THEN rt0.c2 COLLATE BINARY END) ORDER BY CAST(IFNULL(rt0.c2, rt0.c2) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('Hb') BETWEEN (vt0.c0) AND (rt0.c2)), LIKELY(DISTINCT rt0.c1))) ORDER BY ((((((rt0.c3)=(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (('Hb') BETWEEN (vt0.c0) AND (rt0.c2)), LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)==(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('Hb') BETWEEN (vt0.c0) AND (rt0.c2)), LIKELY(DISTINCT rt0.c1))) ORDER BY ((((((rt0.c3)=(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (('Hb') BETWEEN (vt0.c0) AND (rt0.c2)), LIKELY(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c3)==(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)=(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('Hb') BETWEEN (vt0.c0) AND (rt0.c2)), LIKELY(DISTINCT rt0.c1))) ORDER BY ((((((rt0.c3)=(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0)==(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (HEX(rt0.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (0x53da881 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0X53da881 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0x53da881 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0X53da881 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0x53da881 COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))OR(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 END)AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 END)))OR(CAST(rt0.c1 AS NUMERIC)))) ORDER BY rt0.c3  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<(((NOT (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<(((NOT (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<(((NOT (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<(((NOT (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<(((NOT (rt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)LIKE(vt0.c0)))AND(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END)GLOB((+ (vt0.c0)))) ASC  NULLS LAST, ((((rt0.c3) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(vt0.c0)))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END)GLOB((+ (vt0.c0)))) ASC  NULLS LAST, ((((rt0.c3) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)LIKE(vt0.c0)))AND(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END)GLOB((+ (vt0.c0)))) ASC  NULLS LAST, ((((rt0.c3) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)LIKE(vt0.c0)))AND(rt0.c2))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END)GLOB((+ (vt0.c0)))) ASC  NULLS LAST, ((((rt0.c3) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)LIKE(vt0.c0)))AND(rt0.c2))) ORDER BY ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c3 END)GLOB((+ (vt0.c0)))) ASC  NULLS LAST, ((((rt0.c3) IS FALSE)) IS FALSE)  NULLS FIRST;
