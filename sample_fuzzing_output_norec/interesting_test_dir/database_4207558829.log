-- Time: 2024/06/09 23:54:48
-- Database: database29
-- Database version: 3.40.0
-- seed value: 4207558829
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 TEXT DEFAULT '' ); -- 1ms;
CREATE TEMPORARY TABLE t1 (c0 INTEGER ); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('&Q'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE t1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 3028627455060947452; -- 1ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL), (NULL), ('&Q'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE rt0 SET (c0)=('') WHERE (((rt0.c1)) NOT BETWEEN ((((rt0.c2)-(rt0.c2)))) AND (((+ (rt0.c0))))); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=''; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
PRAGMA journal_mode; -- 0ms;
DELETE FROM rt0; -- 0ms;
ANALYZE rt0; -- 1ms;
PRAGMA cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint = 3644299698862331600; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL rt0.c3 FROM rt0 WHERE ((((((3.0286274550609475E18)AND(x'c0a6')))AND('-1028827850')) IN ())); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
COMMIT; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(0xffffffffc2ad5536); -- 0ms;
REINDEX  rt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
PRAGMA main.recursive_triggers = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA threads = 5134285232892367664; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c0, c3) VALUES (0x554df19a, x'', 0.4661512139553792, x''), ('1431171482', NULL, NULL, 0X683f75fb), (x'', 0.8372775616954086, x'', 0.584801054775695); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES ('c(U)', 'c(U)'); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, NULL); -- 0ms;
UPDATE rt0 SET (c1)=(NULL); -- 1ms;
PRAGMA temp.application_id = -5790219015939948660; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE x'a8e9'  WHEN 1.431171482E9 THEN 0X1540b469 END)); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
REINDEX RTRIM; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT * FROM v0, rt0 WHERE ('') ORDER BY ((CASE v0.c0  WHEN '' THEN rt0.c0 END)||(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE v0.c0  WHEN '' THEN rt0.c0 END)||(x'')) ASC);
SELECT * FROM v0, rt0 WHERE ('') ORDER BY ((CASE v0.c0  WHEN '' THEN rt0.c0 END)||(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0 ORDER BY ((CASE v0.c0  WHEN '' THEN rt0.c0 END)||(x'')) ASC);
SELECT * FROM v0, rt0 WHERE ('') ORDER BY ((CASE v0.c0  WHEN '' THEN rt0.c0 END)||(x'')) ASC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY (+ (((NULL)<=(v0.c0))))  NULLS LAST, (((((((('1300907184')AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(v0.c0)))OR(CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((NULL)<=(v0.c0))))  NULLS LAST, (((((((('1300907184')AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(v0.c0)))OR(CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY (+ (((NULL)<=(v0.c0))))  NULLS LAST, (((((((('1300907184')AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(v0.c0)))OR(CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0 ORDER BY (+ (((NULL)<=(v0.c0))))  NULLS LAST, (((((((('1300907184')AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(v0.c0)))OR(CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY (+ (((NULL)<=(v0.c0))))  NULLS LAST, (((((((('1300907184')AND((- (v0.c0)))))OR(v0.c0 COLLATE BINARY)))OR(v0.c0)))OR(CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN rt0.c2 ELSE LENGTH(x'') END) ORDER BY rt0.c2  NULLS FIRST, RTRIM(NULL) DESC, ((((rt0.c2))<>((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN rt0.c2 ELSE LENGTH(x'') END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, RTRIM(NULL) DESC, ((((rt0.c2))!=((rt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN rt0.c2 ELSE LENGTH(x'') END) ORDER BY rt0.c2  NULLS FIRST, RTRIM(NULL) DESC, ((((rt0.c2))<>((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN rt0.c2 ELSE LENGTH(x'') END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, RTRIM(NULL) DESC, ((((rt0.c2))!=((rt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c0 AS NUMERIC)  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) THEN rt0.c2 ELSE LENGTH(x'') END) ORDER BY rt0.c2  NULLS FIRST, RTRIM(NULL) DESC, ((((rt0.c2))<>((rt0.c1))) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(DISTINCT rt0.c1)) NOT NULL) WHERE (('' IN ())) ORDER BY COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(DISTINCT rt0.c1)) NOT NULL) ORDER BY COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(DISTINCT rt0.c1)) NOT NULL) WHERE (('' IN ())) ORDER BY COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(DISTINCT rt0.c1)) NOT NULL) ORDER BY COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((UPPER(DISTINCT rt0.c1)) NOT NULL) WHERE (('' IN ())) ORDER BY COALESCE(DISTINCT CAST(rt0.c0 AS TEXT), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT)) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(x'c5e7')))AND(rt0.c2)))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'c5e7')))AND(rt0.c2)))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(x'c5e7')))AND(rt0.c2)))IS NOT((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(x'c5e7')))AND(rt0.c2)))IS NOT((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(x'c5e7')))AND(rt0.c2)))IS NOT((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((rt0.c3 IN (rt0.c1)))) WHERE (CAST((((rt0.c2))<((rt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- ((rt0.c3 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((rt0.c3 IN (rt0.c1)))) WHERE (CAST((((rt0.c2))<((rt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<((rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (- ((rt0.c3 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (- ((rt0.c3 IN (rt0.c1)))) WHERE (CAST((((rt0.c2))<((rt0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(UNLIKELY(v0.c0) AS INTEGER)) ORDER BY ((v0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))-(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))-(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))-(((v0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))-(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))-(((v0.c0)GLOB(v0.c0)))));
SELECT * FROM v0 WHERE (((((NULL)==(v0.c0)))=(((0x683f75fb) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)=(v0.c0)))==(((0x683f75fb) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((NULL)==(v0.c0)))=(((0x683f75fb) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)=(v0.c0)))==(((0x683f75fb) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((NULL)==(v0.c0)))=(((0x683f75fb) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN (rt0.c2))) ORDER BY (((rt0.c3 IN ()))+(LIKELY('l|꣫ZI')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3 IN ()))+(LIKELY('l|꣫ZI')))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN (rt0.c2))) ORDER BY (((rt0.c3 IN ()))+(LIKELY('l|꣫ZI')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN (rt0.c2))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3 IN ()))+(LIKELY('l|꣫ZI')))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1)) IN (rt0.c2))) ORDER BY (((rt0.c3 IN ()))+(LIKELY('l|꣫ZI')))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)IS(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)IS(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)IS(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)IS(v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.9423336992218516)AND((NOT (v0.c0)))))AND(0.29437704365409934)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9423336992218516)AND((NOT (v0.c0)))))AND(0.29437704365409934))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.9423336992218516)AND((NOT (v0.c0)))))AND(0.29437704365409934)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9423336992218516)AND((NOT (v0.c0)))))AND(0.29437704365409934))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((0.9423336992218516)AND((NOT (v0.c0)))))AND(0.29437704365409934)));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN ((((((((NULL)OR(v0.c0)))AND(rt0.c3)))OR(0x4c0eb678)))OR(rt0.c0)) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) END  NULLS FIRST, 0.6764871245032702 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN ((((((((NULL)OR(v0.c0)))AND(rt0.c3)))OR(0x4c0eb678)))OR(rt0.c0)) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) END  NULLS FIRST, 0.6764871245032702 DESC);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN ((((((((NULL)OR(v0.c0)))AND(rt0.c3)))OR(0x4c0eb678)))OR(rt0.c0)) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) END  NULLS FIRST, 0.6764871245032702 DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN ((((((((NULL)OR(v0.c0)))AND(rt0.c3)))OR(0x4c0eb678)))OR(rt0.c0)) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) END  NULLS FIRST, 0.6764871245032702 DESC);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (((rt0.c3) ISNULL) COLLATE NOCASE) ORDER BY CASE CAST(rt0.c2 AS REAL)  WHEN ((((((((NULL)OR(v0.c0)))AND(rt0.c3)))OR(0x4c0eb678)))OR(rt0.c0)) THEN (((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) END  NULLS FIRST, 0.6764871245032702 DESC;
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c3)>=(RTRIM(rt0.c1)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>=(RTRIM(rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c3)>=(RTRIM(rt0.c1)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3)>=(RTRIM(rt0.c1)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 NOT INDEXED WHERE (((rt0.c3)>=(RTRIM(rt0.c1)))) ORDER BY CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) IS TRUE))>(CAST('3028627455060947452' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))>(CAST('3028627455060947452' AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) IS TRUE))>(CAST('3028627455060947452' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE))>(CAST('3028627455060947452' AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c1) IS TRUE))>(CAST('3028627455060947452' AS TEXT)))  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN v0 ON (((0.940650708058422))<=(((((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0)))))) WHERE (COALESCE(DISTINCT ((rt0.c1) NOTNULL), '', ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), '%OXa**bb')) ORDER BY ((DATETIME(rt0.c3, v0.c0, rt0.c1)) BETWEEN (NULL) AND (0.04371527733113756)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) NOTNULL), '', ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), '%OXa**bb')) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((0.940650708058422))<=(((((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0)))))) ORDER BY ((DATETIME(rt0.c3, v0.c0, rt0.c1)) BETWEEN (NULL) AND (0.04371527733113756)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((0.940650708058422))<=(((((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0)))))) WHERE (COALESCE(DISTINCT ((rt0.c1) NOTNULL), '', ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), '%OXa**bb')) ORDER BY ((DATETIME(rt0.c3, v0.c0, rt0.c1)) BETWEEN (NULL) AND (0.04371527733113756)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) NOTNULL), '', ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), '%OXa**bb')) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((0.940650708058422))<=(((((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0)))))) ORDER BY ((DATETIME(rt0.c3, v0.c0, rt0.c1)) BETWEEN (NULL) AND (0.04371527733113756)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON (((0.940650708058422))<=(((((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0)))))) WHERE (COALESCE(DISTINCT ((rt0.c1) NOTNULL), '', ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)), '%OXa**bb')) ORDER BY ((DATETIME(rt0.c3, v0.c0, rt0.c1)) BETWEEN (NULL) AND (0.04371527733113756)) ASC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((((json_array_length(rt0.c1))OR(CASE v0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)))AND(((((((((rt0.c3)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c2)))))AND(((rt0.c1)IS NOT(rt0.c2)))))OR((NOT (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_array_length(rt0.c1))OR(CASE v0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)))AND(((((((((rt0.c3)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c2)))))AND(((rt0.c1)IS NOT(rt0.c2)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((((json_array_length(rt0.c1))OR(CASE v0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)))AND(((((((((rt0.c3)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c2)))))AND(((rt0.c1)IS NOT(rt0.c2)))))OR((NOT (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((json_array_length(rt0.c1))OR(CASE v0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)))AND(((((((((rt0.c3)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c2)))))AND(((rt0.c1)IS NOT(rt0.c2)))))OR((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((((json_array_length(rt0.c1))OR(CASE v0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END)))AND(((((((((rt0.c3)AND(rt0.c0)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c2)))))AND(((rt0.c1)IS NOT(rt0.c2)))))OR((NOT (rt0.c2))))) ORDER BY rt0.c1 DESC;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(0.4272744905434229)))OR(v0.c0)))<(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(0.4272744905434229)))OR(v0.c0)))<(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(0.4272744905434229)))OR(v0.c0)))<(((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(0.4272744905434229)))OR(v0.c0)))<(((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(0.4272744905434229)))OR(v0.c0)))<(((v0.c0)*(v0.c0)))));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)+(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)+(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN (rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c1 IN (rt0.c3)))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)+(rt0.c2))))) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0)%(((v0.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0)IS(NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)%(((v0.c0)IS(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0)IS(NULL))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)%(((v0.c0)IS(NULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, v0 WHERE (LIKELY(DISTINCT (~ (rt0.c1)))) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0))=((rt0.c3, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (~ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0))==((rt0.c3, rt0.c0, rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (LIKELY(DISTINCT (~ (rt0.c1)))) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0))=((rt0.c3, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (~ (rt0.c1)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0))==((rt0.c3, rt0.c0, rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (LIKELY(DISTINCT (~ (rt0.c1)))) ORDER BY (NOT ((((rt0.c2, rt0.c0, rt0.c0))=((rt0.c3, rt0.c0, rt0.c3)))))  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((rt0.c2)<>(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(x'5e62')) WHEN '1046910129' THEN v0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((rt0.c2)<>(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(x'5e62')) WHEN '1046910129' THEN v0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((rt0.c2)<>(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(x'5e62')) WHEN '1046910129' THEN v0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((rt0.c2)<>(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(x'5e62')) WHEN '1046910129' THEN v0.c0 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN v0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN x'' THEN (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((rt0.c2)<>(rt0.c2)) THEN TYPEOF(rt0.c3) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c1 WHEN (rt0.c1 IN ()) THEN ((rt0.c2)/(x'5e62')) WHEN '1046910129' THEN v0.c0 COLLATE BINARY END  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)IS(rt0.c1)) IN ())) ORDER BY 0x683f75fb  NULLS FIRST, CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ORDER BY 0x683f75fb  NULLS FIRST, CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE WHERE ((((rt0.c1)IS(rt0.c1)) IN ())) ORDER BY 0x683f75fb  NULLS FIRST, CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)IS(rt0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE ORDER BY 0x683f75fb  NULLS FIRST, CASE WHEN (((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN rt0.c0 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL))<<(LTRIM(rt0.c2, rt0.c0)))) ORDER BY ((x'')|((rt0.c0 IN ()))) ASC  NULLS FIRST, IFNULL(DISTINCT x'21070bd8', ((-1291773884)*(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))<<(LTRIM(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')|((rt0.c0 IN ()))) ASC  NULLS FIRST, IFNULL(DISTINCT x'21070bd8', ((-1291773884)*(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL))<<(LTRIM(rt0.c2, rt0.c0)))) ORDER BY ((x'')|((rt0.c0 IN ()))) ASC  NULLS FIRST, IFNULL(DISTINCT x'21070bd8', ((-1291773884)*(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))<<(LTRIM(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')|((rt0.c0 IN ()))) ASC  NULLS FIRST, IFNULL(DISTINCT x'21070bd8', ((-1291773884)*(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT NULL))<<(LTRIM(rt0.c2, rt0.c0)))) ORDER BY ((x'')|((rt0.c0 IN ()))) ASC  NULLS FIRST, IFNULL(DISTINCT x'21070bd8', ((-1291773884)*(rt0.c0))) DESC;
SELECT * FROM rt0, v0 WHERE (0X236acbaf) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X236acbaf) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (0X236acbaf) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0X236acbaf) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (0X236acbaf) ORDER BY rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c2)|('')) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)|('')) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c2)|('')) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)|('')) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY) NOTNULL)) ORDER BY ((rt0.c2)|('')) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((0.473996253030719) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.473996253030719) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((0.473996253030719) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.473996253030719) ISNULL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((0.473996253030719) ISNULL) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL))<=((v0.c0 IN ()))) DESC, ('1' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))<=((v0.c0 IN ()))) DESC, ('1' IN ()) ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL))<=((v0.c0 IN ()))) DESC, ('1' IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOTNULL))<=((v0.c0 IN ()))) DESC, ('1' IN ()) ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0) IS FALSE)) ORDER BY ((((v0.c0) NOTNULL))<=((v0.c0 IN ()))) DESC, ('1' IN ()) ASC;
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((NULL) IS TRUE))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY CAST(3028627455060947452 AS BLOB) DESC  NULLS LAST, ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))-('-1873094512')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((NULL) IS TRUE))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY CAST(3028627455060947452 AS BLOB) DESC  NULLS LAST, ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))-('-1873094512')) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((NULL) IS TRUE))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY CAST(3028627455060947452 AS BLOB) DESC  NULLS LAST, ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))-('-1873094512')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((NULL) IS TRUE))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) ORDER BY CAST(3028627455060947452 AS BLOB) DESC  NULLS LAST, ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))-('-1873094512')) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((((NULL) IS TRUE))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c0)))) WHERE ((((rt0.c1) IS TRUE) IN ())) ORDER BY CAST(3028627455060947452 AS BLOB) DESC  NULLS LAST, ((((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))-('-1873094512')) DESC  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (3.56562025E8);
SELECT SUM(count) FROM (SELECT ALL ((3.56562025E8) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (3.56562025E8);
SELECT SUM(count) FROM (SELECT ALL ((3.56562025E8) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (3.56562025E8);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))-('')) WHERE ((((((((rt0.c3)OR(v0.c0)))OR(rt0.c3))))>=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0))) ASC, v0.c0 COLLATE RTRIM, CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(v0.c0)))OR(rt0.c3))))>=((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))-('')) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0))) ASC, v0.c0 COLLATE RTRIM, CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) IS FALSE) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))-('')) WHERE ((((((((rt0.c3)OR(v0.c0)))OR(rt0.c3))))>=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0))) ASC, v0.c0 COLLATE RTRIM, CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) IS FALSE) END;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(v0.c0)))OR(rt0.c3))))>=((CAST(rt0.c1 AS NUMERIC))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))-('')) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0))) ASC, v0.c0 COLLATE RTRIM, CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) IS FALSE) END);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))-('')) WHERE ((((((((rt0.c3)OR(v0.c0)))OR(rt0.c3))))>=((CAST(rt0.c1 AS NUMERIC))))) ORDER BY (((rt0.c1)) BETWEEN (((rt0.c0 IN ()))) AND ((rt0.c0))) ASC, v0.c0 COLLATE RTRIM, CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) IS FALSE) END;
SELECT * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c3)))<=(LIKELIHOOD(rt0.c3, 0.966885662971241))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c3)))<=(LIKELIHOOD(rt0.c3, 0.966885662971241)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c3)))<=(LIKELIHOOD(rt0.c3, 0.966885662971241))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c3)))<=(LIKELIHOOD(rt0.c3, 0.966885662971241)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)>>(rt0.c3)))<=(LIKELIHOOD(rt0.c3, 0.966885662971241))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2)OR(rt0.c1)) IN ()) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2)OR(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2)OR(rt0.c1)) IN ()) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((rt0.c2)OR(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (((rt0.c2)OR(rt0.c1)) IN ()) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE);
SELECT ALL * FROM v0, rt0 WHERE (((((1.296869611E9)||(rt0.c3)))<<(((rt0.c1)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.296869611E9)||(rt0.c3)))<<(((rt0.c1)<<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((1.296869611E9)||(rt0.c3)))<<(((rt0.c1)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.296869611E9)||(rt0.c3)))<<(((rt0.c1)<<(v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((1.296869611E9)||(rt0.c3)))<<(((rt0.c1)<<(v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT rt0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM v0 WHERE (json_array_length(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (json_array_length(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (json_array_length(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c3)<=(rt0.c1)) AS BLOB)) ORDER BY ((rt0.c1)GLOB(rt0.c0 COLLATE NOCASE)) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)GLOB(rt0.c0 COLLATE NOCASE)) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c3)<=(rt0.c1)) AS BLOB)) ORDER BY ((rt0.c1)GLOB(rt0.c0 COLLATE NOCASE)) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1)GLOB(rt0.c0 COLLATE NOCASE)) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CAST(((rt0.c3)<=(rt0.c1)) AS BLOB)) ORDER BY ((rt0.c1)GLOB(rt0.c0 COLLATE NOCASE)) ASC, (NOT (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(CAST(1300907184 AS INTEGER))))OR((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c0, 0.1706783424949494, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(CAST(1300907184 AS INTEGER))))OR((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c0, 0.1706783424949494, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(CAST(1300907184 AS INTEGER))))OR((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c0, 0.1706783424949494, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS REAL))AND(CAST(1300907184 AS INTEGER))))OR((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c0, 0.1706783424949494, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS REAL))AND(CAST(1300907184 AS INTEGER))))OR((((rt0.c0, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c3)) AND ((rt0.c0, 0.1706783424949494, rt0.c0))))));
SELECT ALL * FROM v0 WHERE ((((((((((((('-1727820357')AND(((v0.c0)IS(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR(json_valid(v0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('-1727820357')AND(((v0.c0)IS(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR(json_valid(v0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((((('-1727820357')AND(((v0.c0)IS(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR(json_valid(v0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((('-1727820357')AND(((v0.c0)IS(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR(json_valid(v0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((((('-1727820357')AND(((v0.c0)IS(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CAST(v0.c0 AS INTEGER))))OR(json_valid(v0.c0))))OR(v0.c0 COLLATE RTRIM)))AND(((v0.c0)IS(v0.c0)))));
SELECT * FROM v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((((~ (rt0.c2))))<>((STRFTIME(rt0.c3, rt0.c2, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c2))))<>((STRFTIME(rt0.c3, rt0.c2, rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((((~ (rt0.c2))))<>((STRFTIME(rt0.c3, rt0.c2, rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((~ (rt0.c2))))<>((STRFTIME(rt0.c3, rt0.c2, rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) ORDER BY ((((~ (rt0.c2))))<>((STRFTIME(rt0.c3, rt0.c2, rt0.c1)))) ASC;
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND (v0.c0)))IS NOT(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (x'') AND (v0.c0)))IS NOT(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND (v0.c0)))IS NOT(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (x'') AND (v0.c0)))IS NOT(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) BETWEEN (x'') AND (v0.c0)))IS NOT(((v0.c0)|(v0.c0)))));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(NULL))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON v0.c0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(NULL))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(NULL))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON v0.c0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON v0.c0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))IS(NULL))) ORDER BY rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0 WHERE ((ABS(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((ABS(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((ABS(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((ABS(rt0.c0) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN x'' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.42003260366232453);
SELECT SUM(count) FROM (SELECT ((0.42003260366232453) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.42003260366232453);
SELECT SUM(count) FROM (SELECT ((0.42003260366232453) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (0.42003260366232453);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOTNULL)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)<=(rt0.c1))))) ORDER BY (((NOT (rt0.c3)))IS(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c3)))IS(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)<=(rt0.c1))))) ORDER BY (((NOT (rt0.c3)))IS(CAST(rt0.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL)<=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c3)))IS(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt0 WHERE ((NOT (((NULL)<=(rt0.c1))))) ORDER BY (((NOT (rt0.c3)))IS(CAST(rt0.c2 AS BLOB)));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 END)>(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END)) WHERE (CASE WHEN (((rt0.c3))<((rt0.c3))) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE BINARY  NULLS LAST, ((rt0.c1 IN ()) IN (NULL)), LIKELIHOOD((rt0.c3 IN ()), 0.7038344012746597) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c3))<((rt0.c3))) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 END)>(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END)) ORDER BY ((((v0.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE BINARY  NULLS LAST, ((rt0.c1 IN ()) IN (NULL)), LIKELIHOOD((rt0.c3 IN ()), 0.7038344012746597) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 END)>(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END)) WHERE (CASE WHEN (((rt0.c3))<((rt0.c3))) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE BINARY  NULLS LAST, ((rt0.c1 IN ()) IN (NULL)), LIKELIHOOD((rt0.c3 IN ()), 0.7038344012746597) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c3))<((rt0.c3))) THEN v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 END)>(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END)) ORDER BY ((((v0.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE BINARY  NULLS LAST, ((rt0.c1 IN ()) IN (NULL)), LIKELIHOOD((rt0.c3 IN ()), 0.7038344012746597) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c2 THEN rt0.c0 END)>(CASE v0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 END)) WHERE (CASE WHEN (((rt0.c3))<((rt0.c3))) THEN v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)OR(rt0.c3)))AND(rt0.c2)) COLLATE BINARY  NULLS LAST, ((rt0.c1 IN ()) IN (NULL)), LIKELIHOOD((rt0.c3 IN ()), 0.7038344012746597) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)LIKE(rt0.c0)))+(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0))))) ORDER BY TYPEOF(DISTINCT '0.29437704365409934')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)LIKE(rt0.c0)))+(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(DISTINCT '0.29437704365409934')  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)LIKE(rt0.c0)))+(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0))))) ORDER BY TYPEOF(DISTINCT '0.29437704365409934')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)LIKE(rt0.c0)))+(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY TYPEOF(DISTINCT '0.29437704365409934')  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((rt0.c3)LIKE(rt0.c0)))+(((((((((NULL)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0))))) ORDER BY TYPEOF(DISTINCT '0.29437704365409934')  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1) NOTNULL)))<=(((NOT (rt0.c3)), rt0.c0, TRIM(rt0.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1) NOTNULL)))<=(((NOT (rt0.c3)), rt0.c0, TRIM(rt0.c2, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1) NOTNULL)))<=(((NOT (rt0.c3)), rt0.c0, TRIM(rt0.c2, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1) NOTNULL)))<=(((NOT (rt0.c3)), rt0.c0, TRIM(rt0.c2, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3, ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c1) NOTNULL)))<=(((NOT (rt0.c3)), rt0.c0, TRIM(rt0.c2, rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM rt0, v0 WHERE (CASE (rt0.c1 IN ())  WHEN rt0.c1 THEN rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN rt0.c1 THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE (rt0.c1 IN ())  WHEN rt0.c1 THEN rt0.c3 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c1 IN ())  WHEN rt0.c1 THEN rt0.c3 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE (rt0.c1 IN ())  WHEN rt0.c1 THEN rt0.c3 COLLATE NOCASE END);
SELECT * FROM v0 WHERE (5.94201519E8) ORDER BY CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE v0.c0 END  NULLS FIRST, v0.c0 DESC, (CAST(v0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((5.94201519E8) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE v0.c0 END  NULLS FIRST, v0.c0 DESC, (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (5.94201519E8) ORDER BY CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE v0.c0 END  NULLS FIRST, v0.c0 DESC, (CAST(v0.c0 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ((5.94201519E8) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE v0.c0 END  NULLS FIRST, v0.c0 DESC, (CAST(v0.c0 AS NUMERIC) IN ()));
SELECT * FROM v0 WHERE (5.94201519E8) ORDER BY CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN ((v0.c0)*(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 WHEN (((v0.c0))<=((v0.c0))) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE v0.c0 END  NULLS FIRST, v0.c0 DESC, (CAST(v0.c0 AS NUMERIC) IN ());
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('rsE')) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('rsE')) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('rsE')) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) ELSE (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('rsE')) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) ELSE (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND ('rsE')) THEN ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)) ELSE (~ (v0.c0)) END);
SELECT * FROM rt0 WHERE (0Xffffffffc0964ddd) ORDER BY (rt0.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc0964ddd) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) DESC);
SELECT * FROM rt0 WHERE (0Xffffffffc0964ddd) ORDER BY (rt0.c3 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc0964ddd) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c3 IN ()) DESC);
SELECT * FROM rt0 WHERE (0Xffffffffc0964ddd) ORDER BY (rt0.c3 IN ()) DESC;
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)OR('-1021878395')))AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST((rt0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR('-1021878395')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS REAL));
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)OR('-1021878395')))AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST((rt0.c0 IN ()) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)OR('-1021878395')))AND(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS REAL));
SELECT * FROM v0, rt0 WHERE (((((rt0.c3)OR('-1021878395')))AND(rt0.c0)) COLLATE BINARY) ORDER BY CAST((rt0.c0 IN ()) AS REAL);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))AND(CAST(v0.c0 AS INTEGER))))AND((((('-1855569125')AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0))<((v0.c0))))AND(CAST(v0.c0 AS INTEGER))))AND((((('-1855569125')AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))AND(CAST(v0.c0 AS INTEGER))))AND((((('-1855569125')AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((v0.c0))<((v0.c0))))AND(CAST(v0.c0 AS INTEGER))))AND((((('-1855569125')AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))AND(CAST(v0.c0 AS INTEGER))))AND((((('-1855569125')AND(v0.c0)))AND(v0.c0)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c2)*(v0.c0)) WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c3 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(v0.c0, rt0.c3) ELSE (+ (rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN ((rt0.c2)*(v0.c0)) WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c3 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(v0.c0, rt0.c3) ELSE (+ (rt0.c2)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c2)*(v0.c0)) WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c3 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(v0.c0, rt0.c3) ELSE (+ (rt0.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (v0.c0 IN ()) THEN ((rt0.c2)*(v0.c0)) WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c3 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(v0.c0, rt0.c3) ELSE (+ (rt0.c2)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((rt0.c2)*(v0.c0)) WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c3 THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END END) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt0.c3 AS REAL) THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(v0.c0, rt0.c3) ELSE (+ (rt0.c2)) END DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c2)||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY TYPEOF(((rt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c0) NOTNULL)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c2)||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY TYPEOF(((rt0.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c0) NOTNULL)) DESC);
SELECT * FROM rt0 WHERE (((rt0.c2)||(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 END))) ORDER BY TYPEOF(((rt0.c0) NOTNULL)) DESC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c2) WHERE (((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END)AND(-1.855569125E9)))OR((rt0.c3 IN (rt0.c0))))) ORDER BY (((x'' COLLATE RTRIM))<=((0x5821e1a6))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END)AND(-1.855569125E9)))OR((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c2) ORDER BY (((x'' COLLATE RTRIM))<=((0x5821e1a6))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c2) WHERE (((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END)AND(-1.855569125E9)))OR((rt0.c3 IN (rt0.c0))))) ORDER BY (((x'' COLLATE RTRIM))<=((0x5821e1a6))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END)AND(-1.855569125E9)))OR((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c2) ORDER BY (((x'' COLLATE RTRIM))<=((0x5821e1a6))) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)), rt0.c2) WHERE (((((CASE rt0.c2  WHEN v0.c0 THEN rt0.c0 END)AND(-1.855569125E9)))OR((rt0.c3 IN (rt0.c0))))) ORDER BY (((x'' COLLATE RTRIM))<=((0x5821e1a6))) ASC;
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR('')))OR(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR('')))OR(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR('')))OR(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR('')))OR(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR('')))OR(rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE rt0.c3  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE rt0.c3  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE rt0.c3  WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) THEN (rt0.c1 IN (rt0.c1)) ELSE ((rt0.c3)==(rt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))) ISNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3))) ISNULL));
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2)<>(rt0.c3))))==(((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c3))))==(((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2)<>(rt0.c3))))==(((rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)!=(rt0.c3))))==(((rt0.c2 IN ()))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((((rt0.c2)<>(rt0.c3))))==(((rt0.c2 IN ())))));
SELECT ALL * FROM v0, rt0 WHERE ((((('l|꣫zi')OR((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(json_array_length(x'', rt0.c1)))) ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((((((v0.c0)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('l|꣫zi')OR((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(json_array_length(x'', rt0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((((((v0.c0)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((('l|꣫zi')OR((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(json_array_length(x'', rt0.c1)))) ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((((((v0.c0)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('l|꣫zi')OR((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(json_array_length(x'', rt0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0 ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((((((v0.c0)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((('l|꣫zi')OR((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))))AND(json_array_length(x'', rt0.c1)))) ORDER BY ((((v0.c0 COLLATE RTRIM)OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))OR(((((((((v0.c0)OR(rt0.c3)))OR(v0.c0)))OR(rt0.c2)))OR(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'6409')))))==((SUBSTR(rt0.c1, rt0.c2))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'6409')))))==((SUBSTR(rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'6409')))))==((SUBSTR(rt0.c1, rt0.c2))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'6409')))))==((SUBSTR(rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((x'6409')))))==((SUBSTR(rt0.c1, rt0.c2))))) ORDER BY rt0.c0;
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB((rt0.c3 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))GLOB((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB((rt0.c3 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))GLOB((rt0.c3 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))GLOB((rt0.c3 IN (rt0.c0)))));
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ (v0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (MIN((((rt0.c1))>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), (rt0.c1 IN ()))) ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN((((rt0.c1))>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (MIN((((rt0.c1))>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), (rt0.c1 IN ()))) ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((MIN((((rt0.c1))>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), (rt0.c1 IN ()))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (MIN((((rt0.c1))>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, (rt0.c1 IN ()), (rt0.c1 IN ()))) ORDER BY (~ ((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((3.56562025E8) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((3.56562025E8) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((3.56562025E8) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((3.56562025E8) IS FALSE) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((3.56562025E8) IS FALSE) IN ()));
SELECT ALL * FROM rt0, v0 WHERE (((rtreenode(rt0.c2, NULL))>=(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c2, NULL))>=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rtreenode(rt0.c2, NULL))>=(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt0.c2, NULL))>=(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rtreenode(rt0.c2, NULL))>=(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)LIKE(x''))))) ORDER BY ((((v0.c0)+(v0.c0)))<<(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)LIKE(x''))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)+(v0.c0)))<<(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)LIKE(x''))))) ORDER BY ((((v0.c0)+(v0.c0)))<<(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)LIKE(x''))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)+(v0.c0)))<<(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0)LIKE(x''))))) ORDER BY ((((v0.c0)+(v0.c0)))<<(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT NULL) WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY (('-1855569125') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT NULL) ORDER BY (('-1855569125') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT NULL) WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY (('-1855569125') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT NULL) ORDER BY (('-1855569125') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TYPEOF(DISTINCT NULL) WHERE ((~ (CASE WHEN rt0.c2 THEN rt0.c3 END))) ORDER BY (('-1855569125') BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((0.6439498023609282)) NOT BETWEEN (((((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((0.6439498023609282)) NOT BETWEEN (((((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.6439498023609282)) NOT BETWEEN (((((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((0.6439498023609282)) NOT BETWEEN (((((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.6439498023609282)) NOT BETWEEN (((((rt0.c2, NULL, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c0))))-(((((rt0.c1)OR(x'')))OR(0.5640082382405968)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))=((rt0.c0))))-(((((rt0.c1)OR(x'')))OR(0.5640082382405968))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c0))))-(((((rt0.c1)OR(x'')))OR(0.5640082382405968)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))=((rt0.c0))))-(((((rt0.c1)OR(x'')))OR(0.5640082382405968))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c3))=((rt0.c0))))-(((((rt0.c1)OR(x'')))OR(0.5640082382405968)))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) IS FALSE));
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))*(LENGTH(rt0.c2)))) ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)), (- (rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c0)<<(NULL)), CAST(rt0.c3 AS TEXT), (~ (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))*(LENGTH(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)), (- (rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c0)<<(NULL)), CAST(rt0.c3 AS TEXT), (~ (rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))*(LENGTH(rt0.c2)))) ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)), (- (rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c0)<<(NULL)), CAST(rt0.c3 AS TEXT), (~ (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS INTEGER))*(LENGTH(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)), (- (rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c0)<<(NULL)), CAST(rt0.c3 AS TEXT), (~ (rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS INTEGER))*(LENGTH(rt0.c2)))) ORDER BY (((rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)), (- (rt0.c0)), (rt0.c3 IN ()))) AND ((((rt0.c0)<<(NULL)), CAST(rt0.c3 AS TEXT), (~ (rt0.c2)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((TRIM(rt0.c1))AND(((rt0.c1)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (-1855569125)) THEN (rt0.c3 IN (v0.c0)) WHEN json_extract(rt0.c2, v0.c0, rt0.c2, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c3 WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c3)<(NULL)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)IS(rt0.c1)) END DESC, (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((('-2075865694') IS TRUE)))), (((((((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND((rt0.c3 IN (rt0.c0, NULL, rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c3)>=(rt0.c3)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt0.c1))AND(((rt0.c1)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (-1855569125)) THEN (rt0.c3 IN (v0.c0)) WHEN json_extract(rt0.c2, v0.c0, rt0.c2, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c3 WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c3)<(NULL)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)IS(rt0.c1)) END DESC, (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((('-2075865694') IS TRUE)))), (((((((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND((rt0.c3 IN (rt0.c0, NULL, rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c3)>=(rt0.c3)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((TRIM(rt0.c1))AND(((rt0.c1)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (-1855569125)) THEN (rt0.c3 IN (v0.c0)) WHEN json_extract(rt0.c2, v0.c0, rt0.c2, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c3 WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c3)<(NULL)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)IS(rt0.c1)) END DESC, (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((('-2075865694') IS TRUE)))), (((((((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND((rt0.c3 IN (rt0.c0, NULL, rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c3)>=(rt0.c3)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt0.c1))AND(((rt0.c1)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (-1855569125)) THEN (rt0.c3 IN (v0.c0)) WHEN json_extract(rt0.c2, v0.c0, rt0.c2, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c3 WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c3)<(NULL)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)IS(rt0.c1)) END DESC, (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((('-2075865694') IS TRUE)))), (((((((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND((rt0.c3 IN (rt0.c0, NULL, rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c3)>=(rt0.c3)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((TRIM(rt0.c1))AND(((rt0.c1)GLOB(v0.c0)))))OR((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))) ORDER BY CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (-1855569125)) THEN (rt0.c3 IN (v0.c0)) WHEN json_extract(rt0.c2, v0.c0, rt0.c2, rt0.c2) THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c1)<<(rt0.c2)) THEN rt0.c3 WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE v0.c0 END THEN ((rt0.c3)<(NULL)) WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c2)IS(rt0.c1)) END DESC, (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS INTEGER))) AND (((('-2075865694') IS TRUE)))), (((((((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c3, v0.c0, v0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND((rt0.c3 IN (rt0.c0, NULL, rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))AND(((rt0.c3)>=(rt0.c3)))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0 COLLATE BINARY))<((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))<((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0 COLLATE BINARY))<((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE BINARY))<((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((v0.c0 COLLATE BINARY))<((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))));
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)+(((NULL)IS(v0.c0))))) ORDER BY ((((CASE WHEN 581299683 THEN rt0.c2 END)OR(x'')))AND(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)+(((NULL)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN 581299683 THEN rt0.c2 END)OR(x'')))AND(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)+(((NULL)IS(v0.c0))))) ORDER BY ((((CASE WHEN 581299683 THEN rt0.c2 END)OR(x'')))AND(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)+(((NULL)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN 581299683 THEN rt0.c2 END)OR(x'')))AND(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3 COLLATE RTRIM)+(((NULL)IS(v0.c0))))) ORDER BY ((((CASE WHEN 581299683 THEN rt0.c2 END)OR(x'')))AND(v0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM rt0, v0 WHERE (NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c0)), TYPEOF(rt0.c1))) ORDER BY ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c0 AS NUMERIC))) DESC, (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((('-1025555674' IN (rt0.c0)), ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c0)), ((v0.c0)&(rt0.c2)))) AND (((~ (v0.c0)), RTRIM(rt0.c2), -361561062))) DESC  NULLS LAST, ((~ (v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c0)), TYPEOF(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c0 AS NUMERIC))) DESC, (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((('-1025555674' IN (rt0.c0)), ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c0)), ((v0.c0)&(rt0.c2)))) AND (((~ (v0.c0)), RTRIM(rt0.c2), -361561062))) DESC  NULLS LAST, ((~ (v0.c0)) IN ())  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c0)), TYPEOF(rt0.c1))) ORDER BY ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c0 AS NUMERIC))) DESC, (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((('-1025555674' IN (rt0.c0)), ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c0)), ((v0.c0)&(rt0.c2)))) AND (((~ (v0.c0)), RTRIM(rt0.c2), -361561062))) DESC  NULLS LAST, ((~ (v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c0)), TYPEOF(rt0.c1))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c0 AS NUMERIC))) DESC, (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((('-1025555674' IN (rt0.c0)), ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c0)), ((v0.c0)&(rt0.c2)))) AND (((~ (v0.c0)), RTRIM(rt0.c2), -361561062))) DESC  NULLS LAST, ((~ (v0.c0)) IN ())  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (NULLIF(DISTINCT ((rt0.c2)LIKE(rt0.c0)), TYPEOF(rt0.c1))) ORDER BY ((rt0.c0 COLLATE RTRIM)==(CAST(rt0.c0 AS NUMERIC))) DESC, (((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((('-1025555674' IN (rt0.c0)), ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c2)))OR(v0.c0)), ((v0.c0)&(rt0.c2)))) AND (((~ (v0.c0)), RTRIM(rt0.c2), -361561062))) DESC  NULLS LAST, ((~ (v0.c0)) IN ())  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE BINARY WHERE (IFNULL(v0.c0 COLLATE RTRIM, x'')) ORDER BY ABS('' COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0 COLLATE RTRIM, x'')) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE BINARY ORDER BY ABS('' COLLATE NOCASE) DESC);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE BINARY WHERE (IFNULL(v0.c0 COLLATE RTRIM, x'')) ORDER BY ABS('' COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(v0.c0 COLLATE RTRIM, x'')) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE BINARY ORDER BY ABS('' COLLATE NOCASE) DESC);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON ((rt0.c3)IS(rt0.c2)) COLLATE BINARY WHERE (IFNULL(v0.c0 COLLATE RTRIM, x'')) ORDER BY ABS('' COLLATE NOCASE) DESC;
SELECT COUNT(*) FROM rt0 WHERE ('1468382576');
SELECT SUM(count) FROM (SELECT (('1468382576') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1468382576');
SELECT SUM(count) FROM (SELECT (('1468382576') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('1468382576');
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c0)OR(rt0.c0)))OR(NULL)))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (v0.c0))) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((((rt0.c0)OR('rse')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c0)OR(rt0.c0)))OR(NULL)))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (((- (v0.c0))) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((((rt0.c0)OR('rse')))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c0)OR(rt0.c0)))OR(NULL)))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (v0.c0))) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((((rt0.c0)OR('rse')))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c0)OR(rt0.c0)))OR(NULL)))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (((- (v0.c0))) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((((rt0.c0)OR('rse')))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c3)))OR(((((rt0.c0)OR(rt0.c0)))OR(NULL)))))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((- (v0.c0))) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((((rt0.c0)OR('rse')))OR(v0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))<=(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM v0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c2)>(rt0.c3)))OR(((rt0.c1)LIKE(rt0.c1)))))AND(CAST(v0.c0 AS TEXT))))OR(rt0.c2)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)>(rt0.c3)))OR(((rt0.c1)LIKE(rt0.c1)))))AND(CAST(v0.c0 AS TEXT))))OR(rt0.c2)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c2)>(rt0.c3)))OR(((rt0.c1)LIKE(rt0.c1)))))AND(CAST(v0.c0 AS TEXT))))OR(rt0.c2)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)>(rt0.c3)))OR(((rt0.c1)LIKE(rt0.c1)))))AND(CAST(v0.c0 AS TEXT))))OR(rt0.c2)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c2)>(rt0.c3)))OR(((rt0.c1)LIKE(rt0.c1)))))AND(CAST(v0.c0 AS TEXT))))OR(rt0.c2)))AND(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(rt0.c1)))OR(((v0.c0)<<(rt0.c3))))) ORDER BY (((((rt0.c2) ISNULL)))!=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(rt0.c1)))OR(((v0.c0)<<(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2) ISNULL)))!=((v0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(rt0.c1)))OR(((v0.c0)<<(rt0.c3))))) ORDER BY (((((rt0.c2) ISNULL)))!=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(rt0.c1)))OR(((v0.c0)<<(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c2) ISNULL)))!=((v0.c0 COLLATE NOCASE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(rt0.c1)))OR(((v0.c0)<<(rt0.c3))))) ORDER BY (((((rt0.c2) ISNULL)))!=((v0.c0 COLLATE NOCASE)))  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST((((rt0.c1))<>((rt0.c1))) AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST((((rt0.c1))<>((rt0.c1))) AS TEXT));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST((((rt0.c1))<>((rt0.c1))) AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CAST((((rt0.c1))<>((rt0.c1))) AS TEXT));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST((((rt0.c1))<>((rt0.c1))) AS TEXT) WHERE (CAST((rt0.c2 IN ()) AS BLOB));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC, x'e4a4' ASC, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))) ASC, x'e4a4' ASC, v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC, x'e4a4' ASC, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (+ ((~ (v0.c0)))) ASC, x'e4a4' ASC, v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) ORDER BY (+ ((~ (v0.c0)))) ASC, x'e4a4' ASC, v0.c0  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((v0.c0)>(rt0.c1))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((v0.c0)>(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((v0.c0)>(rt0.c1))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((v0.c0)>(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((v0.c0)>(rt0.c1))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELY(DISTINCT v0.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ ((NOT (v0.c0)))));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c3)AND(rt0.c2)))AND(1748989435))))) ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN (((rt0.c0)<=(rt0.c3))))  NULLS LAST, ((0.0)>(((rt0.c0)>(rt0.c2)))) DESC  NULLS LAST, CASE WHEN (- (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c3)AND(rt0.c2)))AND(1748989435))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN (((rt0.c0)<=(rt0.c3))))  NULLS LAST, ((0.0)>(((rt0.c0)>(rt0.c2)))) DESC  NULLS LAST, CASE WHEN (- (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c3)AND(rt0.c2)))AND(1748989435))))) ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN (((rt0.c0)<=(rt0.c3))))  NULLS LAST, ((0.0)>(((rt0.c0)>(rt0.c2)))) DESC  NULLS LAST, CASE WHEN (- (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c3)AND(rt0.c2)))AND(1748989435))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN (((rt0.c0)<=(rt0.c3))))  NULLS LAST, ((0.0)>(((rt0.c0)>(rt0.c2)))) DESC  NULLS LAST, CASE WHEN (- (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (((((rt0.c3)AND(rt0.c2)))AND(1748989435))))) ORDER BY (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)) IN (((rt0.c0)<=(rt0.c3))))  NULLS LAST, ((0.0)>(((rt0.c0)>(rt0.c2)))) DESC  NULLS LAST, CASE WHEN (- (rt0.c1)) THEN ((rt0.c1)IS(rt0.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT * FROM rt0 WHERE ((('ru')=(TRIM(DISTINCT rt0.c1, rt0.c1)))) ORDER BY ((((rt0.c2 IN (rt0.c1, rt0.c3))))>((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('ru')==(TRIM(DISTINCT rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN (rt0.c1, rt0.c3))))>((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE ((('ru')=(TRIM(DISTINCT rt0.c1, rt0.c1)))) ORDER BY ((((rt0.c2 IN (rt0.c1, rt0.c3))))>((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('ru')==(TRIM(DISTINCT rt0.c1, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN (rt0.c1, rt0.c3))))>((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE ((('ru')=(TRIM(DISTINCT rt0.c1, rt0.c1)))) ORDER BY ((((rt0.c2 IN (rt0.c1, rt0.c3))))>((((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c1))))) ASC;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2)IS NOT(rt0.c0)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON -296100127 WHERE (((rt0.c0)|((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON -296100127);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON -296100127 WHERE (((rt0.c0)|((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)|((v0.c0 IN ())))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON -296100127);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON -296100127 WHERE (((rt0.c0)|((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_VERSION())OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_VERSION())OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((SQLITE_VERSION())OR(CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR((rt0.c0 IN ()))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((LAST_INSERT_ROWID())||(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())||(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((LAST_INSERT_ROWID())||(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())||(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((LAST_INSERT_ROWID())||(rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('752020416');
SELECT SUM(count) FROM (SELECT ALL (('752020416') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('752020416');
SELECT SUM(count) FROM (SELECT ALL (('752020416') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('752020416');
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3)%(v0.c0))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)%(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3)%(v0.c0))) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)%(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c3)%(v0.c0))) ORDER BY rt0.c3  NULLS FIRST;
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT * FROM rt0 INNER JOIN v0 ON CAST((rt0.c3 IN ()) AS NUMERIC) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY UPPER(TRIM(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST((rt0.c3 IN ()) AS NUMERIC) ORDER BY UPPER(TRIM(v0.c0)) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON CAST((rt0.c3 IN ()) AS NUMERIC) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY UPPER(TRIM(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST((rt0.c3 IN ()) AS NUMERIC) ORDER BY UPPER(TRIM(v0.c0)) DESC);
SELECT * FROM rt0 INNER JOIN v0 ON CAST((rt0.c3 IN ()) AS NUMERIC) WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY UPPER(TRIM(v0.c0)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0))<=(('-1858240842', v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0))<=(('-1858240842', v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0))<=(('-1858240842', v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0))<=(('-1858240842', v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((v0.c0, v0.c0, v0.c0))<=(('-1858240842', v0.c0, v0.c0))))));
SELECT ALL * FROM rt0 WHERE (0.6840263438594772);
SELECT SUM(count) FROM (SELECT ((0.6840263438594772) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.6840263438594772);
SELECT SUM(count) FROM (SELECT ((0.6840263438594772) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0.6840263438594772);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)%(rt0.c3)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.2962858253972739))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)%(rt0.c3)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.2962858253972739))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)%(rt0.c3)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.2962858253972739))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)%(rt0.c3)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.2962858253972739))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c3)%(rt0.c3)))LIKE(LIKELIHOOD(DISTINCT rt0.c1, 0.2962858253972739))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)AND(rt0.c1)))+(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(rt0.c1)))+(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)AND(rt0.c1)))+(((rt0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(rt0.c1)))+(((rt0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((v0.c0)AND(rt0.c1)))+(((rt0.c0)<(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (TYPEOF(DISTINCT (((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c1 COLLATE NOCASE COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS INTEGER)) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS INTEGER)) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c3 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST((rt0.c3 IN ()) AS INTEGER)) ORDER BY rt0.c0  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2 IN ())) NOT BETWEEN ((((rt0.c3))>((rt0.c3)))) AND ((+ (rt0.c2)))) WHERE (NULL) ORDER BY (+ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) DESC, (((CAST(rt0.c3 AS BLOB)))<((((((rt0.c2)OR('')))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2 IN ())) NOT BETWEEN ((((rt0.c3))>((rt0.c3)))) AND ((+ (rt0.c2)))) ORDER BY (+ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) DESC, (((CAST(rt0.c3 AS BLOB)))<((((((rt0.c2)OR('')))AND(rt0.c2))))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2 IN ())) NOT BETWEEN ((((rt0.c3))>((rt0.c3)))) AND ((+ (rt0.c2)))) WHERE (NULL) ORDER BY (+ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) DESC, (((CAST(rt0.c3 AS BLOB)))<((((((rt0.c2)OR('')))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2 IN ())) NOT BETWEEN ((((rt0.c3))>((rt0.c3)))) AND ((+ (rt0.c2)))) ORDER BY (+ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) DESC, (((CAST(rt0.c3 AS BLOB)))<((((((rt0.c2)OR('')))AND(rt0.c2))))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c2 IN ())) NOT BETWEEN ((((rt0.c3))>((rt0.c3)))) AND ((+ (rt0.c2)))) WHERE (NULL) ORDER BY (+ ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c2))))) DESC, (((CAST(rt0.c3 AS BLOB)))<((((((rt0.c2)OR('')))AND(rt0.c2)))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)LIKE(rt0.c1))))<=((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((((rt0.c1, 0.940650708058422, rt0.c2))<=((v0.c0, rt0.c2, v0.c0))))))AND(rt0.c1)))OR(((x'') IS FALSE))))AND(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)LIKE(rt0.c1))))<=((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((((rt0.c1, 0.940650708058422, rt0.c2))<=((v0.c0, rt0.c2, v0.c0))))))AND(rt0.c1)))OR(((x'') IS FALSE))))AND(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)LIKE(rt0.c1))))<=((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((((rt0.c1, 0.940650708058422, rt0.c2))<=((v0.c0, rt0.c2, v0.c0))))))AND(rt0.c1)))OR(((x'') IS FALSE))))AND(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)LIKE(rt0.c1))))<=((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((((rt0.c1, 0.940650708058422, rt0.c2))<=((v0.c0, rt0.c2, v0.c0))))))AND(rt0.c1)))OR(((x'') IS FALSE))))AND(((v0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)LIKE(rt0.c1))))<=((((v0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))))) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)AND((((rt0.c1, 0.940650708058422, rt0.c2))<=((v0.c0, rt0.c2, v0.c0))))))AND(rt0.c1)))OR(((x'') IS FALSE))))AND(((v0.c0) NOTNULL)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)>>(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)>>(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)>>(rt0.c2)) COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (CAST(0Xffffffff82daa913 AS BLOB)) ORDER BY (- (((rt0.c3)>=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffff82daa913 AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c3)>=(rt0.c2))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(0Xffffffff82daa913 AS BLOB)) ORDER BY (- (((rt0.c3)>=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0xffffffff82daa913 AS BLOB)) IS TRUE)  as count FROM v0, rt0 ORDER BY (- (((rt0.c3)>=(rt0.c2))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(0Xffffffff82daa913 AS BLOB)) ORDER BY (- (((rt0.c3)>=(rt0.c2))))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((((-1285956914)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-1285956914)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((-1285956914)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((-1285956914)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((-1285956914)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((v0.c0)||(v0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c0)LIKE(v0.c0))  WHEN 0.3348034318259522 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END) ORDER BY ((rt0.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(v0.c0))  WHEN 0.3348034318259522 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c0)LIKE(v0.c0))  WHEN 0.3348034318259522 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END) ORDER BY ((rt0.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)LIKE(v0.c0))  WHEN 0.3348034318259522 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((rt0.c0)LIKE(v0.c0))  WHEN 0.3348034318259522 THEN ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) END) ORDER BY ((rt0.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))|(STRFTIME(rt0.c2, rt0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))|(STRFTIME(rt0.c2, rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))|(STRFTIME(rt0.c2, rt0.c1, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))|(STRFTIME(rt0.c2, rt0.c1, v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT * FROM v0, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)))|(STRFTIME(rt0.c2, rt0.c1, v0.c0))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))/(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))/(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))/(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))/(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))/(v0.c0 COLLATE BINARY)));
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN 0.473996253030719 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ABS(DISTINCT rt0.c3))) AND ((v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c0))<=((v0.c0)))))) ASC  NULLS LAST, (((((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((rt0.c0 IN ()))))OR((+ (0X683f75fb)))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN 0.473996253030719 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ABS(DISTINCT rt0.c3))) AND ((v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c0))<=((v0.c0)))))) ASC  NULLS LAST, (((((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((rt0.c0 IN ()))))OR((+ (0x683f75fb)))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0 COLLATE RTRIM)));
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN 0.473996253030719 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ABS(DISTINCT rt0.c3))) AND ((v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c0))<=((v0.c0)))))) ASC  NULLS LAST, (((((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((rt0.c0 IN ()))))OR((+ (0X683f75fb)))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN 0.473996253030719 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ABS(DISTINCT rt0.c3))) AND ((v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c0))<=((v0.c0)))))) ASC  NULLS LAST, (((((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((rt0.c0 IN ()))))OR((+ (0x683f75fb)))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0 COLLATE RTRIM)));
SELECT * FROM v0, rt0 WHERE (NULL) ORDER BY (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN 0.473996253030719 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ABS(DISTINCT rt0.c3))) AND ((v0.c0 COLLATE BINARY, CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END, (((rt0.c0))<=((v0.c0)))))) ASC  NULLS LAST, (((((((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))OR((rt0.c0 IN ()))))OR((+ (0X683f75fb)))))AND(rt0.c2 COLLATE NOCASE)))AND(rt0.c0 COLLATE RTRIM));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (498695810);
SELECT SUM(count) FROM (SELECT ALL ((498695810) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (498695810);
SELECT SUM(count) FROM (SELECT ALL ((498695810) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (498695810);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c0 AS REAL) COLLATE RTRIM);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND (('0.940650708058422'))) THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) THEN 0.05122766320812677 WHEN ((rt0.c2)>=(v0.c0)) THEN (rt0.c1 IN ()) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND (('0.940650708058422'))) THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) THEN 0.05122766320812677 WHEN ((rt0.c2)>=(v0.c0)) THEN (rt0.c1 IN ()) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND (('0.940650708058422'))) THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) THEN 0.05122766320812677 WHEN ((rt0.c2)>=(v0.c0)) THEN (rt0.c1 IN ()) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND (('0.940650708058422'))) THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) THEN 0.05122766320812677 WHEN ((rt0.c2)>=(v0.c0)) THEN (rt0.c1 IN ()) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND (('0.940650708058422'))) THEN ((v0.c0)IS NOT(rt0.c1)) WHEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c3)) THEN 0.05122766320812677 WHEN ((rt0.c2)>=(v0.c0)) THEN (rt0.c1 IN ()) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((0.9476198771708173)+(v0.c0))))==(((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9476198771708173)+(v0.c0))))==(((- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((0.9476198771708173)+(v0.c0))))==(((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.9476198771708173)+(v0.c0))))==(((- (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((0.9476198771708173)+(v0.c0))))==(((- (v0.c0))))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ((CAST(rt0.c1 AS REAL))>=(CHANGES())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))>=(CHANGES())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ((CAST(rt0.c1 AS REAL))>=(CHANGES())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c1 AS REAL))>=(CHANGES())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (json(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ((CAST(rt0.c1 AS REAL))>=(CHANGES())) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0)), CASE WHEN v0.c0 THEN -177079076 END, (v0.c0 IN (v0.c0))))>((v0.c0, '429524402' COLLATE NOCASE, CASE '-177079076'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'cb13' WHEN 0.790053411683994 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY ((NOT (v0.c0)) IN (IFNULL(v0.c0, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0)), CASE WHEN v0.c0 THEN -177079076 END, (v0.c0 IN (v0.c0))))>((v0.c0, '429524402' COLLATE NOCASE, CASE '-177079076'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'cb13' WHEN 0.790053411683994 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN (IFNULL(v0.c0, v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0)), CASE WHEN v0.c0 THEN -177079076 END, (v0.c0 IN (v0.c0))))>((v0.c0, '429524402' COLLATE NOCASE, CASE '-177079076'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'cb13' WHEN 0.790053411683994 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY ((NOT (v0.c0)) IN (IFNULL(v0.c0, v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((- (v0.c0)), CASE WHEN v0.c0 THEN -177079076 END, (v0.c0 IN (v0.c0))))>((v0.c0, '429524402' COLLATE NOCASE, CASE '-177079076'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'cb13' WHEN 0.790053411683994 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) IS TRUE)  as count FROM v0 ORDER BY ((NOT (v0.c0)) IN (IFNULL(v0.c0, v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((- (v0.c0)), CASE WHEN v0.c0 THEN -177079076 END, (v0.c0 IN (v0.c0))))>((v0.c0, '429524402' COLLATE NOCASE, CASE '-177079076'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'cb13' WHEN 0.790053411683994 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ORDER BY ((NOT (v0.c0)) IN (IFNULL(v0.c0, v0.c0))) ASC;
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT (('')IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (('')IS NOT(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT (('')IS NOT(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (('')IS NOT(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LOWER(DISTINCT (('')IS NOT(v0.c0))));
SELECT * FROM rt0, v0 WHERE ((~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3))))) ORDER BY ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) BETWEEN ((- (v0.c0))) AND ((((v0.c0))>=((v0.c0))))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (json_array_length(((v0.c0) NOTNULL), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((v0.c0) NOTNULL), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_array_length(((v0.c0) NOTNULL), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((v0.c0) NOTNULL), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (json_array_length(((v0.c0) NOTNULL), ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))=((rt0.c3))))GLOB(((rt0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((rt0.c3))))GLOB(((rt0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))=((rt0.c3))))GLOB(((rt0.c0)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))=((rt0.c3))))GLOB(((rt0.c0)<<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1))=((rt0.c3))))GLOB(((rt0.c0)<<(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (0.6447212618035356)))AND((rt0.c0 IN ()))))OR(((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (0.6447212618035356)))AND((rt0.c0 IN ()))))OR(((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (0.6447212618035356)))AND((rt0.c0 IN ()))))OR(((rt0.c0)IS NOT(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (0.6447212618035356)))AND((rt0.c0 IN ()))))OR(((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NOT (0.6447212618035356)))AND((rt0.c0 IN ()))))OR(((rt0.c0)IS NOT(rt0.c3)))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1373050355') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (((rt0.c1)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('1373050355') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (((rt0.c1)-(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1373050355') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (((rt0.c1)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((('1373050355') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (((rt0.c1)-(rt0.c2))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((('1373050355') BETWEEN (((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))) AND (((rt0.c1)-(rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY CASE ((v0.c0)>(v0.c0))  WHEN UPPER(DISTINCT v0.c0) THEN (NOT (v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>(v0.c0))  WHEN UPPER(DISTINCT v0.c0) THEN (NOT (v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY CASE ((v0.c0)>(v0.c0))  WHEN UPPER(DISTINCT v0.c0) THEN (NOT (v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)>(v0.c0))  WHEN UPPER(DISTINCT v0.c0) THEN (NOT (v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS NUMERIC)) ORDER BY CASE ((v0.c0)>(v0.c0))  WHEN UPPER(DISTINCT v0.c0) THEN (NOT (v0.c0)) END, ((((v0.c0) BETWEEN (v0.c0) AND (NULL)))||(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT COUNT(*) FROM v0, rt0 WHERE (COALESCE((~ (v0.c0)), TYPEOF(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (v0.c0)), TYPEOF(DISTINCT rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (COALESCE((~ (v0.c0)), TYPEOF(DISTINCT rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (v0.c0)), TYPEOF(DISTINCT rt0.c2))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (COALESCE((~ (v0.c0)), TYPEOF(DISTINCT rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) ORDER BY CASE load_extension(rt0.c1)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c1))) WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c3)||(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE load_extension(rt0.c1)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c1))) WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c3)||(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) ORDER BY CASE load_extension(rt0.c1)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c1))) WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c3)||(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY CASE load_extension(rt0.c1)  WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c3)) AND ((rt0.c1, rt0.c2, rt0.c1))) WHEN rt0.c1 COLLATE BINARY THEN ((rt0.c3)||(rt0.c0)) END);
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.790053411683994 END  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) ELSE ABS(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.790053411683994 END  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) ELSE ABS(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.790053411683994 END  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) ELSE ABS(DISTINCT rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.790053411683994 END  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) ELSE ABS(DISTINCT rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN 0.790053411683994 END  WHEN rt0.c0 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)) ELSE ABS(DISTINCT rt0.c1) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOTNULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOTNULL) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)OR(v0.c0)) THEN ((v0.c0) NOTNULL) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY '0.9423336992218516' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY '0.9423336992218516' DESC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY '0.9423336992218516' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY '0.9423336992218516' DESC  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE (v0.c0) ORDER BY '0.9423336992218516' DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST(UPPER(rt0.c0) AS REAL) WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<=((rt0.c3))) END) ORDER BY ((((json_insert('-959629275', 0.3348034318259522, v0.c0))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<=((rt0.c3))) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(UPPER(rt0.c0) AS REAL) ORDER BY ((((json_insert('-959629275', 0.3348034318259522, v0.c0))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON CAST(UPPER(rt0.c0) AS REAL) WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<=((rt0.c3))) END) ORDER BY ((((json_insert('-959629275', 0.3348034318259522, v0.c0))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND(((rt0.c1) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN (((rt0.c1))<=((rt0.c3))) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(UPPER(rt0.c0) AS REAL) ORDER BY ((((json_insert('-959629275', 0.3348034318259522, v0.c0))OR((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((v0.c0))))))AND(((rt0.c1) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)==(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)==(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)==(v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)==(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)==(v0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)AND(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)AND(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)AND(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((v0.c0)AND(rt0.c3)) COLLATE RTRIM);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((TYPEOF(rt0.c3))&(((rt0.c1)-(rt0.c1)))) WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c0 THEN rt0.c2 ELSE CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN v0.c0 ELSE x'' END END) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(((rt0.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c0 THEN rt0.c2 ELSE CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN v0.c0 ELSE x'' END END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((TYPEOF(rt0.c3))&(((rt0.c1)-(rt0.c1)))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(((rt0.c1)-(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((TYPEOF(rt0.c3))&(((rt0.c1)-(rt0.c1)))) WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c0 THEN rt0.c2 ELSE CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN v0.c0 ELSE x'' END END) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(((rt0.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c0 THEN rt0.c2 ELSE CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN v0.c0 ELSE x'' END END) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((TYPEOF(rt0.c3))&(((rt0.c1)-(rt0.c1)))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(((rt0.c1)-(rt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((TYPEOF(rt0.c3))&(((rt0.c1)-(rt0.c1)))) WHERE (CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)) WHEN rt0.c0 THEN rt0.c2 ELSE CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN x'' THEN v0.c0 ELSE x'' END END) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))!=(((rt0.c1)-(rt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM) ORDER BY ((((rt0.c3)+(rt0.c1)))>((+ (0.7135096902442899)))) ASC, ((((NULL)>=(rt0.c3)))<<(((((rt0.c0)OR(rt0.c0)))AND(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)+(rt0.c1)))>((+ (0.7135096902442899)))) ASC, ((((NULL)>=(rt0.c3)))<<(((((rt0.c0)OR(rt0.c0)))AND(x'')))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM) ORDER BY ((((rt0.c3)+(rt0.c1)))>((+ (0.7135096902442899)))) ASC, ((((NULL)>=(rt0.c3)))<<(((((rt0.c0)OR(rt0.c0)))AND(x'')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)+(rt0.c1)))>((+ (0.7135096902442899)))) ASC, ((((NULL)>=(rt0.c3)))<<(((((rt0.c0)OR(rt0.c0)))AND(x'')))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM) ORDER BY ((((rt0.c3)+(rt0.c1)))>((+ (0.7135096902442899)))) ASC, ((((NULL)>=(rt0.c3)))<<(((((rt0.c0)OR(rt0.c0)))AND(x'')))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((NOT (COALESCE(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (COALESCE(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (COALESCE(DISTINCT v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (COALESCE(DISTINCT v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (COALESCE(DISTINCT v0.c0, v0.c0))));
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (('-836382237') IS TRUE))) ORDER BY (CAST(rt0.c2 AS REAL) IN (((rt0.c0) ISNULL), rt0.c3)) DESC, CASE (((rt0.c0))>((0.016958119699732377)))  WHEN rt0.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c0, rt0.c0) ELSE CAST(rt0.c3 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (('-836382237') IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN (((rt0.c0) ISNULL), rt0.c3)) DESC, CASE (((rt0.c0))>((0.016958119699732377)))  WHEN rt0.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c0, rt0.c0) ELSE CAST(rt0.c3 AS REAL) END);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (('-836382237') IS TRUE))) ORDER BY (CAST(rt0.c2 AS REAL) IN (((rt0.c0) ISNULL), rt0.c3)) DESC, CASE (((rt0.c0))>((0.016958119699732377)))  WHEN rt0.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c0, rt0.c0) ELSE CAST(rt0.c3 AS REAL) END;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (('-836382237') IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN (((rt0.c0) ISNULL), rt0.c3)) DESC, CASE (((rt0.c0))>((0.016958119699732377)))  WHEN rt0.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c0, rt0.c0) ELSE CAST(rt0.c3 AS REAL) END);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (('-836382237') IS TRUE))) ORDER BY (CAST(rt0.c2 AS REAL) IN (((rt0.c0) ISNULL), rt0.c3)) DESC, CASE (((rt0.c0))>((0.016958119699732377)))  WHEN rt0.c3 COLLATE RTRIM THEN NULLIF(DISTINCT rt0.c0, rt0.c0) ELSE CAST(rt0.c3 AS REAL) END;
SELECT COUNT(*) FROM v0 WHERE ('1478615462');
SELECT SUM(count) FROM (SELECT (('1478615462') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('1478615462');
SELECT SUM(count) FROM (SELECT (('1478615462') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('1478615462');
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)*(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((rt0.c1 IN ()))));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))*(((rt0.c2)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))*(((rt0.c2)-(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))*(((rt0.c2)-(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))*(((rt0.c2)-(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((v0.c0))))*(((rt0.c2)-(rt0.c3)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.9334406407376465) WHERE ((((((v0.c0))<((0.5894469376430924)))) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((0.5894469376430924)))) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.9334406407376465));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.9334406407376465) WHERE ((((((v0.c0))<((0.5894469376430924)))) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((0.5894469376430924)))) BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.9334406407376465));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT (v0.c0 IN ()), 0.9334406407376465) WHERE ((((((v0.c0))<((0.5894469376430924)))) BETWEEN (rt0.c2) AND (rt0.c0)));
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))&((('e,') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))&((('e,') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))&((('e,') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))&((('e,') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((- (v0.c0)))&((('e,') NOTNULL))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN (('\d.~V{N', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0 COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY)IS(((v0.c0)==(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) BETWEEN (('\d.~V{N', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)IS(((v0.c0)==(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN (('\d.~V{N', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0 COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY)IS(((v0.c0)==(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, v0.c0, v0.c0)) BETWEEN (('\d.~V{N', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)IS(((v0.c0)==(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN (('\d.~V{N', v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))/(v0.c0 COLLATE NOCASE))) ORDER BY ((v0.c0 COLLATE BINARY)IS(((v0.c0)==(v0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ())))<(((+ (rt0.c0)))))) ORDER BY 0.46187683353640285 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ())))<(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY 0.46187683353640285 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ())))<(((+ (rt0.c0)))))) ORDER BY 0.46187683353640285 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN ())))<(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY 0.46187683353640285 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3 IN ())))<(((+ (rt0.c0)))))) ORDER BY 0.46187683353640285 DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(x'')))AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c1) NOT NULL))) WHERE (LIKELY(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(x'')))AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c1) NOT NULL))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(x'')))AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c1) NOT NULL))) WHERE (LIKELY(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(x'')))AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c1) NOT NULL))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) ISNULL)) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))OR(x'')))AND(rt0.c3)))OR(rt0.c3))) AND (((rt0.c1) NOT NULL))) WHERE (LIKELY(CAST(rt0.c0 AS REAL)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ((- (rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((0.5926746488148757 IN ((1.468382576E9 IN (v0.c0))))) ORDER BY (((+ (v0.c0)))<=(HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0.5926746488148757 IN ((1.468382576E9 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0)))<=(HEX(DISTINCT v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0.5926746488148757 IN ((1.468382576E9 IN (v0.c0))))) ORDER BY (((+ (v0.c0)))<=(HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((0.5926746488148757 IN ((1.468382576E9 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c0)))<=(HEX(DISTINCT v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0.5926746488148757 IN ((1.468382576E9 IN (v0.c0))))) ORDER BY (((+ (v0.c0)))<=(HEX(DISTINCT v0.c0)))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (v0.c0)));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)AND(v0.c0)))));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)AND(v0.c0)))));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY (((v0.c0 IN ())) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)AND(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(v0.c0, '429524402', v0.c0, v0.c0) COLLATE NOCASE) ORDER BY CASE WHEN 'c(m-~' THEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('q>d'))) ELSE (- (v0.c0)) END  NULLS FIRST, (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(v0.c0, '429524402', v0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN 'c(m-~' THEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('q>d'))) ELSE (- (v0.c0)) END  NULLS FIRST, (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(v0.c0, '429524402', v0.c0, v0.c0) COLLATE NOCASE) ORDER BY CASE WHEN 'c(m-~' THEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('q>d'))) ELSE (- (v0.c0)) END  NULLS FIRST, (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((json_array(v0.c0, '429524402', v0.c0, v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN 'c(m-~' THEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('q>d'))) ELSE (- (v0.c0)) END  NULLS FIRST, (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(v0.c0, '429524402', v0.c0, v0.c0) COLLATE NOCASE) ORDER BY CASE WHEN 'c(m-~' THEN (((v0.c0)) BETWEEN ((v0.c0)) AND (('q>d'))) ELSE (- (v0.c0)) END  NULLS FIRST, (((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))) ISNULL) ASC;
SELECT * FROM rt0, v0 WHERE (TRIM((((('1478615462')OR(rt0.c2)))OR(rt0.c2)), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((('1478615462')OR(rt0.c2)))OR(rt0.c2)), (- (rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TRIM((((('1478615462')OR(rt0.c2)))OR(rt0.c2)), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((('1478615462')OR(rt0.c2)))OR(rt0.c2)), (- (rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (TRIM((((('1478615462')OR(rt0.c2)))OR(rt0.c2)), (- (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN NULLIF(DISTINCT rt0.c1, rt0.c2) ELSE ((rt0.c3)GLOB(rt0.c3)) END) ORDER BY ((((rt0.c3)<(NULL))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2)), (+ (((rt0.c1)OR(rt0.c0)))) DESC  NULLS FIRST, (- (((rt0.c2)>>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN NULLIF(DISTINCT rt0.c1, rt0.c2) ELSE ((rt0.c3)GLOB(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<(NULL))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2)), (+ (((rt0.c1)OR(rt0.c0)))) DESC  NULLS FIRST, (- (((rt0.c2)>>(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN NULLIF(DISTINCT rt0.c1, rt0.c2) ELSE ((rt0.c3)GLOB(rt0.c3)) END) ORDER BY ((((rt0.c3)<(NULL))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2)), (+ (((rt0.c1)OR(rt0.c0)))) DESC  NULLS FIRST, (- (((rt0.c2)>>(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN NULLIF(DISTINCT rt0.c1, rt0.c2) ELSE ((rt0.c3)GLOB(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<(NULL))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2)), (+ (((rt0.c1)OR(rt0.c0)))) DESC  NULLS FIRST, (- (((rt0.c2)>>(rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) THEN NULLIF(DISTINCT rt0.c1, rt0.c2) ELSE ((rt0.c3)GLOB(rt0.c3)) END) ORDER BY ((((rt0.c3)<(NULL))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2)), (+ (((rt0.c1)OR(rt0.c0)))) DESC  NULLS FIRST, (- (((rt0.c2)>>(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) ORDER BY '-1183924380' ASC, CASE WHEN x'0796' THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY '-1183924380' ASC, CASE WHEN x'0796' THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) ORDER BY '-1183924380' ASC, CASE WHEN x'0796' THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY '-1183924380' ASC, CASE WHEN x'0796' THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) ORDER BY '-1183924380' ASC, CASE WHEN x'0796' THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<<((NOT (v0.c0))))) ORDER BY 0xffffffff8444cda2 ASC, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), NULL, '-2075865694')));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY 0Xffffffff8444cda2 ASC, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), NULL, '-2075865694'))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<<((NOT (v0.c0))))) ORDER BY 0xffffffff8444cda2 ASC, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), NULL, '-2075865694')));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY 0Xffffffff8444cda2 ASC, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), NULL, '-2075865694'))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<<((NOT (v0.c0))))) ORDER BY 0xffffffff8444cda2 ASC, (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) AND (((+ (v0.c0)), NULL, '-2075865694')));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) IN ((('RU')LIKE(rt0.c3)), (~ (rt0.c2)))) WHERE (((((v0.c0)=(v0.c0)))%(((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0)))%(((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) IN ((('RU')LIKE(rt0.c3)), (~ (rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) IN ((('RU')LIKE(rt0.c3)), (~ (rt0.c2)))) WHERE (((((v0.c0)=(v0.c0)))%(((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)==(v0.c0)))%(((((rt0.c0)OR(v0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) IN ((('RU')LIKE(rt0.c3)), (~ (rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) IN ((('RU')LIKE(rt0.c3)), (~ (rt0.c2)))) WHERE (((((v0.c0)=(v0.c0)))%(((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0))) BETWEEN (3.0286274550609475E18) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c0))=((v0.c0))))OR((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0))) BETWEEN (3.0286274550609475E18) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0))))OR((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0))) BETWEEN (3.0286274550609475E18) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c0))=((v0.c0))))OR((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)*(v0.c0))) BETWEEN (3.0286274550609475E18) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0))==((v0.c0))))OR((v0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)*(v0.c0))) BETWEEN (3.0286274550609475E18) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c0))=((v0.c0))))OR((v0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(CASE WHEN 0.6312263621295067 THEN 'p/tMn' ELSE rt0.c3 END)))OR('1720622585')))AND(((rt0.c1)*(rt0.c3)))))AND(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))OR(CASE WHEN 0.6312263621295067 THEN 'p/tMn' ELSE rt0.c3 END)))OR('1720622585')))AND(((rt0.c1)*(rt0.c3)))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(CASE WHEN 0.6312263621295067 THEN 'p/tMn' ELSE rt0.c3 END)))OR('1720622585')))AND(((rt0.c1)*(rt0.c3)))))AND(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))OR(CASE WHEN 0.6312263621295067 THEN 'p/tMn' ELSE rt0.c3 END)))OR('1720622585')))AND(((rt0.c1)*(rt0.c3)))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((- (rt0.c2)))OR(CASE WHEN 0.6312263621295067 THEN 'p/tMn' ELSE rt0.c3 END)))OR('1720622585')))AND(((rt0.c1)*(rt0.c3)))))AND(TRIM(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3 COLLATE BINARY)))AND((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3 COLLATE BINARY)))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3 COLLATE BINARY)))AND((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3 COLLATE BINARY)))AND((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON ((rt0.c2 COLLATE BINARY)*((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE (((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3 COLLATE BINARY)))AND((NOT (rt0.c2)))));
SELECT * FROM v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)=(rt0.c2)) IN ()) WHERE (((((rt0.c3, rt0.c0, 1.296869611E9))<=((rt0.c1, rt0.c3, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c0, 1.296869611E9))<=((rt0.c1, rt0.c3, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)==(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)=(rt0.c2)) IN ()) WHERE (((((rt0.c3, rt0.c0, 1.296869611E9))<=((rt0.c1, rt0.c3, rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3, rt0.c0, 1.296869611E9))<=((rt0.c1, rt0.c3, rt0.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)==(rt0.c2)) IN ()));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c2)=(rt0.c2)) IN ()) WHERE (((((rt0.c3, rt0.c0, 1.296869611E9))<=((rt0.c1, rt0.c3, rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))<=(((((((((((((((((((((x'')AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0))))) ORDER BY (NOT ((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))<=(((((((((((((((((((((x'')AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))<=(((((((((((((((((((((x'')AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0))))) ORDER BY (NOT ((~ (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS REAL))<=(((((((((((((((((((((x'')AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))<=(((((((((((((((((((((x'')AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0))))) ORDER BY (NOT ((~ (rt0.c1)))) DESC;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CAST(((rt0.c2)AND(NULL)) AS INTEGER)) ORDER BY (((((rt0.c0 IN ()))AND(((rt0.c2)<=(rt0.c2)))))AND(rt0.c1)) DESC  NULLS FIRST, ((((rt0.c3)<(rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((((rt0.c0 IN ()))AND(((rt0.c2)<=(rt0.c2)))))AND(rt0.c1)) DESC  NULLS FIRST, ((((rt0.c3)<(rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (CAST(((rt0.c2)AND(NULL)) AS INTEGER)) ORDER BY (((((rt0.c0 IN ()))AND(((rt0.c2)<=(rt0.c2)))))AND(rt0.c1)) DESC  NULLS FIRST, ((((rt0.c3)<(rt0.c2))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)AND(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((((rt0.c0 IN ()))AND(((rt0.c2)<=(rt0.c2)))))AND(rt0.c1)) DESC  NULLS FIRST, ((((rt0.c3)<(rt0.c2))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (JULIANDAY(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (x'8cab' IN (x'8599')), v0.c0, CAST(v0.c0 AS INTEGER), '')) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (x'8cab' IN (x'8599')), v0.c0, CAST(v0.c0 AS INTEGER), '')) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (JULIANDAY(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (x'8cab' IN (x'8599')), v0.c0, CAST(v0.c0 AS INTEGER), '')) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (x'8cab' IN (x'8599')), v0.c0, CAST(v0.c0 AS INTEGER), '')) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (JULIANDAY(((((v0.c0)OR(v0.c0)))AND(v0.c0)), (x'8cab' IN (x'8599')), v0.c0, CAST(v0.c0 AS INTEGER), '')) ORDER BY ((CAST(v0.c0 AS TEXT)) NOT NULL);
SELECT ALL * FROM v0, rt0 WHERE (((x'4787')||(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'4787')||(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((x'4787')||(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'4787')||(rt0.c0))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((x'4787')||(rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((+ (rt0.c3)), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((+ (rt0.c3)), (- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((+ (rt0.c3)), (- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((+ (rt0.c3)), (- (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c3 IN ((+ (rt0.c3)), (- (rt0.c0)))));
SELECT * FROM v0 WHERE ((((('fQ') ISNULL))||(CAST(v0.c0 AS INTEGER)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('fQ') ISNULL))||(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT * FROM v0 WHERE ((((('fQ') ISNULL))||(CAST(v0.c0 AS INTEGER)))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('fQ') ISNULL))||(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ''  NULLS FIRST);
SELECT * FROM v0 WHERE ((((('fQ') ISNULL))||(CAST(v0.c0 AS INTEGER)))) ORDER BY ''  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((('-2078841278'))>((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('-2078841278'))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((('-2078841278'))>((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((('-2078841278'))>((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((('-2078841278'))>((rt0.c1))) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS TRUE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)%(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)%(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS TRUE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)%(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)%(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c3) IS TRUE)) ORDER BY ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)%(rt0.c2 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE x'd114'  WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (CASE x'd114'  WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE x'd114'  WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN (CASE x'd114'  WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN (CASE x'd114'  WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c1) NOT NULL));
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ('Hi8^k>k')));
SELECT SUM(count) FROM (SELECT (((- ('Hi8^k>k'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ('Hi8^k>k')));
SELECT SUM(count) FROM (SELECT (((- ('Hi8^k>k'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((- ('Hi8^k>k')));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0.2586868718860291)) AND (((~ (rt0.c2)))))) ORDER BY (((((rt0.c1)-(rt0.c3))))>=(((('LL뉑?-I')LIKE(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((0.2586868718860291)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)-(rt0.c3))))>=(((('LL뉑?-I')LIKE(rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0.2586868718860291)) AND (((~ (rt0.c2)))))) ORDER BY (((((rt0.c1)-(rt0.c3))))>=(((('LL뉑?-I')LIKE(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((0.2586868718860291)) AND (((~ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)-(rt0.c3))))>=(((('LL뉑?-I')LIKE(rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0.2586868718860291)) AND (((~ (rt0.c2)))))) ORDER BY (((((rt0.c1)-(rt0.c3))))>=(((('LL뉑?-I')LIKE(rt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (json_object((((rt0.c0, rt0.c2, rt0.c0))=((v0.c0, '62y', v0.c0))), 0.18943212900538509)) ORDER BY 0x573cf41 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((((rt0.c0, rt0.c2, rt0.c0))==((v0.c0, '62y', v0.c0))), 0.18943212900538509)) IS TRUE)  as count FROM rt0, v0 ORDER BY 0X573cf41 ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (json_object((((rt0.c0, rt0.c2, rt0.c0))=((v0.c0, '62y', v0.c0))), 0.18943212900538509)) ORDER BY 0x573cf41 ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_object((((rt0.c0, rt0.c2, rt0.c0))==((v0.c0, '62y', v0.c0))), 0.18943212900538509)) IS TRUE)  as count FROM rt0, v0 ORDER BY 0X573cf41 ASC);
SELECT ALL * FROM rt0 WHERE (CAST('\n3~S' AS NUMERIC)) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2)<=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((CAST('\n3~S' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2)<=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END END DESC);
SELECT ALL * FROM rt0 WHERE (CAST('\n3~S' AS NUMERIC)) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2)<=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((CAST('\n3~S' AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2)<=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END END DESC);
SELECT ALL * FROM rt0 WHERE (CAST('\n3~S' AS NUMERIC)) ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c0)) THEN ((rt0.c2)<=(rt0.c2)) ELSE CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END END DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((json_quote(rt0.c3))OR(x'')))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0) NOT NULL), (rt0.c2 IN ()), NULL))>((CAST(rt0.c2 AS BLOB), '', LIKELIHOOD(DISTINCT rt0.c2, 0.2966763676901608)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(rt0.c3))OR(x'')))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) NOT NULL), (rt0.c2 IN ()), NULL))>((CAST(rt0.c2 AS BLOB), '', LIKELIHOOD(DISTINCT rt0.c2, 0.2966763676901608)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((json_quote(rt0.c3))OR(x'')))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0) NOT NULL), (rt0.c2 IN ()), NULL))>((CAST(rt0.c2 AS BLOB), '', LIKELIHOOD(DISTINCT rt0.c2, 0.2966763676901608)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_quote(rt0.c3))OR(x'')))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) NOT NULL), (rt0.c2 IN ()), NULL))>((CAST(rt0.c2 AS BLOB), '', LIKELIHOOD(DISTINCT rt0.c2, 0.2966763676901608)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((json_quote(rt0.c3))OR(x'')))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0) NOT NULL), (rt0.c2 IN ()), NULL))>((CAST(rt0.c2 AS BLOB), '', LIKELIHOOD(DISTINCT rt0.c2, 0.2966763676901608)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (((NULL)IS NOT(rt0.c3 COLLATE BINARY))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END IN ()), (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST, NULL DESC, ((((rt0.c1)%(rt0.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END IN ()), (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST, NULL DESC, ((((rt0.c1)%(rt0.c3))) NOT NULL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)IS NOT(rt0.c3 COLLATE BINARY))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END IN ()), (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST, NULL DESC, ((((rt0.c1)%(rt0.c3))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END IN ()), (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST, NULL DESC, ((((rt0.c1)%(rt0.c3))) NOT NULL) ASC);
SELECT ALL * FROM v0, rt0 WHERE (((NULL)IS NOT(rt0.c3 COLLATE BINARY))) ORDER BY (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE v0.c0 END IN ()), (((rt0.c0) IS FALSE) IN ()) DESC  NULLS LAST, NULL DESC, ((((rt0.c1)%(rt0.c3))) NOT NULL) ASC;
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((((((((((((-361561062)OR(v0.c0)))AND(0.5417103474526659)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) AND ((NULLIF(DISTINCT rt0.c3, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((((((((((-361561062)OR(v0.c0)))AND(0.5417103474526659)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) AND ((NULLIF(DISTINCT rt0.c3, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((((((((((((-361561062)OR(v0.c0)))AND(0.5417103474526659)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) AND ((NULLIF(DISTINCT rt0.c3, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((((((((((((-361561062)OR(v0.c0)))AND(0.5417103474526659)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) AND ((NULLIF(DISTINCT rt0.c3, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((((((((((((-361561062)OR(v0.c0)))AND(0.5417103474526659)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))) AND ((NULLIF(DISTINCT rt0.c3, v0.c0)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, '', rt0.c1)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, '', rt0.c1)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (x''))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, '', rt0.c1)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, '', rt0.c1)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (x''))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c3, '', rt0.c1)))) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND (x'')));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<=(rt0.c3)))GLOB((~ (rt0.c2)))) WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c0))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((rt0.c0))>=((rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<=(rt0.c3)))GLOB((~ (rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<=(rt0.c3)))GLOB((~ (rt0.c2)))) WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c0))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((rt0.c0))>=((rt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<=(rt0.c3)))GLOB((~ (rt0.c2)))));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<=(rt0.c3)))GLOB((~ (rt0.c2)))) WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c0))>=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(0.6762934519502123)))OR(rt0.c0)))&(((rt0.c3)+(rt0.c3))))) ORDER BY (NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))) ASC, ((json_extract(rt0.c0, rt0.c2)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)GLOB(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(0.6762934519502123)))OR(rt0.c0)))&(((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))) ASC, ((json_extract(rt0.c0, rt0.c2)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)GLOB(rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(0.6762934519502123)))OR(rt0.c0)))&(((rt0.c3)+(rt0.c3))))) ORDER BY (NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))) ASC, ((json_extract(rt0.c0, rt0.c2)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)GLOB(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(0.6762934519502123)))OR(rt0.c0)))&(((rt0.c3)+(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))) ASC, ((json_extract(rt0.c0, rt0.c2)) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((rt0.c0)GLOB(rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (highlight((('0.5640082382405968')<=(v0.c0)), ((NULL)>>(rt0.c1)), CAST(rt0.c2 AS BLOB), NULL));
SELECT SUM(count) FROM (SELECT ALL ((highlight((('0.5640082382405968')<=(v0.c0)), ((NULL)>>(rt0.c1)), CAST(rt0.c2 AS BLOB), NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (highlight((('0.5640082382405968')<=(v0.c0)), ((NULL)>>(rt0.c1)), CAST(rt0.c2 AS BLOB), NULL));
SELECT SUM(count) FROM (SELECT ALL ((highlight((('0.5640082382405968')<=(v0.c0)), ((NULL)>>(rt0.c1)), CAST(rt0.c2 AS BLOB), NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (highlight((('0.5640082382405968')<=(v0.c0)), ((NULL)>>(rt0.c1)), CAST(rt0.c2 AS BLOB), NULL));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY NULL  NULLS FIRST, ((((v0.c0)<>(v0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST, ((((v0.c0)<>(v0.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY NULL  NULLS FIRST, ((((v0.c0)<>(v0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST, ((((v0.c0)<>(v0.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((v0.c0 COLLATE NOCASE)))) ORDER BY NULL  NULLS FIRST, ((((v0.c0)<>(v0.c0))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)/(((x'')=(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)<<(rt0.c2)))))  NULLS LAST, CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)/(((x'')=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)<<(rt0.c2)))))  NULLS LAST, CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)/(((x'')=(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)<<(rt0.c2)))))  NULLS LAST, CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)/(((x'')=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)<<(rt0.c2)))))  NULLS LAST, CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)/(((x'')=(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((((rt0.c1)<<(rt0.c2)))))  NULLS LAST, CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))OR(v0.c0)) THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2)) END);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (x''));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (x'')));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (x''));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (x'')));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY ((TYPEOF(DISTINCT v0.c0)) NOT BETWEEN (((((v0.c0)AND(v0.c0)))OR(v0.c0))) AND (x''));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)AND(rt0.c3)) IN (CAST(v0.c0 AS INTEGER), ((rt0.c2) NOTNULL))) WHERE (HEX(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)AND(rt0.c3)) IN (CAST(v0.c0 AS INTEGER), ((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)AND(rt0.c3)) IN (CAST(v0.c0 AS INTEGER), ((rt0.c2) NOTNULL))) WHERE (HEX(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)AND(rt0.c3)) IN (CAST(v0.c0 AS INTEGER), ((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1)AND(rt0.c3)) IN (CAST(v0.c0 AS INTEGER), ((rt0.c2) NOTNULL))) WHERE (HEX(DISTINCT (NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ('1296869611');
SELECT SUM(count) FROM (SELECT ALL (('1296869611') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1296869611');
SELECT SUM(count) FROM (SELECT ALL (('1296869611') IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ('1296869611');
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON rt0.c1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON rt0.c1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rt0.c1);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON rt0.c1 WHERE (rt0.c2);
SELECT * FROM rt0, v0 WHERE (((0.3962006359308311 COLLATE RTRIM) IS FALSE)) ORDER BY (((rt0.c3 IN (rt0.c3, rt0.c3)))-((('1226526749') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((rt0.c1 IN ()))||(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3962006359308311 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3 IN (rt0.c3, rt0.c3)))-((('1226526749') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((rt0.c1 IN ()))||(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((0.3962006359308311 COLLATE RTRIM) IS FALSE)) ORDER BY (((rt0.c3 IN (rt0.c3, rt0.c3)))-((('1226526749') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((rt0.c1 IN ()))||(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.3962006359308311 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c3 IN (rt0.c3, rt0.c3)))-((('1226526749') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((rt0.c1 IN ()))||(rt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, v0 WHERE (((0.3962006359308311 COLLATE RTRIM) IS FALSE)) ORDER BY (((rt0.c3 IN (rt0.c3, rt0.c3)))-((('1226526749') NOT BETWEEN (rt0.c0) AND (rt0.c1)))) DESC, (((rt0.c1 IN ()))||(rt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((((('')AND((NOT (rt0.c0)))))AND(v0.c0))) ORDER BY ((0X6ac49b7b)!=(((rt0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((NOT (rt0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0x6ac49b7b)<>(((rt0.c2) ISNULL))) DESC);
SELECT * FROM v0, rt0 WHERE ((((('')AND((NOT (rt0.c0)))))AND(v0.c0))) ORDER BY ((0X6ac49b7b)!=(((rt0.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')AND((NOT (rt0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((0x6ac49b7b)<>(((rt0.c2) ISNULL))) DESC);
SELECT * FROM v0, rt0 WHERE ((((('')AND((NOT (rt0.c0)))))AND(v0.c0))) ORDER BY ((0X6ac49b7b)!=(((rt0.c2) ISNULL))) DESC;
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))) BETWEEN ((~ (rt0.c3))) AND ((v0.c0 IN (v0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))) BETWEEN ((~ (rt0.c3))) AND ((v0.c0 IN (v0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))) BETWEEN ((~ (rt0.c3))) AND ((v0.c0 IN (v0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))) BETWEEN ((~ (rt0.c3))) AND ((v0.c0 IN (v0.c0, rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3))) BETWEEN ((~ (rt0.c3))) AND ((v0.c0 IN (v0.c0, rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((+ (LOWER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ (LOWER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (LOWER(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((+ (LOWER(DISTINCT v0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((NULL)AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((0X7f60d219)LIKE(0.013231352331886881)))OR(TYPEOF(''))))OR(((((v0.c0)AND(x'')))AND(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(json_valid('-361561062'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0x7f60d219)LIKE(0.013231352331886881)))OR(TYPEOF(''))))OR(((((v0.c0)AND(x'')))AND(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(json_valid('-361561062')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((0X7f60d219)LIKE(0.013231352331886881)))OR(TYPEOF(''))))OR(((((v0.c0)AND(x'')))AND(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(json_valid('-361561062'))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0x7f60d219)LIKE(0.013231352331886881)))OR(TYPEOF(''))))OR(((((v0.c0)AND(x'')))AND(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(json_valid('-361561062')))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((0X7f60d219)LIKE(0.013231352331886881)))OR(TYPEOF(''))))OR(((((v0.c0)AND(x'')))AND(v0.c0)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))OR(json_valid('-361561062'))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((((rt0.c0)IS(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (NULL));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) ORDER BY ((((rt0.c0)IS(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (NULL)));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((((rt0.c0)IS(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (NULL));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) ORDER BY ((((rt0.c0)IS(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (NULL)));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE NOCASE AS TEXT) WHERE ((CAST(rt0.c1 AS NUMERIC) IN ())) ORDER BY ((((rt0.c0)IS(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (NULL));
SELECT ALL * FROM rt0 WHERE (load_extension(('c(m-~' IN ()), ((rt0.c3)<(rt0.c0)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(('c(m-~' IN ()), ((rt0.c3)<(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (load_extension(('c(m-~' IN ()), ((rt0.c3)<(rt0.c0)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(('c(m-~' IN ()), ((rt0.c3)<(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY ASC);
SELECT * FROM v0 WHERE (((v0.c0)<(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)<(((v0.c0)<(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) ORDER BY (((v0.c0)+(v0.c0)) IN ()) ASC, ((v0.c0)>(-1469582317)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)+(v0.c0)) IN ()) ASC, ((v0.c0)>(-1469582317)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) ORDER BY (((v0.c0)+(v0.c0)) IN ()) ASC, ((v0.c0)>(-1469582317)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)+(v0.c0)) IN ()) ASC, ((v0.c0)>(-1469582317)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT NULL)) ORDER BY (((v0.c0)+(v0.c0)) IN ()) ASC, ((v0.c0)>(-1469582317)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (TIME(v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (- (TIME(v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (TIME(v0.c0, v0.c0, v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (- (TIME(v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (- (TIME(v0.c0, v0.c0, v0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(NULL)))AND(v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=(((x'7b805713')==(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(NULL)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=(((x'7b805713')=(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(NULL)))AND(v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=(((x'7b805713')==(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(NULL)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=(((x'7b805713')=(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(NULL)))AND(v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)<=(((x'7b805713')==(v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (LTRIM((+ (rt0.c2)))) ORDER BY (('Lp-ciZ*幊i')>((((0Xffffffffbf19c504)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM((+ (rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (('Lp-ciZ*幊i')>((((0xffffffffbf19c504)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC);
SELECT * FROM rt0, v0 WHERE (LTRIM((+ (rt0.c2)))) ORDER BY (('Lp-ciZ*幊i')>((((0Xffffffffbf19c504)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM((+ (rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (('Lp-ciZ*幊i')>((((0xffffffffbf19c504)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC);
SELECT * FROM rt0, v0 WHERE (LTRIM((+ (rt0.c2)))) ORDER BY (('Lp-ciZ*幊i')>((((0Xffffffffbf19c504)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) ASC;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0 WHERE (LENGTH(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY (((-323787501))<(((+ (x'd019'))))), rt0.c0, CAST(x'40d7' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((LENGTH(CASE WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY (((-323787501))<(((+ (x'd019'))))), rt0.c0, CAST(x'40d7' AS INTEGER) DESC);
SELECT * FROM rt0 WHERE (LENGTH(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY (((-323787501))<(((+ (x'd019'))))), rt0.c0, CAST(x'40d7' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((LENGTH(CASE WHEN rt0.c3 THEN rt0.c2 END)) IS TRUE)  as count FROM rt0 ORDER BY (((-323787501))<(((+ (x'd019'))))), rt0.c0, CAST(x'40d7' AS INTEGER) DESC);
SELECT * FROM rt0 WHERE (LENGTH(CASE WHEN rt0.c3 THEN rt0.c2 END)) ORDER BY (((-323787501))<(((+ (x'd019'))))), rt0.c0, CAST(x'40d7' AS INTEGER) DESC;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (NULL) ORDER BY '' ASC  NULLS FIRST, ((NULL)>>((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY '' ASC  NULLS FIRST, ((NULL)>>((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (NULL) ORDER BY '' ASC  NULLS FIRST, ((NULL)>>((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY '' ASC  NULLS FIRST, ((NULL)>>((rt0.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (NULL) ORDER BY '' ASC  NULLS FIRST, ((NULL)>>((rt0.c2 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM rt0 WHERE ((((0Xffffffff8f9058a6)|(rt0.c1)) IN (((rt0.c1)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffff8f9058a6)|(rt0.c1)) IN (((rt0.c1)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0Xffffffff8f9058a6)|(rt0.c1)) IN (((rt0.c1)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffff8f9058a6)|(rt0.c1)) IN (((rt0.c1)*(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0Xffffffff8f9058a6)|(rt0.c1)) IN (((rt0.c1)*(rt0.c0)))));
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) BETWEEN (((v0.c0) BETWEEN (rt0.c0) AND (NULL))) AND (((rt0.c1) IS TRUE)))) ORDER BY rt0.c3 ASC, CAST((rt0.c1 IN (rt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((v0.c0) BETWEEN (rt0.c0) AND (NULL))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3 ASC, CAST((rt0.c1 IN (rt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) BETWEEN (((v0.c0) BETWEEN (rt0.c0) AND (NULL))) AND (((rt0.c1) IS TRUE)))) ORDER BY rt0.c3 ASC, CAST((rt0.c1 IN (rt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((v0.c0) BETWEEN (rt0.c0) AND (NULL))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c3 ASC, CAST((rt0.c1 IN (rt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2) BETWEEN (((v0.c0) BETWEEN (rt0.c0) AND (NULL))) AND (((rt0.c1) IS TRUE)))) ORDER BY rt0.c3 ASC, CAST((rt0.c1 IN (rt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))/(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0))))/(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))/(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))>=((v0.c0))))/(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0))>=((v0.c0))))/(CAST(v0.c0 AS BLOB))));
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((((rt0.c2, v0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c1))))))) ORDER BY (((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN (((((x'8f00')) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c2 COLLATE RTRIM, rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, CAST(v0.c0 AS INTEGER), ((((x'')OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((((rt0.c2, v0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c1))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN (((((x'8f00')) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c2 COLLATE RTRIM, rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, CAST(v0.c0 AS INTEGER), ((((x'')OR(rt0.c1)))OR(rt0.c2))))));
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((((rt0.c2, v0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c1))))))) ORDER BY (((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN (((((x'8f00')) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c2 COLLATE RTRIM, rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, CAST(v0.c0 AS INTEGER), ((((x'')OR(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((((rt0.c2, v0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c1))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN (((((x'8f00')) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c2 COLLATE RTRIM, rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, CAST(v0.c0 AS INTEGER), ((((x'')OR(rt0.c1)))OR(rt0.c2))))));
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((((rt0.c2, v0.c0, rt0.c3)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c3, rt0.c1))))))) ORDER BY (((v0.c0, rt0.c0, v0.c0)) NOT BETWEEN (((((x'8f00')) BETWEEN ((rt0.c3)) AND ((rt0.c3))), rt0.c2 COLLATE RTRIM, rt0.c1)) AND ((rt0.c0 COLLATE NOCASE, CAST(v0.c0 AS INTEGER), ((((x'')OR(rt0.c1)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(COALESCE(DISTINCT '', v0.c0, v0.c0, rt0.c0))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))AND(COALESCE(DISTINCT '', v0.c0, v0.c0, rt0.c0))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(COALESCE(DISTINCT '', v0.c0, v0.c0, rt0.c0))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CAST(rt0.c0 AS REAL))AND(COALESCE(DISTINCT '', v0.c0, v0.c0, rt0.c0))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC)) ORDER BY ((((CAST(rt0.c0 AS REAL))AND(COALESCE(DISTINCT '', v0.c0, v0.c0, rt0.c0))))AND(CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((NULL)))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((NULL)))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((NULL)))) ORDER BY ((v0.c0 IN ()) IN ());
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((1.226526749E9) NOT NULL) WHERE (((rt0.c0 COLLATE BINARY)<>((((rt0.c2))>((rt0.c1)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)<>((((rt0.c2))>((rt0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((1.226526749E9) NOT NULL) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((1.226526749E9) NOT NULL) WHERE (((rt0.c0 COLLATE BINARY)<>((((rt0.c2))>((rt0.c1)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)<>((((rt0.c2))>((rt0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((1.226526749E9) NOT NULL) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((1.226526749E9) NOT NULL) WHERE (((rt0.c0 COLLATE BINARY)<>((((rt0.c2))>((rt0.c1)))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ())))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1 IN ())))>=((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND('-1000651789')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))) AND ((((rt0.c2)<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND('-1000651789')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))) AND ((((rt0.c2)<(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND('-1000651789')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))) AND ((((rt0.c2)<(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND('-1000651789')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))) AND ((((rt0.c2)<(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((((((rt0.c2)AND('-1000651789')))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))) AND ((((rt0.c2)<(rt0.c1))))));
SELECT * FROM v0, rt0 WHERE (((x'')LIKE(((v0.c0) IS TRUE)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN NULL ELSE v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')LIKE(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED ORDER BY CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN NULL ELSE v0.c0 END DESC);
SELECT * FROM v0, rt0 WHERE (((x'')LIKE(((v0.c0) IS TRUE)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN NULL ELSE v0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')LIKE(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, rt0 NOT INDEXED ORDER BY CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN NULL ELSE v0.c0 END DESC);
SELECT * FROM v0, rt0 WHERE (((x'')LIKE(((v0.c0) IS TRUE)))) ORDER BY CASE ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN NULL ELSE v0.c0 END DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)%(rt0.c0))) ISNULL)) ORDER BY CAST(((rt0.c1)*(x'')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(rt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c1)*(x'')) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)%(rt0.c0))) ISNULL)) ORDER BY CAST(((rt0.c1)*(x'')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(rt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((rt0.c1)*(x'')) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0)%(rt0.c0))) ISNULL)) ORDER BY CAST(((rt0.c1)*(x'')) AS REAL)  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((((((((((rt0.c0, rt0.c3, v0.c0))==((x'13f1', 0.7475509688125463, rt0.c1))))AND(SQLITE_COMPILEOPTION_USED('-1727820357'))))OR(rt0.c1 COLLATE NOCASE)))AND(((v0.c0)/(v0.c0)))))AND(v0.c0)) WHERE ((- (((rt0.c1)!=(rt0.c2))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((((((((rt0.c0, rt0.c3, v0.c0))=((x'13f1', 0.7475509688125463, rt0.c1))))AND(SQLITE_COMPILEOPTION_USED('-1727820357'))))OR(rt0.c1 COLLATE NOCASE)))AND(((v0.c0)/(v0.c0)))))AND(v0.c0)) ORDER BY NULL ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((((((((((rt0.c0, rt0.c3, v0.c0))==((x'13f1', 0.7475509688125463, rt0.c1))))AND(SQLITE_COMPILEOPTION_USED('-1727820357'))))OR(rt0.c1 COLLATE NOCASE)))AND(((v0.c0)/(v0.c0)))))AND(v0.c0)) WHERE ((- (((rt0.c1)!=(rt0.c2))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((((((((rt0.c0, rt0.c3, v0.c0))=((x'13f1', 0.7475509688125463, rt0.c1))))AND(SQLITE_COMPILEOPTION_USED('-1727820357'))))OR(rt0.c1 COLLATE NOCASE)))AND(((v0.c0)/(v0.c0)))))AND(v0.c0)) ORDER BY NULL ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((((((((((rt0.c0, rt0.c3, v0.c0))==((x'13f1', 0.7475509688125463, rt0.c1))))AND(SQLITE_COMPILEOPTION_USED('-1727820357'))))OR(rt0.c1 COLLATE NOCASE)))AND(((v0.c0)/(v0.c0)))))AND(v0.c0)) WHERE ((- (((rt0.c1)!=(rt0.c2))))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE WHEN v0.c0 THEN '''5' ELSE v0.c0 END  WHEN v0.c0 THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN '''5' ELSE v0.c0 END  WHEN v0.c0 THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE WHEN v0.c0 THEN '''5' ELSE v0.c0 END  WHEN v0.c0 THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) IS TRUE) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY CASE CASE WHEN v0.c0 THEN '''5' ELSE v0.c0 END  WHEN v0.c0 THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) IS TRUE) END);
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND(CAST(v0.c0 AS TEXT))))OR(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE WHEN v0.c0 THEN '''5' ELSE v0.c0 END  WHEN v0.c0 THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) IS TRUE) END;
SELECT COUNT(*) FROM v0 WHERE (((((0.8251705361103469, x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.8251705361103469, x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0.8251705361103469, x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((0.8251705361103469, x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((0.8251705361103469, x'', v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) IN ()));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '1559551131'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '1559551131'  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '1559551131'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY '1559551131'  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)&(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY '1559551131'  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.14484737619403876));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.14484737619403876)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.14484737619403876));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.14484737619403876)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c3 AS BLOB), 0.14484737619403876));
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((rt0.c2) IS FALSE));
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0))<>((rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))) ORDER BY ((((x'35932011') IS FALSE))<<(((v0.c0)-(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'35932011') IS FALSE))<<(((v0.c0)-(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0))<>((rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))) ORDER BY ((((x'35932011') IS FALSE))<<(((v0.c0)-(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))<>((rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((x'35932011') IS FALSE))<<(((v0.c0)-(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0))<>((rt0.c2)))) NOT BETWEEN (x'') AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE x'' END))) ORDER BY ((((x'35932011') IS FALSE))<<(((v0.c0)-(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<<(v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, 'Ocp';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<<(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)/(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, 'Ocp');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<<(v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, 'Ocp';
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<<(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)/(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, 'Ocp');
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)<<(v0.c0)) IN ())) ORDER BY ((((v0.c0)/(v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, 'Ocp';
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT (0x4721fe95 IN ()))) ORDER BY rt0.c0 DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (0x4721fe95 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 DESC  NULLS LAST, v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT (0x4721fe95 IN ()))) ORDER BY rt0.c0 DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (0x4721fe95 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c0 DESC  NULLS LAST, v0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (ABS(DISTINCT (0x4721fe95 IN ()))) ORDER BY rt0.c0 DESC  NULLS LAST, v0.c0  NULLS LAST;
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS INTEGER) WHERE ((((CAST('3028627455060947452' AS TEXT)))==((ABS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('3028627455060947452' AS TEXT)))==((ABS(rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS INTEGER));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS INTEGER) WHERE ((((CAST('3028627455060947452' AS TEXT)))==((ABS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST('3028627455060947452' AS TEXT)))==((ABS(rt0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS INTEGER));
SELECT * FROM v0 CROSS JOIN rt0 ON CAST(rt0.c3 COLLATE NOCASE AS INTEGER) WHERE ((((CAST('3028627455060947452' AS TEXT)))==((ABS(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (CAST(rt0.c3 AS REAL)) AND ((rt0.c2 IN (rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE (((((((0.11845239382129313)OR(rt0.c0)))AND(rt0.c3)))||(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((0.11845239382129313)OR(rt0.c0)))AND(rt0.c3)))||(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((0.11845239382129313)OR(rt0.c0)))AND(rt0.c3)))||(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((0.11845239382129313)OR(rt0.c0)))AND(rt0.c3)))||(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((0.11845239382129313)OR(rt0.c0)))AND(rt0.c3)))||(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (NULL) ORDER BY (+ (CAST(rt0.c2 AS REAL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((0.06947478940799423 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.06947478940799423 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((0.06947478940799423 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.06947478940799423 IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((0.06947478940799423 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('594201519' AS BLOB)) ORDER BY ((((((((((v0.c0)>>(v0.c0)))AND(((((((((((((x'd0b6')AND(v0.c0)))OR(x'63ac')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(json_quote(x''))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('594201519' AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)>>(v0.c0)))AND(((((((((((((x'd0b6')AND(v0.c0)))OR(x'63ac')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(json_quote(x''))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('594201519' AS BLOB)) ORDER BY ((((((((((v0.c0)>>(v0.c0)))AND(((((((((((((x'd0b6')AND(v0.c0)))OR(x'63ac')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(json_quote(x''))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('594201519' AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)>>(v0.c0)))AND(((((((((((((x'd0b6')AND(v0.c0)))OR(x'63ac')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(json_quote(x''))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST('594201519' AS BLOB)) ORDER BY ((((((((((v0.c0)>>(v0.c0)))AND(((((((((((((x'd0b6')AND(v0.c0)))OR(x'63ac')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))))AND((- (v0.c0)))))OR(json_quote(x''))))AND(CAST(v0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)+(v0.c0)))<=(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))<=(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)+(v0.c0)))<=(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)+(v0.c0)))<=(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)+(v0.c0)))<=(CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (CASE '-898622868'  WHEN rt0.c0 THEN v0.c0 END) AND ('p/tmn'))) ORDER BY '227441095'  NULLS FIRST, CAST(CASE rt0.c1  WHEN '581299683' THEN v0.c0 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (CASE '-898622868'  WHEN rt0.c0 THEN v0.c0 END) AND ('p/tmn'))) IS TRUE)  as count FROM v0, rt0 ORDER BY '227441095'  NULLS FIRST, CAST(CASE rt0.c1  WHEN '581299683' THEN v0.c0 END AS BLOB) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (CASE '-898622868'  WHEN rt0.c0 THEN v0.c0 END) AND ('p/tmn'))) ORDER BY '227441095'  NULLS FIRST, CAST(CASE rt0.c1  WHEN '581299683' THEN v0.c0 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (CASE '-898622868'  WHEN rt0.c0 THEN v0.c0 END) AND ('p/tmn'))) IS TRUE)  as count FROM v0, rt0 ORDER BY '227441095'  NULLS FIRST, CAST(CASE rt0.c1  WHEN '581299683' THEN v0.c0 END AS BLOB) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (CASE '-898622868'  WHEN rt0.c0 THEN v0.c0 END) AND ('p/tmn'))) ORDER BY '227441095'  NULLS FIRST, CAST(CASE rt0.c1  WHEN '581299683' THEN v0.c0 END AS BLOB) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)>>(v0.c0)), NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_remove(((v0.c0)>>(v0.c0)), NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)>>(v0.c0)), NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_remove(((v0.c0)>>(v0.c0)), NULL) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY json_remove(((v0.c0)>>(v0.c0)), NULL) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1)))&(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c1)))&(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1)))&(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c1)))&(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1)))&(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE ((('-959629275') NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)<=(v0.c0)) THEN (('\d.~f{N')|(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-959629275') NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)<=(v0.c0)) THEN (('\d.~f{N')|(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('-959629275') NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)<=(v0.c0)) THEN (('\d.~f{N')|(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-959629275') NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)<=(v0.c0)) THEN (('\d.~f{N')|(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((('-959629275') NOT BETWEEN (v0.c0) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY CASE WHEN ((v0.c0)<=(v0.c0)) THEN (('\d.~f{N')|(v0.c0)) END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (IFNULL((NOT (0.24873467693231932)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (0.24873467693231932)), (v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((NOT (0.24873467693231932)), (v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((NOT (0.24873467693231932)), (v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((NOT (0.24873467693231932)), (v0.c0 IN ())));
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY UNLIKELY(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(CAST(v0.c0 AS REAL)) ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY UNLIKELY(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(CAST(v0.c0 AS REAL)) ASC  NULLS LAST);
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) ORDER BY UNLIKELY(CAST(v0.c0 AS REAL)) ASC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN LIKELY(DISTINCT NULL) THEN (v0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN (v0.c0)) WHEN 0x2cd2ebc0 THEN (+ (v0.c0)) END) ORDER BY ((((((v0.c0)>>(v0.c0)))OR(x'')))AND((v0.c0 IN ()))) DESC  NULLS LAST, ((v0.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(DISTINCT NULL) THEN (v0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN (v0.c0)) WHEN 0X2cd2ebc0 THEN (+ (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)>>(v0.c0)))OR(x'')))AND((v0.c0 IN ()))) DESC  NULLS LAST, ((v0.c0) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN LIKELY(DISTINCT NULL) THEN (v0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN (v0.c0)) WHEN 0x2cd2ebc0 THEN (+ (v0.c0)) END) ORDER BY ((((((v0.c0)>>(v0.c0)))OR(x'')))AND((v0.c0 IN ()))) DESC  NULLS LAST, ((v0.c0) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LIKELY(DISTINCT NULL) THEN (v0.c0 IN ()) WHEN v0.c0 COLLATE RTRIM THEN (v0.c0 IN (v0.c0)) WHEN 0X2cd2ebc0 THEN (+ (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)>>(v0.c0)))OR(x'')))AND((v0.c0 IN ()))) DESC  NULLS LAST, ((v0.c0) ISNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY x''  NULLS LAST, ((rt0.c0) IS FALSE) COLLATE BINARY, ((((rt0.c2) BETWEEN (0xffffffffb96ebf64) AND (rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY x''  NULLS LAST, ((rt0.c0) IS FALSE) COLLATE BINARY, ((((rt0.c2) BETWEEN (0xffffffffb96ebf64) AND (rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY x''  NULLS LAST, ((rt0.c0) IS FALSE) COLLATE BINARY, ((((rt0.c2) BETWEEN (0xffffffffb96ebf64) AND (rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY x''  NULLS LAST, ((rt0.c0) IS FALSE) COLLATE BINARY, ((((rt0.c2) BETWEEN (0xffffffffb96ebf64) AND (rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY x''  NULLS LAST, ((rt0.c0) IS FALSE) COLLATE BINARY, ((((rt0.c2) BETWEEN (0xffffffffb96ebf64) AND (rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) AND (rt0.c2 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (x'');
SELECT ALL * FROM v0, rt0 WHERE ('1758418633') ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1758418633') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ('1758418633') ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1758418633') IS TRUE)  as count FROM v0, rt0 ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ('1758418633') ORDER BY ((((CASE WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END)AND(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c3)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((- ((((rt0.c3))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c3))==((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- ((((rt0.c3))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c3))==((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((- ((((rt0.c3))==((rt0.c2))))));
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY CAST(IFNULL(DISTINCT rt0.c3, NULL) AS TEXT) DESC, (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), (((rt0.c1 IN ()))IS NOT(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(IFNULL(DISTINCT rt0.c3, NULL) AS TEXT) DESC, (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), (((rt0.c1 IN ()))IS NOT(((rt0.c0) IS TRUE))));
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY CAST(IFNULL(DISTINCT rt0.c3, NULL) AS TEXT) DESC, (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), (((rt0.c1 IN ()))IS NOT(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(IFNULL(DISTINCT rt0.c3, NULL) AS TEXT) DESC, (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), (((rt0.c1 IN ()))IS NOT(((rt0.c0) IS TRUE))));
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE) ORDER BY CAST(IFNULL(DISTINCT rt0.c3, NULL) AS TEXT) DESC, (~ (((((rt0.c0)AND(rt0.c3)))AND(rt0.c2)))), (((rt0.c1 IN ()))IS NOT(((rt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(CASE WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c3)IS NOT(rt0.c1)))) ORDER BY ((x'')OR(x''));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c3)IS NOT(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')OR(x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(CASE WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c3)IS NOT(rt0.c1)))) ORDER BY ((x'')OR(x''));
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c3)IS NOT(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'')OR(x'')));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(CASE WHEN rt0.c3 THEN rt0.c3 END, ((rt0.c3)IS NOT(rt0.c1)))) ORDER BY ((x'')OR(x''));
SELECT ALL * FROM v0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (x'' COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)IS(rt0.c3)) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)IS(rt0.c3)) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)IS(rt0.c3)) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)IS(rt0.c3)) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((rt0.c2)<=(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3)IS(rt0.c3)) THEN UNLIKELY(DISTINCT rt0.c1) ELSE ((rt0.c2)<=(rt0.c2)) END);
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ()));
SELECT ALL * FROM rt0 WHERE (CASE ((-1826491251)!=(rt0.c2))  WHEN rt0.c1 THEN UNLIKELY(rt0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((-1826491251)!=(rt0.c2))  WHEN rt0.c1 THEN UNLIKELY(rt0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((-1826491251)!=(rt0.c2))  WHEN rt0.c1 THEN UNLIKELY(rt0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((-1826491251)!=(rt0.c2))  WHEN rt0.c1 THEN UNLIKELY(rt0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c0 END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((-1826491251)!=(rt0.c2))  WHEN rt0.c1 THEN UNLIKELY(rt0.c0) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0)-(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN rt0.c0 END);
SELECT * FROM rt0, v0 WHERE ((((((((((('')OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)!=(NULL))) AND (HEX(rt0.c2)))) ORDER BY ((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((('')OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)<>(NULL))) AND (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))));
SELECT * FROM rt0, v0 WHERE ((((((((((('')OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)!=(NULL))) AND (HEX(rt0.c2)))) ORDER BY ((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((('')OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)<>(NULL))) AND (HEX(rt0.c2)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))));
SELECT * FROM rt0, v0 WHERE ((((((((((('')OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c1)!=(NULL))) AND (HEX(rt0.c2)))) ORDER BY ((((((rt0.c0)OR(v0.c0)))OR(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))IS(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))IS(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))IS(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT NULL))IS(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT NULL))IS(((rt0.c3) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.23482401018162247));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) IS FALSE), 0.23482401018162247)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.23482401018162247));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c0) IS FALSE), 0.23482401018162247)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(((rt0.c0) IS FALSE), 0.23482401018162247));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c3)AND(rt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c3)AND(rt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c3)AND(rt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c3)AND(rt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT ((rt0.c3)AND(rt0.c0)), ((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))) WHERE ((+ (v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((CASE WHEN '' THEN v0.c0 END) BETWEEN (((v0.c0)%(rt0.c1))) AND (CASE rt0.c2  WHEN '-1088830204' THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN '' THEN v0.c0 END) BETWEEN (((v0.c0)%(rt0.c1))) AND (CASE rt0.c2  WHEN '-1088830204' THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((CASE WHEN '' THEN v0.c0 END) BETWEEN (((v0.c0)%(rt0.c1))) AND (CASE rt0.c2  WHEN '-1088830204' THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((CASE WHEN '' THEN v0.c0 END) BETWEEN (((v0.c0)%(rt0.c1))) AND (CASE rt0.c2  WHEN '-1088830204' THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY ((CASE WHEN '' THEN v0.c0 END) BETWEEN (((v0.c0)%(rt0.c1))) AND (CASE rt0.c2  WHEN '-1088830204' THEN rt0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END)) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((((NOT (rt0.c3)))AND((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))AND((x'' IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((NOT (rt0.c3)))AND((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))AND((x'' IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((NOT (rt0.c3)))AND((x'' IN ()))));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c3 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) ELSE (('0_RGw2璵_N')||(rt0.c3)) END) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c3) ISNULL), rt0.c0, ((((((((rt0.c0)AND(rt0.c2)))AND('1542611247')))OR(rt0.c3)))OR(rt0.c0)))) AND ((((rt0.c1)&(x'')), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) ELSE (('0_RGw2璵_N')||(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c3) ISNULL), rt0.c0, ((((((((rt0.c0)AND(rt0.c2)))AND('1542611247')))OR(rt0.c3)))OR(rt0.c0)))) AND ((((rt0.c1)&(x'')), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) ELSE (('0_RGw2璵_N')||(rt0.c3)) END) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c3) ISNULL), rt0.c0, ((((((((rt0.c0)AND(rt0.c2)))AND('1542611247')))OR(rt0.c3)))OR(rt0.c0)))) AND ((((rt0.c1)&(x'')), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) ELSE (('0_RGw2璵_N')||(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c3) ISNULL), rt0.c0, ((((((((rt0.c0)AND(rt0.c2)))AND('1542611247')))OR(rt0.c3)))OR(rt0.c0)))) AND ((((rt0.c1)&(x'')), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN ((rt0.c1) ISNULL) ELSE (('0_RGw2璵_N')||(rt0.c3)) END) ORDER BY (((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c3) ISNULL), rt0.c0, ((((((((rt0.c0)AND(rt0.c2)))AND('1542611247')))OR(rt0.c3)))OR(rt0.c0)))) AND ((((rt0.c1)&(x'')), ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), rt0.c3)));
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c3)<(rt0.c3)))) ORDER BY (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c3)<(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c3)<(rt0.c3)))) ORDER BY (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((rt0.c3)<(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c3)<(rt0.c3)))) ORDER BY (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY x'756cdcc2' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY x'756cdcc2' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY x'756cdcc2' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY x'756cdcc2' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY x'756cdcc2' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) ORDER BY CASE WHEN '[Gr2' THEN ((rt0.c0)>=(rt0.c2)) WHEN (rt0.c1 IN (rt0.c0)) THEN '' WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)) WHEN ((((((((((((rt0.c1)OR('DID<')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c0)%(rt0.c3)) WHEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c0)/(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN json_extract(x'6424', rt0.c2) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE ((rt0.c1)/(rt0.c3)) END  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c3)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '[Gr2' THEN ((rt0.c0)>=(rt0.c2)) WHEN (rt0.c1 IN (rt0.c0)) THEN '' WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)) WHEN ((((((((((((rt0.c1)OR('DID<')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c0)%(rt0.c3)) WHEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c0)/(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN json_extract(x'6424', rt0.c2) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE ((rt0.c1)/(rt0.c3)) END  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c3)))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) ORDER BY CASE WHEN '[Gr2' THEN ((rt0.c0)>=(rt0.c2)) WHEN (rt0.c1 IN (rt0.c0)) THEN '' WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)) WHEN ((((((((((((rt0.c1)OR('DID<')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c0)%(rt0.c3)) WHEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c0)/(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN json_extract(x'6424', rt0.c2) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE ((rt0.c1)/(rt0.c3)) END  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c3)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '[Gr2' THEN ((rt0.c0)>=(rt0.c2)) WHEN (rt0.c1 IN (rt0.c0)) THEN '' WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)) WHEN ((((((((((((rt0.c1)OR('DID<')))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c0)%(rt0.c3)) WHEN ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)) THEN ((rt0.c0)/(rt0.c2)) WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN json_extract(x'6424', rt0.c2) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE ((rt0.c1)/(rt0.c3)) END  NULLS LAST, (((((rt0.c3, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c3)))) NOT NULL) DESC);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, (v0.c0 IN ()))) AND ((((v0.c0)+(rt0.c2)), LIKELY(rt0.c2), ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, (v0.c0 IN ()))) AND ((((v0.c0)+(rt0.c2)), LIKELY(rt0.c2), ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, (v0.c0 IN ()))) AND ((((v0.c0)+(rt0.c2)), LIKELY(rt0.c2), ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, (v0.c0 IN ()))) AND ((((v0.c0)+(rt0.c2)), LIKELY(rt0.c2), ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, (v0.c0 IN ()))) AND ((((v0.c0)+(rt0.c2)), LIKELY(rt0.c2), ((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))));
SELECT * FROM v0 WHERE (((UPPER(DISTINCT NULL)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (TRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (TRIM(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((UPPER(DISTINCT NULL)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (TRIM(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT NULL)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (TRIM(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((UPPER(DISTINCT NULL)) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (TRIM(v0.c0))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL));
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((NULL) NOT NULL)))) ORDER BY (NOT ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((NULL) NOT NULL)))) ORDER BY (NOT ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(((NULL) NOT NULL)))) ORDER BY (NOT ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('1276032632') ORDER BY (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY  NULLS LAST, (~ (((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('1276032632') IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY  NULLS LAST, (~ (((rt0.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('1276032632') ORDER BY (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY  NULLS LAST, (~ (((rt0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('1276032632') IS TRUE)  as count FROM rt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY  NULLS LAST, (~ (((rt0.c2) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('1276032632') ORDER BY (((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE BINARY  NULLS LAST, (~ (((rt0.c2) NOT NULL))) ASC;
SELECT COUNT(*) FROM v0 WHERE ('D~') ORDER BY ((((v0.c0)|(x'dd75')))<(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('D~') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(x'dd75')))<(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ('D~') ORDER BY ((((v0.c0)|(x'dd75')))<(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('D~') IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(x'dd75')))<(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ('D~') ORDER BY ((((v0.c0)|(x'dd75')))<(((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ASC;
SELECT * FROM rt0, v0 WHERE (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))  WHEN ((rt0.c0)=(0.30804354605792106)) THEN MIN(rt0.c3, rt0.c2, rt0.c1, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))  WHEN ((rt0.c0)==(0.30804354605792106)) THEN MIN(rt0.c3, rt0.c2, rt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))  WHEN ((rt0.c0)=(0.30804354605792106)) THEN MIN(rt0.c3, rt0.c2, rt0.c1, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))  WHEN ((rt0.c0)==(0.30804354605792106)) THEN MIN(rt0.c3, rt0.c2, rt0.c1, rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))  WHEN ((rt0.c0)=(0.30804354605792106)) THEN MIN(rt0.c3, rt0.c2, rt0.c1, rt0.c0) END);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (0.4245469058303626) AND (v0.c0)))OR(((v0.c0)>=(v0.c0)))))AND(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((v0.c0 IN (v0.c0)))IS NOT((x'' IN (v0.c0)))) DESC  NULLS FIRST, ((((((((v0.c0)AND(CAST(v0.c0 AS INTEGER))))AND(x'')))OR(v0.c0)))AND(((v0.c0) NOTNULL))), v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (0.4245469058303626) AND (v0.c0)))OR(((v0.c0)>=(v0.c0)))))AND(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))IS NOT((x'' IN (v0.c0)))) DESC  NULLS FIRST, ((((((((v0.c0)AND(CAST(v0.c0 AS INTEGER))))AND(x'')))OR(v0.c0)))AND(((v0.c0) NOTNULL))), v0.c0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (0.4245469058303626) AND (v0.c0)))OR(((v0.c0)>=(v0.c0)))))AND(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((v0.c0 IN (v0.c0)))IS NOT((x'' IN (v0.c0)))) DESC  NULLS FIRST, ((((((((v0.c0)AND(CAST(v0.c0 AS INTEGER))))AND(x'')))OR(v0.c0)))AND(((v0.c0) NOTNULL))), v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (0.4245469058303626) AND (v0.c0)))OR(((v0.c0)>=(v0.c0)))))AND(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))IS NOT((x'' IN (v0.c0)))) DESC  NULLS FIRST, ((((((((v0.c0)AND(CAST(v0.c0 AS INTEGER))))AND(x'')))OR(v0.c0)))AND(((v0.c0) NOTNULL))), v0.c0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (0.4245469058303626) AND (v0.c0)))OR(((v0.c0)>=(v0.c0)))))AND(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((v0.c0 IN (v0.c0)))IS NOT((x'' IN (v0.c0)))) DESC  NULLS FIRST, ((((((((v0.c0)AND(CAST(v0.c0 AS INTEGER))))AND(x'')))OR(v0.c0)))AND(((v0.c0) NOTNULL))), v0.c0;
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c0), (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT TRIM(DISTINCT rt0.c0), (rt0.c3 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c0), (rt0.c3 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT TRIM(DISTINCT rt0.c0), (rt0.c3 IN ()))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT TRIM(DISTINCT rt0.c0), (rt0.c3 IN ())));
SELECT ALL * FROM rt0 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(((((0.5391061456859024)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1)!=(''))) NOT NULL) ASC, (NOT (((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt0.c0, rt0.c2))OR(((((0.5391061456859024)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(''))) NOT NULL) ASC, (NOT (((rt0.c3) ISNULL))));
SELECT ALL * FROM rt0 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(((((0.5391061456859024)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1)!=(''))) NOT NULL) ASC, (NOT (((rt0.c3) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(rt0.c0, rt0.c2))OR(((((0.5391061456859024)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<>(''))) NOT NULL) ASC, (NOT (((rt0.c3) ISNULL))));
SELECT ALL * FROM rt0 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(((((0.5391061456859024)AND(rt0.c3)))AND(rt0.c0)))))AND(rt0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c1)!=(''))) NOT NULL) ASC, (NOT (((rt0.c3) ISNULL)));
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('' COLLATE BINARY) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ('' COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0 COLLATE BINARY))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0 COLLATE BINARY))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)>>(v0.c0)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c0)OR(v0.c0 COLLATE BINARY))) ORDER BY CAST(((v0.c0)>>(v0.c0)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((NOT (v0.c0)))AND(((rt0.c3)-('-1021878395')))))AND(v0.c0 COLLATE RTRIM)) WHERE (((NULL COLLATE NOCASE)<=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)<=((NOT (rt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((NOT (v0.c0)))AND(((rt0.c3)-('-1021878395')))))AND(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((NOT (v0.c0)))AND(((rt0.c3)-('-1021878395')))))AND(v0.c0 COLLATE RTRIM)) WHERE (((NULL COLLATE NOCASE)<=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)<=((NOT (rt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((((NOT (v0.c0)))AND(((rt0.c3)-('-1021878395')))))AND(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((((NOT (v0.c0)))AND(((rt0.c3)-('-1021878395')))))AND(v0.c0 COLLATE RTRIM)) WHERE (((NULL COLLATE NOCASE)<=((NOT (rt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((x'')>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((x'')>(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((x'')>(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((x'')>(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((x'')>(v0.c0))))));
SELECT ALL * FROM v0, rt0 WHERE (((NULLIF(v0.c0, rt0.c3))AND(((rt0.c0)<(rt0.c3))))) ORDER BY ((rt0.c3) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, rt0.c3))AND(((rt0.c0)<(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3) NOTNULL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((NULLIF(v0.c0, rt0.c3))AND(((rt0.c0)<(rt0.c3))))) ORDER BY ((rt0.c3) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(v0.c0, rt0.c3))AND(((rt0.c0)<(rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3) NOTNULL) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((NULLIF(v0.c0, rt0.c3))AND(((rt0.c0)<(rt0.c3))))) ORDER BY ((rt0.c3) NOTNULL) DESC;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)+(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 WHERE (CASE x'8c52'  WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'8c52'  WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE x'8c52'  WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE x'8c52'  WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE x'8c52'  WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS REAL) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>(v0.c0)) END);
SELECT * FROM rt0, v0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c2)-(rt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS FIRST, 0.0662957515885898, ((((v0.c0 COLLATE NOCASE)OR(((((((((rt0.c3)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c2)-(rt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS FIRST, 0.0662957515885898, ((((v0.c0 COLLATE NOCASE)OR(((((((((rt0.c3)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR((rt0.c2 IN ()))) ASC);
SELECT * FROM rt0, v0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c2)-(rt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS FIRST, 0.0662957515885898, ((((v0.c0 COLLATE NOCASE)OR(((((((((rt0.c3)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c2)-(rt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS FIRST, 0.0662957515885898, ((((v0.c0 COLLATE NOCASE)OR(((((((((rt0.c3)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR((rt0.c2 IN ()))) ASC);
SELECT * FROM rt0, v0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c2)-(rt0.c0)) ELSE CAST(rt0.c0 AS NUMERIC) END DESC  NULLS FIRST, 0.0662957515885898, ((((v0.c0 COLLATE NOCASE)OR(((((((((rt0.c3)OR(v0.c0)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR((rt0.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(v0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))))) ORDER BY ((CAST(v0.c0 AS INTEGER)) IS TRUE);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c1)))<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(rt0.c1)))<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c1)))<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>(rt0.c1)))<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c1)))<((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0, v0 WHERE ((-1.88636553E9 COLLATE BINARY IN ())) ORDER BY CASE WHEN CAST(NULL AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((-1.88636553E9 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(NULL AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE (rt0.c0 IN ()) END ASC);
SELECT ALL * FROM rt0, v0 WHERE ((-1.88636553E9 COLLATE BINARY IN ())) ORDER BY CASE WHEN CAST(NULL AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((-1.88636553E9 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN CAST(NULL AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE (rt0.c0 IN ()) END ASC);
SELECT ALL * FROM rt0, v0 WHERE ((-1.88636553E9 COLLATE BINARY IN ())) ORDER BY CASE WHEN CAST(NULL AS INTEGER) THEN ((rt0.c2) ISNULL) ELSE (rt0.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'3878')<(0.3549353776142212))) BETWEEN (((rt0.c3)&(rt0.c2))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN '628727583' THEN rt0.c3 WHEN rt0.c1 THEN '!R\n3b+c' WHEN rt0.c3 THEN rt0.c3 END)*(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'3878')<(0.3549353776142212))) BETWEEN (((rt0.c3)&(rt0.c2))) AND ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN '628727583' THEN rt0.c3 WHEN rt0.c1 THEN '!R\n3b+c' WHEN rt0.c3 THEN rt0.c3 END)*(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'3878')<(0.3549353776142212))) BETWEEN (((rt0.c3)&(rt0.c2))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN '628727583' THEN rt0.c3 WHEN rt0.c1 THEN '!R\n3b+c' WHEN rt0.c3 THEN rt0.c3 END)*(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((x'3878')<(0.3549353776142212))) BETWEEN (((rt0.c3)&(rt0.c2))) AND ((rt0.c0 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN '628727583' THEN rt0.c3 WHEN rt0.c1 THEN '!R\n3b+c' WHEN rt0.c3 THEN rt0.c3 END)*(((NULL) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((x'3878')<(0.3549353776142212))) BETWEEN (((rt0.c3)&(rt0.c2))) AND ((rt0.c0 IN (rt0.c2))))) ORDER BY ((CASE rt0.c1  WHEN '628727583' THEN rt0.c3 WHEN rt0.c1 THEN '!R\n3b+c' WHEN rt0.c3 THEN rt0.c3 END)*(((NULL) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT * FROM rt0, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) ORDER BY (CAST(rt0.c0 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<<(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<<(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<<(rt0.c0)) AS INTEGER));
SELECT ALL * FROM v0, rt0 WHERE (-562823829);
SELECT SUM(count) FROM (SELECT ((-562823829) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (-562823829);
SELECT SUM(count) FROM (SELECT ((-562823829) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (-562823829);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)>(v0.c0))))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)>(v0.c0))))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c0)>(v0.c0))))) ORDER BY ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ((+ (LOWER(rt0.c3)))) ORDER BY ((HEX(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt0.c3)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 ORDER BY ((HEX(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ((+ (LOWER(rt0.c3)))) ORDER BY ((HEX(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(rt0.c3)))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON rt0.c2 ORDER BY ((HEX(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))));
SELECT * FROM v0 INNER JOIN rt0 ON rt0.c2 WHERE ((+ (LOWER(rt0.c3)))) ORDER BY ((HEX(DISTINCT rt0.c1)) BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0))));
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0) ISNULL))) WHERE ('1559551131') ORDER BY 0.6599850895699623 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1559551131') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0) ISNULL))) ORDER BY 0.6599850895699623 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0) ISNULL))) WHERE ('1559551131') ORDER BY 0.6599850895699623 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1559551131') IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0) ISNULL))) ORDER BY 0.6599850895699623 COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN v0 ON (~ (((rt0.c0) ISNULL))) WHERE ('1559551131') ORDER BY 0.6599850895699623 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(LIKELY(v0.c0) AS NUMERIC) WHERE ((((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1, rt0.c1)))) AND (((+ (rt0.c1)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1, rt0.c1)))) AND (((+ (rt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(LIKELY(v0.c0) AS NUMERIC) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(LIKELY(v0.c0) AS NUMERIC) WHERE ((((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1, rt0.c1)))) AND (((+ (rt0.c1)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1, rt0.c1)))) AND (((+ (rt0.c1)))))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CAST(LIKELY(v0.c0) AS NUMERIC) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CAST(LIKELY(v0.c0) AS NUMERIC) WHERE ((((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c1, rt0.c1)))) AND (((+ (rt0.c1)))))) ORDER BY (~ ((rt0.c2 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c3 IN (v0.c0))))<(((',H#/6{S1D' IN ()))))) ORDER BY 1980985602;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN (v0.c0))))<(((',H#/6{S1D' IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY 1980985602);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c3 IN (v0.c0))))<(((',H#/6{S1D' IN ()))))) ORDER BY 1980985602;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 IN (v0.c0))))<(((',H#/6{S1D' IN ()))))) IS TRUE)  as count FROM rt0, v0 ORDER BY 1980985602);
SELECT ALL * FROM rt0, v0 WHERE (0x5073c4d7);
SELECT SUM(count) FROM (SELECT ALL ((0X5073c4d7) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (0x5073c4d7);
SELECT SUM(count) FROM (SELECT ALL ((0X5073c4d7) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (0x5073c4d7);
SELECT ALL * FROM v0 WHERE (((0.2727050303681833) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.2727050303681833) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.2727050303681833) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((0.2727050303681833) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((0.2727050303681833) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (+ (((rt0.c3)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)>=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (+ (((rt0.c3)>=(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)>=(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY (+ (((rt0.c3)>=(rt0.c2))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((NOT (CAST(rt0.c3 AS INTEGER))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY '' DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY '' DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY '' DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)))/(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((~ (rt0.c1)))>((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)))/(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))>((NOT (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)))/(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((~ (rt0.c1)))>((NOT (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)))/(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))>((NOT (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (NULL)))/(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((~ (rt0.c1)))>((NOT (rt0.c2)))) ASC;
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((- (v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS TRUE))-(CASE WHEN v0.c0 THEN v0.c0 END)));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)-(v0.c0)))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)<('9223372036854775807'))) AND ((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(v0.c0)))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)<('9223372036854775807'))) AND ((~ (rt0.c3)))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)-(v0.c0)))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)<('9223372036854775807'))) AND ((~ (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)-(v0.c0)))/(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)<('9223372036854775807'))) AND ((~ (rt0.c3)))));
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)-(v0.c0)))/(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((rt0.c1)<('9223372036854775807'))) AND ((~ (rt0.c3))));
SELECT ALL * FROM rt0 WHERE ((((('RU')OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c1)|(rt0.c1))))) ORDER BY (((((0Xffffffffecb36513)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c1, '-836382237')))));
SELECT SUM(count) FROM (SELECT ALL (((((('RU')OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((0xffffffffecb36513)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c1, '-836382237'))))));
SELECT ALL * FROM rt0 WHERE ((((('RU')OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c1)|(rt0.c1))))) ORDER BY (((((0Xffffffffecb36513)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c1, '-836382237')))));
SELECT SUM(count) FROM (SELECT ALL (((((('RU')OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c1)|(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((0xffffffffecb36513)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c1, '-836382237'))))));
SELECT ALL * FROM rt0 WHERE ((((('RU')OR(rt0.c3 COLLATE NOCASE)))AND(((rt0.c1)|(rt0.c1))))) ORDER BY (((((0Xffffffffecb36513)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) BETWEEN ((- (rt0.c0))) AND ((((rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c2, rt0.c3, NULL)) AND ((rt0.c2, rt0.c1, '-836382237')))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND ((NOT (rt0.c2))))) ORDER BY (((((((((rt0.c0 IN ()))OR(((0.14218101109497072) IS FALSE))))AND(((rt0.c0)==(rt0.c3)))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)IS NOT('1605218897'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c0) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c0 IN ()))OR(((0.14218101109497072) IS FALSE))))AND(((rt0.c0)==(rt0.c3)))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)IS NOT('1605218897'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND ((NOT (rt0.c2))))) ORDER BY (((((((((rt0.c0 IN ()))OR(((0.14218101109497072) IS FALSE))))AND(((rt0.c0)==(rt0.c3)))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)IS NOT('1605218897'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c0) AND ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((rt0.c0 IN ()))OR(((0.14218101109497072) IS FALSE))))AND(((rt0.c0)==(rt0.c3)))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)IS NOT('1605218897'))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c0) AND ((NOT (rt0.c2))))) ORDER BY (((((((((rt0.c0 IN ()))OR(((0.14218101109497072) IS FALSE))))AND(((rt0.c0)==(rt0.c3)))))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c0)IS NOT('1605218897'))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CHANGES()));
SELECT SUM(count) FROM (SELECT ((CHAR(CHANGES())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CHANGES()));
SELECT SUM(count) FROM (SELECT ((CHAR(CHANGES())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CHAR(CHANGES()));
SELECT ALL * FROM v0 WHERE (((((v0.c0)!=(v0.c0)))|(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)!=(v0.c0)))|(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)!=(v0.c0)))|(((v0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)!=(v0.c0)))|(((v0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)!=(v0.c0)))|(((v0.c0)IS(v0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(((rt0.c1)<(rt0.c2)), 0.9493052769607349)) ORDER BY -1383194641 DESC, ((((v0.c0)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((NULL)<>(rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN (CAST('906463954' AS INTEGER)) AND ('沕 䏳'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1)<(rt0.c2)), 0.9493052769607349)) IS TRUE)  as count FROM rt0, v0 ORDER BY -1383194641 DESC, ((((v0.c0)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((NULL)<>(rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN (CAST('906463954' AS INTEGER)) AND ('沕 䏳'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LIKELIHOOD(((rt0.c1)<(rt0.c2)), 0.9493052769607349)) ORDER BY -1383194641 DESC, ((((v0.c0)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((NULL)<>(rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN (CAST('906463954' AS INTEGER)) AND ('沕 䏳'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c1)<(rt0.c2)), 0.9493052769607349)) IS TRUE)  as count FROM rt0, v0 ORDER BY -1383194641 DESC, ((((v0.c0)>>(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((NULL)<>(rt0.c0))))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (v0.c0))) BETWEEN (CAST('906463954' AS INTEGER)) AND ('沕 䏳'))  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (('Qu綘') IS FALSE) END) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 END))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN (('Qu綘') IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 END))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (('Qu綘') IS FALSE) END) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 END))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3) IS TRUE) THEN (('Qu綘') IS FALSE) END) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 END))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c3) IS TRUE) THEN (('Qu綘') IS FALSE) END) ORDER BY (((CASE WHEN rt0.c3 THEN rt0.c3 END))>=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) DESC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((json(rt0.c2))OR(CASE WHEN 0.7461307032486454 THEN rt0.c1 ELSE rt0.c2 END)))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ((((0.14218101109497072))>=(((- (rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS BLOB)))==((rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((0.14218101109497072))>=(((- (rt0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((json(rt0.c2))OR(CASE WHEN 0.7461307032486454 THEN rt0.c1 ELSE rt0.c2 END)))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY (((CAST(rt0.c1 AS BLOB)))=((rt0.c2 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((json(rt0.c2))OR(CASE WHEN 0.7461307032486454 THEN rt0.c1 ELSE rt0.c2 END)))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ((((0.14218101109497072))>=(((- (rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS BLOB)))==((rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((0.14218101109497072))>=(((- (rt0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((json(rt0.c2))OR(CASE WHEN 0.7461307032486454 THEN rt0.c1 ELSE rt0.c2 END)))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))) ORDER BY (((CAST(rt0.c1 AS BLOB)))=((rt0.c2 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((json(rt0.c2))OR(CASE WHEN 0.7461307032486454 THEN rt0.c1 ELSE rt0.c2 END)))OR(((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)))) WHERE ((((0.14218101109497072))>=(((- (rt0.c0)))))) ORDER BY (((CAST(rt0.c1 AS BLOB)))==((rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) ORDER BY CASE COALESCE(rt0.c0, NULL)  WHEN rt0.c1 THEN (rt0.c0 IN ()) WHEN rt0.c3 THEN ((((rt0.c2)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) ISNULL) THEN rt0.c0 ELSE ((rt0.c0)%(rt0.c3)) END, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE COALESCE(rt0.c0, NULL)  WHEN rt0.c1 THEN (rt0.c0 IN ()) WHEN rt0.c3 THEN ((((rt0.c2)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) ISNULL) THEN rt0.c0 ELSE ((rt0.c0)%(rt0.c3)) END, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) ORDER BY CASE COALESCE(rt0.c0, NULL)  WHEN rt0.c1 THEN (rt0.c0 IN ()) WHEN rt0.c3 THEN ((((rt0.c2)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) ISNULL) THEN rt0.c0 ELSE ((rt0.c0)%(rt0.c3)) END, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE COALESCE(rt0.c0, NULL)  WHEN rt0.c1 THEN (rt0.c0 IN ()) WHEN rt0.c3 THEN ((((rt0.c2)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) ISNULL) THEN rt0.c0 ELSE ((rt0.c0)%(rt0.c3)) END, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (ABS((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) ORDER BY CASE COALESCE(rt0.c0, NULL)  WHEN rt0.c1 THEN (rt0.c0 IN ()) WHEN rt0.c3 THEN ((((rt0.c2)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c0) ISNULL) THEN rt0.c0 ELSE ((rt0.c0)%(rt0.c3)) END, ((v0.c0 COLLATE NOCASE) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, v0.c0)) BETWEEN (((rt0.c0 IN ()), ((((rt0.c0)OR(rt0.c0)))OR(v0.c0)), v0.c0)) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), LOWER(rt0.c2), ((rt0.c1)OR(rt0.c1)))))) ORDER BY ((((rt0.c3)/(rt0.c3)))<=(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, v0.c0)) BETWEEN (((rt0.c0 IN ()), ((((rt0.c0)OR(rt0.c0)))OR(v0.c0)), v0.c0)) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), LOWER(rt0.c2), ((rt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3)/(rt0.c3)))<=(NULL)) DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, v0.c0)) BETWEEN (((rt0.c0 IN ()), ((((rt0.c0)OR(rt0.c0)))OR(v0.c0)), v0.c0)) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), LOWER(rt0.c2), ((rt0.c1)OR(rt0.c1)))))) ORDER BY ((((rt0.c3)/(rt0.c3)))<=(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, v0.c0)) BETWEEN (((rt0.c0 IN ()), ((((rt0.c0)OR(rt0.c0)))OR(v0.c0)), v0.c0)) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), LOWER(rt0.c2), ((rt0.c1)OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c3)/(rt0.c3)))<=(NULL)) DESC);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1, rt0.c0, v0.c0)) BETWEEN (((rt0.c0 IN ()), ((((rt0.c0)OR(rt0.c0)))OR(v0.c0)), v0.c0)) AND ((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)), LOWER(rt0.c2), ((rt0.c1)OR(rt0.c1)))))) ORDER BY ((((rt0.c3)/(rt0.c3)))<=(NULL)) DESC;
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((0xffffffffa867f413) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 END) AND (rt0.c0))) ORDER BY (((NOT (rt0.c1))) IS TRUE) DESC, HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa867f413) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 END) AND (rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((NOT (rt0.c1))) IS TRUE) DESC, HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((0xffffffffa867f413) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 END) AND (rt0.c0))) ORDER BY (((NOT (rt0.c1))) IS TRUE) DESC, HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffa867f413) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 END) AND (rt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((NOT (rt0.c1))) IS TRUE) DESC, HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE (((0xffffffffa867f413) NOT BETWEEN (CASE v0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN v0.c0 END) AND (rt0.c0))) ORDER BY (((NOT (rt0.c1))) IS TRUE) DESC, HEX(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((((((((('1226526749')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT NULL)))<((v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, (((v0.c0, v0.c0, 0.06947478940799423)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('-1495484789')))OR(v0.c0)) THEN (((v0.c0))>=((v0.c0))) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((0xffffffffd2c0b1f1)AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((('1226526749')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT NULL)))<((v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, (((v0.c0, v0.c0, 0.06947478940799423)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('-1495484789')))OR(v0.c0)) THEN (((v0.c0))>=((v0.c0))) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((0Xffffffffd2c0b1f1)AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((('1226526749')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT NULL)))<((v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, (((v0.c0, v0.c0, 0.06947478940799423)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('-1495484789')))OR(v0.c0)) THEN (((v0.c0))>=((v0.c0))) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((0xffffffffd2c0b1f1)AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((('1226526749')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT NULL)))<((v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, (((v0.c0, v0.c0, 0.06947478940799423)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('-1495484789')))OR(v0.c0)) THEN (((v0.c0))>=((v0.c0))) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((0Xffffffffd2c0b1f1)AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END ASC);
SELECT COUNT(*) FROM v0 WHERE (((((((((((('1226526749')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0)GLOB(v0.c0)), ((v0.c0) NOT NULL)))<((v0.c0 COLLATE NOCASE, v0.c0 COLLATE RTRIM, (((v0.c0, v0.c0, 0.06947478940799423)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY CASE WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR('-1495484789')))OR(v0.c0)) THEN (((v0.c0))>=((v0.c0))) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((0xffffffffd2c0b1f1)AND(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL));
SELECT * FROM rt0 WHERE (TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY ((rt0.c1)AND(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)AND(rt0.c2)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY ((rt0.c1)AND(rt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)AND(rt0.c2)) COLLATE BINARY DESC);
SELECT * FROM rt0 WHERE (TRIM(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY ((rt0.c1)AND(rt0.c2)) COLLATE BINARY DESC;
SELECT ALL * FROM v0 WHERE ((+ (('D~' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ (('D~' IN ())))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE ((+ (('D~' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ (('D~' IN ())))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE ((+ (('D~' IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE BINARY)-(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)-(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE BINARY)-(NULL)));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)-(NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((x'' COLLATE BINARY)-(NULL)));
SELECT ALL * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE RTRIM);
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)) COLLATE RTRIM) ORDER BY CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((- (((((rt0.c0)AND(v0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)AND(v0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((- (((((rt0.c0)AND(v0.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c0)AND(v0.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((- (((((rt0.c0)AND(v0.c0)))AND(rt0.c3)))));
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (rt0.c0) ORDER BY (NOT (NULL)), ((((rt0.c3)GLOB(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (NULL)), ((((rt0.c3)GLOB(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (rt0.c0) ORDER BY (NOT (NULL)), ((((rt0.c3)GLOB(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (NULL)), ((((rt0.c3)GLOB(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM v0 NOT INDEXED, rt0 WHERE (rt0.c0) ORDER BY (NOT (NULL)), ((((rt0.c3)GLOB(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((0.5406853545674295 IN (LIKELIHOOD(DISTINCT rt0.c0, 0.8859847988600054), (NOT (rt0.c1))))) ORDER BY (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((0.5406853545674295 IN (LIKELIHOOD(DISTINCT rt0.c0, 0.8859847988600054), (NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c3)) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((0.5406853545674295 IN (LIKELIHOOD(DISTINCT rt0.c0, 0.8859847988600054), (NOT (rt0.c1))))) ORDER BY (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c3)) ASC;
SELECT SUM(count) FROM (SELECT (((0.5406853545674295 IN (LIKELIHOOD(DISTINCT rt0.c0, 0.8859847988600054), (NOT (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c3)) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((0.5406853545674295 IN (LIKELIHOOD(DISTINCT rt0.c0, 0.8859847988600054), (NOT (rt0.c1))))) ORDER BY (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END IN (rt0.c3)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ('ga*''A''ݮ授'))) NOT BETWEEN (rt0.c3) AND (((rt0.c3)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ('ga*''A''ݮ授'))) NOT BETWEEN (rt0.c3) AND (((rt0.c3)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ('ga*''A''ݮ授'))) NOT BETWEEN (rt0.c3) AND (((rt0.c3)|(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ('ga*''A''ݮ授'))) NOT BETWEEN (rt0.c3) AND (((rt0.c3)|(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ('ga*''A''ݮ授'))) NOT BETWEEN (rt0.c3) AND (((rt0.c3)|(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((((rt0.c3))==((rt0.c2))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((rt0.c3))=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((((rt0.c3))==((rt0.c2))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((((rt0.c3))=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((((rt0.c3))==((rt0.c2))))) ORDER BY CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (v0.c0);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND((+ ('c(U)')))))OR(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))OR(rt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((-959629275)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS REAL))AND((+ ('c(U)')))))OR(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((-959629275)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) END DESC);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND((+ ('c(U)')))))OR(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))OR(rt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((-959629275)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c3 AS REAL))AND((+ ('c(U)')))))OR(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((-959629275)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) END DESC);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c3 AS REAL))AND((+ ('c(U)')))))OR(CAST(rt0.c2 AS REAL))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END)))OR(rt0.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((-959629275)*(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) END DESC;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL))||(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((+ (x'')) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END IN ()) DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))||(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (x'')) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END IN ()) DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL))||(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((+ (x'')) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END IN ()) DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL))||(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((+ (x'')) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END IN ()) DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2) NOTNULL))||(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0))))) ORDER BY ((+ (x'')) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS LAST, (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 END IN ()) DESC  NULLS LAST, ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE ((('-\r{u') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c3) IS TRUE)))) ORDER BY ((((rt0.c2)&(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('-\r{u') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((('-\r{u') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c3) IS TRUE)))) ORDER BY ((((rt0.c2)&(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((('-\r{u') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((('-\r{u') BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN rt0.c0 END) AND (((rt0.c3) IS TRUE)))) ORDER BY ((((rt0.c2)&(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND ((~ (rt0.c1))));
SELECT ALL * FROM v0 WHERE ((((((NOT (v0.c0)))OR(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))OR(v0.c0)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((NOT (v0.c0)))OR(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))OR(v0.c0)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((NOT (v0.c0)))OR(v0.c0)))AND(((v0.c0) IS TRUE))));
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)<(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0))) NOTNULL) DESC  NULLS LAST, json_remove(CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) NOTNULL) DESC  NULLS LAST, json_remove(CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)<(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0))) NOTNULL) DESC  NULLS LAST, json_remove(CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE RTRIM)OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)OR(v0.c0))) NOTNULL) DESC  NULLS LAST, json_remove(CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC);
SELECT * FROM v0 WHERE (((((v0.c0 COLLATE RTRIM)OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(((v0.c0)<(v0.c0))))) ORDER BY ((((v0.c0)OR(v0.c0))) NOTNULL) DESC  NULLS LAST, json_remove(CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ()))));
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (CASE v0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (CASE v0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (CASE v0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (CASE v0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)|(v0.c0))) AND (CASE v0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1067523098')IS NOT(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('-1067523098')IS NOT(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1067523098')IS NOT(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((('-1067523098')IS NOT(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1067523098')IS NOT(((rt0.c0) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) ORDER BY ((((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c0, rt0.c0, rt0.c3)))))==((((rt0.c1)+(x''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c0, rt0.c0, rt0.c3)))))==((((rt0.c1)+(x''))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) ORDER BY ((((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c0, rt0.c0, rt0.c3)))))==((((rt0.c1)+(x''))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1, rt0.c0, rt0.c3))==((rt0.c0, rt0.c0, rt0.c3)))))==((((rt0.c1)+(x''))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) ORDER BY ((((((rt0.c1, rt0.c0, rt0.c3))=((rt0.c0, rt0.c0, rt0.c3)))))==((((rt0.c1)+(x''))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY json_array_length(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))OR(NULL)))AND(rt0.c1)), ((rt0.c3)==(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ()) ORDER BY json_array_length(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))OR(NULL)))AND(rt0.c1)), ((rt0.c3)==(rt0.c3))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY json_array_length(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))OR(NULL)))AND(rt0.c1)), ((rt0.c3)==(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ()) ORDER BY json_array_length(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))OR(NULL)))AND(rt0.c1)), ((rt0.c3)==(rt0.c3))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ()) WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) ORDER BY json_array_length(((((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))OR(NULL)))AND(rt0.c1)), ((rt0.c3)==(rt0.c3)));
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE TRIM(rt0.c3)  WHEN ((rt0.c3)IS(rt0.c0)) THEN CASE rt0.c1  WHEN '-2080213835' THEN rt0.c3 ELSE rt0.c0 END ELSE rt0.c2 END ASC  NULLS LAST, ((CAST(rt0.c1 AS REAL))OR((((rt0.c3, rt0.c1, rt0.c0))<((NULL, rt0.c1, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(rt0.c3)  WHEN ((rt0.c3)IS(rt0.c0)) THEN CASE rt0.c1  WHEN '-2080213835' THEN rt0.c3 ELSE rt0.c0 END ELSE rt0.c2 END ASC  NULLS LAST, ((CAST(rt0.c1 AS REAL))OR((((rt0.c3, rt0.c1, rt0.c0))<((NULL, rt0.c1, rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE TRIM(rt0.c3)  WHEN ((rt0.c3)IS(rt0.c0)) THEN CASE rt0.c1  WHEN '-2080213835' THEN rt0.c3 ELSE rt0.c0 END ELSE rt0.c2 END ASC  NULLS LAST, ((CAST(rt0.c1 AS REAL))OR((((rt0.c3, rt0.c1, rt0.c0))<((NULL, rt0.c1, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(rt0.c3)  WHEN ((rt0.c3)IS(rt0.c0)) THEN CASE rt0.c1  WHEN '-2080213835' THEN rt0.c3 ELSE rt0.c0 END ELSE rt0.c2 END ASC  NULLS LAST, ((CAST(rt0.c1 AS REAL))OR((((rt0.c3, rt0.c1, rt0.c0))<((NULL, rt0.c1, rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((+ (rt0.c1)) IN ())) ORDER BY CASE TRIM(rt0.c3)  WHEN ((rt0.c3)IS(rt0.c0)) THEN CASE rt0.c1  WHEN '-2080213835' THEN rt0.c3 ELSE rt0.c0 END ELSE rt0.c2 END ASC  NULLS LAST, ((CAST(rt0.c1 AS REAL))OR((((rt0.c3, rt0.c1, rt0.c0))<((NULL, rt0.c1, rt0.c1)))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR('K㵗Ak')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))OR('K㵗Ak')))AND(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR('K㵗Ak')))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS REAL))OR('K㵗Ak')))AND(NULL))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((CAST(v0.c0 AS REAL))OR('K㵗Ak')))AND(NULL)));
SELECT ALL * FROM rt0, v0 WHERE (((0.49347119121473393) IS FALSE)) ORDER BY ((((rt0.c2)AND(((rt0.c3)IS NOT(rt0.c3)))))AND(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((0.49347119121473393) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)AND(((rt0.c3)IS NOT(rt0.c3)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0, v0 WHERE (((0.49347119121473393) IS FALSE)) ORDER BY ((((rt0.c2)AND(((rt0.c3)IS NOT(rt0.c3)))))AND(CAST(rt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((0.49347119121473393) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c2)AND(((rt0.c3)IS NOT(rt0.c3)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0, v0 WHERE (((0.49347119121473393) IS FALSE)) ORDER BY ((((rt0.c2)AND(((rt0.c3)IS NOT(rt0.c3)))))AND(CAST(rt0.c1 AS BLOB)));
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN '217854981' THEN v0.c0 END ELSE (((('1897328424')AND(v0.c0)))AND(v0.c0)) END) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN '217854981' THEN v0.c0 END ELSE (((('1897328424')AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN '217854981' THEN v0.c0 END ELSE (((('1897328424')AND(v0.c0)))AND(v0.c0)) END) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN '217854981' THEN v0.c0 END ELSE (((('1897328424')AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN v0.c0 THEN CASE v0.c0  WHEN '217854981' THEN v0.c0 END ELSE (((('1897328424')AND(v0.c0)))AND(v0.c0)) END) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN 0.02917163574724202 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(rt0.c0)))OR(rt0.c3))) ORDER BY CASE ((rt0.c1)*(rt0.c3))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) THEN (NULL IN ()) ELSE (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN 0.02917163574724202 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(rt0.c0)))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)*(rt0.c3))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) THEN (NULL IN ()) ELSE (- (rt0.c2)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN 0.02917163574724202 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(rt0.c0)))OR(rt0.c3))) ORDER BY CASE ((rt0.c1)*(rt0.c3))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) THEN (NULL IN ()) ELSE (- (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN 0.02917163574724202 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(rt0.c0)))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)*(rt0.c3))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) THEN (NULL IN ()) ELSE (- (rt0.c2)) END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN 0.02917163574724202 THEN rt0.c0 END)AND(((rt0.c2) NOTNULL))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(rt0.c0)))OR(rt0.c3))) ORDER BY CASE ((rt0.c1)*(rt0.c3))  WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)) THEN (NULL IN ()) ELSE (- (rt0.c2)) END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN '0.6840263438594772' THEN ((rt0.c2)OR(rt0.c0)) END) ORDER BY '''?w.^1' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.6840263438594772' THEN ((rt0.c2)OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '''?w.^1' ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN '0.6840263438594772' THEN ((rt0.c2)OR(rt0.c0)) END) ORDER BY '''?w.^1' ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '0.6840263438594772' THEN ((rt0.c2)OR(rt0.c0)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY '''?w.^1' ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CASE WHEN '0.6840263438594772' THEN ((rt0.c2)OR(rt0.c0)) END) ORDER BY '''?w.^1' ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(('' IN (rt0.c3, rt0.c3)))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN x'' THEN 0.11852987904462886 ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN x'' THEN 0.11852987904462886 ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(('' IN (rt0.c3, rt0.c3)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(('' IN (rt0.c3, rt0.c3)))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN x'' THEN 0.11852987904462886 ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS BLOB)  WHEN x'' THEN 0.11852987904462886 ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(('' IN (rt0.c3, rt0.c3)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))AND(('' IN (rt0.c3, rt0.c3)))) WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN x'' THEN 0.11852987904462886 ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL))|(((rt0.c3)<<('1897875353')))), ((rt0.c2) ISNULL)  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c2, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(((rt0.c3)<<('1897875353')))), ((rt0.c2) ISNULL)  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL))|(((rt0.c3)<<('1897875353')))), ((rt0.c2) ISNULL)  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt0.c2, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1) NOTNULL))|(((rt0.c3)<<('1897875353')))), ((rt0.c2) ISNULL)  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c2, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) ORDER BY ((((rt0.c1) NOTNULL))|(((rt0.c3)<<('1897875353')))), ((rt0.c2) ISNULL)  NULLS FIRST, ((((((rt0.c1) BETWEEN (rt0.c2) AND (v0.c0)))AND(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR(rt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) ISNULL)) ORDER BY (NOT (((rt0.c3)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3)>=(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) ISNULL)) ORDER BY (NOT (((rt0.c3)>=(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) ISNULL)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c3)>=(rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3) ISNULL)) ISNULL)) ORDER BY (NOT (((rt0.c3)>=(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(UNLIKELY(NULL), (+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UNLIKELY(NULL), (+ (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(UNLIKELY(NULL), (+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(UNLIKELY(NULL), (+ (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(UNLIKELY(NULL), (+ (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (('&o' IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (('&o' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (('&o' IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (('&o' IN (rt0.c1))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (('&o' IN (rt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((TRIM(rt0.c1, rt0.c0) IN ())) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c1, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((TRIM(rt0.c1, rt0.c0) IN ())) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(rt0.c1, rt0.c0) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((TRIM(rt0.c1, rt0.c0) IN ())) ORDER BY (- (v0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)>(rt0.c0))))) ORDER BY ((((((NULL, rt0.c3, '')) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2)))))<>((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((NULL, rt0.c3, '')) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2)))))!=((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)>(rt0.c0))))) ORDER BY ((((((NULL, rt0.c3, '')) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2)))))<>((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((NULL, rt0.c3, '')) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2)))))!=((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c3)>(rt0.c0))))) ORDER BY ((((((NULL, rt0.c3, '')) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2)))))<>((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END))) ASC;
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE (- (v0.c0))  WHEN (v0.c0 IN ()) THEN v0.c0 END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN ())) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN ())) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN ())) AND ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN ())) AND ((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN ((v0.c0 IN ())) AND ((NOT (v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (+ ((- (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ ((- (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (+ ((- (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (+ ((- (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (+ ((- (v0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN ()))+(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))+(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN ()))+(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))+(NULL))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((rt0.c3 IN ()))+(NULL)));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN (v0.c0 IN ()) END) ORDER BY ((((v0.c0)=(v0.c0)))&(((v0.c0)<<(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(DISTINCT v0.c0) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)==(v0.c0)))&(((v0.c0)<<(NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN (v0.c0 IN ()) END) ORDER BY ((((v0.c0)=(v0.c0)))&(((v0.c0)<<(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ABS(DISTINCT v0.c0) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)==(v0.c0)))&(((v0.c0)<<(NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ABS(DISTINCT v0.c0) THEN (v0.c0 IN ()) END) ORDER BY ((((v0.c0)=(v0.c0)))&(((v0.c0)<<(NULL))))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (1.980985602E9);
SELECT SUM(count) FROM (SELECT ALL ((1.980985602E9) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (1.980985602E9);
SELECT SUM(count) FROM (SELECT ALL ((1.980985602E9) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (1.980985602E9);
SELECT ALL COUNT(*) FROM v0 WHERE (((GLOB(v0.c0, 0X25756792)) NOT BETWEEN (json_quote(v0.c0)) AND ((v0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(v0.c0, 0X25756792)) NOT BETWEEN (json_quote(v0.c0)) AND ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((GLOB(v0.c0, 0X25756792)) NOT BETWEEN (json_quote(v0.c0)) AND ((v0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(v0.c0, 0X25756792)) NOT BETWEEN (json_quote(v0.c0)) AND ((v0.c0 IN (x''))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((GLOB(v0.c0, 0X25756792)) NOT BETWEEN (json_quote(v0.c0)) AND ((v0.c0 IN (x'')))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((rt0.c3)<<(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3)<<(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((rt0.c3)<<(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c3)<<(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY (((rt0.c3)<<(rt0.c2)) IN ());
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((~ (rt0.c0)))IS(SQLITE_SOURCE_ID())) WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((~ (rt0.c0)))IS(SQLITE_SOURCE_ID())) ORDER BY ((((v0.c0) IS TRUE)) IS TRUE) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((~ (rt0.c0)))IS(SQLITE_SOURCE_ID())) WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((~ (rt0.c0)))IS(SQLITE_SOURCE_ID())) ORDER BY ((((v0.c0) IS TRUE)) IS TRUE) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON (((~ (rt0.c0)))IS(SQLITE_SOURCE_ID())) WHERE ((CAST(v0.c0 AS BLOB) IN ())) ORDER BY ((((v0.c0) IS TRUE)) IS TRUE) DESC;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)|(v0.c0)))OR(0.6691160652886903)))OR(((v0.c0)<(v0.c0)))))AND(((v0.c0) IS FALSE))))OR((((v0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)|(v0.c0)))OR(0.6691160652886903)))OR(((v0.c0)<(v0.c0)))))AND(((v0.c0) IS FALSE))))OR((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)|(v0.c0)))OR(0.6691160652886903)))OR(((v0.c0)<(v0.c0)))))AND(((v0.c0) IS FALSE))))OR((((v0.c0))<((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)|(v0.c0)))OR(0.6691160652886903)))OR(((v0.c0)<(v0.c0)))))AND(((v0.c0) IS FALSE))))OR((((v0.c0))<((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)|(v0.c0)))OR(0.6691160652886903)))OR(((v0.c0)<(v0.c0)))))AND(((v0.c0) IS FALSE))))OR((((v0.c0))<((v0.c0))))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT * FROM rt0 WHERE ('-2130198815') ORDER BY MAX(((rt0.c2) ISNULL), CAST(rt0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2130198815') IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c2) ISNULL), CAST(rt0.c0 AS TEXT)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-2130198815') ORDER BY MAX(((rt0.c2) ISNULL), CAST(rt0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2130198815') IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c2) ISNULL), CAST(rt0.c0 AS TEXT)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-2130198815') ORDER BY MAX(((rt0.c2) ISNULL), CAST(rt0.c0 AS TEXT)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN NULLIF(rt0.c0, rt0.c1) WHEN (+ (NULL)) THEN 0.9784699083721202 WHEN ((((0.5406853545674295)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c0, ''))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN NULLIF(rt0.c0, rt0.c1) WHEN (+ (NULL)) THEN 0.9784699083721202 WHEN ((((0.5406853545674295)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c0, ''))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN NULLIF(rt0.c0, rt0.c1) WHEN (+ (NULL)) THEN 0.9784699083721202 WHEN ((((0.5406853545674295)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c0, ''))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN NULLIF(rt0.c0, rt0.c1) WHEN (+ (NULL)) THEN 0.9784699083721202 WHEN ((((0.5406853545674295)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c0, ''))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN NULLIF(rt0.c0, rt0.c1) WHEN (+ (NULL)) THEN 0.9784699083721202 WHEN ((((0.5406853545674295)AND(rt0.c0)))OR(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c0, ''))) ELSE ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c3);
SELECT * FROM rt0, v0 WHERE (CASE (NOT (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN '' ELSE rt0.c3 END THEN CAST(rt0.c3 AS NUMERIC) END) ORDER BY CAST(UNLIKELY(DISTINCT x'') AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN '' ELSE rt0.c3 END THEN CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(UNLIKELY(DISTINCT x'') AS BLOB) DESC);
SELECT * FROM rt0, v0 WHERE (CASE (NOT (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN '' ELSE rt0.c3 END THEN CAST(rt0.c3 AS NUMERIC) END) ORDER BY CAST(UNLIKELY(DISTINCT x'') AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN '' ELSE rt0.c3 END THEN CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(UNLIKELY(DISTINCT x'') AS BLOB) DESC);
SELECT * FROM rt0, v0 WHERE (CASE (NOT (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN '' ELSE rt0.c3 END THEN CAST(rt0.c3 AS NUMERIC) END) ORDER BY CAST(UNLIKELY(DISTINCT x'') AS BLOB) DESC;
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN NULL THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOTNULL)  WHEN NULL THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN NULL THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOTNULL)  WHEN NULL THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOTNULL)  WHEN NULL THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) END);
SELECT ALL * FROM rt0 WHERE (0X4854a4c9);
SELECT SUM(count) FROM (SELECT ((0X4854a4c9) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0X4854a4c9);
SELECT SUM(count) FROM (SELECT ((0X4854a4c9) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (0X4854a4c9);
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0)))<=((((v0.c0))>=((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)||(v0.c0))) AND (((v0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1))))+(((rt0.c0)<<(x''))))) ORDER BY (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c2))) COLLATE RTRIM ASC, ((x'') NOT BETWEEN (((rt0.c3)%(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt0.c1))))+(((rt0.c0)<<(x''))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c2))) COLLATE RTRIM ASC, ((x'') NOT BETWEEN (((rt0.c3)%(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1))))+(((rt0.c0)<<(x''))))) ORDER BY (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c2))) COLLATE RTRIM ASC, ((x'') NOT BETWEEN (((rt0.c3)%(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))<((rt0.c1))))+(((rt0.c0)<<(x''))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c2))) COLLATE RTRIM ASC, ((x'') NOT BETWEEN (((rt0.c3)%(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1))))+(((rt0.c0)<<(x''))))) ORDER BY (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c2))) COLLATE RTRIM ASC, ((x'') NOT BETWEEN (((rt0.c3)%(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) DESC;
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ('1718628713' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ('1718628713' IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ('1718628713' IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY ('1718628713' IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ('1718628713' IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN rt0.c2 END IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0.8028553188114278 THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) ISNULL) THEN x'' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0.8028553188114278 THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) ISNULL) THEN x'' COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0.8028553188114278 THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) ISNULL) THEN x'' COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0.8028553188114278 THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) ISNULL) THEN x'' COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN 0.8028553188114278 THEN CAST(v0.c0 AS BLOB) WHEN ((v0.c0) ISNULL) THEN x'' COLLATE RTRIM END);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)<=(rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND('<)⵺\n1M㝜v')))AND(v0.c0)) THEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c3)) END, CAST(rt0.c1 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND('<)⵺\n1M㝜v')))AND(v0.c0)) THEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c3)) END, CAST(rt0.c1 AS INTEGER) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)<=(rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND('<)⵺\n1M㝜v')))AND(v0.c0)) THEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c3)) END, CAST(rt0.c1 AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND('<)⵺\n1M㝜v')))AND(v0.c0)) THEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c3)) END, CAST(rt0.c1 AS INTEGER) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)<=(rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)))AND('<)⵺\n1M㝜v')))AND(v0.c0)) THEN ((((v0.c0)OR(rt0.c0)))OR(rt0.c3)) END, CAST(rt0.c1 AS INTEGER) ASC;
SELECT ALL * FROM rt0 WHERE ('LK') ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c3)))AND(NULL)) ELSE (~ (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (('LK') IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c3)))AND(NULL)) ELSE (~ (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE ('LK') ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c3)))AND(NULL)) ELSE (~ (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT (('LK') IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c3)))AND(NULL)) ELSE (~ (rt0.c2)) END);
SELECT ALL * FROM rt0 WHERE ('LK') ORDER BY CASE rt0.c2 COLLATE NOCASE  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c2)AND(rt0.c3)))AND(NULL)) ELSE (~ (rt0.c2)) END;
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(v0.c0)))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT NULL))OR(v0.c0)))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(v0.c0)))OR((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT NULL))OR(v0.c0)))OR((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(v0.c0)))OR((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c3)<(0.36270689722296967))) AND ((~ (x'')))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c3)<(0.36270689722296967))) AND ((~ (x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c3)<(0.36270689722296967))) AND ((~ (x'')))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (((rt0.c3)<(0.36270689722296967))) AND ((~ (x''))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c3)<(0.36270689722296967))) AND ((~ (x'')))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((rt0.c3))!=((rt0.c0))))OR((((rt0.c0, x'', rt0.c3))<>((v0.c0, rt0.c3, rt0.c2))))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))<>((rt0.c0))))OR((((rt0.c0, x'', rt0.c3))<>((v0.c0, rt0.c3, rt0.c2))))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((rt0.c3))!=((rt0.c0))))OR((((rt0.c0, x'', rt0.c3))<>((v0.c0, rt0.c3, rt0.c2))))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))<>((rt0.c0))))OR((((rt0.c0, x'', rt0.c3))<>((v0.c0, rt0.c3, rt0.c2))))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((((((rt0.c3))!=((rt0.c0))))OR((((rt0.c0, x'', rt0.c3))<>((v0.c0, rt0.c3, rt0.c2))))))OR(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c3) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c3) IS TRUE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(((rt0.c3) IS TRUE) AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)%(rt0.c1))) NOT NULL));
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(CAST(v0.c0 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(SQLITE_SOURCE_ID())))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))))OR(CASE WHEN x'd21a' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(SQLITE_SOURCE_ID())))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))))OR(CASE WHEN x'd21a' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(SQLITE_SOURCE_ID())))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))))OR(CASE WHEN x'd21a' THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(SQLITE_SOURCE_ID())))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))))OR(CASE WHEN x'd21a' THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2) NOT NULL))OR(CAST(rt0.c0 AS TEXT))))AND(SQLITE_SOURCE_ID())))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'')))))OR(CASE WHEN x'd21a' THEN rt0.c0 END)));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c3)%(rt0.c0)))) AND ((((rt0.c3) IS TRUE))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c3)%(rt0.c0)))) AND ((((rt0.c3) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c3)%(rt0.c0)))) AND ((((rt0.c3) IS TRUE))))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c3)%(rt0.c0)))) AND ((((rt0.c3) IS TRUE))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c3)%(rt0.c0)))) AND ((((rt0.c3) IS TRUE))))) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((((- (v0.c0)))AND(HEX(v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((((((- (v0.c0)))AND(HEX(v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((((- (v0.c0)))AND(HEX(v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((((((((- (v0.c0)))AND(HEX(v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE) ORDER BY (((((((((- (v0.c0)))AND(HEX(v0.c0))))OR(CASE WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((DATE(rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN (('788862650' IN ())) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN (('788862650' IN ())) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((DATE(rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN (('788862650' IN ())) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((DATE(rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN (('788862650' IN ())) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((DATE(rt0.c2, rt0.c3, rt0.c2)) NOT BETWEEN (('788862650' IN ())) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((((((NOT (v0.c0)))OR('()N1u')))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))AND((rt0.c0 IN (rt0.c1)))))AND(((rt0.c0)%(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c0 COLLATE NOCASE)) WHERE ((((+ (v0.c0)))<=(rt0.c0))) ORDER BY CHAR(x''), ABS(DISTINCT rt0.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))<=(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((((((NOT (v0.c0)))OR('()N1u')))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))AND((rt0.c0 IN (rt0.c1)))))AND(((rt0.c0)%(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c0 COLLATE NOCASE)) ORDER BY CHAR(x''), ABS(DISTINCT rt0.c1) DESC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((((((NOT (v0.c0)))OR('()N1u')))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))AND((rt0.c0 IN (rt0.c1)))))AND(((rt0.c0)%(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c0 COLLATE NOCASE)) WHERE ((((+ (v0.c0)))<=(rt0.c0))) ORDER BY CHAR(x''), ABS(DISTINCT rt0.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))<=(rt0.c0))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((((((NOT (v0.c0)))OR('()N1u')))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))AND((rt0.c0 IN (rt0.c1)))))AND(((rt0.c0)%(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c0 COLLATE NOCASE)) ORDER BY CHAR(x''), ABS(DISTINCT rt0.c1) DESC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((((((((((((NOT (v0.c0)))OR('()N1u')))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END)))AND((rt0.c0 IN (rt0.c1)))))AND(((rt0.c0)%(rt0.c2)))))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(rt0.c0 COLLATE NOCASE)) WHERE ((((+ (v0.c0)))<=(rt0.c0))) ORDER BY CHAR(x''), ABS(DISTINCT rt0.c1) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 WHERE (((IFNULL(rt0.c2, rt0.c1))GLOB(STRFTIME(rt0.c2, rt0.c1, rt0.c3)))) ORDER BY (+ (((((rt0.c2)OR(rt0.c0)))AND('-1003364243')))) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c1))GLOB(STRFTIME(rt0.c2, rt0.c1, rt0.c3)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((((rt0.c2)OR(rt0.c0)))AND('-1003364243')))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((IFNULL(rt0.c2, rt0.c1))GLOB(STRFTIME(rt0.c2, rt0.c1, rt0.c3)))) ORDER BY (+ (((((rt0.c2)OR(rt0.c0)))AND('-1003364243')))) ASC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c1))GLOB(STRFTIME(rt0.c2, rt0.c1, rt0.c3)))) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((((rt0.c2)OR(rt0.c0)))AND('-1003364243')))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE (((IFNULL(rt0.c2, rt0.c1))GLOB(STRFTIME(rt0.c2, rt0.c1, rt0.c3)))) ORDER BY (+ (((((rt0.c2)OR(rt0.c0)))AND('-1003364243')))) ASC;
SELECT ALL * FROM v0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c3) AND (v0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN ((rt0.c0) ISNULL) WHEN ((v0.c0)<=(rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN '' THEN ((rt0.c0) ISNULL) END WHERE (((rt0.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN ((rt0.c0) ISNULL) WHEN ((v0.c0)<=(rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN '' THEN ((rt0.c0) ISNULL) END ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN ((rt0.c0) ISNULL) WHEN ((v0.c0)<=(rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN '' THEN ((rt0.c0) ISNULL) END WHERE (((rt0.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN ((rt0.c0) ISNULL) WHEN ((v0.c0)<=(rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN '' THEN ((rt0.c0) ISNULL) END ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON CASE WHEN v0.c0 THEN ((rt0.c0) ISNULL) WHEN ((v0.c0)<=(rt0.c0)) THEN ((rt0.c2) IS FALSE) WHEN '' THEN ((rt0.c0) ISNULL) END WHERE (((rt0.c3) IS FALSE) COLLATE NOCASE) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM) ORDER BY (+ ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ ((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM) ORDER BY (+ ((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ ((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (CASE WHEN rt0.c3 THEN v0.c0 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM) ORDER BY (+ ((rt0.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (TYPEOF(DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND('G6.i%]8')))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c3)IS(-1.873094512E9)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND('G6.i%]8')))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c3)IS(-1.873094512E9)) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND('G6.i%]8')))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c3)IS(-1.873094512E9)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND('G6.i%]8')))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c3)IS(-1.873094512E9)) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c0)AND(rt0.c1)))AND('G6.i%]8')))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c3)IS(-1.873094512E9)) END;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((x'')/('1758418633')))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((x'')/('1758418633'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((x'')/('1758418633')))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((x'')/('1758418633'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))OR(v0.c0)) IN (((x'')/('1758418633')))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL));
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1))<=((rt0.c2))))*(x'f0c4'))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<=((rt0.c2))))*(x'f0c4'))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1))<=((rt0.c2))))*(x'f0c4'))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))<=((rt0.c2))))*(x'f0c4'))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT * FROM rt0, v0 WHERE ((((((rt0.c1))<=((rt0.c2))))*(x'f0c4'))) ORDER BY v0.c0;
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN ((v0.c0)>(v0.c0)) THEN CASE v0.c0  WHEN 'L_' THEN v0.c0 ELSE v0.c0 END ELSE ((v0.c0) IS TRUE) END) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(v0.c0, v0.c0)  WHEN ((v0.c0)>(v0.c0)) THEN CASE v0.c0  WHEN 'L_' THEN v0.c0 ELSE v0.c0 END ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN ((v0.c0)>(v0.c0)) THEN CASE v0.c0  WHEN 'L_' THEN v0.c0 ELSE v0.c0 END ELSE ((v0.c0) IS TRUE) END) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(v0.c0, v0.c0)  WHEN ((v0.c0)>(v0.c0)) THEN CASE v0.c0  WHEN 'L_' THEN v0.c0 ELSE v0.c0 END ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0 WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN ((v0.c0)>(v0.c0)) THEN CASE v0.c0  WHEN 'L_' THEN v0.c0 ELSE v0.c0 END ELSE ((v0.c0) IS TRUE) END) ORDER BY v0.c0 ASC;
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT) COLLATE RTRIM);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((rt0.c2))>((rt0.c1))) THEN ((((((((rt0.c1)AND(rt0.c3)))AND('{V')))OR(rt0.c2)))OR(rt0.c3)) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END) ORDER BY (((v0.c0) IS FALSE) IN ((((rt0.c0, 0.17100185380424326, rt0.c1)) BETWEEN ((v0.c0, rt0.c3, 0.8896130971535525)) AND ((rt0.c1, rt0.c0, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>((rt0.c1))) THEN ((((((((rt0.c1)AND(rt0.c3)))AND('{V')))OR(rt0.c2)))OR(rt0.c3)) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0) IS FALSE) IN ((((rt0.c0, 0.17100185380424326, rt0.c1)) BETWEEN ((v0.c0, rt0.c3, 0.8896130971535525)) AND ((rt0.c1, rt0.c0, rt0.c0)))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((rt0.c2))>((rt0.c1))) THEN ((((((((rt0.c1)AND(rt0.c3)))AND('{V')))OR(rt0.c2)))OR(rt0.c3)) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END) ORDER BY (((v0.c0) IS FALSE) IN ((((rt0.c0, 0.17100185380424326, rt0.c1)) BETWEEN ((v0.c0, rt0.c3, 0.8896130971535525)) AND ((rt0.c1, rt0.c0, rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))>((rt0.c1))) THEN ((((((((rt0.c1)AND(rt0.c3)))AND('{V')))OR(rt0.c2)))OR(rt0.c3)) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((v0.c0) IS FALSE) IN ((((rt0.c0, 0.17100185380424326, rt0.c1)) BETWEEN ((v0.c0, rt0.c3, 0.8896130971535525)) AND ((rt0.c1, rt0.c0, rt0.c0)))))  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (((rt0.c2))>((rt0.c1))) THEN ((((((((rt0.c1)AND(rt0.c3)))AND('{V')))OR(rt0.c2)))OR(rt0.c3)) ELSE SQLITE_COMPILEOPTION_USED(v0.c0) END) ORDER BY (((v0.c0) IS FALSE) IN ((((rt0.c0, 0.17100185380424326, rt0.c1)) BETWEEN ((v0.c0, rt0.c3, 0.8896130971535525)) AND ((rt0.c1, rt0.c0, rt0.c0)))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((+ (v0.c0))) IS FALSE)) ORDER BY CASE -9.58251689E8  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN json_extract(v0.c0, 'ocp') THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)IS(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE -9.58251689E8  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN json_extract(v0.c0, 'ocp') THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)IS(v0.c0)) END DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) IS FALSE)) ORDER BY CASE -9.58251689E8  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN json_extract(v0.c0, 'ocp') THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)IS(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY CASE -9.58251689E8  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN json_extract(v0.c0, 'ocp') THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)IS(v0.c0)) END DESC  NULLS FIRST);
SELECT * FROM v0 WHERE ((((+ (v0.c0))) IS FALSE)) ORDER BY CASE -9.58251689E8  WHEN v0.c0 THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN json_extract(v0.c0, 'ocp') THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0)%(v0.c0)) THEN ((v0.c0)IS(v0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (307635176)));
SELECT SUM(count) FROM (SELECT ALL (((~ (307635176))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (307635176)));
SELECT SUM(count) FROM (SELECT ALL (((~ (307635176))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (307635176)));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT NULL)))) ORDER BY ((x'') NOTNULL) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c0)))OR((((rt0.c3))>=((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOTNULL) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c0)))OR((((rt0.c3))>=((rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT NULL)))) ORDER BY ((x'') NOTNULL) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c0)))OR((((rt0.c3))>=((rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOTNULL) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c0)))OR((((rt0.c3))>=((rt0.c1))))) ASC);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (rt0.c0, ((rt0.c0) NOT NULL)))) ORDER BY ((x'') NOTNULL) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE BINARY)AND(rt0.c2)))OR(rt0.c1 COLLATE NOCASE)))AND(rt0.c0)))OR((((rt0.c3))>=((rt0.c1))))) ASC;
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY ((((rt0.c3)LIKE(rt0.c1)))-(TYPEOF(0.7135096902442899))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c1)))-(TYPEOF(0.7135096902442899))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY ((((rt0.c3)LIKE(rt0.c1)))-(TYPEOF(0.7135096902442899))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c3)LIKE(rt0.c1)))-(TYPEOF(0.7135096902442899))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE (LIKELY(DISTINCT rt0.c2 COLLATE RTRIM)) ORDER BY ((((rt0.c3)LIKE(rt0.c1)))-(TYPEOF(0.7135096902442899))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)) THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)) THEN CASE WHEN v0.c0 THEN v0.c0 END END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ ((rt0.c3 IN (rt0.c2)))) WHERE (((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))||(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))||(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ ((rt0.c3 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ ((rt0.c3 IN (rt0.c2)))) WHERE (((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))||(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))||(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (+ ((rt0.c3 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON (+ ((rt0.c3 IN (rt0.c2)))) WHERE (((((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)))||(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY x'', ((CAST('{sjm' AS INTEGER)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((((NULL)OR((- (v0.c0)))))OR(x'deed')))OR((+ (v0.c0)))))AND(((('1V'))<>((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY x'', ((CAST('{sjm' AS INTEGER)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((((NULL)OR((- (v0.c0)))))OR(x'deed')))OR((+ (v0.c0)))))AND(((('1V'))!=((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY x'', ((CAST('{sjm' AS INTEGER)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((((NULL)OR((- (v0.c0)))))OR(x'deed')))OR((+ (v0.c0)))))AND(((('1V'))<>((v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY x'', ((CAST('{sjm' AS INTEGER)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((((NULL)OR((- (v0.c0)))))OR(x'deed')))OR((+ (v0.c0)))))AND(((('1V'))!=((v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (SUBSTR((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ORDER BY x'', ((CAST('{sjm' AS INTEGER)) BETWEEN (v0.c0 COLLATE NOCASE) AND (((v0.c0) IS TRUE))) DESC  NULLS FIRST, ((((((((NULL)OR((- (v0.c0)))))OR(x'deed')))OR((+ (v0.c0)))))AND(((('1V'))<>((v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((rt0.c2) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN ((rt0.c0)%(rt0.c0)) THEN IFNULL(DISTINCT rt0.c2, rt0.c1) END);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((1.300907184E9)IS NOT(((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (((rt0.c2)%(rt0.c0)) IN (TRIM(DISTINCT v0.c0), (rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.300907184E9)IS NOT(((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((rt0.c2)%(rt0.c0)) IN (TRIM(DISTINCT v0.c0), (rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((1.300907184E9)IS NOT(((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (((rt0.c2)%(rt0.c0)) IN (TRIM(DISTINCT v0.c0), (rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((1.300907184E9)IS NOT(((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY (((rt0.c2)%(rt0.c0)) IN (TRIM(DISTINCT v0.c0), (rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((1.300907184E9)IS NOT(((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) ORDER BY (((rt0.c2)%(rt0.c0)) IN (TRIM(DISTINCT v0.c0), (rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (rt0.c3 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((('-985988606')IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('-985988606')IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-985988606')IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((('-985988606')IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((('-985988606')IS NOT(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))-(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) WHERE (((TRIM(DISTINCT rt0.c1, v0.c0))<<(((v0.c0)=(rt0.c1))))) ORDER BY HEX(LIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, v0.c0))<<(((v0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))-(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY HEX(LIKELY(rt0.c3)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))-(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) WHERE (((TRIM(DISTINCT rt0.c1, v0.c0))<<(((v0.c0)=(rt0.c1))))) ORDER BY HEX(LIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c1, v0.c0))<<(((v0.c0)==(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))-(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) ORDER BY HEX(LIKELY(rt0.c3)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))-(CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)) WHERE (((TRIM(DISTINCT rt0.c1, v0.c0))<<(((v0.c0)=(rt0.c1))))) ORDER BY HEX(LIKELY(rt0.c3)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(LTRIM(rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY (((+ (rt0.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(LTRIM(rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c3))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(LTRIM(rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY (((+ (rt0.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(LTRIM(rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c3))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(LTRIM(rt0.c2))))AND(((rt0.c0)IS(rt0.c2))))) ORDER BY (((+ (rt0.c3))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('攜*CONcWY');
SELECT SUM(count) FROM (SELECT (('攜*CONcWY') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('攜*CONcWY');
SELECT SUM(count) FROM (SELECT (('攜*CONcWY') IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('攜*CONcWY');
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(DISTINCT UNLIKELY(DISTINCT v0.c0), 0.14218101109497072)) ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c0 COLLATE NOCASE)))OR((('''U//T''')AND(v0.c0)))))OR(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT UNLIKELY(DISTINCT v0.c0), 0.14218101109497072)) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c0 COLLATE NOCASE)))OR((('''U//T''')AND(v0.c0)))))OR(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(DISTINCT UNLIKELY(DISTINCT v0.c0), 0.14218101109497072)) ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c0 COLLATE NOCASE)))OR((('''U//T''')AND(v0.c0)))))OR(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT UNLIKELY(DISTINCT v0.c0), 0.14218101109497072)) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c0 COLLATE NOCASE)))OR((('''U//T''')AND(v0.c0)))))OR(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (NULLIF(DISTINCT UNLIKELY(DISTINCT v0.c0), 0.14218101109497072)) ORDER BY ((((((((v0.c0)OR(NULL)))AND(v0.c0 COLLATE NOCASE)))OR((('''U//T''')AND(v0.c0)))))OR(CAST(v0.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0)IS(NULL)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN 0X125623e8 WHEN ((rt0.c1)AND(0x5fadb251)) THEN CAST(rt0.c3 AS BLOB) ELSE (~ (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0)IS(NULL)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN 0x125623e8 WHEN ((rt0.c1)AND(0x5fadb251)) THEN CAST(rt0.c3 AS BLOB) ELSE (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0)IS(NULL)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN 0X125623e8 WHEN ((rt0.c1)AND(0x5fadb251)) THEN CAST(rt0.c3 AS BLOB) ELSE (~ (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0)IS(NULL)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN 0x125623e8 WHEN ((rt0.c1)AND(0x5fadb251)) THEN CAST(rt0.c3 AS BLOB) ELSE (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c0)IS(NULL)) THEN ((rt0.c0) IS FALSE) WHEN rt0.c3 THEN 0X125623e8 WHEN ((rt0.c1)AND(0x5fadb251)) THEN CAST(rt0.c3 AS BLOB) ELSE (~ (rt0.c3)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST('628727583' AS TEXT)) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((((0X738e4b00)<(rt0.c3)))OR(((v0.c0) ISNULL))))OR(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(rt0.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST('628727583' AS TEXT)) AND ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((((((((0X738e4b00)<(rt0.c3)))OR(((v0.c0) ISNULL))))OR(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(rt0.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST('628727583' AS TEXT)) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((((0X738e4b00)<(rt0.c3)))OR(((v0.c0) ISNULL))))OR(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(rt0.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST('628727583' AS TEXT)) AND ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((((((((0X738e4b00)<(rt0.c3)))OR(((v0.c0) ISNULL))))OR(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(rt0.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST('628727583' AS TEXT)) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((((0X738e4b00)<(rt0.c3)))OR(((v0.c0) ISNULL))))OR(CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)))OR(rt0.c2 COLLATE NOCASE)))AND(CAST(rt0.c3 AS INTEGER))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST('p/tmn' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('p/tmn' AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST('p/tmn' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('p/tmn' AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST('p/tmn' AS TEXT));
SELECT COUNT(*) FROM rt0 WHERE (json_insert(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 0.9780368985593557 END, rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 0.9780368985593557 END, rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_insert(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 0.9780368985593557 END, rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_insert(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 0.9780368985593557 END, rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_insert(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN 0.9780368985593557 END, rt0.c0 COLLATE RTRIM));
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c3 IN ()))AND((v0.c0 IN ()))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c0, rt0.c0, rt0.c2))==((rt0.c1, v0.c0, rt0.c0))))IS NOT((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c2))=((rt0.c1, v0.c0, rt0.c0))))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c3 IN ()))AND((v0.c0 IN ()))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c3 IN ()))AND((v0.c0 IN ()))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c0, rt0.c0, rt0.c2))==((rt0.c1, v0.c0, rt0.c0))))IS NOT((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c0, rt0.c2))=((rt0.c1, v0.c0, rt0.c0))))IS NOT((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON (((((rt0.c3 IN ()))AND((v0.c0 IN ()))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON (((((rt0.c3 IN ()))AND((v0.c0 IN ()))))AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c0, rt0.c0, rt0.c2))==((rt0.c1, v0.c0, rt0.c0))))IS NOT((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>(UPPER(rt0.c3)))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ()))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 END)>(UPPER(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ()))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>(UPPER(rt0.c3)))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ()))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 END)>(UPPER(rt0.c3)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ()))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>(UPPER(rt0.c3)))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE)  NULLS LAST, (((rt0.c1 IN ()))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 END)) DESC;
SELECT ALL * FROM v0 WHERE (((CHAR(v0.c0, v0.c0, v0.c0)) BETWEEN (x'') AND (((v0.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CHAR(v0.c0, v0.c0, v0.c0)) BETWEEN (x'') AND (((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CHAR(v0.c0, v0.c0, v0.c0)) BETWEEN (x'') AND (((v0.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CHAR(v0.c0, v0.c0, v0.c0)) BETWEEN (x'') AND (((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CHAR(v0.c0, v0.c0, v0.c0)) BETWEEN (x'') AND (((v0.c0)!=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((x'6993a48e' IN ()) COLLATE RTRIM) ORDER BY ((0.14567122821844924)OR((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((x'6993a48e' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((0.14567122821844924)OR((v0.c0 IN ()))) ASC);
SELECT ALL * FROM v0 WHERE ((x'6993a48e' IN ()) COLLATE RTRIM) ORDER BY ((0.14567122821844924)OR((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((x'6993a48e' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((0.14567122821844924)OR((v0.c0 IN ()))) ASC);
SELECT ALL * FROM v0 WHERE ((x'6993a48e' IN ()) COLLATE RTRIM) ORDER BY ((0.14567122821844924)OR((v0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM v0 WHERE (x'3969f8c0') ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, 0xffffffffbd4f9f38, v0.c0))))<=((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3969f8c0') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))==((v0.c0, 0Xffffffffbd4f9f38, v0.c0))))<=((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'3969f8c0') ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, 0xffffffffbd4f9f38, v0.c0))))<=((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'3969f8c0') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))==((v0.c0, 0Xffffffffbd4f9f38, v0.c0))))<=((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (x'3969f8c0') ORDER BY (((((v0.c0, v0.c0, v0.c0))=((v0.c0, 0xffffffffbd4f9f38, v0.c0))))<=((v0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (json_type(CAST(v0.c0 AS REAL))) ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (json_type(CAST(v0.c0 AS REAL))) ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0 ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (json_type(CAST(v0.c0 AS REAL))) ORDER BY (v0.c0 IN (v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (IFNULL(rt0.c3, rt0.c2)) AND ((NOT (rt0.c0))))) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (IFNULL(rt0.c3, rt0.c2)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1) IS TRUE) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (IFNULL(rt0.c3, rt0.c2)) AND ((NOT (rt0.c0))))) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1) IS TRUE) END ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (IFNULL(rt0.c3, rt0.c2)) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1) IS TRUE) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (IFNULL(rt0.c3, rt0.c2)) AND ((NOT (rt0.c0))))) ORDER BY CASE ((rt0.c1)IS NOT(rt0.c0))  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c1) IS TRUE) END ASC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-33279303') ORDER BY rt0.c2 ASC, (NOT (((rt0.c3)<>(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-33279303') IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 ASC, (NOT (((rt0.c3)<>(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-33279303') ORDER BY rt0.c2 ASC, (NOT (((rt0.c3)<>(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-33279303') IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c2 ASC, (NOT (((rt0.c3)<>(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ('-33279303') ORDER BY rt0.c2 ASC, (NOT (((rt0.c3)<>(rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN '780329702' COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN '780329702' COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN '780329702' COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN '780329702' COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN (- (rt0.c1)) THEN '780329702' COLLATE BINARY END);
SELECT * FROM v0, rt0 WHERE (0.4922224920630123);
SELECT SUM(count) FROM (SELECT ((0.4922224920630123) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (0.4922224920630123);
SELECT SUM(count) FROM (SELECT ((0.4922224920630123) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (0.4922224920630123);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==(((v0.c0)IS NOT(v0.c0))))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN (json_array_length('eꁀ*Q5齩થN0')) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))=(((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN (json_array_length('eꁀ*Q5齩થN0')) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==(((v0.c0)IS NOT(v0.c0))))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN (json_array_length('eꁀ*Q5齩થN0')) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))=(((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) NOT BETWEEN (json_array_length('eꁀ*Q5齩થN0')) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==(((v0.c0)IS NOT(v0.c0))))) ORDER BY (((NOT (v0.c0))) NOT BETWEEN (json_array_length('eꁀ*Q5齩થN0')) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1)||(rt0.c0))) ORDER BY (NULL COLLATE BINARY IN ())  NULLS LAST, ((((rt0.c1) NOTNULL))-(7.52020416E8)), ((rt0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NULL COLLATE BINARY IN ())  NULLS LAST, ((((rt0.c1) NOTNULL))-(7.52020416E8)), ((rt0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1)||(rt0.c0))) ORDER BY (NULL COLLATE BINARY IN ())  NULLS LAST, ((((rt0.c1) NOTNULL))-(7.52020416E8)), ((rt0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (NULL COLLATE BINARY IN ())  NULLS LAST, ((((rt0.c1) NOTNULL))-(7.52020416E8)), ((rt0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((rt0.c1)||(rt0.c0))) ORDER BY (NULL COLLATE BINARY IN ())  NULLS LAST, ((((rt0.c1) NOTNULL))-(7.52020416E8)), ((rt0.c0 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN x'e618' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN x'e618' END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN x'e618' END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT NULL)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN x'e618' END) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (CASE ((v0.c0) NOT NULL)  WHEN CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 END THEN x'e618' END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c1) NOT BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(v0.c0))) AND (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))<>((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))<>((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(NULL)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))<>((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))<>((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(NULL)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))<>((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)))OR(NULL))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)IS NOT(v0.c0))) BETWEEN ((NOT (rt0.c1))) AND (0.48706765523463813))) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(v0.c0))) BETWEEN ((NOT (rt0.c1))) AND (0.48706765523463813))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) ASC);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)IS NOT(v0.c0))) BETWEEN ((NOT (rt0.c1))) AND (0.48706765523463813))) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(v0.c0))) BETWEEN ((NOT (rt0.c1))) AND (0.48706765523463813))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) ASC);
SELECT * FROM v0, rt0 WHERE (((((rt0.c2)IS NOT(v0.c0))) BETWEEN ((NOT (rt0.c1))) AND (0.48706765523463813))) ORDER BY CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) AS INTEGER) ASC;
SELECT * FROM rt0 INNER JOIN v0 ON (((NULL, ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c3 COLLATE RTRIM))>=((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, NULL))) WHERE ((+ (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((NULL, ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c3 COLLATE RTRIM))>=((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, NULL))));
SELECT * FROM rt0 INNER JOIN v0 ON (((NULL, ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c3 COLLATE RTRIM))>=((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, NULL))) WHERE ((+ (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((NULL, ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c3 COLLATE RTRIM))>=((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, NULL))));
SELECT * FROM rt0 INNER JOIN v0 ON (((NULL, ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)), rt0.c3 COLLATE RTRIM))>=((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END, NULL))) WHERE ((+ (rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((((0x6bc67c02)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) AND (HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0X6bc67c02)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) AND (HEX(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((0x6bc67c02)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) AND (HEX(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0X6bc67c02)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) AND (HEX(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((0x6bc67c02)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) AND (HEX(rt0.c0))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0X6e50d8cd)) AND ((((((v0.c0)OR(rt0.c3)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((0x6e50d8cd)) AND ((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0X6e50d8cd)) AND ((((((v0.c0)OR(rt0.c3)))AND(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((0x6e50d8cd)) AND ((((((v0.c0)OR(rt0.c3)))AND(rt0.c3)))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0X6e50d8cd)) AND ((((((v0.c0)OR(rt0.c3)))AND(rt0.c3))))));
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS BLOB)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c3)!=(rt0.c3)))))AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c3)!=(rt0.c3)))))AND((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS BLOB)) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c3)!=(rt0.c3)))))AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS FALSE) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((rt0.c3)!=(rt0.c3)))))AND((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))LIKE(0.5710150161454273))) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL), (((rt0.c1 IN ())) ISNULL) ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c1)))LIKE(0.5710150161454273))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL), (((rt0.c1 IN ())) ISNULL) ASC, '' DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))LIKE(0.5710150161454273))) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL), (((rt0.c1 IN ())) ISNULL) ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(rt0.c1)))LIKE(0.5710150161454273))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL), (((rt0.c1 IN ())) ISNULL) ASC, '' DESC);
SELECT * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1)))LIKE(0.5710150161454273))) ORDER BY ((((rt0.c0) IS TRUE)) NOT NULL), (((rt0.c1 IN ())) ISNULL) ASC, '' DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1315989687' ELSE -161544338 END) AND (v0.c0)) WHERE (((TRIM(rt0.c2))>(((6.55887013E8) NOT NULL)))) ORDER BY CAST((((rt0.c3, rt0.c3, NULL, v0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))>(((6.55887013E8) NOT NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1315989687' ELSE -161544338 END) AND (v0.c0)) ORDER BY CAST((((rt0.c3, rt0.c3, NULL, v0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1315989687' ELSE -161544338 END) AND (v0.c0)) WHERE (((TRIM(rt0.c2))>(((6.55887013E8) NOT NULL)))) ORDER BY CAST((((rt0.c3, rt0.c3, NULL, v0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2))) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))>(((6.55887013E8) NOT NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1315989687' ELSE -161544338 END) AND (v0.c0)) ORDER BY CAST((((rt0.c3, rt0.c3, NULL, v0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2))) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1315989687' ELSE -161544338 END) AND (v0.c0)) WHERE (((TRIM(rt0.c2))>(((6.55887013E8) NOT NULL)))) ORDER BY CAST((((rt0.c3, rt0.c3, NULL, v0.c0, x'')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c3)) AND ((v0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2))) AS BLOB)  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)GLOB(v0.c0)))OR(((v0.c0)<<(rt0.c1)))))AND(((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.05122766320812677))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(v0.c0)))OR(((v0.c0)<<(rt0.c1)))))AND(((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.05122766320812677))))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)GLOB(v0.c0)))OR(((v0.c0)<<(rt0.c1)))))AND(((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.05122766320812677))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)GLOB(v0.c0)))OR(((v0.c0)<<(rt0.c1)))))AND(((rt0.c2)&(rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.05122766320812677))))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((rt0.c1)GLOB(v0.c0)))OR(((v0.c0)<<(rt0.c1)))))AND(((rt0.c2)&(rt0.c2))))) ORDER BY ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c1))) AND ((((rt0.c0)) BETWEEN ((v0.c0)) AND ((0.05122766320812677))))) ASC;
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((((CASE v0.c0  WHEN 0.7677810245382451 THEN rt0.c2 END)OR(rt0.c2 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))AND((rt0.c3 IN ()))))AND(((rt0.c1)&(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))) WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN CAST(rt0.c2 AS NUMERIC) THEN x'' ELSE NULL END) ORDER BY ((CASE WHEN '429012828' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)IS(json_quote(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN CAST(rt0.c2 AS NUMERIC) THEN x'' ELSE NULL END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((((((((((CASE v0.c0  WHEN 0.7677810245382451 THEN rt0.c2 END)OR(rt0.c2 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))AND((rt0.c3 IN ()))))AND(((rt0.c1)&(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))) ORDER BY ((CASE WHEN '429012828' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)IS(json_quote(rt0.c1))));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((((CASE v0.c0  WHEN 0.7677810245382451 THEN rt0.c2 END)OR(rt0.c2 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))AND((rt0.c3 IN ()))))AND(((rt0.c1)&(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))) WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN CAST(rt0.c2 AS NUMERIC) THEN x'' ELSE NULL END) ORDER BY ((CASE WHEN '429012828' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)IS(json_quote(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS NUMERIC)  WHEN CAST(rt0.c2 AS NUMERIC) THEN x'' ELSE NULL END) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON ((((((((((((CASE v0.c0  WHEN 0.7677810245382451 THEN rt0.c2 END)OR(rt0.c2 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))AND((rt0.c3 IN ()))))AND(((rt0.c1)&(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))) ORDER BY ((CASE WHEN '429012828' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)IS(json_quote(rt0.c1))));
SELECT * FROM v0 CROSS JOIN rt0 ON ((((((((((((CASE v0.c0  WHEN 0.7677810245382451 THEN rt0.c2 END)OR(rt0.c2 COLLATE RTRIM)))AND(CAST(rt0.c2 AS REAL))))AND((rt0.c3 IN ()))))AND(((rt0.c1)&(rt0.c2)))))OR(CAST(rt0.c0 AS NUMERIC))))AND(((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))) WHERE (CASE CAST(rt0.c2 AS NUMERIC)  WHEN CAST(rt0.c2 AS NUMERIC) THEN x'' ELSE NULL END) ORDER BY ((CASE WHEN '429012828' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END)IS(json_quote(rt0.c1)));
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE '752020416'  WHEN rt0.c3 COLLATE NOCASE THEN (('')IS(rt0.c3)) ELSE ((rt0.c1)<<(rt0.c2)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND (('-1025555674'))) ASC, (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '752020416'  WHEN rt0.c3 COLLATE NOCASE THEN (('')IS(rt0.c3)) ELSE ((rt0.c1)<<(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND (('-1025555674'))) ASC, (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE '752020416'  WHEN rt0.c3 COLLATE NOCASE THEN (('')IS(rt0.c3)) ELSE ((rt0.c1)<<(rt0.c2)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND (('-1025555674'))) ASC, (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '752020416'  WHEN rt0.c3 COLLATE NOCASE THEN (('')IS(rt0.c3)) ELSE ((rt0.c1)<<(rt0.c2)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND (('-1025555674'))) ASC, (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (CASE '752020416'  WHEN rt0.c3 COLLATE NOCASE THEN (('')IS(rt0.c3)) ELSE ((rt0.c1)<<(rt0.c2)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c1)))) AND (('-1025555674'))) ASC, (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)%(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 3028627455060947452 ELSE rt0.c3 END AS BLOB), ((CASE WHEN '-1873094512' THEN rt0.c0 END)||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 3028627455060947452 ELSE rt0.c3 END AS BLOB), ((CASE WHEN '-1873094512' THEN rt0.c0 END)||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)%(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 3028627455060947452 ELSE rt0.c3 END AS BLOB), ((CASE WHEN '-1873094512' THEN rt0.c0 END)||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(CASE WHEN rt0.c2 THEN 3028627455060947452 ELSE rt0.c3 END AS BLOB), ((CASE WHEN '-1873094512' THEN rt0.c0 END)||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((rt0.c0)%(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c3 AS INTEGER)))) ORDER BY CAST(CASE WHEN rt0.c2 THEN 3028627455060947452 ELSE rt0.c3 END AS BLOB), ((CASE WHEN '-1873094512' THEN rt0.c0 END)||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)!=(v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((0.5894469376430924))==((v0.c0))) WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)<>(v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((0.5894469376430924))==((v0.c0))) WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)!=(v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((0.5894469376430924))==((v0.c0))) WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)<>(v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((0.5894469376430924))==((v0.c0))) WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)!=(v0.c0)) THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (((0.5894469376430924))==((v0.c0))) WHEN ((v0.c0)IS NOT(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 COLLATE NOCASE END);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND ((NULL IN ('-919421768')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND ((NULL IN ('-919421768'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND ((NULL IN ('-919421768')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND ((NULL IN ('-919421768'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOT BETWEEN (LOWER(v0.c0)) AND ((NULL IN ('-919421768')))));
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c3, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c3, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c3, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c3, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)>>(rt0.c2))) NOT BETWEEN (rt0.c1) AND ((((rt0.c3, x'', rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c3))))));
SELECT * FROM rt0 WHERE ((((rt0.c3)>('oMPT')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>('oMPT')) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)>('oMPT')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)>('oMPT')) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)>('oMPT')) IN ()));
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))!=(('xf'))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c0))))<>(('xf')))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))!=(('xf'))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)OR(rt0.c0))))<>(('xf')))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE ((((((rt0.c0)OR(rt0.c0))))!=(('xf'))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((v0.c0)&(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c3 COLLATE NOCASE AS BLOB)) ORDER BY CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0X237fa091, v0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0x237fa091, v0.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0X237fa091, v0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0x237fa091, v0.c0))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN ((v0.c0)&(v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)/(v0.c0)) THEN (((v0.c0, v0.c0, v0.c0))>=((v0.c0, 0X237fa091, v0.c0))) END ASC  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((v0.c0) IS FALSE) AS NUMERIC) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(((v0.c0) IS FALSE) AS NUMERIC));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((v0.c0) IS FALSE) AS NUMERIC) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON CAST(((v0.c0) IS FALSE) AS NUMERIC));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON CAST(((v0.c0) IS FALSE) AS NUMERIC) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)GLOB(v0.c0)), '-361561062', ((((v0.c0)OR(v0.c0)))AND('7<')), v0.c0 COLLATE BINARY)) ORDER BY '-161544338' DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0)GLOB(v0.c0)), '-361561062', ((((v0.c0)OR(v0.c0)))AND('7<')), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0 ORDER BY '-161544338' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)GLOB(v0.c0)), '-361561062', ((((v0.c0)OR(v0.c0)))AND('7<')), v0.c0 COLLATE BINARY)) ORDER BY '-161544338' DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0)GLOB(v0.c0)), '-361561062', ((((v0.c0)OR(v0.c0)))AND('7<')), v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM v0 ORDER BY '-161544338' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)GLOB(v0.c0)), '-361561062', ((((v0.c0)OR(v0.c0)))AND('7<')), v0.c0 COLLATE BINARY)) ORDER BY '-161544338' DESC;
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)) END);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR('816606357')) COLLATE RTRIM) ORDER BY ((~ (rt0.c3)) IN ()), (~ ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR('816606357')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((~ (rt0.c3)) IN ()), (~ ((~ (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR('816606357')) COLLATE RTRIM) ORDER BY ((~ (rt0.c3)) IN ()), (~ ((~ (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR('816606357')) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((~ (rt0.c3)) IN ()), (~ ((~ (rt0.c2)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))OR('816606357')) COLLATE RTRIM) ORDER BY ((~ (rt0.c3)) IN ()), (~ ((~ (rt0.c2)))) ASC;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT ALL * FROM rt0 WHERE (HEX(CASE 0xffffffffdf949e12  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY (LIKELIHOOD(DISTINCT 0.5318363966307732, 0.6867040914344152) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE 0Xffffffffdf949e12  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt0 ORDER BY (LIKELIHOOD(DISTINCT 0.5318363966307732, 0.6867040914344152) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (HEX(CASE 0xffffffffdf949e12  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY (LIKELIHOOD(DISTINCT 0.5318363966307732, 0.6867040914344152) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE 0Xffffffffdf949e12  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt0 ORDER BY (LIKELIHOOD(DISTINCT 0.5318363966307732, 0.6867040914344152) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (HEX(CASE 0xffffffffdf949e12  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) ORDER BY (LIKELIHOOD(DISTINCT 0.5318363966307732, 0.6867040914344152) IN ()) DESC;
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (((((rt0.c2)AND(0.9190478375172209)))AND(rt0.c1))) AND ((((rt0.c0))<>((v0.c0)))))) ORDER BY v0.c0 ASC, x'aa19'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (((((rt0.c2)AND(0.9190478375172209)))AND(rt0.c1))) AND ((((rt0.c0))!=((v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 ASC, x'aa19'  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (((((rt0.c2)AND(0.9190478375172209)))AND(rt0.c1))) AND ((((rt0.c0))<>((v0.c0)))))) ORDER BY v0.c0 ASC, x'aa19'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (((((rt0.c2)AND(0.9190478375172209)))AND(rt0.c1))) AND ((((rt0.c0))!=((v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 ASC, x'aa19'  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (((((rt0.c2)AND(0.9190478375172209)))AND(rt0.c1))) AND ((((rt0.c0))<>((v0.c0)))))) ORDER BY v0.c0 ASC, x'aa19'  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, CAST(v0.c0 AS TEXT))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), json_valid(v0.c0), (((x'', v0.c0, 0Xffffffffdb4dd7ed)) NOT BETWEEN ((v0.c0, v0.c0, 0.9271374835652954)) AND (('', v0.c0, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, CAST(v0.c0 AS TEXT))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), json_valid(v0.c0), (((x'', v0.c0, 0xffffffffdb4dd7ed)) NOT BETWEEN ((v0.c0, v0.c0, 0.9271374835652954)) AND (('', v0.c0, v0.c0)))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, CAST(v0.c0 AS TEXT))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), json_valid(v0.c0), (((x'', v0.c0, 0Xffffffffdb4dd7ed)) NOT BETWEEN ((v0.c0, v0.c0, 0.9271374835652954)) AND (('', v0.c0, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, CAST(v0.c0 AS TEXT))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), json_valid(v0.c0), (((x'', v0.c0, 0xffffffffdb4dd7ed)) NOT BETWEEN ((v0.c0, v0.c0, 0.9271374835652954)) AND (('', v0.c0, v0.c0)))))) ASC);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)), v0.c0, CAST(v0.c0 AS TEXT))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)), json_valid(v0.c0), (((x'', v0.c0, 0Xffffffffdb4dd7ed)) NOT BETWEEN ((v0.c0, v0.c0, 0.9271374835652954)) AND (('', v0.c0, v0.c0)))))) ASC;
SELECT * FROM v0 WHERE ((+ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((~ (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c0)=(v0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c1)||(rt0.c2)) AS TEXT)) ORDER BY (NULL IN (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c0)=(v0.c0)) COLLATE RTRIM ORDER BY (NULL IN (v0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c0)=(v0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c1)||(rt0.c2)) AS TEXT)) ORDER BY (NULL IN (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((rt0.c0)=(v0.c0)) COLLATE RTRIM ORDER BY (NULL IN (v0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((rt0.c0)=(v0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c1)||(rt0.c2)) AS TEXT)) ORDER BY (NULL IN (v0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM rt0, v0 WHERE ((rt0.c3 IN ())) ORDER BY (+ (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 ORDER BY CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (x'') ORDER BY CAST(((((v0.c0)AND(v0.c0)))OR(v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN v0 ON UNLIKELY(DISTINCT ((rt0.c3)AND('TP'))) WHERE ((((rt0.c3)) BETWEEN ((ABS(rt0.c3))) AND ((NULLIF(0.9336918632344878, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((ABS(rt0.c3))) AND ((NULLIF(0.9336918632344878, v0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON UNLIKELY(DISTINCT ((rt0.c3)AND('TP'))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON UNLIKELY(DISTINCT ((rt0.c3)AND('TP'))) WHERE ((((rt0.c3)) BETWEEN ((ABS(rt0.c3))) AND ((NULLIF(0.9336918632344878, v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((ABS(rt0.c3))) AND ((NULLIF(0.9336918632344878, v0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON UNLIKELY(DISTINCT ((rt0.c3)AND('TP'))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON UNLIKELY(DISTINCT ((rt0.c3)AND('TP'))) WHERE ((((rt0.c3)) BETWEEN ((ABS(rt0.c3))) AND ((NULLIF(0.9336918632344878, v0.c0)))));
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((((rt0.c1))<=((rt0.c2))))) ORDER BY '1226526749' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c1))<=((rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '1226526749' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((((rt0.c1))<=((rt0.c2))))) ORDER BY '1226526749' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c1))<=((rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY '1226526749' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF((((rt0.c1))<=((rt0.c2))))) ORDER BY '1226526749' DESC  NULLS LAST;
