-- Time: 2024/06/09 00:52:57
-- Database: database5
-- Database version: 3.40.0
-- seed value: 1477238205
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (0.5661628858379928, 0.8151749046898176, '-207389709'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, matchinfo=fts3, prefix=967); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('-1652890323'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 60621287); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1798965787); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1399717374); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '2B', '234666029'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1100099736'; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.application_id; -- 1ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', 0.09557486202217735, x'c856'), ('234666029', ')4', '234666029'), (0Xdfcb82d, 1671865088, x'cf24'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-296368727', x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
UPDATE vt0 SET (c0)=(x'e9c2'); -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, '530636089', ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('-1874308533'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.4498246423003387, NULL, -1.652890323E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1054861006);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (NULL), ('1465156941'), (x'9127'); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (-1054861006); -- 0ms;
INSERT OR ABORT INTO rt1(c1) VALUES (0.5661628858379928); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('''E*r', 0.661621293707874, 2.34666029E8), ('', '0.661621293707874', NULL), (NULL, 1465156941, '-1'), ('1465156941', 0.06448572222818749, NULL), (x'', -207389709, 0.8149478810770586); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31154'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA application_id; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = false; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='', c2=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c2) VALUES (0x785738ab, '2019671206'), (x'', '778765325'), (0.4789787807842044, x''); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1478065737); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
DELETE FROM rt1 WHERE ((((rt1.c1) IS FALSE)) IS TRUE); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1809984307); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES ('O脭''.a%) '); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20445'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53845'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -813675795);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2110488894); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, 'W<?3u\n+渪', '1241055457'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 669769252); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c1, c2) VALUES ('', 1.465156941E9, '-1192480797'); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (''), (0x4d3b7464), (NULL); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1932583549); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1794765000);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=772111272,8');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=7'); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
VACUUM main; -- 1ms;
INSERT OR ABORT INTO rt1(c0, c2) VALUES ('2B', LIKELY(DISTINCT NULL) COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES ('', x'24e3', 0xfffffffff3a37bf3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 82641944); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (-1.054861006E9); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1671865088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.0 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('530636089') NOT BETWEEN (NULL) AND (NULL)) THEN (((NULL, '772111272', 0.10301075728717057)) BETWEEN ((0.06448572222818749, 0.060765698182520755, '1295742052')) AND ((0.649352887426814, x'', -1204720086))) ELSE CASE NULL  WHEN NULL THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1062109609'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7671466955690475))>(('-1232568644'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1672696261 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1578184478 AS REAL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-444208450 sz=-2039318790 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN x'' WHEN x'' THEN NULL WHEN '407258316' THEN NULL END) BETWEEN (((0.10491337435057302) BETWEEN (0.7671466955690475) AND (0.5591142777672051))) AND ((((('-1204720086')OR(0.7961702050737094)))AND('a_*-Ѝm.#')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff88d5b5ba)+(1465156941))) NOT BETWEEN (((0.9345873127274208) NOT BETWEEN (1295742052) AND (NULL))) AND (((('1349215717'))<((0x2232b5b9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-949768225 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (',B>I#2Q')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=465228015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ((((x'', 'u', '0.649352887426814'))<=((0.05930786941358923, 5.30636089E8, '2018982059')))) AND ((997406774 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '964508923 522478835'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1887905421 sz=465228015'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X6401d257, -1.054861006E9, 0.2762126635276254))<((0.88106332454675, 407258316, NULL)))) NOT BETWEEN (((7.78765325E8) ISNULL)) AND (CAST('-1750194386' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=274543566'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((0Xfd80c6d)!=(NULL)), (((x''))<(('573748665'))), x'' COLLATE NOCASE, (('')==(0.9439489554447563)), 0x5e3614f9 COLLATE RTRIM); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_remove(CAST(x'3bb6' AS BLOB), ((0.9570750190507935) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/(0.649352887426814)) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1972385621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.88106332454675, NULL, '\n]얩i#W5*')) BETWEEN (((((')4')) NOT BETWEEN ((x'20327150')) AND ((NULL))), (~ (0x75222931)), (0.5539657959412517 IN ()))) AND (((((x'906db1f7'))<=(('-1291878099'))), CASE WHEN x'' THEN 'CScAa' WHEN x'9caf' THEN x'162f' WHEN 0.9007917746892947 THEN NULL ELSE 0.5029656590920247 END, 9.64508923E8 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-571060520 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=512812800'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=274543566 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))IS((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8241308310691324) BETWEEN ('') AND ('-207389709')))IS((- ('1062109609')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-687439848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '7' THEN '706534632' END)LIKE(((x'') BETWEEN (-6.87439848E8) AND (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-115900862'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '215382214 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1491889439'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2018982059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1658020758', NULL, x'')) BETWEEN (((NOT (NULL)), CAST(NULL AS TEXT), (((x'e8d6'))>((0x393fdbc1))))) AND (((('')GLOB(x'')), (('-1652890323')/('CScAa')), CAST(-1958986469 AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-676083617 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=793674155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-99495022'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '' ELSE NULL END)<<((- (0.7663948795129217)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2019671206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((0.05930786941358923) NOT BETWEEN (NULL) AND ('0.661621293707874'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '772111272 1886110772 sz=75455682'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-247064450'  WHEN '75455682' THEN x'' ELSE 0.2983378938185701 END)IS((-296368727 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1936173274 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2104871934'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1955727636 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-296368727'))!=((0.6989367794963429)))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-687439848'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1241055457'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-895580093 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2039318790 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)OR(x'')))AND(0.4893901828194853)) THEN CAST('-161761515' AS BLOB) WHEN CASE WHEN '1510900778' THEN '' END THEN (('')<=('O3')) WHEN LIKELY(DISTINCT 0.5306989507786232) THEN CAST('C㭗' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '741672255 sz=620929932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=622841866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1671865088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS TEXT)  WHEN CASE WHEN NULL THEN NULL WHEN x'41933c8c' THEN x'' WHEN ',B>I#2Q' THEN 's馂''' ELSE NULL END THEN SUBSTR(NULL, NULL) WHEN ((x'b8754c4c')LIKE(NULL)) THEN ((('-1999260230'))>(('-6651326'))) WHEN ((x'21fd')AND(0.5634267828244861)) THEN CAST(0.5591142777672051 AS NUMERIC) ELSE CAST(NULL AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('Je7K')) THEN (~ (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('-1054861006' IN ()) THEN (0.7351861370245087 IN ('')) ELSE (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (210428112 IN (NULL, 0.8321816527593496)) THEN (((x'', '0.0', NULL))<=((0.25480791601391894, x'', 0.11846748152544839))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM, ((NULL)%(NULL)), CASE WHEN '1241055457' THEN 0Xfffffffff75d230d ELSE x'' END))<=((CASE WHEN '1639006394' THEN x'' END, '-374208541', CASE '1886110772'  WHEN NULL THEN '' ELSE 0.8163047044566265 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((('3308455')-('-1446814922')))) AND ((NULL COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-207389709 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=1465156941 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1201333817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -2039318790 sz=1411959157 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1191952016 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x1f36d394; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1862675229)<(0.07816891673832127))) BETWEEN ((NULL IN ())) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (385124407))) BETWEEN (CASE WHEN 0.4411908369097778 THEN NULL ELSE 0X308756ec END) AND (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-2144094130 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('UK'))) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND (NULL))) AND (((NULL) BETWEEN ('炫') AND ('[f')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '573748665' THEN x'' WHEN '~k' THEN x'' WHEN x'c732' THEN x'' END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(-1291878099, '-144891123')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=234666029'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 sz=1383960918 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-103979543 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<>(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('r?\1d,' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '500507549 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0xffffffffcf804aed  WHEN 0.13632109056900676 THEN 0.11097542022975637 END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.05930786941358923)))AND('-1874308533'))) NOT BETWEEN (((0.9900890746315691) IS TRUE)) AND (HEX('s馂'''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE -4.07736149E8  WHEN x'' THEN 0.7262097783934813 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 sz=-1638410746'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') NOT NULL))AND((- (NULL)))))OR(TRIM(DISTINCT NULL))))OR(((('')) BETWEEN ((0.1601852863577803)) AND ((x''))))))OR(((x'996a') NOT BETWEEN (NULL) AND (0.1926174947665048)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('hUF%')) NOT BETWEEN ((0X4522219b)) AND ((CAST(NULL AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (((NULL)) BETWEEN ((0.13632109056900676)) AND (('0.05930786941358923'))), 0.5010251333201529); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.19251484666205354) IS TRUE))OR(((((((((0xffffffffe90de7ff)AND('峘[m^cZ9)U')))AND(x'2cd5')))OR('-296368727')))AND('')))))OR((x'16e0' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=573748665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1557808042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2046169633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.08609468476766557 COLLATE RTRIM AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1652890323 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1813445620 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '465228015 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)<<(((((0.7993220859209585)OR(6.22841866E8)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('34157279')+('ⓩN'))  WHEN ((NULL)/(x'dbd8')) THEN (((NULL))>=((0.9892306989222317))) ELSE (- (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF('0.7351861370245087')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '211779825 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '778765325 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '746129637 sz=-374208541 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((('1902905325') NOT NULL), CASE x'f51c'  WHEN NULL THEN x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1191952016 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffb6887ebc AS TEXT)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-s' COLLATE RTRIM  WHEN (('''3bqLT')LIKE('W~')) THEN ((x'')*(0.03769128597885174)) WHEN NULL THEN ((x'2086') BETWEEN ('') AND (0.5942159231199087)) WHEN CASE '-1638410746'  WHEN x'883d' THEN 0.9448451641995207 END THEN -1.887905421E9 ELSE (NOT ('pB')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1323048437')OR(x'')))AND('')))AND(x'')))AND(0.2575503235887838)))||((('')&(x'20d2')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1291878099 sz=2134191867 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6058077284003078; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=290503106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('1349215717', 0.6101240789273406, ((('8'))<=((x'')))))<=((((((0.30449334851953846)AND(0.4789787807842044)))OR(NULL)), (- ('2081685877')), TRIM('385124407')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=709132239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=385124407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-961124523 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('1557808042' AS BLOB) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1874308533' AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1.204720086E9)) BETWEEN (('')) AND ((0.4789787807842044)))) BETWEEN (CAST(0.5676286354780341 AS BLOB)) AND (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5618831373333146 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1062109609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-187640118 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=346221608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((NULL)) AND (('NUT')))) ISNULL); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 sz=-177279831 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((('C᳋\r\n{\n'))<=((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=234666029 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=722587792 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LOWER(NULL)  WHEN CAST(x'1bf7' AS TEXT) THEN 0.4893901828194853 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=83358404 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(0.2560113841006588)))AND(0.4279774733416569)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=573748665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.4706445E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('130131031'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2072501805 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=211779825 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<=(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-346192475 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')>=(-991506953)) THEN ((48182856)/(0X87f1566)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1951274849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2102042380'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -384964609; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0Xfffffffffa11d392) AND (NULL)))<<(((NULL)+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1965173041 sz=2099713201'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2105996156 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '964508923 -56171491 sz=246074078 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1599295883'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 2 sz=1510900778 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1999260230 sz=1411959157 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1964674466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2103092373 unordered'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((UPPER(DISTINCT 0.649352887426814))) AND ((LIKELIHOOD('1439417488', 0.5192865457890327)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('K轝[]\r,?j脒') NOTNULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3069854727296204 COLLATE RTRIM))<=((((NULL)||(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '902448311 sz=793674155 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6058077284003078) BETWEEN (8.1417598E8) AND (0.7961702050737094))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0x5ea2f323)))<<(CASE '1293185946'  WHEN 0.5591142777672051 THEN '-479648578' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('-1396356300')OR('1872307433')))OR(x'')))AND(x'2059')))OR(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1763847789 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(((NULL)>=('2104871934')), (((('d3')OR(x'')))AND(0.38630997824681135)), ((NULL) BETWEEN (0.07816891673832127) AND (x'4956')), CASE 0X41093df1  WHEN '1557808042' THEN x'' WHEN '211779825' THEN 405389979 WHEN NULL THEN 344912447 ELSE '0.1926174947665048' END, NULL COLLATE NOCASE, (~ (0X59326198)), TRIM(DISTINCT 0xffffffff99109c4a)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-823611340 sz=101158941'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-407736149 sz=-1874308533'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-27780806'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2039318790 sz=1347415716 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('pB' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0Xffffffffd58f765e THEN 'YGj-y|a' ELSE 0.42499911890793507 END)>=(0.3307478315038537)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.05431500452562976 AS TEXT))AND(((0.1926174947665048) NOT BETWEEN (NULL) AND (NULL)))))OR(((((-4.4420845E8)AND(0.5559149577628608)))OR('k轝[]\r,?j脒')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(0xffffffffa48d84b5)))>((((((((('-1192480797')OR(-1.291878099E9)))AND('-1330268846')))OR('1621533698')))AND(0.26951049980930974)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.08609468476766557) BETWEEN (NULL) AND ('')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=793674155 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '{4W}ៈ'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1679029668 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.062298818984614646 THEN '274543566' END)>>(((NULL) BETWEEN ('yw') AND (-1054861006)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=892043854 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1580602617 -207389709 1480482008 sz=-392374042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 0.09635982102076723 THEN x'' WHEN '峂>' THEN NULL WHEN 0.1601852863577803 THEN x'ee12adac' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=629453974 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1145032959 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '418367593 sz=412261212 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-51892529 sz=-1999260230'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=573748665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((x'')AND(0.05431500452562976)))OR('530636089')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1999260230 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=583888768'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-1192480797 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1302916458'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') ISNULL) IN ((('534757759') BETWEEN (NULL) AND (' v')), TRIM(0.854524472192481, 0.3902948091541578))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '174198520 sz=-632777636 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>(x''))) BETWEEN (x'' COLLATE NOCASE) AND ((((x'901a'))<>((0.5942159231199087))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2126193360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-240007655 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-676083617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '620929932'  WHEN (~ (NULL)) THEN TOTAL_CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1651585144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-60870767 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1511561007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1872779282'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (7.41672255E8))  WHEN ((((0xffffffffe6360181)OR(0.8025772481632343)))OR(0.7531265256619056)) THEN ((x'') IS TRUE) ELSE ((x'') BETWEEN (x'8d09') AND ('1755543428')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=997406774'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (NULL IN (0Xffffffff91d66673, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '880266442 sz=-2053541445'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=344466865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5476988159560632 AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1872307433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0X7a4f3a57 COLLATE NOCASE THEN 0.6358448407993695 ELSE ((x'b819fab1')/(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN CAST(0x1e90e700 AS NUMERIC) THEN CAST(0xffffffffcb3cebb5 AS INTEGER) WHEN (x'1038e34c' IN ()) THEN (333903234 IN ()) WHEN '' COLLATE NOCASE THEN (('s馂''')!=(x'd012')) ELSE ((NULL)IS NOT(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '421385998 sz=-218157665 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1480482008 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-508528822 sz=1080073553 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5403272385440016)IS(0.4446583768761889))) NOT BETWEEN (((('', '3l''6Db', NULL))>((0.09289966604477651, NULL, 0.5029656590920247)))) AND (0.8163047044566265)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1465156941 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'dx5༡'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1934731455'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1639006394')||(x'274a')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) NOT BETWEEN ((NULL)) AND (('1016387027'))))>(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1580602617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE 0.7993220859209585  WHEN NULL THEN '0.7961702050737094' ELSE 0X785738ab END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN (0.7614495747317627) AND (x''))  WHEN CAST('-207389709' AS BLOB) THEN ((0.54629619724607)-(NULL)) WHEN CASE WHEN NULL THEN NULL WHEN '' THEN 0Xffffffff8ff9c74f WHEN x'' THEN NULL ELSE '' END THEN ((('_s', NULL, 0.12621393347420118)) BETWEEN ((x'', 0.5306989507786232, -9223372036854775808)) AND ((0x23e60b74, -8.13675795E8, x''))) WHEN x'' COLLATE RTRIM THEN ((',!\n*')&(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')AND('')))AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('hj3%' COLLATE RTRIM) BETWEEN (NULL) AND (CASE WHEN -1.491889439E9 THEN 0.8871401104516881 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '523686804 sz=-167395245 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1615900806 sz=-2002006655 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2028052630'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-378702547'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-374208541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5141551842113482 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((PRINTF(NULL, x'', 0xffffffffb4ff7f9e, 0.09557486202217735, 530636089))AND((+ (x'')))))OR(((x'')|(x'0df4')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1035556074 sz=1671865088'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY('1886110772', -9.9495022E7, x'') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('')))OR('1191952016'))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=565900174 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2575503235887838 IN ()))IS NOT((((('622841866')OR(0.8411101306464264)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1383960918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1060799213 0 1604835415 sz=475420794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1291148240'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1868833242 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-571060520'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1999435562'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN (NULL IN ('')) THEN NULL ELSE (((1.510900778E9)) BETWEEN ((1.465156941E9)) AND (('7*'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=793674155 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-858013871'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-156168446')AND((((('')OR('67898992')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0xfffffffff5ada670)OR(x'ccfa')))OR(NULL)))OR('-1834395981')))OR('-444208450')))<=(((1646500116)<=(2020505908)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 1580602617  WHEN '-264101610' THEN '1677840983' ELSE '1580602617' END)GLOB(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1234320949 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2144094130 sz=-128481146 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELIHOOD(DISTINCT 0.5988663072849548, 0.708761791463564))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NULL)OR('rC~i㨦#m~<')))OR(0.9759798848674339)))OR('530636089')))AND(0X470bbe90)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1526644387 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1886110772 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.15382214E8) NOTNULL))<((~ (x'f0ca')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1542745745 sz=-1920312128 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=-1556404011 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('274543566', NULL, 0.4775348710573677)) NOT BETWEEN (((('229495518') IS FALSE), (('伟뙥''B-w}{')<=('1583530602')), (('-82208382') NOT NULL))) AND ((((((((((NULL)AND('⿣B')))OR(NULL)))AND('')))OR('661149611')), (((1682475772))<((x''))), (NOT ('620929932'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))AND(x''))) BETWEEN ((((NULL))>=((x'')))) AND ((x'' IN (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1349215717 COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1159864731 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.021763583642943507) BETWEEN ('261552407') AND ('1936173274'))  WHEN (- (0xffffffffb8316e2a)) THEN (x'8261' IN ()) WHEN CASE '쐴w7(>\nMV'  WHEN 'ಓ&RyK*b' THEN '1936173274' END THEN (('⑑')&(0.3932826968558524)) WHEN ((NULL)<=(NULL)) THEN (((0.1134592867612727))<=(('0.5306989507786232'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1218040976 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '0.8411101306464264')) NOT BETWEEN (((((NULL, 0.3099958496419093, NULL)) BETWEEN ((0.9914264258081102, -1.054861006E9, x'')) AND ((0.4276806242695571, '1996272315', '-15706015'))), ((0x316109a1) NOT BETWEEN (NULL) AND (x'c0a2')), ((x'')>(x'')))) AND ((((x'f9ba')IS NOT('')), (~ (0.21898033230627967)), (- (0.05952524140565296))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2062479962 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd2ad')IS(0.7076621380576598))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1191502095 sz=59844436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1171064536 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1536796983 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(NULL)))<=(CASE 'O'  WHEN '0.6358448407993695' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1445836885 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1859297367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-513808580 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-207389709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1750194386 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2079536847'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffff5bbcf4f)IS NOT(((0xffffffffd49f5690) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-706638105 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2027125204 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1835105494 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<(CASE WHEN 0.021763583642943507 THEN 1333623397 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=314870130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1480482008 sz=397221268 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((NOT ('814175980')), ((0.41799167042797525)&(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')==(0x3e6c3504)))>=((('') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/(x'3042')))||((((('')AND(x'de58')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '180163517'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1965173041'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LOWER('4&T.u/&+'), ((0.3713941111718343) NOT BETWEEN (x'') AND ('k4')), -103979543 COLLATE RTRIM))=(((NULL IN ()), (NOT ('-1652890323')), ((x'') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-2134109011 sz=407258316 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '4 1107805570 sz=1728139505'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)<<(NULL)))OR(((NULL)AND(0.36799452095651275)))))AND(((0.9790392111582417) IS FALSE))))OR((('') ISNULL))))AND(COALESCE(DISTINCT 'CScAa', -1.750194386E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN x'' THEN 0.18720969639325835 ELSE x'' END))!=(((NULL IN (x'', 0.9085837714922377))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=512812800 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '275778992 sz=-407736149 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2101667090 COLLATE RTRIM) NOT BETWEEN ((('-Y8V3䓌9H') BETWEEN (-687439848) AND (0X5f2f141b))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1672696261 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0 sz=1914563767 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1316881239 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=964428695 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=2018982059 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (INSTR(0.19917473524458718, 4.65228015E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 1963768685 sz=772111272 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6989367794963429)AND(x'')))OR(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((NOT ('')))) AND ((((('W~', NULL, '0.2560113841006588')) BETWEEN ((0.6719264747916531, x'', 0X75a82589)) AND ((NULL, '', x'')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('c㘏2YH' IN ()))<<(((((NULL)OR('1965173041')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('2019671206' AS TEXT)  WHEN (-1128161082 IN (0.4177123247170257, -1919893065)) THEN (((0.9209817965041117, -1190784544, 0.7671466955690475)) BETWEEN ((x'', x'b372', 's)+G')) AND ((NULL, '780532317', '{'))) WHEN CASE WHEN NULL THEN NULL WHEN 'hp' THEN x'' WHEN 0.0622658202172941 THEN x'' END THEN ((NULL)-(NULL)) WHEN NULL THEN load_extension(NULL, 0.6801128194121889) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1781700168 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffe1cf5b63; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1260604765 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1100099736 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-813675795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((''))<=((0.661621293707874))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1580602617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-374208541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-2142073584'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-64056614 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=392854968 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(0.3962390450313742, x'2393', NULL) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1279558778'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.4427417064260304)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1901675730 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-1301077908 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '502913314 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN x'' THEN NULL END  WHEN ((x'0c39')+(0X2502a38c)) THEN (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=500507549 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-2046169633'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1932317467 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-561321553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1078739717 2 sz=385970527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (2111948358)))<=(CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('4F6') IS FALSE))OR(((x'') IS FALSE))))AND((((NULL)) BETWEEN (('-1592679795')) AND ((x'b19b'))))))OR(CAST('-571974328' AS INTEGER))))AND(0.07445555718851227)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '781649861', NULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1269866967 sz=1498644046 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-115900862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (0xffffffffef979126) AND ('1557808042')))OR((')(OwwBU)' IN (NULL)))))AND((NULL IN (0.9151511191589771, 1671865088)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-685154259'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1488950677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-103979543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-144891123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS REAL) IN ((((('roR>*')AND(NULL)))OR('oA,Y')), (((0.4663608287846569))==((0xffffffffc9e6806b))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-161761515'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=118720233'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-160820092 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1887905421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1658020758' AS NUMERIC)) BETWEEN ('0.7531265256619056') AND (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1295742052 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1887988768 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY('㒼[') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('1605554934') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('S+\r''M96') NOT BETWEEN (NULL) AND (''))) BETWEEN (((NULL)+(0.7654623373446551))) AND (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7646317045443658)+(7.78765325E8)))%(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0x159561ea) AND ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -1425536888 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1204720086 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '331310005 0 sz=206509568'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '0.9790392111582417' THEN 0Xffffffffd7068018 ELSE 0Xfffffffff7081997 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-66946543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(0.9570750190507935)))&((('-444208450')<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL('1m(6^)', x'') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.9759798848674339)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-296368727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-239571916 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1419502968'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1823496962 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=772111272 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '185896795 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (json_quote('쬸3'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-981490420 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN '1253730170' END IN (((0.426891660235338) IS TRUE), ((0.6160597524696129) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=75455682 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=58818368 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-144891123 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0x2c442cbb AS INTEGER))AND(CAST(NULL AS BLOB))))OR(('-2080000166' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((2.018982059E9)*(1352803164))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN ((x'b6565bb4')IS NOT(x'cc8a')) THEN ((NULL) NOT BETWEEN ('K轝[]\r,?j脒') AND (x'219f')) WHEN CASE WHEN '0ikp' THEN '1889706937' END THEN ((0xffffffffc1201932)&(NULL)) WHEN (+ (NULL)) THEN ((1201333817)&(0.2645964339089171)) WHEN '' COLLATE NOCASE THEN x'' COLLATE BINARY WHEN (((('735004482')AND(NULL)))OR('1295742052')) THEN LIKELY(DISTINCT '0.11097542022975637') ELSE ((0xffffffffa71392e1) BETWEEN (0x3113d022) AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1121862633)-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-391275682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-2001492543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'uy'' }	+{a' THEN (((('J೹쀵z(MN%칲')OR('()')))OR(x'')) ELSE CASE NULL  WHEN NULL THEN -103979543 WHEN '0.1601852863577803' THEN '' WHEN '706534632' THEN NULL ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(DISTINCT x'', x'') AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(-1137557573 AS BLOB))AND((('-566593280') NOT BETWEEN (0.12137009064845028) AND (0.5488395692638368)))))AND(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS NUMERIC) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(''))) NOT BETWEEN (0.9173135091372225 COLLATE BINARY) AND ((~ ('1446859575')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5925945706666248) ISNULL))+(((((x'')AND(-1.192480797E9)))OR(0.37198360691782306)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('960486337')) NOT BETWEEN ((COALESCE(DISTINCT x'19d6', 0.5992586782474579))) AND (('523686804'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN (UPPER(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1639424852 sz=786698683 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1609346965) IS TRUE) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))AND(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))OR((('1813445620')/('786761413')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1732365963' COLLATE BINARY)GLOB(((((((((((((((((NULL)OR(NULL)))AND('a_*-ѝm.#')))AND(x'8429')))OR(x'')))AND(NULL)))OR('2019671206')))AND(NULL)))AND(0.3811288522548334)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(('' IN (0.7650907928023142)), ((-9.9495022E7)|(NULL)), '7'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-936840728 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1902216878 2 sz=364906148 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1580602617 0 sz=-161761515 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '1893256914' THEN 'S+\r''M96' ELSE '1601376777' END)>=((x'' IN ('1679375950', x'fe5f')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=522478835 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'd38b')>>(x'eb65'))  WHEN NULL COLLATE BINARY THEN x'' COLLATE NOCASE WHEN ((x'a8c8') BETWEEN (x'c40db4f8') AND (NULL)) THEN 0.9650819073983862 WHEN ((0.09120459212605336)>(NULL)) THEN ((((0.2467557905906731)AND(x'')))AND('\rK')) WHEN ((x'8838') IS TRUE) THEN ((x'')>(0.8242593582604706)) WHEN GLOB(NULL, x'84a6') THEN '-6651326' COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((960486337)OR('407258316')))AND('-1395323406'))) BETWEEN ((-6651326.0 IN (-1.192480797E9, NULL))) AND (((x'') BETWEEN (0x3b0adcb7) AND ('7W')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1736369345 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(x'')))+(CASE WHEN -1.99926023E9 THEN '' WHEN x'' THEN 'n(' WHEN '274543566' THEN NULL ELSE '1449377714' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-294946231'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1204720086' IN ()))||('-1071073040')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=682891744 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1309650516 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=136830029 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2001837784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=948060405'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=8325819'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '' THEN '385124407' END)AND(x'')))OR(x'6325' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '941785777 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN (CASE x'0e61'  WHEN x'' THEN '-1747605525' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1854660434; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-8.95580093E8) BETWEEN ('y/') AND (NULL)))<(CASE WHEN 0X234d5c49 THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-676083617 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL)) NOT BETWEEN (((NULL)-(''))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((('w')) NOT BETWEEN (('465228015')) AND (('3308455')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('-851794455', NULL)) BETWEEN ((((0.7810927903389611))=((NULL)))) AND (((((-8.2208382E7)OR(0X35400d2a)))AND(0.6058077284003078)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1603289322 sz=-1119026455 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1418978954 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1936173274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')/(x'dbbf')))AND((0.6058077284003078 IN ()))))AND(((((x'')AND('0.8163047044566265')))OR('4X{t')))))AND((+ ('-1023764457')))))AND(((NULL) BETWEEN ('h|X!(6') AND (0.7945293260650368)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-2128607419 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1866452517 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1796547271')<>('-736775533')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e513' IN ()))&(((0xffffffff907cc7d4)<>('-663004977')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '#\rObOs'; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('1936173274')|('523686804')))) AND ((highlight(0.3902948091541578, 0.16431833132455165, 'KeLWh{!7⤱', '3owA')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('895826439')) NOT BETWEEN (('0.9570750190507935')) AND (('500507549'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0Xc8ae0d0)IS('1480482008')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL))<(('1854032382'))) THEN ((NULL)||('-1885200090')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.11246296377248366)AND((~ (0.2362078023125317)))))AND(('0.1134592867612727' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=34157279 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-374208541 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-1958986469 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-2108817506 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1634212354' COLLATE BINARY)GLOB((('1349215717') BETWEEN (0.6470596057254517) AND ('u')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=-762191258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1886110772 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1444113479'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-682829315 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0xffffffffd4145719)))OR(NULLIF('1056025119', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))AND(CAST(0.39498436733886755 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1943874139 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-384964609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0X583e5cd8 THEN '-247064450' END) NOT BETWEEN (((NULL) NOTNULL)) AND (LIKELY(DISTINCT '34428613'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-178180917 sz=2106844146 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((NULL) NOT BETWEEN ('') AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-2020999018 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1246601521 sz=922387103 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2144094130 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1199478197'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-296368727 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE x''  WHEN x'' THEN 0Xffffffffd7517624 END)AND((('N6')%(NULL)))))AND(((NULL)GLOB('')))))OR((('%j?[') IS FALSE))))OR(CASE '0.5634267828244861'  WHEN NULL THEN x'' ELSE 0xffffffff831fe391 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7226'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1291878099'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-98523745 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1742212452 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1042766968'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.21099544508109214) BETWEEN (NULL) AND ('1813445620')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT CAST('-1750194386' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.7183190948388888) BETWEEN ('') AND (NULL))  WHEN CAST(NULL AS REAL) THEN CASE WHEN 0.9791190501721233 THEN NULL ELSE 0.5082569604140018 END WHEN ((('#\rObOs', '#\rObOs', '-426689658')) BETWEEN (('385124407', '-1104719256', x'')) AND ((-715467618, x'', -8.2208382E7))) THEN (- (7.93674155E8)) WHEN NULL COLLATE NOCASE THEN NULL COLLATE RTRIM ELSE (x'0d46' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '393206588 sz=-180022062'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 573748665 COLLATE RTRIM  WHEN ((NULL) BETWEEN ('0.8871401104516881') AND (x'')) THEN LIKELY(DISTINCT 0.9288078796966669) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1321752922'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(LIKELY(0.5720588683444838), ('' IN ('0.5942159231199087'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.38630997824681135')) NOT BETWEEN ((0.14277787581902124)) AND ((0xffffffffe90de7ff))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X27b7e970) NOT NULL))&((((0.6707261443200255)) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1088599362'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1085787781'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(NULL AS TEXT))) AND (((((3308455.0))<((0.5374949049282973)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1509680760 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2022709342 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-846107375 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('73840739')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffa9c35b36)<>('407258316')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN 0.4840549961388795 THEN x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4254679737645666 AS NUMERIC))>(((x'30c89e68')IS('0.1134592867612727')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) NOT BETWEEN (((NULL)/(4.65228015E8))) AND (((426387352)/(x'9986')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((407258316 IN (x'0270')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((190428945) NOT BETWEEN (0Xffffffffffffffff) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-813675795')<>(x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1712204471 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=942628719'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a199' COLLATE RTRIM)OR(UNLIKELY(DISTINCT '-1578184478'))))AND(((0.9439489554447563) BETWEEN (x'4418299d') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1893436290 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN 0.3307478315038537 COLLATE RTRIM THEN (((0.5357186187192944)) NOT BETWEEN ((x'')) AND ((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-241919918'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-45477944 -895749525 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-204402714 sz=997406774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-895580093'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1244513903 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1658020758 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('741672255' IN (1.677840983E9, 0.10301075728717057)))OR(((0xffffffffb727bc2d) NOT BETWEEN (0X7d75cbfe) AND ('.B')))))OR(('0.2762126635276254' IN (NULL, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-407736149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-34710088 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1617351569 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.692826571669692 COLLATE RTRIM IN ('-1271462513' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('215382214')) BETWEEN ((x'')) AND (('iH'))))AND(('FALSE' IN ()))))OR(CAST('-571060520' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-2013529859 sz=943775803 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1071713471'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=210428112'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1279131860 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-986168813 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-822276387'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1814645152 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1551765856 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 'l^s\r!zC'  WHEN 0.6066941482909513 THEN NULL ELSE 0.07693870646163681 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=437125749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1910606207'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9082880115592818) IS FALSE))OR(((0.11846748152544839) IS FALSE))))OR(((NULL) BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1794765000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '814175980 1846578280 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN (((NULL) NOT BETWEEN (x'8534') AND (x'')), x'3aad' COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-478456975'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1691454945'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.8241308310691324') BETWEEN ('/s2') AND ('!2m4QX'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'3f94' THEN NULL END IN (((0X2232b5b9) BETWEEN (0.3727027675353519) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(LAST_INSERT_ROWID(), (((x''))<>(('1383960918')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1592685789 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1349215717'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.032683916578010175 THEN 0Xffffffffb448bce5 END)AND((((0Xfa7caba, NULL, x''))>=((-1.874308533E9, 0.08543272277783354, x'59ca2110'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '465228015 360065235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-115900862'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'b118c0d4' THEN (('1383960918') BETWEEN (0.5646331525299991) AND ('-1545254614')) WHEN 0.7745376428796762 COLLATE RTRIM THEN CASE NULL  WHEN x'' THEN 0.45274810462413906 WHEN '211779825' THEN x'' WHEN 0x393fdbc1 THEN x'' ELSE '峘[m^cZ9)U' END WHEN 0.5676286354780341 THEN '' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY(DISTINCT '34157279')  WHEN ((((((((-1404328401)AND(0.03769128597885174)))AND(1.936173274E9)))AND(x'25b9')))AND(x'')) THEN ((((0.13263253039378486)OR(0.6053758303229424)))OR('8쾨?F&+I')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1390812996 sz=1687486522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1466056424 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-676083617')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1054861006'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('tPS桐5DO') NOT BETWEEN (7.41672255E8) AND ('951406790')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '4Կ' THEN NULL END) BETWEEN ((((0X4f882a68)) BETWEEN ((NULL)) AND ((NULL)))) AND (((x'3463') BETWEEN (x'') AND (0x7d75cbfe)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '0.5676286354780341'  WHEN NULL THEN '146717531' END)=((('1100099736')IS NOT('1782691608')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1245971185 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(x'')) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-526126468 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1589470567 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '841024045 0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.4893901828194853' COLLATE NOCASE)%(CASE WHEN 0.4893901828194853 THEN 0.78215054242398 WHEN 0X6d656e6e THEN x'27c1' WHEN 0.6404439175760638 THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.3593372773506708) NOT BETWEEN ('Yxj mw	an') AND (0.9884125027719947)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1711502380 sz=1802835583 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-509368778 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)GLOB(NULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1709873804 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DROP TABLE vt0; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL  CHECK ( (('-1658020758')OR(((c0)>(c0)))))); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.locking_mode = EXCLUSIVE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(741672255, '573748665') WHERE (((((+ (rt1.c0)))AND(CAST(rt1.c0 AS REAL))))AND(CASE WHEN rt1.c2 THEN rt1.c1 END)); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA threads; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (TIME((((rt0.c2))<=((rt0.c2))), ((rt0.c1)IS NOT(rt1.c1)), t0.c0 COLLATE BINARY)) ORDER BY (LIKELY(DISTINCT rt0.c1) IN ()) ASC, ((-1.638410746E9)<<(CAST(rt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TIME((((rt0.c2))<=((rt0.c2))), ((rt0.c1)IS NOT(rt1.c1)), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (LIKELY(DISTINCT rt0.c1) IN ()) ASC, ((-1.638410746E9)<<(CAST(rt1.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (TIME((((rt0.c2))<=((rt0.c2))), ((rt0.c1)IS NOT(rt1.c1)), t0.c0 COLLATE BINARY)) ORDER BY (LIKELY(DISTINCT rt0.c1) IN ()) ASC, ((-1.638410746E9)<<(CAST(rt1.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TIME((((rt0.c2))<=((rt0.c2))), ((rt0.c1)IS NOT(rt1.c1)), t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (LIKELY(DISTINCT rt0.c1) IN ()) ASC, ((-1.638410746E9)<<(CAST(rt1.c0 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (TIME((((rt0.c2))<=((rt0.c2))), ((rt0.c1)IS NOT(rt1.c1)), t0.c0 COLLATE BINARY)) ORDER BY (LIKELY(DISTINCT rt0.c1) IN ()) ASC, ((-1.638410746E9)<<(CAST(rt1.c0 AS NUMERIC))) DESC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN (((('1404735376'))=((rt1.c0)))) AND (((rt1.c2)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN (((('1404735376'))==((rt1.c0)))) AND (((rt1.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN (((('1404735376'))=((rt1.c0)))) AND (((rt1.c2)&(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN (((('1404735376'))==((rt1.c0)))) AND (((rt1.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN (((('1404735376'))=((rt1.c0)))) AND (((rt1.c2)&(rt1.c2)))));
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c2))) IS FALSE)) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN rt1.c1 WHEN ((rt0.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN rt1.c1 WHEN ((rt0.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c2))) IS FALSE)) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN rt1.c1 WHEN ((rt0.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN rt1.c1 WHEN ((rt0.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)) END);
SELECT ALL * FROM rt1, rt0 WHERE ((((+ (rt1.c2))) IS FALSE)) ORDER BY CASE rt1.c0 COLLATE BINARY  WHEN rt1.c0 COLLATE NOCASE THEN ((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) WHEN TRIM(DISTINCT rt1.c0, rt1.c1) THEN rt1.c1 WHEN ((rt0.c1) ISNULL) THEN ((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)) END;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c2)AND(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c2 END)))AND((rt1.c1 IN ())))) ORDER BY CAST(NULL AS REAL) ASC, (((t0.c0))<((rt0.c1))), (- (HEX(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c2 END)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CAST(NULL AS REAL) ASC, (((t0.c0))<((rt0.c1))), (- (HEX(t0.c0))));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c2)AND(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c2 END)))AND((rt1.c1 IN ())))) ORDER BY CAST(NULL AS REAL) ASC, (((t0.c0))<((rt0.c1))), (- (HEX(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c2 END)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CAST(NULL AS REAL) ASC, (((t0.c0))<((rt0.c1))), (- (HEX(t0.c0))));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c2)AND(CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 ELSE rt0.c2 END)))AND((rt1.c1 IN ())))) ORDER BY CAST(NULL AS REAL) ASC, (((t0.c0))<((rt0.c1))), (- (HEX(t0.c0)));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM) ORDER BY (((~ (rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((~ (rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM) ORDER BY (((~ (rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((~ (rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM) ORDER BY (((~ (rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0) NOTNULL))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (((((-1273237745)OR((((rt1.c0))>((rt0.c2))))))OR((('772111272') IS TRUE)))) ORDER BY CAST(((rt0.c2)IS(rt1.c1)) AS REAL)  NULLS LAST, TYPEOF(CASE WHEN rt1.c2 THEN rt1.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((-1273237745)OR((((rt1.c0))>((rt0.c2))))))OR((('772111272') IS TRUE)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0) NOTNULL))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) ORDER BY CAST(((rt0.c2)IS(rt1.c1)) AS REAL)  NULLS LAST, TYPEOF(CASE WHEN rt1.c2 THEN rt1.c1 END) ASC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0) NOTNULL))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (((((-1273237745)OR((((rt1.c0))>((rt0.c2))))))OR((('772111272') IS TRUE)))) ORDER BY CAST(((rt0.c2)IS(rt1.c1)) AS REAL)  NULLS LAST, TYPEOF(CASE WHEN rt1.c2 THEN rt1.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((-1273237745)OR((((rt1.c0))>((rt0.c2))))))OR((('772111272') IS TRUE)))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0) NOTNULL))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) ORDER BY CAST(((rt0.c2)IS(rt1.c1)) AS REAL)  NULLS LAST, TYPEOF(CASE WHEN rt1.c2 THEN rt1.c1 END) ASC);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (~ (((rt0.c1) IS FALSE))) RIGHT OUTER JOIN rt1 ON ((((((rt1.c0) NOTNULL))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (((((-1273237745)OR((((rt1.c0))>((rt0.c2))))))OR((('772111272') IS TRUE)))) ORDER BY CAST(((rt0.c2)IS(rt1.c1)) AS REAL)  NULLS LAST, TYPEOF(CASE WHEN rt1.c2 THEN rt1.c1 END) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((((~ (rt1.c1)))AND(rt1.c0 COLLATE RTRIM)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))OR(((rt1.c0)<=(rt1.c1)))) ASC, CAST(((rt1.c2) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c1)))AND(rt1.c0 COLLATE RTRIM)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))OR(((rt1.c0)<=(rt1.c1)))) ASC, CAST(((rt1.c2) NOT NULL) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((~ (rt1.c1)))AND(rt1.c0 COLLATE RTRIM)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))OR(((rt1.c0)<=(rt1.c1)))) ASC, CAST(((rt1.c2) NOT NULL) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c1)))AND(rt1.c0 COLLATE RTRIM)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))OR(((rt1.c0)<=(rt1.c1)))) ASC, CAST(((rt1.c2) NOT NULL) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE ((((((~ (rt1.c1)))AND(rt1.c0 COLLATE RTRIM)))OR((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((((rt1.c0 COLLATE NOCASE)OR(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 END)))OR(((rt1.c0)<=(rt1.c1)))) ASC, CAST(((rt1.c2) NOT NULL) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c1 IN ()))))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt0.c1)%(rt0.c2)) THEN ((t0.c0)-(rt0.c2)) WHEN (NOT (t0.c0)) THEN (+ (rt0.c1)) ELSE CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt0.c1)%(rt0.c2)) THEN ((t0.c0)-(rt0.c2)) WHEN (NOT (t0.c0)) THEN (+ (rt0.c1)) ELSE CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c1 IN ()))))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt0.c1)%(rt0.c2)) THEN ((t0.c0)-(rt0.c2)) WHEN (NOT (t0.c0)) THEN (+ (rt0.c1)) ELSE CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CASE WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt0.c1)%(rt0.c2)) THEN ((t0.c0)-(rt0.c2)) WHEN (NOT (t0.c0)) THEN (+ (rt0.c1)) ELSE CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c0 END)) AND (((rt0.c1 IN ()))))) ORDER BY CASE WHEN t0.c0 THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt0.c1)%(rt0.c2)) THEN ((t0.c0)-(rt0.c2)) WHEN (NOT (t0.c0)) THEN (+ (rt0.c1)) ELSE CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 END END DESC  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(x'')))>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_USED(x'')))>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(x'')))>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_USED(x'')))>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((SQLITE_COMPILEOPTION_USED(x'')))>((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0)))AND(t0.c0))))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (- (t0.c0)) CROSS JOIN t0 ON (((((((rt1.c2)OR(t0.c0)))AND(t0.c0))))>=((rt0.c1 COLLATE BINARY))) WHERE (CAST(((rt1.c2)<>(rt0.c2)) AS REAL)) ORDER BY (((((rt1.c0, rt1.c2, rt0.c1))==((rt1.c1, t0.c0, rt1.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<>(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (- (t0.c0)) CROSS JOIN t0 ON (((((((rt1.c2)OR(t0.c0)))AND(t0.c0))))>=((rt0.c1 COLLATE BINARY))) ORDER BY (((((rt1.c0, rt1.c2, rt0.c1))==((rt1.c1, t0.c0, rt1.c2)))) IS FALSE));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (- (t0.c0)) CROSS JOIN t0 ON (((((((rt1.c2)OR(t0.c0)))AND(t0.c0))))>=((rt0.c1 COLLATE BINARY))) WHERE (CAST(((rt1.c2)<>(rt0.c2)) AS REAL)) ORDER BY (((((rt1.c0, rt1.c2, rt0.c1))==((rt1.c1, t0.c0, rt1.c2)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)<>(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (- (t0.c0)) CROSS JOIN t0 ON (((((((rt1.c2)OR(t0.c0)))AND(t0.c0))))>=((rt0.c1 COLLATE BINARY))) ORDER BY (((((rt1.c0, rt1.c2, rt0.c1))==((rt1.c1, t0.c0, rt1.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((((((t0.c0) IS FALSE))OR(CAST(rt0.c2 AS BLOB))))OR(((rt1.c0) IS FALSE))))AND(((rt1.c0) NOT NULL))))AND((+ (t0.c0)))) FULL OUTER JOIN rt1 ON ((((((((t0.c0 COLLATE RTRIM)OR(((((((((rt0.c0)OR(rt1.c2)))OR(t0.c0)))AND(rt1.c0)))OR(t0.c0)))))OR(CASE NULL  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)))AND((+ (t0.c0)))))OR(x'72d7')) WHERE (SQLITE_COMPILEOPTION_USED((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (rt0.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((((((t0.c0) IS FALSE))OR(CAST(rt0.c2 AS BLOB))))OR(((rt1.c0) IS FALSE))))AND(((rt1.c0) NOT NULL))))AND((+ (t0.c0)))) FULL OUTER JOIN rt1 ON ((((((((t0.c0 COLLATE RTRIM)OR(((((((((rt0.c0)OR(rt1.c2)))OR(t0.c0)))AND(rt1.c0)))OR(t0.c0)))))OR(CASE NULL  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)))AND((+ (t0.c0)))))OR(x'72d7')));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((((((((t0.c0) IS FALSE))OR(CAST(rt0.c2 AS BLOB))))OR(((rt1.c0) IS FALSE))))AND(((rt1.c0) NOT NULL))))AND((+ (t0.c0)))) FULL OUTER JOIN rt1 ON ((((((((t0.c0 COLLATE RTRIM)OR(((((((((rt0.c0)OR(rt1.c2)))OR(t0.c0)))AND(rt1.c0)))OR(t0.c0)))))OR(CASE NULL  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)))AND((+ (t0.c0)))))OR(x'72d7')) WHERE (SQLITE_COMPILEOPTION_USED((+ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (rt0.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((((((((t0.c0) IS FALSE))OR(CAST(rt0.c2 AS BLOB))))OR(((rt1.c0) IS FALSE))))AND(((rt1.c0) NOT NULL))))AND((+ (t0.c0)))) FULL OUTER JOIN rt1 ON ((((((((t0.c0 COLLATE RTRIM)OR(((((((((rt0.c0)OR(rt1.c2)))OR(t0.c0)))AND(rt1.c0)))OR(t0.c0)))))OR(CASE NULL  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c0 THEN rt1.c1 END)))AND((+ (t0.c0)))))OR(x'72d7')));
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((('\r')/(rt1.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((('\r')/(rt1.c2))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((('\r')/(rt1.c2))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((('\r')/(rt1.c2))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((('\r')/(rt1.c2))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c0)OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c0)OR(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)OR(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM t0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c0)OR(rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ (rt0.c0))) ORDER BY CAST(NULL COLLATE NOCASE AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)*(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(NULL COLLATE NOCASE AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)*(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS TEXT) END);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ (rt0.c0))) ORDER BY CAST(NULL COLLATE NOCASE AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)*(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS TEXT) END;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY CAST(NULL COLLATE NOCASE AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)*(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS TEXT) END);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((+ (rt0.c0))) ORDER BY CAST(NULL COLLATE NOCASE AS INTEGER)  NULLS FIRST, CASE ((rt0.c1)*(rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c2 AS TEXT) END;
SELECT * FROM rt0, t0 WHERE (DATETIME(LOWER(DISTINCT rt0.c1), rt0.c2, x'', ((t0.c0)<(rt0.c1)), t0.c0, ((rt0.c1) ISNULL), x'90ae')) ORDER BY ((CASE WHEN rt0.c2 THEN x'' END)IS(((0.8940124689766948) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(LOWER(DISTINCT rt0.c1), rt0.c2, x'', ((t0.c0)<(rt0.c1)), t0.c0, ((rt0.c1) ISNULL), x'90ae')) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c2 THEN x'' END)IS(((0.8940124689766948) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (DATETIME(LOWER(DISTINCT rt0.c1), rt0.c2, x'', ((t0.c0)<(rt0.c1)), t0.c0, ((rt0.c1) ISNULL), x'90ae')) ORDER BY ((CASE WHEN rt0.c2 THEN x'' END)IS(((0.8940124689766948) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATETIME(LOWER(DISTINCT rt0.c1), rt0.c2, x'', ((t0.c0)<(rt0.c1)), t0.c0, ((rt0.c1) ISNULL), x'90ae')) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CASE WHEN rt0.c2 THEN x'' END)IS(((0.8940124689766948) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (DATETIME(LOWER(DISTINCT rt0.c1), rt0.c2, x'', ((t0.c0)<(rt0.c1)), t0.c0, ((rt0.c1) ISNULL), x'90ae')) ORDER BY ((CASE WHEN rt0.c2 THEN x'' END)IS(((0.8940124689766948) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, x'')) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c2 COLLATE NOCASE, x'')) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, x'')) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c2 COLLATE NOCASE, x'')) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, x'')) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((rt0.c2) BETWEEN (((rt1.c2) NOT NULL)) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c0) NOTNULL))OR(LIKELY(DISTINCT rt0.c1))))AND((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((rt1.c2) NOT NULL)) AND (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((rt0.c0) NOTNULL))OR(LIKELY(DISTINCT rt0.c1))))AND((- (rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((rt0.c2) BETWEEN (((rt1.c2) NOT NULL)) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c0) NOTNULL))OR(LIKELY(DISTINCT rt0.c1))))AND((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((rt1.c2) NOT NULL)) AND (CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((rt0.c0) NOTNULL))OR(LIKELY(DISTINCT rt0.c1))))AND((- (rt1.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((rt0.c2) BETWEEN (((rt1.c2) NOT NULL)) AND (CAST(t0.c0 AS NUMERIC)))) ORDER BY ((((((rt0.c0) NOTNULL))OR(LIKELY(DISTINCT rt0.c1))))AND((- (rt1.c2))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1972385621'))), (t0.c0 IN ()), SQLITE_VERSION())) AND ((LOWER(t0.c0), t0.c0, CAST(t0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1972385621'))), (t0.c0 IN ()), SQLITE_VERSION())) AND ((LOWER(t0.c0), t0.c0, CAST(t0.c0 AS INTEGER))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1972385621'))), (t0.c0 IN ()), SQLITE_VERSION())) AND ((LOWER(t0.c0), t0.c0, CAST(t0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1972385621'))), (t0.c0 IN ()), SQLITE_VERSION())) AND ((LOWER(t0.c0), t0.c0, CAST(t0.c0 AS INTEGER))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((NULL, t0.c0, t0.c0)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1972385621'))), (t0.c0 IN ()), SQLITE_VERSION())) AND ((LOWER(t0.c0), t0.c0, CAST(t0.c0 AS INTEGER)))));
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(t0.c0) IN (((t0.c0)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(t0.c0) IN (((t0.c0)>(rt1.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(t0.c0) IN (((t0.c0)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(t0.c0) IN (((t0.c0)>(rt1.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((UNLIKELY(t0.c0) IN (((t0.c0)>(rt1.c2)))));
SELECT * FROM rt1, rt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN '#tGbNRl' ELSE rt1.c0 END) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND ((t0.c0 IN (rt1.c1))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, CASE (t0.c0 IN ())  WHEN rt0.c0 THEN '0.9448451641995207' END ASC, (((rt0.c0)||(rt0.c2)) IN ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN '#tGbNRl' ELSE rt1.c0 END) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND ((t0.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, CASE (t0.c0 IN ())  WHEN rt0.c0 THEN '0.9448451641995207' END ASC, (((rt0.c0)||(rt0.c2)) IN ((- (rt1.c2))))  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN '#tGbNRl' ELSE rt1.c0 END) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND ((t0.c0 IN (rt1.c1))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, CASE (t0.c0 IN ())  WHEN rt0.c0 THEN '0.9448451641995207' END ASC, (((rt0.c0)||(rt0.c2)) IN ((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN '#tGbNRl' ELSE rt1.c0 END) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND ((t0.c0 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, CASE (t0.c0 IN ())  WHEN rt0.c0 THEN '0.9448451641995207' END ASC, (((rt0.c0)||(rt0.c2)) IN ((- (rt1.c2))))  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c2 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN '#tGbNRl' ELSE rt1.c0 END) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND ((t0.c0 IN (rt1.c1))))) ORDER BY CAST((rt0.c2 IN ()) AS REAL) DESC  NULLS FIRST, CASE (t0.c0 IN ())  WHEN rt0.c0 THEN '0.9448451641995207' END ASC, (((rt0.c0)||(rt0.c2)) IN ((- (rt1.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL)) ORDER BY LIKELY(DISTINCT ('2043663212' IN (rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKELY(DISTINCT ('2043663212' IN (rt1.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL)) ORDER BY LIKELY(DISTINCT ('2043663212' IN (rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY LIKELY(DISTINCT ('2043663212' IN (rt1.c2))) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c2)) AS REAL)) ORDER BY LIKELY(DISTINCT ('2043663212' IN (rt1.c2))) ASC;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON x'' RIGHT OUTER JOIN rt1 ON t0.c0 WHERE (((((rt0.c0)>=(rt1.c2)))&('1671865088'))) ORDER BY CAST(((rt1.c2)<<(rt1.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt1.c2)))&('1671865088'))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON x'' RIGHT OUTER JOIN rt1 ON t0.c0 ORDER BY CAST(((rt1.c2)<<(rt1.c2)) AS BLOB) ASC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON x'' RIGHT OUTER JOIN rt1 ON t0.c0 WHERE (((((rt0.c0)>=(rt1.c2)))&('1671865088'))) ORDER BY CAST(((rt1.c2)<<(rt1.c2)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(rt1.c2)))&('1671865088'))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON x'' RIGHT OUTER JOIN rt1 ON t0.c0 ORDER BY CAST(((rt1.c2)<<(rt1.c2)) AS BLOB) ASC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON x'' RIGHT OUTER JOIN rt1 ON t0.c0 WHERE (((((rt0.c0)>=(rt1.c2)))&('1671865088'))) ORDER BY CAST(((rt1.c2)<<(rt1.c2)) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-1786459634') NOT BETWEEN (rt1.c2) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (((('-1786459634') NOT BETWEEN (rt1.c2) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-1786459634') NOT BETWEEN (rt1.c2) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT (((('-1786459634') NOT BETWEEN (rt1.c2) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM rt1 WHERE ((('-1786459634') NOT BETWEEN (rt1.c2) AND (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY rt1.c2;
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c0 AS TEXT)));
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL);
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL);
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT CAST(rt0.c0 AS TEXT))) ORDER BY NULL;
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS FALSE));
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt1.c0 CROSS JOIN rt1 ON CAST((+ (rt1.c2)) AS BLOB) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt1.c0 CROSS JOIN rt1 ON CAST((+ (rt1.c2)) AS BLOB));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON rt1.c0 CROSS JOIN rt1 ON CAST((+ (rt1.c2)) AS BLOB) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON rt1.c0 CROSS JOIN rt1 ON CAST((+ (rt1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE (CAST(NULL AS BLOB));
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE (CASE WHEN 0xfffffffffb199982 THEN ((rt1.c0) IS FALSE) END) ORDER BY CASE WHEN rt1.c2 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xfffffffffb199982 THEN ((rt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ASC  NULLS FIRST);
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE (CASE WHEN 0xfffffffffb199982 THEN ((rt1.c0) IS FALSE) END) ORDER BY CASE WHEN rt1.c2 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0xfffffffffb199982 THEN ((rt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN rt1.c2 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ASC  NULLS FIRST);
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE (CASE WHEN 0xfffffffffb199982 THEN ((rt1.c0) IS FALSE) END) ORDER BY CASE WHEN rt1.c2 THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 END END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((ABS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((ABS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((ABS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((ABS(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((ABS(rt1.c2)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON COALESCE(rt1.c2, rt1.c1, rt0.c1, rt1.c0) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((((rt0.c1)AND(t0.c0)))OR(rt0.c2)) COLLATE NOCASE WHERE (((((0.9892306989222317)LIKE(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.9892306989222317)LIKE(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON COALESCE(rt1.c2, rt1.c1, rt0.c1, rt1.c0) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((((rt0.c1)AND(t0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON COALESCE(rt1.c2, rt1.c1, rt0.c1, rt1.c0) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((((rt0.c1)AND(t0.c0)))OR(rt0.c2)) COLLATE NOCASE WHERE (((((0.9892306989222317)LIKE(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((0.9892306989222317)LIKE(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON COALESCE(rt1.c2, rt1.c1, rt0.c1, rt1.c0) COLLATE NOCASE FULL OUTER JOIN rt1 ON ((((rt0.c1)AND(t0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt0.c0);
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE ((('')<(TYPEOF(DISTINCT rt1.c2)))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')<(TYPEOF(DISTINCT rt1.c2)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE ((('')<(TYPEOF(DISTINCT rt1.c2)))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')<(TYPEOF(DISTINCT rt1.c2)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0 NOT INDEXED, rt1, rt0 WHERE ((('')<(TYPEOF(DISTINCT rt1.c2)))) ORDER BY (NOT (((((((((rt0.c1)OR(rt0.c1)))AND(rt1.c0)))AND(rt0.c2)))OR(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (x'') ORDER BY (('') NOTNULL), ((((rt1.c0)/(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (('') NOTNULL), ((((rt1.c0)/(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (x'') ORDER BY (('') NOTNULL), ((((rt1.c0)/(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (('') NOTNULL), ((((rt1.c0)/(rt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (x'') ORDER BY (('') NOTNULL), ((((rt1.c0)/(rt0.c0))) NOT NULL)  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE (((((~ (rt1.c1)), ((rt0.c2)AND(rt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt0.c2))))>=((((rt0.c1)<>(rt0.c1)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')), json_valid(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt1.c1)), ((rt0.c2)AND(rt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt0.c2))))>=((((rt0.c1)<>(rt0.c1)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')), json_valid(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((~ (rt1.c1)), ((rt0.c2)AND(rt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt0.c2))))>=((((rt0.c1)<>(rt0.c1)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')), json_valid(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((~ (rt1.c1)), ((rt0.c2)AND(rt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt0.c2))))>=((((rt0.c1)<>(rt0.c1)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')), json_valid(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((~ (rt1.c1)), ((rt0.c2)AND(rt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt0.c2))))>=((((rt0.c1)<>(rt0.c1)), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (x'')), json_valid(rt1.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c1)) AS REAL) RIGHT OUTER JOIN rt1 ON ((rt1.c2 COLLATE RTRIM)LIKE(x'')) WHERE ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE 0X6f29bf3d END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt0.c1 ELSE 0X6f29bf3d END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c1)) AS REAL) RIGHT OUTER JOIN rt1 ON ((rt1.c2 COLLATE RTRIM)LIKE(x'')));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c1)) AS REAL) RIGHT OUTER JOIN rt1 ON ((rt1.c2 COLLATE RTRIM)LIKE(x'')) WHERE ((CASE WHEN rt1.c2 THEN rt0.c1 ELSE 0X6f29bf3d END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt1.c2 THEN rt0.c1 ELSE 0X6f29bf3d END IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON CAST((rt1.c2 IN (rt0.c1)) AS REAL) RIGHT OUTER JOIN rt1 ON ((rt1.c2 COLLATE RTRIM)LIKE(x'')));
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c0 COLLATE BINARY))<=(((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE BINARY))<=(((- (rt1.c0)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c0 COLLATE BINARY))<=(((- (rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE BINARY))<=(((- (rt1.c0)))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE ((((rt1.c0 COLLATE BINARY))<=(((- (rt1.c0))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c1 IN (rt1.c1, x'')))AND(rt1.c2)))AND(rt0.c0)) WHERE (((((- (t0.c0))))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))))) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c0))))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c1 IN (rt1.c1, x'')))AND(rt1.c2)))AND(rt0.c0)) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c1 IN (rt1.c1, x'')))AND(rt1.c2)))AND(rt0.c0)) WHERE (((((- (t0.c0))))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))))) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (t0.c0))))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c1 IN (rt1.c1, x'')))AND(rt1.c2)))AND(rt0.c0)) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST(t0.c0 AS INTEGER) COLLATE BINARY FULL OUTER JOIN rt0 ON (((((rt1.c1 IN (rt1.c1, x'')))AND(rt1.c2)))AND(rt0.c0)) WHERE (((((- (t0.c0))))>((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))))) ORDER BY (~ (CAST(rt1.c0 AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt1.c1)-(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(1.872307433E9))))) ORDER BY -2.046169633E9 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)-(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(1.872307433E9))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY -2.046169633E9 ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt1.c1)-(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(1.872307433E9))))) ORDER BY -2.046169633E9 ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)-(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(1.872307433E9))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY -2.046169633E9 ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt1.c1)-(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(1.872307433E9))))) ORDER BY -2.046169633E9 ASC;
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY (+ (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS NUMERIC))));
SELECT * FROM rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY (+ (CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c1 AS NUMERIC))));
SELECT * FROM rt0 WHERE ((+ ((~ (rt0.c2))))) ORDER BY (+ (CAST(rt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM rt0 WHERE ((((PRINTF(rt0.c1, rt0.c2, 0.11097542022975637, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))<>((json_array(rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((PRINTF(rt0.c1, rt0.c2, 0.11097542022975637, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))<>((json_array(rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((PRINTF(rt0.c1, rt0.c2, 0.11097542022975637, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))<>((json_array(rt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((PRINTF(rt0.c1, rt0.c2, 0.11097542022975637, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))<>((json_array(rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((PRINTF(rt0.c1, rt0.c2, 0.11097542022975637, rt0.c0, rt0.c1, rt0.c2, rt0.c1)))<>((json_array(rt0.c0, rt0.c2)))));
SELECT ALL * FROM t0, rt1 WHERE (0.3894505253542857) ORDER BY '*c(D,' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((0.3894505253542857) IS TRUE)  as count FROM t0, rt1 ORDER BY '*c(D,' COLLATE BINARY ASC);
SELECT ALL * FROM t0, rt1 WHERE (0.3894505253542857) ORDER BY '*c(D,' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((0.3894505253542857) IS TRUE)  as count FROM t0, rt1 ORDER BY '*c(D,' COLLATE BINARY ASC);
SELECT ALL * FROM t0, rt1 WHERE (0.3894505253542857) ORDER BY '*c(D,' COLLATE BINARY ASC;
SELECT ALL * FROM rt0 WHERE (((CAST(-615093781 AS TEXT))<((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-615093781 AS TEXT))<((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(-615093781 AS TEXT))<((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-615093781 AS TEXT))<((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(-615093781 AS TEXT))<((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ABS(rt0.c1) THEN rt0.c0 END) ORDER BY (rt0.c1 IN (x'')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt0.c1) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (x'')) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ABS(rt0.c1) THEN rt0.c0 END) ORDER BY (rt0.c1 IN (x'')) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt0.c1) THEN rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (x'')) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ABS(rt0.c1) THEN rt0.c0 END) ORDER BY (rt0.c1 IN (x'')) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0) NOT NULL) AS NUMERIC));
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((rt1.c0)=(rt1.c0))) AND (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (((rt1.c0)=(rt1.c0))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((rt1.c0)=(rt1.c0))) AND (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) BETWEEN (((rt1.c0)=(rt1.c0))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN ())) BETWEEN (((rt1.c0)=(rt1.c0))) AND (rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c1)=(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC, CASE ((rt0.c1)=(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<<(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((1875228246, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC, CASE ((rt0.c1)==(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<<(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((1875228246, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c1)=(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC, CASE ((rt0.c1)=(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<<(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((1875228246, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)==(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC, CASE ((rt0.c1)==(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<<(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((1875228246, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c1)=(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) DESC, CASE ((rt0.c1)=(rt0.c2))  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c2)<<(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((1875228246, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))) WHEN ((rt0.c2)<<(rt0.c0)) THEN ((rt0.c2) IS FALSE) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END ASC  NULLS LAST;
SELECT * FROM t0, rt1, rt0 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END, rt1.c1 COLLATE RTRIM)) ORDER BY rt1.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END, rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY rt1.c1 COLLATE NOCASE ASC);
SELECT * FROM t0, rt1, rt0 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END, rt1.c1 COLLATE RTRIM)) ORDER BY rt1.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END, rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY rt1.c1 COLLATE NOCASE ASC);
SELECT * FROM t0, rt1, rt0 WHERE (TRIM(DISTINCT CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END, rt1.c1 COLLATE RTRIM)) ORDER BY rt1.c1 COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (((((rt0.c2))<=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<=((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2))<=((rt0.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))<=((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2))<=((rt0.c2))) IN ()));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('y/')OR((NOT (t0.c0))))) ORDER BY (((rt0.c0))<=((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('y/')OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((rt0.c0))<=((t0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('y/')OR((NOT (t0.c0))))) ORDER BY (((rt0.c0))<=((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('y/')OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((rt0.c0))<=((t0.c0))) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((('y/')OR((NOT (t0.c0))))) ORDER BY (((rt0.c0))<=((t0.c0))) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((t0.c0)==(rt0.c1)))&((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(rt0.c1)))&((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((t0.c0)==(rt0.c1)))&((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)=(rt0.c1)))&((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((t0.c0)==(rt0.c1)))&((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((((rt0.c2)OR(0.26214564489356884)))AND(rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS FIRST, CAST(((rt0.c0)<=(rt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(0.26214564489356884)))AND(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS FIRST, CAST(((rt0.c0)<=(rt0.c1)) AS INTEGER) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((((rt0.c2)OR(0.26214564489356884)))AND(rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS FIRST, CAST(((rt0.c0)<=(rt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(0.26214564489356884)))AND(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS FIRST, CAST(((rt0.c0)<=(rt0.c1)) AS INTEGER) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(((((rt0.c2)OR(0.26214564489356884)))AND(rt0.c0)) AS INTEGER)) ORDER BY (((rt1.c2 IN ())) ISNULL)  NULLS FIRST, CAST(((rt0.c0)<=(rt0.c1)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) ISNULL))AND(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(x'')))OR(rt0.c1)))))OR(STRFTIME(rt1.c2, rt0.c2, rt0.c1))) WHERE ((((((((rt0.c0))==((rt0.c1))))AND(((rt0.c2)+(t0.c0)))))AND(0.2560113841006588)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))=((rt0.c1))))AND(((rt0.c2)+(t0.c0)))))AND(0.2560113841006588))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) ISNULL))AND(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(x'')))OR(rt0.c1)))))OR(STRFTIME(rt1.c2, rt0.c2, rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) ISNULL))AND(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(x'')))OR(rt0.c1)))))OR(STRFTIME(rt1.c2, rt0.c2, rt0.c1))) WHERE ((((((((rt0.c0))==((rt0.c1))))AND(((rt0.c2)+(t0.c0)))))AND(0.2560113841006588)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0))=((rt0.c1))))AND(((rt0.c2)+(t0.c0)))))AND(0.2560113841006588))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) ISNULL))AND(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(x'')))OR(rt0.c1)))))OR(STRFTIME(rt1.c2, rt0.c2, rt0.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) ISNULL))AND(((((((((rt0.c0)AND(rt1.c0)))OR(rt1.c0)))OR(x'')))OR(rt0.c1)))))OR(STRFTIME(rt1.c2, rt0.c2, rt0.c1))) WHERE ((((((((rt0.c0))==((rt0.c1))))AND(((rt0.c2)+(t0.c0)))))AND(0.2560113841006588)));
SELECT * FROM rt0 WHERE (((rt0.c1)/(((rt0.c1)<(rt0.c1))))) ORDER BY (((0.004774483963254306)LIKE(rt0.c1)) IN ()) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.004774483963254306)LIKE(rt0.c1)) IN ()) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)/(((rt0.c1)<(rt0.c1))))) ORDER BY (((0.004774483963254306)LIKE(rt0.c1)) IN ()) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(((rt0.c1)<(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((0.004774483963254306)LIKE(rt0.c1)) IN ()) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)/(((rt0.c1)<(rt0.c1))))) ORDER BY (((0.004774483963254306)LIKE(rt0.c1)) IN ()) DESC, CAST((rt0.c2 IN ()) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((- (((rt0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(rt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (TRIM(rt0.c2 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, t0 WHERE (load_extension(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((load_extension(((t0.c0) ISNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (load_extension(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((load_extension(((t0.c0) ISNULL))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (load_extension(((t0.c0) ISNULL)));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((((((((+ (rt1.c0)))AND((- (rt0.c2)))))OR(CAST(t0.c0 AS REAL))))OR(((rt1.c2)IS NOT(0.7098004072462066)))))OR(((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) ORDER BY '2032806348';
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c0)))AND((- (rt0.c2)))))OR(CAST(t0.c0 AS REAL))))OR(((rt1.c2)IS NOT(0.7098004072462066)))))OR(((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '2032806348');
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((((((((+ (rt1.c0)))AND((- (rt0.c2)))))OR(CAST(t0.c0 AS REAL))))OR(((rt1.c2)IS NOT(0.7098004072462066)))))OR(((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) ORDER BY '2032806348';
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c0)))AND((- (rt0.c2)))))OR(CAST(t0.c0 AS REAL))))OR(((rt1.c2)IS NOT(0.7098004072462066)))))OR(((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY '2032806348');
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((((((((((+ (rt1.c0)))AND((- (rt0.c2)))))OR(CAST(t0.c0 AS REAL))))OR(((rt1.c2)IS NOT(0.7098004072462066)))))OR(((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c2))))) ORDER BY '2032806348';
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('778765325') ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('778765325') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('778765325') ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (('778765325') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('778765325') ORDER BY CAST(((rt1.c0) BETWEEN (rt1.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (IFNULL(DISTINCT rt1.c1, (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1, (rt0.c0 IN ()))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (IFNULL(DISTINCT rt1.c1, (rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1, (rt0.c0 IN ()))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0, rt0 NATURAL JOIN rt1 WHERE (IFNULL(DISTINCT rt1.c1, (rt0.c0 IN ())));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (LIKELIHOOD(rt1.c2, 0.9324417250913615)) ORDER BY (CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt1.c2, 0.9324417250913615)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c1 END IN ()));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (LIKELIHOOD(rt1.c2, 0.9324417250913615)) ORDER BY (CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(rt1.c2, 0.9324417250913615)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c1 END IN ()));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (LIKELIHOOD(rt1.c2, 0.9324417250913615)) ORDER BY (CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt1.c1 END IN ());
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE x''  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) ORDER BY (((((+ (rt0.c2)))AND(((((rt0.c0)OR(NULL)))AND(t0.c0)))))OR(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x''  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((+ (rt0.c2)))AND(((((rt0.c0)OR(NULL)))AND(t0.c0)))))OR(rt0.c0)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE x''  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) ORDER BY (((((+ (rt0.c2)))AND(((((rt0.c0)OR(NULL)))AND(t0.c0)))))OR(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE x''  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((+ (rt0.c2)))AND(((((rt0.c0)OR(NULL)))AND(t0.c0)))))OR(rt0.c0)) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(CASE x''  WHEN rt0.c1 THEN t0.c0 END AS NUMERIC)) ORDER BY (((((+ (rt0.c2)))AND(((((rt0.c0)OR(NULL)))AND(t0.c0)))))OR(rt0.c0)) ASC;
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ('654238057')) COLLATE RTRIM COLLATE BINARY) ORDER BY ((('1813445620')<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ('654238057')) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((('1813445620')<=(t0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ('654238057')) COLLATE RTRIM COLLATE BINARY) ORDER BY ((('1813445620')<=(t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ('654238057')) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((('1813445620')<=(t0.c0)) IN ()));
SELECT ALL * FROM t0 WHERE ((t0.c0 IN ('654238057')) COLLATE RTRIM COLLATE BINARY) ORDER BY ((('1813445620')<=(t0.c0)) IN ());
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c1, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (t0.c0)) WHEN ((t0.c0)>(x'0d42')) THEN CAST(rt0.c0 AS REAL) END) ORDER BY (~ (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN (rt0.c1, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (t0.c0)) WHEN ((t0.c0)>(x'0d42')) THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c1, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (t0.c0)) WHEN ((t0.c0)>(x'0d42')) THEN CAST(rt0.c0 AS REAL) END) ORDER BY (~ (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c1 IN (rt0.c1, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (t0.c0)) WHEN ((t0.c0)>(x'0d42')) THEN CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (~ (rt0.c1 COLLATE BINARY)));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c1, t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN (+ (t0.c0)) WHEN ((t0.c0)>(x'0d42')) THEN CAST(rt0.c0 AS REAL) END) ORDER BY (~ (rt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)GLOB(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((t0.c0)GLOB(t0.c0)) AS BLOB));
SELECT * FROM rt1, t0, rt0 WHERE ((((rt1.c1 IN ()))>(rt1.c0))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((((rt1.c2))==((rt0.c2)))) IS TRUE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>(rt1.c0))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((((rt1.c2))==((rt0.c2)))) IS TRUE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE ((((rt1.c1 IN ()))>(rt1.c0))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((((rt1.c2))==((rt0.c2)))) IS TRUE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>(rt1.c0))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt0.c2 ASC  NULLS FIRST, (((((rt1.c2))==((rt0.c2)))) IS TRUE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt1, t0, rt0 WHERE ((((rt1.c1 IN ()))>(rt1.c0))) ORDER BY rt0.c2 ASC  NULLS FIRST, (((((rt1.c2))==((rt0.c2)))) IS TRUE)  NULLS LAST, ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (rt0.c0))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c1)>=(rt0.c1)))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))  WHEN '0.8025772481632343' THEN CAST(rt0.c1 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))  WHEN '0.8025772481632343' THEN CAST(rt0.c1 AS NUMERIC) END DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c1)>=(rt0.c1)))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))  WHEN '0.8025772481632343' THEN CAST(rt0.c1 AS NUMERIC) END DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c1)>=(rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))  WHEN '0.8025772481632343' THEN CAST(rt0.c1 AS NUMERIC) END DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c1)>=(rt0.c1)))))) ORDER BY CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))  WHEN '0.8025772481632343' THEN CAST(rt0.c1 AS NUMERIC) END DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE x'37fc'  WHEN rt1.c2 THEN NULL ELSE NULL END THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN '780461526' WHEN rt1.c2 THEN rt1.c0 END END) ORDER BY CASE ((rt1.c2)<(rt1.c2))  WHEN json_array(rt1.c0, rt1.c2) THEN json_array_length(rt1.c2, rt1.c2) END  NULLS FIRST, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE x'37fc'  WHEN rt1.c2 THEN NULL ELSE NULL END THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN '780461526' WHEN rt1.c2 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2)<(rt1.c2))  WHEN json_array(rt1.c0, rt1.c2) THEN json_array_length(rt1.c2, rt1.c2) END  NULLS FIRST, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE x'37fc'  WHEN rt1.c2 THEN NULL ELSE NULL END THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN '780461526' WHEN rt1.c2 THEN rt1.c0 END END) ORDER BY CASE ((rt1.c2)<(rt1.c2))  WHEN json_array(rt1.c0, rt1.c2) THEN json_array_length(rt1.c2, rt1.c2) END  NULLS FIRST, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE x'37fc'  WHEN rt1.c2 THEN NULL ELSE NULL END THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN '780461526' WHEN rt1.c2 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1 ORDER BY CASE ((rt1.c2)<(rt1.c2))  WHEN json_array(rt1.c0, rt1.c2) THEN json_array_length(rt1.c2, rt1.c2) END  NULLS FIRST, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN CASE x'37fc'  WHEN rt1.c2 THEN NULL ELSE NULL END THEN ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))AND(NULL)) ELSE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN '780461526' WHEN rt1.c2 THEN rt1.c0 END END) ORDER BY CASE ((rt1.c2)<(rt1.c2))  WHEN json_array(rt1.c0, rt1.c2) THEN json_array_length(rt1.c2, rt1.c2) END  NULLS FIRST, ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)) COLLATE NOCASE;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) IN (((t0.c0)-(rt1.c0)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (rt1.c1)) THEN ((rt0.c2)>=(rt0.c1)) END WHERE (CAST(LOWER(DISTINCT rt0.c2) AS BLOB)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.5539732110947729))||('g_%rc')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT rt0.c2) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) IN (((t0.c0)-(rt1.c0)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (rt1.c1)) THEN ((rt0.c2)>=(rt0.c1)) END ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.5539732110947729))||('g_%rc')) DESC  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) IN (((t0.c0)-(rt1.c0)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (rt1.c1)) THEN ((rt0.c2)>=(rt0.c1)) END WHERE (CAST(LOWER(DISTINCT rt0.c2) AS BLOB)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.5539732110947729))||('g_%rc')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT rt0.c2) AS BLOB)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)) IN (((t0.c0)-(rt1.c0)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((NULL) NOT BETWEEN (t0.c0) AND (rt1.c1)) THEN ((rt0.c2)>=(rt0.c1)) END ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.5539732110947729))||('g_%rc')) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY JULIANDAY(CASE WHEN 0.7697949027343909 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, t0.c0)  NULLS FIRST, CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END, DATE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(CASE WHEN 0.7697949027343909 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, t0.c0)  NULLS FIRST, CASE WHEN ((t0.c0)<>(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END, DATE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY JULIANDAY(CASE WHEN 0.7697949027343909 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, t0.c0)  NULLS FIRST, CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END, DATE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(CASE WHEN 0.7697949027343909 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, t0.c0)  NULLS FIRST, CASE WHEN ((t0.c0)<>(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END, DATE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) ORDER BY JULIANDAY(CASE WHEN 0.7697949027343909 THEN t0.c0 ELSE t0.c0 END, t0.c0 COLLATE BINARY, t0.c0)  NULLS FIRST, CASE WHEN ((t0.c0)!=(t0.c0)) THEN ((((t0.c0)OR(t0.c0)))OR(t0.c0)) ELSE t0.c0 END, DATE(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), t0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c0)IS NOT(rt0.c0)))>(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(rt0.c0)))>(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c0)IS NOT(rt0.c0)))>(((rt1.c2)!=(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(rt0.c0)))>(((rt1.c2)!=(rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((t0.c0)IS NOT(rt0.c0)))>(((rt1.c2)!=(rt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))IS NOT((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))IS NOT((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))IS NOT((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))IS NOT((+ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))IS NOT((+ (t0.c0)))));
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)AND(RTRIM(rt0.c2))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c0) IS FALSE))))) ORDER BY COALESCE(DISTINCT ((rt0.c2)GLOB(rt1.c1)), x'9495', ((rt0.c1)&(rt1.c2)), 'BtQ')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c0) IS FALSE))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)AND(RTRIM(rt0.c2))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) ORDER BY COALESCE(DISTINCT ((rt0.c2)GLOB(rt1.c1)), x'9495', ((rt0.c1)&(rt1.c2)), 'BtQ')  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)AND(RTRIM(rt0.c2))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c0) IS FALSE))))) ORDER BY COALESCE(DISTINCT ((rt0.c2)GLOB(rt1.c1)), x'9495', ((rt0.c1)&(rt1.c2)), 'BtQ')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c0) IS FALSE))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)AND(RTRIM(rt0.c2))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) ORDER BY COALESCE(DISTINCT ((rt0.c2)GLOB(rt1.c1)), x'9495', ((rt0.c1)&(rt1.c2)), 'BtQ')  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN rt0 ON ((((rt1.c2)AND(RTRIM(rt0.c2))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c0) IS FALSE))))) ORDER BY COALESCE(DISTINCT ((rt0.c2)GLOB(rt1.c1)), x'9495', ((rt0.c1)&(rt1.c2)), 'BtQ')  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1 IN ()))|((((('i^SmU<')AND(rt0.c0)))AND(rt1.c0))))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))|((((('i^SmU<')AND(rt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1 IN ()))|((((('i^SmU<')AND(rt0.c0)))AND(rt1.c0))))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))|((((('i^SmU<')AND(rt0.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt0.c1 IN ()))|((((('i^SmU<')AND(rt0.c0)))AND(rt1.c0))))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))OR(LIKELY(rt0.c1))))OR(NULLIF(DISTINCT t0.c0, rt0.c0))))AND((rt0.c2 IN (rt0.c0)))))OR(((rt0.c0)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))OR(LIKELY(rt0.c1))))OR(NULLIF(DISTINCT t0.c0, rt0.c0))))AND((rt0.c2 IN (rt0.c0)))))OR(((rt0.c0)IS(rt1.c2))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))OR(LIKELY(rt0.c1))))OR(NULLIF(DISTINCT t0.c0, rt0.c0))))AND((rt0.c2 IN (rt0.c0)))))OR(((rt0.c0)IS(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))OR(LIKELY(rt0.c1))))OR(NULLIF(DISTINCT t0.c0, rt0.c0))))AND((rt0.c2 IN (rt0.c0)))))OR(((rt0.c0)IS(rt1.c2))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt1.c2)))OR(LIKELY(rt0.c1))))OR(NULLIF(DISTINCT t0.c0, rt0.c0))))AND((rt0.c2 IN (rt0.c0)))))OR(((rt0.c0)IS(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LTRIM(COALESCE(DISTINCT rt1.c1, rt0.c2))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(COALESCE(DISTINCT rt1.c1, rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LTRIM(COALESCE(DISTINCT rt1.c1, rt0.c2))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LTRIM(COALESCE(DISTINCT rt1.c1, rt0.c2))) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (LTRIM(COALESCE(DISTINCT rt1.c1, rt0.c2))) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt1.c2) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt1.c2) NOT NULL) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (CASE WHEN ((((rt1.c0)OR(rt0.c1)))AND(rt0.c1)) THEN ((rt1.c2) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c1 WHERE (rt0.c2) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON rt0.c1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c1 WHERE (rt0.c2) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON rt0.c1 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c1 WHERE (rt0.c2) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY (((rt1.c0 IN (rt1.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY (((rt1.c0 IN (rt1.c2))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c2))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (((((rt1.c0)AND(rt1.c0)))AND(rt1.c2))))) ORDER BY (((rt1.c0 IN (rt1.c2))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('錟m')<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('錟m')<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('錟m')<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('錟m')<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('錟m')<(rt0.c1)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((NULL)IS(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR('1091824715')))))OR(((rt0.c0)|(rt0.c0))))) ORDER BY CASE (('\rmonthsr}s}2') IS FALSE)  WHEN ((rt0.c2)==(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)IS(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR('1091824715')))))OR(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (('\rmonthsr}s}2') IS FALSE)  WHEN ((rt0.c2)=(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((NULL)IS(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR('1091824715')))))OR(((rt0.c0)|(rt0.c0))))) ORDER BY CASE (('\rmonthsr}s}2') IS FALSE)  WHEN ((rt0.c2)==(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)IS(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR('1091824715')))))OR(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (('\rmonthsr}s}2') IS FALSE)  WHEN ((rt0.c2)=(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((NULL)IS(rt0.c1)))OR(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))AND(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR('1091824715')))))OR(((rt0.c0)|(rt0.c0))))) ORDER BY CASE (('\rmonthsr}s}2') IS FALSE)  WHEN ((rt0.c2)==(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, rt1 NOT INDEXED WHERE ((((((rt0.c1))>=((x'')))) NOT BETWEEN (LIKELY(DISTINCT x'f672')) AND (((rt1.c2)%(rt1.c0))))) ORDER BY (((((rt1.c1)>>(rt0.c2))))!=(((+ (rt1.c0))))), (((rt0.c2) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((x'')))) NOT BETWEEN (LIKELY(DISTINCT x'f672')) AND (((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((((rt1.c1)>>(rt0.c2))))<>(((+ (rt1.c0))))), (((rt0.c2) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 NOT INDEXED WHERE ((((((rt0.c1))>=((x'')))) NOT BETWEEN (LIKELY(DISTINCT x'f672')) AND (((rt1.c2)%(rt1.c0))))) ORDER BY (((((rt1.c1)>>(rt0.c2))))!=(((+ (rt1.c0))))), (((rt0.c2) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((x'')))) NOT BETWEEN (LIKELY(DISTINCT x'f672')) AND (((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((((rt1.c1)>>(rt0.c2))))<>(((+ (rt1.c0))))), (((rt0.c2) NOT NULL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 NOT INDEXED WHERE ((((((rt0.c1))>=((x'')))) NOT BETWEEN (LIKELY(DISTINCT x'f672')) AND (((rt1.c2)%(rt1.c0))))) ORDER BY (((((rt1.c1)>>(rt0.c2))))!=(((+ (rt1.c0))))), (((rt0.c2) NOT NULL) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY TYPEOF(((((rt1.c1)AND(rt1.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY TYPEOF(((((rt1.c1)AND(rt1.c0)))AND(x''))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY TYPEOF(((((rt1.c1)AND(rt1.c0)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY TYPEOF(((((rt1.c1)AND(rt1.c0)))AND(x''))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY TYPEOF(((((rt1.c1)AND(rt1.c0)))AND(x'')));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((rt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c1 COLLATE BINARY)))OR((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c1 COLLATE BINARY)))OR((~ (rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((rt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c1 COLLATE BINARY)))OR((~ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c1 COLLATE BINARY)))OR((~ (rt1.c2))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((((((rt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c1 COLLATE BINARY)))OR((~ (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE (+ (rt0.c2))  WHEN rt1.c2 THEN ((rt1.c0)&(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN rt1.c2 THEN ((rt1.c0)&(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE (+ (rt0.c2))  WHEN rt1.c2 THEN ((rt1.c0)&(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c2))  WHEN rt1.c2 THEN ((rt1.c0)&(rt0.c1)) END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE (+ (rt0.c2))  WHEN rt1.c2 THEN ((rt1.c0)&(rt0.c1)) END);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)IS NOT(HEX(rt1.c2)))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST, ((((((rt1.c0) IS TRUE))OR(((rt1.c0) IS TRUE))))AND('')), (- (((rt1.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)IS NOT(HEX(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST, ((((((rt1.c0) IS TRUE))OR(((rt1.c0) IS TRUE))))AND('')), (- (((rt1.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)IS NOT(HEX(rt1.c2)))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST, ((((((rt1.c0) IS TRUE))OR(((rt1.c0) IS TRUE))))AND('')), (- (((rt1.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)IS NOT(HEX(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST, ((((((rt1.c0) IS TRUE))OR(((rt1.c0) IS TRUE))))AND('')), (- (((rt1.c2) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)IS NOT(HEX(rt1.c2)))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c1 END)&(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1))))  NULLS LAST, ((((((rt1.c0) IS TRUE))OR(((rt1.c0) IS TRUE))))AND('')), (- (((rt1.c2) NOTNULL))) ASC  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((- ((((rt1.c0))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((- ((((rt1.c0))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt1.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT * FROM rt0 NATURAL JOIN rt1 WHERE ((- ((((rt1.c0))>((rt0.c2))))));
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c0))))=(((- (rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c0))))==(((- (rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c1 AS BLOB))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c0))))=(((- (rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c0))))==(((- (rt1.c2)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c1 AS BLOB))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE ((((((((((((rt1.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c0))))=(((- (rt1.c2)))))) ORDER BY ((CAST(rt0.c1 AS BLOB))+(((rt1.c2) BETWEEN (rt1.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) BETWEEN (RTRIM(rt0.c2)) AND (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c2))) BETWEEN (RTRIM(rt0.c2)) AND (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) BETWEEN (RTRIM(rt0.c2)) AND (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(rt0.c2))) BETWEEN (RTRIM(rt0.c2)) AND (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2))) BETWEEN (RTRIM(rt0.c2)) AND (((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT * FROM rt0, t0, rt1 WHERE (NULLIF(DISTINCT COALESCE(DISTINCT rt1.c0, rt0.c0), (((rt1.c0))!=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT COALESCE(DISTINCT rt1.c0, rt0.c0), (((rt1.c0))<>((rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (NULLIF(DISTINCT COALESCE(DISTINCT rt1.c0, rt0.c0), (((rt1.c0))!=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT COALESCE(DISTINCT rt1.c0, rt0.c0), (((rt1.c0))<>((rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (NULLIF(DISTINCT COALESCE(DISTINCT rt1.c0, rt0.c0), (((rt1.c0))!=((rt0.c2)))));
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL * FROM rt1 WHERE ((((''))<=((((0.5888699937536379)%(rt1.c2)))))) ORDER BY ((((rt1.c1)!=(rt1.c1)))>>(((rt1.c0)>>(rt1.c2)))) DESC, CAST(LIKELY(DISTINCT rt1.c0) AS INTEGER) ASC, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE BINARY END  NULLS LAST, (((rt1.c0, rt1.c2, rt1.c2, rt1.c1, '-1896007713')) BETWEEN ((rt1.c1 COLLATE BINARY, (((0.014191365900213193)) BETWEEN (('1675952410')) AND (('465228015'))), rt1.c1, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c0)*('')))) AND ((((rt1.c1)IS(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c1)!=(rt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((''))<=((((0.5888699937536379)%(rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)<>(rt1.c1)))>>(((rt1.c0)>>(rt1.c2)))) DESC, CAST(LIKELY(DISTINCT rt1.c0) AS INTEGER) ASC, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE BINARY END  NULLS LAST, (((rt1.c0, rt1.c2, rt1.c2, rt1.c1, '-1896007713')) BETWEEN ((rt1.c1 COLLATE BINARY, (((0.014191365900213193)) BETWEEN (('1675952410')) AND (('465228015'))), rt1.c1, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c0)*('')))) AND ((((rt1.c1)IS(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c1)!=(rt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))))));
SELECT ALL * FROM rt1 WHERE ((((''))<=((((0.5888699937536379)%(rt1.c2)))))) ORDER BY ((((rt1.c1)!=(rt1.c1)))>>(((rt1.c0)>>(rt1.c2)))) DESC, CAST(LIKELY(DISTINCT rt1.c0) AS INTEGER) ASC, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE BINARY END  NULLS LAST, (((rt1.c0, rt1.c2, rt1.c2, rt1.c1, '-1896007713')) BETWEEN ((rt1.c1 COLLATE BINARY, (((0.014191365900213193)) BETWEEN (('1675952410')) AND (('465228015'))), rt1.c1, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c0)*('')))) AND ((((rt1.c1)IS(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c1)!=(rt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((''))<=((((0.5888699937536379)%(rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)<>(rt1.c1)))>>(((rt1.c0)>>(rt1.c2)))) DESC, CAST(LIKELY(DISTINCT rt1.c0) AS INTEGER) ASC, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE BINARY END  NULLS LAST, (((rt1.c0, rt1.c2, rt1.c2, rt1.c1, '-1896007713')) BETWEEN ((rt1.c1 COLLATE BINARY, (((0.014191365900213193)) BETWEEN (('1675952410')) AND (('465228015'))), rt1.c1, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c0)*('')))) AND ((((rt1.c1)IS(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c1)!=(rt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2))))));
SELECT ALL * FROM rt1 WHERE ((((''))<=((((0.5888699937536379)%(rt1.c2)))))) ORDER BY ((((rt1.c1)!=(rt1.c1)))>>(((rt1.c0)>>(rt1.c2)))) DESC, CAST(LIKELY(DISTINCT rt1.c0) AS INTEGER) ASC, CASE WHEN (rt1.c0 IN ()) THEN rt1.c2 COLLATE BINARY END  NULLS LAST, (((rt1.c0, rt1.c2, rt1.c2, rt1.c1, '-1896007713')) BETWEEN ((rt1.c1 COLLATE BINARY, (((0.014191365900213193)) BETWEEN (('1675952410')) AND (('465228015'))), rt1.c1, (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))), ((rt1.c0)*('')))) AND ((((rt1.c1)IS(rt1.c1)), CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c1)!=(rt1.c0)), CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, ((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1) NOTNULL))AND(((rt1.c1) IS FALSE))))OR(((rt1.c1)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))AND(((rt1.c1) IS FALSE))))OR(((rt1.c1)>=(rt1.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1) NOTNULL))AND(((rt1.c1) IS FALSE))))OR(((rt1.c1)>=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1) NOTNULL))AND(((rt1.c1) IS FALSE))))OR(((rt1.c1)>=(rt1.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c1) NOTNULL))AND(((rt1.c1) IS FALSE))))OR(((rt1.c1)>=(rt1.c0)))));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0 IN ()))AND(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c2)AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0 IN ()))AND(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c2)AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0 IN ()))AND(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c2)AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0 IN ()))AND(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c2)AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0 IN ()))AND(CAST(rt1.c2 AS NUMERIC))))OR(((rt1.c2)AND(rt1.c2)))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (((x'')GLOB(CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((x'')GLOB(CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')GLOB(CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ())  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((x'')GLOB(CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY CAST(rt0.c2 AS TEXT) COLLATE RTRIM, (((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c1)) IN ())  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1))>((rt1.c2))) COLLATE NOCASE) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (CAST(rt1.c0 AS NUMERIC) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1))>((rt1.c2))) COLLATE NOCASE) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1))>((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 ORDER BY (CAST(rt1.c0 AS NUMERIC) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1))>((rt1.c2))) COLLATE NOCASE) ORDER BY (CAST(rt1.c0 AS NUMERIC) IN ()) ASC  NULLS LAST;
SELECT * FROM t0, rt1 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN '1642710334' END THEN 0.007434953045112547 ELSE (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN '1642710334' END THEN 0.007434953045112547 ELSE (~ (NULL)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN '1642710334' END THEN 0.007434953045112547 ELSE (~ (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN '1642710334' END THEN 0.007434953045112547 ELSE (~ (NULL)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN CASE rt0.c1  WHEN rt0.c1 THEN '1642710334' END THEN 0.007434953045112547 ELSE (~ (NULL)) END);
SELECT * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END)OR((((rt0.c1, rt1.c2, rt0.c0))>=((rt0.c0, rt0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END)OR((((rt0.c1, rt1.c2, rt0.c0))>=((rt0.c0, rt0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END)OR((((rt0.c1, rt1.c2, rt0.c0))>=((rt0.c0, rt0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END)OR((((rt0.c1, rt1.c2, rt0.c0))>=((rt0.c0, rt0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c0 THEN rt1.c2 ELSE t0.c0 END)OR((((rt0.c1, rt1.c2, rt0.c0))>=((rt0.c0, rt0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((json_remove(rt1.c0, rt1.c0))>(((rt1.c1) BETWEEN (rt0.c0) AND (t0.c0))))) ORDER BY (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 END, (~ (rt0.c2)), (rt0.c1 IN ())))<((((rt1.c0) NOTNULL), ((rt1.c0)<(t0.c0)), CASE t0.c0  WHEN NULL THEN rt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt1.c0, rt1.c0))>(((rt1.c1) BETWEEN (rt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 END, (~ (rt0.c2)), (rt0.c1 IN ())))<((((rt1.c0) NOTNULL), ((rt1.c0)<(t0.c0)), CASE t0.c0  WHEN NULL THEN rt0.c2 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((json_remove(rt1.c0, rt1.c0))>(((rt1.c1) BETWEEN (rt0.c0) AND (t0.c0))))) ORDER BY (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 END, (~ (rt0.c2)), (rt0.c1 IN ())))<((((rt1.c0) NOTNULL), ((rt1.c0)<(t0.c0)), CASE t0.c0  WHEN NULL THEN rt0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt1.c0, rt1.c0))>(((rt1.c1) BETWEEN (rt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 END, (~ (rt0.c2)), (rt0.c1 IN ())))<((((rt1.c0) NOTNULL), ((rt1.c0)<(t0.c0)), CASE t0.c0  WHEN NULL THEN rt0.c2 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((json_remove(rt1.c0, rt1.c0))>(((rt1.c1) BETWEEN (rt0.c0) AND (t0.c0))))) ORDER BY (((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 END, (~ (rt0.c2)), (rt0.c1 IN ())))<((((rt1.c0) NOTNULL), ((rt1.c0)<(t0.c0)), CASE t0.c0  WHEN NULL THEN rt0.c2 END)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY (((rt0.c1)AND(x'')) IN ()) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)AND(x'')) IN ()) DESC  NULLS LAST, '' ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY (((rt0.c1)AND(x'')) IN ()) DESC  NULLS LAST, '' ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) IS FALSE) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)AND(x'')) IN ()) DESC  NULLS LAST, '' ASC);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS TEXT)) ORDER BY (((rt0.c1)AND(x'')) IN ()) DESC  NULLS LAST, '' ASC;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)&(rt0.c0)))IS(CAST(rt1.c2 AS REAL))) INNER JOIN t0 ON (('-1291878099') NOT BETWEEN ((- (rt1.c2))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((+ (((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)&(rt0.c0)))IS(CAST(rt1.c2 AS REAL))) INNER JOIN t0 ON (('-1291878099') NOT BETWEEN ((- (rt1.c2))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)&(rt0.c0)))IS(CAST(rt1.c2 AS REAL))) INNER JOIN t0 ON (('-1291878099') NOT BETWEEN ((- (rt1.c2))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((+ (((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)&(rt0.c0)))IS(CAST(rt1.c2 AS REAL))) INNER JOIN t0 ON (('-1291878099') NOT BETWEEN ((- (rt1.c2))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON ((((rt0.c0)&(rt0.c0)))IS(CAST(rt1.c2 AS REAL))) INNER JOIN t0 ON (('-1291878099') NOT BETWEEN ((- (rt1.c2))) AND (CAST(rt1.c1 AS NUMERIC))) WHERE ((+ (((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE ((0.26736641234891023 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.26736641234891023 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((0.26736641234891023 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0.26736641234891023 IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((0.26736641234891023 IN ()));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c2) NOT BETWEEN ('cp5yu') AND (t0.c0)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (rt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (rt0.c0) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c2) NOT BETWEEN ('cp5yu') AND (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c2) NOT BETWEEN ('cp5yu') AND (t0.c0)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (rt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (rt0.c0) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c2) NOT BETWEEN ('cp5yu') AND (t0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((rt1.c2) NOT BETWEEN ('cp5yu') AND (t0.c0)) COLLATE NOCASE WHERE (((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN (rt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)LIKE(rt0.c1))) NOT NULL)) ORDER BY ((rt1.c1)+(rt0.c0)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1)+(rt0.c0)) COLLATE BINARY COLLATE RTRIM ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)LIKE(rt0.c1))) NOT NULL)) ORDER BY ((rt1.c1)+(rt0.c0)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1)+(rt0.c0)) COLLATE BINARY COLLATE RTRIM ASC);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c1)LIKE(rt0.c1))) NOT NULL)) ORDER BY ((rt1.c1)+(rt0.c0)) COLLATE BINARY COLLATE RTRIM ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) AS NUMERIC) WHERE (INSTR(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END, (((9.60486337E8)) NOT BETWEEN ((x'')) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END, (((9.60486337E8)) NOT BETWEEN ((x'')) AND ((t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CAST(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) AS NUMERIC) WHERE (INSTR(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END, (((9.60486337E8)) NOT BETWEEN ((x'')) AND ((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END, (((9.60486337E8)) NOT BETWEEN ((x'')) AND ((t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CAST(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)) AS NUMERIC) WHERE (INSTR(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END, (((9.60486337E8)) NOT BETWEEN ((x'')) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0) IS FALSE)))>((CAST(rt1.c0 AS INTEGER)))) WHERE (((((rt0.c2)>=(rt1.c0))) BETWEEN (0Xc8ae0d0) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt1.c0))) BETWEEN (0Xc8ae0d0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0) IS FALSE)))>((CAST(rt1.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0) IS FALSE)))>((CAST(rt1.c0 AS INTEGER)))) WHERE (((((rt0.c2)>=(rt1.c0))) BETWEEN (0Xc8ae0d0) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(rt1.c0))) BETWEEN (0Xc8ae0d0) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0) IS FALSE)))>((CAST(rt1.c0 AS INTEGER)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((((rt0.c0) IS FALSE)))>((CAST(rt1.c0 AS INTEGER)))) WHERE (((((rt0.c2)>=(rt1.c0))) BETWEEN (0Xc8ae0d0) AND ((rt0.c1 IN ()))));
SELECT ALL * FROM rt1 WHERE ((((-646468717)) BETWEEN (((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '-321847775', '1557808042')) AND ((rt1.c0, rt1.c0, rt1.c1))))) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))) ORDER BY (NOT (rt1.c1 COLLATE BINARY)), (((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c0) NOT NULL), rt1.c1 COLLATE NOCASE)) AND ((((rt1.c2) NOTNULL), ((rt1.c2)IS(rt1.c2)), ((rt1.c1)/(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-646468717)) BETWEEN (((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '-321847775', '1557808042')) AND ((rt1.c0, rt1.c0, rt1.c1))))) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c1 COLLATE BINARY)), (((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c0) NOT NULL), rt1.c1 COLLATE NOCASE)) AND ((((rt1.c2) NOTNULL), ((rt1.c2)IS(rt1.c2)), ((rt1.c1)/(rt1.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((-646468717)) BETWEEN (((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '-321847775', '1557808042')) AND ((rt1.c0, rt1.c0, rt1.c1))))) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))) ORDER BY (NOT (rt1.c1 COLLATE BINARY)), (((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c0) NOT NULL), rt1.c1 COLLATE NOCASE)) AND ((((rt1.c2) NOTNULL), ((rt1.c2)IS(rt1.c2)), ((rt1.c1)/(rt1.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-646468717)) BETWEEN (((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '-321847775', '1557808042')) AND ((rt1.c0, rt1.c0, rt1.c1))))) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (rt1.c1 COLLATE BINARY)), (((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c0) NOT NULL), rt1.c1 COLLATE NOCASE)) AND ((((rt1.c2) NOTNULL), ((rt1.c2)IS(rt1.c2)), ((rt1.c1)/(rt1.c2))))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((-646468717)) BETWEEN (((((rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((rt1.c2, '-321847775', '1557808042')) AND ((rt1.c0, rt1.c0, rt1.c1))))) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))))) ORDER BY (NOT (rt1.c1 COLLATE BINARY)), (((rt1.c0, rt1.c2, rt1.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM, ((rt1.c0) NOT NULL), rt1.c1 COLLATE NOCASE)) AND ((((rt1.c2) NOTNULL), ((rt1.c2)IS(rt1.c2)), ((rt1.c1)/(rt1.c2))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) ORDER BY 0.21205703529042397 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY 0.21205703529042397 DESC);
SELECT ALL * FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) ORDER BY 0.21205703529042397 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY 0.21205703529042397 DESC);
SELECT ALL * FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) ORDER BY 0.21205703529042397 DESC;
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt0.c0  WHEN x'8b34' THEN rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(0.43712052414660596)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN x'8b34' THEN rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(0.43712052414660596)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER));
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt0.c0  WHEN x'8b34' THEN rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(0.43712052414660596)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c0  WHEN x'8b34' THEN rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(0.43712052414660596)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER));
SELECT ALL * FROM rt0, rt1 WHERE (CASE CASE rt0.c0  WHEN x'8b34' THEN rt0.c0 END  WHEN (((rt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((((((((rt0.c2)AND(0.43712052414660596)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) END) ORDER BY CAST(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END AS INTEGER);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((((rt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST('1102778351' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('1102778351' AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST('1102778351' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('1102778351' AS REAL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST('1102778351' AS REAL));
SELECT * FROM rt1 WHERE (x'') ORDER BY ((CAST(rt1.c1 AS BLOB))<=(((rt1.c0)*(rt1.c2)))) DESC, (((((rt1.c1) BETWEEN ('-2039318790') AND (rt1.c0))))<=(((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB))<=(((rt1.c0)*(rt1.c2)))) DESC, (((((rt1.c1) BETWEEN ('-2039318790') AND (rt1.c0))))<=(((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))));
SELECT * FROM rt1 WHERE (x'') ORDER BY ((CAST(rt1.c1 AS BLOB))<=(((rt1.c0)*(rt1.c2)))) DESC, (((((rt1.c1) BETWEEN ('-2039318790') AND (rt1.c0))))<=(((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS BLOB))<=(((rt1.c0)*(rt1.c2)))) DESC, (((((rt1.c1) BETWEEN ('-2039318790') AND (rt1.c0))))<=(((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1)))))));
SELECT * FROM rt1 WHERE (x'') ORDER BY ((CAST(rt1.c1 AS BLOB))<=(((rt1.c0)*(rt1.c2)))) DESC, (((((rt1.c1) BETWEEN ('-2039318790') AND (rt1.c0))))<=(((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END))==((CASE WHEN rt0.c1 THEN rt1.c1 END))) WHERE (LTRIM(rt1.c0, rt0.c2) COLLATE BINARY) ORDER BY (~ (CHANGES())) ASC  NULLS LAST, ((((((((('-1638410746')AND(rt1.c0)))AND(x'')))AND(rt1.c0)))OR(rt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt1.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END))=((CASE WHEN rt0.c1 THEN rt1.c1 END))) ORDER BY (~ (CHANGES())) ASC  NULLS LAST, ((((((((('-1638410746')AND(rt1.c0)))AND(x'')))AND(rt1.c0)))OR(rt1.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END))==((CASE WHEN rt0.c1 THEN rt1.c1 END))) WHERE (LTRIM(rt1.c0, rt0.c2) COLLATE BINARY) ORDER BY (~ (CHANGES())) ASC  NULLS LAST, ((((((((('-1638410746')AND(rt1.c0)))AND(x'')))AND(rt1.c0)))OR(rt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt1.c0, rt0.c2) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON (((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END))=((CASE WHEN rt0.c1 THEN rt1.c1 END))) ORDER BY (~ (CHANGES())) ASC  NULLS LAST, ((((((((('-1638410746')AND(rt1.c0)))AND(x'')))AND(rt1.c0)))OR(rt1.c2)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON (((CASE NULL  WHEN rt1.c2 THEN rt1.c0 END))==((CASE WHEN rt0.c1 THEN rt1.c1 END))) WHERE (LTRIM(rt1.c0, rt0.c2) COLLATE BINARY) ORDER BY (~ (CHANGES())) ASC  NULLS LAST, ((((((((('-1638410746')AND(rt1.c0)))AND(x'')))AND(rt1.c0)))OR(rt1.c2)) IN ()) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) AS NUMERIC) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) NOT BETWEEN (-1893000858) AND (((((((((rt1.c1)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c2))))) ORDER BY (rt1.c0 IN (rt1.c2, rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) NOT BETWEEN (-1893000858) AND (((((((((rt1.c1)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) AS NUMERIC) ORDER BY (rt1.c0 IN (rt1.c2, rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) AS NUMERIC) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) NOT BETWEEN (-1893000858) AND (((((((((rt1.c1)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c2))))) ORDER BY (rt1.c0 IN (rt1.c2, rt0.c1)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) NOT BETWEEN (-1893000858) AND (((((((((rt1.c1)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) AS NUMERIC) ORDER BY (rt1.c0 IN (rt1.c2, rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c0))) AS NUMERIC) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c0))) NOT BETWEEN (-1893000858) AND (((((((((rt1.c1)OR(t0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(rt1.c2))))) ORDER BY (rt1.c0 IN (rt1.c2, rt0.c1)) COLLATE RTRIM;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN '９)' WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN '９)' WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN '９)' WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c1 THEN '９)' WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CASE WHEN rt1.c1 THEN '９)' WHEN x'' THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END) IS FALSE));
SELECT * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) IN (rt1.c2))) ORDER BY ((((rt1.c1)IS(0.39932394184444997))) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c0))) AND (((rt1.c1)OR(1813445620))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) IN (rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS(0.39932394184444997))) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c0))) AND (((rt1.c1)OR(1813445620)))));
SELECT * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) IN (rt1.c2))) ORDER BY ((((rt1.c1)IS(0.39932394184444997))) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c0))) AND (((rt1.c1)OR(1813445620))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) IN (rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS(0.39932394184444997))) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c0))) AND (((rt1.c1)OR(1813445620)))));
SELECT * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) IN (rt1.c2))) ORDER BY ((((rt1.c1)IS(0.39932394184444997))) BETWEEN ((rt1.c1 IN (rt1.c1, rt1.c0))) AND (((rt1.c1)OR(1813445620))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NULL))=((COALESCE(rt1.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))=((COALESCE(rt1.c0, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NULL))=((COALESCE(rt1.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))=((COALESCE(rt1.c0, rt0.c0))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((NULL))=((COALESCE(rt1.c0, rt0.c0)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((CAST(rt1.c2 AS NUMERIC)) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))<=((rt0.c0))), (((rt0.c0))!=((rt0.c0))), (NOT (NULL)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))>=((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) NOT BETWEEN (0.6339744222011481) AND (rt0.c1)), (~ (rt0.c2)), rt0.c0 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))<=((rt0.c0))), (((rt0.c0))!=((rt0.c0))), (NOT (NULL)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))>=((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) NOT BETWEEN (0.6339744222011481) AND (rt0.c1)), (~ (rt0.c2)), rt0.c0 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))<=((rt0.c0))), (((rt0.c0))!=((rt0.c0))), (NOT (NULL)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))>=((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) NOT BETWEEN (0.6339744222011481) AND (rt0.c1)), (~ (rt0.c2)), rt0.c0 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1))<=((rt0.c0))), (((rt0.c0))!=((rt0.c0))), (NOT (NULL)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))>=((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) NOT BETWEEN (0.6339744222011481) AND (rt0.c1)), (~ (rt0.c2)), rt0.c0 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1))<=((rt0.c0))), (((rt0.c0))!=((rt0.c0))), (NOT (NULL)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0))))>=((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) NOT BETWEEN (0.6339744222011481) AND (rt0.c1)), (~ (rt0.c2)), rt0.c0 COLLATE BINARY, (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((((rt1.c1, rt1.c1, rt1.c1))=((rt1.c0, t0.c0, rt1.c1))))AND('-1958986469')))OR(((rt1.c2)AND(t0.c0)))))AND((~ (t0.c0)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c1, rt1.c1, rt1.c1))==((rt1.c0, t0.c0, rt1.c1))))AND('-1958986469')))OR(((rt1.c2)AND(t0.c0)))))AND((~ (t0.c0)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((((rt1.c1, rt1.c1, rt1.c1))=((rt1.c0, t0.c0, rt1.c1))))AND('-1958986469')))OR(((rt1.c2)AND(t0.c0)))))AND((~ (t0.c0)))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c1, rt1.c1, rt1.c1))==((rt1.c0, t0.c0, rt1.c1))))AND('-1958986469')))OR(((rt1.c2)AND(t0.c0)))))AND((~ (t0.c0)))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((((rt1.c1, rt1.c1, rt1.c1))=((rt1.c0, t0.c0, rt1.c1))))AND('-1958986469')))OR(((rt1.c2)AND(t0.c0)))))AND((~ (t0.c0)))))OR((NOT (t0.c0)))));
SELECT * FROM rt1, rt0, t0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1)AND(rt0.c2)) END) ORDER BY ABS(rt0.c2 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1)AND(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ABS(rt0.c2 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1)AND(rt0.c2)) END) ORDER BY ABS(rt0.c2 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE SQLITE_SOURCE_ID()  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1)AND(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ABS(rt0.c2 COLLATE RTRIM) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CASE SQLITE_SOURCE_ID()  WHEN t0.c0 COLLATE NOCASE THEN ((rt1.c1)AND(rt0.c2)) END) ORDER BY ABS(rt0.c2 COLLATE RTRIM) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (QUOTE((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((t0.c0 IN ()))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (QUOTE((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((t0.c0 IN ()))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (QUOTE((t0.c0 IN ())));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON (+ (rt1.c2)) COLLATE RTRIM WHERE (TRIM((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((- (t0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (+ (rt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON (+ (rt1.c2)) COLLATE RTRIM WHERE (TRIM((- (t0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM((- (t0.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON (+ (rt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON (+ (rt1.c2)) COLLATE RTRIM WHERE (TRIM((- (t0.c0))));
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0)|(rt1.c2))) IS TRUE) LEFT OUTER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) IS FALSE) WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE) ORDER BY (((rt1.c0))!=((x'3f80'))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0)|(rt1.c2))) IS TRUE) LEFT OUTER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) IS FALSE) ORDER BY (((rt1.c0))!=((x'3f80'))) COLLATE BINARY);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0)|(rt1.c2))) IS TRUE) LEFT OUTER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) IS FALSE) WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE) ORDER BY (((rt1.c0))!=((x'3f80'))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0)|(rt1.c2))) IS TRUE) LEFT OUTER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) IS FALSE) ORDER BY (((rt1.c0))!=((x'3f80'))) COLLATE BINARY);
SELECT * FROM rt1 CROSS JOIN rt0 ON ((((rt0.c0)|(rt1.c2))) IS TRUE) LEFT OUTER JOIN t0 ON (((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c1)))) IS FALSE) WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((t0.c0))) COLLATE NOCASE) ORDER BY (((rt1.c0))!=((x'3f80'))) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))OR(-2046169633)))OR((((''))>((rt1.c2))))))OR((- (rt0.c2))))) ORDER BY (((rt1.c0 IN ()))GLOB(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c2)))OR(-2046169633)))OR((((''))>((rt1.c2))))))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0 IN ()))GLOB(CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))OR(-2046169633)))OR((((''))>((rt1.c2))))))OR((- (rt0.c2))))) ORDER BY (((rt1.c0 IN ()))GLOB(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1)OR(rt1.c2)))OR(-2046169633)))OR((((''))>((rt1.c2))))))OR((- (rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((rt1.c0 IN ()))GLOB(CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt1.c1)OR(rt1.c2)))OR(-2046169633)))OR((((''))>((rt1.c2))))))OR((- (rt0.c2))))) ORDER BY (((rt1.c0 IN ()))GLOB(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) END) ORDER BY (((rt0.c2 IN (rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) END) ORDER BY (((rt0.c2 IN (rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT * FROM rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)) END) ORDER BY (((rt0.c2 IN (rt0.c2)))IS(CASE WHEN rt0.c1 THEN rt0.c0 END));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ('oB&\rdp' COLLATE NOCASE) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (('oB&\rdp' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ('oB&\rdp' COLLATE NOCASE) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (('oB&\rdp' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ('oB&\rdp' COLLATE NOCASE) ORDER BY LIKELY(DISTINCT rt0.c0) COLLATE BINARY DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ()), ((rt0.c1)>=(rt0.c1)), rt0.c2 COLLATE RTRIM, (~ (rt0.c1)), (rt0.c2 IN (NULL))))<(('-413686117' COLLATE RTRIM, ((rt0.c0) ISNULL), (((rt0.c0))>=((rt0.c1))), (rt0.c0 IN (rt0.c0)), ((rt0.c0)>(rt0.c1)))))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'')) ELSE (rt0.c2 IN ('1794765000')) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ()), ((rt0.c1)>=(rt0.c1)), rt0.c2 COLLATE RTRIM, (~ (rt0.c1)), (rt0.c2 IN (NULL))))<(('-413686117' COLLATE RTRIM, ((rt0.c0) ISNULL), (((rt0.c0))>=((rt0.c1))), (rt0.c0 IN (rt0.c0)), ((rt0.c0)>(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'')) ELSE (rt0.c2 IN ('1794765000')) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ()), ((rt0.c1)>=(rt0.c1)), rt0.c2 COLLATE RTRIM, (~ (rt0.c1)), (rt0.c2 IN (NULL))))<(('-413686117' COLLATE RTRIM, ((rt0.c0) ISNULL), (((rt0.c0))>=((rt0.c1))), (rt0.c0 IN (rt0.c0)), ((rt0.c0)>(rt0.c1)))))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'')) ELSE (rt0.c2 IN ('1794765000')) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 IN ()), ((rt0.c1)>=(rt0.c1)), rt0.c2 COLLATE RTRIM, (~ (rt0.c1)), (rt0.c2 IN (NULL))))<(('-413686117' COLLATE RTRIM, ((rt0.c0) ISNULL), (((rt0.c0))>=((rt0.c1))), (rt0.c0 IN (rt0.c0)), ((rt0.c0)>(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'')) ELSE (rt0.c2 IN ('1794765000')) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0 IN ()), ((rt0.c1)>=(rt0.c1)), rt0.c2 COLLATE RTRIM, (~ (rt0.c1)), (rt0.c2 IN (NULL))))<(('-413686117' COLLATE RTRIM, ((rt0.c0) ISNULL), (((rt0.c0))>=((rt0.c1))), (rt0.c0 IN (rt0.c0)), ((rt0.c0)>(rt0.c1)))))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)) THEN ((((rt0.c0)OR(rt0.c0)))AND(x'')) ELSE (rt0.c2 IN ('1794765000')) END ASC;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c0 IN ()))GLOB((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))GLOB((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c0 IN ()))GLOB((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))GLOB((NOT (rt0.c2))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((rt1.c0 IN ()))GLOB((NOT (rt0.c2)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))<<(573748665))) ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))<<(573748665))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))<<(573748665))) ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND((rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))<<(573748665))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0 COLLATE BINARY)OR(rt1.c2)))AND((rt1.c2 IN ()))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(UPPER(rt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c0) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(UPPER(rt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c0) AS BLOB)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(UPPER(rt1.c0) AS BLOB));
SELECT ALL * FROM rt1 WHERE ((((x'')-(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'')-(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((x'')-(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'')-(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((x'')-(rt1.c1)) IN ()));
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt1.c2))<>((rt1.c2)))  WHEN ((rt1.c1)+(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((~ (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c2))<>((rt1.c2)))  WHEN ((rt1.c1)+(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((~ (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt1.c2))<>((rt1.c2)))  WHEN ((rt1.c1)+(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((~ (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c2))<>((rt1.c2)))  WHEN ((rt1.c1)+(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((~ (rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CASE (((rt1.c2))<>((rt1.c2)))  WHEN ((rt1.c1)+(rt0.c1)) THEN rt0.c0 COLLATE RTRIM END) ORDER BY ((~ (rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c2 END AS BLOB)) ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c0)) ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c2 END AS BLOB)) ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c0)) ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt0.c2 END AS BLOB)) ORDER BY ((CAST(t0.c0 AS BLOB)) BETWEEN (t0.c0 COLLATE NOCASE) AND (rt0.c0)) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL), '', ((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)!=(rt0.c0)), '')))) ORDER BY ((LOWER(DISTINCT 622841866))%(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL), '', ((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)!=(rt0.c0)), '')))) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT 622841866))%(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL), '', ((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)!=(rt0.c0)), '')))) ORDER BY ((LOWER(DISTINCT 622841866))%(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL), '', ((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)!=(rt0.c0)), '')))) IS TRUE)  as count FROM rt0 ORDER BY ((LOWER(DISTINCT 622841866))%(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((CAST(rt0.c0 AS REAL), '', ((rt0.c0)>=(rt0.c0)))) AND ((rt0.c0 COLLATE RTRIM, ((rt0.c2)!=(rt0.c0)), '')))) ORDER BY ((LOWER(DISTINCT 622841866))%(CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, rt1 WHERE (CASE 0.4245589343461462  WHEN ((rt1.c1)-(rt0.c0)) THEN 'd耘dK礮牗K' WHEN (~ (rt1.c0)) THEN CAST(rt0.c0 AS REAL) WHEN CAST(0.34409055212620643 AS BLOB) THEN (rt1.c1 IN (x'', t0.c0)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.4245589343461462  WHEN ((rt1.c1)-(rt0.c0)) THEN 'd耘dK礮牗K' WHEN (~ (rt1.c0)) THEN CAST(rt0.c0 AS REAL) WHEN CAST(0.34409055212620643 AS BLOB) THEN (rt1.c1 IN (x'', t0.c0)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, rt1 WHERE (CASE 0.4245589343461462  WHEN ((rt1.c1)-(rt0.c0)) THEN 'd耘dK礮牗K' WHEN (~ (rt1.c0)) THEN CAST(rt0.c0 AS REAL) WHEN CAST(0.34409055212620643 AS BLOB) THEN (rt1.c1 IN (x'', t0.c0)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.4245589343461462  WHEN ((rt1.c1)-(rt0.c0)) THEN 'd耘dK礮牗K' WHEN (~ (rt1.c0)) THEN CAST(rt0.c0 AS REAL) WHEN CAST(0.34409055212620643 AS BLOB) THEN (rt1.c1 IN (x'', t0.c0)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt0.c2 END END) IS TRUE)  as count FROM t0, rt0 NOT INDEXED, rt1);
SELECT COUNT(*) FROM t0, rt0 NOT INDEXED, rt1 WHERE (CASE 0.4245589343461462  WHEN ((rt1.c1)-(rt0.c0)) THEN 'd耘dK礮牗K' WHEN (~ (rt1.c0)) THEN CAST(rt0.c0 AS REAL) WHEN CAST(0.34409055212620643 AS BLOB) THEN (rt1.c1 IN (x'', t0.c0)) ELSE CASE rt1.c1  WHEN rt0.c1 THEN rt0.c2 END END);
SELECT ALL * FROM t0 WHERE (load_extension(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (load_extension(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0)))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (load_extension(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)), ((t0.c0)OR(t0.c0))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c1 WHEN x'96bf' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END ELSE ((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)) END) ORDER BY (~ (LENGTH(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c1 WHEN x'96bf' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END ELSE ((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (~ (LENGTH(rt1.c0))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c1 WHEN x'96bf' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END ELSE ((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)) END) ORDER BY (~ (LENGTH(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c1 WHEN x'96bf' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END ELSE ((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)) END) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (~ (LENGTH(rt1.c0))));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CASE WHEN rt1.c0 COLLATE BINARY THEN CASE WHEN t0.c0 THEN rt0.c1 WHEN x'96bf' THEN rt1.c2 WHEN rt1.c2 THEN rt0.c2 END ELSE ((((rt1.c1)AND(rt0.c0)))OR(rt0.c1)) END) ORDER BY (~ (LENGTH(rt1.c0)));
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON (NOT (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN -949768225 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) WHERE ((NOT ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON (NOT (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN -949768225 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON (NOT (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN -949768225 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) WHERE ((NOT ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t0.c0))))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON (NOT (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN -949768225 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON (NOT (CASE rt1.c2  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c2 THEN -949768225 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) WHERE ((NOT ((+ (t0.c0)))));
SELECT ALL * FROM t0, rt1 WHERE (((((((((((t0.c0) NOT NULL))AND(((rt1.c1) IS TRUE))))AND(((rt1.c0) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) ORDER BY (((+ (t0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) NOT NULL))AND(((rt1.c1) IS TRUE))))AND(((rt1.c0) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (((((((((((t0.c0) NOT NULL))AND(((rt1.c1) IS TRUE))))AND(((rt1.c0) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) ORDER BY (((+ (t0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0) NOT NULL))AND(((rt1.c1) IS TRUE))))AND(((rt1.c0) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (((((((((((t0.c0) NOT NULL))AND(((rt1.c1) IS TRUE))))AND(((rt1.c0) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c1))))) ORDER BY (((+ (t0.c0))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c2, t0.c0))=((NULL, t0.c0, rt1.c2)))) ISNULL)) ORDER BY rt1.c2 DESC, CAST(((rt0.c2) BETWEEN ('畴	oP') AND (t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, rt0.c2, t0.c0))=((NULL, t0.c0, rt1.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt1.c2 DESC, CAST(((rt0.c2) BETWEEN ('畴	oP') AND (t0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c2, t0.c0))=((NULL, t0.c0, rt1.c2)))) ISNULL)) ORDER BY rt1.c2 DESC, CAST(((rt0.c2) BETWEEN ('畴	oP') AND (t0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, rt0.c2, t0.c0))=((NULL, t0.c0, rt1.c2)))) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt1.c2 DESC, CAST(((rt0.c2) BETWEEN ('畴	oP') AND (t0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c2, t0.c0))=((NULL, t0.c0, rt1.c2)))) ISNULL)) ORDER BY rt1.c2 DESC, CAST(((rt0.c2) BETWEEN ('畴	oP') AND (t0.c0)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0))) BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0)));
SELECT * FROM t0 WHERE (((((+ (t0.c0)), ((((0.8241308310691324)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT NULL)))>=((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c0)), ((((0.8241308310691324)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT NULL)))>=((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((+ (t0.c0)), ((((0.8241308310691324)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT NULL)))>=((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (t0.c0)), ((((0.8241308310691324)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT NULL)))>=((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((+ (t0.c0)), ((((0.8241308310691324)AND(t0.c0)))OR(t0.c0)), ((t0.c0) NOT NULL)))>=((t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (NOT (t0.c0))))));
SELECT ALL * FROM rt0, rt1 WHERE (0.5661628858379928) ORDER BY ((((rt0.c0) NOT NULL))IS NOT(rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((0.5661628858379928) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0) NOT NULL))IS NOT(rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (0.5661628858379928) ORDER BY ((((rt0.c0) NOT NULL))IS NOT(rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((0.5661628858379928) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c0) NOT NULL))IS NOT(rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (0.5661628858379928) ORDER BY ((((rt0.c0) NOT NULL))IS NOT(rt1.c2 COLLATE RTRIM)) DESC;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)<<(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2) NOTNULL) THEN (- (t0.c0)) WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) END) ORDER BY ((((t0.c0)<<(0x78c130d8)))LIKE(TRIM(rt1.c1))), (json_insert(rt1.c1, rt1.c2, rt1.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<<(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2) NOTNULL) THEN (- (t0.c0)) WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c0)<<(0X78c130d8)))LIKE(TRIM(rt1.c1))), (json_insert(rt1.c1, rt1.c2, rt1.c0) IN ()) DESC);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)<<(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2) NOTNULL) THEN (- (t0.c0)) WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) END) ORDER BY ((((t0.c0)<<(0x78c130d8)))LIKE(TRIM(rt1.c1))), (json_insert(rt1.c1, rt1.c2, rt1.c0) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<<(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2) NOTNULL) THEN (- (t0.c0)) WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((t0.c0)<<(0X78c130d8)))LIKE(TRIM(rt1.c1))), (json_insert(rt1.c1, rt1.c2, rt1.c0) IN ()) DESC);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)<<(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) WHEN ((rt1.c2) NOTNULL) THEN (- (t0.c0)) WHEN (rt1.c0 IN ()) THEN (~ (rt1.c1)) END) ORDER BY ((((t0.c0)<<(0x78c130d8)))LIKE(TRIM(rt1.c1))), (json_insert(rt1.c1, rt1.c2, rt1.c0) IN ()) DESC;
SELECT * FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN t0.c0 THEN (- (t0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (t0.c0 IN ()) WHEN NULL THEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN json(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) ISNULL) THEN 0x706bc434 END) ORDER BY UPPER((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN t0.c0 THEN (- (t0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (t0.c0 IN ()) WHEN NULL THEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN json(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) ISNULL) THEN 0x706bc434 END) IS TRUE)  as count FROM t0, rt0 ORDER BY UPPER((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN t0.c0 THEN (- (t0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (t0.c0 IN ()) WHEN NULL THEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN json(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) ISNULL) THEN 0x706bc434 END) ORDER BY UPPER((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN t0.c0 THEN (- (t0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (t0.c0 IN ()) WHEN NULL THEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN json(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) ISNULL) THEN 0x706bc434 END) IS TRUE)  as count FROM t0, rt0 ORDER BY UPPER((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (CASE CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 END  WHEN t0.c0 THEN (- (t0.c0)) WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN (t0.c0 IN ()) WHEN NULL THEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN json(rt0.c1) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c0) ISNULL) THEN 0x706bc434 END) ORDER BY UPPER((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN '-1236189376' END) ORDER BY ((CAST(rt0.c2 AS BLOB))GLOB(((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt0.c0) THEN '-1236189376' END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))GLOB(((NULL) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN '-1236189376' END) ORDER BY ((CAST(rt0.c2 AS BLOB))GLOB(((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(rt0.c0) THEN '-1236189376' END) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))GLOB(((NULL) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN LIKELY(rt0.c0) THEN '-1236189376' END) ORDER BY ((CAST(rt0.c2 AS BLOB))GLOB(((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY TRIM(rt1.c2) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY TRIM(rt1.c2) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY TRIM(rt1.c2) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('' IN ())) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY TRIM(rt1.c2) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0, rt1 WHERE (('' IN ())) ORDER BY TRIM(rt1.c2) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)/(((rt1.c0)%(rt0.c1))))) ORDER BY LOWER(DISTINCT ((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c2))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE)) BETWEEN ((((((((('c/.w(a膩')OR(rt1.c2)))OR(x'')))AND(rt1.c2)))OR(rt1.c1))) AND (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)/(((rt1.c0)%(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(DISTINCT ((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c2))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE)) BETWEEN ((((((((('c/.w(a膩')OR(rt1.c2)))OR(x'')))AND(rt1.c2)))OR(rt1.c1))) AND (rt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)/(((rt1.c0)%(rt0.c1))))) ORDER BY LOWER(DISTINCT ((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c2))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE)) BETWEEN ((((((((('c/.w(a膩')OR(rt1.c2)))OR(x'')))AND(rt1.c2)))OR(rt1.c1))) AND (rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)/(((rt1.c0)%(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LOWER(DISTINCT ((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c2))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE)) BETWEEN ((((((((('c/.w(a膩')OR(rt1.c2)))OR(x'')))AND(rt1.c2)))OR(rt1.c1))) AND (rt0.c0)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END)/(((rt1.c0)%(rt0.c1))))) ORDER BY LOWER(DISTINCT ((((((((rt1.c1)AND(rt1.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt1.c2))) DESC  NULLS FIRST, ((((rt0.c2) IS FALSE)) BETWEEN ((((((((('c/.w(a膩')OR(rt1.c2)))OR(x'')))AND(rt1.c2)))OR(rt1.c1))) AND (rt0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((0.9054453105583116) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((0.9054453105583116) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((0.9054453105583116) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((0.9054453105583116) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((0.9054453105583116) NOT BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((1044555343)&(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((1044555343)&(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((1044555343)&(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((1044555343)&(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((1044555343)&(t0.c0)) AS BLOB));
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)OR(rt0.c2)))OR(TRIM(rt0.c1)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)OR(rt0.c2)))OR(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY rt0.c1);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)OR(rt0.c2)))OR(TRIM(rt0.c1)))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)OR(rt0.c2)))OR(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY rt0.c1);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)OR(rt0.c2)))OR(TRIM(rt0.c1)))) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c0, 0.24102013504568676)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt1.c0, 0.24102013504568676)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c0, 0.24102013504568676)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt1.c0, 0.24102013504568676)) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((LIKELIHOOD(DISTINCT rt1.c0, 0.24102013504568676)) IS TRUE));
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((((rt1.c0)OR(0.5782771333694283)))AND(rt0.c2)) AS BLOB)) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))))OR(((x'')+(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)OR(0.5782771333694283)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))))OR(((x'')+(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((((rt1.c0)OR(0.5782771333694283)))AND(rt0.c2)) AS BLOB)) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))))OR(((x'')+(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c0)OR(0.5782771333694283)))AND(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))))OR(((x'')+(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(((((rt1.c0)OR(0.5782771333694283)))AND(rt0.c2)) AS BLOB)) ORDER BY ((((rt1.c1 COLLATE NOCASE)AND(((((rt1.c2)OR(rt0.c0)))AND(rt0.c2)))))OR(((x'')+(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(rt1.c0)))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c2)+(rt1.c2)))))AND(x''))) ORDER BY x'2d127fe8' ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR(rt1.c0)))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c2)+(rt1.c2)))))AND(x''))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY x'2d127fe8' ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(rt1.c0)))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c2)+(rt1.c2)))))AND(x''))) ORDER BY x'2d127fe8' ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR(rt1.c0)))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c2)+(rt1.c2)))))AND(x''))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY x'2d127fe8' ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(rt1.c0)))OR((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(((rt0.c2)+(rt1.c2)))))AND(x''))) ORDER BY x'2d127fe8' ASC;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((0x5e3614f9 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0x5e3614f9 IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((0x5e3614f9 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((0x5e3614f9 IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE ((0x5e3614f9 IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (NOT (rt1.c2)) COLLATE BINARY WHERE (ROUND(t0.c0, rt1.c2) COLLATE RTRIM) ORDER BY (((t0.c0)LIKE(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((ROUND(t0.c0, rt1.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (NOT (rt1.c2)) COLLATE BINARY ORDER BY (((t0.c0)LIKE(rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (NOT (rt1.c2)) COLLATE BINARY WHERE (ROUND(t0.c0, rt1.c2) COLLATE RTRIM) ORDER BY (((t0.c0)LIKE(rt1.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((ROUND(t0.c0, rt1.c2) COLLATE RTRIM) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (NOT (rt1.c2)) COLLATE BINARY ORDER BY (((t0.c0)LIKE(rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (NOT (rt1.c2)) COLLATE BINARY WHERE (ROUND(t0.c0, rt1.c2) COLLATE RTRIM) ORDER BY (((t0.c0)LIKE(rt1.c2)) IN ());
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt1.c0)<>(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((rt0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt1.c0)!=(rt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt1.c0)<>(rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((rt0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt1.c0)!=(rt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (NULL) ORDER BY (((rt0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt1.c0)<>(rt0.c1))))) DESC  NULLS LAST;
SELECT * FROM rt1, t0, rt0 WHERE (CAST(CASE rt0.c2  WHEN x'8e3c' THEN t0.c0 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN x'8e3c' THEN t0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CAST(CASE rt0.c2  WHEN x'8e3c' THEN t0.c0 ELSE rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN x'8e3c' THEN t0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CAST(CASE rt0.c2  WHEN x'8e3c' THEN t0.c0 ELSE rt0.c2 END AS TEXT));
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)IS(rt1.c1))) NOTNULL) WHERE (((((rt1.c2)||(rt1.c2)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)||(rt1.c2)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)IS(rt1.c1))) NOTNULL) ORDER BY (~ (rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)IS(rt1.c1))) NOTNULL) WHERE (((((rt1.c2)||(rt1.c2)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)||(rt1.c2)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)IS(rt1.c1))) NOTNULL) ORDER BY (~ (rt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)IS(rt1.c1))) NOTNULL) WHERE (((((rt1.c2)||(rt1.c2)))+(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (~ (rt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (NOT (((((0.9398821848678302)OR(t0.c0)))AND(0X4d3b7464))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((0.9398821848678302)OR(t0.c0)))AND(0X4d3b7464))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (NOT (((((0.9398821848678302)OR(t0.c0)))AND(0X4d3b7464))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (NOT (((((0.9398821848678302)OR(t0.c0)))AND(0X4d3b7464))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c0)) IN ())) ORDER BY (NOT (((((0.9398821848678302)OR(t0.c0)))AND(0X4d3b7464))))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))))<>((CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END)))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))*((((rt1.c0, rt1.c2, '')) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c0))))) DESC, ((('-1652890323') NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))))<>((CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt1.c0 AS NUMERIC))*((((rt1.c0, rt1.c2, '')) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c0))))) DESC, ((('-1652890323') NOT NULL) IN ()));
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))))<>((CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END)))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))*((((rt1.c0, rt1.c2, '')) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c0))))) DESC, ((('-1652890323') NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))))<>((CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CAST(rt1.c0 AS NUMERIC))*((((rt1.c0, rt1.c2, '')) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c0))))) DESC, ((('-1652890323') NOT NULL) IN ()));
SELECT * FROM rt1, rt0 WHERE (((((((rt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2)))))<>((CASE WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c1 END)))) ORDER BY ((CAST(rt1.c0 AS NUMERIC))*((((rt1.c0, rt1.c2, '')) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt0.c0))))) DESC, ((('-1652890323') NOT NULL) IN ());
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1) NOT BETWEEN ((NOT (rt1.c0))) AND (((rt1.c2) BETWEEN (t0.c0) AND (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'' IN (rt0.c0)))*(x''))) ORDER BY (((~ (rt0.c2))) NOT NULL), (((rt0.c2 IN (rt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (rt0.c0)))*(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) NOT NULL), (((rt0.c2 IN (rt0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'' IN (rt0.c0)))*(x''))) ORDER BY (((~ (rt0.c2))) NOT NULL), (((rt0.c2 IN (rt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN (rt0.c0)))*(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2))) NOT NULL), (((rt0.c2 IN (rt0.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((x'' IN (rt0.c0)))*(x''))) ORDER BY (((~ (rt0.c2))) NOT NULL), (((rt0.c2 IN (rt0.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c2);
SELECT * FROM rt1, rt0 WHERE ((NOT (PRINTF(rt1.c0)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (PRINTF(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOTNULL));
SELECT * FROM rt1, rt0 WHERE ((NOT (PRINTF(rt1.c0)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (PRINTF(rt1.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOTNULL));
SELECT * FROM rt1, rt0 WHERE ((NOT (PRINTF(rt1.c0)))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOTNULL);
SELECT * FROM rt0 WHERE (CASE (((x'', rt0.c1, NULL))>=((rt0.c1, rt0.c0, rt0.c0)))  WHEN (NOT (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) END) ORDER BY CAST(rt0.c0 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((x'', rt0.c1, NULL))>=((rt0.c1, rt0.c0, rt0.c0)))  WHEN (NOT (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS REAL) DESC);
SELECT * FROM rt0 WHERE (CASE (((x'', rt0.c1, NULL))>=((rt0.c1, rt0.c0, rt0.c0)))  WHEN (NOT (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) END) ORDER BY CAST(rt0.c0 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (((x'', rt0.c1, NULL))>=((rt0.c1, rt0.c0, rt0.c0)))  WHEN (NOT (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS REAL) DESC);
SELECT * FROM rt0 WHERE (CASE (((x'', rt0.c1, NULL))>=((rt0.c1, rt0.c0, rt0.c0)))  WHEN (NOT (rt0.c2)) THEN (((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) END) ORDER BY CAST(rt0.c0 COLLATE BINARY AS REAL) DESC;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0.88106332454675) ORDER BY (((rt1.c0) NOT NULL) IN (((rt1.c0) NOT NULL), ((rt1.c0) NOT NULL))), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.88106332454675) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (((rt1.c0) NOT NULL) IN (((rt1.c0) NOT NULL), ((rt1.c0) NOT NULL))), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0.88106332454675) ORDER BY (((rt1.c0) NOT NULL) IN (((rt1.c0) NOT NULL), ((rt1.c0) NOT NULL))), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.88106332454675) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (((rt1.c0) NOT NULL) IN (((rt1.c0) NOT NULL), ((rt1.c0) NOT NULL))), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (0.88106332454675) ORDER BY (((rt1.c0) NOT NULL) IN (((rt1.c0) NOT NULL), ((rt1.c0) NOT NULL))), (((rt1.c0 IN ())) NOT BETWEEN (((rt1.c1) NOT NULL)) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))  NULLS LAST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (LOWER(((rt1.c1)OR(rt1.c0)))) ORDER BY (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(x'eb16')))AND(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1)OR(rt1.c0)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(x'eb16')))AND(rt1.c0))  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (LOWER(((rt1.c1)OR(rt1.c0)))) ORDER BY (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(x'eb16')))AND(rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c1)OR(rt1.c0)))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(x'eb16')))AND(rt1.c0))  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (LOWER(((rt1.c1)OR(rt1.c0)))) ORDER BY (((((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))AND(x'eb16')))AND(rt1.c0))  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY ((((rt0.c0) IS FALSE))/(DATE(rt1.c2, rt0.c1, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c0) IS FALSE))/(DATE(rt1.c2, rt0.c1, rt1.c0))));
SELECT ALL * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY ((((rt0.c0) IS FALSE))/(DATE(rt1.c2, rt0.c1, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c0) IS FALSE))/(DATE(rt1.c2, rt0.c1, rt1.c0))));
SELECT ALL * FROM rt1, rt0 WHERE (CAST(rt0.c0 AS BLOB)) ORDER BY ((((rt0.c0) IS FALSE))/(DATE(rt1.c2, rt0.c1, rt1.c0)));
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(((t0.c0 IN (t0.c0)))))) ORDER BY 0.6831261939648002;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY 0.6831261939648002);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(((t0.c0 IN (t0.c0)))))) ORDER BY 0.6831261939648002;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY 0.6831261939648002);
SELECT * FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))>(((t0.c0 IN (t0.c0)))))) ORDER BY 0.6831261939648002;
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2))=((rt0.c1))))>=(CAST(t0.c0 AS BLOB)))) ORDER BY CASE WHEN rt0.c0 THEN ((rt1.c2)>(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))=((rt0.c1))))>=(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN rt0.c0 THEN ((rt1.c2)>(rt1.c0)) END DESC);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2))=((rt0.c1))))>=(CAST(t0.c0 AS BLOB)))) ORDER BY CASE WHEN rt0.c0 THEN ((rt1.c2)>(rt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2))=((rt0.c1))))>=(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN rt0.c0 THEN ((rt1.c2)>(rt1.c0)) END DESC);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2))=((rt0.c1))))>=(CAST(t0.c0 AS BLOB)))) ORDER BY CASE WHEN rt0.c0 THEN ((rt1.c2)>(rt1.c0)) END DESC;
SELECT * FROM rt0, rt1, t0 WHERE (json_array(((rt0.c1)-(rt0.c1)), (((rt1.c2))>=((rt1.c0))))) ORDER BY '1465156941' ASC, (((- (rt0.c0)))*((NOT (rt0.c1)))) ASC, 1465156941  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c1)-(rt0.c1)), (((rt1.c2))>=((rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY '1465156941' ASC, (((- (rt0.c0)))*((NOT (rt0.c1)))) ASC, 1465156941  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (json_array(((rt0.c1)-(rt0.c1)), (((rt1.c2))>=((rt1.c0))))) ORDER BY '1465156941' ASC, (((- (rt0.c0)))*((NOT (rt0.c1)))) ASC, 1465156941  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_array(((rt0.c1)-(rt0.c1)), (((rt1.c2))>=((rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY '1465156941' ASC, (((- (rt0.c0)))*((NOT (rt0.c1)))) ASC, 1465156941  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (rt0.c1))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))AND('385124407')))AND(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))AND('385124407')))AND(rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (rt0.c1))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))AND('385124407')))AND(rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))AND('385124407')))AND(rt0.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((NOT (rt0.c1))) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<>((((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))AND('385124407')))AND(rt0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) NOT BETWEEN (((('S馂''', NULL, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, rt0.c0)))) AND (x'')) WHERE (((((((rt0.c1) IS FALSE))OR((0.928002600999676 IN ()))))OR(CAST(x'db70' AS TEXT)))) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR((0.928002600999676 IN ()))))OR(CAST(x'db70' AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) NOT BETWEEN (((('S馂''', NULL, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, rt0.c0)))) AND (x'')) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) NOT BETWEEN (((('S馂''', NULL, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, rt0.c0)))) AND (x'')) WHERE (((((((rt0.c1) IS FALSE))OR((0.928002600999676 IN ()))))OR(CAST(x'db70' AS TEXT)))) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR((0.928002600999676 IN ()))))OR(CAST(x'db70' AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) NOT BETWEEN (((('S馂''', NULL, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, rt0.c0)))) AND (x'')) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((t0.c0) IS TRUE)) NOT BETWEEN (((('S馂''', NULL, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, t0.c0)) AND ((rt0.c2, t0.c0, rt0.c0)))) AND (x'')) WHERE (((((((rt0.c1) IS FALSE))OR((0.928002600999676 IN ()))))OR(CAST(x'db70' AS TEXT)))) ORDER BY ((((rt0.c1)LIKE(rt0.c0))) NOT BETWEEN (x'') AND (t0.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))%(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))%(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))%(((t0.c0)%(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))%(((t0.c0)%(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0)))%(((t0.c0)%(t0.c0)))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN 0.1545462042507435 THEN rt1.c1 ELSE rt1.c1 END)OR(((t0.c0)<(rt1.c2)))))OR(rt1.c0 COLLATE BINARY)) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE rt1.c1 END) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))<(CASE WHEN t0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE rt1.c1 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN 0.1545462042507435 THEN rt1.c1 ELSE rt1.c1 END)OR(((t0.c0)<(rt1.c2)))))OR(rt1.c0 COLLATE BINARY)) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))<(CASE WHEN t0.c0 THEN rt1.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN 0.1545462042507435 THEN rt1.c1 ELSE rt1.c1 END)OR(((t0.c0)<(rt1.c2)))))OR(rt1.c0 COLLATE BINARY)) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE rt1.c1 END) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))<(CASE WHEN t0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE rt1.c1 END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN 0.1545462042507435 THEN rt1.c1 ELSE rt1.c1 END)OR(((t0.c0)<(rt1.c2)))))OR(rt1.c0 COLLATE BINARY)) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))<(CASE WHEN t0.c0 THEN rt1.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON ((((CASE WHEN 0.1545462042507435 THEN rt1.c1 ELSE rt1.c1 END)OR(((t0.c0)<(rt1.c2)))))OR(rt1.c0 COLLATE BINARY)) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 END THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt1.c0)) ELSE rt1.c1 END) ORDER BY ((UNLIKELY(DISTINCT rt1.c1))<(CASE WHEN t0.c0 THEN rt1.c2 END))  NULLS LAST;
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c0)OR(-9.9495022E7)))+(((t0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(-9.9495022E7)))+(((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c0)OR(-9.9495022E7)))+(((t0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(-9.9495022E7)))+(((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (((((t0.c0)OR(-9.9495022E7)))+(((t0.c0)=(t0.c0)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (json(((rt1.c1) NOTNULL))) ORDER BY 'CScAa', (((rt1.c2 IN (rt1.c2))) BETWEEN ((((t0.c0))>=((rt1.c0)))) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json(((rt1.c1) NOTNULL))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY 'CScAa', (((rt1.c2 IN (rt1.c2))) BETWEEN ((((t0.c0))>=((rt1.c0)))) AND ((NOT (rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (json(((rt1.c1) NOTNULL))) ORDER BY 'CScAa', (((rt1.c2 IN (rt1.c2))) BETWEEN ((((t0.c0))>=((rt1.c0)))) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json(((rt1.c1) NOTNULL))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY 'CScAa', (((rt1.c2 IN (rt1.c2))) BETWEEN ((((t0.c0))>=((rt1.c0)))) AND ((NOT (rt1.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (json(((rt1.c1) NOTNULL))) ORDER BY 'CScAa', (((rt1.c2 IN (rt1.c2))) BETWEEN ((((t0.c0))>=((rt1.c0)))) AND ((NOT (rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt1.c1 IN ())) NOT NULL));
SELECT * FROM rt0 WHERE (((((0.04418403910403168) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((0.04418403910403168) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.04418403910403168) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((0.04418403910403168) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.04418403910403168) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>>(((rt0.c1) NOTNULL))));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM t0, rt1, rt0 WHERE ((((t0.c0 IN ()))-(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))-(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((t0.c0 IN ()))-(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))-(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((t0.c0 IN ()))-(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((0.7491435331724088)AND(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))||(((rt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((0.7491435331724088)AND(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((0.7491435331724088)AND(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))||(((rt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((0.7491435331724088)AND(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (rt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((((((((0.7491435331724088)AND(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))||(((rt0.c0) IS FALSE)))) ORDER BY (rt0.c0 IN ()) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS NUMERIC));
SELECT * FROM rt1, rt0 WHERE (json_array(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)), TYPEOF(rt0.c1), ((x'') IS FALSE), (~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)), TYPEOF(rt0.c1), ((x'') IS FALSE), (~ (rt1.c2)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (json_array(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)), TYPEOF(rt0.c1), ((x'') IS FALSE), (~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)), TYPEOF(rt0.c1), ((x'') IS FALSE), (~ (rt1.c2)))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (json_array(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c1)), TYPEOF(rt0.c1), ((x'') IS FALSE), (~ (rt1.c2))));
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY ((UPPER(rt1.c2)) BETWEEN (((rt1.c0) NOT NULL)) AND ((((rt1.c0, rt1.c0, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, NULL, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((UPPER(rt1.c2)) BETWEEN (((rt1.c0) NOT NULL)) AND ((((rt1.c0, rt1.c0, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, NULL, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY ((UPPER(rt1.c2)) BETWEEN (((rt1.c0) NOT NULL)) AND ((((rt1.c0, rt1.c0, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, NULL, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((UPPER(rt1.c2)) BETWEEN (((rt1.c0) NOT NULL)) AND ((((rt1.c0, rt1.c0, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, NULL, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2))))) ASC);
SELECT ALL * FROM rt1 WHERE (CAST(x'' AS REAL)) ORDER BY ((UPPER(rt1.c2)) BETWEEN (((rt1.c0) NOT NULL)) AND ((((rt1.c0, rt1.c0, rt1.c1, rt1.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c1, NULL, rt1.c0)) AND ((rt1.c2, rt1.c1, rt1.c2, rt1.c0, rt1.c2))))) ASC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(LOWER(rt1.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(rt1.c1) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(LOWER(rt1.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(rt1.c1) AS TEXT)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(LOWER(rt1.c1) AS TEXT));
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'');
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt1.c1)) NOT BETWEEN (((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND (((+ (rt1.c1))))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c2)&(rt1.c0)))) FULL OUTER JOIN t0 ON (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END IN ()) WHERE (((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2))) AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2))) AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c2)&(rt1.c0)))) FULL OUTER JOIN t0 ON (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c2)&(rt1.c0)))) FULL OUTER JOIN t0 ON (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END IN ()) WHERE (((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2))) AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2))) AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c2)&(rt1.c0)))) FULL OUTER JOIN t0 ON (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((rt1.c2) IS FALSE) IN (((rt1.c2)&(rt1.c0)))) FULL OUTER JOIN t0 ON (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END IN ()) WHERE (((((((((((rt1.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt1.c2))) AND (rt1.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))))OR(rt0.c2)))OR(((rt0.c2)!=(rt0.c1))))) ORDER BY CASE WHEN x'' THEN (- (rt0.c2)) ELSE ((rt0.c1)IS(rt0.c2)) END DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST, CAST(TYPEOF(rt0.c2) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)+(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))))OR(rt0.c2)))OR(((rt0.c2)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN (- (rt0.c2)) ELSE ((rt0.c1)IS(rt0.c2)) END DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST, CAST(TYPEOF(rt0.c2) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))))OR(rt0.c2)))OR(((rt0.c2)!=(rt0.c1))))) ORDER BY CASE WHEN x'' THEN (- (rt0.c2)) ELSE ((rt0.c1)IS(rt0.c2)) END DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST, CAST(TYPEOF(rt0.c2) AS BLOB);
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)+(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))))OR(rt0.c2)))OR(((rt0.c2)<>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN x'' THEN (- (rt0.c2)) ELSE ((rt0.c1)IS(rt0.c2)) END DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST, CAST(TYPEOF(rt0.c2) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)+(rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)))OR((NOT (rt0.c1)))))OR(rt0.c2)))OR(((rt0.c2)!=(rt0.c1))))) ORDER BY CASE WHEN x'' THEN (- (rt0.c2)) ELSE ((rt0.c1)IS(rt0.c2)) END DESC  NULLS FIRST, rt0.c2 DESC  NULLS LAST, CAST(TYPEOF(rt0.c2) AS BLOB);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (-382223299) AND (rt1.c2)))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (-382223299) AND (rt1.c2)))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (-382223299) AND (rt1.c2)))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (-382223299) AND (rt1.c2)))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (-382223299) AND (rt1.c2)))AND(CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)));
SELECT ALL * FROM rt1, t0 WHERE (((((0.3545124098655188)AND(TRIM(rt1.c2))))OR((NOT (0.2736436949184645))))) ORDER BY ((CAST(rt1.c0 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3545124098655188)AND(TRIM(rt1.c2))))OR((NOT (0.2736436949184645))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(rt1.c0 AS REAL)) NOTNULL) DESC);
SELECT ALL * FROM rt1, t0 WHERE (((((0.3545124098655188)AND(TRIM(rt1.c2))))OR((NOT (0.2736436949184645))))) ORDER BY ((CAST(rt1.c0 AS REAL)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.3545124098655188)AND(TRIM(rt1.c2))))OR((NOT (0.2736436949184645))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CAST(rt1.c0 AS REAL)) NOTNULL) DESC);
SELECT ALL * FROM rt1, t0 WHERE (((((0.3545124098655188)AND(TRIM(rt1.c2))))OR((NOT (0.2736436949184645))))) ORDER BY ((CAST(rt1.c0 AS REAL)) NOTNULL) DESC;
SELECT * FROM t0, rt0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)LIKE('쩌s*b')) WHEN CASE WHEN 1858036337 THEN x'' END THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c0)GLOB(0x7fffffffffffffff)) END, HEX(DISTINCT (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)LIKE('쩌s*b')) WHEN CASE WHEN 1858036337 THEN x'' END THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c0)GLOB(0x7fffffffffffffff)) END, HEX(DISTINCT (- (rt0.c2))));
SELECT * FROM t0, rt0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)LIKE('쩌s*b')) WHEN CASE WHEN 1858036337 THEN x'' END THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c0)GLOB(0x7fffffffffffffff)) END, HEX(DISTINCT (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)LIKE('쩌s*b')) WHEN CASE WHEN 1858036337 THEN x'' END THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c0)GLOB(0x7fffffffffffffff)) END, HEX(DISTINCT (- (rt0.c2))));
SELECT * FROM t0, rt0 WHERE ((((- (rt0.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(rt0.c0 AS REAL) THEN ((rt0.c0)LIKE('쩌s*b')) WHEN CASE WHEN 1858036337 THEN x'' END THEN ((rt0.c0) IS FALSE) WHEN CASE ''  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((rt0.c0)GLOB(0x7fffffffffffffff)) END, HEX(DISTINCT (- (rt0.c2)));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))<(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))<(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))<(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS TEXT))<(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))<(CAST(t0.c0 AS REAL))));
SELECT * FROM rt1, t0 WHERE (((((rt1.c1) NOTNULL))AND((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))AND((- (rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((rt1.c1) NOTNULL))AND((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOTNULL))AND((- (rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((rt1.c1) NOTNULL))AND((- (rt1.c1)))));
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE ((((t0.c0)) BETWEEN ((((rt1.c1)/(rt1.c1)))) AND (((+ (rt1.c1)))))) ORDER BY CASE CASE rt0.c1  WHEN t0.c0 THEN 'A#h*{,e7' ELSE rt0.c2 END  WHEN ((((1772652016)OR(rt1.c1)))AND(rt0.c2)) THEN LIKELY(t0.c0) END ASC, ((rt1.c0)*(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((rt1.c1)/(rt1.c1)))) AND (((+ (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0 ORDER BY CASE CASE rt0.c1  WHEN t0.c0 THEN 'A#h*{,e7' ELSE rt0.c2 END  WHEN ((((1772652016)OR(rt1.c1)))AND(rt0.c2)) THEN LIKELY(t0.c0) END ASC, ((rt1.c0)*(rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE ((((t0.c0)) BETWEEN ((((rt1.c1)/(rt1.c1)))) AND (((+ (rt1.c1)))))) ORDER BY CASE CASE rt0.c1  WHEN t0.c0 THEN 'A#h*{,e7' ELSE rt0.c2 END  WHEN ((((1772652016)OR(rt1.c1)))AND(rt0.c2)) THEN LIKELY(t0.c0) END ASC, ((rt1.c0)*(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((rt1.c1)/(rt1.c1)))) AND (((+ (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0 ORDER BY CASE CASE rt0.c1  WHEN t0.c0 THEN 'A#h*{,e7' ELSE rt0.c2 END  WHEN ((((1772652016)OR(rt1.c1)))AND(rt0.c2)) THEN LIKELY(t0.c0) END ASC, ((rt1.c0)*(rt0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE ((((t0.c0)) BETWEEN ((((rt1.c1)/(rt1.c1)))) AND (((+ (rt1.c1)))))) ORDER BY CASE CASE rt0.c1  WHEN t0.c0 THEN 'A#h*{,e7' ELSE rt0.c2 END  WHEN ((((1772652016)OR(rt1.c1)))AND(rt0.c2)) THEN LIKELY(t0.c0) END ASC, ((rt1.c0)*(rt0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)||(t0.c0)))) AND ((t0.c0))));
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (t0.c0 COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (0Xfffffffffc7861e6 COLLATE RTRIM) ORDER BY (((((rt0.c2)>(rt1.c0))))<=((rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xfffffffffc7861e6 COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt1, rt0 ORDER BY (((((rt0.c2)>(rt1.c0))))<=((rt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (0Xfffffffffc7861e6 COLLATE RTRIM) ORDER BY (((((rt0.c2)>(rt1.c0))))<=((rt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xfffffffffc7861e6 COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt1, rt0 ORDER BY (((((rt0.c2)>(rt1.c0))))<=((rt1.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (0Xfffffffffc7861e6 COLLATE RTRIM) ORDER BY (((((rt0.c2)>(rt1.c0))))<=((rt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY CAST(((t0.c0)<=(x'f0c7')) AS TEXT)  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0))=((t0.c0, 1.295742052E9, t0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<=(x'f0c7')) AS TEXT)  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0))==((t0.c0, 1.295742052E9, t0.c0))) AS TEXT));
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY CAST(((t0.c0)<=(x'f0c7')) AS TEXT)  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0))=((t0.c0, 1.295742052E9, t0.c0))) AS TEXT);
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)<=(x'f0c7')) AS TEXT)  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0))==((t0.c0, 1.295742052E9, t0.c0))) AS TEXT));
SELECT ALL * FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY CAST(((t0.c0)<=(x'f0c7')) AS TEXT)  NULLS FIRST, CAST((((t0.c0, t0.c0, t0.c0))=((t0.c0, 1.295742052E9, t0.c0))) AS TEXT);
SELECT ALL * FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END  WHEN ((t0.c0)!=(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END  WHEN ((t0.c0)<>(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END  WHEN ((t0.c0)!=(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END  WHEN ((t0.c0)<>(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN x'' ELSE t0.c0 END  WHEN ((t0.c0)!=(t0.c0)) THEN CAST(t0.c0 AS NUMERIC) END);
SELECT * FROM t0, rt1 WHERE (IFNULL(((rt1.c0)+(t0.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c0)+(t0.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (IFNULL(((rt1.c0)+(t0.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c0)+(t0.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (IFNULL(((rt1.c0)+(t0.c0)), ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)!=(rt0.c2))) BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND ('炫'))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ROUND(rt0.c0, rt0.c0) THEN ((rt0.c1)<>(rt1.c0)) WHEN ((rt1.c0)*(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(rt0.c2))) BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND ('炫'))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ROUND(rt0.c0, rt0.c0) THEN ((rt0.c1)<>(rt1.c0)) WHEN ((rt1.c0)*(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) END ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)!=(rt0.c2))) BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND ('炫'))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ROUND(rt0.c0, rt0.c0) THEN ((rt0.c1)<>(rt1.c0)) WHEN ((rt1.c0)*(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(rt0.c2))) BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND ('炫'))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN ROUND(rt0.c0, rt0.c0) THEN ((rt0.c1)<>(rt1.c0)) WHEN ((rt1.c0)*(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) END ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c0)!=(rt0.c2))) BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND ('炫'))) AND ((rt0.c1 IN ())))) ORDER BY CASE WHEN ROUND(rt0.c0, rt0.c0) THEN ((rt0.c1)<>(rt1.c0)) WHEN ((rt1.c0)*(rt0.c1)) THEN rt0.c2 COLLATE RTRIM WHEN (rt1.c2 IN ()) THEN ((rt1.c0) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)) END ASC;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c2 IN ()))>((~ (rt1.c1))))) ORDER BY ((rt1.c2 COLLATE NOCASE) BETWEEN ((((x''))<((rt0.c1)))) AND (CAST(rt1.c2 AS NUMERIC))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c2 WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(rt0.c0)) WHEN ((x'21b3') NOT BETWEEN (rt0.c0) AND (-1.578184478E9)) THEN (t0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))>((~ (rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) BETWEEN ((((x''))<((rt0.c1)))) AND (CAST(rt1.c2 AS NUMERIC))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c2 WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(rt0.c0)) WHEN ((x'21b3') NOT BETWEEN (rt0.c0) AND (-1.578184478E9)) THEN (t0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c2 IN ()))>((~ (rt1.c1))))) ORDER BY ((rt1.c2 COLLATE NOCASE) BETWEEN ((((x''))<((rt0.c1)))) AND (CAST(rt1.c2 AS NUMERIC))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c2 WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(rt0.c0)) WHEN ((x'21b3') NOT BETWEEN (rt0.c0) AND (-1.578184478E9)) THEN (t0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))>((~ (rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt1.c2 COLLATE NOCASE) BETWEEN ((((x''))<((rt0.c1)))) AND (CAST(rt1.c2 AS NUMERIC))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c2 WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(rt0.c0)) WHEN ((x'21b3') NOT BETWEEN (rt0.c0) AND (-1.578184478E9)) THEN (t0.c0 IN ()) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ((((rt0.c2 IN ()))>((~ (rt1.c1))))) ORDER BY ((rt1.c2 COLLATE NOCASE) BETWEEN ((((x''))<((rt0.c1)))) AND (CAST(rt1.c2 AS NUMERIC))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN rt0.c2 WHEN CASE rt0.c0  WHEN rt1.c2 THEN rt1.c2 END THEN ((rt1.c2)IS NOT(rt0.c0)) WHEN ((x'21b3') NOT BETWEEN (rt0.c0) AND (-1.578184478E9)) THEN (t0.c0 IN ()) END  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c2) IS FALSE) AS INTEGER) WHERE (CAST((rt1.c2 IN (rt1.c1, '')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c1, '')) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c2) IS FALSE) AS INTEGER));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c2) IS FALSE) AS INTEGER) WHERE (CAST((rt1.c2 IN (rt1.c1, '')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c1, '')) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c2) IS FALSE) AS INTEGER));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON CAST(((rt1.c2) IS FALSE) AS INTEGER) WHERE (CAST((rt1.c2 IN (rt1.c1, '')) AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c0) NOT NULL) IN ((rt0.c2 IN ()), ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) WHERE (x'') ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c0) NOT NULL) IN ((rt0.c2 IN ()), ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c0) NOT NULL) IN ((rt0.c2 IN ()), ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) WHERE (x'') ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c0) NOT NULL) IN ((rt0.c2 IN ()), ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c0) NOT NULL) IN ((rt0.c2 IN ()), ((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c0)))) WHERE (x'') ORDER BY (- (((rt0.c1) IS TRUE)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c0))>((rt0.c2))), 0.9326376232365526));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c0))>((rt0.c2))), 0.9326376232365526)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c0))>((rt0.c2))), 0.9326376232365526));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((((rt0.c0))>((rt0.c2))), 0.9326376232365526)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD((((rt0.c0))>((rt0.c2))), 0.9326376232365526));
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c0 AS REAL))<=(CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))<=(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c0 AS REAL))<=(CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS REAL))<=(CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((CAST(t0.c0 AS REAL))<=(CAST(rt1.c1 AS NUMERIC))));
SELECT * FROM t0, rt0 WHERE ((+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY TRIM((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY TRIM((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY TRIM((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY TRIM((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((+ ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY TRIM((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOTNULL))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOTNULL))OR(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOTNULL))OR(((rt0.c0) NOT NULL))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN ()))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN 0x22264423 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((((rt0.c2)GLOB(t0.c0))) IS TRUE) WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) AND ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END)))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(rt1.c2)), rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) AND ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN ()))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN 0X22264423 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((((rt0.c2)GLOB(t0.c0))) IS TRUE) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(rt1.c2)), rt1.c1 DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN ()))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN 0x22264423 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((((rt0.c2)GLOB(t0.c0))) IS TRUE) WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) AND ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END)))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(rt1.c2)), rt1.c1 DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) AND ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN ()))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN 0X22264423 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((((rt0.c2)GLOB(t0.c0))) IS TRUE) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(rt1.c2)), rt1.c1 DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt1.c0 IN ()))AND(CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c0 WHEN 0x22264423 THEN rt1.c0 ELSE rt0.c2 END)) FULL OUTER JOIN rt1 ON ((((rt0.c2)GLOB(t0.c0))) IS TRUE) WHERE ((((rt1.c0)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))) AND ((CASE WHEN NULL THEN rt1.c1 ELSE rt1.c0 END)))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(rt1.c2)), rt1.c1 DESC;
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS INTEGER) COLLATE NOCASE WHERE (((((load_extension(rt0.c2))OR(((rt1.c2) ISNULL))))OR(((rt1.c1) IS TRUE)))) ORDER BY ((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c2)<=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(rt0.c2))OR(((rt1.c2) ISNULL))))OR(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS INTEGER) COLLATE NOCASE ORDER BY ((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c2)<=(rt0.c0)))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS INTEGER) COLLATE NOCASE WHERE (((((load_extension(rt0.c2))OR(((rt1.c2) ISNULL))))OR(((rt1.c1) IS TRUE)))) ORDER BY ((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c2)<=(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((load_extension(rt0.c2))OR(((rt1.c2) ISNULL))))OR(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(rt1.c0 AS INTEGER) COLLATE NOCASE ORDER BY ((((((((((rt1.c2)AND(rt1.c2)))AND(rt0.c2)))OR(rt1.c1)))OR(rt1.c0)))GLOB(((rt1.c2)<=(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ('1671865088') AND (IFNULL(rt0.c1, rt0.c2)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.36301661840799593 END)>=((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt0.c2))) NOT BETWEEN ('1671865088') AND (IFNULL(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.36301661840799593 END)>=((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ('1671865088') AND (IFNULL(rt0.c1, rt0.c2)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.36301661840799593 END)>=((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt0.c2))) NOT BETWEEN ('1671865088') AND (IFNULL(rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.36301661840799593 END)>=((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) NOT BETWEEN ('1671865088') AND (IFNULL(rt0.c1, rt0.c2)))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.36301661840799593 END)>=((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM) ORDER BY (((x'e00f')GLOB(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('512812800')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)||(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((x'e00f')GLOB(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('512812800')))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM) ORDER BY (((x'e00f')GLOB(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('512812800')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)||(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((x'e00f')GLOB(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('512812800')))) DESC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM) ORDER BY (((x'e00f')GLOB(rt0.c0)) IN (((rt0.c2) NOT BETWEEN (rt0.c2) AND ('512812800')))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT)) ORDER BY ((MAX(rt0.c2, rt0.c1))OR(((x'') IS FALSE)))  NULLS FIRST, ((LOWER(rt0.c2)) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((MAX(rt0.c2, rt0.c1))OR(((x'') IS FALSE)))  NULLS FIRST, ((LOWER(rt0.c2)) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) DESC, NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT)) ORDER BY ((MAX(rt0.c2, rt0.c1))OR(((x'') IS FALSE)))  NULLS FIRST, ((LOWER(rt0.c2)) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((MAX(rt0.c2, rt0.c1))OR(((x'') IS FALSE)))  NULLS FIRST, ((LOWER(rt0.c2)) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) DESC, NULL ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT)) ORDER BY ((MAX(rt0.c2, rt0.c1))OR(((x'') IS FALSE)))  NULLS FIRST, ((LOWER(rt0.c2)) BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) DESC, NULL ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (- (-1.7976931348623157E308)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (- (-1.7976931348623157E308))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (- (-1.7976931348623157E308)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (- (-1.7976931348623157E308))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c0)OR(rt0.c0)))AND(rt1.c0)) IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (- (-1.7976931348623157E308)))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(CASE WHEN rt1.c2 THEN rt1.c1 END AS NUMERIC));
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (NULL) AND (CHAR(0xffffffffd8959837, 0.19650266809993056, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) BETWEEN (NULL) AND (CHAR(0xffffffffd8959837, 0.19650266809993056, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (NULL) AND (CHAR(0xffffffffd8959837, 0.19650266809993056, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) BETWEEN (NULL) AND (CHAR(0xffffffffd8959837, 0.19650266809993056, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0) IS TRUE)) BETWEEN (NULL) AND (CHAR(0xffffffffd8959837, 0.19650266809993056, t0.c0))));
SELECT * FROM rt1, rt0 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))+(((rt1.c1)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))+(((rt1.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))+(((rt1.c1)=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))+(((rt1.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1)))+(((rt1.c1)=(rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST(t0.c0 AS REAL) COLLATE RTRIM WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST(t0.c0 AS REAL) COLLATE RTRIM WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST(t0.c0 AS REAL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON CAST(t0.c0 AS REAL) COLLATE RTRIM WHERE (((NOT (rt1.c2)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((((((x'2a64' COLLATE RTRIM)OR(CAST(x'' AS INTEGER))))AND(((rt0.c0) NOT NULL))))OR((NOT (rt0.c0)))))OR((((NULL, rt0.c0, 'Bs', rt0.c2, rt0.c0))=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0)))))) ORDER BY ((((((rt0.c2))>=((rt0.c2)))))<=((rt0.c0))) DESC  NULLS FIRST, CAST(((rt0.c0) IS TRUE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((x'2a64' COLLATE RTRIM)OR(CAST(x'' AS INTEGER))))AND(((rt0.c0) NOT NULL))))OR((NOT (rt0.c0)))))OR((((NULL, rt0.c0, 'Bs', rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2))>=((rt0.c2)))))<=((rt0.c0))) DESC  NULLS FIRST, CAST(((rt0.c0) IS TRUE) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((x'2a64' COLLATE RTRIM)OR(CAST(x'' AS INTEGER))))AND(((rt0.c0) NOT NULL))))OR((NOT (rt0.c0)))))OR((((NULL, rt0.c0, 'Bs', rt0.c2, rt0.c0))=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0)))))) ORDER BY ((((((rt0.c2))>=((rt0.c2)))))<=((rt0.c0))) DESC  NULLS FIRST, CAST(((rt0.c0) IS TRUE) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((x'2a64' COLLATE RTRIM)OR(CAST(x'' AS INTEGER))))AND(((rt0.c0) NOT NULL))))OR((NOT (rt0.c0)))))OR((((NULL, rt0.c0, 'Bs', rt0.c2, rt0.c0))==((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2))>=((rt0.c2)))))<=((rt0.c0))) DESC  NULLS FIRST, CAST(((rt0.c0) IS TRUE) AS TEXT) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((x'2a64' COLLATE RTRIM)OR(CAST(x'' AS INTEGER))))AND(((rt0.c0) NOT NULL))))OR((NOT (rt0.c0)))))OR((((NULL, rt0.c0, 'Bs', rt0.c2, rt0.c0))=((rt0.c1, rt0.c1, rt0.c1, rt0.c2, rt0.c0)))))) ORDER BY ((((((rt0.c2))>=((rt0.c2)))))<=((rt0.c0))) DESC  NULLS FIRST, CAST(((rt0.c0) IS TRUE) AS TEXT) ASC;
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt1, rt0 NATURAL JOIN t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(((rt0.c0)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c0)==(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(((rt0.c0)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((RTRIM(((rt0.c0)==(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(((rt0.c0)=(rt0.c0))));
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c0 IN ()))AND(t0.c0 COLLATE RTRIM)))OR((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>>(rt0.c0)))) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>>(rt0.c0)))) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c2 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>>(rt0.c0)))) ORDER BY (CAST(rt0.c2 AS REAL) IN ());
SELECT * FROM t0 INNER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((t0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM t0 INNER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((t0.c0) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM t0 INNER JOIN rt0 ON (- (CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)) WHERE (((t0.c0) ISNULL) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))>>((('0.5029656590920247')|(rt1.c0))))) ORDER BY 1755909031 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))>>((('0.5029656590920247')|(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY 1755909031 ASC);
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))>>((('0.5029656590920247')|(rt1.c0))))) ORDER BY 1755909031 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))>>((('0.5029656590920247')|(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY 1755909031 ASC);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0, rt1 WHERE ('1411959157');
SELECT SUM(count) FROM (SELECT ALL (('1411959157') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('1411959157');
SELECT SUM(count) FROM (SELECT ALL (('1411959157') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('1411959157');
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((~ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((~ (rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((ABS('鷤J'))<<((((t0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, rt1.c0, '')))))) ORDER BY ((rt0.c0) NOTNULL) DESC  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN NULL THEN (((rt1.c2))<>((rt0.c0))) WHEN ((x'')=(rt1.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((((((((rt1.c0)OR('-1652890323')))AND(NULL)))OR(t0.c0)))AND(rt1.c2)) THEN x'f335' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS('鷤J'))<<((((t0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, rt1.c0, '')))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c0) NOTNULL) DESC  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN NULL THEN (((rt1.c2))!=((rt0.c0))) WHEN ((x'')==(rt1.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((((((((rt1.c0)OR('-1652890323')))AND(NULL)))OR(t0.c0)))AND(rt1.c2)) THEN x'f335' END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((ABS('鷤J'))<<((((t0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, rt1.c0, '')))))) ORDER BY ((rt0.c0) NOTNULL) DESC  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN NULL THEN (((rt1.c2))<>((rt0.c0))) WHEN ((x'')=(rt1.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((((((((rt1.c0)OR('-1652890323')))AND(NULL)))OR(t0.c0)))AND(rt1.c2)) THEN x'f335' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS('鷤J'))<<((((t0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, rt1.c0, '')))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c0) NOTNULL) DESC  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN NULL THEN (((rt1.c2))!=((rt0.c0))) WHEN ((x'')==(rt1.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((((((((rt1.c0)OR('-1652890323')))AND(NULL)))OR(t0.c0)))AND(rt1.c2)) THEN x'f335' END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((ABS('鷤J'))<<((((t0.c0, rt0.c2, rt1.c1)) NOT BETWEEN ((rt1.c2, rt0.c2, rt0.c0)) AND ((rt1.c2, rt1.c0, '')))))) ORDER BY ((rt0.c0) NOTNULL) DESC  NULLS LAST, CASE ((t0.c0) ISNULL)  WHEN NULL THEN (((rt1.c2))<>((rt0.c0))) WHEN ((x'')=(rt1.c2)) THEN CAST(rt0.c0 AS REAL) WHEN ((((((((rt1.c0)OR('-1652890323')))AND(NULL)))OR(t0.c0)))AND(rt1.c2)) THEN x'f335' END ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c1, '-2039318790', x'', rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, 0.6086252032034604, rt0.c2, rt0.c2, rt0.c1))))==(CASE rt0.c0  WHEN rt1.c0 THEN 0.1942369893242062 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN 1.201333817E9 WHEN rt1.c2 THEN rt0.c2 END))) ORDER BY (((NOT (rt1.c1)))||(rt1.c1));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, '-2039318790', x'', rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, 0.6086252032034604, rt0.c2, rt0.c2, rt0.c1))))==(CASE rt0.c0  WHEN rt1.c0 THEN 0.1942369893242062 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN 1.201333817E9 WHEN rt1.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NOT (rt1.c1)))||(rt1.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c1, '-2039318790', x'', rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, 0.6086252032034604, rt0.c2, rt0.c2, rt0.c1))))==(CASE rt0.c0  WHEN rt1.c0 THEN 0.1942369893242062 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN 1.201333817E9 WHEN rt1.c2 THEN rt0.c2 END))) ORDER BY (((NOT (rt1.c1)))||(rt1.c1));
SELECT SUM(count) FROM (SELECT (((((((rt1.c1, '-2039318790', x'', rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, 0.6086252032034604, rt0.c2, rt0.c2, rt0.c1))))==(CASE rt0.c0  WHEN rt1.c0 THEN 0.1942369893242062 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN 1.201333817E9 WHEN rt1.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NOT (rt1.c1)))||(rt1.c1)));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c1, '-2039318790', x'', rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, 0.6086252032034604, rt0.c2, rt0.c2, rt0.c1))))==(CASE rt0.c0  WHEN rt1.c0 THEN 0.1942369893242062 WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c2 THEN 1.201333817E9 WHEN rt1.c2 THEN rt0.c2 END))) ORDER BY (((NOT (rt1.c1)))||(rt1.c1));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN CAST(rt1.c2 AS BLOB) END) ORDER BY ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt1.c0)) THEN CAST(rt1.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN CAST(rt1.c2 AS BLOB) END) ORDER BY ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt1.c0)) THEN CAST(rt1.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (NULL)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN (- (rt1.c0)) THEN CAST(rt1.c2 AS BLOB) END) ORDER BY ((((((rt1.c2)AND(rt1.c1)))AND(rt1.c2))) BETWEEN (((rt0.c2) IS TRUE)) AND (NULL)) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR((((0.37376595489745945, rt0.c0, rt0.c2))=((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR((((0.37376595489745945, rt0.c0, rt0.c2))=((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR((((0.37376595489745945, rt0.c0, rt0.c2))=((rt0.c1, rt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR((((0.37376595489745945, rt0.c0, rt0.c2))=((rt0.c1, rt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))AND((rt0.c0 IN ()))))OR((((0.37376595489745945, rt0.c0, rt0.c2))=((rt0.c1, rt0.c0, rt0.c1))))));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1, t0 WHERE (json_type(CAST(rt1.c2 AS REAL))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c2 DESC);
SELECT ALL * FROM rt1, t0 WHERE (json_type(CAST(rt1.c2 AS REAL))) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((json_type(CAST(rt1.c2 AS REAL))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c2 DESC);
SELECT ALL * FROM rt1, t0 WHERE (json_type(CAST(rt1.c2 AS REAL))) ORDER BY rt1.c2 DESC;
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2))<=(((((rt0.c2))<((rt1.c0))))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<=(((((rt0.c2))<((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2))<=(((((rt0.c2))<((rt1.c0))))))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<=(((((rt0.c2))<((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY x'' DESC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2))<=(((((rt0.c2))<((rt1.c0))))))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY x'014ffa96', CASE WHEN (NULL IN (t0.c0)) THEN CASE WHEN rt1.c0 THEN t0.c0 END END, ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY x'014ffa96', CASE WHEN (NULL IN (t0.c0)) THEN CASE WHEN rt1.c0 THEN t0.c0 END END, ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY x'014ffa96', CASE WHEN (NULL IN (t0.c0)) THEN CASE WHEN rt1.c0 THEN t0.c0 END END, ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY x'014ffa96', CASE WHEN (NULL IN (t0.c0)) THEN CASE WHEN rt1.c0 THEN t0.c0 END END, ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY x'014ffa96', CASE WHEN (NULL IN (t0.c0)) THEN CASE WHEN rt1.c0 THEN t0.c0 END END, ((CAST(rt1.c0 AS INTEGER)) NOTNULL) DESC;
SELECT * FROM rt1, t0, rt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c2) AND (rt0.c1))) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN 0.8683479595742022 WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN 0.8683479595742022 WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c2 END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN 0.8683479595742022 WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c2 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN 0.8683479595742022 WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c2 END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ())) ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) IS TRUE) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) THEN 0.8683479595742022 WHEN (rt0.c1 IN ()) THEN rt0.c1 COLLATE RTRIM ELSE rt0.c2 END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN '4X{T' COLLATE RTRIM THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '4X{T' COLLATE RTRIM THEN ABS(t0.c0) END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN '4X{T' COLLATE RTRIM THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '4X{T' COLLATE RTRIM THEN ABS(t0.c0) END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN '4X{T' COLLATE RTRIM THEN ABS(t0.c0) END);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|(0Xffffffff85b37388))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN ()), ((t0.c0) NOT NULL), CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, x'de5e'))==((t0.c0, t0.c0, t0.c0)))))<((CAST(t0.c0 AS NUMERIC), (((x''))=((t0.c0))), ((t0.c0)IS(t0.c0)), 75455682, ((t0.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<((t0.c0))))|(0xffffffff85b37388))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN ()), ((t0.c0) NOT NULL), CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, x'de5e'))=((t0.c0, t0.c0, t0.c0)))))<((CAST(t0.c0 AS NUMERIC), (((x''))==((t0.c0))), ((t0.c0)IS(t0.c0)), 75455682, ((t0.c0) ISNULL)))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|(0Xffffffff85b37388))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN ()), ((t0.c0) NOT NULL), CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, x'de5e'))==((t0.c0, t0.c0, t0.c0)))))<((CAST(t0.c0 AS NUMERIC), (((x''))=((t0.c0))), ((t0.c0)IS(t0.c0)), 75455682, ((t0.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))<((t0.c0))))|(0xffffffff85b37388))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN ()), ((t0.c0) NOT NULL), CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, x'de5e'))=((t0.c0, t0.c0, t0.c0)))))<((CAST(t0.c0 AS NUMERIC), (((x''))==((t0.c0))), ((t0.c0)IS(t0.c0)), 75455682, ((t0.c0) ISNULL)))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c0))))|(0Xffffffff85b37388))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (t0.c0 IN ()), ((t0.c0) NOT NULL), CAST(t0.c0 AS NUMERIC), (((t0.c0, t0.c0, x'de5e'))==((t0.c0, t0.c0, t0.c0)))))<((CAST(t0.c0 AS NUMERIC), (((x''))=((t0.c0))), ((t0.c0)IS(t0.c0)), 75455682, ((t0.c0) ISNULL)))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)*('0.021763583642943507')) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*('0.021763583642943507')) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1)GLOB(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)*('0.021763583642943507')) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)*('0.021763583642943507')) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1)GLOB(rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c1)*('0.021763583642943507')) IN ())) ORDER BY (((rt0.c2)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))AND(rt0.c0)))) AND ((((rt0.c1)GLOB(rt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))  WHEN ((0.460440962210375)%(rt0.c2)) THEN ((((0.8536195464780937)OR(rt0.c1)))OR(rt1.c2)) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY ((((rt0.c0)OR(rt1.c2)))AND((rt0.c1 IN (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))  WHEN ((0.460440962210375)%(rt0.c2)) THEN ((((0.8536195464780937)OR(rt0.c1)))OR(rt1.c2)) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt0.c0)OR(rt1.c2)))AND((rt0.c1 IN (rt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))  WHEN ((0.460440962210375)%(rt0.c2)) THEN ((((0.8536195464780937)OR(rt0.c1)))OR(rt1.c2)) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY ((((rt0.c0)OR(rt1.c2)))AND((rt0.c1 IN (rt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))  WHEN ((0.460440962210375)%(rt0.c2)) THEN ((((0.8536195464780937)OR(rt0.c1)))OR(rt1.c2)) ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt0.c0)OR(rt1.c2)))AND((rt0.c1 IN (rt1.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))  WHEN ((0.460440962210375)%(rt0.c2)) THEN ((((0.8536195464780937)OR(rt0.c1)))OR(rt1.c2)) ELSE CAST(rt0.c1 AS REAL) END) ORDER BY ((((rt0.c0)OR(rt1.c2)))AND((rt0.c1 IN (rt1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (highlight(rt0.c2, CAST(rt0.c1 AS NUMERIC), ((rt0.c2)IS NOT(rt0.c2)), CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c2, CAST(rt0.c1 AS NUMERIC), ((rt0.c2)IS NOT(rt0.c2)), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (highlight(rt0.c2, CAST(rt0.c1 AS NUMERIC), ((rt0.c2)IS NOT(rt0.c2)), CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((highlight(rt0.c2, CAST(rt0.c1 AS NUMERIC), ((rt0.c2)IS NOT(rt0.c2)), CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((t0.c0 IN ()))AND((((t0.c0, rt1.c0, x''))<=((t0.c0, t0.c0, rt1.c0))))))OR((rt1.c2 IN ()))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (((t0.c0, t0.c0, rt1.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (rt1.c0 IN (x'')), rt1.c0)) AND ((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()), ((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN ()))AND((((t0.c0, rt1.c0, x''))<=((t0.c0, t0.c0, rt1.c0))))))OR((rt1.c2 IN ()))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c0, t0.c0, rt1.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (rt1.c0 IN (x'')), rt1.c0)) AND ((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()), ((rt1.c2) IS FALSE)))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((t0.c0 IN ()))AND((((t0.c0, rt1.c0, x''))<=((t0.c0, t0.c0, rt1.c0))))))OR((rt1.c2 IN ()))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (((t0.c0, t0.c0, rt1.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (rt1.c0 IN (x'')), rt1.c0)) AND ((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()), ((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN ()))AND((((t0.c0, rt1.c0, x''))<=((t0.c0, t0.c0, rt1.c0))))))OR((rt1.c2 IN ()))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((t0.c0, t0.c0, rt1.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (rt1.c0 IN (x'')), rt1.c0)) AND ((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()), ((rt1.c2) IS FALSE)))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((((((t0.c0 IN ()))AND((((t0.c0, rt1.c0, x''))<=((t0.c0, t0.c0, rt1.c0))))))OR((rt1.c2 IN ()))))AND(rt1.c0 COLLATE RTRIM)))AND((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY (((t0.c0, t0.c0, rt1.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))), (rt1.c0 IN (x'')), rt1.c0)) AND ((((((((((t0.c0)OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c2)))AND(rt1.c0)), (rt1.c0 IN ()), ((rt1.c2) IS FALSE))));
SELECT * FROM t0 WHERE (((t0.c0) NOTNULL)) ORDER BY ((IFNULL(t0.c0, t0.c0))<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((IFNULL(t0.c0, t0.c0))<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0) NOTNULL)) ORDER BY ((IFNULL(t0.c0, t0.c0))<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((IFNULL(t0.c0, t0.c0))<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0) NOTNULL)) ORDER BY ((IFNULL(t0.c0, t0.c0))<<(t0.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 NOT INDEXED, t0 WHERE ((- ((~ (rt1.c2))))) ORDER BY ((NULL)IS NOT(((rt1.c1)*(t0.c0)))) DESC, ((((rt1.c0) NOTNULL))*(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((NULL)IS NOT(((rt1.c1)*(t0.c0)))) DESC, ((((rt1.c0) NOTNULL))*(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED, t0 WHERE ((- ((~ (rt1.c2))))) ORDER BY ((NULL)IS NOT(((rt1.c1)*(t0.c0)))) DESC, ((((rt1.c0) NOTNULL))*(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((~ (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((NULL)IS NOT(((rt1.c1)*(t0.c0)))) DESC, ((((rt1.c0) NOTNULL))*(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt1 NOT INDEXED, t0 WHERE ((- ((~ (rt1.c2))))) ORDER BY ((NULL)IS NOT(((rt1.c1)*(t0.c0)))) DESC, ((((rt1.c0) NOTNULL))*(((rt1.c2) BETWEEN (rt1.c0) AND (t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((t0.c0) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c1)<(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((t0.c0) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c1)<(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c1)<(t0.c0))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((t0.c0) BETWEEN (rt1.c2 COLLATE BINARY) AND (((rt1.c1)<(t0.c0)))));
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS TEXT) IN ()));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ((- (rt1.c0))))) ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)<>(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)!=(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ((- (rt1.c0))))) ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)<>(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ((- (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)!=(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ((- (rt1.c0))))) ORDER BY ((((rt1.c2) NOT NULL)) NOT BETWEEN (rt1.c1) AND (((rt1.c1)<>(rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1)>(rt1.c1)))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT NULL))OR(((rt1.c1)>(rt1.c1)))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1)>(rt1.c1)))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) NOT NULL))OR(((rt1.c1)>(rt1.c1)))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) NOT NULL))OR(((rt1.c1)>(rt1.c1)))))OR(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN NULL THEN rt1.c2 ELSE rt1.c1 END) ISNULL));
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((NOT (t0.c0)))&((((t0.c0, rt0.c0, rt1.c1))<=((NULL, rt0.c1, t0.c0)))))) ORDER BY ((((((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c0)))))OR(rt1.c1)))OR((((rt0.c1, t0.c0, t0.c0))!=((rt0.c0, rt0.c0, NULL))))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) DESC  NULLS LAST, ((rt0.c2)>>(CAST(t0.c0 AS BLOB)))  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))&((((t0.c0, rt0.c0, rt1.c1))<=((NULL, rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c0)))))OR(rt1.c1)))OR((((rt0.c1, t0.c0, t0.c0))!=((rt0.c0, rt0.c0, NULL))))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) DESC  NULLS LAST, ((rt0.c2)>>(CAST(t0.c0 AS BLOB)))  NULLS FIRST, rt0.c0 DESC);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((NOT (t0.c0)))&((((t0.c0, rt0.c0, rt1.c1))<=((NULL, rt0.c1, t0.c0)))))) ORDER BY ((((((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c0)))))OR(rt1.c1)))OR((((rt0.c1, t0.c0, t0.c0))!=((rt0.c0, rt0.c0, NULL))))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) DESC  NULLS LAST, ((rt0.c2)>>(CAST(t0.c0 AS BLOB)))  NULLS FIRST, rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))&((((t0.c0, rt0.c0, rt1.c1))<=((NULL, rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c0)))))OR(rt1.c1)))OR((((rt0.c1, t0.c0, t0.c0))!=((rt0.c0, rt0.c0, NULL))))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) DESC  NULLS LAST, ((rt0.c2)>>(CAST(t0.c0 AS BLOB)))  NULLS FIRST, rt0.c0 DESC);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((NOT (t0.c0)))&((((t0.c0, rt0.c0, rt1.c1))<=((NULL, rt0.c1, t0.c0)))))) ORDER BY ((((((((rt1.c1 COLLATE NOCASE)AND(((rt1.c1) BETWEEN (rt1.c0) AND (t0.c0)))))OR(rt1.c1)))OR((((rt0.c1, t0.c0, t0.c0))!=((rt0.c0, rt0.c0, NULL))))))OR(((rt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c2)))) DESC  NULLS LAST, ((rt0.c2)>>(CAST(t0.c0 AS BLOB)))  NULLS FIRST, rt0.c0 DESC;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0)%(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)%(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0)%(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0)%(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c0 AS TEXT) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0)%(rt1.c2))  WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) THEN rt1.c0 COLLATE RTRIM ELSE CAST(rt1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c1)OR(1.862675229E9)))AND(rt1.c2)) AS INTEGER)) ORDER BY ((((((rt1.c0)AND(t0.c0)))OR('')))LIKE(((rt1.c1)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c1)OR(1.862675229E9)))AND(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c0)AND(t0.c0)))OR('')))LIKE(((rt1.c1)+(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c1)OR(1.862675229E9)))AND(rt1.c2)) AS INTEGER)) ORDER BY ((((((rt1.c0)AND(t0.c0)))OR('')))LIKE(((rt1.c1)+(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c1)OR(1.862675229E9)))AND(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((rt1.c0)AND(t0.c0)))OR('')))LIKE(((rt1.c1)+(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((((rt1.c1)OR(1.862675229E9)))AND(rt1.c2)) AS INTEGER)) ORDER BY ((((((rt1.c0)AND(t0.c0)))OR('')))LIKE(((rt1.c1)+(rt1.c1))));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, x'')) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), (((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), COALESCE(NULL, -1011348265))) AND ((((rt1.c0)<<('1241055457')), (NOT (rt1.c0)), IFNULL(DISTINCT rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c2, x'')) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), (((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), COALESCE(NULL, -1011348265))) AND ((((rt1.c0)<<('1241055457')), (NOT (rt1.c0)), IFNULL(DISTINCT rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, x'')) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), (((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), COALESCE(NULL, -1011348265))) AND ((((rt1.c0)<<('1241055457')), (NOT (rt1.c0)), IFNULL(DISTINCT rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt1.c2, x'')) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), (((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), COALESCE(NULL, -1011348265))) AND ((((rt1.c0)<<('1241055457')), (NOT (rt1.c0)), IFNULL(DISTINCT rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, x'')) NOT BETWEEN ((((rt1.c1)LIKE(rt1.c0)), (((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))), COALESCE(NULL, -1011348265))) AND ((((rt1.c0)<<('1241055457')), (NOT (rt1.c0)), IFNULL(DISTINCT rt1.c0, rt1.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((TIME(rt0.c0, rt0.c1, rt0.c1)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c1)))) WHERE (((((rt0.c1)-(rt0.c2)))<(CASE WHEN 0.4873344607472787 THEN 0.15087240089604093 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c2)))<(CASE WHEN 0.4873344607472787 THEN 0.15087240089604093 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((TIME(rt0.c0, rt0.c1, rt0.c1)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c1)))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((TIME(rt0.c0, rt0.c1, rt0.c1)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c1)))) WHERE (((((rt0.c1)-(rt0.c2)))<(CASE WHEN 0.4873344607472787 THEN 0.15087240089604093 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(rt0.c2)))<(CASE WHEN 0.4873344607472787 THEN 0.15087240089604093 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((TIME(rt0.c0, rt0.c1, rt0.c1)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c1)))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t0 ON ((TIME(rt0.c0, rt0.c1, rt0.c1)) BETWEEN (((((t0.c0)OR(t0.c0)))OR(rt0.c0))) AND (((rt0.c0)<(rt0.c1)))) WHERE (((((rt0.c1)-(rt0.c2)))<(CASE WHEN 0.4873344607472787 THEN 0.15087240089604093 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) ORDER BY (+ (((rt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT * FROM rt0, rt1, t0 WHERE (((json_valid(rt0.c2)) BETWEEN (((rt0.c0) IS FALSE)) AND ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c2)) BETWEEN (((rt0.c0) IS FALSE)) AND ((- (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((json_valid(rt0.c2)) BETWEEN (((rt0.c0) IS FALSE)) AND ((- (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c2)) BETWEEN (((rt0.c0) IS FALSE)) AND ((- (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((json_valid(rt0.c2)) BETWEEN (((rt0.c0) IS FALSE)) AND ((- (rt1.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), NULL))>((((2.65817197E8) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), NULL))>((((2.65817197E8) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), NULL))>((((2.65817197E8) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), NULL))>((((2.65817197E8) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ORDER BY (((((t0.c0)IS NOT(t0.c0)), (t0.c0 IN (t0.c0, t0.c0)), NULL))>((((2.65817197E8) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC, CAST(((x'') BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER);
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND((rt0.c0 IN ()))))AND(NULL))) ORDER BY CAST(((((rt0.c0)OR(rt0.c2)))OR('S&)')) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))AND((rt0.c0 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c2)))OR('S&)')) AS BLOB) ASC);
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND((rt0.c0 IN ()))))AND(NULL))) ORDER BY CAST(((((rt0.c0)OR(rt0.c2)))OR('S&)')) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))AND((rt0.c0 IN ()))))AND(NULL))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c0)OR(rt0.c2)))OR('S&)')) AS BLOB) ASC);
SELECT * FROM rt0 WHERE ((((((~ (rt0.c2)))AND((rt0.c0 IN ()))))AND(NULL))) ORDER BY CAST(((((rt0.c0)OR(rt0.c2)))OR('S&)')) AS BLOB) ASC;
SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c2))) AND ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c2))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c2))) AND ((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c2))) AND ((- (rt1.c2))))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, t0 NATURAL JOIN rt1 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt1.c2))) AND ((- (rt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))) AS BLOB));
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE rt1.c2 END))) ORDER BY rt1.c1 COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (ABS(DISTINCT (((rt1.c2))<=((rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((rt1.c2))<=((rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (ABS(DISTINCT (((rt1.c2))<=((rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (((rt1.c2))<=((rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (ABS(DISTINCT (((rt1.c2))<=((rt1.c1))))) ORDER BY ((((rt1.c1) NOT NULL)) IS TRUE) DESC;
SELECT * FROM rt1 WHERE (LOWER(((rt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LOWER(((rt1.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (LOWER(((rt1.c2) IS FALSE)));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY x'6183';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY x'6183');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY x'6183';
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY x'6183');
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE RTRIM) ORDER BY x'6183';
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)<(rt1.c1))  WHEN ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)) THEN ((t0.c0)%(rt1.c1)) WHEN (NOT (rt1.c1)) THEN ((-115900862) IS FALSE) WHEN (~ (t0.c0)) THEN ((rt1.c0)<<(rt1.c1)) WHEN rt1.c1 THEN ((rt1.c2) ISNULL) WHEN ((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN LIKE(rt1.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)<(rt1.c1))  WHEN ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)) THEN ((t0.c0)%(rt1.c1)) WHEN (NOT (rt1.c1)) THEN ((-115900862) IS FALSE) WHEN (~ (t0.c0)) THEN ((rt1.c0)<<(rt1.c1)) WHEN rt1.c1 THEN ((rt1.c2) ISNULL) WHEN ((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN LIKE(rt1.c0, rt1.c1) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)<(rt1.c1))  WHEN ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)) THEN ((t0.c0)%(rt1.c1)) WHEN (NOT (rt1.c1)) THEN ((-115900862) IS FALSE) WHEN (~ (t0.c0)) THEN ((rt1.c0)<<(rt1.c1)) WHEN rt1.c1 THEN ((rt1.c2) ISNULL) WHEN ((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN LIKE(rt1.c0, rt1.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)<(rt1.c1))  WHEN ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)) THEN ((t0.c0)%(rt1.c1)) WHEN (NOT (rt1.c1)) THEN ((-115900862) IS FALSE) WHEN (~ (t0.c0)) THEN ((rt1.c0)<<(rt1.c1)) WHEN rt1.c1 THEN ((rt1.c2) ISNULL) WHEN ((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN LIKE(rt1.c0, rt1.c1) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)<(rt1.c1))  WHEN ((rt1.c0) BETWEEN (t0.c0) AND (rt1.c1)) THEN ((t0.c0)%(rt1.c1)) WHEN (NOT (rt1.c1)) THEN ((-115900862) IS FALSE) WHEN (~ (t0.c0)) THEN ((rt1.c0)<<(rt1.c1)) WHEN rt1.c1 THEN ((rt1.c2) ISNULL) WHEN ((t0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) THEN LIKE(rt1.c0, rt1.c1) END);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2)/(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2)/(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2)/(rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2))) AND (rt0.c1)));
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((- (rt1.c2)))|(QUOTE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))|(QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((- (rt1.c2)))|(QUOTE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c2)))|(QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((- (rt1.c2)))|(QUOTE(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE (~ (0.18309588670403032))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN 'u~)R*4' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN 0.6830439052532709 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM WHEN ((NULL)<>(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)/(rt0.c1)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (0.18309588670403032))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN 'u~)R*4' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN 0.6830439052532709 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM WHEN ((NULL)!=(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)/(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c1))) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (~ (0.18309588670403032))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN 'u~)R*4' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN 0.6830439052532709 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM WHEN ((NULL)<>(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)/(rt0.c1)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (0.18309588670403032))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN 'u~)R*4' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN 0.6830439052532709 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM WHEN ((NULL)!=(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)/(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c1))) ISNULL) ASC);
SELECT ALL * FROM rt0 WHERE (CASE (~ (0.18309588670403032))  WHEN rt0.c1 COLLATE BINARY THEN CASE WHEN 'u~)R*4' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END WHEN 0.6830439052532709 COLLATE NOCASE THEN rt0.c2 COLLATE RTRIM WHEN ((NULL)<>(rt0.c1)) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)/(rt0.c1)) END) ORDER BY (((- (rt0.c1))) ISNULL) ASC;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS INTEGER)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))*((((rt1.c0))!=((rt1.c1))))) DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN '09' WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)<((((rt1.c0, rt1.c2, rt0.c2))<=((rt1.c1, rt1.c0, rt0.c0))))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))*((((rt1.c0))!=((rt1.c1))))) DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN '09' WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)<((((rt1.c0, rt1.c2, rt0.c2))<=((rt1.c1, rt1.c0, rt0.c0))))), rt0.c1);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS INTEGER)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))*((((rt1.c0))!=((rt1.c1))))) DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN '09' WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)<((((rt1.c0, rt1.c2, rt0.c2))<=((rt1.c1, rt1.c0, rt0.c0))))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))*((((rt1.c0))!=((rt1.c1))))) DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN '09' WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)<((((rt1.c0, rt1.c2, rt0.c2))<=((rt1.c1, rt1.c0, rt0.c0))))), rt0.c1);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((x'') IS FALSE) AS INTEGER)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))*((((rt1.c0))!=((rt1.c1))))) DESC  NULLS LAST, ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN '09' WHEN rt1.c2 THEN rt1.c1 ELSE rt0.c1 END)<((((rt1.c0, rt1.c2, rt0.c2))<=((rt1.c1, rt1.c0, rt0.c0))))), rt0.c1;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END ELSE rt0.c2 END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END ELSE rt0.c2 END WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN rt0 ON CASE WHEN (rt1.c1 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c1 END ELSE rt0.c2 END WHERE (rt0.c0);
SELECT * FROM rt0, t0 WHERE ((((((- (t0.c0)))OR(((rt0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(((rt0.c2) NOTNULL)))) ORDER BY (+ (CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t0.c0)))OR(((rt0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (CAST(rt0.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((((((- (t0.c0)))OR(((rt0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(((rt0.c2) NOTNULL)))) ORDER BY (+ (CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (t0.c0)))OR(((rt0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ (CAST(rt0.c2 AS TEXT)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE ((((((- (t0.c0)))OR(((rt0.c0) BETWEEN (t0.c0) AND (NULL)))))OR(((rt0.c2) NOTNULL)))) ORDER BY (+ (CAST(rt0.c2 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS FALSE))/(-0.0))) ORDER BY ((('_5349767978423337679T4170802289464888313THmP]N篳')/(x'')) IN (rt1.c2)) ASC  NULLS FIRST, ((rt1.c1)&(rt1.c0)) COLLATE RTRIM  NULLS LAST, ((((('75455682')<('-1561730047'))))==(((+ (rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE))/(-0.0))) IS TRUE)  as count FROM rt1 ORDER BY ((('_5349767978423337679T4170802289464888313THmP]N篳')/(x'')) IN (rt1.c2)) ASC  NULLS FIRST, ((rt1.c1)&(rt1.c0)) COLLATE RTRIM  NULLS LAST, ((((('75455682')<('-1561730047'))))=(((+ (rt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS FALSE))/(-0.0))) ORDER BY ((('_5349767978423337679T4170802289464888313THmP]N篳')/(x'')) IN (rt1.c2)) ASC  NULLS FIRST, ((rt1.c1)&(rt1.c0)) COLLATE RTRIM  NULLS LAST, ((((('75455682')<('-1561730047'))))==(((+ (rt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS FALSE))/(-0.0))) IS TRUE)  as count FROM rt1 ORDER BY ((('_5349767978423337679T4170802289464888313THmP]N篳')/(x'')) IN (rt1.c2)) ASC  NULLS FIRST, ((rt1.c1)&(rt1.c0)) COLLATE RTRIM  NULLS LAST, ((((('75455682')<('-1561730047'))))=(((+ (rt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) IS FALSE))/(-0.0))) ORDER BY ((('_5349767978423337679T4170802289464888313THmP]N篳')/(x'')) IN (rt1.c2)) ASC  NULLS FIRST, ((rt1.c1)&(rt1.c0)) COLLATE RTRIM  NULLS LAST, ((((('75455682')<('-1561730047'))))==(((+ (rt1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((NULL)==(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))))OR(((((((((((((rt1.c1)AND(rt1.c2)))AND(-1641348764)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))OR(rt1.c0))))) ORDER BY ((((((-913874841)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt1.c2))>((rt1.c0)))) AND ((- (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)==(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))))OR(((((((((((((rt1.c1)AND(rt1.c2)))AND(-1641348764)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((-913874841)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt1.c2))>((rt1.c0)))) AND ((- (rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((NULL)==(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))))OR(((((((((((((rt1.c1)AND(rt1.c2)))AND(-1641348764)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))OR(rt1.c0))))) ORDER BY ((((((-913874841)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt1.c2))>((rt1.c0)))) AND ((- (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)==(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))))OR(((((((((((((rt1.c1)AND(rt1.c2)))AND(-1641348764)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((-913874841)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt1.c2))>((rt1.c0)))) AND ((- (rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((((((NULL)==(rt0.c2)))AND(((((rt1.c0)AND(rt0.c1)))OR(t0.c0)))))OR(((((((((((((rt1.c1)AND(rt1.c2)))AND(-1641348764)))AND(t0.c0)))OR(rt0.c1)))AND(t0.c0)))OR(rt1.c0))))) ORDER BY ((((((-913874841)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN ((((rt1.c2))>((rt1.c0)))) AND ((- (rt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY (((t0.c0)<>(rt1.c2)) IN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.3310239788903312 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((t0.c0)<>(rt1.c2)) IN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.3310239788903312 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY (((t0.c0)<>(rt1.c2)) IN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.3310239788903312 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((t0.c0)<>(rt1.c2)) IN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.3310239788903312 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c0)) AS REAL)) ORDER BY (((t0.c0)<>(rt1.c2)) IN (CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt1.c1 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.3310239788903312 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c1 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0 WHERE ((('1780701468')||(rt1.c0 COLLATE BINARY))) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((('1780701468')||(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC) ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((('1780701468')||(rt1.c0 COLLATE BINARY))) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((('1780701468')||(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC) ASC);
SELECT ALL * FROM rt1, rt0 WHERE ((('1780701468')||(rt1.c0 COLLATE BINARY))) ORDER BY CAST((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS NUMERIC) ASC;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((((((t0.c0)OR(0xffffffffc3bd1373)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((t0.c0 IN ()), '', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((((((t0.c0)OR(0Xffffffffc3bd1373)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((t0.c0 IN ()), '', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((((((t0.c0)OR(0xffffffffc3bd1373)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((t0.c0 IN ()), '', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((((((t0.c0)OR(0Xffffffffc3bd1373)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((t0.c0 IN ()), '', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) ORDER BY (((t0.c0, t0.c0, t0.c0)) BETWEEN ((((((((((((((t0.c0)OR(0xffffffffc3bd1373)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)), (t0.c0 IN (t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((t0.c0 IN ()), '', ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((ABS(DISTINCT rt0.c0))>>((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0))>>((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(DISTINCT rt0.c0))>>((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0))>>((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((ABS(DISTINCT rt0.c0))>>((((rt0.c2))<=((rt0.c1))))));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (CAST(x'' AS INTEGER)))) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))!=(CAST(rt1.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))!=(CAST(rt1.c1 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (CAST(x'' AS INTEGER)))) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))!=(CAST(rt1.c1 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))!=(CAST(rt1.c1 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((~ (CAST(x'' AS INTEGER)))) ORDER BY ((((t0.c0) NOT BETWEEN (rt1.c1) AND (NULL)))!=(CAST(rt1.c1 AS REAL))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))IS(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))IS(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))IS(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1 IN ()))-(CASE WHEN rt0.c2 THEN 0.4382926970807488 WHEN rt1.c2 THEN rt0.c1 WHEN '' THEN rt1.c2 ELSE rt1.c2 END)) INNER JOIN t0 ON CASE WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0) ISNULL) ELSE ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) END WHERE ((((rt1.c0)IS(rt1.c0)) IN ())) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))=(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)IS(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1 IN ()))-(CASE WHEN rt0.c2 THEN 0.4382926970807488 WHEN rt1.c2 THEN rt0.c1 WHEN '' THEN rt1.c2 ELSE rt1.c2 END)) INNER JOIN t0 ON CASE WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0) ISNULL) ELSE ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) END ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))=(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1 IN ()))-(CASE WHEN rt0.c2 THEN 0.4382926970807488 WHEN rt1.c2 THEN rt0.c1 WHEN '' THEN rt1.c2 ELSE rt1.c2 END)) INNER JOIN t0 ON CASE WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0) ISNULL) ELSE ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) END WHERE ((((rt1.c0)IS(rt1.c0)) IN ())) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))=(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)IS(rt1.c0)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1 IN ()))-(CASE WHEN rt0.c2 THEN 0.4382926970807488 WHEN rt1.c2 THEN rt0.c1 WHEN '' THEN rt1.c2 ELSE rt1.c2 END)) INNER JOIN t0 ON CASE WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0) ISNULL) ELSE ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) END ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))=(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 END)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1 IN ()))-(CASE WHEN rt0.c2 THEN 0.4382926970807488 WHEN rt1.c2 THEN rt0.c1 WHEN '' THEN rt1.c2 ELSE rt1.c2 END)) INNER JOIN t0 ON CASE WHEN ((((rt1.c1)OR(rt0.c0)))AND(rt1.c1)) THEN ((t0.c0) ISNULL) ELSE ((((rt1.c0)OR(t0.c0)))OR(rt1.c2)) END WHERE ((((rt1.c0)IS(rt1.c0)) IN ())) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))=(CASE rt0.c2  WHEN rt1.c0 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c0 WHEN t0.c0 THEN rt1.c1 END));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON (t0.c0 COLLATE BINARY IN (((t0.c0)LIKE(rt0.c0)))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)<=(x'a660')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 END)<=(x'a660'))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON (t0.c0 COLLATE BINARY IN (((t0.c0)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON (t0.c0 COLLATE BINARY IN (((t0.c0)LIKE(rt0.c0)))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)<=(x'a660')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 END)<=(x'a660'))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN rt1 ON (t0.c0 COLLATE BINARY IN (((t0.c0)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0 FULL OUTER JOIN rt1 ON (t0.c0 COLLATE BINARY IN (((t0.c0)LIKE(rt0.c0)))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)<=(x'a660')));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('-676083617') ORDER BY ((((rt0.c1)IS NOT(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('-676083617') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('-676083617') ORDER BY ((((rt0.c1)IS NOT(rt0.c1))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('-676083617') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt0.c1)IS NOT(rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ('-676083617') ORDER BY ((((rt0.c1)IS NOT(rt0.c1))) IS TRUE);
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((((t0.c0)+(rt0.c1)))IS(((rt0.c2) BETWEEN (rt0.c1) AND ('-642422037')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c0)+(rt0.c1)))IS(((rt0.c2) BETWEEN (rt0.c1) AND ('-642422037')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((((t0.c0)+(rt0.c1)))IS(((rt0.c2) BETWEEN (rt0.c1) AND ('-642422037')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((t0.c0)+(rt0.c1)))IS(((rt0.c2) BETWEEN (rt0.c1) AND ('-642422037')))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULL) ORDER BY ((((t0.c0)+(rt0.c1)))IS(((rt0.c2) BETWEEN (rt0.c1) AND ('-642422037')))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(t0.c0)))AND(((t0.c0)|(t0.c0))))) ORDER BY ((t0.c0)&(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(t0.c0)))AND(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)&(t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(t0.c0)))AND(((t0.c0)|(t0.c0))))) ORDER BY ((t0.c0)&(t0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND(t0.c0)))AND(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)&(t0.c0)) COLLATE RTRIM ASC);
SELECT ALL * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND(t0.c0)))AND(((t0.c0)|(t0.c0))))) ORDER BY ((t0.c0)&(t0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY COALESCE(DISTINCT (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), (+ (rt1.c1)))  NULLS LAST, (((((rt0.c2 IN ()))AND(((rt1.c0) IS TRUE))))AND(LIKELY(rt0.c0))) ASC  NULLS LAST, LOWER(DISTINCT CAST(rt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY COALESCE(DISTINCT (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), (+ (rt1.c1)))  NULLS LAST, (((((rt0.c2 IN ()))AND(((rt1.c0) IS TRUE))))AND(LIKELY(rt0.c0))) ASC  NULLS LAST, LOWER(DISTINCT CAST(rt1.c2 AS REAL)));
SELECT ALL * FROM rt1, t0, rt0 WHERE (CAST(rt1.c0 COLLATE RTRIM AS TEXT)) ORDER BY COALESCE(DISTINCT (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), (+ (rt1.c1)))  NULLS LAST, (((((rt0.c2 IN ()))AND(((rt1.c0) IS TRUE))))AND(LIKELY(rt0.c0))) ASC  NULLS LAST, LOWER(DISTINCT CAST(rt1.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY COALESCE(DISTINCT (((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), (+ (rt1.c1)))  NULLS LAST, (((((rt0.c2 IN ()))AND(((rt1.c0) IS TRUE))))AND(LIKELY(rt0.c0))) ASC  NULLS LAST, LOWER(DISTINCT CAST(rt1.c2 AS REAL)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY ((((-1.204720086E9)AND('|>>4')))OR(rt1.c2)), ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((-1.204720086E9)AND('|>>4')))OR(rt1.c2)), ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY ((((-1.204720086E9)AND('|>>4')))OR(rt1.c2)), ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((-1.204720086E9)AND('|>>4')))OR(rt1.c2)), ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (t0.c0) ORDER BY ((((-1.204720086E9)AND('|>>4')))OR(rt1.c2)), ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT LIKELIHOOD(rt1.c2, 0.2474007175655587)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT LIKELIHOOD(rt1.c2, 0.2474007175655587))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT LIKELIHOOD(rt1.c2, 0.2474007175655587)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT LIKELIHOOD(rt1.c2, 0.2474007175655587))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (TRIM(DISTINCT LIKELIHOOD(rt1.c2, 0.2474007175655587)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (- ('qSW}3<pV')) THEN ABS('\cEE)<#ᤲ~') ELSE t0.c0 COLLATE RTRIM END) ORDER BY ABS((NOT (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('qSW}3<pV')) THEN ABS('\cEE)<#ᤲ~') ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, rt0 ORDER BY ABS((NOT (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (- ('qSW}3<pV')) THEN ABS('\cEE)<#ᤲ~') ELSE t0.c0 COLLATE RTRIM END) ORDER BY ABS((NOT (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- ('qSW}3<pV')) THEN ABS('\cEE)<#ᤲ~') ELSE t0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, rt0 ORDER BY ABS((NOT (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE WHEN (- ('qSW}3<pV')) THEN ABS('\cEE)<#ᤲ~') ELSE t0.c0 COLLATE RTRIM END) ORDER BY ABS((NOT (rt0.c1))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (load_extension(t0.c0 COLLATE NOCASE)) ORDER BY ((x'') BETWEEN (t0.c0) AND (((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((x'') BETWEEN (t0.c0) AND (((t0.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE (load_extension(t0.c0 COLLATE NOCASE)) ORDER BY ((x'') BETWEEN (t0.c0) AND (((t0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(t0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 ORDER BY ((x'') BETWEEN (t0.c0) AND (((t0.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE (load_extension(t0.c0 COLLATE NOCASE)) ORDER BY ((x'') BETWEEN (t0.c0) AND (((t0.c0) IS TRUE)));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON ((((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON ((((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON ((((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON ((((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON ((((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) IS TRUE) WHERE (((CASE WHEN rt1.c0 THEN rt1.c2 END) NOT NULL));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((('2b')>>(0.4367047892808831)));
SELECT SUM(count) FROM (SELECT (((('2b')>>(0.4367047892808831))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((('2b')>>(0.4367047892808831)));
SELECT SUM(count) FROM (SELECT (((('2b')>>(0.4367047892808831))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((('2b')>>(0.4367047892808831)));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((((t0.c0))>((rt1.c2))))<=(rt1.c2)) DESC, CAST(CASE rt1.c2  WHEN '0.05952524140565296' THEN rt1.c2 ELSE rt1.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (((((t0.c0))>((rt1.c2))))<=(rt1.c2)) DESC, CAST(CASE rt1.c2  WHEN '0.05952524140565296' THEN rt1.c2 ELSE rt1.c1 END AS REAL));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((((t0.c0))>((rt1.c2))))<=(rt1.c2)) DESC, CAST(CASE rt1.c2  WHEN '0.05952524140565296' THEN rt1.c2 ELSE rt1.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY (((((t0.c0))>((rt1.c2))))<=(rt1.c2)) DESC, CAST(CASE rt1.c2  WHEN '0.05952524140565296' THEN rt1.c2 ELSE rt1.c1 END AS REAL));
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (LAST_INSERT_ROWID()) ORDER BY (((((t0.c0))>((rt1.c2))))<=(rt1.c2)) DESC, CAST(CASE rt1.c2  WHEN '0.05952524140565296' THEN rt1.c2 ELSE rt1.c1 END AS REAL);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE ((((((211779825)AND(rt1.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((211779825)AND(rt1.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE ((((((211779825)AND(rt1.c1)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((211779825)AND(rt1.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1 NOT INDEXED, rt0 WHERE ((((((211779825)AND(rt1.c1)))OR(rt0.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN rt0.c1 END) ORDER BY CASE ((t0.c0) BETWEEN (rt1.c1) AND (rt0.c0))  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN 0.09557486202217735 THEN rt0.c2 WHEN t0.c0 THEN '-1638410746' ELSE rt0.c0 END WHEN ((rt0.c1)==(rt1.c0)) THEN CAST(rt1.c2 AS REAL) WHEN ((0x7fffffffffffffff)<<(rt1.c2)) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN (~ (t0.c0)) WHEN CAST(rt1.c2 AS INTEGER) THEN ((x'')=(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN rt0.c1 END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE ((t0.c0) BETWEEN (rt1.c1) AND (rt0.c0))  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN 0.09557486202217735 THEN rt0.c2 WHEN t0.c0 THEN '-1638410746' ELSE rt0.c0 END WHEN ((rt0.c1)==(rt1.c0)) THEN CAST(rt1.c2 AS REAL) WHEN ((0x7fffffffffffffff)<<(rt1.c2)) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN (~ (t0.c0)) WHEN CAST(rt1.c2 AS INTEGER) THEN ((x'')=(rt1.c1)) END);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN rt0.c1 END) ORDER BY CASE ((t0.c0) BETWEEN (rt1.c1) AND (rt0.c0))  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN 0.09557486202217735 THEN rt0.c2 WHEN t0.c0 THEN '-1638410746' ELSE rt0.c0 END WHEN ((rt0.c1)==(rt1.c0)) THEN CAST(rt1.c2 AS REAL) WHEN ((0x7fffffffffffffff)<<(rt1.c2)) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN (~ (t0.c0)) WHEN CAST(rt1.c2 AS INTEGER) THEN ((x'')=(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN rt0.c1 END) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE ((t0.c0) BETWEEN (rt1.c1) AND (rt0.c0))  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN 0.09557486202217735 THEN rt0.c2 WHEN t0.c0 THEN '-1638410746' ELSE rt0.c0 END WHEN ((rt0.c1)==(rt1.c0)) THEN CAST(rt1.c2 AS REAL) WHEN ((0x7fffffffffffffff)<<(rt1.c2)) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN (~ (t0.c0)) WHEN CAST(rt1.c2 AS INTEGER) THEN ((x'')=(rt1.c1)) END);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (CASE WHEN ((((rt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN rt0.c1 END) ORDER BY CASE ((t0.c0) BETWEEN (rt1.c1) AND (rt0.c0))  WHEN CAST(rt1.c1 AS REAL) THEN CASE WHEN rt1.c1 THEN rt0.c0 WHEN 0.09557486202217735 THEN rt0.c2 WHEN t0.c0 THEN '-1638410746' ELSE rt0.c0 END WHEN ((rt0.c1)==(rt1.c0)) THEN CAST(rt1.c2 AS REAL) WHEN ((0x7fffffffffffffff)<<(rt1.c2)) THEN CAST(rt1.c2 AS REAL) WHEN rt1.c1 THEN (~ (t0.c0)) WHEN CAST(rt1.c2 AS INTEGER) THEN ((x'')=(rt1.c1)) END;
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((0.3796016745058637)<=(NULL)) WHERE (((rt1.c0 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((0.3796016745058637)<=(NULL)));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((0.3796016745058637)<=(NULL)) WHERE (((rt1.c0 IN (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((0.3796016745058637)<=(NULL)));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((0.3796016745058637)<=(NULL)) WHERE (((rt1.c0 IN (rt0.c0)) IN ()));
SELECT ALL * FROM t0, rt0 WHERE (LOWER(DISTINCT (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (- (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (LOWER(DISTINCT (- (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (- (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (LOWER(DISTINCT (- (t0.c0))));
SELECT * FROM rt1, t0 INNER JOIN rt0 ON rt1.c1 WHERE ((((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((x'')OR(rt0.c0)))AND(rt0.c0)))) AND ((rt1.c2 COLLATE BINARY, COALESCE(DISTINCT rt1.c1, rt1.c0), CAST(rt1.c0 AS TEXT))))) ORDER BY ((((((rt0.c1)AND(rt1.c1)))OR(rt0.c0))) BETWEEN ((((rt0.c1, '265817197', rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt0.c0, rt1.c0, rt0.c0)))) AND (((45041613)LIKE(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((x'')OR(rt0.c0)))AND(rt0.c0)))) AND ((rt1.c2 COLLATE BINARY, COALESCE(DISTINCT rt1.c1, rt1.c0), CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON rt1.c1 ORDER BY ((((((rt0.c1)AND(rt1.c1)))OR(rt0.c0))) BETWEEN ((((rt0.c1, '265817197', rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt0.c0, rt1.c0, rt0.c0)))) AND (((45041613)LIKE(rt1.c1)))));
SELECT * FROM rt1, t0 INNER JOIN rt0 ON rt1.c1 WHERE ((((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((x'')OR(rt0.c0)))AND(rt0.c0)))) AND ((rt1.c2 COLLATE BINARY, COALESCE(DISTINCT rt1.c1, rt1.c0), CAST(rt1.c0 AS TEXT))))) ORDER BY ((((((rt0.c1)AND(rt1.c1)))OR(rt0.c0))) BETWEEN ((((rt0.c1, '265817197', rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt0.c0, rt1.c0, rt0.c0)))) AND (((45041613)LIKE(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((x'')OR(rt0.c0)))AND(rt0.c0)))) AND ((rt1.c2 COLLATE BINARY, COALESCE(DISTINCT rt1.c1, rt1.c0), CAST(rt1.c0 AS TEXT))))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON rt1.c1 ORDER BY ((((((rt0.c1)AND(rt1.c1)))OR(rt0.c0))) BETWEEN ((((rt0.c1, '265817197', rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt0.c0, rt1.c0, rt0.c0)))) AND (((45041613)LIKE(rt1.c1)))));
SELECT * FROM rt1, t0 INNER JOIN rt0 ON rt1.c1 WHERE ((((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c1)), CASE WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c1 END, ((((x'')OR(rt0.c0)))AND(rt0.c0)))) AND ((rt1.c2 COLLATE BINARY, COALESCE(DISTINCT rt1.c1, rt1.c0), CAST(rt1.c0 AS TEXT))))) ORDER BY ((((((rt0.c1)AND(rt1.c1)))OR(rt0.c0))) BETWEEN ((((rt0.c1, '265817197', rt0.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((rt0.c0, rt1.c0, rt0.c0)))) AND (((45041613)LIKE(rt1.c1))));
SELECT COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON '1411959157' WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))%(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c0))%(t0.c0))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON '1411959157');
SELECT COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON '1411959157' WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))%(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET(t0.c0))%(t0.c0))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON '1411959157');
SELECT COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON '1411959157' WHERE (((SQLITE_COMPILEOPTION_GET(t0.c0))%(t0.c0)));
SELECT COUNT(*) FROM rt1 WHERE ((('tT2')<>('+BH8' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('tT2')!=('+BH8' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('tT2')<>('+BH8' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((('tT2')!=('+BH8' COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((('tT2')<>('+BH8' COLLATE NOCASE)));
SELECT * FROM rt0, t0 WHERE ((((((~ (rt0.c2)))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN NULL THEN t0.c0 END)))OR((((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN NULL THEN t0.c0 END)))OR((((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((~ (rt0.c2)))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN NULL THEN t0.c0 END)))OR((((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN NULL THEN t0.c0 END)))OR((((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((((~ (rt0.c2)))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c1 WHEN NULL THEN t0.c0 END)))OR((((t0.c0, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c2, rt0.c2)) AND ((rt0.c2, t0.c0, t0.c0))))));
SELECT * FROM rt0, t0 WHERE ((~ (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT * FROM rt0, t0 WHERE ((~ (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT * FROM rt0, t0 WHERE ((~ (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(t0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM t0 WHERE (((NULL COLLATE NOCASE)GLOB((t0.c0 IN (t0.c0))))) ORDER BY ((PRINTF(t0.c0))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC, CASE ((t0.c0)>>(t0.c0))  WHEN NULL THEN -82208382 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)GLOB((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC, CASE ((t0.c0)>>(t0.c0))  WHEN NULL THEN -82208382 END);
SELECT ALL * FROM t0 WHERE (((NULL COLLATE NOCASE)GLOB((t0.c0 IN (t0.c0))))) ORDER BY ((PRINTF(t0.c0))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC, CASE ((t0.c0)>>(t0.c0))  WHEN NULL THEN -82208382 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)GLOB((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC, CASE ((t0.c0)>>(t0.c0))  WHEN NULL THEN -82208382 END);
SELECT ALL * FROM t0 WHERE (((NULL COLLATE NOCASE)GLOB((t0.c0 IN (t0.c0))))) ORDER BY ((PRINTF(t0.c0))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) DESC, CASE ((t0.c0)>>(t0.c0))  WHEN NULL THEN -82208382 END;
SELECT ALL * FROM t0, rt1 WHERE ((+ (((((((((0.45277549081981217)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((0.45277549081981217)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((+ (((((((((0.45277549081981217)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((0.45277549081981217)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((+ (((((((((0.45277549081981217)OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) COLLATE BINARY WHERE (0.7527729051501019 COLLATE RTRIM) ORDER BY (((((rt0.c2)>>(t0.c0))))>=((NULL)))  NULLS FIRST, ((t0.c0 COLLATE NOCASE)OR(((t0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.7527729051501019 COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) COLLATE BINARY ORDER BY (((((rt0.c2)>>(t0.c0))))>=((NULL)))  NULLS FIRST, ((t0.c0 COLLATE NOCASE)OR(((t0.c0)IS NOT(rt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) COLLATE BINARY WHERE (0.7527729051501019 COLLATE RTRIM) ORDER BY (((((rt0.c2)>>(t0.c0))))>=((NULL)))  NULLS FIRST, ((t0.c0 COLLATE NOCASE)OR(((t0.c0)IS NOT(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.7527729051501019 COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) COLLATE BINARY ORDER BY (((((rt0.c2)>>(t0.c0))))>=((NULL)))  NULLS FIRST, ((t0.c0 COLLATE NOCASE)OR(((t0.c0)IS NOT(rt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) COLLATE BINARY WHERE (0.7527729051501019 COLLATE RTRIM) ORDER BY (((((rt0.c2)>>(t0.c0))))>=((NULL)))  NULLS FIRST, ((t0.c0 COLLATE NOCASE)OR(((t0.c0)IS NOT(rt0.c0))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((x'')OR(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((x'')OR(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((x'')OR(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((x'')OR(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((((x'')OR(rt0.c0)))AND(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((rt0.c2, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)), rt0.c2))));
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))));
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1)) AND ((rt1.c2, rt1.c0, rt0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1)) AND ((rt1.c2, rt1.c0, rt0.c0))) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1)) AND ((rt1.c2, rt1.c0, rt0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1)) AND ((rt1.c2, rt1.c0, rt0.c0))) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt1.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt1.c2, rt0.c1)) AND ((rt1.c2, rt1.c0, rt0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0)|(NULL))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(NULL))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0)|(NULL))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)|(NULL))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((NOT (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0)|(NULL))) BETWEEN (CAST(rt1.c2 AS NUMERIC)) AND ((NOT (rt1.c2)))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((t0.c0 IN (rt1.c1)) IN ())) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, rt1 WHERE (((t0.c0 IN (rt1.c1)) IN ())) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0, rt1 WHERE (((t0.c0 IN (rt1.c1)) IN ())) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))IS((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))IS((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))IS((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))IS((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c2)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))OR(rt1.c0)))IS((rt1.c0 IN ()))));
SELECT ALL * FROM t0, rt0, rt1 WHERE ((rt0.c2 IN (0.9900890746315691)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (0.9900890746315691)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((rt0.c2 IN (0.9900890746315691)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN (0.9900890746315691)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((rt0.c2 IN (0.9900890746315691)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c0)||(rt1.c0)) AS BLOB) CROSS JOIN t0 ON ((((((rt1.c2)AND(rt1.c0)))OR(NULL)))||(0.5306989507786232)) WHERE (json_extract(HEX(rt1.c1), x''));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(HEX(rt1.c1), x'')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c0)||(rt1.c0)) AS BLOB) CROSS JOIN t0 ON ((((((rt1.c2)AND(rt1.c0)))OR(NULL)))||(0.5306989507786232)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c0)||(rt1.c0)) AS BLOB) CROSS JOIN t0 ON ((((((rt1.c2)AND(rt1.c0)))OR(NULL)))||(0.5306989507786232)) WHERE (json_extract(HEX(rt1.c1), x''));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(HEX(rt1.c1), x'')) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c0)||(rt1.c0)) AS BLOB) CROSS JOIN t0 ON ((((((rt1.c2)AND(rt1.c0)))OR(NULL)))||(0.5306989507786232)));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c1 END)>(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt1.c1) ISNULL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c1 END)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c1) ISNULL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c1 END)>(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt1.c1) ISNULL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt0.c1 END)>(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY ((((rt1.c1) ISNULL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((CASE WHEN rt1.c0 THEN rt0.c1 END)>(rt0.c1 COLLATE BINARY))) ORDER BY ((((rt1.c1) ISNULL))IS NOT(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY CASE ((t0.c0)<(rt1.c2))  WHEN CASE WHEN t0.c0 THEN rt1.c0 END THEN CAST(t0.c0 AS TEXT) ELSE (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY CASE ((t0.c0)<(rt1.c2))  WHEN CASE WHEN t0.c0 THEN rt1.c0 END THEN CAST(t0.c0 AS TEXT) ELSE (rt1.c2 IN ()) END DESC);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY CASE ((t0.c0)<(rt1.c2))  WHEN CASE WHEN t0.c0 THEN rt1.c0 END THEN CAST(t0.c0 AS TEXT) ELSE (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY CASE ((t0.c0)<(rt1.c2))  WHEN CASE WHEN t0.c0 THEN rt1.c0 END THEN CAST(t0.c0 AS TEXT) ELSE (rt1.c2 IN ()) END DESC);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (rt1.c1) ORDER BY CASE ((t0.c0)<(rt1.c2))  WHEN CASE WHEN t0.c0 THEN rt1.c0 END THEN CAST(t0.c0 AS TEXT) ELSE (rt1.c2 IN ()) END DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)==(rt0.c1))) AND ('1872307433'))) ORDER BY (json_array_length('now6', rt0.c2) IN ()) ASC, ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)=(rt0.c1))) AND ('1872307433'))) IS TRUE)  as count FROM rt0 ORDER BY (json_array_length('now6', rt0.c2) IN ()) ASC, ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)==(rt0.c1))) AND ('1872307433'))) ORDER BY (json_array_length('now6', rt0.c2) IN ()) ASC, ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)=(rt0.c1))) AND ('1872307433'))) IS TRUE)  as count FROM rt0 ORDER BY (json_array_length('now6', rt0.c2) IN ()) ASC, ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c0)==(rt0.c1))) AND ('1872307433'))) ORDER BY (json_array_length('now6', rt0.c2) IN ()) ASC, ((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))), ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY t0.c0  NULLS LAST, (~ (((t0.c0) IS FALSE)))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((NULL)>=(t0.c0)))) AND ((((t0.c0)||(-1291878099)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST, (~ (((t0.c0) IS FALSE)))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((NULL)>=(t0.c0)))) AND ((((t0.c0)||(-1291878099)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY t0.c0  NULLS LAST, (~ (((t0.c0) IS FALSE)))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((NULL)>=(t0.c0)))) AND ((((t0.c0)||(-1291878099)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0  NULLS LAST, (~ (((t0.c0) IS FALSE)))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((NULL)>=(t0.c0)))) AND ((((t0.c0)||(-1291878099)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ())) ORDER BY t0.c0  NULLS LAST, (~ (((t0.c0) IS FALSE)))  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((((NULL)>=(t0.c0)))) AND ((((t0.c0)||(-1291878099)))))  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))GLOB(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt0.c0))<>((rt0.c0))) IN ())  NULLS FIRST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))GLOB(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt0.c0))<>((rt0.c0))) IN ())  NULLS FIRST, rt0.c2  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))GLOB(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt0.c0))<>((rt0.c0))) IN ())  NULLS FIRST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))GLOB(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt0.c0))<>((rt0.c0))) IN ())  NULLS FIRST, rt0.c2  NULLS LAST);
SELECT * FROM rt1, rt0, t0 WHERE (((((((rt1.c1)AND(rt1.c0)))AND(rt1.c2)))GLOB(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt0.c0))<>((rt0.c0))) IN ())  NULLS FIRST, rt0.c2  NULLS LAST;
SELECT * FROM t0, rt1 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((x'') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((x'') IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) ISNULL)))=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) ISNULL)))=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) ISNULL)))=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) ISNULL)))=(((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LTRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LTRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LTRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LTRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (LTRIM(t0.c0))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOT NULL)) BETWEEN ('-1528414256') AND (rt1.c0 COLLATE RTRIM))) ORDER BY (UNLIKELY(DISTINCT rt1.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) BETWEEN ('-1528414256') AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY (UNLIKELY(DISTINCT rt1.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOT NULL)) BETWEEN ('-1528414256') AND (rt1.c0 COLLATE RTRIM))) ORDER BY (UNLIKELY(DISTINCT rt1.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) BETWEEN ('-1528414256') AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 ORDER BY (UNLIKELY(DISTINCT rt1.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOT NULL)) BETWEEN ('-1528414256') AND (rt1.c0 COLLATE RTRIM))) ORDER BY (UNLIKELY(DISTINCT rt1.c0) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((LIKELY(rt1.c1))OR(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c1))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((LIKELY(rt1.c1))OR(CAST(rt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt1.c1))OR(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt1 WHERE (((LIKELY(rt1.c1))OR(CAST(rt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c2)>>(rt1.c0)))) ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((rt1.c2)>>(rt1.c0)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c2)>>(rt1.c0)))) ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((rt1.c2)>>(rt1.c0)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((rt1.c2)>>(rt1.c0)))) ORDER BY ((- (rt0.c2)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'') ORDER BY (((((rt0.c0))==((rt1.c1)))) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((((rt0.c0, 265817197, rt0.c0)) NOT BETWEEN ((rt0.c0, 'hA<K', '1241055457')) AND ((rt1.c0, rt1.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0))==((rt1.c1)))) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((((rt0.c0, 265817197, rt0.c0)) NOT BETWEEN ((rt0.c0, 'hA<K', '1241055457')) AND ((rt1.c0, rt1.c2, rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'') ORDER BY (((((rt0.c0))==((rt1.c1)))) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((((rt0.c0, 265817197, rt0.c0)) NOT BETWEEN ((rt0.c0, 'hA<K', '1241055457')) AND ((rt1.c0, rt1.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0))==((rt1.c1)))) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((((rt0.c0, 265817197, rt0.c0)) NOT BETWEEN ((rt0.c0, 'hA<K', '1241055457')) AND ((rt1.c0, rt1.c2, rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (x'') ORDER BY (((((rt0.c0))==((rt1.c1)))) BETWEEN (rt1.c2 COLLATE NOCASE) AND ((((rt0.c0, 265817197, rt0.c0)) NOT BETWEEN ((rt0.c0, 'hA<K', '1241055457')) AND ((rt1.c0, rt1.c2, rt0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT x'0b52', CAST(t0.c0 AS TEXT)) INNER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT x'0b52', CAST(t0.c0 AS TEXT)) INNER JOIN t0 ON (((t0.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT x'0b52', CAST(t0.c0 AS TEXT)) INNER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT x'0b52', CAST(t0.c0 AS TEXT)) INNER JOIN t0 ON (((t0.c0 IN ())) NOT NULL));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON IFNULL(DISTINCT x'0b52', CAST(t0.c0 AS TEXT)) INNER JOIN t0 ON (((t0.c0 IN ())) NOT NULL) WHERE ((- ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ('vIrꃹP') ORDER BY (((+ (rt1.c1)))>=((rt0.c2 IN (rt0.c0)))) ASC, rt0.c2;
SELECT SUM(count) FROM (SELECT (('vIrꃹP') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((+ (rt1.c1)))>=((rt0.c2 IN (rt0.c0)))) ASC, rt0.c2);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ('vIrꃹP') ORDER BY (((+ (rt1.c1)))>=((rt0.c2 IN (rt0.c0)))) ASC, rt0.c2;
SELECT SUM(count) FROM (SELECT (('vIrꃹP') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((+ (rt1.c1)))>=((rt0.c2 IN (rt0.c0)))) ASC, rt0.c2);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ('vIrꃹP') ORDER BY (((+ (rt1.c1)))>=((rt0.c2 IN (rt0.c0)))) ASC, rt0.c2;
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c0)AND(rt0.c1)))AND(t0.c0)))AND((((t0.c0))<=((rt0.c0))))))OR(0.8241308310691324))) ORDER BY ((STRFTIME(rt1.c0, rt1.c0, t0.c0, rt0.c0, rt1.c2)) BETWEEN (((t0.c0) ISNULL)) AND (-2046169633))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt0.c1)))AND(t0.c0)))AND((((t0.c0))<=((rt0.c0))))))OR(0.8241308310691324))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((STRFTIME(rt1.c0, rt1.c0, t0.c0, rt0.c0, rt1.c2)) BETWEEN (((t0.c0) ISNULL)) AND (-2046169633))  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c0)AND(rt0.c1)))AND(t0.c0)))AND((((t0.c0))<=((rt0.c0))))))OR(0.8241308310691324))) ORDER BY ((STRFTIME(rt1.c0, rt1.c0, t0.c0, rt0.c0, rt1.c2)) BETWEEN (((t0.c0) ISNULL)) AND (-2046169633))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0)AND(rt0.c1)))AND(t0.c0)))AND((((t0.c0))<=((rt0.c0))))))OR(0.8241308310691324))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((STRFTIME(rt1.c0, rt1.c0, t0.c0, rt0.c0, rt1.c2)) BETWEEN (((t0.c0) ISNULL)) AND (-2046169633))  NULLS FIRST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((((((((rt1.c0)AND(rt0.c1)))AND(t0.c0)))AND((((t0.c0))<=((rt0.c0))))))OR(0.8241308310691324))) ORDER BY ((STRFTIME(rt1.c0, rt1.c0, t0.c0, rt0.c0, rt1.c2)) BETWEEN (((t0.c0) ISNULL)) AND (-2046169633))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.649352887426814) ORDER BY (((t0.c0)+(rt0.c2)) IN ()), ((rt0.c1)AND(((((rt1.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC, (((rt1.c2 IN (rt0.c1))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.649352887426814) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((t0.c0)+(rt0.c2)) IN ()), ((rt0.c1)AND(((((rt1.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC, (((rt1.c2 IN (rt0.c1))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.649352887426814) ORDER BY (((t0.c0)+(rt0.c2)) IN ()), ((rt0.c1)AND(((((rt1.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC, (((rt1.c2 IN (rt0.c1))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.649352887426814) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((t0.c0)+(rt0.c2)) IN ()), ((rt0.c1)AND(((((rt1.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC, (((rt1.c2 IN (rt0.c1))) ISNULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.649352887426814) ORDER BY (((t0.c0)+(rt0.c2)) IN ()), ((rt0.c1)AND(((((rt1.c0)AND(rt0.c2)))AND(rt0.c0)))) ASC, (((rt1.c2 IN (rt0.c1))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)OR(((rt1.c2) BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((((t0.c0 IN (rt1.c2, '-9223372036854775808', rt1.c1)))>>(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c2, '-9223372036854775808', rt1.c1)))>>(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)OR(((rt1.c2) BETWEEN (rt1.c2) AND (t0.c0)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)OR(((rt1.c2) BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((((t0.c0 IN (rt1.c2, '-9223372036854775808', rt1.c1)))>>(((rt1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c2, '-9223372036854775808', rt1.c1)))>>(((rt1.c2) NOTNULL)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)OR(((rt1.c2) BETWEEN (rt1.c2) AND (t0.c0)))));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE NOCASE)OR(((rt1.c2) BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((((t0.c0 IN (rt1.c2, '-9223372036854775808', rt1.c1)))>>(((rt1.c2) NOTNULL))));
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN (t0.c0 IN ()) THEN (+ (rt1.c0)) WHEN ((rt1.c2)+(t0.c0)) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)OR(rt1.c2)) END) ORDER BY (((t0.c0 IN ()))!=(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS FALSE)  WHEN (t0.c0 IN ()) THEN (+ (rt1.c0)) WHEN ((rt1.c2)+(t0.c0)) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)OR(rt1.c2)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((t0.c0 IN ()))!=(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN (t0.c0 IN ()) THEN (+ (rt1.c0)) WHEN ((rt1.c2)+(t0.c0)) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)OR(rt1.c2)) END) ORDER BY (((t0.c0 IN ()))!=(t0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c0) IS FALSE)  WHEN (t0.c0 IN ()) THEN (+ (rt1.c0)) WHEN ((rt1.c2)+(t0.c0)) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)OR(rt1.c2)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((t0.c0 IN ()))!=(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE ((rt1.c0) IS FALSE)  WHEN (t0.c0 IN ()) THEN (+ (rt1.c0)) WHEN ((rt1.c2)+(t0.c0)) THEN ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(NULL AS NUMERIC) THEN ((t0.c0)OR(rt1.c2)) END) ORDER BY (((t0.c0 IN ()))!=(t0.c0 COLLATE BINARY));
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)>>(((rt0.c2)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)>>(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)>>(((rt0.c2)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)>>(((rt0.c2)%(rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 END)>>(((rt0.c2)%(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)) IN ())) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN ('4/') AND (rt0.c2)) DESC, CAST(((rt1.c2)LIKE(rt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN ('4/') AND (rt0.c2)) DESC, CAST(((rt1.c2)LIKE(rt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)) IN ())) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN ('4/') AND (rt0.c2)) DESC, CAST(((rt1.c2)LIKE(rt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN ('4/') AND (rt0.c2)) DESC, CAST(((rt1.c2)LIKE(rt1.c0)) AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c1)AND(rt1.c1)))AND(rt0.c2)) IN ())) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN ('4/') AND (rt0.c2)) DESC, CAST(((rt1.c2)LIKE(rt1.c0)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c1)AND(rt1.c1)) COLLATE BINARY) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c1)AND(rt1.c1)) COLLATE BINARY) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)AND(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)<<(rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c1)AND(rt1.c1)) COLLATE BINARY) ORDER BY ((rt0.c2 IN ()) IN (((rt0.c0)<<(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE rt0.c1  WHEN 0.09635982102076723 THEN rt0.c0 END) AND ((('-153573706')>>(rt0.c1))))) ORDER BY ((0.23715637237391252)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE rt0.c1  WHEN 0.09635982102076723 THEN rt0.c0 END) AND ((('-153573706')>>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.23715637237391252)>=((rt0.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE rt0.c1  WHEN 0.09635982102076723 THEN rt0.c0 END) AND ((('-153573706')>>(rt0.c1))))) ORDER BY ((0.23715637237391252)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE rt0.c1  WHEN 0.09635982102076723 THEN rt0.c0 END) AND ((('-153573706')>>(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((0.23715637237391252)>=((rt0.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (CASE rt0.c1  WHEN 0.09635982102076723 THEN rt0.c0 END) AND ((('-153573706')>>(rt0.c1))))) ORDER BY ((0.23715637237391252)>=((rt0.c2 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)IS(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)IS(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c0)IS(t0.c0)))));
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON 0Xffffffffcf804aed WHERE (((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR('620929932' COLLATE RTRIM))) ORDER BY ((((519906365)>(rt1.c0))) BETWEEN ((NOT (rt0.c0))) AND ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR('620929932' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON 0xffffffffcf804aed ORDER BY ((((519906365)>(rt1.c0))) BETWEEN ((NOT (rt0.c0))) AND ((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON 0Xffffffffcf804aed WHERE (((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR('620929932' COLLATE RTRIM))) ORDER BY ((((519906365)>(rt1.c0))) BETWEEN ((NOT (rt0.c0))) AND ((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR('620929932' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN t0 ON 0xffffffffcf804aed ORDER BY ((((519906365)>(rt1.c0))) BETWEEN ((NOT (rt0.c0))) AND ((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN t0 ON 0Xffffffffcf804aed WHERE (((((((((((((rt1.c0)OR(t0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))OR('620929932' COLLATE RTRIM))) ORDER BY ((((519906365)>(rt1.c0))) BETWEEN ((NOT (rt0.c0))) AND ((+ (rt1.c1))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '530636089' THEN ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN ((rt0.c2)*(0.49262468412370497)) THEN rt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c0, rt1.c1) END WHERE ((~ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY (((rt1.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (((rt0.c2))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) AND ((CASE 0X393fdbc1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END, (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))), (NOT (rt0.c1)))))  NULLS LAST, (((((rt0.c2 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR((NOT (x''))))  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '530636089' THEN ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN ((rt0.c2)*(0.49262468412370497)) THEN rt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c0, rt1.c1) END ORDER BY (((rt1.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (((rt0.c2))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) AND ((CASE 0X393fdbc1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END, (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))), (NOT (rt0.c1)))))  NULLS LAST, (((((rt0.c2 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR((NOT (x''))))  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '530636089' THEN ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN ((rt0.c2)*(0.49262468412370497)) THEN rt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c0, rt1.c1) END WHERE ((~ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY (((rt1.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (((rt0.c2))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) AND ((CASE 0X393fdbc1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END, (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))), (NOT (rt0.c1)))))  NULLS LAST, (((((rt0.c2 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR((NOT (x''))))  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '530636089' THEN ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN ((rt0.c2)*(0.49262468412370497)) THEN rt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c0, rt1.c1) END ORDER BY (((rt1.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (((rt0.c2))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) AND ((CASE 0X393fdbc1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END, (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))), (NOT (rt0.c1)))))  NULLS LAST, (((((rt0.c2 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR((NOT (x''))))  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON CASE WHEN '530636089' THEN ((x'') NOT BETWEEN (rt0.c2) AND (rt1.c1)) WHEN ((rt0.c2)*(0.49262468412370497)) THEN rt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c0, rt1.c1) END WHERE ((~ (((((rt0.c0)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY (((rt1.c0, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, (((rt0.c2))>((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt0.c2)))) AND ((CASE 0X393fdbc1  WHEN rt1.c0 THEN rt1.c1 ELSE rt0.c0 END, (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))), (NOT (rt0.c1)))))  NULLS LAST, (((((rt0.c2 IN ()))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)))OR((NOT (x''))))  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULLIF(rt0.c1, (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1, (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(rt0.c1, (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1, (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULLIF(rt0.c1, (rt0.c2 IN ())));
SELECT ALL * FROM t0, rt0 WHERE (STRFTIME(LIKELIHOOD(rt0.c2, 0.9222754258009844), CAST(rt0.c1 AS BLOB), NULL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(LIKELIHOOD(rt0.c2, 0.9222754258009844), CAST(rt0.c1 AS BLOB), NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (STRFTIME(LIKELIHOOD(rt0.c2, 0.9222754258009844), CAST(rt0.c1 AS BLOB), NULL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME(LIKELIHOOD(rt0.c2, 0.9222754258009844), CAST(rt0.c1 AS BLOB), NULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (STRFTIME(LIKELIHOOD(rt0.c2, 0.9222754258009844), CAST(rt0.c1 AS BLOB), NULL)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT)  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (x'') ORDER BY ((((rt1.c0)-(rt1.c1)))OR(x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0)-(rt1.c1)))OR(x'' COLLATE BINARY)) DESC);
SELECT * FROM rt1, t0 WHERE (x'') ORDER BY ((((rt1.c0)-(rt1.c1)))OR(x'' COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0 ORDER BY ((((rt1.c0)-(rt1.c1)))OR(x'' COLLATE BINARY)) DESC);
SELECT * FROM rt1, t0 WHERE (x'') ORDER BY ((((rt1.c0)-(rt1.c1)))OR(x'' COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM rt1 WHERE (JULIANDAY(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c2))), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c2))), (rt1.c2 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (JULIANDAY(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c2))), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c2))), (rt1.c2 IN ()))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (JULIANDAY(((((rt1.c1)AND(rt1.c1)))OR(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c1, rt1.c0, rt1.c1))>((rt1.c0, rt1.c2, rt1.c2, rt1.c0, rt1.c2))), (rt1.c2 IN ())));
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c0);
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c0);
SELECT ALL * FROM rt1, t0 RIGHT OUTER JOIN rt0 ON rt1.c0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)IS NOT('-1658020758')) AS NUMERIC)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)IS NOT('-1658020758')) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)IS NOT('-1658020758')) AS NUMERIC)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)IS NOT('-1658020758')) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(((rt1.c1)IS NOT('-1658020758')) AS NUMERIC)) ORDER BY rt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((((((0.9759798848674339)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) WHERE (-1204720086) ORDER BY 1580602617;
SELECT SUM(count) FROM (SELECT ((-1204720086) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((((((0.9759798848674339)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) ORDER BY 1580602617);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((((((0.9759798848674339)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) WHERE (-1204720086) ORDER BY 1580602617;
SELECT SUM(count) FROM (SELECT ((-1204720086) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON ((((((0.9759798848674339)OR(rt0.c1)))OR(rt0.c1))) NOT NULL) ORDER BY 1580602617);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY CASE x''  WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c0)IS NOT(rt1.c2)) END, (NULL IN ()) ASC, ((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CASE x''  WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c0)IS NOT(rt1.c2)) END, (NULL IN ()) ASC, ((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))) IN ()) ASC);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY CASE x''  WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c0)IS NOT(rt1.c2)) END, (NULL IN ()) ASC, ((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CASE x''  WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c0)IS NOT(rt1.c2)) END, (NULL IN ()) ASC, ((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))) IN ()) ASC);
SELECT * FROM rt1 WHERE (rt1.c1) ORDER BY CASE x''  WHEN ((rt1.c2) NOT NULL) THEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)) ELSE ((rt1.c0)IS NOT(rt1.c2)) END, (NULL IN ()) ASC, ((((rt1.c2, rt1.c1, rt1.c1))=((rt1.c0, rt1.c0, rt1.c1))) IN ()) ASC;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOTNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON NULL INNER JOIN rt0 ON LIKE(ABS(DISTINCT rt1.c1), CAST(rt1.c0 AS INTEGER)) WHERE ((((~ (rt0.c2)))-(CASE '1385912451'  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0.33054216679624493 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))-(CASE '1385912451'  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0.33054216679624493 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON NULL INNER JOIN rt0 ON LIKE(ABS(DISTINCT rt1.c1), CAST(rt1.c0 AS INTEGER)));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON NULL INNER JOIN rt0 ON LIKE(ABS(DISTINCT rt1.c1), CAST(rt1.c0 AS INTEGER)) WHERE ((((~ (rt0.c2)))-(CASE '1385912451'  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0.33054216679624493 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2)))-(CASE '1385912451'  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0.33054216679624493 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON NULL INNER JOIN rt0 ON LIKE(ABS(DISTINCT rt1.c1), CAST(rt1.c0 AS INTEGER)));
SELECT * FROM rt1 RIGHT OUTER JOIN t0 ON NULL INNER JOIN rt0 ON LIKE(ABS(DISTINCT rt1.c1), CAST(rt1.c0 AS INTEGER)) WHERE ((((~ (rt0.c2)))-(CASE '1385912451'  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0.33054216679624493 ELSE rt0.c0 END)));
SELECT * FROM rt1, t0 WHERE (CAST(CAST(rt1.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(CAST(rt1.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CAST(CAST(rt1.c1 AS REAL) AS REAL));
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) AND ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) AND ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) AND ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) AND ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1)))))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END)) AND ((((rt1.c2) BETWEEN (t0.c0) AND (rt1.c1))))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)/(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1)||(rt1.c1)) END) ORDER BY x'd293' ASC  NULLS LAST, (~ (rt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)/(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1)||(rt1.c1)) END) IS TRUE)  as count FROM t0, rt1 ORDER BY x'd293' ASC  NULLS LAST, (~ (rt1.c1 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)/(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1)||(rt1.c1)) END) ORDER BY x'd293' ASC  NULLS LAST, (~ (rt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)/(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1)||(rt1.c1)) END) IS TRUE)  as count FROM t0, rt1 ORDER BY x'd293' ASC  NULLS LAST, (~ (rt1.c1 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CASE WHEN ((rt1.c2)/(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c1)||(rt1.c1)) END) ORDER BY x'd293' ASC  NULLS LAST, (~ (rt1.c1 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('');
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt0.c1)LIKE((t0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(t0.c0 AS INTEGER))&((NOT (rt0.c0)))) WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt0.c1)LIKE((t0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(t0.c0 AS INTEGER))&((NOT (rt0.c0)))) ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt0.c1)LIKE((t0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(t0.c0 AS INTEGER))&((NOT (rt0.c0)))) WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt0.c1)LIKE((t0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(t0.c0 AS INTEGER))&((NOT (rt0.c0)))) ORDER BY rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN t0 ON ((rt0.c1)LIKE((t0.c0 IN ()))) INNER JOIN rt0 ON ((CAST(t0.c0 AS INTEGER))&((NOT (rt0.c0)))) WHERE (TOTAL_CHANGES()) ORDER BY rt0.c2  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY x'9cbe' ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY x'9cbe' ASC);
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY x'9cbe' ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY x'9cbe' ASC);
SELECT * FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c2)))AND(rt0.c2))) IS TRUE)) ORDER BY x'9cbe' ASC;
SELECT * FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c1, rt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c0, rt0.c1)))) NOT NULL)) ORDER BY (((((rt1.c0, x'ce95', rt1.c2))<((0.23491753016491113, rt0.c0, rt1.c2))))/(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, rt0.c1, rt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c0, rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((((rt1.c0, x'ce95', rt1.c2))<((0.23491753016491113, rt0.c0, rt1.c2))))/(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c1, rt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c0, rt0.c1)))) NOT NULL)) ORDER BY (((((rt1.c0, x'ce95', rt1.c2))<((0.23491753016491113, rt0.c0, rt1.c2))))/(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, rt0.c1, rt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c0, rt0.c1)))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((((rt1.c0, x'ce95', rt1.c2))<((0.23491753016491113, rt0.c0, rt1.c2))))/(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE ((((((t0.c0, rt0.c1, rt1.c0)) BETWEEN ((rt0.c0, rt0.c0, rt1.c1)) AND ((rt1.c0, rt1.c0, rt0.c1)))) NOT NULL)) ORDER BY (((((rt1.c0, x'ce95', rt1.c2))<((0.23491753016491113, rt0.c0, rt1.c2))))/(rt1.c1 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((+ (rt0.c2)) IN (((rt0.c0)<>(rt0.c1)), ((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN (((rt0.c0)<>(rt0.c1)), ((((rt0.c1)OR(t0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((+ (rt0.c2)) IN (((rt0.c0)<>(rt0.c1)), ((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c2)) IN (((rt0.c0)<>(rt0.c1)), ((((rt0.c1)OR(t0.c0)))AND(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((+ (rt0.c2)) IN (((rt0.c0)<>(rt0.c1)), ((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM t0 WHERE (CAST('SOmBk箧QTe' AS BLOB)) ORDER BY json_type((~ (0.8865370085409189))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('SOmBk箧QTe' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY json_type((~ (0.8865370085409189))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST('SOmBk箧QTe' AS BLOB)) ORDER BY json_type((~ (0.8865370085409189))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('SOmBk箧QTe' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY json_type((~ (0.8865370085409189))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST('SOmBk箧QTe' AS BLOB)) ORDER BY json_type((~ (0.8865370085409189))) ASC  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)<(rt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN 1257134846 ELSE rt0.c0 END) AND (((rt1.c1) IS FALSE))) CROSS JOIN rt1 ON ((x'')<((NOT (rt0.c1)))) WHERE ((- (CASE rt1.c2  WHEN x'b8b0a369' THEN rt0.c2 END))) ORDER BY CASE rt0.c0  WHEN json_extract(rt0.c1, 0xffffffff9e8c8782) THEN (~ (rt1.c2)) ELSE (('')-(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c2  WHEN x'b8b0a369' THEN rt0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)<(rt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN 1257134846 ELSE rt0.c0 END) AND (((rt1.c1) IS FALSE))) CROSS JOIN rt1 ON ((x'')<((NOT (rt0.c1)))) ORDER BY CASE rt0.c0  WHEN json_extract(rt0.c1, 0xffffffff9e8c8782) THEN (~ (rt1.c2)) ELSE (('')-(rt0.c2)) END  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)<(rt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN 1257134846 ELSE rt0.c0 END) AND (((rt1.c1) IS FALSE))) CROSS JOIN rt1 ON ((x'')<((NOT (rt0.c1)))) WHERE ((- (CASE rt1.c2  WHEN x'b8b0a369' THEN rt0.c2 END))) ORDER BY CASE rt0.c0  WHEN json_extract(rt0.c1, 0xffffffff9e8c8782) THEN (~ (rt1.c2)) ELSE (('')-(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt1.c2  WHEN x'b8b0a369' THEN rt0.c2 END))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)<(rt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN 1257134846 ELSE rt0.c0 END) AND (((rt1.c1) IS FALSE))) CROSS JOIN rt1 ON ((x'')<((NOT (rt0.c1)))) ORDER BY CASE rt0.c0  WHEN json_extract(rt0.c1, 0xffffffff9e8c8782) THEN (~ (rt1.c2)) ELSE (('')-(rt0.c2)) END  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt0 ON ((((rt0.c1)<(rt0.c0))) BETWEEN (CASE rt1.c2  WHEN rt1.c2 THEN 1257134846 ELSE rt0.c0 END) AND (((rt1.c1) IS FALSE))) CROSS JOIN rt1 ON ((x'')<((NOT (rt0.c1)))) WHERE ((- (CASE rt1.c2  WHEN x'b8b0a369' THEN rt0.c2 END))) ORDER BY CASE rt0.c0  WHEN json_extract(rt0.c1, 0xffffffff9e8c8782) THEN (~ (rt1.c2)) ELSE (('')-(rt0.c2)) END  NULLS LAST;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt0.c0)>>(rt1.c2)))-(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt1.c2)))-(((rt0.c2)=(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt0.c0)>>(rt1.c2)))-(((rt0.c2)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt1.c2)))-(((rt0.c2)=(rt0.c1))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt0.c0)>>(rt1.c2)))-(((rt0.c2)==(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)%((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)%((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)%((+ (rt0.c1)))));
SELECT ALL * FROM rt0, t0 WHERE (CASE ABS(t0.c0)  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<=(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(t0.c0)  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ABS(t0.c0)  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<=(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(t0.c0)  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE ABS(t0.c0)  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0)<=(t0.c0)) END);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0))) AND ('-1054861006')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0))) AND ('-1054861006'))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0))) AND ('-1054861006')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0))) AND ('-1054861006'))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c1)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0))) AND ('-1054861006')));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), ((((rt0.c2)OR(rt1.c2)))OR(t0.c0)))) AND (((rt0.c2 IN ()), ((rt0.c1) ISNULL), ABS(rt1.c1))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), ((((rt0.c2)OR(rt1.c2)))OR(t0.c0)))) AND (((rt0.c2 IN ()), ((rt0.c1) ISNULL), ABS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(rt0.c0 AS INTEGER) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), ((((rt0.c2)OR(rt1.c2)))OR(t0.c0)))) AND (((rt0.c2 IN ()), ((rt0.c1) ISNULL), ABS(rt1.c1))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), ((((rt0.c2)OR(rt1.c2)))OR(t0.c0)))) AND (((rt0.c2 IN ()), ((rt0.c1) ISNULL), ABS(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(rt0.c0 AS INTEGER) DESC);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((((rt1.c0) NOTNULL), ((((rt0.c2)AND(rt1.c0)))AND(rt0.c1)), ((((rt0.c2)OR(rt1.c2)))OR(t0.c0)))) AND (((rt0.c2 IN ()), ((rt0.c1) ISNULL), ABS(rt1.c1))))) ORDER BY CAST(rt0.c0 AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON 0.03155402167952126 WHERE (((((rt0.c1)IS NOT(rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON 0.03155402167952126);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON 0.03155402167952126 WHERE (((((rt0.c1)IS NOT(rt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS NOT(rt1.c1))) ISNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON 0.03155402167952126);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON 0.03155402167952126 WHERE (((((rt0.c1)IS NOT(rt1.c1))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((t0.c0)&(rt1.c1)))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((t0.c0)&(rt1.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((t0.c0)&(rt1.c1)))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((t0.c0)&(rt1.c1)))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (NOT (((t0.c0)&(rt1.c1)))) WHERE (CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT));
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2)<<(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2)<<(rt0.c2)))) ASC);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2)<<(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2)<<(rt0.c2)))) ASC);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY ((CAST(rt1.c1 AS BLOB))LIKE(((rt1.c2)<<(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, t0.c0, rt0.c2))=((0.9903012653866184, NULL, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, rt0.c2))=((0.9903012653866184, NULL, x''))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, t0.c0, rt0.c2))=((0.9903012653866184, NULL, x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, rt0.c2))=((0.9903012653866184, NULL, x''))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, t0.c0, rt0.c2))=((0.9903012653866184, NULL, x''))) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('');
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c2))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c2))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL));
SELECT COUNT(*) FROM t0, rt0 WHERE ((- (rt0.c2))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT NULL);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(CAST(rt0.c1 AS REAL))) ORDER BY ((((rt0.c2)OR(t0.c0)))OR(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)OR(t0.c0)))OR(rt0.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(CAST(rt0.c1 AS REAL))) ORDER BY ((((rt0.c2)OR(t0.c0)))OR(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((rt0.c2)OR(t0.c0)))OR(rt0.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TYPEOF(CAST(rt0.c1 AS REAL))) ORDER BY ((((rt0.c2)OR(t0.c0)))OR(rt0.c1)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 COLLATE BINARY)>=(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>=(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 COLLATE BINARY)>=(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)>=(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0 COLLATE BINARY)>=(rt1.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))<=(rt0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))<=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))<=(rt0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))<=(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)AND(NULL)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))<=(rt0.c0 COLLATE BINARY))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1tk,嵗]^t' END) AND (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1tk,嵗]^t' END) AND (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1tk,嵗]^t' END) AND (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1tk,嵗]^t' END) AND (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE '1tk,嵗]^t' END) AND (((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (INSTR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), (- (x'0ef311a6'))));
SELECT SUM(count) FROM (SELECT ((INSTR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), (- (x'0ef311a6')))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (INSTR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), (- (x'0ef311a6'))));
SELECT SUM(count) FROM (SELECT ((INSTR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), (- (x'0ef311a6')))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (INSTR((((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c1))), (- (x'0ef311a6'))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (json(rt1.c1) IN (((NULL)IS NOT(rt1.c2)))) CROSS JOIN rt0 ON 0.7725693537794054 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (json(rt1.c1) IN (((NULL)IS NOT(rt1.c2)))) CROSS JOIN rt0 ON 0.7725693537794054);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (json(rt1.c1) IN (((NULL)IS NOT(rt1.c2)))) CROSS JOIN rt0 ON 0.7725693537794054 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (json(rt1.c1) IN (((NULL)IS NOT(rt1.c2)))) CROSS JOIN rt0 ON 0.7725693537794054);
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON (json(rt1.c1) IN (((NULL)IS NOT(rt1.c2)))) CROSS JOIN rt0 ON 0.7725693537794054 WHERE (x'');
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(rt1.c2, 0.20666037236930712) WHERE ((((((rt0.c2))<>((rt1.c2))))<<(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((rt1.c2))))<<(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(rt1.c2, 0.20666037236930712));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(rt1.c2, 0.20666037236930712) WHERE ((((((rt0.c2))<>((rt1.c2))))<<(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<>((rt1.c2))))<<(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(rt1.c2, 0.20666037236930712));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(rt1.c2, 0.20666037236930712) WHERE ((((((rt0.c2))<>((rt1.c2))))<<(((rt0.c1) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY (~ ((((rt1.c1, 0.6947591248940557, rt1.c1))=((rt1.c2, rt1.c1, '#x7v'))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY (~ ((((rt1.c1, 0.6947591248940557, rt1.c1))=((rt1.c2, rt1.c1, '#x7v'))))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY (~ ((((rt1.c1, 0.6947591248940557, rt1.c1))=((rt1.c2, rt1.c1, '#x7v'))))) ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY (~ ((((rt1.c1, 0.6947591248940557, rt1.c1))=((rt1.c2, rt1.c1, '#x7v'))))) ASC);
SELECT COUNT(*) FROM rt1 WHERE ((rt1.c2 COLLATE BINARY IN ())) ORDER BY (~ ((((rt1.c1, 0.6947591248940557, rt1.c1))=((rt1.c2, rt1.c1, '#x7v'))))) ASC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(''))) BETWEEN ((NOT (rt0.c2))) AND (SQLITE_SOURCE_ID())) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(''))) BETWEEN ((NOT (rt0.c2))) AND (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(''))) BETWEEN ((NOT (rt0.c2))) AND (SQLITE_SOURCE_ID())) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(''))) BETWEEN ((NOT (rt0.c2))) AND (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c2)))OR(rt0.c1)))AND(''))) BETWEEN ((NOT (rt0.c2))) AND (SQLITE_SOURCE_ID())) WHERE ((((rt0.c1)) NOT BETWEEN ((((rt1.c0) NOT NULL))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(x'' AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(x'' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(x'' AS BLOB)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c0))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(x'' AS BLOB))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2 IN ()))=(rt1.c2 COLLATE NOCASE)) WHERE (0.19519908916019924) ORDER BY CAST(((rt1.c2)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.19519908916019924) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2 IN ()))=(rt1.c2 COLLATE NOCASE)) ORDER BY CAST(((rt1.c2)||(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2 IN ()))=(rt1.c2 COLLATE NOCASE)) WHERE (0.19519908916019924) ORDER BY CAST(((rt1.c2)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.19519908916019924) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2 IN ()))=(rt1.c2 COLLATE NOCASE)) ORDER BY CAST(((rt1.c2)||(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (((rt1.c2 IN ()))=(rt1.c2 COLLATE NOCASE)) WHERE (0.19519908916019924) ORDER BY CAST(((rt1.c2)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((((t0.c0)OR(rt1.c1)))AND(0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(t0.c0)))+((- (rt0.c2)))) WHERE (CASE RTRIM(rt0.c0)  WHEN t0.c0 COLLATE BINARY THEN rt0.c1 ELSE ((239439887)<>(rt0.c0)) END) ORDER BY CASE json_type(rt1.c0)  WHEN t0.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN 0Xffffffff8a6fc8ab THEN (t0.c0 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((t0.c0)LIKE(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE RTRIM(rt0.c0)  WHEN t0.c0 COLLATE BINARY THEN rt0.c1 ELSE ((239439887)<>(rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((((t0.c0)OR(rt1.c1)))AND(0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(t0.c0)))+((- (rt0.c2)))) ORDER BY CASE json_type(rt1.c0)  WHEN t0.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN 0Xffffffff8a6fc8ab THEN (t0.c0 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((t0.c0)LIKE(rt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((((t0.c0)OR(rt1.c1)))AND(0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(t0.c0)))+((- (rt0.c2)))) WHERE (CASE RTRIM(rt0.c0)  WHEN t0.c0 COLLATE BINARY THEN rt0.c1 ELSE ((239439887)<>(rt0.c0)) END) ORDER BY CASE json_type(rt1.c0)  WHEN t0.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN 0Xffffffff8a6fc8ab THEN (t0.c0 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((t0.c0)LIKE(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE RTRIM(rt0.c0)  WHEN t0.c0 COLLATE BINARY THEN rt0.c1 ELSE ((239439887)<>(rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((((t0.c0)OR(rt1.c1)))AND(0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(t0.c0)))+((- (rt0.c2)))) ORDER BY CASE json_type(rt1.c0)  WHEN t0.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN 0Xffffffff8a6fc8ab THEN (t0.c0 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((t0.c0)LIKE(rt0.c2)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON ((((((((((((((t0.c0)OR(rt1.c1)))AND(0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt1.c0)))AND(t0.c0)))+((- (rt0.c2)))) WHERE (CASE RTRIM(rt0.c0)  WHEN t0.c0 COLLATE BINARY THEN rt0.c1 ELSE ((239439887)<>(rt0.c0)) END) ORDER BY CASE json_type(rt1.c0)  WHEN t0.c0 COLLATE BINARY THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) WHEN 0Xffffffff8a6fc8ab THEN (t0.c0 IN ()) WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN CAST(rt0.c0 AS INTEGER) ELSE ((t0.c0)LIKE(rt0.c2)) END  NULLS LAST;
SELECT * FROM rt1 WHERE ((- (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt1.c1))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (rt1.c1)));
SELECT ALL * FROM rt1 WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((- (rt1.c0)));
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.44926196143166675);
SELECT SUM(count) FROM (SELECT ((0.44926196143166675) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.44926196143166675);
SELECT SUM(count) FROM (SELECT ((0.44926196143166675) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.44926196143166675);
SELECT ALL * FROM rt0, rt1 WHERE (x'87c3') ORDER BY MIN((~ (NULL)), ((rt1.c2) NOTNULL)) DESC  NULLS LAST, ((((rt1.c1)||(rt1.c1))) ISNULL), ((((~ (rt0.c0)), TRIM(DISTINCT rt0.c2), CAST(rt0.c2 AS TEXT)))=(((((rt1.c0)) BETWEEN ((0.42981004784682775)) AND ((rt1.c2))), (rt1.c1 IN (rt1.c2)), ((rt1.c0)<<(0.7447007591675399)))));
SELECT SUM(count) FROM (SELECT ((x'87c3') IS TRUE)  as count FROM rt0, rt1 ORDER BY MIN((~ (NULL)), ((rt1.c2) NOTNULL)) DESC  NULLS LAST, ((((rt1.c1)||(rt1.c1))) ISNULL), ((((~ (rt0.c0)), TRIM(DISTINCT rt0.c2), CAST(rt0.c2 AS TEXT)))==(((((rt1.c0)) BETWEEN ((0.42981004784682775)) AND ((rt1.c2))), (rt1.c1 IN (rt1.c2)), ((rt1.c0)<<(0.7447007591675399))))));
SELECT ALL * FROM rt0, rt1 WHERE (x'87c3') ORDER BY MIN((~ (NULL)), ((rt1.c2) NOTNULL)) DESC  NULLS LAST, ((((rt1.c1)||(rt1.c1))) ISNULL), ((((~ (rt0.c0)), TRIM(DISTINCT rt0.c2), CAST(rt0.c2 AS TEXT)))=(((((rt1.c0)) BETWEEN ((0.42981004784682775)) AND ((rt1.c2))), (rt1.c1 IN (rt1.c2)), ((rt1.c0)<<(0.7447007591675399)))));
SELECT SUM(count) FROM (SELECT ((x'87c3') IS TRUE)  as count FROM rt0, rt1 ORDER BY MIN((~ (NULL)), ((rt1.c2) NOTNULL)) DESC  NULLS LAST, ((((rt1.c1)||(rt1.c1))) ISNULL), ((((~ (rt0.c0)), TRIM(DISTINCT rt0.c2), CAST(rt0.c2 AS TEXT)))==(((((rt1.c0)) BETWEEN ((0.42981004784682775)) AND ((rt1.c2))), (rt1.c1 IN (rt1.c2)), ((rt1.c0)<<(0.7447007591675399))))));
SELECT ALL * FROM rt0, rt1 WHERE (x'87c3') ORDER BY MIN((~ (NULL)), ((rt1.c2) NOTNULL)) DESC  NULLS LAST, ((((rt1.c1)||(rt1.c1))) ISNULL), ((((~ (rt0.c0)), TRIM(DISTINCT rt0.c2), CAST(rt0.c2 AS TEXT)))=(((((rt1.c0)) BETWEEN ((0.42981004784682775)) AND ((rt1.c2))), (rt1.c1 IN (rt1.c2)), ((rt1.c0)<<(0.7447007591675399)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt1.c2))) AND (((0.7881721175206183)LIKE(rt0.c2))))) ORDER BY ((CAST(rt1.c0 AS BLOB))GLOB((('-1345268940') BETWEEN (rt1.c2) AND (rt1.c0)))), CASE rt0.c1  WHEN CASE WHEN rt0.c1 THEN x'' END THEN rt1.c1 WHEN ((((-2.14409413E9)OR(rt1.c1)))OR(rt0.c1)) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) WHEN ROUND(rt1.c2, rt0.c1) THEN ((rt0.c0)<=(NULL)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt1.c2))) AND (((0.7881721175206183)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS BLOB))GLOB((('-1345268940') BETWEEN (rt1.c2) AND (rt1.c0)))), CASE rt0.c1  WHEN CASE WHEN rt0.c1 THEN x'' END THEN rt1.c1 WHEN ((((-2.14409413E9)OR(rt1.c1)))OR(rt0.c1)) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) WHEN ROUND(rt1.c2, rt0.c1) THEN ((rt0.c0)<=(NULL)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt1.c2))) AND (((0.7881721175206183)LIKE(rt0.c2))))) ORDER BY ((CAST(rt1.c0 AS BLOB))GLOB((('-1345268940') BETWEEN (rt1.c2) AND (rt1.c0)))), CASE rt0.c1  WHEN CASE WHEN rt0.c1 THEN x'' END THEN rt1.c1 WHEN ((((-2.14409413E9)OR(rt1.c1)))OR(rt0.c1)) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) WHEN ROUND(rt1.c2, rt0.c1) THEN ((rt0.c0)<=(NULL)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt1.c2))) AND (((0.7881721175206183)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt1.c0 AS BLOB))GLOB((('-1345268940') BETWEEN (rt1.c2) AND (rt1.c0)))), CASE rt0.c1  WHEN CASE WHEN rt0.c1 THEN x'' END THEN rt1.c1 WHEN ((((-2.14409413E9)OR(rt1.c1)))OR(rt0.c1)) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) WHEN ROUND(rt1.c2, rt0.c1) THEN ((rt0.c0)<=(NULL)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt1.c2))) AND (((0.7881721175206183)LIKE(rt0.c2))))) ORDER BY ((CAST(rt1.c0 AS BLOB))GLOB((('-1345268940') BETWEEN (rt1.c2) AND (rt1.c0)))), CASE rt0.c1  WHEN CASE WHEN rt0.c1 THEN x'' END THEN rt1.c1 WHEN ((((-2.14409413E9)OR(rt1.c1)))OR(rt0.c1)) THEN ((((rt1.c1)AND(rt1.c2)))OR(rt0.c2)) WHEN ROUND(rt1.c2, rt0.c1) THEN ((rt0.c0)<=(NULL)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(((NULL) ISNULL))) WHERE ((+ ((((rt1.c0))<>((t0.c0)))))) ORDER BY (((rt1.c0 COLLATE BINARY))>=((''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0))!=((t0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(((NULL) ISNULL))) ORDER BY (((rt1.c0 COLLATE BINARY))>=((''))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(((NULL) ISNULL))) WHERE ((+ ((((rt1.c0))<>((t0.c0)))))) ORDER BY (((rt1.c0 COLLATE BINARY))>=((''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt1.c0))!=((t0.c0)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(((NULL) ISNULL))) ORDER BY (((rt1.c0 COLLATE BINARY))>=((''))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON ((CASE WHEN rt1.c2 THEN rt1.c0 END)+(((NULL) ISNULL))) WHERE ((+ ((((rt1.c0))<>((t0.c0)))))) ORDER BY (((rt1.c0 COLLATE BINARY))>=((''))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (-374208541);
SELECT SUM(count) FROM (SELECT ALL ((-374208541) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-374208541);
SELECT SUM(count) FROM (SELECT ALL ((-374208541) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (-374208541);
SELECT ALL * FROM t0, rt1 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c0)) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c0)) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((LIKELY(t0.c0)) NOT BETWEEN (((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (rt1.c0 COLLATE BINARY)));
SELECT * FROM rt0, t0 WHERE (((NULL)+('-1111899674'))) ORDER BY (((x'c1d7' IN ()))<((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+('-1111899674'))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((x'c1d7' IN ()))<((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((NULL)+('-1111899674'))) ORDER BY (((x'c1d7' IN ()))<((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+('-1111899674'))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((x'c1d7' IN ()))<((rt0.c0 IN ())))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((NULL)+('-1111899674'))) ORDER BY (((x'c1d7' IN ()))<((rt0.c0 IN ())))  NULLS LAST;
SELECT * FROM rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (((rt1.c0) IS TRUE)) AND ((rt1.c1 IN ()))));
SELECT * FROM t0 WHERE ((((('-21615335') NOT NULL))GLOB(((('[?~A^'))=((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((('-21615335') NOT NULL))GLOB(((('[?~A^'))=((t0.c0)))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((('-21615335') NOT NULL))GLOB(((('[?~A^'))=((t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((('-21615335') NOT NULL))GLOB(((('[?~A^'))=((t0.c0)))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE ((((('-21615335') NOT NULL))GLOB(((('[?~A^'))=((t0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))LIKE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))LIKE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))LIKE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)/(rt0.c1)))LIKE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)/(rt0.c1)))LIKE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND (((((((((('211779825')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND (((((((((('211779825')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND (((((((((('211779825')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND (((((((((('211779825')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((LIKELY(rt0.c2))) AND (((((((((('211779825')AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)==(rt1.c0)))))AND(UNLIKELY(rt0.c0))))AND(((rt1.c2)>(rt0.c1)))))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY ((rt0.c0)>>(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)==(rt1.c0)))))AND(UNLIKELY(rt0.c0))))AND(((rt1.c2)>(rt0.c1)))))AND(((rt1.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c0)>>(rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)==(rt1.c0)))))AND(UNLIKELY(rt0.c0))))AND(((rt1.c2)>(rt0.c1)))))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY ((rt0.c0)>>(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)==(rt1.c0)))))AND(UNLIKELY(rt0.c0))))AND(((rt1.c2)>(rt0.c1)))))AND(((rt1.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((rt0.c0)>>(rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((((((CAST(rt0.c1 AS BLOB))OR(((rt0.c2)==(rt1.c0)))))AND(UNLIKELY(rt0.c0))))AND(((rt1.c2)>(rt0.c1)))))AND(((rt1.c1)LIKE(rt1.c2))))) ORDER BY ((rt0.c0)>>(rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE NOCASE)))) ORDER BY (COALESCE(rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE NOCASE)))) ORDER BY (COALESCE(rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE NOCASE)))) ORDER BY (COALESCE(rt0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c0 IN (rt0.c2, rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (rt0.c2, rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c0 IN (rt0.c2, rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN (rt0.c2, rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c0 IN (rt0.c2, rt0.c0)) AS REAL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))<=((rt1.c1 IN ()))) WHERE (((LOWER(rt1.c1))AND(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt1.c1))AND(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))<=((rt1.c1 IN ()))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))<=((rt1.c1 IN ()))) WHERE (((LOWER(rt1.c1))AND(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt1.c1))AND(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))<=((rt1.c1 IN ()))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c1 IN ()))<=((rt1.c1 IN ()))) WHERE (((LOWER(rt1.c1))AND(rt1.c2 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN ('183330317') AND (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)%(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN ('183330317') AND (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN ('183330317') AND (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)%(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) BETWEEN ('183330317') AND (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)%(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE ((t0.c0) BETWEEN ('183330317') AND (t0.c0))  WHEN t0.c0 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) ELSE ((t0.c0)%(t0.c0)) END);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) ORDER BY rt1.c2  NULLS FIRST, 0.4250298719656087 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY rt1.c2  NULLS FIRST, 0.4250298719656087 DESC);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) ORDER BY rt1.c2  NULLS FIRST, 0.4250298719656087 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY rt1.c2  NULLS FIRST, 0.4250298719656087 DESC);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) ORDER BY rt1.c2  NULLS FIRST, 0.4250298719656087 DESC;
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM t0, rt0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((((((((((t0.c0)OR(t0.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt0.c0)))AND(((rt0.c1) ISNULL))))OR(((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE ((((((rt1.c0)/(rt1.c2))))>((CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)/(rt1.c2))))>((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE ((((((rt1.c0)/(rt1.c2))))>((CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)/(rt1.c2))))>((CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0);
SELECT ALL * FROM rt1 NATURAL JOIN t0 WHERE ((((((rt1.c0)/(rt1.c2))))>((CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(t0.c0)))LIKE((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(t0.c0)))LIKE((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(t0.c0)))LIKE((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(t0.c0)))LIKE((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c0)))AND(t0.c0)))AND(rt0.c0)))AND(t0.c0)))LIKE((rt0.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0 NATURAL JOIN t0 WHERE ((- ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, (~ (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))), (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN (rt1.c1)), t0.c0, (((rt0.c1))>=((0.7706087877836811))))) AND ((TYPEOF(DISTINCT rt0.c0), (NOT (t0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0 ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, (~ (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))), (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN (rt1.c1)), t0.c0, (((rt0.c1))>=((0.7706087877836811))))) AND ((TYPEOF(DISTINCT rt0.c0), (NOT (t0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 NATURAL JOIN t0 WHERE ((- ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, (~ (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))), (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN (rt1.c1)), t0.c0, (((rt0.c1))>=((0.7706087877836811))))) AND ((TYPEOF(DISTINCT rt0.c0), (NOT (t0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt1, rt0 NATURAL JOIN t0 ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, (~ (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))), (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN (rt1.c1)), t0.c0, (((rt0.c1))>=((0.7706087877836811))))) AND ((TYPEOF(DISTINCT rt0.c0), (NOT (t0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 NATURAL JOIN t0 WHERE ((- ((((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY (+ (rt0.c0 COLLATE BINARY))  NULLS FIRST, (~ (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1)))), (((rt0.c1, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN (rt1.c1)), t0.c0, (((rt0.c1))>=((0.7706087877836811))))) AND ((TYPEOF(DISTINCT rt0.c0), (NOT (t0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c0)))))  NULLS LAST;
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN 0.4781247720550723 COLLATE NOCASE THEN '1373402336' ELSE (+ ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN 0.4781247720550723 COLLATE NOCASE THEN '1373402336' ELSE (+ ('')) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN 0.4781247720550723 COLLATE NOCASE THEN '1373402336' ELSE (+ ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN 0.4781247720550723 COLLATE NOCASE THEN '1373402336' ELSE (+ ('')) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE (CASE CASE rt1.c0  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c2 END  WHEN CASE rt1.c2  WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt1.c0 END THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1)) THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN 0.4781247720550723 COLLATE NOCASE THEN '1373402336' ELSE (+ ('')) END);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c2)AND(((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c2)AND(((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (((((rt1.c2)AND(((((rt0.c2)AND(rt0.c0)))AND(rt1.c0)))))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('-0.0')AND(((rt1.c1) NOTNULL))))AND(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((('-0.0')AND(((rt1.c1) NOTNULL))))AND(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('-0.0')AND(((rt1.c1) NOTNULL))))AND(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((('-0.0')AND(((rt1.c1) NOTNULL))))AND(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((('-0.0')AND(((rt1.c1) NOTNULL))))AND(((rt1.c1) IS TRUE))));
SELECT ALL * FROM rt1, rt0, t0 WHERE (rt0.c0) ORDER BY ((((NULLIF(DISTINCT t0.c0, rt1.c0))OR(((rt0.c0)>(x'')))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((NULLIF(DISTINCT t0.c0, rt1.c0))OR(((rt0.c0)>(x'')))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (rt0.c0) ORDER BY ((((NULLIF(DISTINCT t0.c0, rt1.c0))OR(((rt0.c0)>(x'')))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((NULLIF(DISTINCT t0.c0, rt1.c0))OR(((rt0.c0)>(x'')))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0 WHERE (rt0.c0) ORDER BY ((((NULLIF(DISTINCT t0.c0, rt1.c0))OR(((rt0.c0)>(x'')))))AND(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN rt0.c0 ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN rt0.c0 ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN rt0.c0 ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN rt0.c0 ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (x'') AND (NULL)) THEN rt0.c0 ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (3308455.0)))))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS INTEGER))OR(((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (3308455.0)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (3308455.0)))))AND(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt0.c1 AS INTEGER))OR(((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (3308455.0)))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(((((((((rt1.c0)OR(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)))OR(rt0.c0)))))AND((rt0.c2 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (3308455.0)))))AND(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1 WHERE ((((((((((+ (rt1.c1)))AND(GLOB(rt1.c2, rt1.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(rt1.c2))) ORDER BY ((((rt1.c1) NOTNULL))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST, (NULL IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c1)))AND(GLOB(rt1.c2, rt1.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOTNULL))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST, (NULL IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((((((+ (rt1.c1)))AND(GLOB(rt1.c2, rt1.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(rt1.c2))) ORDER BY ((((rt1.c1) NOTNULL))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST, (NULL IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt1.c1)))AND(GLOB(rt1.c2, rt1.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOTNULL))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST, (NULL IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((((((((+ (rt1.c1)))AND(GLOB(rt1.c2, rt1.c1))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))OR(rt1.c2))) ORDER BY ((((rt1.c1) NOTNULL))AND(((((rt1.c1)OR(rt1.c1)))OR(rt1.c2))))  NULLS LAST, (NULL IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((rt1.c1 IN ()));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))LIKE(((rt1.c1) IS TRUE)))) ORDER BY (((((rt0.c0, rt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt1.c0))))>((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(rt0.c0)))LIKE(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c0, rt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt1.c0))))>((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))LIKE(((rt1.c1) IS TRUE)))) ORDER BY (((((rt0.c0, rt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt1.c0))))>((+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)+(rt0.c0)))LIKE(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((rt0.c0, rt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt1.c0))))>((+ (rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c1)+(rt0.c0)))LIKE(((rt1.c1) IS TRUE)))) ORDER BY (((((rt0.c0, rt1.c0, rt0.c2))>=((rt0.c2, rt0.c2, rt1.c0))))>((+ (rt1.c1))));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)OR(t0.c0)), ((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c0)OR(t0.c0)), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)OR(t0.c0)), ((t0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c0)OR(t0.c0)), ((t0.c0) NOT NULL))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)OR(t0.c0)), ((t0.c0) NOT NULL)));
SELECT ALL * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c2, ((rt0.c2)-(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST, ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(NULL)))AND((NOT (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN (rt1.c2, ((rt0.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0  NULLS LAST, ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(NULL)))AND((NOT (rt1.c2)))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c2, ((rt0.c2)-(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST, ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(NULL)))AND((NOT (rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS BLOB) IN (rt1.c2, ((rt0.c2)-(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c0  NULLS LAST, ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(NULL)))AND((NOT (rt1.c2)))) DESC);
SELECT ALL * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS BLOB) IN (rt1.c2, ((rt0.c2)-(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST, ((((((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))OR((rt0.c0 IN ()))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))))AND(NULL)))AND((NOT (rt1.c2)))) DESC;
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY rt1.c1 ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt1.c0);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (+ (((((t0.c0)AND(rt1.c2)))OR(rt1.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN (rt0.c1, rt1.c1)) COLLATE RTRIM COLLATE RTRIM WHERE (CAST(x'833c' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'833c' AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (+ (((((t0.c0)AND(rt1.c2)))OR(rt1.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN (rt0.c1, rt1.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON (+ (((((t0.c0)AND(rt1.c2)))OR(rt1.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN (rt0.c1, rt1.c1)) COLLATE RTRIM COLLATE RTRIM WHERE (CAST(x'833c' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(x'833c' AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (+ (((((t0.c0)AND(rt1.c2)))OR(rt1.c2)))) LEFT OUTER JOIN t0 ON (t0.c0 IN (rt0.c1, rt1.c1)) COLLATE RTRIM COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)), '620929932'));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)), '620929932')) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)), '620929932'));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)), '620929932')) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (IFNULL(((((rt1.c2)OR(rt1.c1)))AND(rt1.c0)), '620929932'));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (NULL))) ORDER BY ((NULL) BETWEEN (((rt0.c2)%(rt0.c1))) AND (INSTR(rt0.c2, rt0.c1))) DESC, (~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) BETWEEN (((rt0.c2)%(rt0.c1))) AND (INSTR(rt0.c2, rt0.c1))) DESC, (~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (NULL))) ORDER BY ((NULL) BETWEEN (((rt0.c2)%(rt0.c1))) AND (INSTR(rt0.c2, rt0.c1))) DESC, (~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((NULL) BETWEEN (((rt0.c2)%(rt0.c1))) AND (INSTR(rt0.c2, rt0.c1))) DESC, (~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (NULL))) ORDER BY ((NULL) BETWEEN (((rt0.c2)%(rt0.c1))) AND (INSTR(rt0.c2, rt0.c1))) DESC, (~ ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))!=((rt0.c0))))<<(PRINTF(rt0.c2))) WHERE ((((t0.c0)&(rt0.c0)) IN ())) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c2, '%j?[', rt0.c0))>=((rt0.c0, x'7acb', rt0.c1)))))) ASC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((((rt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<>((rt0.c0))))<<(PRINTF(rt0.c2))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c2, '%j?[', rt0.c0))>=((rt0.c0, x'7acb', rt0.c1)))))) ASC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((((rt0.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))!=((rt0.c0))))<<(PRINTF(rt0.c2))) WHERE ((((t0.c0)&(rt0.c0)) IN ())) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c2, '%j?[', rt0.c0))>=((rt0.c0, x'7acb', rt0.c1)))))) ASC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((((rt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))<>((rt0.c0))))<<(PRINTF(rt0.c2))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c2, '%j?[', rt0.c0))>=((rt0.c0, x'7acb', rt0.c1)))))) ASC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((((rt0.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((rt0.c0))!=((rt0.c0))))<<(PRINTF(rt0.c2))) WHERE ((((t0.c0)&(rt0.c0)) IN ())) ORDER BY CAST(((rt0.c0)GLOB(rt0.c1)) AS BLOB) ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN ((rt0.c1 COLLATE RTRIM)) AND (((((rt0.c2, '%j?[', rt0.c0))>=((rt0.c0, x'7acb', rt0.c1)))))) ASC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>=((((rt0.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))>=((NULL)))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND('5')))OR(((rt0.c0)>=(rt0.c2)))))AND(LIKELY(rt0.c0))))OR(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))>=((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND('5')))OR(((rt0.c0)>=(rt0.c2)))))AND(LIKELY(rt0.c0))))OR(((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))>=((NULL)))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND('5')))OR(((rt0.c0)>=(rt0.c2)))))AND(LIKELY(rt0.c0))))OR(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))>=((NULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND('5')))OR(((rt0.c0)>=(rt0.c2)))))AND(LIKELY(rt0.c0))))OR(((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))>=((NULL)))) ORDER BY (((((((((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, NULL)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND('5')))OR(((rt0.c0)>=(rt0.c2)))))AND(LIKELY(rt0.c0))))OR(((rt0.c0) ISNULL)));
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN rt1);
SELECT ALL * FROM rt0 NATURAL JOIN rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c2 IN ()) COLLATE BINARY) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM ASC;
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c0)IS(((rt0.c2)>=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(((rt0.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c0)IS(((rt0.c2)>=(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)IS(((rt0.c2)>=(rt1.c2))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((rt0.c0)IS(((rt0.c2)>=(rt1.c2)))));
SELECT * FROM t0 WHERE (json_object((+ (t0.c0)), LIKELIHOOD(t0.c0, 0.33981233240663977), ((t0.c0)AND(t0.c0)), ((t0.c0)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_object((+ (t0.c0)), LIKELIHOOD(t0.c0, 0.33981233240663977), ((t0.c0)AND(t0.c0)), ((t0.c0)IS(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_object((+ (t0.c0)), LIKELIHOOD(t0.c0, 0.33981233240663977), ((t0.c0)AND(t0.c0)), ((t0.c0)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_object((+ (t0.c0)), LIKELIHOOD(t0.c0, 0.33981233240663977), ((t0.c0)AND(t0.c0)), ((t0.c0)IS(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (json_object((+ (t0.c0)), LIKELIHOOD(t0.c0, 0.33981233240663977), ((t0.c0)AND(t0.c0)), ((t0.c0)IS(t0.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c2) ISNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)-(rt1.c1))) NOT BETWEEN (rt1.c2) AND (((rt1.c2) ISNULL))));
SELECT * FROM t0, rt0, rt1 WHERE (CASE rt1.c0  WHEN ((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)) THEN (((rt1.c0, rt0.c1, t0.c0)) BETWEEN ((rt1.c2, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c2, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN ((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)) THEN (((rt1.c0, rt0.c1, t0.c0)) BETWEEN ((rt1.c2, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c2, rt0.c1))) END) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CASE rt1.c0  WHEN ((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)) THEN (((rt1.c0, rt0.c1, t0.c0)) BETWEEN ((rt1.c2, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c2, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c0  WHEN ((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)) THEN (((rt1.c0, rt0.c1, t0.c0)) BETWEEN ((rt1.c2, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c2, rt0.c1))) END) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE (CASE rt1.c0  WHEN ((((((((rt0.c1)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c0)))OR(t0.c0)) THEN (((rt1.c0, rt0.c1, t0.c0)) BETWEEN ((rt1.c2, t0.c0, t0.c0)) AND ((rt1.c1, rt1.c2, rt0.c1))) END);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=((((rt0.c0)&(rt0.c0)))))) ORDER BY CAST(rt0.c1 AS REAL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))==((((rt0.c0)&(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c1 AS REAL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=((((rt0.c0)&(rt0.c0)))))) ORDER BY CAST(rt0.c1 AS REAL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))==((((rt0.c0)&(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(rt0.c1 AS REAL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))=((((rt0.c0)&(rt0.c0)))))) ORDER BY CAST(rt0.c1 AS REAL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 END THEN ((t0.c0) BETWEEN (rt0.c0) AND (NULL)) ELSE ((rt0.c0)<>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 END THEN ((t0.c0) BETWEEN (rt0.c0) AND (NULL)) ELSE ((rt0.c0)<>(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 END THEN ((t0.c0) BETWEEN (rt0.c0) AND (NULL)) ELSE ((rt0.c0)<>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE RTRIM  WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 END THEN ((t0.c0) BETWEEN (rt0.c0) AND (NULL)) ELSE ((rt0.c0)<>(rt0.c2)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c0 END THEN ((t0.c0) BETWEEN (rt0.c0) AND (NULL)) ELSE ((rt0.c0)<>(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8488767516010255);
SELECT SUM(count) FROM (SELECT ((0.8488767516010255) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8488767516010255);
SELECT SUM(count) FROM (SELECT ((0.8488767516010255) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.8488767516010255);
SELECT ALL * FROM t0 WHERE (((json_array_length(t0.c0, x'')) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)=(t0.c0))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(t0.c0, x'')) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (((json_array_length(t0.c0, x'')) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)=(t0.c0))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(t0.c0, x'')) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)==(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (((json_array_length(t0.c0, x'')) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c0)=(t0.c0))))) ORDER BY CAST(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS INTEGER);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))LIKE(rt1.c2)) WHERE ('1L膫');
SELECT SUM(count) FROM (SELECT (('1L膫') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))LIKE(rt1.c2)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))LIKE(rt1.c2)) WHERE ('1L膫');
SELECT SUM(count) FROM (SELECT (('1L膫') IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))LIKE(rt1.c2)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0)))LIKE(rt1.c2)) WHERE ('1L膫');
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ('2032175668') ORDER BY ((rt0.c1) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE NOCASE, (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('') AND (CAST(t0.c0 AS REAL))) DESC, ((((rt0.c0) IS TRUE))>((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('2032175668') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c1) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE NOCASE, (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('') AND (CAST(t0.c0 AS REAL))) DESC, ((((rt0.c0) IS TRUE))>((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ('2032175668') ORDER BY ((rt0.c1) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE NOCASE, (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('') AND (CAST(t0.c0 AS REAL))) DESC, ((((rt0.c0) IS TRUE))>((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (('2032175668') IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((rt0.c1) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE NOCASE, (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('') AND (CAST(t0.c0 AS REAL))) DESC, ((((rt0.c0) IS TRUE))>((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE ('2032175668') ORDER BY ((rt0.c1) BETWEEN (rt1.c1) AND (t0.c0)) COLLATE NOCASE, (((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN ('') AND (CAST(t0.c0 AS REAL))) DESC, ((((rt0.c0) IS TRUE))>((rt0.c1 IN ())));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2)<=(t0.c0))) NOT NULL)) ORDER BY (~ ((((rt1.c2))!=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ ((((rt1.c2))<>((t0.c0))))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2)<=(t0.c0))) NOT NULL)) ORDER BY (~ ((((rt1.c2))!=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ ((((rt1.c2))<>((t0.c0))))));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((rt1.c2)<=(t0.c0))) NOT NULL)) ORDER BY (~ ((((rt1.c2))!=((t0.c0)))));
SELECT * FROM rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (x'');
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL) WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL) WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT ALL * FROM rt1 CROSS JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(t0.c0))) ISNULL) WHERE (((NOT (rt1.c2)) IN ()));
SELECT * FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((t0.c0)AND(t0.c0)) COLLATE BINARY);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND('0.05952524140565296')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND('0.05952524140565296'))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND('0.05952524140565296')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND('0.05952524140565296'))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END)AND('0.05952524140565296')));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))|(t0.c0))) ORDER BY ((PRINTF(t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))|(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0)) ISNULL));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))|(t0.c0))) ORDER BY ((PRINTF(t0.c0)) ISNULL);
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC))|(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((PRINTF(t0.c0)) ISNULL));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))|(t0.c0))) ORDER BY ((PRINTF(t0.c0)) ISNULL);
SELECT ALL * FROM t0, rt1 WHERE ((0.9842701011046434 IN ())) ORDER BY (CAST(rt1.c2 AS TEXT) IN (t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((0.9842701011046434 IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY (CAST(rt1.c2 AS TEXT) IN (t0.c0)) DESC);
SELECT ALL * FROM t0, rt1 WHERE ((0.9842701011046434 IN ())) ORDER BY (CAST(rt1.c2 AS TEXT) IN (t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((0.9842701011046434 IN ())) IS TRUE)  as count FROM t0, rt1 ORDER BY (CAST(rt1.c2 AS TEXT) IN (t0.c0)) DESC);
SELECT ALL * FROM t0, rt1 WHERE ((0.9842701011046434 IN ())) ORDER BY (CAST(rt1.c2 AS TEXT) IN (t0.c0)) DESC;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE)/(CAST(rt1.c2 AS TEXT)))) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)/(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE)/(CAST(rt1.c2 AS TEXT)))) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)/(CAST(rt1.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c1 COLLATE RTRIM)<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c2 COLLATE NOCASE)/(CAST(rt1.c2 AS TEXT)))) ORDER BY ((rt1.c1 COLLATE RTRIM)<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((-1652890323) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((-1652890323) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((-1652890323) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY (rt0.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((-1652890323) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((-1652890323) NOT BETWEEN (rt0.c0) AND (rt1.c0)))OR(rt1.c1)))AND(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt0.c0))))) ORDER BY (rt0.c1 IN ());
SELECT * FROM t0, rt0 WHERE (((rt0.c1)<>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)<>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)<>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c1);
SELECT * FROM t0, rt0 WHERE (((rt0.c1)<>(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (IFNULL(DISTINCT rt1.c1, ((rt1.c0)OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1, ((rt1.c0)OR(rt1.c2)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (IFNULL(DISTINCT rt1.c1, ((rt1.c0)OR(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1, ((rt1.c0)OR(rt1.c2)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (IFNULL(DISTINCT rt1.c1, ((rt1.c0)OR(rt1.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN x'b0e3' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 0Xffffffffa71392e1 END)<>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN x'b0e3' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 0Xffffffffa71392e1 END)<>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN x'b0e3' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 0Xffffffffa71392e1 END)<>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN x'b0e3' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 0Xffffffffa71392e1 END)<>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN x'b0e3' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE 0Xffffffffa71392e1 END)<>(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON 0xffffffffd267b8c5 WHERE (((((t0.c0) ISNULL))GLOB((NOT (rt1.c1))))) ORDER BY ((((rt1.c1, x'', rt1.c1))==((t0.c0, rt0.c0, rt1.c2))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))GLOB((NOT (rt1.c1))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON 0xffffffffd267b8c5 ORDER BY ((((rt1.c1, x'', rt1.c1))=((t0.c0, rt0.c0, rt1.c2))) IN ()) ASC);
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON 0xffffffffd267b8c5 WHERE (((((t0.c0) ISNULL))GLOB((NOT (rt1.c1))))) ORDER BY ((((rt1.c1, x'', rt1.c1))==((t0.c0, rt0.c0, rt1.c2))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL))GLOB((NOT (rt1.c1))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN rt1 ON 0xffffffffd267b8c5 ORDER BY ((((rt1.c1, x'', rt1.c1))=((t0.c0, rt0.c0, rt1.c2))) IN ()) ASC);
SELECT ALL * FROM rt0, t0 INNER JOIN rt1 ON 0xffffffffd267b8c5 WHERE (((((t0.c0) ISNULL))GLOB((NOT (rt1.c1))))) ORDER BY ((((rt1.c1, x'', rt1.c1))==((t0.c0, rt0.c0, rt1.c2))) IN ()) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN rt1.c2 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN x'b260' WHEN x'' THEN (((t0.c0, rt1.c0, rt1.c1, t0.c0, rt1.c0))!=((rt1.c2, rt1.c0, rt1.c2, t0.c0, t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN x'b260' WHEN x'' THEN (((t0.c0, rt1.c0, rt1.c1, t0.c0, rt1.c0))!=((rt1.c2, rt1.c0, rt1.c2, t0.c0, t0.c0))) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN rt1.c2 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN x'b260' WHEN x'' THEN (((t0.c0, rt1.c0, rt1.c1, t0.c0, rt1.c0))!=((rt1.c2, rt1.c0, rt1.c2, t0.c0, t0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN x'b260' WHEN x'' THEN (((t0.c0, rt1.c0, rt1.c1, t0.c0, rt1.c0))!=((rt1.c2, rt1.c0, rt1.c2, t0.c0, t0.c0))) END) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CASE WHEN rt1.c2 THEN t0.c0 COLLATE RTRIM WHEN x'' THEN x'b260' WHEN x'' THEN (((t0.c0, rt1.c0, rt1.c1, t0.c0, rt1.c0))!=((rt1.c2, rt1.c0, rt1.c2, t0.c0, t0.c0))) END);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((x'', rt1.c1, rt0.c1))<>((rt0.c0, rt1.c2, rt0.c2))) COLLATE RTRIM WHERE (((json_array(rt1.c0, rt1.c2, rt0.c0, t0.c0)) NOT BETWEEN (x'1285') AND (LIKELY('-473312326')))) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, t0.c0, x'')) AND ((t0.c0, rt0.c0, rt0.c0)))) BETWEEN (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt1.c0, rt1.c2, rt0.c0, t0.c0)) NOT BETWEEN (x'1285') AND (LIKELY('-473312326')))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((x'', rt1.c1, rt0.c1))<>((rt0.c0, rt1.c2, rt0.c2))) COLLATE RTRIM ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, t0.c0, x'')) AND ((t0.c0, rt0.c0, rt0.c0)))) BETWEEN (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((x'', rt1.c1, rt0.c1))<>((rt0.c0, rt1.c2, rt0.c2))) COLLATE RTRIM WHERE (((json_array(rt1.c0, rt1.c2, rt0.c0, t0.c0)) NOT BETWEEN (x'1285') AND (LIKELY('-473312326')))) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, t0.c0, x'')) AND ((t0.c0, rt0.c0, rt0.c0)))) BETWEEN (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_array(rt1.c0, rt1.c2, rt0.c0, t0.c0)) NOT BETWEEN (x'1285') AND (LIKELY('-473312326')))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((x'', rt1.c1, rt0.c1))<>((rt0.c0, rt1.c2, rt0.c2))) COLLATE RTRIM ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, t0.c0, x'')) AND ((t0.c0, rt0.c0, rt0.c0)))) BETWEEN (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((x'', rt1.c1, rt0.c1))<>((rt0.c0, rt1.c2, rt0.c2))) COLLATE RTRIM WHERE (((json_array(rt1.c0, rt1.c2, rt0.c0, t0.c0)) NOT BETWEEN (x'1285') AND (LIKELY('-473312326')))) ORDER BY (((((rt1.c1, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, t0.c0, x'')) AND ((t0.c0, rt0.c0, rt0.c0)))) BETWEEN (((((rt1.c1)AND(rt1.c0)))AND(rt1.c2))) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt0.c1)))OR(t0.c0)))OR(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt1.c2 AS BLOB) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((t0.c0) IS FALSE), CAST(rt0.c0 AS REAL))) AND (((((t0.c0))<=((rt0.c0))), ((rt1.c2) NOTNULL), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) WHERE (((((rt1.c1) IS FALSE))IS((rt1.c1 IN (rt0.c0, t0.c0))))) ORDER BY MAX(rt0.c1, (rt0.c1 IN (rt1.c0)), 0.899734887207898, ((rt0.c2)>=('-103025027'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))IS((rt1.c1 IN (rt0.c0, t0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt1.c2 AS BLOB) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((t0.c0) IS FALSE), CAST(rt0.c0 AS REAL))) AND (((((t0.c0))<=((rt0.c0))), ((rt1.c2) NOTNULL), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY MAX(rt0.c1, (rt0.c1 IN (rt1.c0)), 0.899734887207898, ((rt0.c2)>=('-103025027'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt1.c2 AS BLOB) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((t0.c0) IS FALSE), CAST(rt0.c0 AS REAL))) AND (((((t0.c0))<=((rt0.c0))), ((rt1.c2) NOTNULL), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) WHERE (((((rt1.c1) IS FALSE))IS((rt1.c1 IN (rt0.c0, t0.c0))))) ORDER BY MAX(rt0.c1, (rt0.c1 IN (rt1.c0)), 0.899734887207898, ((rt0.c2)>=('-103025027'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS FALSE))IS((rt1.c1 IN (rt0.c0, t0.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt1.c2 AS BLOB) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((t0.c0) IS FALSE), CAST(rt0.c0 AS REAL))) AND (((((t0.c0))<=((rt0.c0))), ((rt1.c2) NOTNULL), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY MAX(rt0.c1, (rt0.c1 IN (rt1.c0)), 0.899734887207898, ((rt0.c2)>=('-103025027'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (CAST(rt1.c2 AS BLOB) IN ()) RIGHT OUTER JOIN t0 ON (((rt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((rt1.c0 COLLATE RTRIM, ((t0.c0) IS FALSE), CAST(rt0.c0 AS REAL))) AND (((((t0.c0))<=((rt0.c0))), ((rt1.c2) NOTNULL), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) WHERE (((((rt1.c1) IS FALSE))IS((rt1.c1 IN (rt0.c0, t0.c0))))) ORDER BY MAX(rt0.c1, (rt0.c1 IN (rt1.c0)), 0.899734887207898, ((rt0.c2)>=('-103025027'))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) IS TRUE) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (1.480482008E9)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (1.480482008E9)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) IS TRUE) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (1.480482008E9)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) IS TRUE) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (1.480482008E9)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((rt1.c0) IS TRUE) AS TEXT)) ORDER BY ((rt0.c0) BETWEEN (rt0.c2) AND (1.480482008E9)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (CASE rt1.c2  WHEN 2.74543566E8 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((x'')>>(((((rt1.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c2  WHEN 2.74543566E8 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((x'')>>(((((rt1.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (CASE rt1.c2  WHEN 2.74543566E8 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((x'')>>(((((rt1.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c2  WHEN 2.74543566E8 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((x'')>>(((((rt1.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE ((NOT (CASE rt1.c2  WHEN 2.74543566E8 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((x'')>>(((((rt1.c1)AND(rt0.c0)))OR(rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0X63a6a300 ELSE CAST(rt0.c0 AS NUMERIC) END) ORDER BY (((- (rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0X63a6a300 ELSE CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0X63a6a300 ELSE CAST(rt0.c0 AS NUMERIC) END) ORDER BY (((- (rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0X63a6a300 ELSE CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0X63a6a300 ELSE CAST(rt0.c0 AS NUMERIC) END) ORDER BY (((- (rt0.c0))) ISNULL);
SELECT * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))<>(CAST(0.5082375716374001 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<>(CAST(0.5082375716374001 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))<>(CAST(0.5082375716374001 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<>(CAST(0.5082375716374001 AS BLOB)))) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((rt0.c1) NOT NULL))<>(CAST(0.5082375716374001 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((t0.c0)+(rt1.c2))) NOT NULL)) ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)+(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((t0.c0)+(rt1.c2))) NOT NULL)) ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)+(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((t0.c0)+(rt1.c2))) NOT NULL)) ORDER BY (((((((((rt0.c1)OR(rt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)) IN (((rt1.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (0.8588772123242743);
SELECT SUM(count) FROM (SELECT ((0.8588772123242743) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (0.8588772123242743);
SELECT SUM(count) FROM (SELECT ((0.8588772123242743) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (0.8588772123242743);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(rt1.c1))) ORDER BY ((((rt1.c0)<(t0.c0))) BETWEEN (rt0.c1) AND (((rt0.c0)*(t0.c0)))), '*^Jbj' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(rt1.c1))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c0)<(t0.c0))) BETWEEN (rt0.c1) AND (((rt0.c0)*(t0.c0)))), '*^Jbj' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(rt1.c1))) ORDER BY ((((rt1.c0)<(t0.c0))) BETWEEN (rt0.c1) AND (((rt0.c0)*(t0.c0)))), '*^Jbj' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(rt1.c1))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((((rt1.c0)<(t0.c0))) BETWEEN (rt0.c1) AND (((rt0.c0)*(t0.c0)))), '*^Jbj' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))=(rt1.c1))) ORDER BY ((((rt1.c0)<(t0.c0))) BETWEEN (rt0.c1) AND (((rt0.c0)*(t0.c0)))), '*^Jbj' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (UNICODE((rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((rt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNICODE((rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((rt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNICODE((rt0.c0 IN (rt0.c1)))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CHAR(((t0.c0)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((t0.c0)!=(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CHAR(((t0.c0)<>(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((t0.c0)!=(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CHAR(((t0.c0)<>(t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt1 ON LTRIM(UNLIKELY(rt0.c0), CASE rt0.c2  WHEN rt0.c0 THEN '.6f' ELSE rt0.c2 END) WHERE (TYPEOF(LIKELIHOOD(t0.c0, 0.7823719251294504))) ORDER BY rt0.c0 ASC  NULLS FIRST, ((('1423487611') IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(LIKELIHOOD(t0.c0, 0.7823719251294504))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt1 ON LTRIM(UNLIKELY(rt0.c0), CASE rt0.c2  WHEN rt0.c0 THEN '.6f' ELSE rt0.c2 END) ORDER BY rt0.c0 ASC  NULLS FIRST, ((('1423487611') IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt1 ON LTRIM(UNLIKELY(rt0.c0), CASE rt0.c2  WHEN rt0.c0 THEN '.6f' ELSE rt0.c2 END) WHERE (TYPEOF(LIKELIHOOD(t0.c0, 0.7823719251294504))) ORDER BY rt0.c0 ASC  NULLS FIRST, ((('1423487611') IS FALSE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(LIKELIHOOD(t0.c0, 0.7823719251294504))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt1 ON LTRIM(UNLIKELY(rt0.c0), CASE rt0.c2  WHEN rt0.c0 THEN '.6f' ELSE rt0.c2 END) ORDER BY rt0.c0 ASC  NULLS FIRST, ((('1423487611') IS FALSE) IN ()) ASC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM INNER JOIN rt1 ON LTRIM(UNLIKELY(rt0.c0), CASE rt0.c2  WHEN rt0.c0 THEN '.6f' ELSE rt0.c2 END) WHERE (TYPEOF(LIKELIHOOD(t0.c0, 0.7823719251294504))) ORDER BY rt0.c0 ASC  NULLS FIRST, ((('1423487611') IS FALSE) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (x'');
SELECT * FROM t0 FULL OUTER JOIN rt1 ON INSTR(CASE WHEN NULL THEN rt0.c2 WHEN 0X701b24d THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) FULL OUTER JOIN rt0 ON NULLIF(DISTINCT ((((((((NULL)OR(rt0.c1)))AND(NULL)))AND(rt1.c0)))AND(rt1.c1)), CAST(rt1.c1 AS BLOB)) WHERE (((t0.c0) NOT BETWEEN ((rt1.c0 IN ())) AND ((t0.c0 IN (rt1.c2, 0.6622836528189757))))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY, ((rt0.c2) BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN ((rt1.c0 IN ())) AND ((t0.c0 IN (rt1.c2, 0.6622836528189757))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON INSTR(CASE WHEN NULL THEN rt0.c2 WHEN 0x701b24d THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) FULL OUTER JOIN rt0 ON NULLIF(DISTINCT ((((((((NULL)OR(rt0.c1)))AND(NULL)))AND(rt1.c0)))AND(rt1.c1)), CAST(rt1.c1 AS BLOB)) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY, ((rt0.c2) BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN rt1 ON INSTR(CASE WHEN NULL THEN rt0.c2 WHEN 0X701b24d THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) FULL OUTER JOIN rt0 ON NULLIF(DISTINCT ((((((((NULL)OR(rt0.c1)))AND(NULL)))AND(rt1.c0)))AND(rt1.c1)), CAST(rt1.c1 AS BLOB)) WHERE (((t0.c0) NOT BETWEEN ((rt1.c0 IN ())) AND ((t0.c0 IN (rt1.c2, 0.6622836528189757))))) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY, ((rt0.c2) BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN ((rt1.c0 IN ())) AND ((t0.c0 IN (rt1.c2, 0.6622836528189757))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON INSTR(CASE WHEN NULL THEN rt0.c2 WHEN 0x701b24d THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c0))) FULL OUTER JOIN rt0 ON NULLIF(DISTINCT ((((((((NULL)OR(rt0.c1)))AND(NULL)))AND(rt1.c0)))AND(rt1.c1)), CAST(rt1.c1 AS BLOB)) ORDER BY CAST(rt0.c1 AS TEXT) COLLATE BINARY, ((rt0.c2) BETWEEN (CAST(t0.c0 AS REAL)) AND (CASE rt0.c2  WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((CAST(rt0.c0 AS TEXT))AND((((rt0.c0, rt1.c1, t0.c0))=((rt0.c0, rt0.c2, t0.c0))))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c0, rt1.c1, t0.c0))==((rt0.c0, rt0.c2, t0.c0))))))AND(t0.c0))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((CAST(rt0.c0 AS TEXT))AND((((rt0.c0, rt1.c1, t0.c0))=((rt0.c0, rt0.c2, t0.c0))))))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c0, rt1.c1, t0.c0))==((rt0.c0, rt0.c2, t0.c0))))))AND(t0.c0))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((CAST(rt0.c0 AS TEXT))AND((((rt0.c0, rt1.c1, t0.c0))=((rt0.c0, rt0.c2, t0.c0))))))AND(t0.c0)));
SELECT * FROM rt0 WHERE ((((rt0.c0)-(x'')) IN ())) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))  WHEN CASE -1204720086  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (x'ee91') AND (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))  WHEN CASE -1204720086  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (x'ee91') AND (rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)-(x'')) IN ())) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))  WHEN CASE -1204720086  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (x'ee91') AND (rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(x'')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))  WHEN CASE -1204720086  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (x'ee91') AND (rt0.c1)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c0)-(x'')) IN ())) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))  WHEN CASE -1204720086  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((rt0.c2) NOT BETWEEN (x'ee91') AND (rt0.c1)) END ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (rt1.c0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (rt1.c0 IN (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (rt1.c0 IN (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (rt1.c0 IN (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (rt1.c0 IN (rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)IS NOT(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) ORDER BY (rt1.c0 IN (rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 END THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)<(rt1.c1)) END LEFT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (- (((rt0.c1)GLOB(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 END THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)<(rt1.c1)) END LEFT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ORDER BY (- (((rt0.c1)GLOB(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 END THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)<(rt1.c1)) END LEFT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (- (((rt0.c1)GLOB(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 END THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)<(rt1.c1)) END LEFT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY ORDER BY (- (((rt0.c1)GLOB(rt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN rt0.c2 END THEN ((rt1.c0) IS TRUE) ELSE ((rt1.c1)<(rt1.c1)) END LEFT OUTER JOIN rt1 ON ((((((((rt1.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) COLLATE BINARY WHERE (rt0.c2) ORDER BY (- (((rt0.c1)GLOB(rt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(rt0.c0) THEN (('YNetI') IS FALSE) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(rt0.c0) THEN (('YNetI') IS FALSE) ELSE (rt1.c1 IN (rt1.c1)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(rt0.c0) THEN (('YNetI') IS FALSE) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(rt0.c0) THEN (('YNetI') IS FALSE) ELSE (rt1.c1 IN (rt1.c1)) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (CASE WHEN HEX(rt0.c0) THEN (('YNetI') IS FALSE) ELSE (rt1.c1 IN (rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) ORDER BY (~ (rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) ORDER BY (~ (rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (~ (rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY) ORDER BY (~ (rt1.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))GLOB((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' WHERE ((+ (CASE NULL  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE NULL  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))GLOB((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'');
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))GLOB((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' WHERE ((+ (CASE NULL  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE NULL  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))GLOB((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'');
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((CAST(rt1.c1 AS REAL))GLOB((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' WHERE ((+ (CASE NULL  WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)))LIKE(((0.8333080886955357) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0)))LIKE(((0.8333080886955357) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)))LIKE(((0.8333080886955357) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c0)))LIKE(((0.8333080886955357) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)))LIKE(((0.8333080886955357) NOT BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS(1.7976931348623157E308)) AS BLOB)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(((t0.c0)+(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS(1.7976931348623157E308)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(((t0.c0)+(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS(1.7976931348623157E308)) AS BLOB)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(((t0.c0)+(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS(1.7976931348623157E308)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(((t0.c0)+(t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)IS(1.7976931348623157E308)) AS BLOB)) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))|(((t0.c0)+(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((LIKELY(DISTINCT rt1.c0))*(((rt1.c0) ISNULL))) WHERE ((rt1.c2 IN (CASE rt1.c0  WHEN NULL THEN rt1.c0 END))) ORDER BY CAST(((rt0.c0)|(rt1.c2)) AS TEXT)  NULLS FIRST, ((((x'7d93') IS FALSE))%(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (CASE rt1.c0  WHEN NULL THEN rt1.c0 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((LIKELY(DISTINCT rt1.c0))*(((rt1.c0) ISNULL))) ORDER BY CAST(((rt0.c0)|(rt1.c2)) AS TEXT)  NULLS FIRST, ((((x'7d93') IS FALSE))%(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((LIKELY(DISTINCT rt1.c0))*(((rt1.c0) ISNULL))) WHERE ((rt1.c2 IN (CASE rt1.c0  WHEN NULL THEN rt1.c0 END))) ORDER BY CAST(((rt0.c0)|(rt1.c2)) AS TEXT)  NULLS FIRST, ((((x'7d93') IS FALSE))%(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt1.c2 IN (CASE rt1.c0  WHEN NULL THEN rt1.c0 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((LIKELY(DISTINCT rt1.c0))*(((rt1.c0) ISNULL))) ORDER BY CAST(((rt0.c0)|(rt1.c2)) AS TEXT)  NULLS FIRST, ((((x'7d93') IS FALSE))%(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((LIKELY(DISTINCT rt1.c0))*(((rt1.c0) ISNULL))) WHERE ((rt1.c2 IN (CASE rt1.c0  WHEN NULL THEN rt1.c0 END))) ORDER BY CAST(((rt0.c0)|(rt1.c2)) AS TEXT)  NULLS FIRST, ((((x'7d93') IS FALSE))%(((rt0.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0)))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (CASE WHEN 0xffffffffb78e4cb1 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN t0 ON 1.580602617E9 WHERE ((((NOT (rt1.c2))) NOT NULL)) ORDER BY ((((t0.c0))!=((rt1.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (CASE WHEN 0Xffffffffb78e4cb1 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN t0 ON 1.580602617E9 ORDER BY ((((t0.c0))!=((rt1.c2))) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (CASE WHEN 0xffffffffb78e4cb1 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN t0 ON 1.580602617E9 WHERE ((((NOT (rt1.c2))) NOT NULL)) ORDER BY ((((t0.c0))!=((rt1.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (CASE WHEN 0Xffffffffb78e4cb1 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN t0 ON 1.580602617E9 ORDER BY ((((t0.c0))!=((rt1.c2))) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (CASE WHEN 0xffffffffb78e4cb1 THEN rt0.c2 ELSE rt0.c0 END IN ()) RIGHT OUTER JOIN t0 ON 1.580602617E9 WHERE ((((NOT (rt1.c2))) NOT NULL)) ORDER BY ((((t0.c0))!=((rt1.c2))) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)==(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)==(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)=(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE BINARY)==(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (t0.c0) AND (((rt1.c1) NOTNULL)))) ORDER BY (((CASE WHEN t0.c0 THEN '772111272' END, NULL, ((rt1.c2)OR(rt1.c0))))=(((rt1.c2 IN (rt1.c2)), ((t0.c0)<<(rt1.c1)), (((rt1.c1, rt1.c1, t0.c0))<=((t0.c0, rt1.c1, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) BETWEEN (t0.c0) AND (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((CASE WHEN t0.c0 THEN '772111272' END, NULL, ((rt1.c2)OR(rt1.c0))))==(((rt1.c2 IN (rt1.c2)), ((t0.c0)<<(rt1.c1)), (((rt1.c1, rt1.c1, t0.c0))<=((t0.c0, rt1.c1, rt1.c2)))))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (t0.c0) AND (((rt1.c1) NOTNULL)))) ORDER BY (((CASE WHEN t0.c0 THEN '772111272' END, NULL, ((rt1.c2)OR(rt1.c0))))=(((rt1.c2 IN (rt1.c2)), ((t0.c0)<<(rt1.c1)), (((rt1.c1, rt1.c1, t0.c0))<=((t0.c0, rt1.c1, rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) BETWEEN (t0.c0) AND (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((CASE WHEN t0.c0 THEN '772111272' END, NULL, ((rt1.c2)OR(rt1.c0))))==(((rt1.c2 IN (rt1.c2)), ((t0.c0)<<(rt1.c1)), (((rt1.c1, rt1.c1, t0.c0))<=((t0.c0, rt1.c1, rt1.c2)))))));
SELECT COUNT(*) FROM t0, rt1 WHERE (((rt1.c2 COLLATE BINARY) BETWEEN (t0.c0) AND (((rt1.c1) NOTNULL)))) ORDER BY (((CASE WHEN t0.c0 THEN '772111272' END, NULL, ((rt1.c2)OR(rt1.c0))))=(((rt1.c2 IN (rt1.c2)), ((t0.c0)<<(rt1.c1)), (((rt1.c1, rt1.c1, t0.c0))<=((t0.c0, rt1.c1, rt1.c2))))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))>>((rt0.c0 IN (rt0.c2)))) WHERE (((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'')))<>((('0.6058077284003078') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'')))<>((('0.6058077284003078') NOT NULL)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))>>((rt0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))>>((rt0.c0 IN (rt0.c2)))) WHERE (((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'')))<>((('0.6058077284003078') NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'')))<>((('0.6058077284003078') NOT NULL)))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))>>((rt0.c0 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN rt1 ON ((CAST(rt0.c2 AS INTEGER))>>((rt0.c0 IN (rt0.c2)))) WHERE (((((t0.c0) NOT BETWEEN (rt1.c1) AND (x'')))<>((('0.6058077284003078') NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((rt1.c1) NOTNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1) NOTNULL)) NOT NULL) DESC);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((rt1.c1) NOTNULL)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((rt1.c1) NOTNULL)) NOT NULL) DESC);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c1) ISNULL)) ORDER BY ((((rt1.c1) NOTNULL)) NOT NULL) DESC;
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN ((rt1.c0)-(rt1.c2)) WHEN ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(x'')))OR(x'19cb')))OR(rt1.c2)))AND(rt1.c1)) THEN TIME(x'', rt1.c1, rt1.c1, rt1.c1, rt1.c1) WHEN CAST(t0.c0 AS TEXT) THEN ((rt1.c1) NOT BETWEEN ('6꿊') AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOTNULL) THEN ((rt1.c0)-(rt1.c2)) WHEN ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(x'')))OR(x'19cb')))OR(rt1.c2)))AND(rt1.c1)) THEN TIME(x'', rt1.c1, rt1.c1, rt1.c1, rt1.c1) WHEN CAST(t0.c0 AS TEXT) THEN ((rt1.c1) NOT BETWEEN ('6꿊') AND (rt1.c1)) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN ((rt1.c0)-(rt1.c2)) WHEN ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(x'')))OR(x'19cb')))OR(rt1.c2)))AND(rt1.c1)) THEN TIME(x'', rt1.c1, rt1.c1, rt1.c1, rt1.c1) WHEN CAST(t0.c0 AS TEXT) THEN ((rt1.c1) NOT BETWEEN ('6꿊') AND (rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOTNULL) THEN ((rt1.c0)-(rt1.c2)) WHEN ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(x'')))OR(x'19cb')))OR(rt1.c2)))AND(rt1.c1)) THEN TIME(x'', rt1.c1, rt1.c1, rt1.c1, rt1.c1) WHEN CAST(t0.c0 AS TEXT) THEN ((rt1.c1) NOT BETWEEN ('6꿊') AND (rt1.c1)) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN ((rt1.c0)-(rt1.c2)) WHEN ((((((((((((rt1.c2)AND(rt1.c1)))AND(t0.c0)))OR(x'')))OR(x'19cb')))OR(rt1.c2)))AND(rt1.c1)) THEN TIME(x'', rt1.c1, rt1.c1, rt1.c1, rt1.c1) WHEN CAST(t0.c0 AS TEXT) THEN ((rt1.c1) NOT BETWEEN ('6꿊') AND (rt1.c1)) END);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER));
