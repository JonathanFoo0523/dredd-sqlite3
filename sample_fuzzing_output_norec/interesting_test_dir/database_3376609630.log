-- Time: 2024/06/09 14:51:48
-- Database: database30
-- Database version: 3.40.0
-- seed value: 3376609630
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '638'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 879957281);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1332205611,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 2139865836);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1112429377); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('2139865836'), ('ER심w'), (0.5504679764047673); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.5504679764047673), (x'', x''), ('', 0.6146130635272158); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
UPDATE rt0 SET (c1)=(x'') WHERE CASE rt0.c2  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0)<(rt0.c1)) END; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0Xffffffffb091c8d1); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), ('-1259303285'), (0Xffffffffc732805a); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.5504679764047673); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('-1332623151'), (0X64c96fba), (-1.332623151E9); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('+ wm', x'909b'), (0.09853722389664787, x'd200'), ('0.6146130635272158', NULL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '-1343998249', 0.09836957837876026); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1009593362'); -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', x'8952'), (0xffffffffe1a69312, '+ wm'), (0x3ff949a7, '0.09853722389664787'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 253824104); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1.259303285E9); -- 0ms;
ANALYZE vt1; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'20d4', NULL); -- 1ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
DELETE FROM vt0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1678943784'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1598425085); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('+ wm'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 978395720);\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.38949538727636557); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.9191013230276166) NOT BETWEEN (x'') AND (x'')))OR(HEX('4N'))))OR((((((((((((('-1332205611')AND('179531391')))OR('978395720')))OR(x'5f5c71c0')))AND(0Xffffffffc732805a)))AND(0x422c1dde)))AND(NULL)))))OR((((((((('-182868528')OR('0.38949538727636557')))AND(x'')))OR('')))OR('')))))OR(((('-1865381224')) BETWEEN ((0.09836957837876026)) AND ((x''))))))AND((NOT (-2108220315)))))OR(((0.8913341119265337) NOT NULL))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
CREATE TABLE t0 (c0 TEXT NOT NULL ON CONFLICT REPLACE CHECK ( CASE (NOT (c0))  WHEN CAST(NULL AS BLOB) THEN (~ (c0)) END) ); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-1075485547); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), ('2139865836'), (0xfffffffffb177f03); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (0Xffffffffc3d2d3ee), ('978395720'), (NULL); -- 1ms;
PRAGMA busy_timeout = 0; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.6146130635272158), ('217577785'), ('0.6146130635272158'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.10297163472357262, x''); -- 0ms;
CREATE INDEX IF NOT EXISTS i58 ON t0(CASE ((c0)OR(x''))  WHEN LOWER(c0) THEN ((c0) IS TRUE) END) WHERE ((((c0)AND(c0)))<<(((c0) BETWEEN (c0) AND (c0)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('879957281', '+ wm'), (0X136a953e, NULL), (325752126, '૳wFZk*hys'); -- 0ms;
DROP INDEX IF EXISTS "i58"; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL), (0.4943352708565639), (0.09853722389664787); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT OR FAIL INTO t1 VALUES (x''); -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES ('-1332205611', 'ᖀO'), (-80103500, ''), (x'4785a37f', 0.09853722389664787); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0.84198934616285, -1.259303285E9), (0.3916841900504956, 0Xffffffffbc1660a8), (x'', x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1178657401); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt1.c0))<=((vt1.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))LIKE(vt0.c1)));
SELECT * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN CAST(t1.c0 AS BLOB) WHEN ((t1.c0) NOT BETWEEN (2138213043) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN (((t1.c0))>=((t1.c0))) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN CAST(t1.c0 AS BLOB) WHEN ((t1.c0) NOT BETWEEN (2138213043) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN (((t1.c0))>=((t1.c0))) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN CAST(t1.c0 AS BLOB) WHEN ((t1.c0) NOT BETWEEN (2138213043) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN (((t1.c0))>=((t1.c0))) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN CAST(t1.c0 AS BLOB) WHEN ((t1.c0) NOT BETWEEN (2138213043) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN (((t1.c0))>=((t1.c0))) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN CAST(t1.c0 AS REAL) THEN CAST(t1.c0 AS BLOB) WHEN ((t1.c0) NOT BETWEEN (2138213043) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) WHEN ((t1.c0)+(t1.c0)) THEN (((t1.c0))>=((t1.c0))) ELSE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) END) ORDER BY ((t1.c0 COLLATE RTRIM) BETWEEN (NULL) AND ((~ (t1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (SQLITE_COMPILEOPTION_USED(((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT * FROM t1, vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((json_extract(vt0.c0, vt1.c0))) AND ((LIKELY(DISTINCT vt0.c0))))) ORDER BY CASE WHEN t1.c0 THEN (- (t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((json_extract(vt0.c0, vt1.c0))) AND ((LIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE WHEN t1.c0 THEN (- (t1.c0)) END  NULLS LAST);
SELECT * FROM t1, vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((json_extract(vt0.c0, vt1.c0))) AND ((LIKELY(DISTINCT vt0.c0))))) ORDER BY CASE WHEN t1.c0 THEN (- (t1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((json_extract(vt0.c0, vt1.c0))) AND ((LIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE WHEN t1.c0 THEN (- (t1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))>>((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))>>((vt0.c1 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))>>((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))>>((vt0.c1 IN ())))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0)))>>((vt0.c1 IN ()))));
SELECT * FROM vt0, t1 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((0.84198934616285) NOTNULL)) NOT NULL) DESC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((((~ (t1.c0)))OR(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((0.84198934616285) NOTNULL)) NOT NULL) DESC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((((~ (t1.c0)))OR(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((0.84198934616285) NOTNULL)) NOT NULL) DESC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((((~ (t1.c0)))OR(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((0.84198934616285) NOTNULL)) NOT NULL) DESC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((((~ (t1.c0)))OR(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((((0.84198934616285) NOTNULL)) NOT NULL) DESC, (((NOT (t1.c0))) NOT BETWEEN (((t1.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))  NULLS LAST, (((((~ (t1.c0)))OR(((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0)AND(LAST_INSERT_ROWID())) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c1 END AS REAL)) ORDER BY (((vt0.c0 IN ())) IS TRUE), (NOT (COALESCE(vt0.c1, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN NULL THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0)AND(LAST_INSERT_ROWID())) ORDER BY (((vt0.c0 IN ())) IS TRUE), (NOT (COALESCE(vt0.c1, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0)AND(LAST_INSERT_ROWID())) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c1 END AS REAL)) ORDER BY (((vt0.c0 IN ())) IS TRUE), (NOT (COALESCE(vt0.c1, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt1.c0  WHEN NULL THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0)AND(LAST_INSERT_ROWID())) ORDER BY (((vt0.c0 IN ())) IS TRUE), (NOT (COALESCE(vt0.c1, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0)AND(LAST_INSERT_ROWID())) WHERE (CAST(CASE vt1.c0  WHEN NULL THEN vt0.c1 END AS REAL)) ORDER BY (((vt0.c0 IN ())) IS TRUE), (NOT (COALESCE(vt0.c1, vt0.c0))) ASC;
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN (('2037602246')) AND ((t1.c0))))&(t1.c0))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE((t1.c0 IN ('', t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN (('2037602246')) AND ((t1.c0))))&(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE((t1.c0 IN ('', t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN (('2037602246')) AND ((t1.c0))))&(t1.c0))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE((t1.c0 IN ('', t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN (('2037602246')) AND ((t1.c0))))&(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE((t1.c0 IN ('', t1.c0)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0)) BETWEEN (('2037602246')) AND ((t1.c0))))&(t1.c0))) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))LIKE((t1.c0 IN ('', t1.c0))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(((vt0.c1)|(t1.c0)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, vt0.c1, (NOT (vt1.c0)))) AND ((vt0.c0, ((vt1.c0)|(vt1.c0)), ((NULL) IS TRUE)))) WHERE ((((((vt1.c0))<((vt0.c1)))) BETWEEN ((('sflO')<>(vt0.c0))) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt0.c1)))) BETWEEN ((('sflO')!=(vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(((vt0.c1)|(t1.c0)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, vt0.c1, (NOT (vt1.c0)))) AND ((vt0.c0, ((vt1.c0)|(vt1.c0)), ((NULL) IS TRUE)))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST(((vt0.c1)|(t1.c0)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, vt0.c1, (NOT (vt1.c0)))) AND ((vt0.c0, ((vt1.c0)|(vt1.c0)), ((NULL) IS TRUE)))) WHERE ((((((vt1.c0))<((vt0.c1)))) BETWEEN ((('sflO')<>(vt0.c0))) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<((vt0.c1)))) BETWEEN ((('sflO')!=(vt0.c0))) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST(((vt0.c1)|(t1.c0)) AS NUMERIC) INNER JOIN vt0 ON (((t1.c0, t1.c0, vt1.c0)) BETWEEN ((vt0.c1 COLLATE BINARY, vt0.c1, (NOT (vt1.c0)))) AND ((vt0.c0, ((vt1.c0)|(vt1.c0)), ((NULL) IS TRUE)))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((((vt0.c1)OR(x'')))OR(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c1, t1.c0, vt0.c1)) BETWEEN ((t1.c0, NULL, x'e38a')) AND ((t1.c0, vt0.c0, vt0.c1))), vt1.c0))>=((1.110187486E9, IFNULL(DISTINCT '1678943784', vt0.c0), ((vt1.c0)&(vt0.c0)), '586443145', ABS(vt0.c0))))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 END THEN ((vt0.c0)IS(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0)) END ASC, ((((CAST(vt0.c1 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((TYPEOF(DISTINCT t1.c0))) AND (((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((((vt0.c1)OR(x'')))OR(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c1, t1.c0, vt0.c1)) BETWEEN ((t1.c0, NULL, x'e38a')) AND ((t1.c0, vt0.c0, vt0.c1))), vt1.c0))>=((1.110187486E9, IFNULL(DISTINCT '1678943784', vt0.c0), ((vt1.c0)&(vt0.c0)), '586443145', ABS(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 END THEN ((vt0.c0)IS(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0)) END ASC, ((((CAST(vt0.c1 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((TYPEOF(DISTINCT t1.c0))) AND (((+ (vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((((vt0.c1)OR(x'')))OR(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c1, t1.c0, vt0.c1)) BETWEEN ((t1.c0, NULL, x'e38a')) AND ((t1.c0, vt0.c0, vt0.c1))), vt1.c0))>=((1.110187486E9, IFNULL(DISTINCT '1678943784', vt0.c0), ((vt1.c0)&(vt0.c0)), '586443145', ABS(vt0.c0))))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 END THEN ((vt0.c0)IS(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0)) END ASC, ((((CAST(vt0.c1 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((TYPEOF(DISTINCT t1.c0))) AND (((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((((vt0.c1)OR(x'')))OR(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c1, t1.c0, vt0.c1)) BETWEEN ((t1.c0, NULL, x'e38a')) AND ((t1.c0, vt0.c0, vt0.c1))), vt1.c0))>=((1.110187486E9, IFNULL(DISTINCT '1678943784', vt0.c0), ((vt1.c0)&(vt0.c0)), '586443145', ABS(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 END THEN ((vt0.c0)IS(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0)) END ASC, ((((CAST(vt0.c1 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((TYPEOF(DISTINCT t1.c0))) AND (((+ (vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), ((((vt0.c1)OR(x'')))OR(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)), (((vt0.c1, t1.c0, vt0.c1)) BETWEEN ((t1.c0, NULL, x'e38a')) AND ((t1.c0, vt0.c0, vt0.c1))), vt1.c0))>=((1.110187486E9, IFNULL(DISTINCT '1678943784', vt0.c0), ((vt1.c0)&(vt0.c0)), '586443145', ABS(vt0.c0))))) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 END THEN ((vt0.c0)IS(vt1.c0)) ELSE (vt1.c0 IN (vt1.c0)) END ASC, ((((CAST(vt0.c1 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))  NULLS FIRST, (((vt0.c1)) BETWEEN ((TYPEOF(DISTINCT t1.c0))) AND (((+ (vt0.c0)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))) COLLATE RTRIM INNER JOIN vt0 ON ((((((((((vt0.c1)*(t1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1))>((vt1.c0))))))AND(((((((((t1.c0)AND(0.4105471793755253)))AND(vt1.c0)))OR(t1.c0)))AND(vt1.c0)))))OR(0.09836957837876026)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))) COLLATE RTRIM INNER JOIN vt0 ON ((((((((((vt0.c1)*(t1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1))>((vt1.c0))))))AND(((((((((t1.c0)AND(0.4105471793755253)))AND(vt1.c0)))OR(t1.c0)))AND(vt1.c0)))))OR(0.09836957837876026)));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))) COLLATE RTRIM INNER JOIN vt0 ON ((((((((((vt0.c1)*(t1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1))>((vt1.c0))))))AND(((((((((t1.c0)AND(0.4105471793755253)))AND(vt1.c0)))OR(t1.c0)))AND(vt1.c0)))))OR(0.09836957837876026)) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c1))) COLLATE RTRIM INNER JOIN vt0 ON ((((((((((vt0.c1)*(t1.c0)))OR(vt0.c0 COLLATE NOCASE)))OR((((vt0.c1))>((vt1.c0))))))AND(((((((((t1.c0)AND(0.4105471793755253)))AND(vt1.c0)))OR(t1.c0)))AND(vt1.c0)))))OR(0.09836957837876026)));
SELECT * FROM vt0, t1 WHERE (((x'' IN (x'', t1.c0)) IN ((~ (vt0.c1))))) ORDER BY ((((((vt0.c0)<<(vt0.c1)))AND((~ (t1.c0)))))OR(((vt0.c0) NOTNULL))) DESC, (((((vt0.c0))<=((vt0.c1))))=(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((x'' IN (x'', t1.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((vt0.c0)<<(vt0.c1)))AND((~ (t1.c0)))))OR(((vt0.c0) NOTNULL))) DESC, (((((vt0.c0))<=((vt0.c1))))==(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, t1 WHERE (((x'' IN (x'', t1.c0)) IN ((~ (vt0.c1))))) ORDER BY ((((((vt0.c0)<<(vt0.c1)))AND((~ (t1.c0)))))OR(((vt0.c0) NOTNULL))) DESC, (((((vt0.c0))<=((vt0.c1))))=(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((x'' IN (x'', t1.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((vt0.c0)<<(vt0.c1)))AND((~ (t1.c0)))))OR(((vt0.c0) NOTNULL))) DESC, (((((vt0.c0))<=((vt0.c1))))==(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, t1 WHERE (((x'' IN (x'', t1.c0)) IN ((~ (vt0.c1))))) ORDER BY ((((((vt0.c0)<<(vt0.c1)))AND((~ (t1.c0)))))OR(((vt0.c0) NOTNULL))) DESC, (((((vt0.c0))<=((vt0.c1))))=(vt0.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN json_patch('pn+', vt0.c0) WHEN t1.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN json_patch('pn+', vt0.c0) WHEN t1.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN json_patch('pn+', vt0.c0) WHEN t1.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN json_patch('pn+', vt0.c0) WHEN t1.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE t1.c0 COLLATE RTRIM  WHEN ((t1.c0) IS TRUE) THEN CAST(vt0.c0 AS BLOB) WHEN CAST(vt0.c0 AS REAL) THEN json_patch('pn+', vt0.c0) WHEN t1.c0 COLLATE RTRIM THEN ((vt0.c0) NOTNULL) ELSE vt0.c1 COLLATE BINARY END);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((vt0.c1)*(vt0.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.3916841900504956')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)*(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.3916841900504956')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((vt0.c1)*(vt0.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.3916841900504956')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)*(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.3916841900504956')) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((vt0.c1)*(vt0.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((vt0.c0 IN ())) AND ((~ (vt0.c1)))) DESC  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(''))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.3916841900504956')) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (0.7270558127289307) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))OR(vt0.c1)))-(vt1.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(((t1.c0)>=(vt1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN ('704935518') AND (vt0.c1)))))AND((((t1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, 0.9548782907060626))))) ASC, TIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL), vt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7270558127289307) IS TRUE)  as count FROM vt1, vt0, t1 NOT INDEXED ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))OR(vt0.c1)))-(vt1.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(((t1.c0)>=(vt1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN ('704935518') AND (vt0.c1)))))AND((((t1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, 0.9548782907060626))))) ASC, TIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL), vt0.c1) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (0.7270558127289307) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))OR(vt0.c1)))-(vt1.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(((t1.c0)>=(vt1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN ('704935518') AND (vt0.c1)))))AND((((t1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, 0.9548782907060626))))) ASC, TIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL), vt0.c1) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7270558127289307) IS TRUE)  as count FROM vt1, vt0, t1 NOT INDEXED ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))OR(vt0.c1)))-(vt1.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(((t1.c0)>=(vt1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN ('704935518') AND (vt0.c1)))))AND((((t1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, 0.9548782907060626))))) ASC, TIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL), vt0.c1) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (0.7270558127289307) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(t1.c0)))OR(vt0.c1)))-(vt1.c0)), ((((((((((((vt0.c0)OR(vt0.c0)))OR(t1.c0)))OR(((t1.c0)>=(vt1.c0)))))OR((vt0.c1 IN ()))))OR(((t1.c0) NOT BETWEEN ('704935518') AND (vt0.c1)))))AND((((t1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt0.c1, vt1.c0, 0.9548782907060626))))) ASC, TIME(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL), vt0.c1) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON 0.16864329502305075 WHERE (((('-771972219' IN (t1.c0, vt0.c1)))+(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN t1.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))), '539062909'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-771972219' IN (t1.c0, vt0.c1)))+(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON 0.16864329502305075 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))), '539062909'  NULLS FIRST);
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON 0.16864329502305075 WHERE (((('-771972219' IN (t1.c0, vt0.c1)))+(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN t1.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))), '539062909'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-771972219' IN (t1.c0, vt0.c1)))+(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON 0.16864329502305075 ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))), '539062909'  NULLS FIRST);
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON 0.16864329502305075 WHERE (((('-771972219' IN (t1.c0, vt0.c1)))+(CASE WHEN t1.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN t1.c0 END))) ORDER BY ((((vt0.c0)AND(vt0.c0)))AND(((vt0.c0) BETWEEN (NULL) AND (vt0.c1)))), '539062909'  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN '-1009593362' THEN '8w' ELSE (t1.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1009593362' THEN '8w' ELSE (t1.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN '-1009593362' THEN '8w' ELSE (t1.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1009593362' THEN '8w' ELSE (t1.c0 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 WHERE (CASE WHEN '-1009593362' THEN '8w' ELSE (t1.c0 IN (vt0.c0)) END) ORDER BY ((vt0.c0) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(x'')))OR(vt0.c1)), (vt0.c1 IN ()), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<=((((vt0.c1)OR(vt0.c0)), (vt0.c1 IN (vt0.c1)), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)|(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(x'')))OR(vt0.c1)), (vt0.c1 IN ()), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<=((((vt0.c1)OR(vt0.c0)), (vt0.c1 IN (vt0.c1)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)|(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(x'')))OR(vt0.c1)), (vt0.c1 IN ()), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<=((((vt0.c1)OR(vt0.c0)), (vt0.c1 IN (vt0.c1)), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)|(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(x'')))OR(vt0.c1)), (vt0.c1 IN ()), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<=((((vt0.c1)OR(vt0.c0)), (vt0.c1 IN (vt0.c1)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)|(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((((vt0.c1)AND(x'')))OR(vt0.c1)), (vt0.c1 IN ()), (((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))<=((((vt0.c1)OR(vt0.c0)), (vt0.c1 IN (vt0.c1)), (vt0.c0 IN ()))))) ORDER BY (((((vt0.c0)|(vt0.c0))))>=((CAST(vt0.c0 AS BLOB))))  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON x'' WHERE ((((((t1.c0)AND(t1.c0)))AND(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)AND(t1.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON x'');
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON x'' WHERE ((((((t1.c0)AND(t1.c0)))AND(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t1.c0)AND(t1.c0)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON x'');
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON x'' WHERE ((((((t1.c0)AND(t1.c0)))AND(t1.c0)) IN ()));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)-(((vt1.c0)|(1386119120))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)-(((vt1.c0)|(1386119120))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)-(((vt1.c0)|(1386119120))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)-(((vt1.c0)|(1386119120))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)-(((vt1.c0)|(1386119120))))) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((+ (vt1.c0)))*(((vt0.c0)IS(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))*(((vt0.c0)IS(t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((+ (vt1.c0)))*(((vt0.c0)IS(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))*(((vt0.c0)IS(t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((+ (vt1.c0)))*(((vt0.c0)IS(t1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)*(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)*(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS NUMERIC));
SELECT * FROM t1 WHERE (0.6534931682040322);
SELECT SUM(count) FROM (SELECT ALL ((0.6534931682040322) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.6534931682040322);
SELECT SUM(count) FROM (SELECT ALL ((0.6534931682040322) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (0.6534931682040322);
SELECT * FROM t1, vt0 CROSS JOIN vt1 ON (((t1.c0, (vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xfffffffff37a2211) AND (vt0.c1)), t1.c0 COLLATE NOCASE, (- (vt0.c1))))<(((((vt0.c0, vt0.c1, t1.c0))<((vt0.c0, t1.c0, t1.c0))), LIKE(vt0.c1, t1.c0), ((vt0.c1) ISNULL), CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END, x'e053'))) WHERE (((~ (vt1.c0)) IN (((vt1.c0)*(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c0)) IN (((vt1.c0)*(t1.c0))))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (((t1.c0, (vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0Xfffffffff37a2211) AND (vt0.c1)), t1.c0 COLLATE NOCASE, (- (vt0.c1))))<(((((vt0.c0, vt0.c1, t1.c0))<((vt0.c0, t1.c0, t1.c0))), LIKE(vt0.c1, t1.c0), ((vt0.c1) ISNULL), CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END, x'e053'))) ORDER BY t1.c0  NULLS FIRST);
SELECT * FROM t1, vt0 CROSS JOIN vt1 ON (((t1.c0, (vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xfffffffff37a2211) AND (vt0.c1)), t1.c0 COLLATE NOCASE, (- (vt0.c1))))<(((((vt0.c0, vt0.c1, t1.c0))<((vt0.c0, t1.c0, t1.c0))), LIKE(vt0.c1, t1.c0), ((vt0.c1) ISNULL), CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END, x'e053'))) WHERE (((~ (vt1.c0)) IN (((vt1.c0)*(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt1.c0)) IN (((vt1.c0)*(t1.c0))))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (((t1.c0, (vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0Xfffffffff37a2211) AND (vt0.c1)), t1.c0 COLLATE NOCASE, (- (vt0.c1))))<(((((vt0.c0, vt0.c1, t1.c0))<((vt0.c0, t1.c0, t1.c0))), LIKE(vt0.c1, t1.c0), ((vt0.c1) ISNULL), CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END, x'e053'))) ORDER BY t1.c0  NULLS FIRST);
SELECT * FROM t1, vt0 CROSS JOIN vt1 ON (((t1.c0, (vt0.c0 IN ()), ((vt1.c0) NOT BETWEEN (0xfffffffff37a2211) AND (vt0.c1)), t1.c0 COLLATE NOCASE, (- (vt0.c1))))<(((((vt0.c0, vt0.c1, t1.c0))<((vt0.c0, t1.c0, t1.c0))), LIKE(vt0.c1, t1.c0), ((vt0.c1) ISNULL), CASE WHEN t1.c0 THEN vt1.c0 ELSE vt0.c0 END, x'e053'))) WHERE (((~ (vt1.c0)) IN (((vt1.c0)*(t1.c0))))) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))!=((t1.c0))))) AND ((((t1.c0)%(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0))<>((t1.c0))))) AND ((((t1.c0)%(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))!=((t1.c0))))) AND ((((t1.c0)%(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((((t1.c0))<>((t1.c0))))) AND ((((t1.c0)%(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c0)) BETWEEN (((((t1.c0))!=((t1.c0))))) AND ((((t1.c0)%(t1.c0))))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)) AND ((CASE WHEN vt1.c0 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)) AND ((CASE WHEN vt1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)) AND ((CASE WHEN vt1.c0 THEN t1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)) AND ((CASE WHEN vt1.c0 THEN t1.c0 END)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 ELSE t1.c0 END)) AND ((CASE WHEN vt1.c0 THEN t1.c0 END))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((json_insert(vt0.c0, vt0.c0, vt0.c1) IN (((NULL)OR(vt0.c1)), LOWER(vt0.c0)))) ORDER BY (~ (CAST(t1.c0 AS INTEGER)))  NULLS FIRST, (- (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT (((json_insert(vt0.c0, vt0.c0, vt0.c1) IN (((NULL)OR(vt0.c1)), LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (CAST(t1.c0 AS INTEGER)))  NULLS FIRST, (- (((vt0.c1) IS FALSE))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((json_insert(vt0.c0, vt0.c0, vt0.c1) IN (((NULL)OR(vt0.c1)), LOWER(vt0.c0)))) ORDER BY (~ (CAST(t1.c0 AS INTEGER)))  NULLS FIRST, (- (((vt0.c1) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT (((json_insert(vt0.c0, vt0.c0, vt0.c1) IN (((NULL)OR(vt0.c1)), LOWER(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (~ (CAST(t1.c0 AS INTEGER)))  NULLS FIRST, (- (((vt0.c1) IS FALSE))) DESC);
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT SUM(count) FROM (SELECT ALL ((0.16864329502305075) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT SUM(count) FROM (SELECT ALL ((0.16864329502305075) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((48171031)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((~ (NULL))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((48171031)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((~ (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((48171031)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((~ (NULL))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((48171031)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((~ (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ (x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((((48171031)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))OR(vt1.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))OR((~ (NULL))))) ORDER BY (~ (x'')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))&(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY LOWER(DISTINCT ((vt1.c0)=(0.9336799779494707))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))&(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT ((vt1.c0)==(0.9336799779494707))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))&(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY LOWER(DISTINCT ((vt1.c0)=(0.9336799779494707))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))&(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT ((vt1.c0)==(0.9336799779494707))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL)))&(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY LOWER(DISTINCT ((vt1.c0)=(0.9336799779494707))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))LIKE(vt0.c1))) ORDER BY 0.9485369875785626, TIME((NOT (vt0.c1)), CAST(t1.c0 AS REAL), CASE 0.13404600675793132  WHEN t1.c0 THEN vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))LIKE(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY 0.9485369875785626, TIME((NOT (vt0.c1)), CAST(t1.c0 AS REAL), CASE 0.13404600675793132  WHEN t1.c0 THEN vt1.c0 END) ASC);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))LIKE(vt0.c1))) ORDER BY 0.9485369875785626, TIME((NOT (vt0.c1)), CAST(t1.c0 AS REAL), CASE 0.13404600675793132  WHEN t1.c0 THEN vt1.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))LIKE(vt0.c1))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY 0.9485369875785626, TIME((NOT (vt0.c1)), CAST(t1.c0 AS REAL), CASE 0.13404600675793132  WHEN t1.c0 THEN vt1.c0 END) ASC);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)))LIKE(vt0.c1))) ORDER BY 0.9485369875785626, TIME((NOT (vt0.c1)), CAST(t1.c0 AS REAL), CASE 0.13404600675793132  WHEN t1.c0 THEN vt1.c0 END) ASC;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) AND ((((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, 0Xffffffffbc1660a8, vt0.c1)))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) AND ((((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, 0xffffffffbc1660a8, vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) AND ((((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, 0Xffffffffbc1660a8, vt0.c1)))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) AND ((((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, 0xffffffffbc1660a8, vt0.c1)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((vt0.c1) BETWEEN ((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) AND ((((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, 0Xffffffffbc1660a8, vt0.c1)))))) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (0.16864329502305075) AND ((vt0.c0 IN ())))) ORDER BY (('o|') NOTNULL)  NULLS LAST, ((((vt0.c0)<=(t1.c0)))&(CASE WHEN vt0.c0 THEN t1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (0.16864329502305075) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (('o|') NOTNULL)  NULLS LAST, ((((vt0.c0)<=(t1.c0)))&(CASE WHEN vt0.c0 THEN t1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (0.16864329502305075) AND ((vt0.c0 IN ())))) ORDER BY (('o|') NOTNULL)  NULLS LAST, ((((vt0.c0)<=(t1.c0)))&(CASE WHEN vt0.c0 THEN t1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (0.16864329502305075) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (('o|') NOTNULL)  NULLS LAST, ((((vt0.c0)<=(t1.c0)))&(CASE WHEN vt0.c0 THEN t1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((((t1.c0)OR(t1.c0)))AND(vt1.c0))) NOT BETWEEN (0.16864329502305075) AND ((vt0.c0 IN ())))) ORDER BY (('o|') NOTNULL)  NULLS LAST, ((((vt0.c0)<=(t1.c0)))&(CASE WHEN vt0.c0 THEN t1.c0 ELSE vt1.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)<=(t1.c0)))/((((t1.c0))>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<=(t1.c0)))/((((t1.c0))>((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)<=(t1.c0)))/((((t1.c0))>((t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<=(t1.c0)))/((((t1.c0))>((t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c0)<=(t1.c0)))/((((t1.c0))>((t1.c0))))));
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))<=((vt1.c0))) IN ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<=((vt1.c0))) IN ((- (t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))<=((vt1.c0))) IN ((- (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))<=((vt1.c0))) IN ((- (t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))<=((vt1.c0))) IN ((- (t1.c0)))));
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0) IS FALSE)))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE)))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0) IS FALSE)))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) IS FALSE)))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c0) IS FALSE)))>=((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((+ (t1.c0))))) ORDER BY NULLIF(CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c0, t1.c0))<=((x'', t1.c0, t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c0, t1.c0))<=((x'', t1.c0, t1.c0)))) ASC);
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((+ (t1.c0))))) ORDER BY NULLIF(CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c0, t1.c0))<=((x'', t1.c0, t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((+ (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY NULLIF(CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c0, t1.c0))<=((x'', t1.c0, t1.c0)))) ASC);
SELECT * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL)))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((+ (t1.c0))))) ORDER BY NULLIF(CAST(t1.c0 AS NUMERIC), (((t1.c0, t1.c0, t1.c0))<=((x'', t1.c0, t1.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT ALL * FROM t1 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffffd9c7a82f THEN x'b0ef' WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE (~ (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN ((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE t1.c0  WHEN vt1.c0 THEN vt0.c1 END)) WHERE (((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffffd9c7a82f THEN x'b0ef' WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE (~ (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN ((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE t1.c0  WHEN vt1.c0 THEN vt0.c1 END)));
SELECT ALL * FROM t1 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffffd9c7a82f THEN x'b0ef' WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE (~ (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN ((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE t1.c0  WHEN vt1.c0 THEN vt0.c1 END)) WHERE (((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT)) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CASE CASE WHEN 0xffffffffd9c7a82f THEN x'b0ef' WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END  WHEN SQLITE_COMPILEOPTION_GET(vt0.c0) THEN vt0.c0 COLLATE RTRIM ELSE (~ (vt0.c0)) END RIGHT OUTER JOIN vt0 ON ((vt0.c1) BETWEEN ((('') NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (CASE t1.c0  WHEN vt1.c0 THEN vt0.c1 END)));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((vt0.c0 IN ()))))AND((+ (vt0.c0)))))AND((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM t1 WHERE ((+ ((NOT ('7૳'))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT ('7૳'))))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((+ ((NOT ('7૳'))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT ('7૳'))))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((+ ((NOT ('7૳'))))) ORDER BY NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE ('501145457') ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (t1.c0) AND (((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('501145457') IS TRUE)  as count FROM t1, vt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (t1.c0) AND (((vt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE ('501145457') ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (t1.c0) AND (((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('501145457') IS TRUE)  as count FROM t1, vt0 ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (t1.c0) AND (((vt0.c0) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE ('501145457') ORDER BY ((TYPEOF(vt0.c0)) NOT BETWEEN (t1.c0) AND (((vt0.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t1 WHERE (((vt0.c0 COLLATE NOCASE)>>(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)>>(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((vt0.c0 COLLATE NOCASE)>>(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)>>(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t1.c0 END))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((vt0.c0 COLLATE NOCASE)>>(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t1.c0 END)));
SELECT * FROM t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN t1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN t1.c0 END IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN t1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN t1.c0 END IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((CASE WHEN vt1.c0 THEN t1.c0 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.6930477062650957, vt0.c0, vt0.c1))))))AND(((vt0.c0)&(0.40036940582807035)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.6930477062650957, vt0.c0, vt0.c1))))))AND(((vt0.c0)&(0.40036940582807035))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.6930477062650957, vt0.c0, vt0.c1))))))AND(((vt0.c0)&(0.40036940582807035)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.6930477062650957, vt0.c0, vt0.c1))))))AND(((vt0.c0)&(0.40036940582807035))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1, vt0.c1, 0.6930477062650957, vt0.c0, vt0.c1))))))AND(((vt0.c0)&(0.40036940582807035)))));
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c0)%(t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN ((vt0.c1)LIKE(vt0.c0)) END) ORDER BY UNICODE(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN ((vt0.c1)LIKE(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY UNICODE(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c0)%(t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN ((vt0.c1)LIKE(vt0.c0)) END) ORDER BY UNICODE(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)%(t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN ((vt0.c1)LIKE(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY UNICODE(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (CASE ((vt0.c0)%(t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN ((vt0.c1)LIKE(vt0.c0)) END) ORDER BY UNICODE(CASE WHEN t1.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND ((- (vt0.c0))))) ORDER BY CAST((~ (vt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c1)) AS BLOB));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND ((- (vt0.c0))))) ORDER BY CAST((~ (vt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c1)) AS BLOB));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND ((- (vt0.c0))))) ORDER BY CAST((~ (vt0.c1)) AS BLOB);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE ((x'' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE ((x'' IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE ((x'' IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(0.19967141455520476)) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(0.19967141455520476)) THEN CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(0.19967141455520476)) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(0.19967141455520476)) THEN CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0  WHEN ((((vt1.c0)OR(vt1.c0)))OR(0.19967141455520476)) THEN CAST(vt1.c0 AS INTEGER) END);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)!=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN vt1.c0 END)!=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 CROSS JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END WHERE (x'ccf3');
SELECT SUM(count) FROM (SELECT ALL ((x'ccf3') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 CROSS JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 CROSS JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END WHERE (x'ccf3');
SELECT SUM(count) FROM (SELECT ALL ((x'ccf3') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 CROSS JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON t1.c0 CROSS JOIN vt1 ON CASE WHEN (((vt1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c1))) THEN (vt1.c0 IN (vt1.c0)) ELSE ((vt1.c0)<<(vt1.c0)) END WHERE (x'ccf3');
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (0Xffffffffb09827d5 IN ()) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END END) ORDER BY ((((((((vt0.c0)OR(LIKELIHOOD(t1.c0, 0.6688644566710551))))AND(((('8w'))>=((vt0.c1))))))AND(t1.c0)))AND((- (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (0Xffffffffb09827d5 IN ()) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((((((vt0.c0)OR(LIKELIHOOD(t1.c0, 0.6688644566710551))))AND(((('8w'))>=((vt0.c1))))))AND(t1.c0)))AND((- (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (0Xffffffffb09827d5 IN ()) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END END) ORDER BY ((((((((vt0.c0)OR(LIKELIHOOD(t1.c0, 0.6688644566710551))))AND(((('8w'))>=((vt0.c1))))))AND(t1.c0)))AND((- (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (0Xffffffffb09827d5 IN ()) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((((((vt0.c0)OR(LIKELIHOOD(t1.c0, 0.6688644566710551))))AND(((('8w'))>=((vt0.c1))))))AND(t1.c0)))AND((- (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (0Xffffffffb09827d5 IN ()) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t1.c0 END END) ORDER BY ((((((((vt0.c0)OR(LIKELIHOOD(t1.c0, 0.6688644566710551))))AND(((('8w'))>=((vt0.c1))))))AND(t1.c0)))AND((- (t1.c0))))  NULLS LAST;
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((0Xffffffffc6e1df52 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((LIKELIHOOD(DISTINCT vt1.c0, 0.33212026909685055))+(t1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0xffffffffc6e1df52 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() ORDER BY ((LIKELIHOOD(DISTINCT vt1.c0, 0.33212026909685055))+(t1.c0))  NULLS FIRST);
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((0Xffffffffc6e1df52 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((LIKELIHOOD(DISTINCT vt1.c0, 0.33212026909685055))+(t1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0xffffffffc6e1df52 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() ORDER BY ((LIKELIHOOD(DISTINCT vt1.c0, 0.33212026909685055))+(t1.c0))  NULLS FIRST);
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON LAST_INSERT_ROWID() WHERE ((0Xffffffffc6e1df52 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((LIKELIHOOD(DISTINCT vt1.c0, 0.33212026909685055))+(t1.c0))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY CAST((((x'', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS INTEGER), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))GLOB(((t1.c0)IS NOT(NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CAST((((x'', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS INTEGER), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))GLOB(((t1.c0)IS NOT(NULL)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY CAST((((x'', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS INTEGER), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))GLOB(((t1.c0)IS NOT(NULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY CAST((((x'', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS INTEGER), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))GLOB(((t1.c0)IS NOT(NULL)))));
SELECT ALL * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN (((t1.c0 IN ()))) AND (((~ (t1.c0)))))) ORDER BY CAST((((x'', t1.c0, t1.c0))<((t1.c0, t1.c0, t1.c0))) AS INTEGER), ((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0)))GLOB(((t1.c0)IS NOT(NULL))));
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY x''  NULLS LAST, ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(NULL))) NOT BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS LAST, ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(NULL))) NOT BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY x''  NULLS LAST, ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(NULL))) NOT BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS LAST, ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(NULL))) NOT BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY x''  NULLS LAST, ((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(NULL))) NOT BETWEEN ((+ (t1.c0))) AND (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '_M' THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c1))!=((vt1.c0))))))OR(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '_M' THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c1))<>((vt1.c0))))))OR(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '_M' THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c1))!=((vt1.c0))))))OR(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '_M' THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c1))<>((vt1.c0))))))OR(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '_M' THEN vt0.c0 ELSE vt0.c1 END)OR(vt1.c0)))AND(CAST(vt0.c0 AS NUMERIC))))OR((((vt0.c1))!=((vt1.c0))))))OR(((vt0.c1) NOT NULL)))) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt0.c0) ISNULL) END ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 NATURAL JOIN t1 WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))/(LOWER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))/(LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt1, vt0 NATURAL JOIN t1 WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))/(LOWER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))/(LOWER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1);
SELECT ALL * FROM vt1, vt0 NATURAL JOIN t1 WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0)))/(LOWER(DISTINCT vt1.c0))));
SELECT * FROM vt1, vt0, t1 WHERE (217577785) ORDER BY (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((217577785) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt1, vt0, t1 WHERE (217577785) ORDER BY (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((217577785) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt1, vt0, t1 WHERE (217577785) ORDER BY (((NULL) BETWEEN (vt1.c0) AND (vt0.c0)) IN ());
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS FIRST);
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY x''  NULLS FIRST);
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN vt1 ON 'Ca' WHERE (TYPEOF('48171031')) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((TYPEOF('48171031')) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN vt1 ON 'Ca' ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN vt1 ON 'Ca' WHERE (TYPEOF('48171031')) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((TYPEOF('48171031')) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN vt1 ON 'Ca' ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) FULL OUTER JOIN vt1 ON 'Ca' WHERE (TYPEOF('48171031')) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c1)AND(vt0.c0)))) AND ((CASE vt0.c1  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)));
SELECT * FROM vt0 INNER JOIN vt1 ON (x'' IN ()) WHERE ((((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c1 AS NUMERIC)))=((((vt0.c1)<(vt1.c0)), json_object(vt0.c1, vt0.c0), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))-(ABS(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c1 AS NUMERIC)))=((((vt0.c1)<(vt1.c0)), json_object(vt0.c1, vt0.c0), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (x'' IN ()) ORDER BY ((((vt0.c0)AND(vt0.c0)))-(ABS(DISTINCT vt1.c0))));
SELECT * FROM vt0 INNER JOIN vt1 ON (x'' IN ()) WHERE ((((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c1 AS NUMERIC)))=((((vt0.c1)<(vt1.c0)), json_object(vt0.c1, vt0.c0), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))-(ABS(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c1 AS NUMERIC)))=((((vt0.c1)<(vt1.c0)), json_object(vt0.c1, vt0.c0), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (x'' IN ()) ORDER BY ((((vt0.c0)AND(vt0.c0)))-(ABS(DISTINCT vt1.c0))));
SELECT * FROM vt0 INNER JOIN vt1 ON (x'' IN ()) WHERE ((((vt0.c1 COLLATE BINARY, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c1 AS NUMERIC)))=((((vt0.c1)<(vt1.c0)), json_object(vt0.c1, vt0.c0), ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))))) ORDER BY ((((vt0.c0)AND(vt0.c0)))-(ABS(DISTINCT vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))>>((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, vt0.c1, t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) IS FALSE))>>((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, vt0.c1, t1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))>>((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, vt0.c1, t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) IS FALSE))>>((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, vt0.c1, t1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY ((((t1.c0) IS FALSE))>>((((vt0.c0, vt0.c1, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, NULL)) AND ((vt0.c1, vt0.c1, t1.c0)))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL)) ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0) ISNULL))))AND((+ (-1.139384152E9)))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, (((vt1.c0)|(vt1.c0)) IN (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0) ISNULL))))AND((+ (-1.139384152E9)))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, (((vt1.c0)|(vt1.c0)) IN (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL)) ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0) ISNULL))))AND((+ (-1.139384152E9)))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, (((vt1.c0)|(vt1.c0)) IN (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0 IN ()))AND(((vt1.c0) ISNULL))))AND((+ (-1.139384152E9)))) DESC  NULLS FIRST, vt1.c0  NULLS LAST, (((vt1.c0)|(vt1.c0)) IN (((vt1.c0)&(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (vt0.c0) ORDER BY json_remove(vt0.c1 COLLATE RTRIM, ((t1.c0)&(vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY json_remove(vt0.c1 COLLATE RTRIM, ((t1.c0)&(vt0.c1)))  NULLS FIRST);
SELECT * FROM vt1, vt0, t1 WHERE (vt0.c0) ORDER BY json_remove(vt0.c1 COLLATE RTRIM, ((t1.c0)&(vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY json_remove(vt0.c1 COLLATE RTRIM, ((t1.c0)&(vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((TIME(vt0.c1, vt0.c1, vt0.c1, vt1.c0, vt1.c0))==((~ (t1.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, vt0.c1, vt0.c1, vt1.c0, vt1.c0))=((~ (t1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((TIME(vt0.c1, vt0.c1, vt0.c1, vt1.c0, vt1.c0))==((~ (t1.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((TIME(vt0.c1, vt0.c1, vt0.c1, vt1.c0, vt1.c0))=((~ (t1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END) ISNULL) ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((TIME(vt0.c1, vt0.c1, vt0.c1, vt1.c0, vt1.c0))==((~ (t1.c0))))) ORDER BY ((CASE WHEN vt0.c1 THEN vt1.c0 END) ISNULL) ASC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)*(vt1.c0))) NOT BETWEEN ((- (vt1.c0))) AND (CAST(vt1.c0 AS REAL)))) ORDER BY CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY DESC;
SELECT ALL * FROM vt1, t1 INNER JOIN vt0 ON LIKELIHOOD(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c1, t1.c0), 0.946361418292327) WHERE ((vt0.c1 COLLATE NOCASE IN (vt0.c0 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (NULLIF(vt0.c0, vt1.c0)))  NULLS LAST, (((- (t1.c0)))<<(((((vt0.c0)OR(0.24665309641301003)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN (vt0.c0 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1 INNER JOIN vt0 ON LIKELIHOOD(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c1, t1.c0), 0.946361418292327) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (NULLIF(vt0.c0, vt1.c0)))  NULLS LAST, (((- (t1.c0)))<<(((((vt0.c0)OR(0.24665309641301003)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, t1 INNER JOIN vt0 ON LIKELIHOOD(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c1, t1.c0), 0.946361418292327) WHERE ((vt0.c1 COLLATE NOCASE IN (vt0.c0 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (NULLIF(vt0.c0, vt1.c0)))  NULLS LAST, (((- (t1.c0)))<<(((((vt0.c0)OR(0.24665309641301003)))OR(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN (vt0.c0 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1 INNER JOIN vt0 ON LIKELIHOOD(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c1, t1.c0), 0.946361418292327) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (NULLIF(vt0.c0, vt1.c0)))  NULLS LAST, (((- (t1.c0)))<<(((((vt0.c0)OR(0.24665309641301003)))OR(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, t1 INNER JOIN vt0 ON LIKELIHOOD(COALESCE(DISTINCT vt1.c0, vt0.c0, vt0.c1, t1.c0), 0.946361418292327) WHERE ((vt0.c1 COLLATE NOCASE IN (vt0.c0 COLLATE BINARY, ((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ORDER BY ((HEX(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c1) IS TRUE)) AND (NULLIF(vt0.c0, vt1.c0)))  NULLS LAST, (((- (t1.c0)))<<(((((vt0.c0)OR(0.24665309641301003)))OR(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_remove(((vt0.c0) NOTNULL), vt0.c1)) ORDER BY CAST(((vt0.c1)%(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((json_remove(((vt0.c0) NOTNULL), vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)%(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_remove(((vt0.c0) NOTNULL), vt0.c1)) ORDER BY CAST(((vt0.c1)%(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((json_remove(((vt0.c0) NOTNULL), vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)%(vt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE (vt0.c1) ORDER BY ((CASE WHEN x'' THEN 0.3916841900504956 ELSE x'' END) NOT BETWEEN ((((vt1.c0))>=((t1.c0)))) AND ((((vt0.c1))>=((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN x'' THEN 0.3916841900504956 ELSE x'' END) NOT BETWEEN ((((vt1.c0))>=((t1.c0)))) AND ((((vt0.c1))>=((t1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE (vt0.c1) ORDER BY ((CASE WHEN x'' THEN 0.3916841900504956 ELSE x'' END) NOT BETWEEN ((((vt1.c0))>=((t1.c0)))) AND ((((vt0.c1))>=((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CASE WHEN x'' THEN 0.3916841900504956 ELSE x'' END) NOT BETWEEN ((((vt1.c0))>=((t1.c0)))) AND ((((vt0.c1))>=((t1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE (vt0.c1) ORDER BY ((CASE WHEN x'' THEN 0.3916841900504956 ELSE x'' END) NOT BETWEEN ((((vt1.c0))>=((t1.c0)))) AND ((((vt0.c1))>=((t1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (vt0.c1 IN ()) WHERE ((((- (vt0.c0)))IS((vt1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS((vt1.c0 IN (t1.c0))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (vt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (vt0.c1 IN ()) WHERE ((((- (vt0.c0)))IS((vt1.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))IS((vt1.c0 IN (t1.c0))))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (vt0.c1 IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (vt0.c1 IN ()) WHERE ((((- (vt0.c0)))IS((vt1.c0 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0, vt1.c0, t1.c0)) BETWEEN ((COALESCE(DISTINCT t1.c0, vt1.c0, vt1.c0, vt0.c0), (vt0.c0 IN (vt1.c0)), highlight(t1.c0, vt0.c1, vt0.c0, vt1.c0))) AND (((+ (vt0.c0)), LIKE(t1.c0, vt0.c0), ((vt0.c1)=(vt0.c0))))) WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))AND(CAST(vt0.c1 AS INTEGER))))AND(0.9749132225164411))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((NULL IN ())) AND (CASE WHEN vt0.c0 THEN 630735806 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))AND(CAST(vt0.c1 AS INTEGER))))AND(0.9749132225164411))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0, vt1.c0, t1.c0)) BETWEEN ((COALESCE(DISTINCT t1.c0, vt1.c0, vt1.c0, vt0.c0), (vt0.c0 IN (vt1.c0)), highlight(t1.c0, vt0.c1, vt0.c0, vt1.c0))) AND (((+ (vt0.c0)), LIKE(t1.c0, vt0.c0), ((vt0.c1)=(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((NULL IN ())) AND (CASE WHEN vt0.c0 THEN 630735806 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0, vt1.c0, t1.c0)) BETWEEN ((COALESCE(DISTINCT t1.c0, vt1.c0, vt1.c0, vt0.c0), (vt0.c0 IN (vt1.c0)), highlight(t1.c0, vt0.c1, vt0.c0, vt1.c0))) AND (((+ (vt0.c0)), LIKE(t1.c0, vt0.c0), ((vt0.c1)=(vt0.c0))))) WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))AND(CAST(vt0.c1 AS INTEGER))))AND(0.9749132225164411))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((NULL IN ())) AND (CASE WHEN vt0.c0 THEN 630735806 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))AND(CAST(vt0.c1 AS INTEGER))))AND(0.9749132225164411))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0, vt1.c0, t1.c0)) BETWEEN ((COALESCE(DISTINCT t1.c0, vt1.c0, vt1.c0, vt0.c0), (vt0.c0 IN (vt1.c0)), highlight(t1.c0, vt0.c1, vt0.c0, vt1.c0))) AND (((+ (vt0.c0)), LIKE(t1.c0, vt0.c0), ((vt0.c1)=(vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((NULL IN ())) AND (CASE WHEN vt0.c0 THEN 630735806 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0, vt1.c0, t1.c0)) BETWEEN ((COALESCE(DISTINCT t1.c0, vt1.c0, vt1.c0, vt0.c0), (vt0.c0 IN (vt1.c0)), highlight(t1.c0, vt0.c1, vt0.c0, vt1.c0))) AND (((+ (vt0.c0)), LIKE(t1.c0, vt0.c0), ((vt0.c1)=(vt0.c0))))) WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))AND(CAST(vt0.c1 AS INTEGER))))AND(0.9749132225164411))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((NULL IN ())) AND (CASE WHEN vt0.c0 THEN 630735806 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1 WHERE (217577785);
SELECT SUM(count) FROM (SELECT ((217577785) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (217577785);
SELECT SUM(count) FROM (SELECT ((217577785) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (217577785);
SELECT * FROM vt0 WHERE (STRFTIME((vt0.c1 IN ('-641226705', vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE '1754374824' END, CASE '^('  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END, IFNULL(vt0.c1, vt0.c1), ((vt0.c1)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN ('-641226705', vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE '1754374824' END, CASE '^('  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END, IFNULL(vt0.c1, vt0.c1), ((vt0.c1)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (STRFTIME((vt0.c1 IN ('-641226705', vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE '1754374824' END, CASE '^('  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END, IFNULL(vt0.c1, vt0.c1), ((vt0.c1)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((STRFTIME((vt0.c1 IN ('-641226705', vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE '1754374824' END, CASE '^('  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END, IFNULL(vt0.c1, vt0.c1), ((vt0.c1)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (STRFTIME((vt0.c1 IN ('-641226705', vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE '1754374824' END, CASE '^('  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL END, IFNULL(vt0.c1, vt0.c1), ((vt0.c1)LIKE(vt0.c0))));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON ((((vt0.c0)OR(((vt0.c1) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((vt0.c0)<(vt0.c1)))<(vt0.c0)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((vt0.c0)OR(((vt0.c1) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((vt0.c0)<(vt0.c1)))<(vt0.c0)));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON ((((vt0.c0)OR(((vt0.c1) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((vt0.c0)<(vt0.c1)))<(vt0.c0)) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((vt0.c0)OR(((vt0.c1) IS FALSE))))OR(vt0.c0 COLLATE BINARY)) FULL OUTER JOIN vt0 ON ((((vt0.c0)<(vt0.c1)))<(vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE ((((vt0.c1 IN ()))-(((vt0.c1)AND(vt1.c0))))) ORDER BY vt0.c1  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c0 THEN vt0.c1 END)AND((+ (vt0.c1)))))OR(TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))-(((vt0.c1)AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1 ORDER BY vt0.c1  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c0 THEN vt0.c1 END)AND((+ (vt0.c1)))))OR(TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE ((((vt0.c1 IN ()))-(((vt0.c1)AND(vt1.c0))))) ORDER BY vt0.c1  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c0 THEN vt0.c1 END)AND((+ (vt0.c1)))))OR(TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))-(((vt0.c1)AND(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1 ORDER BY vt0.c1  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c0 THEN vt0.c1 END)AND((+ (vt0.c1)))))OR(TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 NATURAL JOIN t1 WHERE ((((vt0.c1 IN ()))-(((vt0.c1)AND(vt1.c0))))) ORDER BY vt0.c1  NULLS FIRST, ((((CASE t1.c0  WHEN t1.c0 THEN vt0.c1 END)AND((+ (vt0.c1)))))OR(TYPEOF(DISTINCT t1.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE (((((CAST(t1.c0 AS BLOB))AND(CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS BLOB))AND(CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((vt1.c0)OR(t1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE (((((CAST(t1.c0 AS BLOB))AND(CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS BLOB))AND(CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((vt1.c0)OR(t1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t1, vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 COLLATE NOCASE WHERE (((((CAST(t1.c0 AS BLOB))AND(CASE NULL  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))));
SELECT ALL * FROM vt0, t1, vt1 WHERE (((t1.c0)LIKE(vt1.c0))) ORDER BY (((~ (vt0.c0)))GLOB(t1.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(vt1.c0))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((~ (vt0.c0)))GLOB(t1.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((t1.c0)LIKE(vt1.c0))) ORDER BY (((~ (vt0.c0)))GLOB(t1.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(vt1.c0))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((~ (vt0.c0)))GLOB(t1.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1 WHERE (((t1.c0)LIKE(vt1.c0))) ORDER BY (((~ (vt0.c0)))GLOB(t1.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c1))>=((vt0.c1))) AS BLOB)) ORDER BY ((vt0.c1)||(NULL)) COLLATE NOCASE DESC, '^(';
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))>=((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)||(NULL)) COLLATE NOCASE DESC, '^(');
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c1))>=((vt0.c1))) AS BLOB)) ORDER BY ((vt0.c1)||(NULL)) COLLATE NOCASE DESC, '^(';
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1))>=((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)||(NULL)) COLLATE NOCASE DESC, '^(');
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c1))>=((vt0.c1))) AS BLOB)) ORDER BY ((vt0.c1)||(NULL)) COLLATE NOCASE DESC, '^(';
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))<=(((x'' IN (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))=(((t1.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))<=(((x'' IN (t1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((vt0.c0 IN ()))==(((t1.c0)>(vt0.c0)))));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))<=(((x'' IN (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))=(((t1.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))<=(((x'' IN (t1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((vt0.c0 IN ()))==(((t1.c0)>(vt0.c0)))));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END))<=(((x'' IN (t1.c0)))))) ORDER BY (((vt0.c0 IN ()))=(((t1.c0)>(vt0.c0))));
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c0)))<<((- (t1.c0))))) ORDER BY LIKELIHOOD(DISTINCT CAST(t1.c0 AS NUMERIC), 0.9426860973013906) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))<<((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY LIKELIHOOD(DISTINCT CAST(t1.c0 AS NUMERIC), 0.9426860973013906) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c0)))<<((- (t1.c0))))) ORDER BY LIKELIHOOD(DISTINCT CAST(t1.c0 AS NUMERIC), 0.9426860973013906) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c0)))<<((- (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY LIKELIHOOD(DISTINCT CAST(t1.c0 AS NUMERIC), 0.9426860973013906) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((- (t1.c0)))<<((- (t1.c0))))) ORDER BY LIKELIHOOD(DISTINCT CAST(t1.c0 AS NUMERIC), 0.9426860973013906) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN ('-1332623151') AND (vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN ('-1332623151') AND (vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN ('-1332623151') AND (vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))<(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN ('-1332623151') AND (vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))<(((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(vt0.c0 AS BLOB))OR(((vt0.c0) BETWEEN ('-1332623151') AND (vt0.c1)))))OR(((vt0.c1)LIKE(vt0.c0))));
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END ELSE vt1.c0 END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE NULL END ELSE vt1.c0 END);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((((((t1.c0)*(t1.c0)))AND(NULLIF(DISTINCT vt1.c0, t1.c0))))OR(CASE 'fὂ'  WHEN vt1.c0 THEN t1.c0 WHEN '-516559061' THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))AND(((vt1.c0) BETWEEN (t1.c0) AND (vt1.c0)))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)*(t1.c0)))AND(NULLIF(DISTINCT vt1.c0, t1.c0))))OR(CASE 'fὂ'  WHEN vt1.c0 THEN t1.c0 WHEN '-516559061' THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))AND(((vt1.c0) BETWEEN (t1.c0) AND (vt1.c0)))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((((((t1.c0)*(t1.c0)))AND(NULLIF(DISTINCT vt1.c0, t1.c0))))OR(CASE 'fὂ'  WHEN vt1.c0 THEN t1.c0 WHEN '-516559061' THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))AND(((vt1.c0) BETWEEN (t1.c0) AND (vt1.c0)))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)*(t1.c0)))AND(NULLIF(DISTINCT vt1.c0, t1.c0))))OR(CASE 'fὂ'  WHEN vt1.c0 THEN t1.c0 WHEN '-516559061' THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))AND(((vt1.c0) BETWEEN (t1.c0) AND (vt1.c0)))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((((((t1.c0)*(t1.c0)))AND(NULLIF(DISTINCT vt1.c0, t1.c0))))OR(CASE 'fὂ'  WHEN vt1.c0 THEN t1.c0 WHEN '-516559061' THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END)))AND(((vt1.c0) BETWEEN (t1.c0) AND (vt1.c0)))))AND((t1.c0 IN ()))));
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c0)%(vt0.c1)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(vt0.c1)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c0)%(vt0.c1)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)%(vt0.c1)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((vt0.c0)%(vt0.c1)))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))OR(t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))==(CAST(NULL AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))=(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))==(CAST(NULL AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))=(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0)OR(vt1.c0)))==(CAST(NULL AS INTEGER)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0)==(CASE WHEN t1.c0 THEN 0.07726722617616577 END))) ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)=(CASE WHEN t1.c0 THEN 0.07726722617616577 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC, vt1.c0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0)==(CASE WHEN t1.c0 THEN 0.07726722617616577 END))) ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC, vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)=(CASE WHEN t1.c0 THEN 0.07726722617616577 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC, vt1.c0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0)==(CASE WHEN t1.c0 THEN 0.07726722617616577 END))) ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) ASC, vt1.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, 'xp欂R')))))) ORDER BY (- (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, 'xp欂R')))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, 'xp欂R')))))) ORDER BY (- (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, 'xp欂R')))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 IN ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, 'xp欂R')))))) ORDER BY (- (((vt0.c0)!=(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((('-1637280384')<=(t1.c0))) NOTNULL)) ORDER BY (((((t1.c0))>((t1.c0))))>(NULLIF(DISTINCT t1.c0, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('-1637280384')<=(t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0))>((t1.c0))))>(NULLIF(DISTINCT t1.c0, t1.c0))));
SELECT ALL * FROM t1 WHERE ((((('-1637280384')<=(t1.c0))) NOTNULL)) ORDER BY (((((t1.c0))>((t1.c0))))>(NULLIF(DISTINCT t1.c0, t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('-1637280384')<=(t1.c0))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0))>((t1.c0))))>(NULLIF(DISTINCT t1.c0, t1.c0))));
SELECT ALL * FROM t1 WHERE ((((('-1637280384')<=(t1.c0))) NOTNULL)) ORDER BY (((((t1.c0))>((t1.c0))))>(NULLIF(DISTINCT t1.c0, t1.c0)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE WHEN ((0.3632728093008126) IS TRUE) THEN (- (vt0.c0)) END WHERE (CASE WHEN TYPEOF(t1.c0) THEN (((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(t1.c0) THEN (((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c1 END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE WHEN ((0.3632728093008126) IS TRUE) THEN (- (vt0.c0)) END);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE WHEN ((0.3632728093008126) IS TRUE) THEN (- (vt0.c0)) END WHERE (CASE WHEN TYPEOF(t1.c0) THEN (((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(t1.c0) THEN (((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE vt0.c1 END) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON CASE WHEN ((0.3632728093008126) IS TRUE) THEN (- (vt0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (CAST(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0) AS BLOB));
SELECT * FROM vt0 CROSS JOIN t1 ON ((t1.c0)>>(((vt0.c1) IS FALSE))) WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c0 END)<(CAST(vt0.c1 AS TEXT)))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN t1.c0 END)<(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((t1.c0)>>(((vt0.c1) IS FALSE))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER));
SELECT * FROM vt0 CROSS JOIN t1 ON ((t1.c0)>>(((vt0.c1) IS FALSE))) WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c0 END)<(CAST(vt0.c1 AS TEXT)))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN t1.c0 END)<(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((t1.c0)>>(((vt0.c1) IS FALSE))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER));
SELECT * FROM vt0 CROSS JOIN t1 ON ((t1.c0)>>(((vt0.c1) IS FALSE))) WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c0 END)<(CAST(vt0.c1 AS TEXT)))) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS INTEGER);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY json_type(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY json_type(vt1.c0) DESC);
SELECT * FROM vt1, vt0, t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY json_type(vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY json_type(vt1.c0) DESC);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))>((t1.c0))))+(((0.09411155211920841)-(vt0.c0)))) WHERE (((CAST(vt0.c0 AS TEXT))&(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)%((((vt0.c1)) BETWEEN ((x'')) AND ((NULL))))) DESC  NULLS FIRST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))>((t1.c0))))+(((0.09411155211920841)-(vt0.c0)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)%((((vt0.c1)) BETWEEN ((x'')) AND ((NULL))))) DESC  NULLS FIRST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))>((t1.c0))))+(((0.09411155211920841)-(vt0.c0)))) WHERE (((CAST(vt0.c0 AS TEXT))&(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)%((((vt0.c1)) BETWEEN ((x'')) AND ((NULL))))) DESC  NULLS FIRST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))&(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))>((t1.c0))))+(((0.09411155211920841)-(vt0.c0)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)%((((vt0.c1)) BETWEEN ((x'')) AND ((NULL))))) DESC  NULLS FIRST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON (((((vt0.c0))>((t1.c0))))+(((0.09411155211920841)-(vt0.c0)))) WHERE (((CAST(vt0.c0 AS TEXT))&(vt0.c0 COLLATE NOCASE))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END)%((((vt0.c1)) BETWEEN ((x'')) AND ((NULL))))) DESC  NULLS FIRST, ((vt0.c0) NOTNULL) DESC  NULLS FIRST, CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1 IN (vt0.c1, t1.c0)))==(LOWER(DISTINCT NULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c1 IN (vt0.c1, t1.c0)))=(LOWER(DISTINCT NULL))));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1 IN (vt0.c1, t1.c0)))==(LOWER(DISTINCT NULL)));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1, vt0 ORDER BY (((vt0.c1 IN (vt0.c1, t1.c0)))=(LOWER(DISTINCT NULL))));
SELECT COUNT(*) FROM t1, vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1 IN (vt0.c1, t1.c0)))==(LOWER(DISTINCT NULL)));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN '' END WHERE (json_patch(t1.c0 COLLATE NOCASE, ((vt0.c1)OR(vt0.c1)))) ORDER BY ((t1.c0 COLLATE BINARY)<(LOWER(vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(t1.c0 COLLATE NOCASE, ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN '' END ORDER BY ((t1.c0 COLLATE BINARY)<(LOWER(vt0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN '' END WHERE (json_patch(t1.c0 COLLATE NOCASE, ((vt0.c1)OR(vt0.c1)))) ORDER BY ((t1.c0 COLLATE BINARY)<(LOWER(vt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_patch(t1.c0 COLLATE NOCASE, ((vt0.c1)OR(vt0.c1)))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON CASE (vt0.c1 IN ())  WHEN (~ (vt0.c1)) THEN '' END ORDER BY ((t1.c0 COLLATE BINARY)<(LOWER(vt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)==(((((((((vt0.c0)OR(vt0.c0)))AND('1375336392')))AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)==(((((((((vt0.c0)OR(vt0.c0)))AND('1375336392')))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)==(((((((((vt0.c0)OR(vt0.c0)))AND('1375336392')))AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)==(((((((((vt0.c0)OR(vt0.c0)))AND('1375336392')))AND(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)==(((((((((vt0.c0)OR(vt0.c0)))AND('1375336392')))AND(vt0.c0)))AND(vt0.c1)))));
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)IS NOT(t1.c0)) ELSE t1.c0 END) ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c0) NOT NULL)))) ASC, (((((t1.c0, t1.c0, t1.c0))!=((t1.c0, 0.697350093322335, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c0)LIKE(t1.c0))  WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t1.c0)IS NOT(t1.c0)) ELSE t1.c0 END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c0) NOT NULL)))) ASC, (((((t1.c0, t1.c0, t1.c0))!=((t1.c0, 0.697350093322335, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c0)LIKE(t1.c0))  WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)IS NOT(t1.c0)) ELSE t1.c0 END) ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c0) NOT NULL)))) ASC, (((((t1.c0, t1.c0, t1.c0))!=((t1.c0, 0.697350093322335, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c0)LIKE(t1.c0))  WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((t1.c0)IS NOT(t1.c0)) ELSE t1.c0 END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c0) NOT NULL)))) ASC, (((((t1.c0, t1.c0, t1.c0))!=((t1.c0, 0.697350093322335, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c0)LIKE(t1.c0))  WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC);
SELECT * FROM t1 WHERE (CASE WHEN NULL THEN ((t1.c0)IS NOT(t1.c0)) ELSE t1.c0 END) ORDER BY (((t1.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE)) AND ((((t1.c0) NOT NULL)))) ASC, (((((t1.c0, t1.c0, t1.c0))!=((t1.c0, 0.697350093322335, t1.c0)))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE BINARY)) DESC, CASE ((t1.c0)LIKE(t1.c0))  WHEN (+ (t1.c0)) THEN CAST(t1.c0 AS INTEGER) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0))>((vt0.c0)))) AND ((~ (vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (('-82346237' IN ())) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (('-82346237' IN ())) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (('-82346237' IN ())) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (('-82346237' IN ())) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (('-82346237' IN ())) AND (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT COUNT(*) FROM vt0 WHERE (179531391) ORDER BY ((((vt0.c0)!=(vt0.c1))) NOTNULL) ASC  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((179531391) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c1))) NOTNULL) ASC  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (179531391) ORDER BY ((((vt0.c0)!=(vt0.c1))) NOTNULL) ASC  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((179531391) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<>(vt0.c1))) NOTNULL) ASC  NULLS FIRST, NULL DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (179531391) ORDER BY ((((vt0.c0)!=(vt0.c1))) NOTNULL) ASC  NULLS FIRST, NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((('1154293570')) BETWEEN ((vt1.c0)) AND ((t1.c0))) THEN ((NULL)LIKE(vt0.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('1154293570')) BETWEEN ((vt1.c0)) AND ((t1.c0))) THEN ((NULL)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((('1154293570')) BETWEEN ((vt1.c0)) AND ((t1.c0))) THEN ((NULL)LIKE(vt0.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((('1154293570')) BETWEEN ((vt1.c0)) AND ((t1.c0))) THEN ((NULL)LIKE(vt0.c0)) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CASE WHEN ((('1154293570')) BETWEEN ((vt1.c0)) AND ((t1.c0))) THEN ((NULL)LIKE(vt0.c0)) END) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON (- (CAST(vt1.c0 AS BLOB))) WHERE (((x'')>=(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (- (CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON (- (CAST(vt1.c0 AS BLOB))) WHERE (((x'')>=(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')>=(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (- (CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON (- (CAST(vt1.c0 AS BLOB))) WHERE (((x'')>=(t1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN ((vt0.c0) IS FALSE) THEN (t1.c0 IN ()) ELSE CASE t1.c0  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END END WHERE (DATE(vt1.c0, vt0.c0, ((t1.c0) NOT BETWEEN (0.84198934616285) AND (t1.c0)), ((vt1.c0)+(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) IS TRUE) ELSE (~ (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, vt0.c0, ((t1.c0) NOT BETWEEN (0.84198934616285) AND (t1.c0)), ((vt1.c0)+(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN ((vt0.c0) IS FALSE) THEN (t1.c0 IN ()) ELSE CASE t1.c0  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END END ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) IS TRUE) ELSE (~ (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN ((vt0.c0) IS FALSE) THEN (t1.c0 IN ()) ELSE CASE t1.c0  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END END WHERE (DATE(vt1.c0, vt0.c0, ((t1.c0) NOT BETWEEN (0.84198934616285) AND (t1.c0)), ((vt1.c0)+(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) IS TRUE) ELSE (~ (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, vt0.c0, ((t1.c0) NOT BETWEEN (0.84198934616285) AND (t1.c0)), ((vt1.c0)+(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN ((vt0.c0) IS FALSE) THEN (t1.c0 IN ()) ELSE CASE t1.c0  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END END ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) IS TRUE) ELSE (~ (vt0.c0)) END ASC  NULLS LAST);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON CASE ((vt1.c0)>=(vt1.c0))  WHEN ((vt0.c0) IS FALSE) THEN (t1.c0 IN ()) ELSE CASE t1.c0  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE t1.c0 END END WHERE (DATE(vt1.c0, vt0.c0, ((t1.c0) NOT BETWEEN (0.84198934616285) AND (t1.c0)), ((vt1.c0)+(vt0.c1)), ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))) ORDER BY CASE WHEN (vt1.c0 IN ()) THEN ((vt0.c1) IS TRUE) ELSE (~ (vt0.c0)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (json_type(vt0.c1)) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0xffffffff9e691580 THEN 0xffffffffd9ec3cb8 ELSE t1.c0 END IN (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((json_type(vt0.c1)) IS TRUE)  as count FROM t1, vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0xffffffff9e691580 THEN 0xffffffffd9ec3cb8 ELSE t1.c0 END IN (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (json_type(vt0.c1)) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0xffffffff9e691580 THEN 0xffffffffd9ec3cb8 ELSE t1.c0 END IN (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((json_type(vt0.c1)) IS TRUE)  as count FROM t1, vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN 0xffffffff9e691580 THEN 0xffffffffd9ec3cb8 ELSE t1.c0 END IN (((vt0.c0) BETWEEN (t1.c0) AND (vt0.c0)), ((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((t1.c0 COLLATE BINARY)<=((vt1.c0 IN ())))) ORDER BY (((((~ (t1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)<=((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((~ (t1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((t1.c0 COLLATE BINARY)<=((vt1.c0 IN ())))) ORDER BY (((((~ (t1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)<=((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((~ (t1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((t1.c0 COLLATE BINARY)<=((vt1.c0 IN ())))) ORDER BY (((((~ (t1.c0)))AND(((vt1.c0) IS FALSE))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((CAST(vt0.c1 AS TEXT)) IS FALSE);
SELECT * FROM vt0 WHERE (((((UPPER(x''))OR(((((((((vt0.c0)AND(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1))))) ORDER BY ((((NULLIF(x'', vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1)|(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((UPPER(x''))OR(((((((((vt0.c0)AND(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULLIF(x'', vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1)|(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((UPPER(x''))OR(((((((((vt0.c0)AND(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1))))) ORDER BY ((((NULLIF(x'', vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1)|(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((UPPER(x''))OR(((((((((vt0.c0)AND(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULLIF(x'', vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1)|(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (((((UPPER(x''))OR(((((((((vt0.c0)AND(x'')))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))))OR((+ (vt0.c1))))) ORDER BY ((((NULLIF(x'', vt0.c0))OR(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1)|(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((0.7872250405664006)<>(vt0.c0)))|(TRIM(DISTINCT vt0.c0, vt0.c1))) WHERE (json_array_length(x'', ((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(x'', ((t1.c0) NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((0.7872250405664006)<>(vt0.c0)))|(TRIM(DISTINCT vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON ((((0.7872250405664006)<>(vt0.c0)))|(TRIM(DISTINCT vt0.c0, vt0.c1))) WHERE (json_array_length(x'', ((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(x'', ((t1.c0) NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((0.7872250405664006)<>(vt0.c0)))|(TRIM(DISTINCT vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ((- (vt0.c0)))));
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.c1)||(t1.c0)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND((t1.c0 IN ()))))OR(((((t1.c0)AND(t1.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)||(t1.c0)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND((t1.c0 IN ()))))OR(((((t1.c0)AND(t1.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.c1)||(t1.c0)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND((t1.c0 IN ()))))OR(((((t1.c0)AND(t1.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)||(t1.c0)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND((t1.c0 IN ()))))OR(((((t1.c0)AND(t1.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1 ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (((((((((((vt0.c1)||(t1.c0)))AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))))AND((t1.c0 IN ()))))OR(((((t1.c0)AND(t1.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, '', vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt1.c0))<>((vt1.c0))))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt1.c0))))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt1.c0))<>((vt1.c0))))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt1.c0))))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt1.c0))<>((vt1.c0))))%(CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '<o|c\n'))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '<o|c\n')))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '<o|c\n'))))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '<o|c\n')))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN (vt1.c0, (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, '<o|c\n'))))));
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt1.c0 AS BLOB) DESC  NULLS LAST, (+ (CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(vt1.c0 AS BLOB) DESC  NULLS LAST, (+ (CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt1.c0 AS BLOB) DESC  NULLS LAST, (+ (CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(vt1.c0 AS BLOB) DESC  NULLS LAST, (+ (CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) ORDER BY CAST(vt1.c0 AS BLOB) DESC  NULLS LAST, (+ (CAST(vt0.c1 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)=(LIKELIHOOD(DISTINCT vt0.c1, 0.6255418637647746))) RIGHT OUTER JOIN vt1 ON ((CAST(0Xab36e7f AS INTEGER))!=('')) WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c0)=(LIKELIHOOD(DISTINCT vt0.c1, 0.6255418637647746))) RIGHT OUTER JOIN vt1 ON ((CAST(0Xab36e7f AS INTEGER))!=('')));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)=(LIKELIHOOD(DISTINCT vt0.c1, 0.6255418637647746))) RIGHT OUTER JOIN vt1 ON ((CAST(0Xab36e7f AS INTEGER))!=('')) WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c0)=(LIKELIHOOD(DISTINCT vt0.c1, 0.6255418637647746))) RIGHT OUTER JOIN vt1 ON ((CAST(0Xab36e7f AS INTEGER))!=('')));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)=(LIKELIHOOD(DISTINCT vt0.c1, 0.6255418637647746))) RIGHT OUTER JOIN vt1 ON ((CAST(0Xab36e7f AS INTEGER))!=('')) WHERE (((NULL) IS TRUE));
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN TRIM(vt0.c1, vt0.c1) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN TRIM(vt0.c1, vt0.c1) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC);
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN TRIM(vt0.c1, vt0.c1) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN TRIM(vt0.c1, vt0.c1) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC);
SELECT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE) ORDER BY CASE WHEN TRIM(vt0.c1, vt0.c1) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON json_object(((vt1.c0)<>(t1.c0)), ((t1.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY, ((((vt1.c0)OR(t1.c0)))AND(0Xfffffffff814e865))) INNER JOIN t1 ON TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))) WHERE (((((((t1.c0) IS FALSE))OR((+ (NULL)))))AND((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) IS FALSE))OR((+ (NULL)))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_object(((vt1.c0)<>(t1.c0)), ((t1.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY, ((((vt1.c0)OR(t1.c0)))AND(0xfffffffff814e865))) INNER JOIN t1 ON TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON json_object(((vt1.c0)<>(t1.c0)), ((t1.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY, ((((vt1.c0)OR(t1.c0)))AND(0Xfffffffff814e865))) INNER JOIN t1 ON TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))) WHERE (((((((t1.c0) IS FALSE))OR((+ (NULL)))))AND((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0) IS FALSE))OR((+ (NULL)))))AND((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_object(((vt1.c0)<>(t1.c0)), ((t1.c0)%(vt0.c0)), vt0.c1 COLLATE BINARY, ((((vt1.c0)OR(t1.c0)))AND(0xfffffffff814e865))) INNER JOIN t1 ON TRIM(DISTINCT ((vt1.c0)>=(vt1.c0))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(TRIM(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(TRIM(vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (CAST(TRIM(vt0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((NULL) BETWEEN (x'') AND (t1.c0 COLLATE NOCASE))) ORDER BY 0x529e7fd0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (x'') AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY 0X529e7fd0 DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((NULL) BETWEEN (x'') AND (t1.c0 COLLATE NOCASE))) ORDER BY 0x529e7fd0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (x'') AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY 0X529e7fd0 DESC  NULLS LAST);
SELECT ALL * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c0) NOT NULL))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((t1.c0) NOT NULL))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (LOWER(DISTINCT ((t1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((NULL)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, 'Yd', vt0.c0, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<<(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, 'Yd', vt0.c0, vt0.c1, vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((NULL)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, 'Yd', vt0.c0, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)<<(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, 'Yd', vt0.c0, vt0.c1, vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))) ORDER BY ((NULL)%((((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, 'Yd', vt0.c0, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)/(0.8316871464038496))) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)|((('襠IO')>>(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(0.8316871464038496))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)|((('襠IO')>>(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)/(0.8316871464038496))) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)|((('襠IO')>>(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)/(0.8316871464038496))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)|((('襠IO')>>(vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)/(0.8316871464038496))) NOTNULL)) ORDER BY ((vt1.c0 COLLATE BINARY)|((('襠IO')>>(vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('-1284880014', vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER), (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0Xffffffffdc22d2fe)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((x'', vt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((('-1284880014', vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER), (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0xffffffffdc22d2fe)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((x'', vt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('-1284880014', vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER), (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0Xffffffffdc22d2fe)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((x'', vt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ((((('-1284880014', vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER), (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0xffffffffdc22d2fe)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((x'', vt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((('-1284880014', vt0.c0, vt1.c0)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER), (((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, 0Xffffffffdc22d2fe)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND ((x'', vt0.c1 COLLATE RTRIM, CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((-2122529659, vt1.c0, vt1.c0))) THEN json_patch(vt1.c0, vt1.c0) END) ORDER BY ((vt1.c0)IS(((vt1.c0)>(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((-2122529659, vt1.c0, vt1.c0))) THEN json_patch(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS(((vt1.c0)>(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((-2122529659, vt1.c0, vt1.c0))) THEN json_patch(vt1.c0, vt1.c0) END) ORDER BY ((vt1.c0)IS(((vt1.c0)>(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt1.c0, vt1.c0))>=((-2122529659, vt1.c0, vt1.c0))) THEN json_patch(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)IS(((vt1.c0)>(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON ((((DATETIME(1.754374824E9, vt0.c0, vt1.c0))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))) WHERE ((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, t1.c0, NULL, 0.49494271633431686, t1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))=(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, t1.c0, NULL, 0.49494271633431686, t1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))==(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON ((((DATETIME(1.754374824E9, vt0.c0, vt1.c0))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON ((((DATETIME(1.754374824E9, vt0.c0, vt1.c0))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))) WHERE ((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, t1.c0, NULL, 0.49494271633431686, t1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))=(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, t1.c0, NULL, 0.49494271633431686, t1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))==(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON ((((DATETIME(1.754374824E9, vt0.c0, vt1.c0))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CAST(vt0.c0 AS BLOB))) FULL OUTER JOIN t1 ON ((((DATETIME(1.754374824E9, vt0.c0, vt1.c0))AND(((vt0.c0)LIKE(vt0.c0)))))AND(((vt0.c0) NOT NULL))) WHERE ((((((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, t1.c0, NULL, 0.49494271633431686, t1.c0)) AND ((vt1.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c1))))=(CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((json_type('') IN ()));
SELECT SUM(count) FROM (SELECT (((json_type('') IN ())) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((json_type('') IN ()));
SELECT SUM(count) FROM (SELECT (((json_type('') IN ())) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((json_type('') IN ()));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((((vt1.c0)*(t1.c0)), -694779366, json_remove(x'', t1.c0)))<=((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END, ((vt0.c0) NOT NULL), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)*(t1.c0)), -694779366, json_remove(x'', t1.c0)))<=((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END, ((vt0.c0) NOT NULL), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((((vt1.c0)*(t1.c0)), -694779366, json_remove(x'', t1.c0)))<=((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END, ((vt0.c0) NOT NULL), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)*(t1.c0)), -694779366, json_remove(x'', t1.c0)))<=((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END, ((vt0.c0) NOT NULL), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((((vt1.c0)*(t1.c0)), -694779366, json_remove(x'', t1.c0)))<=((CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c1 THEN t1.c0 END, ((vt0.c0) NOT NULL), ((t1.c0) BETWEEN (vt0.c1) AND (vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((0.9255951623466091)*(vt0.c1)) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((0.9255951623466091)*(vt0.c1)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((0.9255951623466091)*(vt0.c1)) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((0.9255951623466091)*(vt0.c1)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((0.9255951623466091)*(vt0.c1)) THEN (NOT (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY CAST((- (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST((- (t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY CAST((- (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST((- (t1.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY CAST((- (t1.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c1)))OR(NULL))))) ORDER BY ((vt0.c1 COLLATE RTRIM)+(TRIM(DISTINCT vt0.c0, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c1)))OR(NULL))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)+(TRIM(DISTINCT vt0.c0, vt0.c1))) DESC);
SELECT ALL * FROM t1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c1)))OR(NULL))))) ORDER BY ((vt0.c1 COLLATE RTRIM)+(TRIM(DISTINCT vt0.c0, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c1)))OR(NULL))))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)+(TRIM(DISTINCT vt0.c0, vt0.c1))) DESC);
SELECT ALL * FROM t1, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))IS NOT(((((vt0.c0)OR(vt0.c1)))OR(NULL))))) ORDER BY ((vt0.c1 COLLATE RTRIM)+(TRIM(DISTINCT vt0.c0, vt0.c1))) DESC;
SELECT COUNT(*) FROM t1, vt0 WHERE ((((LIKELIHOOD(t1.c0, 0.48614086790831446)))>=((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(t1.c0, 0.48614086790831446)))>=((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((LIKELIHOOD(t1.c0, 0.48614086790831446)))>=((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(t1.c0, 0.48614086790831446)))>=((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((LIKELIHOOD(t1.c0, 0.48614086790831446)))>=((((((((((vt0.c0)OR(vt0.c0)))AND(t1.c0)))AND(vt0.c0)))OR(t1.c0))))));
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, t1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt1.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) AND (((t1.c0)>(vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, t1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt1.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) AND (((t1.c0)>(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL) DESC);
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, t1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt1.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) AND (((t1.c0)>(vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, t1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt1.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) AND (((t1.c0)>(vt0.c0))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL) DESC);
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, t1.c0, NULL)) BETWEEN ((vt0.c0, vt0.c0, t1.c0)) AND ((t1.c0, vt0.c1, vt1.c0)))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0)))) AND (((t1.c0)>(vt0.c0))))) ORDER BY (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT NULL) DESC;
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS TEXT))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt0.c1 AS TEXT))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c1 AS TEXT))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)))OR((+ (vt0.c0)))))AND((vt0.c1 IN (vt0.c1)))))OR(((vt0.c1) ISNULL))));
SELECT * FROM vt1, vt0 WHERE (CASE (x'd2cbc89b' IN ())  WHEN 0x3121e2d9 THEN (((vt0.c0))!=((vt0.c0))) END) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 END, 0.3647490046580969) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'd2cbc89b' IN ())  WHEN 0X3121e2d9 THEN (((vt0.c0))<>((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 END, 0.3647490046580969) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE (x'd2cbc89b' IN ())  WHEN 0x3121e2d9 THEN (((vt0.c0))!=((vt0.c0))) END) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 END, 0.3647490046580969) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'd2cbc89b' IN ())  WHEN 0X3121e2d9 THEN (((vt0.c0))<>((vt0.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 END, 0.3647490046580969) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE (CASE (x'd2cbc89b' IN ())  WHEN 0x3121e2d9 THEN (((vt0.c0))!=((vt0.c0))) END) ORDER BY LIKELIHOOD(DISTINCT CASE WHEN vt1.c0 THEN vt0.c1 END, 0.3647490046580969) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t1, vt0 WHERE (NULL) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 ELSE vt0.c1 END THEN CASE x''  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 END ELSE ((t1.c0) NOT BETWEEN ('-82346237') AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 ELSE vt0.c1 END THEN CASE x''  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 END ELSE ((t1.c0) NOT BETWEEN ('-82346237') AND (vt1.c0)) END);
SELECT ALL * FROM vt1, t1, vt0 WHERE (NULL) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 ELSE vt0.c1 END THEN CASE x''  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 END ELSE ((t1.c0) NOT BETWEEN ('-82346237') AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 ELSE vt0.c1 END THEN CASE x''  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 END ELSE ((t1.c0) NOT BETWEEN ('-82346237') AND (vt1.c0)) END);
SELECT ALL * FROM vt1, t1, vt0 WHERE (NULL) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN t1.c0 ELSE vt0.c1 END THEN CASE x''  WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN NULL THEN vt1.c0 END ELSE ((t1.c0) NOT BETWEEN ('-82346237') AND (vt1.c0)) END;
SELECT * FROM t1, vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t1.c0)||(x'')))))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t1.c0, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t1.c0)||(x'')))))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t1.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t1.c0)||(x'')))))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t1.c0, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t1.c0)||(x'')))))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t1.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((t1.c0)||(x'')))))OR((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt0.c1)) AND ((t1.c0, vt0.c1, vt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((t1.c0) NOTNULL))GLOB(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))GLOB(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((t1.c0) NOTNULL))GLOB(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))GLOB(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (((((t1.c0) NOTNULL))GLOB(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((((vt0.c1)GLOB(8.79957281E8))) BETWEEN (((((vt0.c0)OR(t1.c0)))OR(vt0.c1))) AND (vt0.c0))  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)GLOB(8.79957281E8))) BETWEEN (((((vt0.c0)OR(t1.c0)))OR(vt0.c1))) AND (vt0.c0))  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((((vt0.c1)GLOB(8.79957281E8))) BETWEEN (((((vt0.c0)OR(t1.c0)))OR(vt0.c1))) AND (vt0.c0))  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)GLOB(8.79957281E8))) BETWEEN (((((vt0.c0)OR(t1.c0)))OR(vt0.c1))) AND (vt0.c0))  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)) IN ())) ORDER BY ((((vt0.c1)GLOB(8.79957281E8))) BETWEEN (((((vt0.c0)OR(t1.c0)))OR(vt0.c1))) AND (vt0.c0))  NULLS FIRST, CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY CASE CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff96540530 END  WHEN (('L\')LIKE(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END ASC, (vt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff96540530 END  WHEN (('L\')LIKE(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END ASC, (vt1.c0 IN ()) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY CASE CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff96540530 END  WHEN (('L\')LIKE(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END ASC, (vt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0Xffffffff96540530 END  WHEN (('L\')LIKE(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END ASC, (vt1.c0 IN ()) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY CASE CASE WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0xffffffff96540530 END  WHEN (('L\')LIKE(vt1.c0)) THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) END ASC, (vt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON ((((t1.c0)/(vt0.c0))) NOT NULL) WHERE (((0.37127727216304296)IS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((0.37127727216304296)IS(vt1.c0))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON ((((t1.c0)/(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON ((((t1.c0)/(vt0.c0))) NOT NULL) WHERE (((0.37127727216304296)IS(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((0.37127727216304296)IS(vt1.c0))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON ((((t1.c0)/(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON ((((t1.c0)/(vt0.c0))) NOT NULL) WHERE (((0.37127727216304296)IS(vt1.c0)));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))&(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))&(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))&(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))&(vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c1)))&(vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON TYPEOF(t1.c0) COLLATE NOCASE INNER JOIN vt0 ON (~ ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((217577785))))) WHERE ((CASE WHEN 'J!' THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 'J!' THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON TYPEOF(t1.c0) COLLATE NOCASE INNER JOIN vt0 ON (~ ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((217577785))))));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON TYPEOF(t1.c0) COLLATE NOCASE INNER JOIN vt0 ON (~ ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((217577785))))) WHERE ((CASE WHEN 'J!' THEN vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN 'J!' THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON TYPEOF(t1.c0) COLLATE NOCASE INNER JOIN vt0 ON (~ ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((217577785))))));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON TYPEOF(t1.c0) COLLATE NOCASE INNER JOIN vt0 ON (~ ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((217577785))))) WHERE ((CASE WHEN 'J!' THEN vt1.c0 END IN ()));
SELECT * FROM vt0, vt1, t1 WHERE ((vt1.c0 IN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, NULL, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, NULL, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((vt1.c0 IN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, NULL, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, NULL, vt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((vt1.c0 IN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, NULL, vt0.c1))))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c1)<(vt1.c0))))) FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN x'af29' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN '150112956' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)IS NOT(TRIM(DISTINCT vt1.c0))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c1)<(vt1.c0))))) FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN x'af29' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN '150112956' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)IS NOT(TRIM(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c1)<(vt1.c0))))) FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN x'af29' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN '150112956' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)IS NOT(TRIM(DISTINCT vt1.c0))) WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END) NOTNULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((((vt0.c1)<(vt1.c0))))) FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN x'af29' WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN '150112956' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)IS NOT(TRIM(DISTINCT vt1.c0))));
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) NOT NULL)) ORDER BY ((vt1.c0)-(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.23673922151892657))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)-(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.23673922151892657))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) NOT NULL)) ORDER BY ((vt1.c0)-(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.23673922151892657))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)-(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.23673922151892657))))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt0.c1))) NOT NULL)) ORDER BY ((vt1.c0)-(((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(0.23673922151892657))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(x'')))))) ORDER BY ((((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((x'4be9ce7b')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(x'')))))) IS TRUE)  as count FROM vt1 ORDER BY ((((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((x'4be9ce7b')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(x'')))))) ORDER BY ((((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((x'4be9ce7b')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(x'')))))) IS TRUE)  as count FROM vt1 ORDER BY ((((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((x'4be9ce7b')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(x'')))))) ORDER BY ((((JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((x'4be9ce7b')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT * FROM vt1, vt0, t1 WHERE (((((vt1.c0)OR(t1.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))>=((t1.c0))))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((vt0.c0) NOTNULL), '-1595559030')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END, vt0.c1, ((vt1.c0)<=(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((vt0.c0))>=((t1.c0))))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((vt0.c0) NOTNULL), '-1595559030')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END, vt0.c1, ((vt1.c0)<=(vt1.c0))))) ASC);
SELECT * FROM vt1, vt0, t1 WHERE (((((vt1.c0)OR(t1.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))>=((t1.c0))))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((vt0.c0) NOTNULL), '-1595559030')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END, vt0.c1, ((vt1.c0)<=(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((vt0.c0))>=((t1.c0))))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((vt0.c0) NOTNULL), '-1595559030')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END, vt0.c1, ((vt1.c0)<=(vt1.c0))))) ASC);
SELECT * FROM vt1, vt0, t1 WHERE (((((vt1.c0)OR(t1.c0)))AND(vt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))>=((t1.c0))))/(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((CAST(t1.c0 AS BLOB), ((vt0.c0) NOTNULL), '-1595559030')) AND ((CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END, vt0.c1, ((vt1.c0)<=(vt1.c0))))) ASC;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((t1.c0 IN ()) IN ()));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(t1.c0 AS NUMERIC));
SELECT * FROM vt1, t1 WHERE (((t1.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((t1.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((t1.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((vt1.c0) BETWEEN (t1.c0) AND (vt0.c1)) COLLATE BINARY CROSS JOIN vt1 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE WHERE (((vt0.c0)/(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON (((((NULL)OR(vt1.c0)))OR(t1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (((~ (x''))))) WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((((NULL)OR(vt1.c0)))OR(t1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (((~ (x''))))) ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON (((((NULL)OR(vt1.c0)))OR(t1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (((~ (x''))))) WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (((((NULL)OR(vt1.c0)))OR(t1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (((~ (x''))))) ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON (((((NULL)OR(vt1.c0)))OR(t1.c0)) IN ()) FULL OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (((~ (x''))))) WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (vt0.c1)))IS NOT((vt0.c0 IN ())))) ORDER BY ((NULL)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((NULL)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (vt0.c1)))IS NOT((vt0.c0 IN ())))) ORDER BY ((NULL)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((NULL)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (vt0.c1)))IS NOT((vt0.c0 IN ())))) ORDER BY ((NULL)IS((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))  NULLS LAST;
SELECT ALL * FROM t1, vt0, vt1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7514550239797457)) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN ((((vt0.c1)OR(0.8752335148628057)))AND(t1.c0)) THEN '1427843756' WHEN ((vt1.c0)<<(t1.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))) THEN ((vt0.c0)!=(t1.c0)) ELSE CAST(t1.c0 AS TEXT) END, TYPEOF(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) ASC  NULLS FIRST, (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)=(vt1.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7514550239797457)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN ((((vt0.c1)OR(0.8752335148628057)))AND(t1.c0)) THEN '1427843756' WHEN ((vt1.c0)<<(t1.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))) THEN ((vt0.c0)!=(t1.c0)) ELSE CAST(t1.c0 AS TEXT) END, TYPEOF(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) ASC  NULLS FIRST, (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)=(vt1.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7514550239797457)) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN ((((vt0.c1)OR(0.8752335148628057)))AND(t1.c0)) THEN '1427843756' WHEN ((vt1.c0)<<(t1.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))) THEN ((vt0.c0)!=(t1.c0)) ELSE CAST(t1.c0 AS TEXT) END, TYPEOF(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) ASC  NULLS FIRST, (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)=(vt1.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7514550239797457)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN ((((vt0.c1)OR(0.8752335148628057)))AND(t1.c0)) THEN '1427843756' WHEN ((vt1.c0)<<(t1.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))) THEN ((vt0.c0)!=(t1.c0)) ELSE CAST(t1.c0 AS TEXT) END, TYPEOF(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) ASC  NULLS FIRST, (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)=(vt1.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.7514550239797457)) ORDER BY CASE CAST(vt1.c0 AS BLOB)  WHEN ((((vt0.c1)OR(0.8752335148628057)))AND(t1.c0)) THEN '1427843756' WHEN ((vt1.c0)<<(t1.c0)) THEN ((((t1.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN (((vt1.c0)) BETWEEN ((vt0.c1)) AND ((t1.c0))) THEN ((vt0.c0)!=(t1.c0)) ELSE CAST(t1.c0 AS TEXT) END, TYPEOF(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) ASC  NULLS FIRST, (- (vt1.c0)) COLLATE BINARY ASC  NULLS LAST, CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)=(vt1.c0)))AND(CASE NULL  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (x'');
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT SUM(count) FROM (SELECT ALL ((0.16864329502305075) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT SUM(count) FROM (SELECT ALL ((0.16864329502305075) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.16864329502305075);
SELECT ALL * FROM t1 NOT INDEXED, vt0 NOT INDEXED WHERE ((~ (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt0 NOT INDEXED WHERE ((~ (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1 NOT INDEXED, vt0 NOT INDEXED WHERE ((~ (((t1.c0) NOTNULL))));
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE ((((((((vt0.c0)OR(0.3897306669527607)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c1))  WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN x'' COLLATE BINARY END) ORDER BY TRIM(((((((((t1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(NULL)), vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(0.3897306669527607)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c1))  WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN x'' COLLATE BINARY END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY TRIM(((((((((t1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(NULL)), vt1.c0));
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE ((((((((vt0.c0)OR(0.3897306669527607)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c1))  WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN x'' COLLATE BINARY END) ORDER BY TRIM(((((((((t1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(NULL)), vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.c0)OR(0.3897306669527607)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c1))  WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN x'' COLLATE BINARY END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY TRIM(((((((((t1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(NULL)), vt1.c0));
SELECT ALL * FROM t1, vt1, vt0 WHERE (CASE ((((((((vt0.c0)OR(0.3897306669527607)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c1))  WHEN ((t1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN x'' COLLATE BINARY END) ORDER BY TRIM(((((((((t1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(NULL)), vt1.c0);
SELECT ALL * FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (x'');
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))>>(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST, ((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<>((vt0.c1)))))  NULLS LAST, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.09411155211920841)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))>>(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST, ((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<>((vt0.c1)))))  NULLS LAST, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.09411155211920841)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))>>(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST, ((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<>((vt0.c1)))))  NULLS LAST, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.09411155211920841)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))>>(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST, ((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<>((vt0.c1)))))  NULLS LAST, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.09411155211920841)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))>>(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY  NULLS LAST, ((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<>((vt0.c1)))))  NULLS LAST, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(0.09411155211920841)))AND(vt0.c0))) BETWEEN (vt0.c1) AND ((NOT (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((LTRIM(t1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END))) ORDER BY (~ (((vt0.c1)+(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LTRIM(t1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ (((vt0.c1)+(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((LTRIM(t1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END))) ORDER BY (~ (((vt0.c1)+(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((LTRIM(t1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (~ (((vt0.c1)+(t1.c0))))  NULLS LAST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((LTRIM(t1.c0))AND(CAST(vt0.c0 AS TEXT))))OR(CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE vt0.c1 END))) ORDER BY (~ (((vt0.c1)+(t1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS TEXT) WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), load_extension(vt1.c0, vt1.c0), json_remove(vt0.c0, vt1.c0))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), load_extension(vt1.c0, vt1.c0), json_remove(vt0.c0, vt1.c0))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS TEXT));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS TEXT) WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), load_extension(vt1.c0, vt1.c0), json_remove(vt0.c0, vt1.c0))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), load_extension(vt1.c0, vt1.c0), json_remove(vt0.c0, vt1.c0))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS TEXT));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(TRIM(vt0.c0) AS TEXT) WHERE ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt1.c0)), load_extension(vt1.c0, vt1.c0), json_remove(vt0.c0, vt1.c0))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), vt1.c0 COLLATE BINARY, CAST(vt0.c1 AS TEXT)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN ((t1.c0)&(t1.c0)) END) ORDER BY t1.c0 ASC, (((((t1.c0)<<(t1.c0))))<>(((t1.c0 IN ())))), (((t1.c0)+(t1.c0)) IN (t1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN ((t1.c0)&(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, (((((t1.c0)<<(t1.c0))))!=(((t1.c0 IN ())))), (((t1.c0)+(t1.c0)) IN (t1.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN ((t1.c0)&(t1.c0)) END) ORDER BY t1.c0 ASC, (((((t1.c0)<<(t1.c0))))<>(((t1.c0 IN ())))), (((t1.c0)+(t1.c0)) IN (t1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN ((t1.c0)&(t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC, (((((t1.c0)<<(t1.c0))))!=(((t1.c0 IN ())))), (((t1.c0)+(t1.c0)) IN (t1.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN ((t1.c0)&(t1.c0)) END) ORDER BY t1.c0 ASC, (((((t1.c0)<<(t1.c0))))<>(((t1.c0 IN ())))), (((t1.c0)+(t1.c0)) IN (t1.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM t1 INNER JOIN vt0 ON (- (((vt1.c0)<<(vt1.c0)))) FULL OUTER JOIN vt1 ON (- ((('630735806') BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((CAST(t1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (- (((vt1.c0)<<(vt1.c0)))) FULL OUTER JOIN vt1 ON (- ((('630735806') BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL * FROM t1 INNER JOIN vt0 ON (- (((vt1.c0)<<(vt1.c0)))) FULL OUTER JOIN vt1 ON (- ((('630735806') BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((CAST(t1.c0 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS REAL) IN ())) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (- (((vt1.c0)<<(vt1.c0)))) FULL OUTER JOIN vt1 ON (- ((('630735806') BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))+(((vt1.c0) IS TRUE))));
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY) ORDER BY ((t1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN ()));
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY) ORDER BY ((t1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 IN ()) IN ()));
SELECT * FROM t1 WHERE (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) COLLATE BINARY) ORDER BY ((t1.c0 IN ()) IN ());
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (CAST(vt1.c0 AS BLOB))) WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(LIKELIHOOD(DISTINCT x'', 0.49636799294167766)));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (CAST(vt1.c0 AS BLOB))) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(LIKELIHOOD(DISTINCT x'', 0.49636799294167766))));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (CAST(vt1.c0 AS BLOB))) WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(LIKELIHOOD(DISTINCT x'', 0.49636799294167766)));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (CAST(vt1.c0 AS BLOB))) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(LIKELIHOOD(DISTINCT x'', 0.49636799294167766))));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (t1.c0))) BETWEEN ((- (t1.c0))) AND (CAST(vt1.c0 AS BLOB))) WHERE (t1.c0) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|(LIKELIHOOD(DISTINCT x'', 0.49636799294167766)));
SELECT * FROM vt1, t1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT NULL)) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt1, t1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT NULL)) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt1, t1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) NOT NULL)) ORDER BY CAST(((vt1.c0) NOT NULL) AS TEXT) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1)) BETWEEN ((6.30735806E8)) AND ((vt0.c1))))))AND(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1)) BETWEEN ((6.30735806E8)) AND ((vt0.c1))))))AND(CAST(vt0.c1 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1)) BETWEEN ((6.30735806E8)) AND ((vt0.c1))))))AND(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1)) BETWEEN ((6.30735806E8)) AND ((vt0.c1))))))AND(CAST(vt0.c1 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN ((vt0.c0 IN (vt0.c1))) AND (CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1)) BETWEEN ((6.30735806E8)) AND ((vt0.c1))))))AND(CAST(vt0.c1 AS INTEGER))) ASC;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((0Xfffffffff43f6b02 COLLATE BINARY)AND(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))))OR(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))) WHERE ((((0.8356344763023985)>(t1.c0)) IN ())) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((t1.c0)+(vt1.c0)))))OR(((vt1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((0.8356344763023985)>(t1.c0)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED FULL OUTER JOIN vt1 ON ((((0Xfffffffff43f6b02 COLLATE BINARY)AND(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))))OR(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((t1.c0)+(vt1.c0)))))OR(((vt1.c0)+(t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((0Xfffffffff43f6b02 COLLATE BINARY)AND(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))))OR(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))) WHERE ((((0.8356344763023985)>(t1.c0)) IN ())) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((t1.c0)+(vt1.c0)))))OR(((vt1.c0)+(t1.c0))));
SELECT SUM(count) FROM (SELECT (((((0.8356344763023985)>(t1.c0)) IN ())) IS TRUE)  as count FROM t1 NOT INDEXED FULL OUTER JOIN vt1 ON ((((0Xfffffffff43f6b02 COLLATE BINARY)AND(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))))OR(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((t1.c0)+(vt1.c0)))))OR(((vt1.c0)+(t1.c0)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((0Xfffffffff43f6b02 COLLATE BINARY)AND(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))))OR(((((t1.c0)OR(vt1.c0)))OR(t1.c0)))) WHERE ((((0.8356344763023985)>(t1.c0)) IN ())) ORDER BY ((((CAST(vt1.c0 AS REAL))AND(((t1.c0)+(vt1.c0)))))OR(((vt1.c0)+(t1.c0))));
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, 0.07726722617616577, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) ORDER BY CAST(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, 0.07726722617616577, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CAST(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END AS INTEGER));
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, 0.07726722617616577, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) ORDER BY CAST(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, 0.07726722617616577, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CAST(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END AS INTEGER));
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, 0.07726722617616577, vt1.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))) IN ())) ORDER BY CAST(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 END AS INTEGER);
SELECT * FROM t1 WHERE ((((~ (t1.c0))) BETWEEN (((t1.c0)-(t1.c0))) AND ((((t1.c0))<((t1.c0)))))) ORDER BY 0.09836957837876026;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0))) BETWEEN (((t1.c0)-(t1.c0))) AND ((((t1.c0))<((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY 0.09836957837876026);
SELECT * FROM t1 WHERE ((((~ (t1.c0))) BETWEEN (((t1.c0)-(t1.c0))) AND ((((t1.c0))<((t1.c0)))))) ORDER BY 0.09836957837876026;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c0))) BETWEEN (((t1.c0)-(t1.c0))) AND ((((t1.c0))<((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY 0.09836957837876026);
SELECT * FROM t1 WHERE ((((~ (t1.c0))) BETWEEN (((t1.c0)-(t1.c0))) AND ((((t1.c0))<((t1.c0)))))) ORDER BY 0.09836957837876026;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND('sbࠗ')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND('sbࠗ')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND('sbࠗ')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND('sbࠗ')))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((- (CAST(vt0.c1 AS TEXT)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND('sbࠗ')))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) ISNULL)) ORDER BY (((((+ (t1.c0)))OR(((t1.c0) NOT BETWEEN ('1678943784') AND (t1.c0)))))OR('704935518'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c0)))OR(((t1.c0) NOT BETWEEN ('1678943784') AND (t1.c0)))))OR('704935518'))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) ISNULL)) ORDER BY (((((+ (t1.c0)))OR(((t1.c0) NOT BETWEEN ('1678943784') AND (t1.c0)))))OR('704935518'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN (t1.c0))) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY (((((+ (t1.c0)))OR(((t1.c0) NOT BETWEEN ('1678943784') AND (t1.c0)))))OR('704935518'))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((((t1.c0 IN (t1.c0))) ISNULL)) ORDER BY (((((+ (t1.c0)))OR(((t1.c0) NOT BETWEEN ('1678943784') AND (t1.c0)))))OR('704935518'))  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)|(NULL))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)|(NULL))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)|(NULL))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)|(NULL))) AND (vt0.c0))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)|(NULL))) AND (vt0.c0)));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (t1.c0))) AND ((vt0.c1 IN ())))) ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c0)))AND((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (t1.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c0)))AND((vt0.c1 IN ()))) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (t1.c0))) AND ((vt0.c1 IN ())))) ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c0)))AND((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (t1.c0))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY x''  NULLS LAST, ((((((((((vt0.c0)IS NOT(vt0.c0)))OR((- (vt0.c1)))))AND(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c0)))AND((vt0.c1 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET((t1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY SQLITE_COMPILEOPTION_GET((t1.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET((t1.c0 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY SQLITE_COMPILEOPTION_GET((t1.c0 IN ()))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET((t1.c0 IN ()))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((((((vt1.c0)OR(((vt0.c0) ISNULL))))OR(((vt0.c1)>(NULL)))))OR(vt1.c0)))OR(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(((vt0.c0) ISNULL))))OR(((vt0.c1)>(NULL)))))OR(vt1.c0)))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((((((vt1.c0)OR(((vt0.c0) ISNULL))))OR(((vt0.c1)>(NULL)))))OR(vt1.c0)))OR(CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(((vt0.c0) ISNULL))))OR(((vt0.c1)>(NULL)))))OR(vt1.c0)))OR(CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((((((vt1.c0)OR(((vt0.c0) ISNULL))))OR(((vt0.c1)>(NULL)))))OR(vt1.c0)))OR(CAST(vt1.c0 AS REAL))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CAST((0.35939685592187975 IN (vt1.c0)) AS BLOB) WHERE (-7.71972219E8) ORDER BY ((t1.c0)LIKE((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((-7.71972219E8) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CAST((0.35939685592187975 IN (vt1.c0)) AS BLOB) ORDER BY ((t1.c0)LIKE((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CAST((0.35939685592187975 IN (vt1.c0)) AS BLOB) WHERE (-7.71972219E8) ORDER BY ((t1.c0)LIKE((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((-7.71972219E8) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CAST((0.35939685592187975 IN (vt1.c0)) AS BLOB) ORDER BY ((t1.c0)LIKE((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON CAST((0.35939685592187975 IN (vt1.c0)) AS BLOB) WHERE (-7.71972219E8) ORDER BY ((t1.c0)LIKE((vt1.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1 WHERE (((json(0.18837896761958484)) BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL), (((NULL)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((json_array_length(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json(0.18837896761958484)) BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL), (((NULL)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((json_array_length(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json(0.18837896761958484)) BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL), (((NULL)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((json_array_length(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json(0.18837896761958484)) BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL), (((NULL)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((json_array_length(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (json_extract(((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE RTRIM, '7V', (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE RTRIM, '7V', (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (json_extract(((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE RTRIM, '7V', (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((vt0.c1)<(vt0.c0)), vt0.c0 COLLATE RTRIM, '7V', (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM t1, vt0 WHERE (((t1.c0)||((((t1.c0))<((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)||((((t1.c0))<((t1.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((t1.c0)||((((t1.c0))<((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)||((((t1.c0))<((t1.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((t1.c0)||((((t1.c0))<((t1.c0))))));
SELECT ALL * FROM vt1, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (t1.c0);
SELECT COUNT(*) FROM t1, vt1 WHERE (vt1.c0) ORDER BY (((('985719582')AND(((t1.c0)+(vt1.c0)))))AND((vt1.c0 IN ())))  NULLS LAST, ((((((((TYPEOF(t1.c0))AND(((t1.c0) IS FALSE))))AND(CAST(t1.c0 AS TEXT))))OR(((x'3519') NOT BETWEEN (vt1.c0) AND (t1.c0)))))OR((- (t1.c0))))  NULLS FIRST, (((vt1.c0) BETWEEN (t1.c0) AND ('G.*-''')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY (((('985719582')AND(((t1.c0)+(vt1.c0)))))AND((vt1.c0 IN ())))  NULLS LAST, ((((((((TYPEOF(t1.c0))AND(((t1.c0) IS FALSE))))AND(CAST(t1.c0 AS TEXT))))OR(((x'3519') NOT BETWEEN (vt1.c0) AND (t1.c0)))))OR((- (t1.c0))))  NULLS FIRST, (((vt1.c0) BETWEEN (t1.c0) AND ('G.*-''')) IN ()));
SELECT COUNT(*) FROM t1, vt1 WHERE (vt1.c0) ORDER BY (((('985719582')AND(((t1.c0)+(vt1.c0)))))AND((vt1.c0 IN ())))  NULLS LAST, ((((((((TYPEOF(t1.c0))AND(((t1.c0) IS FALSE))))AND(CAST(t1.c0 AS TEXT))))OR(((x'3519') NOT BETWEEN (vt1.c0) AND (t1.c0)))))OR((- (t1.c0))))  NULLS FIRST, (((vt1.c0) BETWEEN (t1.c0) AND ('G.*-''')) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY (((('985719582')AND(((t1.c0)+(vt1.c0)))))AND((vt1.c0 IN ())))  NULLS LAST, ((((((((TYPEOF(t1.c0))AND(((t1.c0) IS FALSE))))AND(CAST(t1.c0 AS TEXT))))OR(((x'3519') NOT BETWEEN (vt1.c0) AND (t1.c0)))))OR((- (t1.c0))))  NULLS FIRST, (((vt1.c0) BETWEEN (t1.c0) AND ('G.*-''')) IN ()));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON ((MIN(vt1.c0, vt0.c1)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (x'a452');
SELECT SUM(count) FROM (SELECT ALL ((x'a452') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((MIN(vt1.c0, vt0.c1)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON (NOT (vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON ((MIN(vt1.c0, vt0.c1)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (x'a452');
SELECT SUM(count) FROM (SELECT ALL ((x'a452') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((MIN(vt1.c0, vt0.c1)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c1 IN ()))) INNER JOIN vt0 ON (NOT (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)>=(t1.c0)))%(((x'')/(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>=(t1.c0)))%(((x'')/(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)>=(t1.c0)))%(((x'')/(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>=(t1.c0)))%(((x'')/(t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)>=(t1.c0)))%(((x'')/(t1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((- (t1.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))))OR(((vt1.c0)-(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN t1 ON (+ (((((((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))OR(2.139865836E9)))AND(NULL)))AND('J씁')))AND('')))) WHERE (NULLIF(DISTINCT ((vt0.c0) NOT NULL), ((vt1.c0) IS FALSE))) ORDER BY vt1.c0 DESC  NULLS LAST, CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN vt1.c0 ELSE (NOT (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0) NOT NULL), ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((- (t1.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))))OR(((vt1.c0)-(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN t1 ON (+ (((((((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))OR(2.139865836E9)))AND(NULL)))AND('J씁')))AND('')))) ORDER BY vt1.c0 DESC  NULLS LAST, CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN vt1.c0 ELSE (NOT (vt1.c0)) END  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((- (t1.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))))OR(((vt1.c0)-(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN t1 ON (+ (((((((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))OR(2.139865836E9)))AND(NULL)))AND('J씁')))AND('')))) WHERE (NULLIF(DISTINCT ((vt0.c0) NOT NULL), ((vt1.c0) IS FALSE))) ORDER BY vt1.c0 DESC  NULLS LAST, CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN vt1.c0 ELSE (NOT (vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0) NOT NULL), ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((((((((- (t1.c0)))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c1) BETWEEN (NULL) AND (vt1.c0)))))OR(((vt1.c0)-(vt0.c1)))))AND(CAST(vt0.c0 AS REAL))) FULL OUTER JOIN t1 ON (+ (((((((((((((t1.c0)AND(vt0.c0)))AND(t1.c0)))OR(2.139865836E9)))AND(NULL)))AND('J씁')))AND('')))) ORDER BY vt1.c0 DESC  NULLS LAST, CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN vt1.c0 ELSE (NOT (vt1.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c1)&(vt0.c1)) IN (((vt1.c0) IS TRUE), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)&(vt0.c1)) IN (((vt1.c0) IS TRUE), (t1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c1)&(vt0.c1)) IN (((vt1.c0) IS TRUE), (t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)&(vt0.c1)) IN (((vt1.c0) IS TRUE), (t1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c1)&(vt0.c1)) IN (((vt1.c0) IS TRUE), (t1.c0 IN ()))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((0.4829152144086336) BETWEEN (((vt1.c0)|(vt0.c0))) AND (((vt1.c0) ISNULL))) CROSS JOIN t1 ON (((('0.16864329502305075')OR(CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END)))AND((t1.c0 IN ()))) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((0.4829152144086336) BETWEEN (((vt1.c0)|(vt0.c0))) AND (((vt1.c0) ISNULL))) CROSS JOIN t1 ON (((('0.16864329502305075')OR(CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END)))AND((t1.c0 IN ()))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((0.4829152144086336) BETWEEN (((vt1.c0)|(vt0.c0))) AND (((vt1.c0) ISNULL))) CROSS JOIN t1 ON (((('0.16864329502305075')OR(CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END)))AND((t1.c0 IN ()))) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((0.4829152144086336) BETWEEN (((vt1.c0)|(vt0.c0))) AND (((vt1.c0) ISNULL))) CROSS JOIN t1 ON (((('0.16864329502305075')OR(CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END)))AND((t1.c0 IN ()))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((0.4829152144086336) BETWEEN (((vt1.c0)|(vt0.c0))) AND (((vt1.c0) ISNULL))) CROSS JOIN t1 ON (((('0.16864329502305075')OR(CASE t1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE t1.c0 END)))AND((t1.c0 IN ()))) WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE RTRIM)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE RTRIM)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (LIKELY(vt0.c0 COLLATE RTRIM)) ORDER BY NULL;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CASE WHEN CASE WHEN x'' THEN vt1.c0 END THEN ((x'')||(vt0.c1)) ELSE '179531391' END FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)) WHERE ((- (((vt0.c1)-(x'')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)-(x''))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE WHEN CASE WHEN x'' THEN vt1.c0 END THEN ((x'')||(vt0.c1)) ELSE '179531391' END FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON CASE WHEN CASE WHEN x'' THEN vt1.c0 END THEN ((x'')||(vt0.c1)) ELSE '179531391' END FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)) WHERE ((- (((vt0.c1)-(x'')))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1)-(x''))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE WHEN CASE WHEN x'' THEN vt1.c0 END THEN ((x'')||(vt0.c1)) ELSE '179531391' END FULL OUTER JOIN vt1 ON UNLIKELY(DISTINCT ((vt0.c0) IS TRUE)));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (((t1.c0))<((vt0.c0))), 0.4231791048376973));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t1.c0))<((vt0.c0))), 0.4231791048376973)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (((t1.c0))<((vt0.c0))), 0.4231791048376973));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (((t1.c0))<((vt0.c0))), 0.4231791048376973)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (((t1.c0))<((vt0.c0))), 0.4231791048376973));
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0)) NOTNULL)) ORDER BY (((vt0.c0)|(vt0.c1)) IN (x'e890')) ASC, ((vt0.c0 COLLATE RTRIM)/(((vt0.c1)<(vt0.c0)))), ((COALESCE(x'93a7', vt0.c0, vt0.c0, vt0.c0))>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)|(vt0.c1)) IN (x'e890')) ASC, ((vt0.c0 COLLATE RTRIM)/(((vt0.c1)<(vt0.c0)))), ((COALESCE(x'93a7', vt0.c0, vt0.c0, vt0.c0))>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0)) NOTNULL)) ORDER BY (((vt0.c0)|(vt0.c1)) IN (x'e890')) ASC, ((vt0.c0 COLLATE RTRIM)/(((vt0.c1)<(vt0.c0)))), ((COALESCE(x'93a7', vt0.c0, vt0.c0, vt0.c0))>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_patch(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)|(vt0.c1)) IN (x'e890')) ASC, ((vt0.c0 COLLATE RTRIM)/(((vt0.c1)<(vt0.c0)))), ((COALESCE(x'93a7', vt0.c0, vt0.c0, vt0.c0))>>((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (t1.c0);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)-(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0, 'LJ')))), (+ ('LJ'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0, 'LJ')))), (+ ('LJ'))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)-(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0, 'LJ')))), (+ ('LJ'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0, 'LJ')))), (+ ('LJ'))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((vt1.c0)-(vt1.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)IS NOT(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE)))  NULLS FIRST, ((((vt1.c0) NOT NULL))OR((vt1.c0 IN (vt1.c0, 'LJ')))), (+ ('LJ'))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((0.8141844069527163 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((0.8141844069527163 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((0.8141844069527163 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((0.8141844069527163 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((0.8141844069527163 IN ()) IN ()) ASC;
SELECT ALL * FROM vt0, vt1, t1 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.502558007758682), 0.660896632300337));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.502558007758682), 0.660896632300337)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.502558007758682), 0.660896632300337));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.502558007758682), 0.660896632300337)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (LIKELIHOOD(DISTINCT LIKELIHOOD(DISTINCT vt0.c1, 0.502558007758682), 0.660896632300337));
SELECT ALL * FROM t1 WHERE (CASE ROUND(t1.c0, t1.c0)  WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0)>('-469385582')) ELSE (t1.c0 IN ()) END) ORDER BY (((NULL)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0)<>(t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(t1.c0, t1.c0)  WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0)>('-469385582')) ELSE (t1.c0 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY (((NULL)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0)!=(t1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE ROUND(t1.c0, t1.c0)  WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0)>('-469385582')) ELSE (t1.c0 IN ()) END) ORDER BY (((NULL)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0)<>(t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ROUND(t1.c0, t1.c0)  WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0)>('-469385582')) ELSE (t1.c0 IN ()) END) IS TRUE)  as count FROM t1 ORDER BY (((NULL)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0)!=(t1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CASE ROUND(t1.c0, t1.c0)  WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0)>('-469385582')) ELSE (t1.c0 IN ()) END) ORDER BY (((NULL)) NOT BETWEEN ((t1.c0 COLLATE BINARY)) AND ((((t1.c0)<>(t1.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT COUNT(*) FROM t1, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY CAST(vt1.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(vt1.c0 AS TEXT));
SELECT COUNT(*) FROM t1, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY CAST(vt1.c0 AS TEXT);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(vt1.c0 AS TEXT));
SELECT COUNT(*) FROM t1, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY CAST(vt1.c0 AS TEXT);
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((((vt0.c0) IS FALSE)))>=(((-1934104665 IN (vt1.c0))))) WHERE (-675678857);
SELECT SUM(count) FROM (SELECT ((-675678857) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((((vt0.c0) IS FALSE)))>=(((-1934104665 IN (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((((vt0.c0) IS FALSE)))>=(((-1934104665 IN (vt1.c0))))) WHERE (-675678857);
SELECT SUM(count) FROM (SELECT ((-675678857) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((((vt0.c0) IS FALSE)))>=(((-1934104665 IN (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((((vt0.c0) IS FALSE)))>=(((-1934104665 IN (vt1.c0))))) WHERE (-675678857);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7872250405664006) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7872250405664006) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7872250405664006) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.7872250405664006) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (0.7872250405664006) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(((vt1.c0)-(vt1.c0)), CAST('-277557717' AS INTEGER))) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (vt1.c0 IN (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))>((PRINTF(vt1.c0, vt1.c0, x''), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0, ((vt1.c0)||(vt1.c0))))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt1.c0)-(vt1.c0)), CAST('-277557717' AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (vt1.c0 IN (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))>((PRINTF(vt1.c0, vt1.c0, x''), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0, ((vt1.c0)||(vt1.c0))))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(((vt1.c0)-(vt1.c0)), CAST('-277557717' AS INTEGER))) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (vt1.c0 IN (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))>((PRINTF(vt1.c0, vt1.c0, x''), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0, ((vt1.c0)||(vt1.c0))))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt1.c0)-(vt1.c0)), CAST('-277557717' AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (vt1.c0 IN (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))>((PRINTF(vt1.c0, vt1.c0, x''), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0, ((vt1.c0)||(vt1.c0))))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM vt1 WHERE (COALESCE(((vt1.c0)-(vt1.c0)), CAST('-277557717' AS INTEGER))) ORDER BY (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), vt1.c0, (vt1.c0 IN (vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, vt1.c0 COLLATE RTRIM))>((PRINTF(vt1.c0, vt1.c0, x''), vt1.c0, CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, vt1.c0, ((vt1.c0)||(vt1.c0))))) ASC, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt0, t1, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE ((CAST(vt0.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1 NATURAL JOIN t1 WHERE ((((('-82346237')%(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('-82346237')%(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt1 NATURAL JOIN t1 WHERE ((((('-82346237')%(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('-82346237')%(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt1 NATURAL JOIN t1 WHERE ((((('-82346237')%(vt1.c0))) IS FALSE));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB) WHERE (((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1964187313 END)))OR(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1964187313 END)))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB) WHERE (((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1964187313 END)))OR(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1964187313 END)))OR(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN t1.c0 ELSE t1.c0 END AS BLOB) WHERE (((((vt0.c1 COLLATE BINARY)AND(CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1964187313 END)))OR(t1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (NOT ('U?jQ*\rIKm'))))<=(((NOT (vt1.c0)), CAST(0.383217197105875 AS REAL), json_object(vt1.c0, vt1.c0, vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (NOT ('U?jQ*\rIKm'))))<=(((NOT (vt1.c0)), CAST(0.383217197105875 AS REAL), json_object(vt1.c0, vt1.c0, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (NOT ('U?jQ*\rIKm'))))<=(((NOT (vt1.c0)), CAST(0.383217197105875 AS REAL), json_object(vt1.c0, vt1.c0, vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (NOT ('U?jQ*\rIKm'))))<=(((NOT (vt1.c0)), CAST(0.383217197105875 AS REAL), json_object(vt1.c0, vt1.c0, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), (NOT ('U?jQ*\rIKm'))))<=(((NOT (vt1.c0)), CAST(0.383217197105875 AS REAL), json_object(vt1.c0, vt1.c0, vt0.c1, vt0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON ((vt1.c0)/(CASE WHEN t1.c0 THEN 0xffffffffbd4290c1 ELSE vt1.c0 END)) WHERE (((NULL)%((((vt1.c0))<((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((NULL)%((((vt1.c0))<((t1.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON ((vt1.c0)/(CASE WHEN t1.c0 THEN 0xffffffffbd4290c1 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON ((vt1.c0)/(CASE WHEN t1.c0 THEN 0xffffffffbd4290c1 ELSE vt1.c0 END)) WHERE (((NULL)%((((vt1.c0))<((t1.c0))))));
SELECT SUM(count) FROM (SELECT ((((NULL)%((((vt1.c0))<((t1.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON ((vt1.c0)/(CASE WHEN t1.c0 THEN 0xffffffffbd4290c1 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON ((vt1.c0)/(CASE WHEN t1.c0 THEN 0xffffffffbd4290c1 ELSE vt1.c0 END)) WHERE (((NULL)%((((vt1.c0))<((t1.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN (~ (vt0.c1)) THEN '1754374824' END) ORDER BY (((vt0.c1 IN ()))IS(CASE WHEN '2139865836' THEN vt0.c0 ELSE 0X4af96481 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)+(vt0.c0))  WHEN (~ (vt0.c1)) THEN '1754374824' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))IS(CASE WHEN '2139865836' THEN vt0.c0 ELSE 0x4af96481 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN (~ (vt0.c1)) THEN '1754374824' END) ORDER BY (((vt0.c1 IN ()))IS(CASE WHEN '2139865836' THEN vt0.c0 ELSE 0X4af96481 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)+(vt0.c0))  WHEN (~ (vt0.c1)) THEN '1754374824' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))IS(CASE WHEN '2139865836' THEN vt0.c0 ELSE 0x4af96481 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN (~ (vt0.c1)) THEN '1754374824' END) ORDER BY (((vt0.c1 IN ()))IS(CASE WHEN '2139865836' THEN vt0.c0 ELSE 0X4af96481 END))  NULLS FIRST;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (0.2911660774459177) AND (vt0.c0))) IS TRUE) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.3224733397244234)) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))OR('m')))AND(vt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.3224733397244234)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (0.2911660774459177) AND (vt0.c0))) IS TRUE) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))OR('m')))AND(vt0.c1)) AS BLOB));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (0.2911660774459177) AND (vt0.c0))) IS TRUE) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.3224733397244234)) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))OR('m')))AND(vt0.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.3224733397244234)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (0.2911660774459177) AND (vt0.c0))) IS TRUE) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))OR('m')))AND(vt0.c1)) AS BLOB));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (0.2911660774459177) AND (vt0.c0))) IS TRUE) WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.3224733397244234)) ORDER BY (+ (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)) DESC  NULLS LAST, CAST(((((((((vt0.c1)OR(vt0.c0)))AND(vt1.c0)))OR('m')))AND(vt0.c1)) AS BLOB);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) IS TRUE)) ORDER BY t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) IS TRUE)) ORDER BY t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) ISNULL)) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) ISNULL)) IS TRUE)) ORDER BY t1.c0, (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((vt0.c1, -2031122080, t1.c0))>=((vt0.c0, NULL, t1.c0))) IN ())) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1, -2031122080, t1.c0))>=((vt0.c0, NULL, t1.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((vt0.c1, -2031122080, t1.c0))>=((vt0.c0, NULL, t1.c0))) IN ())) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1, -2031122080, t1.c0))>=((vt0.c0, NULL, t1.c0))) IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t1 WHERE (((((vt0.c1, -2031122080, t1.c0))>=((vt0.c0, NULL, t1.c0))) IN ())) ORDER BY ((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)) NOT BETWEEN ((((t1.c0)OR(vt0.c0)))) AND ((((x'') NOT BETWEEN (NULL) AND (t1.c0))))) LEFT OUTER JOIN t1 ON (((((vt0.c1, vt1.c0, vt1.c0, t1.c0, vt0.c1, vt0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0, vt1.c0, vt1.c0)))) NOTNULL) WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t1.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)) NOT BETWEEN ((((t1.c0)OR(vt0.c0)))) AND ((((x'') NOT BETWEEN (NULL) AND (t1.c0))))) LEFT OUTER JOIN t1 ON (((((vt0.c1, vt1.c0, vt1.c0, t1.c0, vt0.c1, vt0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0, vt1.c0, vt1.c0)))) NOTNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)) NOT BETWEEN ((((t1.c0)OR(vt0.c0)))) AND ((((x'') NOT BETWEEN (NULL) AND (t1.c0))))) LEFT OUTER JOIN t1 ON (((((vt0.c1, vt1.c0, vt1.c0, t1.c0, vt0.c1, vt0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0, vt1.c0, vt1.c0)))) NOTNULL) WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t1.c0)<>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)) NOT BETWEEN ((((t1.c0)OR(vt0.c0)))) AND ((((x'') NOT BETWEEN (NULL) AND (t1.c0))))) LEFT OUTER JOIN t1 ON (((((vt0.c1, vt1.c0, vt1.c0, t1.c0, vt0.c1, vt0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt0.c0, t1.c0, vt0.c0, vt1.c0, vt1.c0)))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))>>(vt0.c1))) ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))>>(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))>>(vt0.c1))) ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c1)))>>(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c1)))>>(vt0.c1))) ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOT BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND (vt0.c1));
SELECT * FROM t1 NOT INDEXED, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY HEX(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY HEX(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))  NULLS FIRST);
SELECT * FROM t1 NOT INDEXED, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY HEX(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY HEX(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))  NULLS FIRST);
SELECT * FROM t1 NOT INDEXED, vt1 WHERE ((t1.c0 IN ()) COLLATE BINARY) ORDER BY HEX(DISTINCT ((((vt1.c0)AND(vt1.c0)))AND(t1.c0)))  NULLS FIRST;
SELECT * FROM vt1, vt0 NATURAL JOIN t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC)) ORDER BY (((((~ ('179531391')))AND(((((t1.c0)OR(0.6852305850788721)))AND(vt0.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1 ORDER BY (((((~ ('179531391')))AND(((((t1.c0)OR(0.6852305850788721)))AND(vt0.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 NATURAL JOIN t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC)) ORDER BY (((((~ ('179531391')))AND(((((t1.c0)OR(0.6852305850788721)))AND(vt0.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t1 ORDER BY (((((~ ('179531391')))AND(((((t1.c0)OR(0.6852305850788721)))AND(vt0.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 NATURAL JOIN t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) AS NUMERIC)) ORDER BY (((((~ ('179531391')))AND(((((t1.c0)OR(0.6852305850788721)))AND(vt0.c1)))))AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0))));
SELECT * FROM t1, vt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0x2bb4c162 END)<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0x2bb4c162 END)<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0x2bb4c162 END)<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0x2bb4c162 END)<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0x2bb4c162 END)<(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT ((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1, t1.c0, t1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (((vt0.c0, vt0.c0, vt1.c0, vt0.c1, ''))>=((vt0.c1, t1.c0, vt0.c0, t1.c0, t1.c0))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS FIRST, CHANGES()  NULLS FIRST, ((x'')|(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, t1.c0, t1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (((vt0.c0, vt0.c0, vt1.c0, vt0.c1, ''))>=((vt0.c1, t1.c0, vt0.c0, t1.c0, t1.c0))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ABS(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS FIRST, CHANGES()  NULLS FIRST, ((x'')|(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 END AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1, t1.c0, t1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (((vt0.c0, vt0.c0, vt1.c0, vt0.c1, ''))>=((vt0.c1, t1.c0, vt0.c0, t1.c0, t1.c0))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS FIRST, CHANGES()  NULLS FIRST, ((x'')|(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1, t1.c0, t1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (((vt0.c0, vt0.c0, vt1.c0, vt0.c1, ''))>=((vt0.c1, t1.c0, vt0.c0, t1.c0, t1.c0))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ABS(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS FIRST, CHANGES()  NULLS FIRST, ((x'')|(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 END AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1, t1.c0, t1.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), (((vt0.c0, vt0.c0, vt1.c0, vt0.c1, ''))>=((vt0.c1, t1.c0, vt0.c0, t1.c0, t1.c0))), CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c1) IS FALSE))))) ORDER BY ABS(DISTINCT vt0.c1 COLLATE RTRIM)  NULLS FIRST, CHANGES()  NULLS FIRST, ((x'')|(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST, CAST(CASE vt0.c0  WHEN vt0.c1 THEN t1.c0 END AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM t1, vt0, vt1 WHERE ((- ((('^ZN?⛃P~am')*(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((vt1.c0))>=((t1.c0))))), (- (CAST(t1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((- ((('^ZN?⛃P~am')*(vt0.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 NOT INDEXED ORDER BY ((vt0.c1 COLLATE NOCASE)%((((vt1.c0))>=((t1.c0))))), (- (CAST(t1.c0 AS REAL))));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((- ((('^ZN?⛃P~am')*(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((vt1.c0))>=((t1.c0))))), (- (CAST(t1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((- ((('^ZN?⛃P~am')*(vt0.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 NOT INDEXED ORDER BY ((vt0.c1 COLLATE NOCASE)%((((vt1.c0))>=((t1.c0))))), (- (CAST(t1.c0 AS REAL))));
SELECT ALL * FROM t1, vt0, vt1 WHERE ((- ((('^ZN?⛃P~am')*(vt0.c1))))) ORDER BY ((vt0.c1 COLLATE NOCASE)%((((vt1.c0))>=((t1.c0))))), (- (CAST(t1.c0 AS REAL)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(vt1.c0)))AND('➓A(|<d\r5')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(vt1.c0)))AND('➓A(|<d\r5'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(vt1.c0)))AND('➓A(|<d\r5')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))AND(vt1.c0)))AND('➓A(|<d\r5'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(vt1.c0)))AND('➓A(|<d\r5')));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt1.c0, vt1.c0, 0.41242185690627875)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t1.c0, 0.1614896692275113, vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, 0.41242185690627875)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t1.c0, 0.1614896692275113, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt1.c0, vt1.c0, 0.41242185690627875)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t1.c0, 0.1614896692275113, vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, 0.41242185690627875)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t1.c0, 0.1614896692275113, vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((vt1.c0, vt1.c0, 0.41242185690627875)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((t1.c0, 0.1614896692275113, vt1.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((('')) BETWEEN ((vt1.c0)) AND ((t1.c0))))<((((t1.c0))==((NULL)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((('')) BETWEEN ((vt1.c0)) AND ((t1.c0))))<((((t1.c0))=((NULL)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((vt1.c0)|(vt1.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((('')) BETWEEN ((vt1.c0)) AND ((t1.c0))))<((((t1.c0))==((NULL)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((('')) BETWEEN ((vt1.c0)) AND ((t1.c0))))<((((t1.c0))=((NULL)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((vt1.c0)|(vt1.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (((((('')) BETWEEN ((vt1.c0)) AND ((t1.c0))))<((((t1.c0))==((NULL)))))) ORDER BY ((((vt1.c0)|(vt1.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM t1, vt0 WHERE (x'a081');
SELECT SUM(count) FROM (SELECT ALL ((x'a081') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (x'a081');
SELECT SUM(count) FROM (SELECT ALL ((x'a081') IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (x'a081');
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('-509177070' IN ()))AND(TYPEOF(DISTINCT vt1.c0))))AND(x'c78c' COLLATE NOCASE))) ORDER BY 0.5355353501860335 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-509177070' IN ()))AND(TYPEOF(DISTINCT vt1.c0))))AND(x'c78c' COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY 0.5355353501860335 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('-509177070' IN ()))AND(TYPEOF(DISTINCT vt1.c0))))AND(x'c78c' COLLATE NOCASE))) ORDER BY 0.5355353501860335 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-509177070' IN ()))AND(TYPEOF(DISTINCT vt1.c0))))AND(x'c78c' COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY 0.5355353501860335 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((('-509177070' IN ()))AND(TYPEOF(DISTINCT vt1.c0))))AND(x'c78c' COLLATE NOCASE))) ORDER BY 0.5355353501860335 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((((vt0.c0)OR(NULL)))AND(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(NULL)))AND(vt0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((((vt0.c0)OR(NULL)))AND(vt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)OR(NULL)))AND(vt0.c1)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY (((((vt0.c0)OR(NULL)))AND(vt0.c1)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0))))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0))))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))==((- (vt1.c0))))) ORDER BY ((vt1.c0 IN ()) IN ());
SELECT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t1.c0))<>((t1.c0))) THEN (('')IS NOT(vt0.c1)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((vt1.c0 IN ()))+(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t1.c0))<>((t1.c0))) THEN (('')IS NOT(vt0.c1)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t1.c0))<>((t1.c0))) THEN (('')IS NOT(vt0.c1)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((vt1.c0 IN ()))+(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))+(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t1.c0))<>((t1.c0))) THEN (('')IS NOT(vt0.c1)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END);
SELECT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON CASE WHEN (((t1.c0))<>((t1.c0))) THEN (('')IS NOT(vt0.c1)) ELSE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END WHERE ((((vt1.c0 IN ()))+(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM t1 CROSS JOIN vt0 ON ((((NULL)OR(((vt0.c1) ISNULL))))AND(0.4829152144086336)) RIGHT OUTER JOIN vt1 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN (0.43896787766695944 IN (t1.c0)) THEN t1.c0 COLLATE NOCASE END WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((NULL)OR(((vt0.c1) ISNULL))))AND(0.4829152144086336)) RIGHT OUTER JOIN vt1 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN (0.43896787766695944 IN (t1.c0)) THEN t1.c0 COLLATE NOCASE END);
SELECT * FROM t1 CROSS JOIN vt0 ON ((((NULL)OR(((vt0.c1) ISNULL))))AND(0.4829152144086336)) RIGHT OUTER JOIN vt1 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN (0.43896787766695944 IN (t1.c0)) THEN t1.c0 COLLATE NOCASE END WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((NULL)OR(((vt0.c1) ISNULL))))AND(0.4829152144086336)) RIGHT OUTER JOIN vt1 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN (0.43896787766695944 IN (t1.c0)) THEN t1.c0 COLLATE NOCASE END);
SELECT * FROM t1 CROSS JOIN vt0 ON ((((NULL)OR(((vt0.c1) ISNULL))))AND(0.4829152144086336)) RIGHT OUTER JOIN vt1 ON CASE (((vt0.c0))=((vt1.c0)))  WHEN (0.43896787766695944 IN (t1.c0)) THEN t1.c0 COLLATE NOCASE END WHERE (((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((NULL) NOT BETWEEN (vt0.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1, vt1 WHERE (RTRIM(t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((RTRIM(t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (RTRIM(t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((RTRIM(t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (RTRIM(t1.c0 COLLATE RTRIM));
SELECT ALL * FROM t1, vt0, vt1 WHERE (((t1.c0)<=(CAST(t1.c0 AS TEXT)))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((0.19967141455520476)%(vt1.c0))) AND ((((vt0.c0))<((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((0.19967141455520476)%(vt1.c0))) AND ((((vt0.c0))<((vt0.c1))))) DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((t1.c0)<=(CAST(t1.c0 AS TEXT)))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((0.19967141455520476)%(vt1.c0))) AND ((((vt0.c0))<((vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)<=(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((0.19967141455520476)%(vt1.c0))) AND ((((vt0.c0))<((vt0.c1))))) DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (((t1.c0)<=(CAST(t1.c0 AS TEXT)))) ORDER BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((0.19967141455520476)%(vt1.c0))) AND ((((vt0.c0))<((vt0.c1))))) DESC;
SELECT * FROM vt0 INNER JOIN t1 ON ((vt0.c0 IN ()) IN ()) WHERE (CAST(((t1.c0)<(t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<(t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0 INNER JOIN t1 ON ((vt0.c0 IN ()) IN ()) WHERE (CAST(((t1.c0)<(t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<(t1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((vt0.c0 IN ()) IN ()));
SELECT * FROM vt0 INNER JOIN t1 ON ((vt0.c0 IN ()) IN ()) WHERE (CAST(((t1.c0)<(t1.c0)) AS BLOB));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON CASE WHEN NULL THEN IFNULL(DISTINCT t1.c0, vt0.c1) WHEN CHAR(0.38949538727636557) THEN vt0.c0 WHEN ((t1.c0)<=(vt0.c0)) THEN ((t1.c0)>=(vt0.c1)) END WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY ((((UNLIKELY(DISTINCT '0.10297163472357262'))AND((t1.c0 IN ()))))AND(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE WHEN NULL THEN IFNULL(DISTINCT t1.c0, vt0.c1) WHEN CHAR(0.38949538727636557) THEN vt0.c0 WHEN ((t1.c0)<=(vt0.c0)) THEN ((t1.c0)>=(vt0.c1)) END ORDER BY ((((UNLIKELY(DISTINCT '0.10297163472357262'))AND((t1.c0 IN ()))))AND(vt0.c1)) ASC);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON CASE WHEN NULL THEN IFNULL(DISTINCT t1.c0, vt0.c1) WHEN CHAR(0.38949538727636557) THEN vt0.c0 WHEN ((t1.c0)<=(vt0.c0)) THEN ((t1.c0)>=(vt0.c1)) END WHERE ((vt0.c1 COLLATE RTRIM IN ())) ORDER BY ((((UNLIKELY(DISTINCT '0.10297163472357262'))AND((t1.c0 IN ()))))AND(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE WHEN NULL THEN IFNULL(DISTINCT t1.c0, vt0.c1) WHEN CHAR(0.38949538727636557) THEN vt0.c0 WHEN ((t1.c0)<=(vt0.c0)) THEN ((t1.c0)>=(vt0.c1)) END ORDER BY ((((UNLIKELY(DISTINCT '0.10297163472357262'))AND((t1.c0 IN ()))))AND(vt0.c1)) ASC);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN vt1 ON t1.c0 WHERE (IFNULL((((t1.c0))>((t1.c0))), CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL((((t1.c0))>((t1.c0))), CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN vt1 ON t1.c0);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN vt1 ON t1.c0 WHERE (IFNULL((((t1.c0))>((t1.c0))), CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((IFNULL((((t1.c0))>((t1.c0))), CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN vt1 ON t1.c0);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON (vt0.c0 IN ()) LEFT OUTER JOIN vt1 ON t1.c0 WHERE (IFNULL((((t1.c0))>((t1.c0))), CAST(t1.c0 AS BLOB)));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (((('')>=(vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 ORDER BY (((('')>=(vt0.c0))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (((('')>=(vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 ORDER BY (((('')>=(vt0.c0))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) COLLATE RTRIM) ORDER BY (((('')>=(vt0.c0))) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)%(vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))>=(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0)))>=(CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)%(vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))>=(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)%(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)/(vt1.c0)))>=(CAST(vt1.c0 AS BLOB))));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)%(vt1.c0))))) ORDER BY ((((vt1.c0)/(vt1.c0)))>=(CAST(vt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0)) COLLATE BINARY);
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c1 WHERE (STRFTIME(CASE WHEN vt0.c0 THEN '-1935544374' END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN (0Xffffffffbe3bc501, 0x6412a628)), (('MF랴+b') ISNULL), ((vt0.c0)>=(t1.c0)))) ORDER BY ((0.5210713809053545)|((((x''))<>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN vt0.c0 THEN '-1935544374' END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN (0xffffffffbe3bc501, 0X6412a628)), (('MF랴+b') ISNULL), ((vt0.c0)>=(t1.c0)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON vt0.c1 ORDER BY ((0.5210713809053545)|((((x''))!=((vt0.c0))))) DESC);
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c1 WHERE (STRFTIME(CASE WHEN vt0.c0 THEN '-1935544374' END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN (0Xffffffffbe3bc501, 0x6412a628)), (('MF랴+b') ISNULL), ((vt0.c0)>=(t1.c0)))) ORDER BY ((0.5210713809053545)|((((x''))<>((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN vt0.c0 THEN '-1935544374' END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN (0xffffffffbe3bc501, 0X6412a628)), (('MF랴+b') ISNULL), ((vt0.c0)>=(t1.c0)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON vt0.c1 ORDER BY ((0.5210713809053545)|((((x''))!=((vt0.c0))))) DESC);
SELECT * FROM t1 CROSS JOIN vt0 ON vt0.c1 WHERE (STRFTIME(CASE WHEN vt0.c0 THEN '-1935544374' END, ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), (vt0.c1 IN (0Xffffffffbe3bc501, 0x6412a628)), (('MF랴+b') ISNULL), ((vt0.c0)>=(t1.c0)))) ORDER BY ((0.5210713809053545)|((((x''))<>((vt0.c0))))) DESC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY UNLIKELY(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT ALL * FROM t1, vt0 WHERE (((CAST(t1.c0 AS TEXT)) IS TRUE)) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((CAST(t1.c0 AS TEXT)) IS TRUE)) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c0  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE (((CAST(t1.c0 AS TEXT)) IS TRUE)) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(TRIM(vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(TRIM(vt0.c1)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((CAST(t1.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(TRIM(vt0.c1))));
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN (('4BpQ*/n', t1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, '1184570845'))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN (('4BpQ*/n', t1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, '1184570845')))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN (('4BpQ*/n', t1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, '1184570845'))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN (('4BpQ*/n', t1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, '1184570845')))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN (('4BpQ*/n', t1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, '1184570845'))))));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (-1.332205611E9)) ASC  NULLS LAST, ((((vt0.c1)||(vt1.c0)))>=((~ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (-1.332205611E9)) ASC  NULLS LAST, ((((vt0.c1)||(vt1.c0)))>=((~ (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (-1.332205611E9)) ASC  NULLS LAST, ((((vt0.c1)||(vt1.c0)))>=((~ (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (-1.332205611E9)) ASC  NULLS LAST, ((((vt0.c1)||(vt1.c0)))>=((~ (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOT NULL)) AND (-1.332205611E9)) ASC  NULLS LAST, ((((vt0.c1)||(vt1.c0)))>=((~ (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0)))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0)))) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE (CAST(SQLITE_COMPILEOPTION_USED(t1.c0) AS NUMERIC)) ORDER BY ((((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND((1355442598 IN (t1.c0)))))AND(UNLIKELY(DISTINCT t1.c0)))  NULLS LAST, 1427777427  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(t1.c0) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND((1355442598 IN (t1.c0)))))AND(UNLIKELY(DISTINCT t1.c0)))  NULLS LAST, 1427777427  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CAST(SQLITE_COMPILEOPTION_USED(t1.c0) AS NUMERIC)) ORDER BY ((((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND((1355442598 IN (t1.c0)))))AND(UNLIKELY(DISTINCT t1.c0)))  NULLS LAST, 1427777427  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(SQLITE_COMPILEOPTION_USED(t1.c0) AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0 COLLATE BINARY)AND(((((t1.c0)AND(t1.c0)))AND(t1.c0)))))AND(((t1.c0) BETWEEN (NULL) AND (t1.c0)))))AND((1355442598 IN (t1.c0)))))AND(UNLIKELY(DISTINCT t1.c0)))  NULLS LAST, 1427777427  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM)/(((t1.c0)/(NULL))))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)/(((t1.c0)/(NULL))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM)/(((t1.c0)/(NULL))))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)/(((t1.c0)/(NULL))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0 COLLATE RTRIM)/(((t1.c0)/(NULL))))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '-469385582' THEN vt0.c1 END)||(((vt0.c0) NOTNULL)))) ORDER BY CASE (NULL IN (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-469385582' THEN vt0.c1 END)||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NULL IN (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(vt0.c1) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '-469385582' THEN vt0.c1 END)||(((vt0.c0) NOTNULL)))) ORDER BY CASE (NULL IN (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(vt0.c1) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '-469385582' THEN vt0.c1 END)||(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NULL IN (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(vt0.c1) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN '-469385582' THEN vt0.c1 END)||(((vt0.c0) NOTNULL)))) ORDER BY CASE (NULL IN (vt0.c1))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) THEN RTRIM(vt0.c1) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((t1.c0)|(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((t1.c0)|(x'')) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((t1.c0)|(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((t1.c0)|(x'')) END) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN CAST(vt0.c1 AS TEXT) THEN ((t1.c0)|(x'')) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY TRIM((0.19050263799019918 IN ())), CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((vt0.c1)AND('-1934104665')))AND(vt1.c0)))>(((vt0.c1)||(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM((0.19050263799019918 IN ())), CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((vt0.c1)AND('-1934104665')))AND(vt1.c0)))>(((vt0.c1)||(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY TRIM((0.19050263799019918 IN ())), CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((vt0.c1)AND('-1934104665')))AND(vt1.c0)))>(((vt0.c1)||(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM((0.19050263799019918 IN ())), CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((vt0.c1)AND('-1934104665')))AND(vt1.c0)))>(((vt0.c1)||(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (NULL) ORDER BY TRIM((0.19050263799019918 IN ())), CASE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) THEN vt0.c0 END  NULLS FIRST, ((((((vt0.c1)AND('-1934104665')))AND(vt1.c0)))>(((vt0.c1)||(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END AS TEXT)) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN ((vt0.c1) NOT NULL) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL) WHERE (((vt0.c1)||(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL) WHERE (((vt0.c1)||(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt0.c1 THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END) ISNULL) WHERE (((vt0.c1)||(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((((((vt1.c0)AND(t1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((x'') BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0 COLLATE NOCASE))) ORDER BY ((((t1.c0 COLLATE NOCASE)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (0.4375289311195105)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS LAST, ((((((((CHAR(t1.c0))OR(((t1.c0)>(t1.c0)))))AND(((t1.c0)==(t1.c0)))))AND((+ (t1.c0)))))AND((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((x'') BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0 COLLATE NOCASE)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (0.4375289311195105)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS LAST, ((((((((CHAR(t1.c0))OR(((t1.c0)>(t1.c0)))))AND(((t1.c0)=(t1.c0)))))AND((+ (t1.c0)))))AND((NOT (t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((x'') BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0 COLLATE NOCASE))) ORDER BY ((((t1.c0 COLLATE NOCASE)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (0.4375289311195105)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS LAST, ((((((((CHAR(t1.c0))OR(((t1.c0)>(t1.c0)))))AND(((t1.c0)==(t1.c0)))))AND((+ (t1.c0)))))AND((NOT (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((x'') BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0 COLLATE NOCASE)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (0.4375289311195105)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS LAST, ((((((((CHAR(t1.c0))OR(((t1.c0)>(t1.c0)))))AND(((t1.c0)=(t1.c0)))))AND((+ (t1.c0)))))AND((NOT (t1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) BETWEEN (((x'') BETWEEN (t1.c0) AND (t1.c0))) AND (t1.c0 COLLATE NOCASE))) ORDER BY ((((t1.c0 COLLATE NOCASE)OR(((t1.c0) NOT BETWEEN (t1.c0) AND (0.4375289311195105)))))AND(LOWER(DISTINCT t1.c0))) ASC  NULLS LAST, ((((((((CHAR(t1.c0))OR(((t1.c0)>(t1.c0)))))AND(((t1.c0)==(t1.c0)))))AND((+ (t1.c0)))))AND((NOT (t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY (((('oG'))<((0.24835544601377768))) IN (((vt0.c0)-(vt0.c1)), rtreenode(vt0.c0, '1869510169'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((('oG'))<((0.24835544601377768))) IN (((vt0.c0)-(vt0.c1)), rtreenode(vt0.c0, '1869510169'))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY (((('oG'))<((0.24835544601377768))) IN (((vt0.c0)-(vt0.c1)), rtreenode(vt0.c0, '1869510169'))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) NOT BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((('oG'))<((0.24835544601377768))) IN (((vt0.c0)-(vt0.c1)), rtreenode(vt0.c0, '1869510169'))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c1))) NOT BETWEEN ((- (vt0.c0))) AND ((vt0.c0 IN ())))) ORDER BY (((('oG'))<((0.24835544601377768))) IN (((vt0.c0)-(vt0.c1)), rtreenode(vt0.c0, '1869510169'))) DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t1.c0))) IS TRUE) WHERE (CAST(t1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t1.c0))) IS TRUE));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t1.c0))) IS TRUE) WHERE (CAST(t1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t1.c0))) IS TRUE));
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON ((((((((((vt1.c0)OR(t1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(t1.c0))) IS TRUE) WHERE (CAST(t1.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULL) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC;
SELECT * FROM vt1, vt0, t1 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CAST((~ (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (''))) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND ((((t1.c0))>=((t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((~ (''))) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND ((((t1.c0))>=((t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (''))) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND ((((t1.c0))>=((t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (((~ (''))) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND ((((t1.c0))>=((t1.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (((~ (''))) BETWEEN (((t1.c0)IS NOT(t1.c0))) AND ((((t1.c0))>=((t1.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 CROSS JOIN vt1 ON (((- (vt0.c1))) BETWEEN ((NOT (vt1.c0))) AND ((((vt1.c0))<=((vt0.c1))))) WHERE (((((((vt1.c0)OR(vt0.c0)))OR(''))) IS TRUE)) ORDER BY TRIM(DISTINCT ('' IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(''))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (((- (vt0.c1))) BETWEEN ((NOT (vt1.c0))) AND ((((vt1.c0))<=((vt0.c1))))) ORDER BY TRIM(DISTINCT ('' IN ()))  NULLS LAST);
SELECT ALL * FROM t1, vt0 CROSS JOIN vt1 ON (((- (vt0.c1))) BETWEEN ((NOT (vt1.c0))) AND ((((vt1.c0))<=((vt0.c1))))) WHERE (((((((vt1.c0)OR(vt0.c0)))OR(''))) IS TRUE)) ORDER BY TRIM(DISTINCT ('' IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt0.c0)))OR(''))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON (((- (vt0.c1))) BETWEEN ((NOT (vt1.c0))) AND ((((vt1.c0))<=((vt0.c1))))) ORDER BY TRIM(DISTINCT ('' IN ()))  NULLS LAST);
SELECT ALL * FROM t1, vt0 CROSS JOIN vt1 ON (((- (vt0.c1))) BETWEEN ((NOT (vt1.c0))) AND ((((vt1.c0))<=((vt0.c1))))) WHERE (((((((vt1.c0)OR(vt0.c0)))OR(''))) IS TRUE)) ORDER BY TRIM(DISTINCT ('' IN ()))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))<>(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))!=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))<>(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))!=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))<>(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0)>('0.7872250405664006'))) ISNULL)) ORDER BY UNLIKELY(LOWER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>('0.7872250405664006'))) ISNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY UNLIKELY(LOWER(DISTINCT vt0.c1)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0)>('0.7872250405664006'))) ISNULL)) ORDER BY UNLIKELY(LOWER(DISTINCT vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>('0.7872250405664006'))) ISNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY UNLIKELY(LOWER(DISTINCT vt0.c1)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt0.c0)>('0.7872250405664006'))) ISNULL)) ORDER BY UNLIKELY(LOWER(DISTINCT vt0.c1));
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (NOT (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (NOT (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY (NOT (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, ((('䢃'))>((vt1.c0))), (((vt1.c0))<((vt1.c0))))) AND (((- (0.7293459934406319)), CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, (vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, ((('䢃'))>((vt1.c0))), (((vt1.c0))<((vt1.c0))))) AND (((- (0.7293459934406319)), CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, ((('䢃'))>((vt1.c0))), (((vt1.c0))<((vt1.c0))))) AND (((- (0.7293459934406319)), CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, (vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, ((('䢃'))>((vt1.c0))), (((vt1.c0))<((vt1.c0))))) AND (((- (0.7293459934406319)), CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, ((('䢃'))>((vt1.c0))), (((vt1.c0))<((vt1.c0))))) AND (((- (0.7293459934406319)), CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, (vt1.c0 IN (vt1.c0))))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((('') NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) WHERE (((((t1.c0)<=(vt0.c1))) IS FALSE)) ORDER BY ((((SQLITE_COMPILEOPTION_GET(t1.c0))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((('') NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) ORDER BY ((((SQLITE_COMPILEOPTION_GET(t1.c0))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 END)));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((('') NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) WHERE (((((t1.c0)<=(vt0.c1))) IS FALSE)) ORDER BY ((((SQLITE_COMPILEOPTION_GET(t1.c0))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<=(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((('') NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) ORDER BY ((((SQLITE_COMPILEOPTION_GET(t1.c0))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 END)));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((('') NOT BETWEEN (vt0.c1) AND (vt1.c0)) IN ()) WHERE (((((t1.c0)<=(vt0.c1))) IS FALSE)) ORDER BY ((((SQLITE_COMPILEOPTION_GET(t1.c0))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN t1.c0 END));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(json_patch(vt1.c0, vt0.c0) AS NUMERIC)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(vt1.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(CAST(vt0.c0 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(json_patch(vt1.c0, vt0.c0) AS NUMERIC)) ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_patch(vt1.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))>=(CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((t1.c0)&(vt0.c1)) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((t1.c0)&(vt0.c1)) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((t1.c0)&(vt0.c1)) ELSE (+ (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((t1.c0)&(vt0.c1)) ELSE (+ (vt1.c0)) END) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((t1.c0)&(vt0.c1)) ELSE (+ (vt1.c0)) END);
SELECT * FROM t1, vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT * FROM vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) IS FALSE))) AND ((((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)LIKE(((vt0.c1)-(t1.c0))))) ORDER BY LIKE(vt1.c0 COLLATE BINARY, LOWER(vt1.c0), '1')  NULLS FIRST, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))<(NULL)) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)LIKE(((vt0.c1)-(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LIKE(vt1.c0 COLLATE BINARY, LOWER(vt1.c0), '1')  NULLS FIRST, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))<(NULL)) ASC, vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)LIKE(((vt0.c1)-(t1.c0))))) ORDER BY LIKE(vt1.c0 COLLATE BINARY, LOWER(vt1.c0), '1')  NULLS FIRST, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))<(NULL)) ASC, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)LIKE(((vt0.c1)-(t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LIKE(vt1.c0 COLLATE BINARY, LOWER(vt1.c0), '1')  NULLS FIRST, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))<(NULL)) ASC, vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)LIKE(((vt0.c1)-(t1.c0))))) ORDER BY LIKE(vt1.c0 COLLATE BINARY, LOWER(vt1.c0), '1')  NULLS FIRST, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0)))<(NULL)) ASC, vt0.c1 DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY ((((((vt1.c0)LIKE(NULL)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))), CASE CAST(vt1.c0 AS BLOB)  WHEN CAST(vt1.c0 AS INTEGER) THEN -9.52991654E8 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS FIRST, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)LIKE(NULL)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))), CASE CAST(vt1.c0 AS BLOB)  WHEN CAST(vt1.c0 AS INTEGER) THEN -9.52991654E8 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS FIRST, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END  NULLS LAST);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY ((((((vt1.c0)LIKE(NULL)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))), CASE CAST(vt1.c0 AS BLOB)  WHEN CAST(vt1.c0 AS INTEGER) THEN -9.52991654E8 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS FIRST, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)LIKE(NULL)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))), CASE CAST(vt1.c0 AS BLOB)  WHEN CAST(vt1.c0 AS INTEGER) THEN -9.52991654E8 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS FIRST, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END  NULLS LAST);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY ((((((vt1.c0)LIKE(NULL)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))), CASE CAST(vt1.c0 AS BLOB)  WHEN CAST(vt1.c0 AS INTEGER) THEN -9.52991654E8 WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0) IS FALSE) WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 COLLATE NOCASE END  NULLS FIRST, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN vt1.c0 ELSE (vt1.c0 IN ()) END  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.033558567111684146)))))) ORDER BY (((~ (t1.c0)))-(((t1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.033558567111684146)))))) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c0)))-(((t1.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.033558567111684146)))))) ORDER BY (((~ (t1.c0)))-(((t1.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.033558567111684146)))))) IS TRUE)  as count FROM t1 ORDER BY (((~ (t1.c0)))-(((t1.c0) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((0.033558567111684146)))))) ORDER BY (((~ (t1.c0)))-(((t1.c0) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(((t1.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c0)))AND(((t1.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(((t1.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c0)))AND(((t1.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(((t1.c0) ISNULL))))AND(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((x'30f6')<=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((x'30f6')<=(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((x'30f6')<=(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((x'30f6')<=(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND ((((x'30f6')<=(vt0.c1))))));
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((0.8752335148628057)||(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) END) ORDER BY ((((CASE WHEN NULL THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)OR((t1.c0 IN (vt0.c0)))))OR(((vt1.c0)>(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((0.8752335148628057)||(vt1.c0)) COLLATE BINARY ORDER BY ((((CASE WHEN NULL THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)OR((t1.c0 IN (vt0.c0)))))OR(((vt1.c0)>(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((0.8752335148628057)||(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) END) ORDER BY ((((CASE WHEN NULL THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)OR((t1.c0 IN (vt0.c0)))))OR(((vt1.c0)>(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((0.8752335148628057)||(vt1.c0)) COLLATE BINARY ORDER BY ((((CASE WHEN NULL THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)OR((t1.c0 IN (vt0.c0)))))OR(((vt1.c0)>(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 LEFT OUTER JOIN t1 ON ((0.8752335148628057)||(vt1.c0)) COLLATE BINARY WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt0.c1)) END) ORDER BY ((((CASE WHEN NULL THEN t1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)OR((t1.c0 IN (vt0.c0)))))OR(((vt1.c0)>(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE (((TRIM(DISTINCT t1.c0)) IS FALSE)) ORDER BY ((((vt0.c0)>>(t1.c0)))>>(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt0.c0)>>(t1.c0)))>>(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (((TRIM(DISTINCT t1.c0)) IS FALSE)) ORDER BY ((((vt0.c0)>>(t1.c0)))>>(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t1.c0)) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt0.c0)>>(t1.c0)))>>(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, vt0, t1 WHERE (((TRIM(DISTINCT t1.c0)) IS FALSE)) ORDER BY ((((vt0.c0)>>(t1.c0)))>>(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS LAST;
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON CASE vt1.c0  WHEN CASE WHEN vt0.c1 THEN t1.c0 END THEN CAST(vt0.c1 AS BLOB) ELSE (vt0.c1 IN (vt0.c0, vt0.c1)) END WHERE ('') ORDER BY vt0.c1 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CASE vt1.c0  WHEN CASE WHEN vt0.c1 THEN t1.c0 END THEN CAST(vt0.c1 AS BLOB) ELSE (vt0.c1 IN (vt0.c0, vt0.c1)) END ORDER BY vt0.c1 COLLATE NOCASE);
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON CASE vt1.c0  WHEN CASE WHEN vt0.c1 THEN t1.c0 END THEN CAST(vt0.c1 AS BLOB) ELSE (vt0.c1 IN (vt0.c0, vt0.c1)) END WHERE ('') ORDER BY vt0.c1 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CASE vt1.c0  WHEN CASE WHEN vt0.c1 THEN t1.c0 END THEN CAST(vt0.c1 AS BLOB) ELSE (vt0.c1 IN (vt0.c0, vt0.c1)) END ORDER BY vt0.c1 COLLATE NOCASE);
SELECT * FROM vt1, vt0 CROSS JOIN t1 ON CASE vt1.c0  WHEN CASE WHEN vt0.c1 THEN t1.c0 END THEN CAST(vt0.c1 AS BLOB) ELSE (vt0.c1 IN (vt0.c0, vt0.c1)) END WHERE ('') ORDER BY vt0.c1 COLLATE NOCASE;
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON (((vt0.c0, t1.c0, t1.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0xffffffffa62325be)) AND ((vt0.c1))), UNLIKELY(t1.c0), ((t1.c0) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c0)<=(vt0.c1)), t1.c0))) WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON (((vt0.c0, t1.c0, t1.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0Xffffffffa62325be)) AND ((vt0.c1))), UNLIKELY(t1.c0), ((t1.c0) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c0)<=(vt0.c1)), t1.c0))) ORDER BY t1.c0  NULLS LAST);
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON (((vt0.c0, t1.c0, t1.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0xffffffffa62325be)) AND ((vt0.c1))), UNLIKELY(t1.c0), ((t1.c0) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c0)<=(vt0.c1)), t1.c0))) WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON (((vt0.c0, t1.c0, t1.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0Xffffffffa62325be)) AND ((vt0.c1))), UNLIKELY(t1.c0), ((t1.c0) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c0)<=(vt0.c1)), t1.c0))) ORDER BY t1.c0  NULLS LAST);
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON (((vt0.c0, t1.c0, t1.c0)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((0xffffffffa62325be)) AND ((vt0.c1))), UNLIKELY(t1.c0), ((t1.c0) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)), ((t1.c0)<=(vt0.c1)), t1.c0))) WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (('*rhB.\n並FH') BETWEEN (vt0.c0) AND (NULL)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c1)/(x'5c95d02f')) WHEN COALESCE(vt1.c0, vt0.c1, vt1.c0, vt0.c1) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) WHEN (+ (vt0.c1)) THEN (150112956 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('*rhB.\n並FH') BETWEEN (vt0.c0) AND (NULL)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c1)/(x'5c95d02f')) WHEN COALESCE(vt1.c0, vt0.c1, vt1.c0, vt0.c1) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) WHEN (+ (vt0.c1)) THEN (150112956 IN (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (('*rhB.\n並FH') BETWEEN (vt0.c0) AND (NULL)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c1)/(x'5c95d02f')) WHEN COALESCE(vt1.c0, vt0.c1, vt1.c0, vt0.c1) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) WHEN (+ (vt0.c1)) THEN (150112956 IN (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('*rhB.\n並FH') BETWEEN (vt0.c0) AND (NULL)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c1)/(x'5c95d02f')) WHEN COALESCE(vt1.c0, vt0.c1, vt1.c0, vt0.c1) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) WHEN (+ (vt0.c1)) THEN (150112956 IN (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (('*rhB.\n並FH') BETWEEN (vt0.c0) AND (NULL)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c1)/(x'5c95d02f')) WHEN COALESCE(vt1.c0, vt0.c1, vt1.c0, vt0.c1) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END WHEN ((vt0.c1) ISNULL) THEN ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)) WHEN (+ (vt0.c1)) THEN (150112956 IN (vt1.c0)) END);
SELECT * FROM vt1 WHERE (COALESCE(ROUND(vt1.c0, vt1.c0), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(ROUND(vt1.c0, vt1.c0), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(ROUND(vt1.c0, vt1.c0), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(ROUND(vt1.c0, vt1.c0), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (COALESCE(ROUND(vt1.c0, vt1.c0), (vt1.c0 IN ())));
SELECT * FROM t1, vt1 WHERE (((((vt1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN 978395720 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN 978395720 END  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((vt1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN 978395720 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN 978395720 END  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((vt1.c0)OR(t1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN CAST(t1.c0 AS BLOB) THEN 978395720 END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(1040892010 COLLATE RTRIM)) ORDER BY CAST(t1.c0 AS TEXT) ASC  NULLS LAST, CAST('' AS TEXT) ASC, CAST(t1.c0 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(1040892010 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 AS TEXT) ASC  NULLS LAST, CAST('' AS TEXT) ASC, CAST(t1.c0 AS INTEGER) COLLATE RTRIM ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(1040892010 COLLATE RTRIM)) ORDER BY CAST(t1.c0 AS TEXT) ASC  NULLS LAST, CAST('' AS TEXT) ASC, CAST(t1.c0 AS INTEGER) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(1040892010 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 AS TEXT) ASC  NULLS LAST, CAST('' AS TEXT) ASC, CAST(t1.c0 AS INTEGER) COLLATE RTRIM ASC);
SELECT ALL * FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(1040892010 COLLATE RTRIM)) ORDER BY CAST(t1.c0 AS TEXT) ASC  NULLS LAST, CAST('' AS TEXT) ASC, CAST(t1.c0 AS INTEGER) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.25916324224842 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.25916324224842 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.25916324224842 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.25916324224842 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt0.c1 WHEN 0.25916324224842 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END)) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt1.c0))))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))<=((vt1.c0))))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0))))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON json_array_length(((vt0.c0)%(t1.c0)), ((vt1.c0)<>(t1.c0))) WHERE (CAST(((((NULL)AND(vt0.c1)))OR(x'25e1')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(vt0.c1)))OR(x'25e1')) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON json_array_length(((vt0.c0)%(t1.c0)), ((vt1.c0)<>(t1.c0))));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON json_array_length(((vt0.c0)%(t1.c0)), ((vt1.c0)<>(t1.c0))) WHERE (CAST(((((NULL)AND(vt0.c1)))OR(x'25e1')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((NULL)AND(vt0.c1)))OR(x'25e1')) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON json_array_length(((vt0.c0)%(t1.c0)), ((vt1.c0)<>(t1.c0))));
SELECT ALL COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON json_array_length(((vt0.c0)%(t1.c0)), ((vt1.c0)<>(t1.c0))) WHERE (CAST(((((NULL)AND(vt0.c1)))OR(x'25e1')) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((vt0.c0))>((vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((vt0.c0))>((vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CAST((((vt0.c0))>((vt1.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)LIKE(vt0.c1)))<<((((vt0.c1))>((vt0.c0))))) WHERE (((vt0.c1)<=('->')) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=('->')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)LIKE(vt0.c1)))<<((((vt0.c1))>((vt0.c0))))));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)LIKE(vt0.c1)))<<((((vt0.c1))>((vt0.c0))))) WHERE (((vt0.c1)<=('->')) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=('->')) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)LIKE(vt0.c1)))<<((((vt0.c1))>((vt0.c0))))));
SELECT * FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)LIKE(vt0.c1)))<<((((vt0.c1))>((vt0.c0))))) WHERE (((vt0.c1)<=('->')) COLLATE NOCASE COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY NULL  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY NULL  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL)) ORDER BY NULL  NULLS LAST, ((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) AND (vt0.c1 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (x'33162903');
SELECT SUM(count) FROM (SELECT ((x'33162903') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'33162903');
SELECT SUM(count) FROM (SELECT ((x'33162903') IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (x'33162903');
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((vt1.c0) NOTNULL))AND(((t1.c0) IS FALSE))))AND((t1.c0 IN ())))) ORDER BY CASE (NOT (vt1.c0))  WHEN '-1949948221' THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN (vt1.c0, vt1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN (t1.c0 IN ()) END  NULLS LAST, ((((t1.c0)>=(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (NULL))) AND ('-1103379199')) ASC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(((t1.c0) IS FALSE))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1 ORDER BY CASE (NOT (vt1.c0))  WHEN '-1949948221' THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN (vt1.c0, vt1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN (t1.c0 IN ()) END  NULLS LAST, ((((t1.c0)>=(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (NULL))) AND ('-1103379199')) ASC  NULLS LAST, '');
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((vt1.c0) NOTNULL))AND(((t1.c0) IS FALSE))))AND((t1.c0 IN ())))) ORDER BY CASE (NOT (vt1.c0))  WHEN '-1949948221' THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN (vt1.c0, vt1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN (t1.c0 IN ()) END  NULLS LAST, ((((t1.c0)>=(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (NULL))) AND ('-1103379199')) ASC  NULLS LAST, '';
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOTNULL))AND(((t1.c0) IS FALSE))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1 ORDER BY CASE (NOT (vt1.c0))  WHEN '-1949948221' THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN (vt1.c0, vt1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN (t1.c0 IN ()) END  NULLS LAST, ((((t1.c0)>=(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (NULL))) AND ('-1103379199')) ASC  NULLS LAST, '');
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((((vt1.c0) NOTNULL))AND(((t1.c0) IS FALSE))))AND((t1.c0 IN ())))) ORDER BY CASE (NOT (vt1.c0))  WHEN '-1949948221' THEN t1.c0 COLLATE RTRIM WHEN (t1.c0 IN (vt1.c0, vt1.c0)) THEN (t1.c0 IN (t1.c0)) WHEN ((vt1.c0)IS(vt1.c0)) THEN (t1.c0 IN ()) END  NULLS LAST, ((((t1.c0)>=(vt1.c0))) NOT BETWEEN ((vt1.c0 IN (NULL))) AND ('-1103379199')) ASC  NULLS LAST, '';
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON ((vt1.c0) NOTNULL) COLLATE NOCASE WHERE (CASE ((vt0.c1)%(vt1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NULL IN ()) WHEN vt0.c1 COLLATE NOCASE THEN '1040892010' WHEN ((('468489614'))<>((vt0.c0))) THEN 'F5' ELSE vt0.c1 END) ORDER BY (((((((((((vt0.c0))<=((0.6838150208907745))))OR(((((((((vt1.c0)OR(vt1.c0)))OR('136950741')))AND(vt0.c0)))OR(vt1.c0)))))AND(TRIM(vt0.c0))))OR('-1119711039')))OR(((vt0.c1)|(vt0.c0))))  NULLS LAST, ((HEX(vt0.c0)) IS FALSE) DESC  NULLS FIRST, (~ ((((t1.c0, 0.46882747997258467, t1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, 'MUrtz')) AND ((x'1c5feed7', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)%(vt1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NULL IN ()) WHEN vt0.c1 COLLATE NOCASE THEN '1040892010' WHEN ((('468489614'))!=((vt0.c0))) THEN 'F5' ELSE vt0.c1 END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON ((vt1.c0) NOTNULL) COLLATE NOCASE ORDER BY (((((((((((vt0.c0))<=((0.6838150208907745))))OR(((((((((vt1.c0)OR(vt1.c0)))OR('136950741')))AND(vt0.c0)))OR(vt1.c0)))))AND(TRIM(vt0.c0))))OR('-1119711039')))OR(((vt0.c1)|(vt0.c0))))  NULLS LAST, ((HEX(vt0.c0)) IS FALSE) DESC  NULLS FIRST, (~ ((((t1.c0, 0.46882747997258467, t1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, 'MUrtz')) AND ((x'1c5feed7', vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON ((vt1.c0) NOTNULL) COLLATE NOCASE WHERE (CASE ((vt0.c1)%(vt1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NULL IN ()) WHEN vt0.c1 COLLATE NOCASE THEN '1040892010' WHEN ((('468489614'))<>((vt0.c0))) THEN 'F5' ELSE vt0.c1 END) ORDER BY (((((((((((vt0.c0))<=((0.6838150208907745))))OR(((((((((vt1.c0)OR(vt1.c0)))OR('136950741')))AND(vt0.c0)))OR(vt1.c0)))))AND(TRIM(vt0.c0))))OR('-1119711039')))OR(((vt0.c1)|(vt0.c0))))  NULLS LAST, ((HEX(vt0.c0)) IS FALSE) DESC  NULLS FIRST, (~ ((((t1.c0, 0.46882747997258467, t1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, 'MUrtz')) AND ((x'1c5feed7', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)%(vt1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NULL IN ()) WHEN vt0.c1 COLLATE NOCASE THEN '1040892010' WHEN ((('468489614'))!=((vt0.c0))) THEN 'F5' ELSE vt0.c1 END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON ((vt1.c0) NOTNULL) COLLATE NOCASE ORDER BY (((((((((((vt0.c0))<=((0.6838150208907745))))OR(((((((((vt1.c0)OR(vt1.c0)))OR('136950741')))AND(vt0.c0)))OR(vt1.c0)))))AND(TRIM(vt0.c0))))OR('-1119711039')))OR(((vt0.c1)|(vt0.c0))))  NULLS LAST, ((HEX(vt0.c0)) IS FALSE) DESC  NULLS FIRST, (~ ((((t1.c0, 0.46882747997258467, t1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, 'MUrtz')) AND ((x'1c5feed7', vt0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON ((vt1.c0) NOTNULL) COLLATE NOCASE WHERE (CASE ((vt0.c1)%(vt1.c0))  WHEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) THEN (NULL IN ()) WHEN vt0.c1 COLLATE NOCASE THEN '1040892010' WHEN ((('468489614'))<>((vt0.c0))) THEN 'F5' ELSE vt0.c1 END) ORDER BY (((((((((((vt0.c0))<=((0.6838150208907745))))OR(((((((((vt1.c0)OR(vt1.c0)))OR('136950741')))AND(vt0.c0)))OR(vt1.c0)))))AND(TRIM(vt0.c0))))OR('-1119711039')))OR(((vt0.c1)|(vt0.c0))))  NULLS LAST, ((HEX(vt0.c0)) IS FALSE) DESC  NULLS FIRST, (~ ((((t1.c0, 0.46882747997258467, t1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, 'MUrtz')) AND ((x'1c5feed7', vt0.c0, vt1.c0)))))  NULLS LAST;
SELECT * FROM t1 WHERE ((~ (CHANGES()))) ORDER BY ((((((((((t1.c0)&(t1.c0)))AND(t1.c0 COLLATE NOCASE)))OR(CAST(-517967208 AS TEXT))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) ASC, ((t1.c0) BETWEEN (t1.c0) AND (((t1.c0)<=(t1.c0)))), ((((t1.c0) NOTNULL))<=((((('DLdj')AND(t1.c0)))OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0)&(t1.c0)))AND(t1.c0 COLLATE NOCASE)))OR(CAST(-517967208 AS TEXT))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) ASC, ((t1.c0) BETWEEN (t1.c0) AND (((t1.c0)<=(t1.c0)))), ((((t1.c0) NOTNULL))<=((((('DLdj')AND(t1.c0)))OR(t1.c0)))) ASC);
SELECT * FROM t1 WHERE ((~ (CHANGES()))) ORDER BY ((((((((((t1.c0)&(t1.c0)))AND(t1.c0 COLLATE NOCASE)))OR(CAST(-517967208 AS TEXT))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) ASC, ((t1.c0) BETWEEN (t1.c0) AND (((t1.c0)<=(t1.c0)))), ((((t1.c0) NOTNULL))<=((((('DLdj')AND(t1.c0)))OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CHANGES()))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0)&(t1.c0)))AND(t1.c0 COLLATE NOCASE)))OR(CAST(-517967208 AS TEXT))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) ASC, ((t1.c0) BETWEEN (t1.c0) AND (((t1.c0)<=(t1.c0)))), ((((t1.c0) NOTNULL))<=((((('DLdj')AND(t1.c0)))OR(t1.c0)))) ASC);
SELECT * FROM t1 WHERE ((~ (CHANGES()))) ORDER BY ((((((((((t1.c0)&(t1.c0)))AND(t1.c0 COLLATE NOCASE)))OR(CAST(-517967208 AS TEXT))))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c0 END)) ASC, ((t1.c0) BETWEEN (t1.c0) AND (((t1.c0)<=(t1.c0)))), ((((t1.c0) NOTNULL))<=((((('DLdj')AND(t1.c0)))OR(t1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS REAL)) ORDER BY (+ (vt0.c0 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) ORDER BY (('sA')&((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (('sA')&((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) ORDER BY (('sA')&((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (('sA')&((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) IS TRUE) COLLATE BINARY COLLATE BINARY) ORDER BY (('sA')&((t1.c0 IN (t1.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST((vt0.c1 IN ()) AS REAL)) ORDER BY ((((vt1.c0 COLLATE BINARY)OR((((vt0.c1, vt0.c0, t1.c0))!=(('1073301927', vt1.c0, t1.c0))))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt1.c0 COLLATE BINARY)OR((((vt0.c1, vt0.c0, t1.c0))!=(('1073301927', vt1.c0, t1.c0))))))AND((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST((vt0.c1 IN ()) AS REAL)) ORDER BY ((((vt1.c0 COLLATE BINARY)OR((((vt0.c1, vt0.c0, t1.c0))!=(('1073301927', vt1.c0, t1.c0))))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt1.c0 COLLATE BINARY)OR((((vt0.c1, vt0.c0, t1.c0))!=(('1073301927', vt1.c0, t1.c0))))))AND((NOT (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST((vt0.c1 IN ()) AS REAL)) ORDER BY ((((vt1.c0 COLLATE BINARY)OR((((vt0.c1, vt0.c0, t1.c0))!=(('1073301927', vt1.c0, t1.c0))))))AND((NOT (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (('1375336392') NOTNULL) ELSE (t1.c0 IN ()) END WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) NOT NULL)) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (('1375336392') NOTNULL) ELSE (t1.c0 IN ()) END ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (('1375336392') NOTNULL) ELSE (t1.c0 IN ()) END WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) NOT NULL)) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (('1375336392') NOTNULL) ELSE (t1.c0 IN ()) END ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (vt0.c0 IN (vt0.c0))  WHEN (NOT (vt0.c0)) THEN (('1375336392') NOTNULL) ELSE (t1.c0 IN ()) END WHERE (((((vt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) NOT NULL)) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c1))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0))))) CROSS JOIN t1 ON LIKE((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE) WHERE ((((((t1.c0)>>(0.6534931682040322)), (NOT (vt0.c0)), vt1.c0))!=((((x'9f9b') ISNULL), (+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)>>(0.6534931682040322)), (NOT (vt0.c0)), vt1.c0))<>((((x'9f9b') ISNULL), (+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0))))) CROSS JOIN t1 ON LIKE((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE) ORDER BY ((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0))))) CROSS JOIN t1 ON LIKE((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE) WHERE ((((((t1.c0)>>(0.6534931682040322)), (NOT (vt0.c0)), vt1.c0))!=((((x'9f9b') ISNULL), (+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)>>(0.6534931682040322)), (NOT (vt0.c0)), vt1.c0))<>((((x'9f9b') ISNULL), (+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0))))) CROSS JOIN t1 ON LIKE((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE) ORDER BY ((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)>=(vt1.c0))))) CROSS JOIN t1 ON LIKE((vt0.c0 IN ()), vt0.c0 COLLATE NOCASE) WHERE ((((((t1.c0)>>(0.6534931682040322)), (NOT (vt0.c0)), vt1.c0))!=((((x'9f9b') ISNULL), (+ (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c0)))))) ORDER BY ((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON CASE WHEN (t1.c0 IN (vt0.c0)) THEN t1.c0 COLLATE BINARY WHEN ((1427188231)GLOB(vt0.c1)) THEN 0.3634251248766617 WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) THEN (('Ze]Q䯃v?D')<>(t1.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE ((- ((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE WHEN (t1.c0 IN (vt0.c0)) THEN t1.c0 COLLATE BINARY WHEN ((1427188231)GLOB(vt0.c1)) THEN 0.3634251248766617 WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) THEN (('Ze]Q䯃v?D')<>(t1.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON CASE WHEN (t1.c0 IN (vt0.c0)) THEN t1.c0 COLLATE BINARY WHEN ((1427188231)GLOB(vt0.c1)) THEN 0.3634251248766617 WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) THEN (('Ze]Q䯃v?D')<>(t1.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE ((- ((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((- ((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON CASE WHEN (t1.c0 IN (vt0.c0)) THEN t1.c0 COLLATE BINARY WHEN ((1427188231)GLOB(vt0.c1)) THEN 0.3634251248766617 WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) THEN (('Ze]Q䯃v?D')<>(t1.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON CASE WHEN (t1.c0 IN (vt0.c0)) THEN t1.c0 COLLATE BINARY WHEN ((1427188231)GLOB(vt0.c1)) THEN 0.3634251248766617 WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) THEN (('Ze]Q䯃v?D')<>(t1.c0)) ELSE CAST(vt0.c0 AS NUMERIC) END WHERE ((- ((((t1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (t1.c0)) THEN (vt0.c1 IN (t1.c0)) ELSE (vt0.c0 IN ()) END WHERE ((~ (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE ((t1.c0)GLOB(t1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (t1.c0)) THEN (vt0.c1 IN (t1.c0)) ELSE (vt0.c0 IN ()) END ORDER BY CASE ((t1.c0)GLOB(t1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)) END  NULLS LAST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (t1.c0)) THEN (vt0.c1 IN (t1.c0)) ELSE (vt0.c0 IN ()) END WHERE ((~ (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE ((t1.c0)GLOB(t1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (t1.c0)) THEN (vt0.c1 IN (t1.c0)) ELSE (vt0.c0 IN ()) END ORDER BY CASE ((t1.c0)GLOB(t1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)) END  NULLS LAST);
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CASE CAST(vt0.c0 AS REAL)  WHEN (NOT (t1.c0)) THEN (vt0.c1 IN (t1.c0)) ELSE (vt0.c0 IN ()) END WHERE ((~ (((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE ((t1.c0)GLOB(t1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (~ (vt0.c1)) ELSE ((((vt0.c0)OR(t1.c0)))OR(vt0.c1)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE WHEN ((((t1.c0)AND(vt1.c0)))AND(t1.c0)) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY ((((x'')AND((((vt1.c0, vt1.c0, t1.c0))>((vt1.c0, vt1.c0, '660842085'))))))OR((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)AND(vt1.c0)))AND(t1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((x'')AND((((vt1.c0, vt1.c0, t1.c0))>((vt1.c0, vt1.c0, '660842085'))))))OR((t1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE WHEN ((((t1.c0)AND(vt1.c0)))AND(t1.c0)) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY ((((x'')AND((((vt1.c0, vt1.c0, t1.c0))>((vt1.c0, vt1.c0, '660842085'))))))OR((t1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c0)AND(vt1.c0)))AND(t1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((x'')AND((((vt1.c0, vt1.c0, t1.c0))>((vt1.c0, vt1.c0, '660842085'))))))OR((t1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CASE WHEN ((((t1.c0)AND(vt1.c0)))AND(t1.c0)) THEN CAST(vt1.c0 AS TEXT) END) ORDER BY ((((x'')AND((((vt1.c0, vt1.c0, t1.c0))>((vt1.c0, vt1.c0, '660842085'))))))OR((t1.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (''))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (''))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (''))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (''))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((vt0.c0 IN (''))) NOT BETWEEN (t1.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOTNULL) LEFT OUTER JOIN vt1 ON json_quote(NULLIF(x'', vt0.c0)) WHERE ((((CAST(vt0.c0 AS INTEGER)))>(((NOT (vt0.c1)))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))>(((NOT (vt0.c1)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOTNULL) LEFT OUTER JOIN vt1 ON json_quote(NULLIF(x'', vt0.c0)) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM t1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOTNULL) LEFT OUTER JOIN vt1 ON json_quote(NULLIF(x'', vt0.c0)) WHERE ((((CAST(vt0.c0 AS INTEGER)))>(((NOT (vt0.c1)))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS INTEGER)))>(((NOT (vt0.c1)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE) NOTNULL) LEFT OUTER JOIN vt1 ON json_quote(NULLIF(x'', vt0.c0)) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON CASE NULL  WHEN ((-1456722622)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE CAST(vt0.c1 AS REAL) END WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON CASE NULL  WHEN ((-1456722622)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE CAST(vt0.c1 AS REAL) END);
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON CASE NULL  WHEN ((-1456722622)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE CAST(vt0.c1 AS REAL) END WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON CASE NULL  WHEN ((-1456722622)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE CAST(vt0.c1 AS REAL) END);
SELECT * FROM t1, vt1 FULL OUTER JOIN vt0 ON CASE NULL  WHEN ((-1456722622)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (t1.c0) AND (t1.c0)) ELSE CAST(vt0.c1 AS REAL) END WHERE ((+ (vt1.c0)) COLLATE BINARY);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS TEXT));
SELECT ALL * FROM vt0, vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((NOT (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM t1 WHERE (('255665377' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('255665377' IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (('255665377' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('255665377' IN ())) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (('255665377' IN ()));
SELECT * FROM vt0, vt1, t1 WHERE ((- ((((vt1.c0)) BETWEEN ((136950741)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0)) BETWEEN ((136950741)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((- ((((vt1.c0)) BETWEEN ((136950741)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0)) BETWEEN ((136950741)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((- ((((vt1.c0)) BETWEEN ((136950741)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1456722622') ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1456722622') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1456722622') ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1456722622') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-1456722622') ORDER BY ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))OR(CAST(vt0.c1 AS REAL))))OR(vt0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)>(vt1.c0)) IN ()) WHERE ((+ (((vt0.c0)>=(0.3754188461515314))))) ORDER BY ((((((((NULL)OR(((vt0.c1)&(vt0.c0)))))AND((NOT (vt1.c0)))))AND(((vt0.c1) BETWEEN (t1.c0) AND (x'')))))AND((~ (vt1.c0)))) ASC  NULLS FIRST, ((CAST(t1.c0 AS BLOB))||(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>=(0.3754188461515314))))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)>(vt1.c0)) IN ()) ORDER BY ((((((((NULL)OR(((vt0.c1)&(vt0.c0)))))AND((NOT (vt1.c0)))))AND(((vt0.c1) BETWEEN (t1.c0) AND (x'')))))AND((~ (vt1.c0)))) ASC  NULLS FIRST, ((CAST(t1.c0 AS BLOB))||(CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)>(vt1.c0)) IN ()) WHERE ((+ (((vt0.c0)>=(0.3754188461515314))))) ORDER BY ((((((((NULL)OR(((vt0.c1)&(vt0.c0)))))AND((NOT (vt1.c0)))))AND(((vt0.c1) BETWEEN (t1.c0) AND (x'')))))AND((~ (vt1.c0)))) ASC  NULLS FIRST, ((CAST(t1.c0 AS BLOB))||(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>=(0.3754188461515314))))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)>(vt1.c0)) IN ()) ORDER BY ((((((((NULL)OR(((vt0.c1)&(vt0.c0)))))AND((NOT (vt1.c0)))))AND(((vt0.c1) BETWEEN (t1.c0) AND (x'')))))AND((~ (vt1.c0)))) ASC  NULLS FIRST, ((CAST(t1.c0 AS BLOB))||(CAST(vt0.c1 AS NUMERIC))));
SELECT ALL * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON (((t1.c0)>(vt1.c0)) IN ()) WHERE ((+ (((vt0.c0)>=(0.3754188461515314))))) ORDER BY ((((((((NULL)OR(((vt0.c1)&(vt0.c0)))))AND((NOT (vt1.c0)))))AND(((vt0.c1) BETWEEN (t1.c0) AND (x'')))))AND((~ (vt1.c0)))) ASC  NULLS FIRST, ((CAST(t1.c0 AS BLOB))||(CAST(vt0.c1 AS NUMERIC)));
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS BLOB)) ORDER BY (- (NULLIF(x'', vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (NULLIF(x'', vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS BLOB)) ORDER BY (- (NULLIF(x'', vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- (NULLIF(x'', vt1.c0))) DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt1.c0)IS(vt0.c0)) AS BLOB)) ORDER BY (- (NULLIF(x'', vt1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((((vt1.c0)OR(t1.c0)))OR(vt0.c0))))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c0)OR(t1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (~ (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((((vt1.c0)OR(t1.c0)))OR(vt0.c0))))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((vt1.c0)OR(t1.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (~ (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((((vt1.c0)OR(t1.c0)))OR(vt0.c0))))) ORDER BY (~ (CAST(vt1.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1))<((vt0.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (0.4523215847870091))) ORDER BY ((((vt0.c1)>(t1.c0)))+(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (0.4523215847870091))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)>(t1.c0)))+(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1))<((vt0.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (0.4523215847870091))) ORDER BY ((((vt0.c1)>(t1.c0)))+(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((vt0.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (0.4523215847870091))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((vt0.c1)>(t1.c0)))+(((vt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((((vt0.c1))<((vt0.c1)))) BETWEEN (((t1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) AND (0.4523215847870091))) ORDER BY ((((vt0.c1)>(t1.c0)))+(((vt0.c0) ISNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (+ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (+ (NULL)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (+ (NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (+ (NULL)) END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))  WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (+ (NULL)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (0.950909161950696))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE 0xffffffff817cc485  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.40036940582807035 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (0.950909161950696))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE 0xffffffff817cc485  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.40036940582807035 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (0.950909161950696))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE 0xffffffff817cc485  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.40036940582807035 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (0.950909161950696))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE 0xffffffff817cc485  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.40036940582807035 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) BETWEEN (vt0.c0 COLLATE BINARY) AND (0.950909161950696))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(CASE 0xffffffff817cc485  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE 0.40036940582807035 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (json(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (json(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 END, CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END))<((CASE WHEN t1.c0 THEN vt0.c0 END, (((vt0.c0))=((t1.c0))), ((vt0.c1)>=('1077192420'))))) WHERE ((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(CAST(vt0.c0 AS INTEGER)))) ORDER BY (- (((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c0))))!=((((t1.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 END, CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END))<((CASE WHEN t1.c0 THEN vt0.c0 END, (((vt0.c0))==((t1.c0))), ((vt0.c1)>=('1077192420'))))) ORDER BY (- (((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c0))))<>((((t1.c0) NOT NULL)))) DESC);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 END, CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END))<((CASE WHEN t1.c0 THEN vt0.c0 END, (((vt0.c0))=((t1.c0))), ((vt0.c1)>=('1077192420'))))) WHERE ((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(CAST(vt0.c0 AS INTEGER)))) ORDER BY (- (((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c0))))!=((((t1.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 END, CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END))<((CASE WHEN t1.c0 THEN vt0.c0 END, (((vt0.c0))==((t1.c0))), ((vt0.c1)>=('1077192420'))))) ORDER BY (- (((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c0))))<>((((t1.c0) NOT NULL)))) DESC);
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c1 COLLATE RTRIM, CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 END, CASE vt0.c0  WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END))<((CASE WHEN t1.c0 THEN vt0.c0 END, (((vt0.c0))=((t1.c0))), ((vt0.c1)>=('1077192420'))))) WHERE ((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))>>(CAST(vt0.c0 AS INTEGER)))) ORDER BY (- (((vt0.c0)||(vt0.c1)))) ASC  NULLS FIRST, (((((vt0.c0) BETWEEN (vt0.c1) AND (t1.c0))))!=((((t1.c0) NOT NULL)))) DESC;
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c1 IN (vt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))))) ORDER BY IFNULL(NULL, ((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY IFNULL(NULL, ((t1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c1 IN (vt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))))) ORDER BY IFNULL(NULL, ((t1.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY IFNULL(NULL, ((t1.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c1 IN (vt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))))) ORDER BY IFNULL(NULL, ((t1.c0) IS FALSE));
SELECT * FROM vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (NULL COLLATE NOCASE);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((('Ob>')IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Ob>')IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((('Ob>')IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0)<(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('Ob>')IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0)<(vt1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE ((((('Ob>')IS(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (((vt0.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (COALESCE(t1.c0, vt0.c0, t1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY -9.52991654E8;
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(t1.c0, vt0.c0, t1.c0, vt1.c0, vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY -9.52991654E8);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (COALESCE(t1.c0, vt0.c0, t1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY -9.52991654E8;
SELECT SUM(count) FROM (SELECT ALL (((+ (COALESCE(t1.c0, vt0.c0, t1.c0, vt1.c0, vt1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY -9.52991654E8);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (COALESCE(t1.c0, vt0.c0, t1.c0, vt1.c0, vt1.c0, vt0.c0)))) ORDER BY -9.52991654E8;
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0)IS(vt1.c0)))>((NOT (vt0.c1))))) ORDER BY 0.3634251248766617;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))>((NOT (vt0.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 0.3634251248766617);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0)IS(vt1.c0)))>((NOT (vt0.c1))))) ORDER BY 0.3634251248766617;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS(vt1.c0)))>((NOT (vt0.c1))))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 0.3634251248766617);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt1.c0)IS(vt1.c0)))>((NOT (vt0.c1))))) ORDER BY 0.3634251248766617;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE (- (vt0.c1))  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT * FROM vt0 NATURAL JOIN vt1 WHERE ((+ (CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN vt0 ON -1636480061 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1)<(vt0.c1)))))AND(CASE t1.c0  WHEN NULL THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1)<(vt0.c1)))))AND(CASE t1.c0  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN vt0 ON -1636480061);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN vt0 ON -1636480061 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1)<(vt0.c1)))))AND(CASE t1.c0  WHEN NULL THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1)<(vt0.c1)))))AND(CASE t1.c0  WHEN NULL THEN vt0.c1 END))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))) RIGHT OUTER JOIN vt0 ON -1636480061);
SELECT * FROM vt1 WHERE (load_extension(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt1.c0)  WHEN ((vt1.c0)<<('-675678857')) THEN ((1110187486) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((load_extension(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt1.c0)  WHEN ((vt1.c0)<<('-675678857')) THEN ((1110187486) ISNULL) END);
SELECT * FROM vt1 WHERE (load_extension(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt1.c0)  WHEN ((vt1.c0)<<('-675678857')) THEN ((1110187486) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((load_extension(vt1.c0 COLLATE RTRIM, CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY CASE SQLITE_COMPILEOPTION_USED(vt1.c0)  WHEN ((vt1.c0)<<('-675678857')) THEN ((1110187486) ISNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((((vt0.c0)OR(x'')))AND(vt0.c0)))))) ORDER BY NULLIF(DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((((vt0.c0)OR(x'')))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((((vt0.c0)OR(x'')))AND(vt0.c0)))))) ORDER BY NULLIF(DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((((vt0.c0)OR(x'')))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((((vt0.c0)OR(x'')))AND(vt0.c0)))))) ORDER BY NULLIF(DISTINCT vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((~ ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1);
SELECT * FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))<(DATE(vt0.c0, vt0.c0, vt0.c1)))) ORDER BY ((((vt0.c1)%(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND ((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))<(DATE(vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)%(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))<(DATE(vt0.c0, vt0.c0, vt0.c1)))) ORDER BY ((((vt0.c1)%(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND ((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))<(DATE(vt0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)%(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND ((~ (vt0.c1)))));
SELECT * FROM vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))<(DATE(vt0.c0, vt0.c0, vt0.c1)))) ORDER BY ((((vt0.c1)%(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c1))) AND ((~ (vt0.c1))));
SELECT ALL * FROM vt1 NOT INDEXED, t1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((x'dc54') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((x'dc54') IS TRUE) END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, t1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((x'dc54') IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((x'dc54') IS TRUE) END) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1 NOT INDEXED, t1, vt0 WHERE (CASE WHEN ABS(vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((x'dc54') IS TRUE) END);
SELECT ALL * FROM t1, vt0, vt1 WHERE (TRIM(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (TRIM(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (TRIM(vt0.c1) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0 COLLATE BINARY)&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0 COLLATE BINARY)&(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY)&(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((t1.c0 COLLATE BINARY)&(((vt0.c1) NOT NULL))));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON (- (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY ((NULL)OR((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON (- (CASE WHEN t1.c0 THEN vt0.c1 END)) ORDER BY ((NULL)OR((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON (- (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY ((NULL)OR((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON (- (CASE WHEN t1.c0 THEN vt0.c1 END)) ORDER BY ((NULL)OR((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON (- (CASE WHEN t1.c0 THEN vt0.c1 END)) WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY ((NULL)OR((vt1.c0 IN ()))) ASC;
SELECT * FROM t1 WHERE (((((CHAR(t1.c0))OR(((t1.c0) IS FALSE))))OR(((t1.c0) BETWEEN (t1.c0) AND ('-1466667659'))))) ORDER BY '6f泓\' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CHAR(t1.c0))OR(((t1.c0) IS FALSE))))OR(((t1.c0) BETWEEN (t1.c0) AND ('-1466667659'))))) IS TRUE)  as count FROM t1 ORDER BY '6f泓\' COLLATE BINARY);
SELECT * FROM t1 WHERE (((((CHAR(t1.c0))OR(((t1.c0) IS FALSE))))OR(((t1.c0) BETWEEN (t1.c0) AND ('-1466667659'))))) ORDER BY '6f泓\' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((CHAR(t1.c0))OR(((t1.c0) IS FALSE))))OR(((t1.c0) BETWEEN (t1.c0) AND ('-1466667659'))))) IS TRUE)  as count FROM t1 ORDER BY '6f泓\' COLLATE BINARY);
SELECT * FROM t1 WHERE (((((CHAR(t1.c0))OR(((t1.c0) IS FALSE))))OR(((t1.c0) BETWEEN (t1.c0) AND ('-1466667659'))))) ORDER BY '6f泓\' COLLATE BINARY;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON LOWER(DISTINCT t1.c0) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((((vt1.c0)<<(t1.c0))))) DESC, (NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON LOWER(DISTINCT t1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((((vt1.c0)<<(t1.c0))))) DESC, (NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, ((+ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON LOWER(DISTINCT t1.c0) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((((vt1.c0)<<(t1.c0))))) DESC, (NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, ((+ (vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON LOWER(DISTINCT t1.c0) ORDER BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((((vt1.c0)<<(t1.c0))))) DESC, (NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, ((+ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON LOWER(DISTINCT t1.c0) WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(t1.c0)))OR(t1.c0)))OR(vt1.c0)) COLLATE NOCASE) ORDER BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((((vt1.c0)<<(t1.c0))))) DESC, (NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST, ((+ (vt1.c0)) IN ());
SELECT ALL * FROM vt1 WHERE (0.9521006496503487) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.9521006496503487) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1 WHERE (0.9521006496503487) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((0.9521006496503487) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1 WHERE (0.9521006496503487) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt1 CROSS JOIN t1 ON HEX(((t1.c0)<(vt1.c0))) WHERE ((((CASE NULL  WHEN t1.c0 THEN t1.c0 END, (- (t1.c0)), (((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, vt1.c0))), (t1.c0 IN (vt1.c0)), vt1.c0))<((vt1.c0, IFNULL(DISTINCT t1.c0, t1.c0), ((((t1.c0)AND(t1.c0)))AND(vt1.c0)), CASE t1.c0  WHEN '0.3897306669527607' THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((t1.c0)LIKE(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN t1.c0 THEN t1.c0 END, (- (t1.c0)), (((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, vt1.c0))), (t1.c0 IN (vt1.c0)), vt1.c0))<((vt1.c0, IFNULL(DISTINCT t1.c0, t1.c0), ((((t1.c0)AND(t1.c0)))AND(vt1.c0)), CASE t1.c0  WHEN '0.3897306669527607' THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((t1.c0)LIKE(t1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON HEX(((t1.c0)<(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN t1 ON HEX(((t1.c0)<(vt1.c0))) WHERE ((((CASE NULL  WHEN t1.c0 THEN t1.c0 END, (- (t1.c0)), (((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, vt1.c0))), (t1.c0 IN (vt1.c0)), vt1.c0))<((vt1.c0, IFNULL(DISTINCT t1.c0, t1.c0), ((((t1.c0)AND(t1.c0)))AND(vt1.c0)), CASE t1.c0  WHEN '0.3897306669527607' THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((t1.c0)LIKE(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE NULL  WHEN t1.c0 THEN t1.c0 END, (- (t1.c0)), (((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, vt1.c0))), (t1.c0 IN (vt1.c0)), vt1.c0))<((vt1.c0, IFNULL(DISTINCT t1.c0, t1.c0), ((((t1.c0)AND(t1.c0)))AND(vt1.c0)), CASE t1.c0  WHEN '0.3897306669527607' THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((t1.c0)LIKE(t1.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON HEX(((t1.c0)<(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN t1 ON HEX(((t1.c0)<(vt1.c0))) WHERE ((((CASE NULL  WHEN t1.c0 THEN t1.c0 END, (- (t1.c0)), (((t1.c0, t1.c0, t1.c0))=((t1.c0, t1.c0, vt1.c0))), (t1.c0 IN (vt1.c0)), vt1.c0))<((vt1.c0, IFNULL(DISTINCT t1.c0, t1.c0), ((((t1.c0)AND(t1.c0)))AND(vt1.c0)), CASE t1.c0  WHEN '0.3897306669527607' THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((t1.c0)LIKE(t1.c0))))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0)))=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -1256961917 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)-(vt1.c0)))=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -1256961917 END) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0)))=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -1256961917 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)-(vt1.c0)))=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -1256961917 END) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((NULL)-(vt1.c0)))=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -1256961917 END) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS TEXT)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS TEXT)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c1 AS TEXT)  WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) END) ORDER BY CAST(vt0.c1 COLLATE BINARY AS REAL) DESC;
SELECT * FROM t1, vt0 WHERE (((((- (vt0.c1))))>=(((~ (vt0.c1)))))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)  NULLS LAST, CASE CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 END  WHEN ((vt0.c1) NOT BETWEEN ('0.6930477062650957') AND (vt0.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c0 ELSE 'JY' END WHEN vt0.c1 THEN NULLIF(DISTINCT t1.c0, vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c1)) END, (((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))) BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (CASE vt0.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)  NULLS LAST, CASE CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 END  WHEN ((vt0.c1) NOT BETWEEN ('0.6930477062650957') AND (vt0.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c0 ELSE 'JY' END WHEN vt0.c1 THEN NULLIF(DISTINCT t1.c0, vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c1)) END, (((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))) BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (CASE vt0.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((- (vt0.c1))))>=(((~ (vt0.c1)))))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)  NULLS LAST, CASE CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 END  WHEN ((vt0.c1) NOT BETWEEN ('0.6930477062650957') AND (vt0.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c0 ELSE 'JY' END WHEN vt0.c1 THEN NULLIF(DISTINCT t1.c0, vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c1)) END, (((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))) BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (CASE vt0.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c1))))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)  NULLS LAST, CASE CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 END  WHEN ((vt0.c1) NOT BETWEEN ('0.6930477062650957') AND (vt0.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c0 ELSE 'JY' END WHEN vt0.c1 THEN NULLIF(DISTINCT t1.c0, vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c1)) END, (((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))) BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (CASE vt0.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)) DESC  NULLS FIRST);
SELECT * FROM t1, vt0 WHERE (((((- (vt0.c1))))>=(((~ (vt0.c1)))))) ORDER BY CAST(((vt0.c1) BETWEEN (vt0.c0) AND (t1.c0)) AS NUMERIC)  NULLS LAST, CASE CASE vt0.c1  WHEN vt0.c1 THEN t1.c0 END  WHEN ((vt0.c1) NOT BETWEEN ('0.6930477062650957') AND (vt0.c1)) THEN CASE t1.c0  WHEN vt0.c0 THEN t1.c0 ELSE 'JY' END WHEN vt0.c1 THEN NULLIF(DISTINCT t1.c0, vt0.c0) WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0)IS NOT(vt0.c1)) END, (((((t1.c0, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c0, t1.c0)))) BETWEEN (((t1.c0)LIKE(vt0.c0))) AND (CASE vt0.c1  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE t1.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((~ (t1.c0))) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN 0.3582296198058945 THEN vt0.c1 WHEN vt0.c1 THEN 0.3916841900504956 ELSE vt0.c1 END)) WHERE (((((LIKELY(DISTINCT vt0.c0))OR(CAST(vt0.c1 AS INTEGER))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT vt0.c0))OR(CAST(vt0.c1 AS INTEGER))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((~ (t1.c0))) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN 0.3582296198058945 THEN vt0.c1 WHEN vt0.c1 THEN 0.3916841900504956 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((~ (t1.c0))) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN 0.3582296198058945 THEN vt0.c1 WHEN vt0.c1 THEN 0.3916841900504956 ELSE vt0.c1 END)) WHERE (((((LIKELY(DISTINCT vt0.c0))OR(CAST(vt0.c1 AS INTEGER))))AND((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((LIKELY(DISTINCT vt0.c0))OR(CAST(vt0.c1 AS INTEGER))))AND((t1.c0 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((~ (t1.c0))) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN 0.3582296198058945 THEN vt0.c1 WHEN vt0.c1 THEN 0.3916841900504956 ELSE vt0.c1 END)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON (((~ (t1.c0))) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (CASE vt0.c0  WHEN vt0.c0 THEN t1.c0 WHEN 0.3582296198058945 THEN vt0.c1 WHEN vt0.c1 THEN 0.3916841900504956 ELSE vt0.c1 END)) WHERE (((((LIKELY(DISTINCT vt0.c0))OR(CAST(vt0.c1 AS INTEGER))))AND((t1.c0 IN ()))));
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c1 AS TEXT));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END COLLATE NOCASE) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR(((t1.c0)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR(((t1.c0)-(vt1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END COLLATE NOCASE) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR(((t1.c0)-(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE t1.c0  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR(((t1.c0)-(vt1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (CASE t1.c0  WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END COLLATE NOCASE) ORDER BY ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c0 END)AND(((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))))OR(((t1.c0)-(vt1.c0))));
SELECT ALL * FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0, vt1.c0))  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN (vt1.c0, vt1.c0))  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0, vt1.c0))  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c0 IN (vt1.c0, vt1.c0))  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE (vt1.c0 IN (vt1.c0, vt1.c0))  WHEN (~ (vt1.c0)) THEN vt1.c0 COLLATE RTRIM END) ORDER BY ((((vt1.c0)<=(vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c0 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c0 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((((t1.c0 COLLATE BINARY))>=((vt0.c1 COLLATE NOCASE)))) ORDER BY x'' DESC;
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((t1.c0)>>(vt1.c0))) AND (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((vt0.c1)==(t1.c0)))OR(((vt0.c0) NOT NULL))))AND(CAST(vt1.c0 AS TEXT))) WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((t1.c0)>>(vt1.c0))) AND (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((vt0.c1)==(t1.c0)))OR(((vt0.c0) NOT NULL))))AND(CAST(vt1.c0 AS TEXT))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((t1.c0)>>(vt1.c0))) AND (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((vt0.c1)==(t1.c0)))OR(((vt0.c0) NOT NULL))))AND(CAST(vt1.c0 AS TEXT))) WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((t1.c0)>>(vt1.c0))) AND (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))OR(vt0.c0)))) LEFT OUTER JOIN vt1 ON ((((((vt0.c1)==(t1.c0)))OR(((vt0.c0) NOT NULL))))AND(CAST(vt1.c0 AS TEXT))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY 0.44491823309802914;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0.44491823309802914);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY 0.44491823309802914;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY 0.44491823309802914);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) ORDER BY 0.44491823309802914;
SELECT * FROM vt0 WHERE ((((vt0.c1)>=(vt0.c0)) IN ((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>=(vt0.c0)) IN ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)>=(vt0.c0)) IN ((vt0.c1 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)>=(vt0.c0)) IN ((vt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1)>=(vt0.c0)) IN ((vt0.c1 IN (vt0.c1)))));
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT ALL * FROM vt0 WHERE ('-1119711039') ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (('-1119711039') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE ('-1119711039') ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (('-1119711039') IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 WHERE ('-1119711039') ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), 'Qp52'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), 'Qp52'  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), 'Qp52'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), 'Qp52'  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB), 'Qp52'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa6006d16) ORDER BY (((NOT (vt0.c1)))<<(((vt0.c0)&(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa6006d16) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c1)))<<(((vt0.c0)&(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa6006d16) ORDER BY (((NOT (vt0.c1)))<<(((vt0.c0)&(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffa6006d16) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c1)))<<(((vt0.c0)&(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa6006d16) ORDER BY (((NOT (vt0.c1)))<<(((vt0.c0)&(vt0.c1)))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)||(vt0.c0)))|(((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<=(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0)))|(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<=(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)||(vt0.c0)))|(((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<=(CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0)))|(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<=(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL * FROM vt1, vt0 WHERE (((((vt0.c1)||(vt0.c0)))|(((vt0.c1) IS TRUE)))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c0))))<=(CAST(vt1.c0 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((NULL)AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((t1.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((NULL)AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((t1.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((NULL)AND(((t1.c0) IS FALSE))))OR(CAST(t1.c0 AS NUMERIC)))) ORDER BY ((t1.c0 COLLATE RTRIM) NOT NULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) IS TRUE)  WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN '&d' THEN t1.c0 WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (+ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) IS TRUE)  WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN '&d' THEN t1.c0 WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (+ (t1.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) IS TRUE)  WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN '&d' THEN t1.c0 WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (+ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) IS TRUE)  WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN '&d' THEN t1.c0 WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (+ (t1.c0)) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) IS TRUE)  WHEN CASE WHEN t1.c0 THEN vt0.c1 WHEN '&d' THEN t1.c0 WHEN t1.c0 THEN vt0.c1 ELSE vt0.c1 END THEN (+ (t1.c0)) END);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (vt0.c0) AND (0.36923034241559105))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 END)-(8.68354803E8)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (vt0.c0) AND (0.36923034241559105))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 END)-(8.68354803E8)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (vt0.c0) AND (0.36923034241559105))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 END)-(8.68354803E8)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (vt0.c0) AND (0.36923034241559105))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 END)-(8.68354803E8)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))) NOT BETWEEN (vt0.c0) AND (0.36923034241559105))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 END)-(8.68354803E8)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))OR((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0)))))) ORDER BY CASE WHEN vt1.c0 THEN t1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))OR((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN t1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))OR((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0)))))) ORDER BY CASE WHEN vt1.c0 THEN t1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>=((vt0.c0))))OR((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN t1.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((((vt0.c1))>=((vt0.c0))))OR((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c0)))))) ORDER BY CASE WHEN vt1.c0 THEN t1.c0 COLLATE RTRIM END;
SELECT ALL * FROM t1 WHERE (((t1.c0) BETWEEN ((t1.c0 IN ())) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0Xffffffffc3d2d3ee END)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN ((t1.c0 IN ())) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0xffffffffc3d2d3ee END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) BETWEEN ((t1.c0 IN ())) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0Xffffffffc3d2d3ee END)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN ((t1.c0 IN ())) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0xffffffffc3d2d3ee END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) BETWEEN ((t1.c0 IN ())) AND (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE 0Xffffffffc3d2d3ee END)));
SELECT ALL * FROM t1 WHERE (CASE WHEN 0.0643879316586039 THEN NULL WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN ((t1.c0)<=(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((((t1.c0)AND(t1.c0)))AND(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.0643879316586039 THEN NULL WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN ((t1.c0)<=(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((((t1.c0)AND(t1.c0)))AND(NULL)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN 0.0643879316586039 THEN NULL WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN ((t1.c0)<=(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((((t1.c0)AND(t1.c0)))AND(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.0643879316586039 THEN NULL WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN ((t1.c0)<=(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((((t1.c0)AND(t1.c0)))AND(NULL)) END) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CASE WHEN 0.0643879316586039 THEN NULL WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 END THEN ((t1.c0)<=(t1.c0)) WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END THEN ((((t1.c0)AND(t1.c0)))AND(NULL)) END);
SELECT * FROM t1 WHERE ((((((('-1925221701') BETWEEN (t1.c0) AND (NULL)))AND(((t1.c0)%(t1.c0)))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY x'dcb4649c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1925221701') BETWEEN (t1.c0) AND (NULL)))AND(((t1.c0)%(t1.c0)))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY x'dcb4649c'  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((('-1925221701') BETWEEN (t1.c0) AND (NULL)))AND(((t1.c0)%(t1.c0)))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY x'dcb4649c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-1925221701') BETWEEN (t1.c0) AND (NULL)))AND(((t1.c0)%(t1.c0)))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM t1 ORDER BY x'dcb4649c'  NULLS FIRST);
SELECT * FROM t1 WHERE ((((((('-1925221701') BETWEEN (t1.c0) AND (NULL)))AND(((t1.c0)%(t1.c0)))))OR(CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) ORDER BY x'dcb4649c'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))&(1.15429357E9))) ORDER BY ((((t1.c0) NOT NULL)) NOT BETWEEN (NULL) AND ((((t1.c0))>((t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))&(1.15429357E9))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT NULL)) NOT BETWEEN (NULL) AND ((((t1.c0))>((t1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))&(1.15429357E9))) ORDER BY ((((t1.c0) NOT NULL)) NOT BETWEEN (NULL) AND ((((t1.c0))>((t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))&(1.15429357E9))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOT NULL)) NOT BETWEEN (NULL) AND ((((t1.c0))>((t1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS NUMERIC))&(1.15429357E9))) ORDER BY ((((t1.c0) NOT NULL)) NOT BETWEEN (NULL) AND ((((t1.c0))>((t1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE));
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c0 COLLATE BINARY))>=(((~ (vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND ('-1934104665')))*(0.8913341119265337)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND ('-1934104665')))*(0.8913341119265337)) DESC);
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c0 COLLATE BINARY))>=(((~ (vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND ('-1934104665')))*(0.8913341119265337)) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE BINARY))>=(((~ (vt0.c1)))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND ('-1934104665')))*(0.8913341119265337)) DESC);
SELECT * FROM vt0, t1, vt1 WHERE ((((vt0.c0 COLLATE BINARY))>=(((~ (vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (t1.c0) AND ('-1934104665')))*(0.8913341119265337)) DESC;
SELECT ALL * FROM vt1 WHERE ('0.24665309641301003');
SELECT SUM(count) FROM (SELECT ALL (('0.24665309641301003') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('0.24665309641301003');
SELECT SUM(count) FROM (SELECT ALL (('0.24665309641301003') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('0.24665309641301003');
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))IS NOT(((((vt0.c1)AND(t1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))IS NOT(((((vt0.c1)AND(t1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))IS NOT(((((vt0.c1)AND(t1.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))IS NOT(((((vt0.c1)AND(t1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE ((((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt0.c1))))IS NOT(((((vt0.c1)AND(t1.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN ((((t1.c0))>((vt0.c1)))) AND (vt0.c0)) WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt0.c0) IS FALSE))) ASC  NULLS LAST, ((((t1.c0) NOTNULL))&((((vt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN ((((t1.c0))>((vt0.c1)))) AND (vt0.c0)) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt0.c0) IS FALSE))) ASC  NULLS LAST, ((((t1.c0) NOTNULL))&((((vt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN ((((t1.c0))>((vt0.c1)))) AND (vt0.c0)) WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt0.c0) IS FALSE))) ASC  NULLS LAST, ((((t1.c0) NOTNULL))&((((vt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN ((((t1.c0))>((vt0.c1)))) AND (vt0.c0)) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt0.c0) IS FALSE))) ASC  NULLS LAST, ((((t1.c0) NOTNULL))&((((vt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t1 ON ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c0))) NOT BETWEEN ((((t1.c0))>((vt0.c1)))) AND (vt0.c0)) WHERE (CAST(vt0.c1 AS TEXT) COLLATE BINARY) ORDER BY ((((vt0.c0) NOT NULL))>=(((vt0.c0) IS FALSE))) ASC  NULLS LAST, ((((t1.c0) NOTNULL))&((((vt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0)))));
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((NOT ((vt0.c0 IN ()))));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON ((vt1.c0)/(t1.c0)) COLLATE NOCASE WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((vt1.c0)/(t1.c0)) COLLATE NOCASE);
SELECT * FROM vt1 FULL OUTER JOIN t1 ON ((vt1.c0)/(t1.c0)) COLLATE NOCASE WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((vt1.c0)/(t1.c0)) COLLATE NOCASE);
SELECT * FROM vt1 FULL OUTER JOIN t1 ON ((vt1.c0)/(t1.c0)) COLLATE NOCASE WHERE (t1.c0);
SELECT COUNT(*) FROM vt1, t1 WHERE (UPPER(DISTINCT t1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t1.c0)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (UPPER(DISTINCT t1.c0));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT t1.c0)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (UPPER(DISTINCT t1.c0));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c0)>=(vt0.c0)))));
SELECT * FROM t1 WHERE (CAST(((t1.c0)<<(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<<(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)<<(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<<(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)<<(t1.c0)) AS REAL));
SELECT * FROM vt1, t1, vt0 WHERE ((- (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ((- (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ((- (((t1.c0) NOTNULL))));
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t1, vt0 WHERE ((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((+ (CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt0.c1 END)));
SELECT * FROM vt0, vt1, t1 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN vt0.c1 ELSE CAST(t1.c0 AS INTEGER) END) ORDER BY (((vt1.c0, t1.c0, t1.c0, vt1.c0, vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))OR('૳eeㅉG澫')), CAST(vt1.c0 AS NUMERIC), t1.c0 COLLATE BINARY, NULL, (- (t1.c0)), ((((((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) AND (((- (vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ()), (NOT (vt0.c1)), CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 0Xd4e39cf WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT NULL), ((((t1.c0)AND('o![H')))OR(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN vt0.c1 ELSE CAST(t1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt1.c0, t1.c0, t1.c0, vt1.c0, vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))OR('૳eeㅉG澫')), CAST(vt1.c0 AS NUMERIC), t1.c0 COLLATE BINARY, NULL, (- (t1.c0)), ((((((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) AND (((- (vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ()), (NOT (vt0.c1)), CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 0Xd4e39cf WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT NULL), ((((t1.c0)AND('o![H')))OR(vt0.c1))))) DESC);
SELECT * FROM vt0, vt1, t1 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN vt0.c1 ELSE CAST(t1.c0 AS INTEGER) END) ORDER BY (((vt1.c0, t1.c0, t1.c0, vt1.c0, vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))OR('૳eeㅉG澫')), CAST(vt1.c0 AS NUMERIC), t1.c0 COLLATE BINARY, NULL, (- (t1.c0)), ((((((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) AND (((- (vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ()), (NOT (vt0.c1)), CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 0Xd4e39cf WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT NULL), ((((t1.c0)AND('o![H')))OR(vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN vt0.c1 ELSE CAST(t1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt1.c0, t1.c0, t1.c0, vt1.c0, vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))OR('૳eeㅉG澫')), CAST(vt1.c0 AS NUMERIC), t1.c0 COLLATE BINARY, NULL, (- (t1.c0)), ((((((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) AND (((- (vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ()), (NOT (vt0.c1)), CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 0Xd4e39cf WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT NULL), ((((t1.c0)AND('o![H')))OR(vt0.c1))))) DESC);
SELECT * FROM vt0, vt1, t1 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN vt0.c1 ELSE CAST(t1.c0 AS INTEGER) END) ORDER BY (((vt1.c0, t1.c0, t1.c0, vt1.c0, vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((((t1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((((((((((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(NULL)))AND(vt0.c0)))OR('૳eeㅉG澫')), CAST(vt1.c0 AS NUMERIC), t1.c0 COLLATE BINARY, NULL, (- (t1.c0)), ((((((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) AND (((- (vt0.c1)), (vt0.c1 IN ()), (vt0.c0 IN ()), (NOT (vt0.c1)), CASE vt0.c0  WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 0Xd4e39cf WHEN vt1.c0 THEN vt0.c0 END, ((vt1.c0) NOT NULL), ((((t1.c0)AND('o![H')))OR(vt0.c1))))) DESC;
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY (NOT (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))));
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))LIKE(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER))LIKE(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))LIKE(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS INTEGER))LIKE(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CAST(t1.c0 AS INTEGER))LIKE(CAST(t1.c0 AS NUMERIC))));
SELECT * FROM t1, vt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))==((((vt0.c1)>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))=((((vt0.c1)>(vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))==((((vt0.c1)>(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS TEXT)))=((((vt0.c1)>(vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE ((((CAST(vt0.c0 AS TEXT)))==((((vt0.c1)>(vt1.c0))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((((((t1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))&((vt1.c0 IN ()))) RIGHT OUTER JOIN t1 ON LIKELY(DISTINCT ((((((((t1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c0))) WHERE (UNLIKELY(CASE WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END)) ORDER BY (~ ((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'6408'))))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((((t1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))&((vt1.c0 IN ()))) RIGHT OUTER JOIN t1 ON LIKELY(DISTINCT ((((((((t1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c0))) ORDER BY (~ ((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'6408'))))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((((((((((t1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))&((vt1.c0 IN ()))) RIGHT OUTER JOIN t1 ON LIKELY(DISTINCT ((((((((t1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c0))) WHERE (UNLIKELY(CASE WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END)) ORDER BY (~ ((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'6408'))))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((((((((t1.c0)OR(vt0.c0)))AND(vt0.c1)))OR(t1.c0)))OR(t1.c0)))&((vt1.c0 IN ()))) RIGHT OUTER JOIN t1 ON LIKELY(DISTINCT ((((((((t1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(t1.c0))) ORDER BY (~ ((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((x'6408'))))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN LIKE(vt1.c0, vt1.c0, 'S') THEN (+ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(vt1.c0, vt1.c0, 'S') THEN (+ (t1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN LIKE(vt1.c0, vt1.c0, 'S') THEN (+ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKE(vt1.c0, vt1.c0, 'S') THEN (+ (t1.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN LIKE(vt1.c0, vt1.c0, 'S') THEN (+ (t1.c0)) END);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c0))<>((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(t1.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (LIKELY(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(t1.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (LIKELY(t1.c0))) DESC);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c0))<>((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(t1.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (LIKELY(t1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))!=((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(t1.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (LIKELY(t1.c0))) DESC);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c0))<>((vt1.c0))) COLLATE RTRIM) ORDER BY ((((((((((vt0.c1)AND(vt0.c1)))AND(t1.c0)))OR(vt0.c0)))OR(t1.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (LIKELY(t1.c0))) DESC;
SELECT * FROM vt1 WHERE (((((((((HEX(vt1.c0))AND(((vt1.c0)<(vt1.c0)))))OR(LTRIM('(<n洚.z/', vt1.c0))))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) BETWEEN ('') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((HEX(vt1.c0))AND(((vt1.c0)<(vt1.c0)))))OR(LTRIM('(<n洚.z/', vt1.c0))))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) BETWEEN ('') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((HEX(vt1.c0))AND(((vt1.c0)<(vt1.c0)))))OR(LTRIM('(<n洚.z/', vt1.c0))))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) BETWEEN ('') AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((HEX(vt1.c0))AND(((vt1.c0)<(vt1.c0)))))OR(LTRIM('(<n洚.z/', vt1.c0))))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) BETWEEN ('') AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((HEX(vt1.c0))AND(((vt1.c0)<(vt1.c0)))))OR(LTRIM('(<n洚.z/', vt1.c0))))OR(((vt1.c0) NOT NULL))))OR(((vt1.c0) BETWEEN ('') AND (vt1.c0)))));
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON '^䫹' WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON '^䫹');
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON '^䫹' WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON '^䫹');
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN vt1 ON '^䫹' WHERE ((((vt0.c0)) NOT BETWEEN ((((vt1.c0) IS FALSE))) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0))))));
SELECT ALL * FROM t1 NOT INDEXED WHERE (CAST(t1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE (CAST(t1.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 NOT INDEXED WHERE (CAST(t1.c0 AS TEXT));
SELECT * FROM t1, vt1 WHERE (-201822845 COLLATE BINARY) ORDER BY CAST(t1.c0 AS NUMERIC) COLLATE BINARY, CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((-201822845 COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c0 AS NUMERIC) COLLATE BINARY, CAST(NULL AS BLOB));
SELECT * FROM t1, vt1 WHERE (-201822845 COLLATE BINARY) ORDER BY CAST(t1.c0 AS NUMERIC) COLLATE BINARY, CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((-201822845 COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 ORDER BY CAST(t1.c0 AS NUMERIC) COLLATE BINARY, CAST(NULL AS BLOB));
SELECT * FROM t1, vt1 WHERE (-201822845 COLLATE BINARY) ORDER BY CAST(t1.c0 AS NUMERIC) COLLATE BINARY, CAST(NULL AS BLOB);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt0.c1 IN ())) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END DESC  NULLS FIRST, ((((((((((vt0.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND('118380295')))>>(((vt1.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE WHEN UNLIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END DESC  NULLS FIRST, ((((((((((vt0.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND('118380295')))>>(((vt1.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt0.c1 IN ())) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END DESC  NULLS FIRST, ((((((((((vt0.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND('118380295')))>>(((vt1.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CASE WHEN UNLIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END DESC  NULLS FIRST, ((((((((((vt0.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND('118380295')))>>(((vt1.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt0.c1 IN ())) ORDER BY CASE WHEN UNLIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c1)) END DESC  NULLS FIRST, ((((((((((vt0.c0)AND(t1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND('118380295')))>>(((vt1.c0)>>(vt0.c0))));
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))OR('324834941')) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))OR('324834941')) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))OR('324834941')) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))OR('324834941')) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE ((~ (vt1.c0))) ORDER BY CAST(((((vt1.c0)OR(vt1.c0)))OR('324834941')) AS INTEGER) DESC;
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (0.12248251925092324) AND (t1.c0)))%((t1.c0 IN ())))) ORDER BY (((t1.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (0.12248251925092324) AND (t1.c0)))%((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (0.12248251925092324) AND (t1.c0)))%((t1.c0 IN ())))) ORDER BY (((t1.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (0.12248251925092324) AND (t1.c0)))%((t1.c0 IN ())))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0) NOT BETWEEN (0.12248251925092324) AND (t1.c0)))%((t1.c0 IN ())))) ORDER BY (((t1.c0) IS TRUE) IN ());
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt0.c1 ASC, ((((0.025067751218628476)AND((- (vt0.c1)))))OR(((('', vt1.c0, ''))<=((vt0.c0, 0.762921986666933, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC, ((((0.025067751218628476)AND((- (vt0.c1)))))OR(((('', vt1.c0, ''))<=((vt0.c0, 0.762921986666933, vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt0.c1 ASC, ((((0.025067751218628476)AND((- (vt0.c1)))))OR(((('', vt1.c0, ''))<=((vt0.c0, 0.762921986666933, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC, ((((0.025067751218628476)AND((- (vt0.c1)))))OR(((('', vt1.c0, ''))<=((vt0.c0, 0.762921986666933, vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY vt0.c1 ASC, ((((0.025067751218628476)AND((- (vt0.c1)))))OR(((('', vt1.c0, ''))<=((vt0.c0, 0.762921986666933, vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)-(t1.c0)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)-(t1.c0)) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0)-(t1.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0)<>(vt1.c0)))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0)<>(vt1.c0)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0)<>(vt1.c0)))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0)<>(vt1.c0)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0)<>(vt1.c0)))))OR((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt1, t1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1)OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1)OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((vt0.c1)OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)&(vt0.c1)) IN ())) ORDER BY ((((0.23673922151892657)>=(vt1.c0)))<=(((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, vt1.c0, x'3f2a';
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)&(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((0.23673922151892657)>=(vt1.c0)))<=(((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, vt1.c0, x'3f2a');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)&(vt0.c1)) IN ())) ORDER BY ((((0.23673922151892657)>=(vt1.c0)))<=(((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, vt1.c0, x'3f2a';
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)&(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((((0.23673922151892657)>=(vt1.c0)))<=(((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, vt1.c0, x'3f2a');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (NOT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) WHERE ((((vt1.c0)&(vt0.c1)) IN ())) ORDER BY ((((0.23673922151892657)>=(vt1.c0)))<=(((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))))  NULLS FIRST, vt1.c0, x'3f2a';
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (t1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, vt1, t1 WHERE (ABS(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1, t1 WHERE (ABS(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1 NOT INDEXED);
SELECT ALL * FROM vt0, vt1, t1 WHERE (ABS(DISTINCT ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((+ (load_extension(t1.c0, 0.44777965983188417)))) ORDER BY ((vt0.c0)!=(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (vt0.c1 IN (vt0.c0)) ELSE CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (load_extension(t1.c0, 0.44777965983188417)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0)<>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (vt0.c1 IN (vt0.c0)) ELSE CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((+ (load_extension(t1.c0, 0.44777965983188417)))) ORDER BY ((vt0.c0)!=(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (vt0.c1 IN (vt0.c0)) ELSE CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (load_extension(t1.c0, 0.44777965983188417)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((vt0.c0)<>(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN ((vt0.c1) NOT BETWEEN (t1.c0) AND (t1.c0)) THEN (vt0.c1 IN (vt0.c0)) ELSE CASE WHEN t1.c0 THEN vt0.c1 WHEN t1.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c1 ELSE t1.c0 END END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))>>(CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<<(t1.c0)))>>(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))>>(CAST(t1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)<<(t1.c0)))>>(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((t1.c0)<<(t1.c0)))>>(CAST(t1.c0 AS TEXT))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOTNULL))||(ABS(t1.c0)))) ORDER BY (+ (((t1.c0)IS NOT(vt1.c0)))), ((vt0.c0)%(t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))||(ABS(t1.c0)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (+ (((t1.c0)IS NOT(vt1.c0)))), ((vt0.c0)%(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOTNULL))||(ABS(t1.c0)))) ORDER BY (+ (((t1.c0)IS NOT(vt1.c0)))), ((vt0.c0)%(t1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOTNULL))||(ABS(t1.c0)))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (+ (((t1.c0)IS NOT(vt1.c0)))), ((vt0.c0)%(t1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0) NOTNULL))||(ABS(t1.c0)))) ORDER BY (+ (((t1.c0)IS NOT(vt1.c0)))), ((vt0.c0)%(t1.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((((vt0.c1 IN ()))&(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))&(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((((vt0.c1 IN ()))&(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))&(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((((vt0.c1 IN ()))&(((vt0.c0) IS FALSE))));
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN t1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY CASE WHEN ((((((((x'c89569f8')OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt0.c1  WHEN t1.c0 THEN t1.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, vt1 ORDER BY CASE WHEN ((((((((x'c89569f8')OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt0.c1  WHEN t1.c0 THEN t1.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN t1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY CASE WHEN ((((((((x'c89569f8')OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt0.c1  WHEN t1.c0 THEN t1.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM t1 NOT INDEXED, vt0, vt1 ORDER BY CASE WHEN ((((((((x'c89569f8')OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt0.c1  WHEN t1.c0 THEN t1.c0 END END DESC  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (CAST(CASE WHEN t1.c0 THEN x'' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS REAL)) ORDER BY CASE WHEN ((((((((x'c89569f8')OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(NULL)) THEN vt0.c0 COLLATE NOCASE WHEN CAST(vt1.c0 AS INTEGER) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t1.c0)) WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CASE vt0.c1  WHEN t1.c0 THEN t1.c0 END END DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((((('*y')%(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((('*y')%(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((('*y')%(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((('*y')%(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((('*y')%(t1.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT COUNT(*) FROM vt1, t1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((+ ((vt1.c0 IN ())))) ORDER BY ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))%(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))%(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))%(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))%(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))%(COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)&(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)&(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)&(((vt0.c1)<(vt0.c1)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (vt1.c0, vt0.c0))) NOTNULL) WHERE (CASE vt1.c0  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.9779819572579012) THEN vt0.c1 COLLATE NOCASE END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.9779819572579012) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (vt1.c0, vt0.c0))) NOTNULL) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')) AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (vt1.c0, vt0.c0))) NOTNULL) WHERE (CASE vt1.c0  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.9779819572579012) THEN vt0.c1 COLLATE NOCASE END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')) AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.9779819572579012) THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (vt1.c0, vt0.c0))) NOTNULL) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')) AS REAL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt0.c0 IN (vt1.c0, vt0.c0))) NOTNULL) WHERE (CASE vt1.c0  WHEN LIKELIHOOD(DISTINCT vt0.c1, 0.9779819572579012) THEN vt0.c1 COLLATE NOCASE END) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')) AS REAL);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON (vt0.c1 IN (CAST(vt1.c0 AS REAL), CAST(vt0.c1 AS TEXT))) WHERE ((((+ (0.3213885508041826)))IS(((vt0.c0)LIKE(vt0.c1))))) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END ASC  NULLS LAST, (- (NULLIF(DISTINCT t1.c0, vt1.c0))) DESC  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (0.3213885508041826)))IS(((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON (vt0.c1 IN (CAST(vt1.c0 AS REAL), CAST(vt0.c1 AS TEXT))) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END ASC  NULLS LAST, (- (NULLIF(DISTINCT t1.c0, vt1.c0))) DESC  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON (vt0.c1 IN (CAST(vt1.c0 AS REAL), CAST(vt0.c1 AS TEXT))) WHERE ((((+ (0.3213885508041826)))IS(((vt0.c0)LIKE(vt0.c1))))) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END ASC  NULLS LAST, (- (NULLIF(DISTINCT t1.c0, vt1.c0))) DESC  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (0.3213885508041826)))IS(((vt0.c0)LIKE(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON (vt0.c1 IN (CAST(vt1.c0 AS REAL), CAST(vt0.c1 AS TEXT))) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END ASC  NULLS LAST, (- (NULLIF(DISTINCT t1.c0, vt1.c0))) DESC  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON (vt0.c1 IN (CAST(vt1.c0 AS REAL), CAST(vt0.c1 AS TEXT))) WHERE ((((+ (0.3213885508041826)))IS(((vt0.c0)LIKE(vt0.c1))))) ORDER BY CASE WHEN (- (vt0.c1)) THEN vt1.c0 COLLATE NOCASE ELSE (vt0.c1 IN (vt0.c0)) END ASC  NULLS LAST, (- (NULLIF(DISTINCT t1.c0, vt1.c0))) DESC  NULLS LAST, ((CAST(vt1.c0 AS TEXT)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON (((vt0.c1)) BETWEEN ((((t1.c0)+('}vU')))) AND ((rtreenode(vt0.c1, vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END))) ORDER BY ((0xffffffffdc22d2fe) NOT BETWEEN ((~ (vt0.c1))) AND ((((-1380139893)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON (((vt0.c1)) BETWEEN ((((t1.c0)+('}vU')))) AND ((rtreenode(vt0.c1, vt1.c0)))) ORDER BY ((0xffffffffdc22d2fe) NOT BETWEEN ((~ (vt0.c1))) AND ((((-1380139893)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))));
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON (((vt0.c1)) BETWEEN ((((t1.c0)+('}vU')))) AND ((rtreenode(vt0.c1, vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END))) ORDER BY ((0xffffffffdc22d2fe) NOT BETWEEN ((~ (vt0.c1))) AND ((((-1380139893)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON (((vt0.c1)) BETWEEN ((((t1.c0)+('}vU')))) AND ((rtreenode(vt0.c1, vt1.c0)))) ORDER BY ((0xffffffffdc22d2fe) NOT BETWEEN ((~ (vt0.c1))) AND ((((-1380139893)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))));
SELECT ALL * FROM vt1, vt0 INNER JOIN t1 ON (((vt0.c1)) BETWEEN ((((t1.c0)+('}vU')))) AND ((rtreenode(vt0.c1, vt1.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))>>(CASE WHEN vt0.c1 THEN vt1.c0 WHEN t1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END))) ORDER BY ((0xffffffffdc22d2fe) NOT BETWEEN ((~ (vt0.c1))) AND ((((-1380139893)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((vt1.c0))==((vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((vt1.c0))==((vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((vt1.c0))==((vt1.c0)))) IS FALSE));
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON TRIM(t1.c0) WHERE ((((((t1.c0)OR(vt0.c0))))<=((((t1.c0) IS TRUE))))) ORDER BY x'' DESC, (((t1.c0))<=((UPPER(DISTINCT vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)OR(vt0.c0))))<=((((t1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON TRIM(t1.c0) ORDER BY x'' DESC, (((t1.c0))<=((UPPER(DISTINCT vt0.c0)))) ASC);
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON TRIM(t1.c0) WHERE ((((((t1.c0)OR(vt0.c0))))<=((((t1.c0) IS TRUE))))) ORDER BY x'' DESC, (((t1.c0))<=((UPPER(DISTINCT vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)OR(vt0.c0))))<=((((t1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON TRIM(t1.c0) ORDER BY x'' DESC, (((t1.c0))<=((UPPER(DISTINCT vt0.c0)))) ASC);
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON TRIM(t1.c0) WHERE ((((((t1.c0)OR(vt0.c0))))<=((((t1.c0) IS TRUE))))) ORDER BY x'' DESC, (((t1.c0))<=((UPPER(DISTINCT vt0.c0)))) ASC;
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((vt0.c1)OR(t1.c0))))) ORDER BY CASE (0.7885641467396411 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN UPPER(vt0.c1) END ASC  NULLS FIRST, UPPER(DISTINCT (- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)OR(t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (0.7885641467396411 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN UPPER(vt0.c1) END ASC  NULLS FIRST, UPPER(DISTINCT (- (vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((vt0.c1)OR(t1.c0))))) ORDER BY CASE (0.7885641467396411 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN UPPER(vt0.c1) END ASC  NULLS FIRST, UPPER(DISTINCT (- (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)OR(t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE (0.7885641467396411 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN UPPER(vt0.c1) END ASC  NULLS FIRST, UPPER(DISTINCT (- (vt0.c0))));
SELECT ALL * FROM t1, vt0 WHERE ((NOT (((vt0.c1)OR(t1.c0))))) ORDER BY CASE (0.7885641467396411 IN ())  WHEN CAST(vt0.c1 AS INTEGER) THEN UPPER(vt0.c1) END ASC  NULLS FIRST, UPPER(DISTINCT (- (vt0.c0)));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE ((((0.4523215847870091, vt0.c1, 0.9548782907060626)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), UPPER(vt1.c0), vt0.c1)) AND (((0.3294092902666036 IN (vt1.c0)), (- (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((0.4523215847870091, vt0.c1, 0.9548782907060626)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), UPPER(vt1.c0), vt0.c1)) AND (((0.3294092902666036 IN (vt1.c0)), (- (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE ((((0.4523215847870091, vt0.c1, 0.9548782907060626)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), UPPER(vt1.c0), vt0.c1)) AND (((0.3294092902666036 IN (vt1.c0)), (- (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((0.4523215847870091, vt0.c1, 0.9548782907060626)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), UPPER(vt1.c0), vt0.c1)) AND (((0.3294092902666036 IN (vt1.c0)), (- (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE ((((0.4523215847870091, vt0.c1, 0.9548782907060626)) NOT BETWEEN ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), UPPER(vt1.c0), vt0.c1)) AND (((0.3294092902666036 IN (vt1.c0)), (- (vt0.c1)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END))));
SELECT COUNT(*) FROM t1, vt1 FULL OUTER JOIN vt0 ON (((NOT (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((t1.c0)|('150112956')))) WHERE ((((~ (vt1.c0)))%(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))%(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON (((NOT (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((t1.c0)|('150112956')))));
SELECT COUNT(*) FROM t1, vt1 FULL OUTER JOIN vt0 ON (((NOT (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((t1.c0)|('150112956')))) WHERE ((((~ (vt1.c0)))%(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))%(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t1, vt1 FULL OUTER JOIN vt0 ON (((NOT (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((t1.c0)|('150112956')))));
SELECT COUNT(*) FROM t1, vt1 FULL OUTER JOIN vt0 ON (((NOT (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((t1.c0)|('150112956')))) WHERE ((((~ (vt1.c0)))%(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) BETWEEN ((0.19050263799019918)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((((((t1.c0))=(('r*')))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))=(('r*')))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) BETWEEN ((0.19050263799019918)) AND ((CAST(vt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) BETWEEN ((0.19050263799019918)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((((((t1.c0))=(('r*')))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))=(('r*')))) ISNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) BETWEEN ((0.19050263799019918)) AND ((CAST(vt0.c0 AS BLOB)))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) BETWEEN ((0.19050263799019918)) AND ((CAST(vt0.c0 AS BLOB)))) WHERE ((((((t1.c0))=(('r*')))) ISNULL));
SELECT ALL * FROM vt0, vt1 CROSS JOIN t1 ON 0xfffffffff0115556 WHERE (((vt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON 0Xfffffffff0115556);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t1 ON 0xfffffffff0115556 WHERE (((vt0.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) ISNULL)) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON 0Xfffffffff0115556);
SELECT ALL * FROM vt0, vt1 CROSS JOIN t1 ON 0xfffffffff0115556 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt1, t1 WHERE (CAST(((t1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)>=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (CAST(((t1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)>=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (CAST(((t1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(t1.c0 AS REAL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((x'9ba2')-(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((978395720)|(vt0.c0)) WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((x'9ba2')-(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((978395720)|(vt0.c0)) WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((x'9ba2')-(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((978395720)|(vt0.c0)) WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((x'9ba2')-(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((978395720)|(vt0.c0)) WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1))  WHEN ((x'9ba2')-(vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((978395720)|(vt0.c0)) WHEN (+ (vt0.c1)) THEN CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((t1.c0) IS FALSE))OR((('1754374824')|(t1.c0)))))OR(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) IS FALSE))OR((('1754374824')|(t1.c0)))))OR(t1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((t1.c0) IS FALSE))OR((('1754374824')|(t1.c0)))))OR(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0) IS FALSE))OR((('1754374824')|(t1.c0)))))OR(t1.c0 COLLATE BINARY))  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))>=(((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY ((((((t1.c0) IS FALSE))OR((('1754374824')|(t1.c0)))))OR(t1.c0 COLLATE BINARY))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1)>(vt0.c0))) BETWEEN (((('[js䴯0M'))=((vt0.c1)))) AND (((vt0.c1)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c0))) BETWEEN (((('[js䴯0M'))=((vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1)>(vt0.c0))) BETWEEN (((('[js䴯0M'))=((vt0.c1)))) AND (((vt0.c1)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c0))) BETWEEN (((('[js䴯0M'))=((vt0.c1)))) AND (((vt0.c1)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (((vt0.c0)>=(vt0.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c1)>(vt0.c0))) BETWEEN (((('[js䴯0M'))=((vt0.c1)))) AND (((vt0.c1)<=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((UPPER(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((UPPER(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((UPPER(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((UPPER(DISTINCT vt0.c0) IN ()));
SELECT COUNT(*) FROM t1, vt1 WHERE (TRIM(t1.c0) COLLATE NOCASE) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE (TRIM(t1.c0) COLLATE NOCASE) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t1.c0) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, vt1 WHERE (TRIM(t1.c0) COLLATE NOCASE) ORDER BY ((vt1.c0) IS TRUE) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE ((- ((+ (vt0.c1))))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, vt0, t1 WHERE ((- ((+ (vt0.c1))))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt1, vt0, t1 WHERE ((- ((+ (vt0.c1))))) ORDER BY CAST(x'' AS NUMERIC) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((((((t1.c0))>=((t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c0))>=((t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))>=((t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c0))>=((t1.c0)))) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<>('')) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND (((((vt1.c0))>=((vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)OR(vt0.c0)))!=('')) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND (((((vt1.c0))>=((vt0.c1))))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<>('')) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND (((((vt1.c0))>=((vt0.c1))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)OR(vt0.c0)))!=('')) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND (((((vt1.c0))>=((vt0.c1))))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((((vt0.c0)OR(vt0.c0)))<>('')) ASC  NULLS FIRST, (((vt0.c1)) BETWEEN (((~ (vt0.c0)))) AND (((((vt1.c0))>=((vt0.c1))))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))AND(t1.c0)), (- (t1.c0)))) ORDER BY (NULL IN ()), CASE t1.c0 COLLATE RTRIM  WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN LOWER(DISTINCT t1.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))AND(t1.c0)), (- (t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (NULL IN ()), CASE t1.c0 COLLATE RTRIM  WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN LOWER(DISTINCT t1.c0) END);
SELECT ALL COUNT(*) FROM t1 WHERE (NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))AND(t1.c0)), (- (t1.c0)))) ORDER BY (NULL IN ()), CASE t1.c0 COLLATE RTRIM  WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN LOWER(DISTINCT t1.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))AND(t1.c0)), (- (t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (NULL IN ()), CASE t1.c0 COLLATE RTRIM  WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN LOWER(DISTINCT t1.c0) END);
SELECT ALL COUNT(*) FROM t1 WHERE (NULLIF(DISTINCT ((((t1.c0)OR(t1.c0)))AND(t1.c0)), (- (t1.c0)))) ORDER BY (NULL IN ()), CASE t1.c0 COLLATE RTRIM  WHEN ((((t1.c0)AND(t1.c0)))AND(t1.c0)) THEN LOWER(DISTINCT t1.c0) END;
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, ('0.025067751218628476' IN ())))<((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), vt0.c1 COLLATE RTRIM, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, ('0.025067751218628476' IN ())))<((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), vt0.c1 COLLATE RTRIM, NULL)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, ('0.025067751218628476' IN ())))<((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), vt0.c1 COLLATE RTRIM, NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, ('0.025067751218628476' IN ())))<((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), vt0.c1 COLLATE RTRIM, NULL)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, NULL, ('0.025067751218628476' IN ())))<((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)), vt0.c1 COLLATE RTRIM, NULL))));
SELECT ALL * FROM t1 INNER JOIN vt1 ON (NULL IN ()) INNER JOIN vt0 ON (~ (UNLIKELY(DISTINCT vt0.c1))) WHERE (((((vt0.c1)&(vt1.c0)))|((vt0.c1 IN ())))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt1.c0)))|((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (NULL IN ()) INNER JOIN vt0 ON (~ (UNLIKELY(DISTINCT vt0.c1))) ORDER BY vt1.c0 ASC);
SELECT ALL * FROM t1 INNER JOIN vt1 ON (NULL IN ()) INNER JOIN vt0 ON (~ (UNLIKELY(DISTINCT vt0.c1))) WHERE (((((vt0.c1)&(vt1.c0)))|((vt0.c1 IN ())))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)&(vt1.c0)))|((vt0.c1 IN ())))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (NULL IN ()) INNER JOIN vt0 ON (~ (UNLIKELY(DISTINCT vt0.c1))) ORDER BY vt1.c0 ASC);
SELECT ALL * FROM t1 INNER JOIN vt1 ON (NULL IN ()) INNER JOIN vt0 ON (~ (UNLIKELY(DISTINCT vt0.c1))) WHERE (((((vt0.c1)&(vt1.c0)))|((vt0.c1 IN ())))) ORDER BY vt1.c0 ASC;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((NULL))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (0.5261669825656864);
SELECT SUM(count) FROM (SELECT ALL ((0.5261669825656864) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (0.5261669825656864);
SELECT SUM(count) FROM (SELECT ALL ((0.5261669825656864) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (0.5261669825656864);
SELECT COUNT(*) FROM t1 WHERE (json_object((t1.c0 IN ()), CASE WHEN t1.c0 THEN '179531391' END)) ORDER BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object((t1.c0 IN ()), CASE WHEN t1.c0 THEN '179531391' END)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (json_object((t1.c0 IN ()), CASE WHEN t1.c0 THEN '179531391' END)) ORDER BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object((t1.c0 IN ()), CASE WHEN t1.c0 THEN '179531391' END)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0 COLLATE BINARY) NOT BETWEEN (((t1.c0)||(t1.c0))) AND (CAST(t1.c0 AS REAL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((- ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((- ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((- ((+ (vt1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (CAST(t1.c0 AS BLOB))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((vt1.c0) BETWEEN (((t1.c0)>=(vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((t1.c0)>=(vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((vt1.c0) BETWEEN (((t1.c0)>=(vt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (((t1.c0)>=(vt0.c0))) AND (NULL))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((vt1.c0) BETWEEN (((t1.c0)>=(vt0.c0))) AND (NULL)));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((NULL) IS FALSE))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1 IN ()))AND((vt0.c1 IN (vt0.c0)))))AND(vt0.c0)) DESC, CAST((- (vt0.c0)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (vt1.c0) AND (LTRIM(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1 IN ()))AND((vt0.c1 IN (vt0.c0)))))AND(vt0.c0)) DESC, CAST((- (vt0.c0)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (vt1.c0) AND (LTRIM(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((NULL) IS FALSE))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c1 IN ()))AND((vt0.c1 IN (vt0.c0)))))AND(vt0.c0)) DESC, CAST((- (vt0.c0)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (vt1.c0) AND (LTRIM(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL) IS FALSE))/(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1 IN ()))AND((vt0.c1 IN (vt0.c0)))))AND(vt0.c0)) DESC, CAST((- (vt0.c0)) AS TEXT) ASC  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN (vt1.c0) AND (LTRIM(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 0.7247163293551683))<>((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, 0.7247163293551683))<>((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 0.7247163293551683))<>((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, 0.7247163293551683))<>((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, 0.7247163293551683))<>((vt0.c1, vt0.c1, vt0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-87588815) ORDER BY (((('') BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE WHEN t1.c0 THEN vt0.c0 END)) DESC, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0))) ISNULL), COALESCE((((vt1.c0))<>((t1.c0))), -277557717, NULLIF(t1.c0, vt1.c0), ((vt0.c1)<>(t1.c0)));
SELECT SUM(count) FROM (SELECT ((-87588815) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((('') BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE WHEN t1.c0 THEN vt0.c0 END)) DESC, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0))) ISNULL), COALESCE((((vt1.c0))!=((t1.c0))), -277557717, NULLIF(t1.c0, vt1.c0), ((vt0.c1)!=(t1.c0))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-87588815) ORDER BY (((('') BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE WHEN t1.c0 THEN vt0.c0 END)) DESC, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0))) ISNULL), COALESCE((((vt1.c0))<>((t1.c0))), -277557717, NULLIF(t1.c0, vt1.c0), ((vt0.c1)<>(t1.c0)));
SELECT SUM(count) FROM (SELECT ((-87588815) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((('') BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE WHEN t1.c0 THEN vt0.c0 END)) DESC, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0))) ISNULL), COALESCE((((vt1.c0))!=((t1.c0))), -277557717, NULLIF(t1.c0, vt1.c0), ((vt0.c1)!=(t1.c0))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-87588815) ORDER BY (((('') BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE WHEN t1.c0 THEN vt0.c0 END)) DESC, ((((((t1.c0)OR(t1.c0)))OR(vt1.c0))) ISNULL), COALESCE((((vt1.c0))<>((t1.c0))), -277557717, NULLIF(t1.c0, vt1.c0), ((vt0.c1)<>(t1.c0)));
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((1.7976931348623157E308)AND(((vt0.c1) ISNULL))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((1.7976931348623157E308)AND(((vt0.c1) ISNULL))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((1.7976931348623157E308)AND(((vt0.c1) ISNULL))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((1.7976931348623157E308)AND(((vt0.c1) ISNULL))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c1 AS INTEGER))) DESC  NULLS FIRST, ((((1.7976931348623157E308)AND(((vt0.c1) ISNULL))))AND(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT * FROM t1 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '' THEN 0.762921986666933 END  WHEN (+ (t1.c0)) THEN LOWER(DISTINCT t1.c0) ELSE '2139865836' END) ORDER BY ((t1.c0)%(t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '' THEN 0.762921986666933 END  WHEN (+ (t1.c0)) THEN LOWER(DISTINCT t1.c0) ELSE '2139865836' END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)%(t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '' THEN 0.762921986666933 END  WHEN (+ (t1.c0)) THEN LOWER(DISTINCT t1.c0) ELSE '2139865836' END) ORDER BY ((t1.c0)%(t1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '' THEN 0.762921986666933 END  WHEN (+ (t1.c0)) THEN LOWER(DISTINCT t1.c0) ELSE '2139865836' END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)%(t1.c0)) COLLATE RTRIM);
SELECT * FROM t1 WHERE (CASE CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN '' THEN 0.762921986666933 END  WHEN (+ (t1.c0)) THEN LOWER(DISTINCT t1.c0) ELSE '2139865836' END) ORDER BY ((t1.c0)%(t1.c0)) COLLATE RTRIM;
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((((CAST(vt0.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('pH_)1-500000\nf')))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE (t1.c0) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((((CAST(vt0.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('pH_)1-500000\nf')))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((((CAST(vt0.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('pH_)1-500000\nf')))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE (t1.c0) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((((CAST(vt0.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('pH_)1-500000\nf')))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN t1 ON ((((CAST(vt0.c0 AS NUMERIC))OR(((((((((vt1.c0)OR(t1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND('pH_)1-500000\nf')))))OR(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) WHERE (t1.c0) ORDER BY (NOT ((- (t1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5914562405579696) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5914562405579696) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5914562405579696) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.5914562405579696) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.5914562405579696) NOT NULL));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN (- (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<>(vt1.c0)) THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt1.c0)) THEN (- (vt1.c0)) END);
SELECT COUNT(*) FROM t1 WHERE ((((((((((((((t1.c0 IN ()))OR(t1.c0)))OR(NULL)))OR(((t1.c0)<(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0)LIKE(t1.c0)))))OR((-658791589 IN ())))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((t1.c0 IN ()))OR(t1.c0)))OR(NULL)))OR(((t1.c0)<(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0)LIKE(t1.c0)))))OR((-658791589 IN ())))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((((((((((t1.c0 IN ()))OR(t1.c0)))OR(NULL)))OR(((t1.c0)<(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0)LIKE(t1.c0)))))OR((-658791589 IN ())))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((t1.c0 IN ()))OR(t1.c0)))OR(NULL)))OR(((t1.c0)<(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0)LIKE(t1.c0)))))OR((-658791589 IN ())))) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((((((((((((t1.c0 IN ()))OR(t1.c0)))OR(NULL)))OR(((t1.c0)<(t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))))AND(((t1.c0)LIKE(t1.c0)))))OR((-658791589 IN ())))) ORDER BY t1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array_length(((vt1.c0)<(vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'6470')))AND(vt1.c0)))), CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS FIRST, ((GLOB(vt1.c0, vt1.c0))&((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'6470')))AND(vt1.c0)))), CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS FIRST, ((GLOB(vt1.c0, vt1.c0))&((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array_length(((vt1.c0)<(vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'6470')))AND(vt1.c0)))), CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS FIRST, ((GLOB(vt1.c0, vt1.c0))&((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)<(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'6470')))AND(vt1.c0)))), CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS FIRST, ((GLOB(vt1.c0, vt1.c0))&((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_array_length(((vt1.c0)<(vt1.c0)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x'6470')))AND(vt1.c0)))), CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END  NULLS FIRST, ((GLOB(vt1.c0, vt1.c0))&((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))<<(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))<<(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))<<(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))<<(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM vt0 WHERE (UNICODE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))<<(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c1 COLLATE NOCASE))) WHERE (CAST(NULLIF(vt0.c1, vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt0.c1, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c1 COLLATE NOCASE))) WHERE (CAST(NULLIF(vt0.c1, vt1.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(vt0.c1, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c1 COLLATE NOCASE))) WHERE (CAST(NULLIF(vt0.c1, vt1.c0) AS BLOB));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)))|(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY TRIM(((((vt1.c0)OR(vt0.c0)))AND(t1.c0)), vt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)))|(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY TRIM(((((vt1.c0)OR(vt0.c0)))AND(t1.c0)), vt0.c1) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)))|(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY TRIM(((((vt1.c0)OR(vt0.c0)))AND(t1.c0)), vt0.c1) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)))|(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY TRIM(((((vt1.c0)OR(vt0.c0)))AND(t1.c0)), vt0.c1) ASC);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((((vt0.c1) NOT BETWEEN (t1.c0) AND (vt0.c0)))|(CASE vt0.c1  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END))) ORDER BY TRIM(((((vt1.c0)OR(vt0.c0)))AND(t1.c0)), vt0.c1) ASC;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((0.5002632739884065) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.09628628531942085 WHEN ((0.6278972677193768) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5002632739884065) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.09628628531942085 WHEN ((0.6278972677193768) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((0.5002632739884065) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.09628628531942085 WHEN ((0.6278972677193768) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0.5002632739884065) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.09628628531942085 WHEN ((0.6278972677193768) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((0.5002632739884065) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN 0.09628628531942085 WHEN ((0.6278972677193768) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END);
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON CAST(vt0.c1 AS NUMERIC) COLLATE BINARY WHERE (((0X4d3b1fbb)LIKE(((vt0.c1)+(vt0.c1))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((0X4d3b1fbb)LIKE(((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON CAST(vt0.c1 AS NUMERIC) COLLATE BINARY ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON CAST(vt0.c1 AS NUMERIC) COLLATE BINARY WHERE (((0X4d3b1fbb)LIKE(((vt0.c1)+(vt0.c1))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((0X4d3b1fbb)LIKE(((vt0.c1)+(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON CAST(vt0.c1 AS NUMERIC) COLLATE BINARY ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t1 ON CAST(vt0.c1 AS NUMERIC) COLLATE BINARY WHERE (((0X4d3b1fbb)LIKE(((vt0.c1)+(vt0.c1))))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0)/(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((((('1422765532')) BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((('1422765532')) BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0)/(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((((('1422765532')) BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)/(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((('1422765532')) BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM t1, vt0 WHERE (((((t1.c0)/(vt0.c1))) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (((vt0.c0) IS FALSE)))) ORDER BY ((((((('1422765532')) BETWEEN ((t1.c0)) AND ((vt0.c1))))AND(t1.c0)))OR(t1.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c1))))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c1))))%(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))%(CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c1) IS TRUE) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c1 END)));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY ((((NULL)AND(vt0.c1)))OR(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((NULL)AND(vt0.c1)))OR(vt1.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY ((((NULL)AND(vt0.c1)))OR(vt1.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((NULL)AND(vt0.c1)))OR(vt1.c0)) COLLATE NOCASE ASC);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) ORDER BY ((((NULL)AND(vt0.c1)))OR(vt1.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((((((((((t1.c0 IN ()))OR(0.7723305377163754)))AND(t1.c0 COLLATE RTRIM)))OR((('48171031') IS TRUE))))OR(0.16025689853520353))) ORDER BY (((((t1.c0)AND(1427843756)))OR(vt1.c0)) IN (LTRIM(vt1.c0)))  NULLS LAST, ((t1.c0)>((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c0 IN ()))OR(0.7723305377163754)))AND(t1.c0 COLLATE RTRIM)))OR((('48171031') IS TRUE))))OR(0.16025689853520353))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (((((t1.c0)AND(1427843756)))OR(vt1.c0)) IN (LTRIM(vt1.c0)))  NULLS LAST, ((t1.c0)>((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((((((((((t1.c0 IN ()))OR(0.7723305377163754)))AND(t1.c0 COLLATE RTRIM)))OR((('48171031') IS TRUE))))OR(0.16025689853520353))) ORDER BY (((((t1.c0)AND(1427843756)))OR(vt1.c0)) IN (LTRIM(vt1.c0)))  NULLS LAST, ((t1.c0)>((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t1.c0 IN ()))OR(0.7723305377163754)))AND(t1.c0 COLLATE RTRIM)))OR((('48171031') IS TRUE))))OR(0.16025689853520353))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY (((((t1.c0)AND(1427843756)))OR(vt1.c0)) IN (LTRIM(vt1.c0)))  NULLS LAST, ((t1.c0)>((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE ((((((((((t1.c0 IN ()))OR(0.7723305377163754)))AND(t1.c0 COLLATE RTRIM)))OR((('48171031') IS TRUE))))OR(0.16025689853520353))) ORDER BY (((((t1.c0)AND(1427843756)))OR(vt1.c0)) IN (LTRIM(vt1.c0)))  NULLS LAST, ((t1.c0)>((((t1.c0)) BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) ORDER BY (((vt1.c0)>(vt1.c0)) IN ())  NULLS LAST, CAST((+ (t1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((vt1.c0)>(vt1.c0)) IN ())  NULLS LAST, CAST((+ (t1.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) ORDER BY (((vt1.c0)>(vt1.c0)) IN ())  NULLS LAST, CAST((+ (t1.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((vt1.c0)>(vt1.c0)) IN ())  NULLS LAST, CAST((+ (t1.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS TEXT)) ORDER BY (((vt1.c0)>(vt1.c0)) IN ())  NULLS LAST, CAST((+ (t1.c0)) AS BLOB) ASC;
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS NUMERIC))-(((vt0.c1) NOTNULL)))) ORDER BY (((vt0.c0)<(vt0.c0)) IN ()) DESC, SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))-(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c0)<(vt0.c0)) IN ()) DESC, SQLITE_VERSION()  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS NUMERIC))-(((vt0.c1) NOTNULL)))) ORDER BY (((vt0.c0)<(vt0.c0)) IN ()) DESC, SQLITE_VERSION()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC))-(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (((vt0.c0)<(vt0.c0)) IN ()) DESC, SQLITE_VERSION()  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(vt1.c0 AS NUMERIC))-(((vt0.c1) NOTNULL)))) ORDER BY (((vt0.c0)<(vt0.c0)) IN ()) DESC, SQLITE_VERSION()  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)OR(json_array_length('-601697538'))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)OR(json_array_length('-601697538'))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)OR(json_array_length('-601697538'))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)OR(json_array_length('-601697538'))))AND(vt1.c0))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 END)OR(json_array_length('-601697538'))))AND(vt1.c0)));
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))) AND (((vt0.c0 IN (vt0.c1, vt1.c0)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))) AND (((vt0.c0 IN (vt0.c1, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))) AND (((vt0.c0 IN (vt0.c1, vt1.c0)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))) AND (((vt0.c0 IN (vt0.c1, vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY x''  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0)) NOT BETWEEN ((((((t1.c0)OR(t1.c0)))OR(vt0.c1)))) AND (((vt0.c0 IN (vt0.c1, vt1.c0)))))) ORDER BY x''  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((('-952991654')) BETWEEN ((-2.77557717E8)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((('-952991654')) BETWEEN ((-2.77557717E8)) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((('-952991654')) BETWEEN ((-2.77557717E8)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((('-952991654')) BETWEEN ((-2.77557717E8)) AND ((vt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((('-952991654')) BETWEEN ((-2.77557717E8)) AND ((vt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((t1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt0.c1, t1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((t1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt0.c1, t1.c0, vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((t1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt0.c1, t1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((- (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((t1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt0.c1, t1.c0, vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((((- (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((t1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t1.c0, vt1.c0)) AND ((vt0.c1, t1.c0, vt1.c0))))));
SELECT * FROM vt0, t1 WHERE (HEX(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (HEX(t1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(t1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (HEX(t1.c0) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)OR(vt1.c0)))OR(',jnw2I')) IN ((((vt1.c0))=((vt1.c0))))) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (('')>(vt0.c0)) THEN ((vt0.c1)+(vt0.c0)) ELSE (((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((0.8313526805895727, vt0.c0, vt0.c1, vt0.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (('')>(vt0.c0)) THEN ((vt0.c1)+(vt0.c0)) ELSE (((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((0.8313526805895727, vt0.c0, vt0.c1, vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)OR(vt1.c0)))OR(',jnw2I')) IN ((((vt1.c0))==((vt1.c0))))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)OR(vt1.c0)))OR(',jnw2I')) IN ((((vt1.c0))=((vt1.c0))))) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (('')>(vt0.c0)) THEN ((vt0.c1)+(vt0.c0)) ELSE (((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((0.8313526805895727, vt0.c0, vt0.c1, vt0.c0, vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (('')>(vt0.c0)) THEN ((vt0.c1)+(vt0.c0)) ELSE (((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((0.8313526805895727, vt0.c0, vt0.c1, vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)OR(vt1.c0)))OR(',jnw2I')) IN ((((vt1.c0))==((vt1.c0))))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (((((vt1.c0)OR(vt1.c0)))OR(',jnw2I')) IN ((((vt1.c0))=((vt1.c0))))) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (('')>(vt0.c0)) THEN ((vt0.c1)+(vt0.c0)) ELSE (((vt1.c0, vt0.c1, vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c1)) AND ((0.8313526805895727, vt0.c0, vt0.c1, vt0.c0, vt1.c0))) END);
SELECT * FROM vt0, t1 WHERE (CASE UNLIKELY(t1.c0)  WHEN 179531391 THEN (((vt0.c0, t1.c0, vt0.c1))<=((t1.c0, t1.c0, vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(t1.c0)  WHEN 179531391 THEN (((vt0.c0, t1.c0, vt0.c1))<=((t1.c0, t1.c0, vt0.c1))) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE UNLIKELY(t1.c0)  WHEN 179531391 THEN (((vt0.c0, t1.c0, vt0.c1))<=((t1.c0, t1.c0, vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(t1.c0)  WHEN 179531391 THEN (((vt0.c0, t1.c0, vt0.c1))<=((t1.c0, t1.c0, vt0.c1))) END) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (CASE UNLIKELY(t1.c0)  WHEN 179531391 THEN (((vt0.c0, t1.c0, vt0.c1))<=((t1.c0, t1.c0, vt0.c1))) END);
SELECT ALL * FROM vt1, t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED, t1);
SELECT ALL * FROM vt1, t1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED, t1);
SELECT ALL * FROM vt1, t1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (+ ((((vt0.c1, 0.1779096722444078, t1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t1.c0, vt0.c1, t1.c0))))) FULL OUTER JOIN vt0 ON t1.c0 COLLATE RTRIM WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY ((CAST('&u' AS REAL))IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (+ ((((vt0.c1, 0.1779096722444078, t1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t1.c0, vt0.c1, t1.c0))))) FULL OUTER JOIN vt0 ON t1.c0 COLLATE RTRIM ORDER BY ((CAST('&u' AS REAL))IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (+ ((((vt0.c1, 0.1779096722444078, t1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t1.c0, vt0.c1, t1.c0))))) FULL OUTER JOIN vt0 ON t1.c0 COLLATE RTRIM WHERE ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY ((CAST('&u' AS REAL))IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (+ ((((vt0.c1, 0.1779096722444078, t1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((t1.c0, vt0.c1, t1.c0))))) FULL OUTER JOIN vt0 ON t1.c0 COLLATE RTRIM ORDER BY ((CAST('&u' AS REAL))IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)))) ASC  NULLS FIRST, vt1.c0 DESC);
SELECT * FROM t1 WHERE (CAST(((t1.c0)<=(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<=(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)<=(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)<=(t1.c0)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((t1.c0)<=(t1.c0)) AS REAL));
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((((vt0.c0)OR(x'')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((((vt0.c0)OR(x'')))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((((vt0.c0)OR(x'')))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((((vt0.c0)OR(x'')))OR(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (x'') ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END)<(((((vt0.c0)OR(x'')))OR(vt0.c0))));
SELECT * FROM vt0, t1 WHERE ((((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT BETWEEN ((vt0.c1 IN (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON (((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 END))>((((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))) WHERE (TRIM(((t1.c0)=(vt0.c1)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((TRIM(((t1.c0)=(vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 END))>((((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))) ORDER BY x'');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON (((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 END))>((((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))) WHERE (TRIM(((t1.c0)=(vt0.c1)))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((TRIM(((t1.c0)=(vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON (((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 END))>((((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))) ORDER BY x'');
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t1 ON (((CASE t1.c0  WHEN vt0.c1 THEN vt0.c1 END))>((((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))))) WHERE (TRIM(((t1.c0)=(vt0.c1)))) ORDER BY x'';
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(CAST(t1.c0 AS BLOB) AS BLOB));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((TRIM(t1.c0))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t1.c0)))))AND(vt0.c1))) ORDER BY ((t1.c0)>=(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t1.c0))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t1.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c0)>=(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((TRIM(t1.c0))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t1.c0)))))AND(vt0.c1))) ORDER BY ((t1.c0)>=(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t1.c0))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t1.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((t1.c0)>=(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((TRIM(t1.c0))OR(((vt0.c1) BETWEEN (vt0.c1) AND (t1.c0)))))AND(vt0.c1))) ORDER BY ((t1.c0)>=(vt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY CAST(((vt1.c0) NOTNULL) AS INTEGER);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN TRIM(DISTINCT vt0.c1, t1.c0) THEN CAST(t1.c0 AS BLOB) END WHERE ((((- (vt0.c0))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, (((vt0.c1) NOTNULL) IN ((((t1.c0, vt0.c1, t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0))))) ASC, ((((t1.c0) BETWEEN (0.6549326681405473) AND (t1.c0))) BETWEEN (0.9799726489344892) AND (((x'')<<('1869510169'))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN TRIM(DISTINCT vt0.c1, t1.c0) THEN CAST(t1.c0 AS BLOB) END ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, (((vt0.c1) NOTNULL) IN ((((t1.c0, vt0.c1, t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0))))) ASC, ((((t1.c0) BETWEEN (0.6549326681405473) AND (t1.c0))) BETWEEN (0.9799726489344892) AND (((x'')<<('1869510169')))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN TRIM(DISTINCT vt0.c1, t1.c0) THEN CAST(t1.c0 AS BLOB) END WHERE ((((- (vt0.c0))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, (((vt0.c1) NOTNULL) IN ((((t1.c0, vt0.c1, t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0))))) ASC, ((((t1.c0) BETWEEN (0.6549326681405473) AND (t1.c0))) BETWEEN (0.9799726489344892) AND (((x'')<<('1869510169'))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CASE WHEN TRIM(DISTINCT vt0.c1, t1.c0) THEN CAST(t1.c0 AS BLOB) END ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, (((vt0.c1) NOTNULL) IN ((((t1.c0, vt0.c1, t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0))))) ASC, ((((t1.c0) BETWEEN (0.6549326681405473) AND (t1.c0))) BETWEEN (0.9799726489344892) AND (((x'')<<('1869510169')))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON CASE WHEN TRIM(DISTINCT vt0.c1, t1.c0) THEN CAST(t1.c0 AS BLOB) END WHERE ((((- (vt0.c0))) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (t1.c0 COLLATE NOCASE))) ORDER BY CAST(CAST(t1.c0 AS INTEGER) AS NUMERIC) ASC  NULLS LAST, (((vt0.c1) NOTNULL) IN ((((t1.c0, vt0.c1, t1.c0, vt0.c0, vt0.c0, t1.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0))))) ASC, ((((t1.c0) BETWEEN (0.6549326681405473) AND (t1.c0))) BETWEEN (0.9799726489344892) AND (((x'')<<('1869510169'))));
SELECT ALL * FROM t1, vt0 WHERE (((ROUND(vt0.c0, vt0.c1))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c1))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((ROUND(vt0.c0, vt0.c1))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c1))IS NOT(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((ROUND(vt0.c0, vt0.c1))IS NOT(vt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((x'8dd1')&((~ (vt1.c0)))) INNER JOIN vt0 ON '4a' WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (- (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN 0.9567987305795693 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)) ASC, CASE WHEN NULL THEN (+ (0.9255951623466091)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, x'995f', t1.c0))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.3634251248766617')) THEN ((((vt0.c1)AND(vt0.c0)))OR(t1.c0)) WHEN (((t1.c0))<>((vt0.c0))) THEN t1.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((x'8dd1')&((~ (vt1.c0)))) INNER JOIN vt0 ON '4a' ORDER BY (- (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN 0.9567987305795693 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)) ASC, CASE WHEN NULL THEN (+ (0.9255951623466091)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, x'995f', t1.c0))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.3634251248766617')) THEN ((((vt0.c1)AND(vt0.c0)))OR(t1.c0)) WHEN (((t1.c0))!=((vt0.c0))) THEN t1.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((x'8dd1')&((~ (vt1.c0)))) INNER JOIN vt0 ON '4a' WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (- (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN 0.9567987305795693 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)) ASC, CASE WHEN NULL THEN (+ (0.9255951623466091)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, x'995f', t1.c0))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.3634251248766617')) THEN ((((vt0.c1)AND(vt0.c0)))OR(t1.c0)) WHEN (((t1.c0))<>((vt0.c0))) THEN t1.c0 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((x'8dd1')&((~ (vt1.c0)))) INNER JOIN vt0 ON '4a' ORDER BY (- (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN 0.9567987305795693 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)) ASC, CASE WHEN NULL THEN (+ (0.9255951623466091)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, x'995f', t1.c0))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.3634251248766617')) THEN ((((vt0.c1)AND(vt0.c0)))OR(t1.c0)) WHEN (((t1.c0))!=((vt0.c0))) THEN t1.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM t1 CROSS JOIN vt1 ON ((x'8dd1')&((~ (vt1.c0)))) INNER JOIN vt0 ON '4a' WHERE ((CAST(t1.c0 AS INTEGER) IN ())) ORDER BY (- (CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 WHEN 0.9567987305795693 THEN vt1.c0 WHEN NULL THEN vt0.c0 END)) ASC, CASE WHEN NULL THEN (+ (0.9255951623466091)) WHEN ((vt1.c0)LIKE(vt1.c0)) THEN (((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c0, x'995f', t1.c0))) WHEN vt0.c0 THEN (~ (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND ('0.3634251248766617')) THEN ((((vt0.c1)AND(vt0.c0)))OR(t1.c0)) WHEN (((t1.c0))<>((vt0.c0))) THEN t1.c0 COLLATE NOCASE END;
SELECT * FROM vt1, t1, vt0 WHERE ((~ (((t1.c0)<=(vt0.c0))))) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM vt1, t1, vt0 WHERE ((~ (((t1.c0)<=(vt0.c0))))) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CAST(((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)  NULLS FIRST);
SELECT * FROM vt1, t1, vt0 WHERE ((~ (((t1.c0)<=(vt0.c0))))) ORDER BY CAST(((t1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL)  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'')))OR(x'')))OR(vt1.c0)))AND(vt1.c0)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0)GLOB(vt1.c0)))));
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((+ (((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)OR(vt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((+ (((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)OR(vt0.c1)))AND(t1.c0))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE ((+ (((((vt0.c1)OR(vt0.c1)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (vt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.4701800494914429 COLLATE BINARY) NOT BETWEEN ((+ (vt1.c0))) AND ((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0)))))) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4701800494914429 COLLATE BINARY) NOT BETWEEN ((+ (vt1.c0))) AND ((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.4701800494914429 COLLATE BINARY) NOT BETWEEN ((+ (vt1.c0))) AND ((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0)))))) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.4701800494914429 COLLATE BINARY) NOT BETWEEN ((+ (vt1.c0))) AND ((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((0.4701800494914429 COLLATE BINARY) NOT BETWEEN ((+ (vt1.c0))) AND ((((vt0.c1)) BETWEEN ((t1.c0)) AND ((vt1.c0)))))) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) ASC  NULLS LAST;
SELECT * FROM t1, vt1 WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((NOT ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((NOT ((+ (t1.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC));
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CASE CHAR(vt0.c0)  WHEN (- (vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c0)>(vt0.c0)) END) ORDER BY ((json_object(vt0.c0, x'', vt0.c1, vt0.c1)) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0)<<(vt1.c0))))  NULLS LAST, ((vt0.c1 COLLATE BINARY)GLOB((+ (vt0.c1)))), ((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(vt0.c0)  WHEN (- (vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 ORDER BY ((json_object(vt0.c0, x'', vt0.c1, vt0.c1)) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0)<<(vt1.c0))))  NULLS LAST, ((vt0.c1 COLLATE BINARY)GLOB((+ (vt0.c1)))), ((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CASE CHAR(vt0.c0)  WHEN (- (vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c0)>(vt0.c0)) END) ORDER BY ((json_object(vt0.c0, x'', vt0.c1, vt0.c1)) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0)<<(vt1.c0))))  NULLS LAST, ((vt0.c1 COLLATE BINARY)GLOB((+ (vt0.c1)))), ((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CHAR(vt0.c0)  WHEN (- (vt1.c0)) THEN vt0.c1 WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c0)>(vt0.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON vt1.c0 ORDER BY ((json_object(vt0.c0, x'', vt0.c1, vt0.c1)) BETWEEN (NULLIF(DISTINCT vt1.c0, vt0.c0)) AND (((vt0.c0)<<(vt1.c0))))  NULLS LAST, ((vt0.c1 COLLATE BINARY)GLOB((+ (vt0.c1)))), ((((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c1) ISNULL))))AND(((vt0.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY '0.0643879316586039';
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY '0.0643879316586039');
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY '0.0643879316586039';
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY '0.0643879316586039');
SELECT COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) ISNULL)) ORDER BY '0.0643879316586039';
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, ((vt0.c1)>>(vt0.c0)), ((t1.c0) ISNULL), (t1.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c1)AND(t1.c0)))AND(vt0.c0)), json_object(vt0.c1, vt0.c1), (NOT (vt0.c0)), 0.48448998353440664))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, ((vt0.c1)>>(vt0.c0)), ((t1.c0) ISNULL), (t1.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c1)AND(t1.c0)))AND(vt0.c0)), json_object(vt0.c1, vt0.c1), (NOT (vt0.c0)), 0.48448998353440664))));
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, ((vt0.c1)>>(vt0.c0)), ((t1.c0) ISNULL), (t1.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c1)AND(t1.c0)))AND(vt0.c0)), json_object(vt0.c1, vt0.c1), (NOT (vt0.c0)), 0.48448998353440664))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, ((vt0.c1)>>(vt0.c0)), ((t1.c0) ISNULL), (t1.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c1)AND(t1.c0)))AND(vt0.c0)), json_object(vt0.c1, vt0.c1), (NOT (vt0.c0)), 0.48448998353440664))));
SELECT * FROM t1 INNER JOIN vt0 ON (((t1.c0, vt0.c1, vt0.c1, vt0.c0, t1.c0)) NOT BETWEEN ((((vt0.c1) ISNULL), vt0.c0 COLLATE RTRIM, ((vt0.c1)>>(vt0.c0)), ((t1.c0) ISNULL), (t1.c0 IN ()))) AND ((vt0.c1 COLLATE NOCASE, ((((vt0.c1)AND(t1.c0)))AND(vt0.c0)), json_object(vt0.c1, vt0.c1), (NOT (vt0.c0)), 0.48448998353440664))) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (t1.c0)))OR(0.15099621199781788)))OR(((t1.c0)>=(t1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(t1.c0)) WHERE (vt0.c1) ORDER BY ((COALESCE(vt1.c0, t1.c0))=(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (t1.c0)))OR(0.15099621199781788)))OR(((t1.c0)>=(t1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(t1.c0)) ORDER BY ((COALESCE(vt1.c0, t1.c0))=(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (t1.c0)))OR(0.15099621199781788)))OR(((t1.c0)>=(t1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(t1.c0)) WHERE (vt0.c1) ORDER BY ((COALESCE(vt1.c0, t1.c0))=(x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (t1.c0)))OR(0.15099621199781788)))OR(((t1.c0)>=(t1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(t1.c0)) ORDER BY ((COALESCE(vt1.c0, t1.c0))=(x'')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (t1.c0)))OR(0.15099621199781788)))OR(((t1.c0)>=(t1.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(t1.c0)) WHERE (vt0.c1) ORDER BY ((COALESCE(vt1.c0, t1.c0))=(x'')) ASC  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(1.04089201E9))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(1.04089201E9))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(1.04089201E9))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(1.04089201E9))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(1.04089201E9))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<<(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<<(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c1)<<(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)>=(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)>=(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)>=(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((((vt0.c0)>=(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM, LOWER(0.2971689288110456))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM, LOWER(0.2971689288110456)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM, LOWER(0.2971689288110456))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM, LOWER(0.2971689288110456)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN (vt1.c0 COLLATE RTRIM, LOWER(0.2971689288110456))));
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ())) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((t1.c0 IN ()));
SELECT * FROM vt0 CROSS JOIN t1 ON ((NULL)IS(((vt0.c0) NOT NULL))) WHERE ((((vt0.c1, t1.c0, NULL)) NOT BETWEEN ((((vt0.c1) ISNULL), ((t1.c0) IS FALSE), vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) ISNULL), 0.2989764994377204, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, t1.c0, NULL)) NOT BETWEEN ((((vt0.c1) ISNULL), ((t1.c0) IS FALSE), vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) ISNULL), 0.2989764994377204, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((NULL)IS(((vt0.c0) NOT NULL))));
SELECT * FROM vt0 CROSS JOIN t1 ON ((NULL)IS(((vt0.c0) NOT NULL))) WHERE ((((vt0.c1, t1.c0, NULL)) NOT BETWEEN ((((vt0.c1) ISNULL), ((t1.c0) IS FALSE), vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) ISNULL), 0.2989764994377204, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, t1.c0, NULL)) NOT BETWEEN ((((vt0.c1) ISNULL), ((t1.c0) IS FALSE), vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) ISNULL), 0.2989764994377204, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((NULL)IS(((vt0.c0) NOT NULL))));
SELECT * FROM vt0 CROSS JOIN t1 ON ((NULL)IS(((vt0.c0) NOT NULL))) WHERE ((((vt0.c1, t1.c0, NULL)) NOT BETWEEN ((((vt0.c1) ISNULL), ((t1.c0) IS FALSE), vt0.c1 COLLATE RTRIM)) AND ((((vt0.c1) ISNULL), 0.2989764994377204, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END))));
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))<=(t1.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))<=(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))<=(t1.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))<=(t1.c0))) IS TRUE)  as count FROM t1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)>(t1.c0)))<=(t1.c0))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt0.c1 AS REAL))AND(((vt0.c0)IS NOT(t1.c0))))) ORDER BY ((((vt1.c0) IS FALSE))<=(((t1.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))AND(((vt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0) IS FALSE))<=(((t1.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt0.c1 AS REAL))AND(((vt0.c0)IS NOT(t1.c0))))) ORDER BY ((((vt1.c0) IS FALSE))<=(((t1.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS REAL))AND(((vt0.c0)IS NOT(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((vt1.c0) IS FALSE))<=(((t1.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (((CAST(vt0.c1 AS REAL))AND(((vt0.c0)IS NOT(t1.c0))))) ORDER BY ((((vt1.c0) IS FALSE))<=(((t1.c0)<<(vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT * FROM vt0, t1 WHERE (0.6431992414913921);
SELECT SUM(count) FROM (SELECT ((0.6431992414913921) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (0.6431992414913921);
SELECT SUM(count) FROM (SELECT ((0.6431992414913921) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (0.6431992414913921);
SELECT * FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 WHERE (0.1614896692275113) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(CAST(vt0.c1 AS INTEGER))))OR('0.09836957837876026')))AND((- (vt0.c1)))) ASC  NULLS LAST, ((((x''))<((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.1614896692275113) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(CAST(vt0.c1 AS INTEGER))))OR('0.09836957837876026')))AND((- (vt0.c1)))) ASC  NULLS LAST, ((((x''))<((vt0.c0))) IN ()));
SELECT * FROM vt1, vt0 WHERE (0.1614896692275113) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(CAST(vt0.c1 AS INTEGER))))OR('0.09836957837876026')))AND((- (vt0.c1)))) ASC  NULLS LAST, ((((x''))<((vt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.1614896692275113) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(CAST(vt0.c1 AS INTEGER))))OR('0.09836957837876026')))AND((- (vt0.c1)))) ASC  NULLS LAST, ((((x''))<((vt0.c0))) IN ()));
SELECT * FROM vt1, vt0 WHERE (0.1614896692275113) ORDER BY ((((((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 END)AND(((vt1.c0) IS TRUE))))AND(CAST(vt0.c1 AS INTEGER))))OR('0.09836957837876026')))AND((- (vt0.c1)))) ASC  NULLS LAST, ((((x''))<((vt0.c0))) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0))/(((vt0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0))/(((vt0.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0))/(((vt0.c1)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt0.c0))/(((vt0.c1)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((LOWER(vt0.c0))/(((vt0.c1)/(vt0.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt1.c0, 0.5923021293078294)) NOTNULL) WHERE (CAST(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt1.c0, 0.5923021293078294)) NOTNULL) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt1.c0, 0.5923021293078294)) NOTNULL) WHERE (CAST(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt1.c0, 0.5923021293078294)) NOTNULL) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((LIKELIHOOD(vt1.c0, 0.5923021293078294)) NOTNULL) WHERE (CAST(((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) AS INTEGER)) ORDER BY CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 END COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULLIF(NULL, (vt0.c1 IN (NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(NULL, (vt0.c1 IN (NULL, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULLIF(NULL, (vt0.c1 IN (NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(NULL, (vt0.c1 IN (NULL, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (NULLIF(NULL, (vt0.c1 IN (NULL, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('CB|dጋvw#U');
SELECT SUM(count) FROM (SELECT (('CB|dጋvw#U') IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('CB|dጋvw#U');
SELECT SUM(count) FROM (SELECT (('CB|dጋvw#U') IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ('CB|dጋvw#U');
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (x'd738') ORDER BY 0.5210713809053545;
SELECT SUM(count) FROM (SELECT ((x'd738') IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 0.5210713809053545);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (x'd738') ORDER BY 0.5210713809053545;
SELECT SUM(count) FROM (SELECT ((x'd738') IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY 0.5210713809053545);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (x'd738') ORDER BY 0.5210713809053545;
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY t1.c0  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c0) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(HEX(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNICODE(HEX(vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(HEX(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((UNICODE(HEX(vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (UNICODE(HEX(vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (0.8316871464038496)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (0.8316871464038496)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (0.8316871464038496)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (0.8316871464038496)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((+ (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (NOT (0.8316871464038496)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((CAST(vt0.c0 AS TEXT) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)+(x'')))) AND ((vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)+(x'')))) AND ((vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)+(x'')))) AND ((vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)+(x'')))) AND ((vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((vt0.c1)+(x'')))) AND ((vt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))AND((vt0.c1 IN (t1.c0)))))OR((+ (vt0.c0)))) CROSS JOIN t1 ON vt0.c1 WHERE (CASE WHEN (((vt1.c0, vt0.c1, vt0.c0))<>((vt0.c1, 4.68489614E8, vt0.c1))) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt0.c1, vt0.c0))<>((vt0.c1, 4.68489614E8, vt0.c1))) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))AND((vt0.c1 IN (t1.c0)))))OR((+ (vt0.c0)))) CROSS JOIN t1 ON vt0.c1);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))AND((vt0.c1 IN (t1.c0)))))OR((+ (vt0.c0)))) CROSS JOIN t1 ON vt0.c1 WHERE (CASE WHEN (((vt1.c0, vt0.c1, vt0.c0))<>((vt0.c1, 4.68489614E8, vt0.c1))) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0, vt0.c1, vt0.c0))<>((vt0.c1, 4.68489614E8, vt0.c1))) THEN vt1.c0 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)))AND((vt0.c1 IN (t1.c0)))))OR((+ (vt0.c0)))) CROSS JOIN t1 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT NULL COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT NULL COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT NULL COLLATE RTRIM));
SELECT COUNT(*) FROM t1 WHERE (((HEX(t1.c0)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END))) ORDER BY ((((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(t1.c0)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((HEX(t1.c0)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END))) ORDER BY ((((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((HEX(t1.c0)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((HEX(t1.c0)) NOT BETWEEN (((t1.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END))) ORDER BY ((((((((((((((t1.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))LIKE((t1.c0 IN (t1.c0, t1.c0)))) DESC  NULLS FIRST;
