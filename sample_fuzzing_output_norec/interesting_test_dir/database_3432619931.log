-- Time: 2024/06/11 11:47:59
-- Database: database31
-- Database version: 3.40.0
-- seed value: 3432619931
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '37067'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1968909700); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 794344881); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '19189'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('') WHERE (((- (vt1.c0)))>(vt1.c0 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 1519668106 sz=1225444803 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '1293772730 sz=965674942'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension('錤!'))OR(json_patch(x'bc76', '-547530115'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('-12479708' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.008021208015701942 COLLATE NOCASE)OR(((NULL)<<(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1325230353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(x'2bb4'))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '4 sz=-646351189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-646351189 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=463854992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.15064704506232618 AS REAL))GLOB(x'3415')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1868229627'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE load_extension(x'0c6c', x'')  WHEN (+ (x'')) THEN 0.7495721673776327 WHEN ((0.3071120423783479)<=(NULL)) THEN ((((0.36036374230084023)OR(x'')))OR(NULL)) WHEN (0.4036030757302107 IN ()) THEN (((((((('')OR(0.36036374230084023)))OR('0.36036374230084023')))AND('1239934044')))OR(-1868229627)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.5907563822493771)) AND (('y<\rH'))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0.45276935842513366)IS NOT(1.519668106E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1868229627') BETWEEN ('kHL') AND (0.49293870199974343)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-547530115 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '1421910297' THEN NULL WHEN x'' THEN x'' WHEN NULL THEN '錤!' ELSE '' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x'6008'  WHEN '0_/u' THEN '6uH-' WHEN '-303671508' THEN 'H' WHEN '1293772730' THEN '-12479708' END  WHEN NULL COLLATE NOCASE THEN 1225444803 COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=702920567 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=1325230353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT '(W#	+eI') COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '2 sz=-1438648077 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1225444803 sz=385243437 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-12479708 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((x'' IN (x'bad9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0Xffffffff8ac54ddc) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '2 sz=-827309084'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-547530115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1227321532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (NULL COLLATE BINARY) AND (LIKELY(DISTINCT 0.9006729184342661))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9091712832770624) BETWEEN (0.6508983810447533) AND (NULL)))||(((0.029477266708340832) NOT BETWEEN (0.3877031244228688) AND (0.008021208015701942)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1746651333 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE NOCASE  WHEN (NOT ('-547530115')) THEN (('') BETWEEN ('1293772730') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1966780964'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '414286450'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.421910297E9)%('띷NE^䏤^>m?')) IN ((((('1325230353')AND(x'5404')))OR(-1889429689)), '' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1225444803 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.4047441903589707) AND (-5.47530115E8)))>(TRIM('_]뜌[ab', 0.8666551956467902))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1131981812 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '171722432 1131981812 sz=-1995308692 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.2537996960742581 COLLATE NOCASE) NOT BETWEEN (UPPER(-1.966780964E9)) AND (('-1995308692' IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 610522739 sz=171722432'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=610522739 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-948289577 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '513958811 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7554041923319005)) BETWEEN (((~ ('')))) AND ((((0Xffffffffb582e3c3)-('kHL'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1180592762 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-209555719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-31937793 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=430880524 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-185994640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1771344586 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN '-547530115' THEN 1239934044 END  WHEN (NULL IN ()) THEN ((0.06463480343753558)/(0.15064704506232618)) ELSE ((('-323326413'))=(('-21409961'))) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.9091712832770624)) BETWEEN ((((0.5750760414777356)<('Axv''y.XV^')))) AND (((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)>('0.36036374230084023')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1662463168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2883524'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9109428831064534) IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=183068425'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-12479708'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=965674942 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1746651333 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1519668106 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=1421910297'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1519668106'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-665923342'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('jVwaW}' COLLATE NOCASE) NOT BETWEEN (LIKELY(NULL)) AND ((x'b9cf' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('1225444803')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '285655206 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1446570548 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1995308692 sz=787008360 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-1860275928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=1675996226'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) BETWEEN (0X595dace5 COLLATE BINARY) AND (((('?危hbP', 0.10024881474294034, '홳䝱>*㥣RV')) NOT BETWEEN (('1131333020', 0Xffffffffe40d65d4, 0.5034205127236066)) AND ((x'', 0.06854544819490704, 0.14443674986973454))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1977863448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9879715413079827 COLLATE BINARY) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '101111180 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.11840013032813301) BETWEEN (1.29377273E9) AND (x'')), ABS(DISTINCT NULL), (('?B掛8)q4')GLOB(0.8114377395800476))))<(((x'' IN ()), ((NULL)+(NULL)), (+ (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=261683234'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)<=(QUOTE(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=197438938'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1860513547 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER((((0.21122386920158442))!=((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1771344586'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'')AND(0x63172cc0)))OR('-277257247')))OR(x'')))OR(x'e056')) THEN ((0.7059252373223368) BETWEEN (0.38493875741524797) AND (NULL)) WHEN (~ (0.7495721673776327)) THEN 0.6078169232124119 WHEN ((0X6fb15371)=(0.5410227525518669)) THEN x'' COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('?危hbP') NOT BETWEEN (x'') AND (0.4337293390112217)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.09078596793416838; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-159781423'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=170604899 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) BETWEEN ((('0.5034205127236066')<=(x''))) AND (CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.11840013032813301')<=(NULL))  WHEN 1225444803 THEN (((NULL, '0.4337293390112217', 'yT')) BETWEEN (('-341540764', x'', '965674942')) AND ((0.8542207322320037, x'', 0.8127042877844014))) ELSE (~ ('1293772730')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07150787327398522)-(x'a68314cc')))+(((0.5750760414777356) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1356776316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1364840749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (-1192429816)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1473264049 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1243660328 sz=-827309084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-530431827 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-1202635601' AS BLOB) IN (ROUND(0.992430470066592, 0.5766971623565691), (0.5034205127236066 IN (0X659d3649, 1.421910297E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-442752474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=1627457306 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-468884012 0 sz=-1263093672 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '851886878 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN x'' THEN NULL WHEN 814692970 THEN '-442752474' WHEN 0.8666551956467902 THEN 0.36036374230084023 END IN (CAST(x'9c20023a' AS REAL), CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1551144836 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.519668106E9)|(x''))) BETWEEN (((-1.7976931348623157E308) BETWEEN ('-530431827') AND (0Xffffffff8ac54ddc))) AND (-94466005 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('6uh-' AS BLOB) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=50871592 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1662463168 sz=-74862266 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.19065748119548265; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-1035507049 1225444803 sz=-1007206136 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-150853962'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN NULL THEN x'7a69' WHEN x'' THEN '1293772730' WHEN x'' THEN '' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.19065748119548265) BETWEEN ('1014720202') AND (NULL))  WHEN ((('0', 0.1528460643825329, '', '1519417182', NULL))>=((0.8082539491063799, 0.5666174674422464, NULL, NULL, -2137206376))) THEN ((NULL) NOT NULL) WHEN UNLIKELY('-1750647453') THEN (NULL IN ('513958811', NULL)) WHEN ((0Xade89c5) BETWEEN (NULL) AND ('-1746651333')) THEN -0.0 COLLATE RTRIM ELSE GLOB(NULL, x'42b3') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1397249492')GLOB(0x398f07be)))||(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffec1d6132)*(0x7823d1ea)))IS NOT(((0.07150787327398522) BETWEEN (0.7022215123982456) AND (x'1b61')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=-1435602822 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=922087163'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '591344763 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((NULL) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('|!'))!=(('50871592')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '624858904 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=513958811'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS NUMERIC))IS NOT(((x'')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (NULL))  WHEN ((x'')<<(x'')) THEN ((2058219141) IS TRUE) WHEN (((385243437)) BETWEEN ((x'07d367b8')) AND ((NULL))) THEN CASE WHEN x'' THEN 0.13903615020218762 END WHEN (((('V~e+yO')AND(0.1907988735981203)))AND('-1243660328')) THEN CASE '?危hbP'  WHEN '' THEN x'' END ELSE 0.15064704506232618 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1561954664 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST(0.999116484853294 AS TEXT))AND(DATE('?B掛8)q4', NULL, 0.6605465124014814, NULL, ''))))OR((1.704801865E9 IN ()))))AND(UPPER(x'3fe24918'))))AND(((x'') NOT BETWEEN ('') AND ('y<\rH')))))OR('-2009432396' COLLATE NOCASE)))OR((NULL IN (' p{]')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-21409961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT 0xffffffffb8ecf708)) NOTNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffaef4ab78 COLLATE BINARY)==(0.21843564714619101 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1131888994 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')/('-1035507049'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'TRUE'  WHEN ((x'') ISNULL) THEN CAST(88279705 AS NUMERIC) WHEN (((NULL, 0.46826770885157687, NULL))!=((0xffffffffecba6e33, NULL, NULL))) THEN (-1426589867 IN ()) WHEN -3.41540764E8 COLLATE RTRIM THEN 0.10602164710180129 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1855835554 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1202635601 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER('_]뜌[AB' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1293772730')!=(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6675922229626515)&(0.8114377395800476)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CAST(0.5034205127236066 AS INTEGER))) AND ((((((NULL)AND('-1889429689')))OR('-1963463187'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8250974676098989 IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1771344586 sz=-327441832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1167831005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1189109973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1447713489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-303671508'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1380906456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (1.675996226E9) AND (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-819975751 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-866942797'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'814b'))>=(('02x>n6>'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'ad3e') NOT BETWEEN (NULL) AND ('')) THEN (((NULL, NULL, 0x79c268df)) BETWEEN ((NULL, 0.13538599258664674, x'')) AND ((x'68c1', x'fca0', x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')LIKE(x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'bfad')<=(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.7554041923319005) IS FALSE))OR(CAST(0X436ec59c AS INTEGER))))OR(((NULL) NOT BETWEEN (0.31618829669227555) AND ('j熊0')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-21409961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 sz=-1544940246 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((x'')!=('')) ELSE (+ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1586466098'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('559426050'))!=((GLOB('-1022670454', '0.2537996960742581')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.240562452913472 COLLATE RTRIM)|(CASE NULL  WHEN 0.5624938427550898 THEN '-2009432396' WHEN NULL THEN NULL WHEN '' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1043802193 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('J埰')<<('851886878')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-530532346 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1027422618 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=-1396594712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1359697032'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-2143225498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('', x'', 0.5981164017657012)) BETWEEN (('|''', 0x58cda3fb, -2009432396)) AND ((x'', '1624531958', -547530115))) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 -62045256 sz=1207034489'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24103868941815643; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('0.8114377395800476') IS FALSE))) AND ((x'' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('-1868229627')))AND((- ('')))))AND(((NULL) NOT BETWEEN (NULL) AND (x'8207')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB(0.0286585858113102))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1131888994 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1.202635601E9  WHEN 0.20066659769767103 THEN NULL END)>>(((((0.73994455082938)AND(0.4458781832470453)))OR('')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('183068425')<<(0.2526125537291397))))<=((1.29377273E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1889429689'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-333618894 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=182356421'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-461205067 sz=330294549 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-710836723 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.8500658997834131 AS REAL)  WHEN CAST(NULL AS NUMERIC) THEN CASE '2144456857'  WHEN x'e125' THEN '&mKQ*tD''5' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2071765530 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1264167414 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-2019793088 AS NUMERIC)) NOT BETWEEN (CASE ''  WHEN '1662463168' THEN 0.15064704506232618 END) AND (((x'')<=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-859160508 sz=-1035507049 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8082539491063799)OR('|''')))OR(0.24402290595740084)))OR(x'')))AND(0.6197536970228713)))>=((((('0.6197536970228713')AND(0xffffffffaaf7f755)))OR('-1473264049')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-1860513547 AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN UPPER(x'') ELSE ((-1199836321) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-207413335 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-205123113 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1849456366 0 -1435923804 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.750647453E9)>(0.13903615020218762)) IN (CASE WHEN '!CSxꄙ' THEN -665923342 ELSE '3L' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1977863448 sz=-150853962 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '1704801865 1696063321 sz=-1237527446 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-827309084 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2008801809 sz=1672095544 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1679562666 -1252315246 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=-1243660328'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-827309084 0 sz=-1388980373'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-2053747488', x'', 'AXV''Y.XV^', '}c', NULL)) BETWEEN ((x'', 'Xr', NULL, x'2839', x'8954')) AND ((x'', x'09d0', '', '678073037', 0xffffffff818bb274)))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1915642217 sz=1180592762'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=396186294 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '499484711 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1911342831 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1908847218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1007206136 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1397249492'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('') BETWEEN (NULL) AND ('')))AND(CASE 7.8700836E8  WHEN '탵* R?]\r' THEN 0.8896397500245108 ELSE '101111180' END)))OR((~ (0.607874342079584)))))OR(((x'5750') IS FALSE))))AND((x'7232' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2015613418 sz=-1690843935 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('8E' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.966780964E9 COLLATE BINARY) BETWEEN ((((NULL)) NOT BETWEEN (('')) AND ((0.029477266708340832)))) AND (-1473264049 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN NULL END)<(((NULL) BETWEEN (x'') AND ('<⵮uE[')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR('-284371780', 50871592)) NOT BETWEEN (((0.09962685341623267)IS NOT(NULL))) AND (((NULL)>('z7')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '656085582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1694960958 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((('徣z')=('_a>y{9QzG')), SQLITE_COMPILEOPTION_USED(x'8740')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-991774201 sz=-1973972044'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=182356421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 'RnSC<' THEN 0xffffffffb8513caf END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (0.8486760104117507)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '636801005 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0c4e'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1627457306 sz=-1133132692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1750647453 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2103524667'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1823875729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=612741949 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT 1.675996226E9, NULL, '182356421', NULL))==((((('GMQbKv%F')AND('%_->(S#')))AND(0x0)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND((((NULL)) NOT BETWEEN ((x'')) AND ((0.6714605478954805))))))AND(1.014720202E9 COLLATE RTRIM)))AND((~ (-1446570548)))))OR((('-530431827')>('-1529340548')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(NULL)))OR(x'')))AND(2.015613418E9)))AND(x'b404')))GLOB((('1499311333') BETWEEN ('<⵮UE[') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1081033285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '616577804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '1627954649 sz=-422685536 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.2267809334009181  WHEN 0.45276935842513366 THEN '197438938' ELSE x'1aa3' END THEN -1551144836 ELSE CAST('-2142184342' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'b97d')>(NULL)))OR('n矍PQ4>t' COLLATE NOCASE)))OR(NULL COLLATE NOCASE)))AND(((('')) NOT BETWEEN ((NULL)) AND ((x''))))))OR(CASE 0.17398797296735802  WHEN NULL THEN 0xffffffffb5df3fd8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-385668788 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2016548169 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('-1995308692')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1212861902 385243437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1446570548 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UPPER('')  WHEN ((x'') NOT BETWEEN (x'') AND ('-865805997')) THEN ((x'')||(NULL)) ELSE (((x'')) NOT BETWEEN ((x'5921')) AND ((-2.1409961E7))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5810783221852961))!=(('~'))))>>(((NULL)|(x'89889322')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2058219141 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'') BETWEEN ('-1860513547') AND (0.0065038752069848105)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 1308858117 sz=-2034638832 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1519809941 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-87372798 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(CAST(NULL AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 sz=-1790555529 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('')OR('')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '600915801 511358133 sz=2130513186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(251524512) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-653843047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('-1750647453')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('667351459')%('-185994640')))AND((('尜V/g') ISNULL))))AND(((NULL) IS FALSE))))AND((NULL IN ()))))AND((1325230353 IN ('518135977')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-4499465 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 -12942574'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('p!뷪CIl]z' COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((7.02920567E8)) NOT BETWEEN (((-338926092 IN ()))) AND ((LOWER(DISTINCT '-1977863448')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1519417182 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1447296610 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0xad30c6  WHEN NULL THEN NULL END THEN ((NULL) BETWEEN ('-646351189') AND (NULL)) ELSE (((-1859598693, NULL, 0X22cda49f))<>((NULL, 0X465e6a7a, '-1243660328'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1572509341'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1131333020'))>(('錤!'))))<>(-1.438648077E9)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=610522739 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'47fb' IN ()) THEN ((0Xffffffffdffcaa7b) NOTNULL) ELSE x'' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 393108379 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.13443348841923852))>=(('304U쭨'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))-(LOWER(DISTINCT 0.6605465124014814))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Cf' COLLATE RTRIM) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-578825550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1535776990 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1499311333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('ie' IN ()))GLOB('')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1870085150'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=2091482005'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (-1500475188)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=88279705 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN 0.12115083816315353 ELSE x'' END)IS(((0.5810783221852961) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x'856d'  WHEN NULL THEN '0.8500658997834131' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1984416943 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.29545472317484234 COLLATE BINARY) NOT BETWEEN (CASE WHEN '1578173793' THEN NULL END) AND (('-1243660328' IN ('1051737764')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('669553382') NOT BETWEEN (0.19565178401862993) AND (NULL))) BETWEEN ((NOT ('막\#8>~ Nk'))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.9006729184342661 THEN 0.0773816398545989 END)OR(((((0.7976913304446976)AND('1827848959')))OR(NULL)))))AND((((0.32814154702063414))>((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0.22026824802986134) AND (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '765897345 0 sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1551023305 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 -1882600875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=233394993'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=2144052932 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-708131183 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1397249492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-532374185'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1710948944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'601d' IN ()))<=((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -363150212 sz=2134160632 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('6NF' COLLATE NOCASE))<(((((('-646351189')AND(x'')))AND('1180592762'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('矖okT2j') NOT BETWEEN (NULL) AND (((NULL)>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=285655206'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffe86d83a2 AS TEXT)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('j)}滹XV^쎾' COLLATE NOCASE)LIKE(((x'') NOT BETWEEN (x'') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1704406358 sz=1878589697 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8045388892504445; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=-762990221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN 1627457306 THEN NULL WHEN x'ba06' THEN '2015613418' WHEN 1.675996226E9 THEN '0.13538599258664674' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-205569426 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1421910297 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((NULL)) BETWEEN (('')) AND ((0Xffffffff97a73d63))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '0.7495721673776327' COLLATE NOCASE, (~ (0.7131369559709291))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'N&'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'dc97') IS TRUE))AND('981341418' COLLATE BINARY)))OR((((x'')) BETWEEN (('-1210488135')) AND (('1408661680'))))))OR(((x'')*(5.0871592E7)))))OR('Da*|a귨' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1855552932 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1538020017'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=629379620 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2039853299 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.180592762E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1964423740'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=609664559 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1325230353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-554396122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.48687150659320766)OR(NULL)))AND(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=230646362 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-419381217 1577629642 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((((((((0.19057002133421885)AND(x'')))OR(0.03256510438972493)))OR(x'5141')))AND(NULL)))) AND (((((NULL)) BETWEEN ((0.10097560061574773)) AND ((NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1664187488 AS INTEGER))=((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e26e')==(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(-910681163))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 2 sz=1854046905'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-275806327'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1151722008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8730864461581846, 0.49114222829196197, ''))>((x'', '-547530115', NULL))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=249851295'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-968903963 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.73994455082938, 0.9876054486610821, x'')) BETWEEN ((((x'') NOTNULL), LIKELY(0x40e1e9f), -3.41540764E8 COLLATE NOCASE)) AND ((CASE NULL  WHEN 0.76296020834116 THEN NULL END, CAST(NULL AS TEXT), (+ (0.0866037894575653))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=610522739 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1364840749'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL))OR(CASE 0.07194569306020437  WHEN NULL THEN x'e092' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1212758282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND('-31937793')))OR('-333618894')))OR('0.0')))OR('1180592762')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-566719113 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1032311791'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE 0Xffffffffde7875c2  WHEN NULL THEN x'6eb4' WHEN -1028721454 THEN 0xffffffffe1dc3d19 WHEN '' THEN NULL WHEN NULL THEN 0X4594dd41 WHEN 0.7321169272203939 THEN 0.3881172641982237 ELSE 'Da*|a귨' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-827309084'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-187730794 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=644982083 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '4 sz=1838545090 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.36141349095299813, '', '1704801865')) BETWEEN ((NULL, 1.499311333E9, '')) AND (('2065537682', 0.9760472659159038, 0.010207200646979442)))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.30016382930444296 COLLATE BINARY) BETWEEN (((x'')+('d?Zc,l3'))) AND (CAST(0.10329040610147422 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=-1426589867 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1192429816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-948289577 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1021208683 sz=1287191439 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1153596481 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=112785942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-530431827 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1142473708 sz=824854385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1225444803'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1325230353'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (('-1251263870') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=882353673 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-612817945 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.29714789065900415 COLLATE RTRIM)LIKE(2.61683234E8)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', '-1977863448 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (8.24854385E8)))OR(ABS(DISTINCT 0.5907551371291313))))AND(((NULL)%('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-313895758 663467737 sz=170604899'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.8474387651795308 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -3.23326413E8  WHEN 0.9022215379710326 THEN CAST('Gꛙ\nCV6\r橺' AS NUMERIC) WHEN ((x'') BETWEEN (x'') AND (x'379b')) THEN ((x'68fa') BETWEEN ('2015613418') AND ('7000224')) WHEN x'' THEN CAST(x'' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'3ca3'; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '88279705 sz=27322617 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('-827309084' AS NUMERIC) IN ()); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((-2137206376) BETWEEN (0.5163476949488542) AND (x'f370')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1220622055'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1605279800 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-417138063')-(''))) NOT BETWEEN (CAST('1873892209' AS REAL)) AND (((NULL)<=(0.9876054486610821)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.0286585858113102' COLLATE BINARY) BETWEEN (CASE WHEN '徣z' THEN NULL WHEN 0Xffffffffa7a4b210 THEN x'8d9f' WHEN NULL THEN NULL END) AND ((((-1435602822)) BETWEEN (('\Q#xtY>#}')) AND (('0.5907563822493771'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xffffffffc7223557 THEN x'' WHEN '-231850641' THEN NULL WHEN '_' THEN '䝜It敪+惄Vx' ELSE '1564134415' END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't0', ' sz=1213900533 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '922087163 sz=1608262565 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1538872359 774235192'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0xfffffffff714e050 AS NUMERIC)))<=(((('막\#8>~ Nk')>>(0Xffffffff906cfa62))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1523962698'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6498570484183573)OR(0.7828012979658133)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1519417182 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (x'b47a')))/((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('-1192429816'))>((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR('u]]ngd뵁dU')))OR('88279705')))OR(json_quote(0.5766971623565691))))OR((('Axv''y.XV^')>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((0.4763998988982219)>=(0X436ec59c))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1475743394'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1893412546 noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1404699525'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(NULL)))OR(((((3.85243437E8)OR(NULL)))AND('7SGF頙kysm')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' sz=607962181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-117555728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-209555719') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('''kŬDc錤x')AND(NULL)))OR(0x11b044e4)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('-1034529114'))>((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE BINARY  WHEN (('|!')<('-1860513547')) THEN 0Xfffffffffcd0a56e COLLATE BINARY ELSE (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1553526733'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE -1524921187  WHEN NULL THEN x'' WHEN x'37e0' THEN 0.2642165424717936 WHEN NULL THEN '' ELSE 0.39692685401708494 END))=((((((NULL)AND('-1339840050')))AND('>-'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-331565861 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=380698370 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((x'')*(NULL)))) AND ((('6w' IN (NULL, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '4 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELIHOOD(x'', 0.9369246462087906)  WHEN (((('*Q')OR(x'')))AND(NULL)) THEN 0xfffffffff0403e51 WHEN ((-1.868229627E9)%('0.14443674986973454')) THEN ((0X1ba5dd90)%(NULL)) WHEN (((('702920567')AND('')))AND(x'')) THEN CASE WHEN NULL THEN NULL ELSE '-1634785281' END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((x'')AND(x'')))OR(0.13443348841923852)))OR(0.12567976700016337)))OR(x'')))AND('')))OR('-891659272')))AND(x'b50ab47f')))OR((- (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX('1662463168' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-1107726882 285508968 sz=1325230353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1667507263 122882653'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-945275886 sz=88279705'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('l-\n ' AS TEXT) COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-74862266 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1715178098 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') NOT BETWEEN (x'') AND (0.019445332970582596)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.5766971623565691'  WHEN ((x'') IS FALSE) THEN CAST(x'4b5a' AS NUMERIC) WHEN ('1647587767' IN ()) THEN '' WHEN CAST(0.9853525292649731 AS REAL) THEN ((NULL)-(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=347676767 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE -1728132305  WHEN x'8800' THEN x'680e' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.4890251456981718) ISNULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('50871592' AS REAL))OR(((NULL)!=(NULL)))))OR(((NULL) BETWEEN (x'') AND ('[N(!5uC6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(2125905109 AS BLOB)) BETWEEN ('ᠥ' COLLATE NOCASE) AND (JULIANDAY('88279705', '385243437', '-1905276648'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-908724282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4768897698147063)) NOT BETWEEN ((x'a3c1')) AND (('-1860513547'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1263093672; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1192429816 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-341540764) BETWEEN (x'ca66') AND (NULL)))<<((((1873892209)) NOT BETWEEN (('B8a(G3wXᗌ')) AND ((0.2606981099297303))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1131888994 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1285714147 sz=-1977863448 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1202635601 sz=-1825203629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=976036137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1767775452'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1801294188 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('513958811')>>(NULL)))LIKE((('z8/\r\rad') BETWEEN ('-497332434') AND (x'c9e7')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'h'  WHEN '>Y໇d' THEN NULL END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=197438938 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff966b6d36)IS NOT(0xffffffffb0c008e8)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((('e^') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1230099636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('454625135') BETWEEN (0.6761526498012949) AND ('-1234223706')))AND((- (NULL)))))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.9700606670224031 IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1943323266'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'ffcb14e4'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1263093672 1239934044 sz=1555916284 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-31937793 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOT BETWEEN ('1675996226') AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '1499311333 -911967023 unordered'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '791700688 sz=-37989503 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0X4a3425a1  WHEN x'' THEN x'50de' END THEN CASE 1575649604  WHEN '787008360' THEN x'' WHEN 0.1943086905045982 THEN '渳QdI&o' WHEN '_Z*Cch*?' THEN '' WHEN NULL THEN NULL WHEN '-1746651333' THEN NULL END WHEN ((((((((1704801865)AND('1627457306')))OR(0.544841162729948)))AND(0.3071120423783479)))AND(x'')) THEN (('') BETWEEN (NULL) AND (x'639e')) WHEN CASE x'3c55ce8a'  WHEN '-2883524' THEN -435123210 WHEN NULL THEN NULL WHEN '_2f|' THEN NULL ELSE -733132766 END THEN CASE WHEN 0Xffffffffd8902cd0 THEN '-332860064' WHEN NULL THEN NULL WHEN -5.30431827E8 THEN NULL END ELSE (-1601496634 IN (0.5235411880772279, 'TRUE')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1116823908 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (x'')))OR(((((((((0.2062646528449208)AND(0.6183137966873317)))OR(x'7423')))OR('XD')))OR(0.3030654887750822)))))AND(((0.9181332804020093)<=(0.4777423555195187)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS(-333618894))) BETWEEN (CASE WHEN '-665923342' THEN 0.6264731204948454 WHEN NULL THEN 0.31232498329615 WHEN x'' THEN x'b153' ELSE x'e8924555' END) AND ((- (1.627457306E9)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN 'ꭸs' THEN 'xr,	' WHEN 0.5921311831403874 THEN x'' WHEN NULL THEN NULL WHEN 0.8047306029523548 THEN '' WHEN '708402420' THEN '0.2267809334009181' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2883524'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1131888994 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1131981812 sz=-165136918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1991519228 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2883524'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '-1757876553 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1232054650 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '52828279 -21409961'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '47706164 1704801865 sz=-333618894 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=291746450 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-68834891 2 sz=966389192 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT NULL))AND((+ ('-1815603572')))))OR((((0.5656537205198827))>((0.9253693601718846))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.5919693553215544 IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- ('-1046710773')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('9/0Y|-') NOT BETWEEN (-1228088207) AND ('(005')))AND((((x''))<=(('GMQbKv%F'))))))OR(((x'15769361')-(NULL)))))AND((NOT ('zM')))))AND(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.20162835260153278 IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xad8eff5) NOT NULL))OR((('1067879170') IS FALSE))))OR((x'90da' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=334695193 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '0 sz=1519668106 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (+ ('546582700'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')==('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('섳d')AND(-1426589867))) BETWEEN (json_insert('-150853962', 0x716642bc, '724482720')) AND (CASE '1239934044'  WHEN '' THEN '1026435024' WHEN -912386451 THEN NULL WHEN 1.675996226E9 THEN 'hC.<*' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6649124178605723)/((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffb029c598)>(NULL))) NOT BETWEEN ((0.5797154125396861 IN ())) AND (((((-1158039673)AND(NULL)))OR(0.7136882836265878)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((((((NULL)AND(NULL)))AND(0.07991691306146542)))AND(1.675996226E9)))AND(0.01939267704986747)))OR('0m')))OR(NULL)) THEN (('	(췃{㈎\nJBd')*('탵* r?]\r')) WHEN ((0.13443348841923852) ISNULL) THEN ((NULL) NOT BETWEEN (0.18790732924454845) AND (NULL)) WHEN ((x'') NOT NULL) THEN ((((NULL)AND(0.5655753206397296)))AND(NULL)) ELSE ((0.7474515241174853) IS FALSE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1860513547 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('\nOe8!롘6(I')AND('')))OR(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1787007448 848092666 sz=-1263093672 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1473264049 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b954' COLLATE RTRIM))<=((CAST(NULL AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', '-2121532554 sz=936063333 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1239934044' AS NUMERIC))OR(((((0.9189869294616764)AND(x'')))AND('1304548999')))))OR(((((0.5367678661010428)OR(x'')))OR(x'56d0')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (x'')))*((((0.24384990246838467))>((-31937793))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.24402290595740084) BETWEEN ('-2883524') AND (1656117267)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('1519417182' IN ())  WHEN TYPEOF(DISTINCT 0.35884143654509626) THEN ((((NULL)OR(NULL)))OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)GLOB(0.6673947079863383)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-571957104 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(((('-1977863448'))>=((0.9503386214774807))))))OR(x'' COLLATE NOCASE)))AND(NULL COLLATE RTRIM)))OR(CAST(0.8486760104117507 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.0286585858113102'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', ' sz=-1746651333 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '-1966619365 sz=1499311333'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1578944559 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1007206136 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=171722432 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (x'a949') AND (x'f795')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.14718966347041562; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1239934044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.638200098972227; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1487080143 sz=-1963398599 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-543445502 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-590054916 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=1941702459 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-209555719'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt1', '0 sz=754317352 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1411652164 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>(('-417616291')))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x''))))>(((1.7976931348623157E308 IN (0.6605465124014814))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(0.240562452913472)))OR(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=182356421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-1.2479708E7 COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN ('11377476') AND (x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') BETWEEN (0.5214301638060216) AND (x'10ed'))))<((CASE WHEN x'' THEN '-1860513547' WHEN -742814105 THEN 0X34e50f61 WHEN NULL THEN '0.10602164710180129' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-613008828 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't0', ' sz=-1397249492'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('_]뜌[ab' IN ('tq')))GLOB((('')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 19ms;
CREATE INDEX i77 ON t0(CASE WHEN c0 THEN '182356421' WHEN c0 THEN c0 WHEN 0X5fb110d0 THEN c0 END COLLATE NOCASE COLLATE RTRIM ASC) WHERE (~ (((((c0)OR(c0)))AND(c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ANALYZE sqlite_master; -- 12ms;
ALTER TABLE t0 ADD COLUMN c96 REAL; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=30039506,3');\n; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('Z4'), (0.2018206408402088), (0.8082539491063799); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1397249492);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 3ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '46796'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34700'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '17435'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1381873706,14');\n; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA temp.soft_heap_limit = 527255840560738737; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60089'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1,7');\n; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 5ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1338104948,9');\n; -- 0ms;
REINDEX; -- 0ms;
CREATE INDEX i71 ON t1(((((((((((c96)>>(c0)))OR(0.838984834895584 COLLATE BINARY)))AND(((c96)|(c0)))))OR(CAST(c96 AS TEXT))))OR(CASE c96  WHEN c0 THEN c96 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE c96 END)) COLLATE BINARY DESC,CASE x'a1742edf'  WHEN (~ (c96)) THEN ((((c0)AND(NULL)))OR(c96)) ELSE TRIM(DISTINCT c0, c0) END COLLATE NOCASE); -- 4ms;
UPDATE OR IGNORE vt2 SET (c0)=('0.992430470066592'); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 6); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE vt2; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2058573974); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ALTER TABLE t1 RENAME COLUMN c96 TO c63; -- 5ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (0x10005fb7), ('0.5810783221852961'), (x''); -- 11ms;
COMMIT; -- 0ms;
DELETE FROM t1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE INSERT ON t1 BEGIN DELETE FROM vt1;END; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (-1.771344586E9); -- 1ms;
PRAGMA temp.stats; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3402298739822953)>>((((1947243924)) BETWEEN ((0.0773816398545989)) AND (('450310281'))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 726127703); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2037872956); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=11'); -- 0ms;
COMMIT; -- 0ms;
UPDATE vt0 SET c0=x'1d2050df' WHERE SUBSTR(((vt0.c0)IS(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i75 ON t1((~ (((c63)-(c0)))) COLLATE BINARY DESC,(((c63, c0, c63)) BETWEEN ((0.7015806326710423, c0, CAST(c0 AS REAL))) AND ((((c0) BETWEEN (c63) AND (x'decf')), CAST(c0 AS REAL), ((c63) NOT BETWEEN (c63) AND (c63))))) COLLATE RTRIM) WHERE (((c63) BETWEEN (c63) AND (c63)) IN (((c63) NOT NULL))); -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) IS FALSE)) ORDER BY COALESCE(DISTINCT vt1.c0 COLLATE BINARY, (((vt1.c0))>((vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT vt1.c0 COLLATE BINARY, (((vt1.c0))>((vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) IS FALSE)) ORDER BY COALESCE(DISTINCT vt1.c0 COLLATE BINARY, (((vt1.c0))>((vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY COALESCE(DISTINCT vt1.c0 COLLATE BINARY, (((vt1.c0))>((vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) IS FALSE)) ORDER BY COALESCE(DISTINCT vt1.c0 COLLATE BINARY, (((vt1.c0))>((vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(((vt0.c0)/(vt0.c0)), (NOT (t1.c63)), ((((((((t1.c63)OR(vt1.c0)))AND(t1.c63)))AND(t1.c63)))OR(t1.c0))) LEFT OUTER JOIN t1 ON vt0.c0 WHERE ((((t1.c0) ISNULL) IN (0x8b8a18c, (('\r~d2Iz') ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) ISNULL) IN (0X8b8a18c, (('\r~d2Iz') ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON PRINTF(((vt0.c0)/(vt0.c0)), (NOT (t1.c63)), ((((((((t1.c63)OR(vt1.c0)))AND(t1.c63)))AND(t1.c63)))OR(t1.c0))) LEFT OUTER JOIN t1 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(((vt0.c0)/(vt0.c0)), (NOT (t1.c63)), ((((((((t1.c63)OR(vt1.c0)))AND(t1.c63)))AND(t1.c63)))OR(t1.c0))) LEFT OUTER JOIN t1 ON vt0.c0 WHERE ((((t1.c0) ISNULL) IN (0x8b8a18c, (('\r~d2Iz') ISNULL))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) ISNULL) IN (0X8b8a18c, (('\r~d2Iz') ISNULL)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON PRINTF(((vt0.c0)/(vt0.c0)), (NOT (t1.c63)), ((((((((t1.c63)OR(vt1.c0)))AND(t1.c63)))AND(t1.c63)))OR(t1.c0))) LEFT OUTER JOIN t1 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON PRINTF(((vt0.c0)/(vt0.c0)), (NOT (t1.c63)), ((((((((t1.c63)OR(vt1.c0)))AND(t1.c63)))AND(t1.c63)))OR(t1.c0))) LEFT OUTER JOIN t1 ON vt0.c0 WHERE ((((t1.c0) ISNULL) IN (0x8b8a18c, (('\r~d2Iz') ISNULL))));
SELECT * FROM vt0, vt1, t1 WHERE ((~ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((~ (CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((~ (CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (''))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (''))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((NOT ('')));
SELECT * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0 WHERE ((+ ((vt0.c0 IN ())))) ORDER BY (NOT (CAST(vt0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.4638658194492814);
SELECT SUM(count) FROM (SELECT ALL ((0.4638658194492814) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.4638658194492814);
SELECT SUM(count) FROM (SELECT ALL ((0.4638658194492814) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (0.4638658194492814);
SELECT * FROM t1, vt0 WHERE ((((t1.c0, 0.4000153591532646, t1.c63))>((vt0.c0, t1.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, 0.4000153591532646, t1.c63))>((vt0.c0, t1.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0, 0.4000153591532646, t1.c63))>((vt0.c0, t1.c0, vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, 0.4000153591532646, t1.c63))>((vt0.c0, t1.c0, vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0, 0.4000153591532646, t1.c63))>((vt0.c0, t1.c0, vt0.c0))) COLLATE NOCASE);
SELECT * FROM vt1 INNER JOIN t1 ON ((((t1.c63)%(t1.c63)))&((t1.c0 IN (vt1.c0)))) WHERE ((((t1.c0) IS FALSE) IN (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t1.c0) IS FALSE) IN (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((t1.c63)%(t1.c63)))&((t1.c0 IN (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN t1 ON ((((t1.c63)%(t1.c63)))&((t1.c0 IN (vt1.c0)))) WHERE ((((t1.c0) IS FALSE) IN (t1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t1.c0) IS FALSE) IN (t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON ((((t1.c63)%(t1.c63)))&((t1.c0 IN (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN t1 ON ((((t1.c63)%(t1.c63)))&((t1.c0 IN (vt1.c0)))) WHERE ((((t1.c0) IS FALSE) IN (t1.c0 COLLATE NOCASE)));
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON '3L' WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON '3L');
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON '3L' WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON '3L');
SELECT * FROM vt0, vt1 CROSS JOIN t1 ON '3L' WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t1 WHERE (((((((0.7022215123982456)OR(t1.c0)))OR(t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (((t1.c0)LIKE(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7022215123982456)OR(t1.c0)))OR(t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (((t1.c0)LIKE(t1.c63))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((0.7022215123982456)OR(t1.c0)))OR(t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (((t1.c0)LIKE(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.7022215123982456)OR(t1.c0)))OR(t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (((t1.c0)LIKE(t1.c63))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((((0.7022215123982456)OR(t1.c0)))OR(t1.c0))) BETWEEN (((t1.c0)>>(t1.c0))) AND (((t1.c0)LIKE(t1.c63)))));
SELECT * FROM vt0, vt1, t1 WHERE ((((- (t1.c63))) BETWEEN (MAX(t1.c63, t1.c0)) AND ((((t1.c0, t1.c0, '-1858719889'))!=((vt1.c0, t1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c63))) BETWEEN (MAX(t1.c63, t1.c0)) AND ((((t1.c0, t1.c0, '-1858719889'))!=((vt1.c0, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((- (t1.c63))) BETWEEN (MAX(t1.c63, t1.c0)) AND ((((t1.c0, t1.c0, '-1858719889'))!=((vt1.c0, t1.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c63))) BETWEEN (MAX(t1.c63, t1.c0)) AND ((((t1.c0, t1.c0, '-1858719889'))!=((vt1.c0, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((- (t1.c63))) BETWEEN (MAX(t1.c63, t1.c0)) AND ((((t1.c0, t1.c0, '-1858719889'))!=((vt1.c0, t1.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '-1245783413' WHERE ((NOT ((+ (t1.c0))))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '-1245783413' ORDER BY CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '-1245783413' WHERE ((NOT ((+ (t1.c0))))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t1.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON '-1245783413' ORDER BY CAST(t1.c0 COLLATE RTRIM AS INTEGER));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON '-1245783413' WHERE ((NOT ((+ (t1.c0))))) ORDER BY CAST(t1.c0 COLLATE RTRIM AS INTEGER);
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))&(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((((((((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))OR(((((((((vt1.c0)OR(0xfffffffff679edd1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0 COLLATE RTRIM)))AND(((('6nf', vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, '', vt1.c0))))))AND((((NULL))>=((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN ()))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))&(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((((((((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))OR(((((((((vt1.c0)OR(0xfffffffff679edd1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0 COLLATE RTRIM)))AND(((('6nf', vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, '', vt1.c0))))))AND((((NULL))>=((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT * FROM vt1 WHERE ((((NOT (vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY ((((vt1.c0) IS TRUE))&(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((((((((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))OR(((((((((vt1.c0)OR(0xfffffffff679edd1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0 COLLATE RTRIM)))AND(((('6nf', vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, '', vt1.c0))))))AND((((NULL))>=((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN ()))))AND(vt1.c0));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0)))>(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) IS TRUE))&(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), (((((((((((((((((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))OR(((((((((vt1.c0)OR(0xfffffffff679edd1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0 COLLATE RTRIM)))AND(((('6nf', vt1.c0, vt1.c0)) BETWEEN ((x'', vt1.c0, vt1.c0)) AND ((vt1.c0, '', vt1.c0))))))AND((((NULL))>=((vt1.c0))))))AND(vt1.c0 COLLATE NOCASE)))AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)!=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)!=(vt0.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)!=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)!=(vt0.c0)) END);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)!=(vt0.c0)) END;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE) WHERE (((((vt1.c0)*(vt0.c0)))&(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c0)))&(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE) WHERE (((((vt1.c0)*(vt0.c0)))&(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)*(vt0.c0)))&(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) IS FALSE) WHERE (((((vt1.c0)*(vt0.c0)))&(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(x'89ba')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(x'89ba')) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(x'89ba')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(x'89ba')) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS(x'89ba')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((NOT ((vt1.c0 IN ())))) ORDER BY vt0.c0  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))) IS FALSE) ASC;
SELECT * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t1.c63)!=(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c63)) END DESC, ((CAST(vt1.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (STRFTIME(vt1.c0, t1.c63, vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN ((t1.c63)<>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c63)) END DESC, ((CAST(vt1.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (STRFTIME(vt1.c0, t1.c63, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t1.c63)!=(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c63)) END DESC, ((CAST(vt1.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (STRFTIME(vt1.c0, t1.c63, vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE WHEN ((t1.c63)<>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c63)) END DESC, ((CAST(vt1.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (STRFTIME(vt1.c0, t1.c63, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t1.c63)!=(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(t1.c63)) END DESC, ((CAST(vt1.c0 AS REAL)) BETWEEN (vt0.c0 COLLATE BINARY) AND (STRFTIME(vt1.c0, t1.c63, vt0.c0, vt0.c0, vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((((json_array_length(vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0xffffffffa5375adf;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffa5375adf);
SELECT ALL * FROM vt0 WHERE (((((json_array_length(vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0xffffffffa5375adf;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array_length(vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffa5375adf);
SELECT ALL * FROM vt0 WHERE (((((json_array_length(vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ORDER BY 0xffffffffa5375adf;
SELECT ALL * FROM vt0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (t1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 7.8700836E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 7.8700836E8  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 7.8700836E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 7.8700836E8  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY 7.8700836E8  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1864495884')) AS NUMERIC)  NULLS LAST, (((NOT (x'')))AND(UPPER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1864495884')) AS NUMERIC)  NULLS LAST, (((NOT (x'')))AND(UPPER(vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1864495884')) AS NUMERIC)  NULLS LAST, (((NOT (x'')))AND(UPPER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1864495884')) AS NUMERIC)  NULLS LAST, (((NOT (x'')))AND(UPPER(vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-1864495884')) AS NUMERIC)  NULLS LAST, (((NOT (x'')))AND(UPPER(vt0.c0)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((-1750647453)) AND ((t1.c0))) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 ELSE vt1.c0 END END) ORDER BY (+ (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((-1750647453)) AND ((t1.c0))) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (+ (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((-1750647453)) AND ((t1.c0))) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 ELSE vt1.c0 END END) ORDER BY (+ (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((-1750647453)) AND ((t1.c0))) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (+ (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1, t1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN (((vt0.c0)) BETWEEN ((-1750647453)) AND ((t1.c0))) ELSE CASE t1.c0  WHEN NULL THEN t1.c0 ELSE vt1.c0 END END) ORDER BY (+ (vt0.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('n&')))OR(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN '-1227321532' THEN vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('n&')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN '-1227321532' THEN vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('n&')))OR(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN '-1227321532' THEN vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('n&')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN '-1227321532' THEN vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR('n&')))OR(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN '-1227321532' THEN vt0.c0 END)) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (x'' IN (((vt1.c0)*(t1.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY (x'' IN (((vt1.c0)*(t1.c63))))  NULLS LAST);
SELECT ALL * FROM t1 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (x'' IN (((vt1.c0)*(t1.c63))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt1 ORDER BY (x'' IN (((vt1.c0)*(t1.c63))))  NULLS LAST);
SELECT ALL * FROM t1 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY (x'' IN (((vt1.c0)*(t1.c63))))  NULLS LAST;
SELECT * FROM t1, vt1 WHERE ((((~ (vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY (- (((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt1 ORDER BY (- (((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE ((((~ (vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY (- (((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM t1, vt1 ORDER BY (- (((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, vt1 WHERE ((((~ (vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY (- (((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))>(((0.2009009748757865) NOTNULL)))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (0.1805416668921933 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))>(((0.2009009748757865) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (0.1805416668921933 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))>(((0.2009009748757865) NOTNULL)))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (0.1805416668921933 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))>(((0.2009009748757865) NOTNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (0.1805416668921933 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))>(((0.2009009748757865) NOTNULL)))) ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (0.1805416668921933 COLLATE BINARY) AND (vt1.c0 COLLATE NOCASE));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))%(CAST(vt1.c0 AS INTEGER))), (NOT (((vt0.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))%(CAST(vt1.c0 AS INTEGER))), (NOT (((vt0.c0)LIKE(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))%(CAST(vt1.c0 AS INTEGER))), (NOT (((vt0.c0)LIKE(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))%(CAST(vt1.c0 AS INTEGER))), (NOT (((vt0.c0)LIKE(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (CAST(vt1.c0 AS INTEGER)) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))%(CAST(vt1.c0 AS INTEGER))), (NOT (((vt0.c0)LIKE(vt1.c0))));
SELECT * FROM vt1, t1 WHERE (LIKELY(DISTINCT ((vt1.c0)>(t1.c0)))) ORDER BY LIKELY(DISTINCT ((((0.5907563822493771)OR(vt1.c0)))OR(t1.c63))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt1.c0)>(t1.c0)))) IS TRUE)  as count FROM vt1, t1 ORDER BY LIKELY(DISTINCT ((((0.5907563822493771)OR(vt1.c0)))OR(t1.c63))) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (LIKELY(DISTINCT ((vt1.c0)>(t1.c0)))) ORDER BY LIKELY(DISTINCT ((((0.5907563822493771)OR(vt1.c0)))OR(t1.c63))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt1.c0)>(t1.c0)))) IS TRUE)  as count FROM vt1, t1 ORDER BY LIKELY(DISTINCT ((((0.5907563822493771)OR(vt1.c0)))OR(t1.c63))) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (LIKELY(DISTINCT ((vt1.c0)>(t1.c0)))) ORDER BY LIKELY(DISTINCT ((((0.5907563822493771)OR(vt1.c0)))OR(t1.c63))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (('-1446570548') BETWEEN ((t1.c63 IN (vt0.c0, vt1.c0))) AND (((vt0.c0)/(vt1.c0)))) WHERE ((NOT (IFNULL(t1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(t1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (('-1446570548') BETWEEN ((t1.c63 IN (vt0.c0, vt1.c0))) AND (((vt0.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (('-1446570548') BETWEEN ((t1.c63 IN (vt0.c0, vt1.c0))) AND (((vt0.c0)/(vt1.c0)))) WHERE ((NOT (IFNULL(t1.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(t1.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (('-1446570548') BETWEEN ((t1.c63 IN (vt0.c0, vt1.c0))) AND (((vt0.c0)/(vt1.c0)))));
SELECT COUNT(*) FROM vt1, t1 RIGHT OUTER JOIN vt0 ON (('-1446570548') BETWEEN ((t1.c63 IN (vt0.c0, vt1.c0))) AND (((vt0.c0)/(vt1.c0)))) WHERE ((NOT (IFNULL(t1.c0, vt0.c0))));
SELECT * FROM vt1 WHERE (((NULL) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt1.c0))) ORDER BY ((((vt1.c0))=((vt1.c0))) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))==((vt1.c0))) IN (CAST(vt1.c0 AS TEXT))) DESC);
SELECT * FROM vt1 WHERE (((NULL) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt1.c0))) ORDER BY ((((vt1.c0))=((vt1.c0))) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))==((vt1.c0))) IN (CAST(vt1.c0 AS TEXT))) DESC);
SELECT * FROM vt1 WHERE (((NULL) NOT BETWEEN (NULLIF(DISTINCT vt1.c0, vt1.c0)) AND (vt1.c0))) ORDER BY ((((vt1.c0))=((vt1.c0))) IN (CAST(vt1.c0 AS TEXT))) DESC;
SELECT COUNT(*) FROM t1 WHERE ((('-94466005') NOT BETWEEN (CAST(t1.c63 AS TEXT)) AND (t1.c0))) ORDER BY TRIM(x'');
SELECT SUM(count) FROM (SELECT (((('-94466005') NOT BETWEEN (CAST(t1.c63 AS TEXT)) AND (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY TRIM(x''));
SELECT COUNT(*) FROM t1 WHERE ((('-94466005') NOT BETWEEN (CAST(t1.c63 AS TEXT)) AND (t1.c0))) ORDER BY TRIM(x'');
SELECT SUM(count) FROM (SELECT (((('-94466005') NOT BETWEEN (CAST(t1.c63 AS TEXT)) AND (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY TRIM(x''));
SELECT COUNT(*) FROM t1 WHERE ((('-94466005') NOT BETWEEN (CAST(t1.c63 AS TEXT)) AND (t1.c0))) ORDER BY TRIM(x'');
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NOT INDEXED WHERE (((((t1.c63) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NOT INDEXED WHERE (((((t1.c63) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL)) ISNULL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 NOT INDEXED WHERE (((((t1.c63) NOTNULL)) ISNULL));
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((((((((t1.c0) BETWEEN ('z7') AND (t1.c63)))AND(((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN ('oM') AND (vt0.c0)))))OR(t1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(t1.c63 COLLATE NOCASE)))OR('812019626')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c0) BETWEEN ('z7') AND (t1.c63)))AND(((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN ('oM') AND (vt0.c0)))))OR(t1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(t1.c63 COLLATE NOCASE)))OR('812019626'))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((((((((t1.c0) BETWEEN ('z7') AND (t1.c63)))AND(((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN ('oM') AND (vt0.c0)))))OR(t1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(t1.c63 COLLATE NOCASE)))OR('812019626')));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c0) BETWEEN ('z7') AND (t1.c63)))AND(((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN ('oM') AND (vt0.c0)))))OR(t1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(t1.c63 COLLATE NOCASE)))OR('812019626'))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((((((((((((t1.c0) BETWEEN ('z7') AND (t1.c63)))AND(((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c0) NOT BETWEEN ('oM') AND (vt0.c0)))))OR(t1.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(t1.c63 COLLATE NOCASE)))OR('812019626')));
SELECT ALL COUNT(*) FROM t1 WHERE (((json_extract(t1.c0, t1.c63)) ISNULL)) ORDER BY ((x'') IS FALSE) ASC  NULLS FIRST, ((- (t1.c63)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(t1.c0, t1.c63)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((x'') IS FALSE) ASC  NULLS FIRST, ((- (t1.c63)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((json_extract(t1.c0, t1.c63)) ISNULL)) ORDER BY ((x'') IS FALSE) ASC  NULLS FIRST, ((- (t1.c63)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(t1.c0, t1.c63)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY ((x'') IS FALSE) ASC  NULLS FIRST, ((- (t1.c63)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((json_extract(t1.c0, t1.c63)) ISNULL)) ORDER BY ((x'') IS FALSE) ASC  NULLS FIRST, ((- (t1.c63)) IN ());
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON t1.c63 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON t1.c63);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON t1.c63 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c0))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON t1.c63);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON t1.c63 WHERE ((NOT (((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c63 AS REAL)) NOT BETWEEN ((((t1.c0))=((t1.c63)))) AND (((t1.c63) ISNULL)))) ORDER BY (~ (((((t1.c0)AND(t1.c63)))AND(vt1.c0))))  NULLS FIRST, (~ (CAST(t1.c63 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c63 AS REAL)) NOT BETWEEN ((((t1.c0))=((t1.c63)))) AND (((t1.c63) ISNULL)))) IS TRUE)  as count FROM vt1, t1 ORDER BY (~ (((((t1.c0)AND(t1.c63)))AND(vt1.c0))))  NULLS FIRST, (~ (CAST(t1.c63 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c63 AS REAL)) NOT BETWEEN ((((t1.c0))=((t1.c63)))) AND (((t1.c63) ISNULL)))) ORDER BY (~ (((((t1.c0)AND(t1.c63)))AND(vt1.c0))))  NULLS FIRST, (~ (CAST(t1.c63 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c63 AS REAL)) NOT BETWEEN ((((t1.c0))=((t1.c63)))) AND (((t1.c63) ISNULL)))) IS TRUE)  as count FROM vt1, t1 ORDER BY (~ (((((t1.c0)AND(t1.c63)))AND(vt1.c0))))  NULLS FIRST, (~ (CAST(t1.c63 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((CAST(t1.c63 AS REAL)) NOT BETWEEN ((((t1.c0))=((t1.c63)))) AND (((t1.c63) ISNULL)))) ORDER BY (~ (((((t1.c0)AND(t1.c63)))AND(vt1.c0))))  NULLS FIRST, (~ (CAST(t1.c63 AS BLOB))) ASC;
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c63 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(NULL AS INTEGER))) WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY 0.9996387442802236  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c63 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(NULL AS INTEGER))) ORDER BY 0.9996387442802236  NULLS FIRST);
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c63 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(NULL AS INTEGER))) WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY 0.9996387442802236  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c63 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(NULL AS INTEGER))) ORDER BY 0.9996387442802236  NULLS FIRST);
SELECT ALL * FROM vt0, t1 FULL OUTER JOIN vt1 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE t1.c63 END) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (CAST(NULL AS INTEGER))) WHERE (CAST(CAST(t1.c0 AS TEXT) AS BLOB)) ORDER BY 0.9996387442802236  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((-21409961 IN (((((((((((((t1.c63)AND(t1.c63)))OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c0)), ((vt0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((-21409961 IN (((((((((((((t1.c63)AND(t1.c63)))OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c0)), ((vt0.c0)<(t1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((-21409961 IN (((((((((((((t1.c63)AND(t1.c63)))OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c0)), ((vt0.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((-21409961 IN (((((((((((((t1.c63)AND(t1.c63)))OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c0)), ((vt0.c0)<(t1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE ((-21409961 IN (((((((((((((t1.c63)AND(t1.c63)))OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt1.c0)), ((vt0.c0)<(t1.c0)))));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON (((- (t1.c63))) BETWEEN ((t1.c63 IN ())) AND (IFNULL(DISTINCT vt1.c0, t1.c0))) WHERE (CAST(((vt1.c0)|(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)|(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON (((- (t1.c63))) BETWEEN ((t1.c63 IN ())) AND (IFNULL(DISTINCT vt1.c0, t1.c0))));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON (((- (t1.c63))) BETWEEN ((t1.c63 IN ())) AND (IFNULL(DISTINCT vt1.c0, t1.c0))) WHERE (CAST(((vt1.c0)|(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)|(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON (((- (t1.c63))) BETWEEN ((t1.c63 IN ())) AND (IFNULL(DISTINCT vt1.c0, t1.c0))));
SELECT ALL * FROM t1 CROSS JOIN vt1 ON (((- (t1.c63))) BETWEEN ((t1.c63 IN ())) AND (IFNULL(DISTINCT vt1.c0, t1.c0))) WHERE (CAST(((vt1.c0)|(vt1.c0)) AS TEXT));
SELECT ALL * FROM t1 INNER JOIN vt1 ON PRINTF(((t1.c0) NOT NULL), CAST(t1.c63 AS BLOB), ((vt1.c0) NOT NULL)) WHERE (((((t1.c63)-(t1.c63))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c63)-(t1.c63))) ISNULL)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON PRINTF(((t1.c0) NOT NULL), CAST(t1.c63 AS BLOB), ((vt1.c0) NOT NULL)));
SELECT ALL * FROM t1 INNER JOIN vt1 ON PRINTF(((t1.c0) NOT NULL), CAST(t1.c63 AS BLOB), ((vt1.c0) NOT NULL)) WHERE (((((t1.c63)-(t1.c63))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c63)-(t1.c63))) ISNULL)) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON PRINTF(((t1.c0) NOT NULL), CAST(t1.c63 AS BLOB), ((vt1.c0) NOT NULL)));
SELECT ALL * FROM t1 INNER JOIN vt1 ON PRINTF(((t1.c0) NOT NULL), CAST(t1.c63 AS BLOB), ((vt1.c0) NOT NULL)) WHERE (((((t1.c63)-(t1.c63))) ISNULL));
SELECT ALL COUNT(*) FROM t1, vt0 INDEXED BY i75 WHERE (t1.c0) ORDER BY ((((((t1.c63) BETWEEN (t1.c63) AND (t1.c63)))AND(t1.c63 COLLATE RTRIM)))AND(CASE t1.c63  WHEN t1.c63 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0 INDEXED BY i75 ORDER BY ((((((t1.c63) BETWEEN (t1.c63) AND (t1.c63)))AND(t1.c63 COLLATE RTRIM)))AND(CASE t1.c63  WHEN t1.c63 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 INDEXED BY i75 WHERE (t1.c0) ORDER BY ((((((t1.c63) BETWEEN (t1.c63) AND (t1.c63)))AND(t1.c63 COLLATE RTRIM)))AND(CASE t1.c63  WHEN t1.c63 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, vt0 INDEXED BY i75 ORDER BY ((((((t1.c63) BETWEEN (t1.c63) AND (t1.c63)))AND(t1.c63 COLLATE RTRIM)))AND(CASE t1.c63  WHEN t1.c63 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CASE ((((x'')OR(vt1.c0)))AND(t1.c63))  WHEN (((t1.c63)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE t1.c63  WHEN 0.15287284046865957 THEN NULL END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (t1.c0)) WHEN ((t1.c63)-(t1.c63)) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((((CAST(t1.c63 AS REAL))AND(((((((((t1.c0)AND(t1.c63)))AND('&.')))AND(vt1.c0)))OR(t1.c63)))))AND(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c63 AS REAL))AND(((((((((t1.c0)AND(t1.c63)))AND('&.')))AND(vt1.c0)))OR(t1.c63)))))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON CASE ((((x'')OR(vt1.c0)))AND(t1.c63))  WHEN (((t1.c63)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE t1.c63  WHEN 0.15287284046865957 THEN NULL END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (t1.c0)) WHEN ((t1.c63)-(t1.c63)) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CASE ((((x'')OR(vt1.c0)))AND(t1.c63))  WHEN (((t1.c63)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE t1.c63  WHEN 0.15287284046865957 THEN NULL END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (t1.c0)) WHEN ((t1.c63)-(t1.c63)) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((((CAST(t1.c63 AS REAL))AND(((((((((t1.c0)AND(t1.c63)))AND('&.')))AND(vt1.c0)))OR(t1.c63)))))AND(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c63 AS REAL))AND(((((((((t1.c0)AND(t1.c63)))AND('&.')))AND(vt1.c0)))OR(t1.c63)))))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON CASE ((((x'')OR(vt1.c0)))AND(t1.c63))  WHEN (((t1.c63)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE t1.c63  WHEN 0.15287284046865957 THEN NULL END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (t1.c0)) WHEN ((t1.c63)-(t1.c63)) THEN CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CASE ((((x'')OR(vt1.c0)))AND(t1.c63))  WHEN (((t1.c63)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE t1.c63  WHEN 0.15287284046865957 THEN NULL END WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN (t1.c0)) WHEN ((t1.c63)-(t1.c63)) THEN CAST(vt1.c0 AS NUMERIC) END WHERE (((((CAST(t1.c63 AS REAL))AND(((((((((t1.c0)AND(t1.c63)))AND('&.')))AND(vt1.c0)))OR(t1.c63)))))AND(t1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t1 WHERE (t1.c63);
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c63);
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c63);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))GLOB(((vt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))+(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((CAST(vt0.c0 AS BLOB))+(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE ((- (vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE t1.c63  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE t1.c63  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE t1.c63  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE t1.c63  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1 NOT INDEXED, vt1, vt0 WHERE ((((- (vt0.c0))) BETWEEN (((vt0.c0)OR(vt1.c0))) AND (CASE t1.c63  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t1 WHERE (((CAST(NULL AS NUMERIC))<((t1.c63 IN (t1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))<((t1.c63 IN (t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY t1.c0);
SELECT ALL * FROM t1 WHERE (((CAST(NULL AS NUMERIC))<((t1.c63 IN (t1.c0))))) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC))<((t1.c63 IN (t1.c0))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY t1.c0);
SELECT ALL * FROM t1 WHERE (((CAST(NULL AS NUMERIC))<((t1.c63 IN (t1.c0))))) ORDER BY t1.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0)&(x'')) COLLATE RTRIM WHERE (((CAST(t1.c0 AS INTEGER))!=((((t1.c0))>=((t1.c63)))))) ORDER BY CAST(((t1.c0) ISNULL) AS TEXT) ASC  NULLS LAST, CAST(((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))<>((((t1.c0))>=((t1.c63)))))) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t1 ON ((t1.c0)&(x'')) COLLATE RTRIM ORDER BY CAST(((t1.c0) ISNULL) AS TEXT) ASC  NULLS LAST, CAST(((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0)&(x'')) COLLATE RTRIM WHERE (((CAST(t1.c0 AS INTEGER))!=((((t1.c0))>=((t1.c63)))))) ORDER BY CAST(((t1.c0) ISNULL) AS TEXT) ASC  NULLS LAST, CAST(((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))<>((((t1.c0))>=((t1.c63)))))) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t1 ON ((t1.c0)&(x'')) COLLATE RTRIM ORDER BY CAST(((t1.c0) ISNULL) AS TEXT) ASC  NULLS LAST, CAST(((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON ((t1.c0)&(x'')) COLLATE RTRIM WHERE (((CAST(t1.c0 AS INTEGER))!=((((t1.c0))>=((t1.c63)))))) ORDER BY CAST(((t1.c0) ISNULL) AS TEXT) ASC  NULLS LAST, CAST(((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS TEXT));
SELECT * FROM vt0, t1 WHERE (((((t1.c63)<<(t1.c63))) NOT BETWEEN (t1.c63 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY NULLIF((~ (t1.c0)), NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)<<(t1.c63))) NOT BETWEEN (t1.c63 COLLATE BINARY) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1 ORDER BY NULLIF((~ (t1.c0)), NULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (((((t1.c63)<<(t1.c63))) NOT BETWEEN (t1.c63 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY NULLIF((~ (t1.c0)), NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)<<(t1.c63))) NOT BETWEEN (t1.c63 COLLATE BINARY) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 NOT INDEXED, t1 ORDER BY NULLIF((~ (t1.c0)), NULL)  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (((((t1.c63)<<(t1.c63))) NOT BETWEEN (t1.c63 COLLATE BINARY) AND ((vt0.c0 IN ())))) ORDER BY NULLIF((~ (t1.c0)), NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.7532057473055955 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((0.7532057473055955 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.7532057473055955 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((0.7532057473055955 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((0.7532057473055955 IN (vt1.c0)) IN ()));
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) IS FALSE)) ORDER BY (((('-1446570548')<(t1.c63))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (((('-1446570548')<(t1.c63))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) IS FALSE)) ORDER BY (((('-1446570548')<(t1.c63))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS FALSE)) IS TRUE)  as count FROM vt0, t1 ORDER BY (((('-1446570548')<(t1.c63))) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) IS FALSE)) ORDER BY (((('-1446570548')<(t1.c63))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((0.6714605478954805 IN (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.6714605478954805 IN (t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((0.6714605478954805 IN (t1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((0.6714605478954805 IN (t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (CAST((0.6714605478954805 IN (t1.c0)) AS BLOB));
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt1.c0)==(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt1.c0)=(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB)) NOT BETWEEN (((vt0.c0)>>(vt0.c0))) AND (((vt1.c0)==(vt1.c0)))));
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((x'')IS NOT(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63)) BETWEEN ((((x'')IS NOT(vt1.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((x'')IS NOT(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63)) BETWEEN ((((x'')IS NOT(vt1.c0)))) AND (((vt1.c0 IN ()))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((x'')IS NOT(vt1.c0)))) AND (((vt1.c0 IN ())))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((~ (((t1.c63)IS(t1.c63))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (0.12762146532805685) AND (vt0.c0)), CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.14353061530105737 THEN vt0.c0 WHEN t1.c63 THEN vt1.c0 ELSE t1.c63 END, '1325230353')) AND ((((vt0.c0)*(NULL)), (+ (t1.c0)), json_array_length(vt0.c0, t1.c0)))) DESC  NULLS FIRST, ((t1.c63) ISNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c63)IS(t1.c63))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (0.12762146532805685) AND (vt0.c0)), CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.14353061530105737 THEN vt0.c0 WHEN t1.c63 THEN vt1.c0 ELSE t1.c63 END, '1325230353')) AND ((((vt0.c0)*(NULL)), (+ (t1.c0)), json_array_length(vt0.c0, t1.c0)))) DESC  NULLS FIRST, ((t1.c63) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((~ (((t1.c63)IS(t1.c63))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (0.12762146532805685) AND (vt0.c0)), CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.14353061530105737 THEN vt0.c0 WHEN t1.c63 THEN vt1.c0 ELSE t1.c63 END, '1325230353')) AND ((((vt0.c0)*(NULL)), (+ (t1.c0)), json_array_length(vt0.c0, t1.c0)))) DESC  NULLS FIRST, ((t1.c63) ISNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c63)IS(t1.c63))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (0.12762146532805685) AND (vt0.c0)), CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.14353061530105737 THEN vt0.c0 WHEN t1.c63 THEN vt1.c0 ELSE t1.c63 END, '1325230353')) AND ((((vt0.c0)*(NULL)), (+ (t1.c0)), json_array_length(vt0.c0, t1.c0)))) DESC  NULLS FIRST, ((t1.c63) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE ((~ (((t1.c63)IS(t1.c63))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((t1.c0) NOT BETWEEN (0.12762146532805685) AND (vt0.c0)), CASE vt0.c0  WHEN t1.c0 THEN vt0.c0 WHEN 0.14353061530105737 THEN vt0.c0 WHEN t1.c63 THEN vt1.c0 ELSE t1.c63 END, '1325230353')) AND ((((vt0.c0)*(NULL)), (+ (t1.c0)), json_array_length(vt0.c0, t1.c0)))) DESC  NULLS FIRST, ((t1.c63) ISNULL) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)<<(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)<<(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)<<(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)<<(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((vt1.c0)<<(vt1.c0))))<=((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))))) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((vt0.c0)<(vt0.c0))))) ORDER BY (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) DESC, NULL  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<>((vt0.c0))) THEN vt0.c0 ELSE LIKELY(vt0.c0) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<>((vt0.c0))) THEN vt0.c0 ELSE LIKELY(vt0.c0) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN vt0.c0 ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<>((vt0.c0))) THEN vt0.c0 ELSE LIKELY(vt0.c0) END) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(CAST(vt1.c0 AS REAL)))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(CAST(vt1.c0 AS REAL)))  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(CAST(vt1.c0 AS REAL)))  NULLS FIRST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(CAST(vt1.c0 AS REAL)))  NULLS FIRST, vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(CAST(vt1.c0 AS REAL)))  NULLS FIRST, vt1.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL))) WHERE (((((((((((vt1.c0)GLOB(vt0.c0)))OR((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOTNULL))))AND(vt0.c0)))AND(((vt1.c0) BETWEEN (0.029477266708340832) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)GLOB(vt0.c0)))OR((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOTNULL))))AND(vt0.c0)))AND(((vt1.c0) BETWEEN (0.029477266708340832) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL))));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL))) WHERE (((((((((((vt1.c0)GLOB(vt0.c0)))OR((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOTNULL))))AND(vt0.c0)))AND(((vt1.c0) BETWEEN (0.029477266708340832) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)GLOB(vt0.c0)))OR((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOTNULL))))AND(vt0.c0)))AND(((vt1.c0) BETWEEN (0.029477266708340832) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON TRIM(((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL))));
SELECT * FROM vt1 INNER JOIN vt0 ON TRIM(((vt0.c0) NOT BETWEEN (vt1.c0) AND (NULL))) WHERE (((((((((((vt1.c0)GLOB(vt0.c0)))OR((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0))))))OR(((vt1.c0) NOTNULL))))AND(vt0.c0)))AND(((vt1.c0) BETWEEN (0.029477266708340832) AND (vt1.c0)))));
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c63, t1.c0, t1.c63)) BETWEEN ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NULL IN ()), (NOT (vt1.c0)))) AND ((t1.c0, (t1.c63 IN (t1.c0)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c63, t1.c0, t1.c63)) BETWEEN ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NULL IN ()), (NOT (vt1.c0)))) AND ((t1.c0, (t1.c63 IN (t1.c0)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c63, t1.c0, t1.c63)) BETWEEN ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NULL IN ()), (NOT (vt1.c0)))) AND ((t1.c0, (t1.c63 IN (t1.c0)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((t1.c63, t1.c0, t1.c63)) BETWEEN ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NULL IN ()), (NOT (vt1.c0)))) AND ((t1.c0, (t1.c63 IN (t1.c0)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE ((((t1.c63, t1.c0, t1.c63)) BETWEEN ((((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (NULL IN ()), (NOT (vt1.c0)))) AND ((t1.c0, (t1.c63 IN (t1.c0)), ((((t1.c0)AND(vt1.c0)))AND(t1.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (vt1.c0) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE COLLATE RTRIM ASC, SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE COLLATE RTRIM ASC, SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (vt1.c0) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE COLLATE RTRIM ASC, SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE COLLATE RTRIM ASC, SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL WHERE (vt1.c0) ORDER BY CAST(vt1.c0 AS REAL) COLLATE NOCASE COLLATE RTRIM ASC, SQLITE_COMPILEOPTION_GET((vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((~ (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((~ (t1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON vt1.c0 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (NULL))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON vt1.c0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON vt1.c0 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (NULL))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON vt1.c0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON vt1.c0 WHERE (((t1.c0 COLLATE NOCASE) BETWEEN (vt1.c0) AND (NULL))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)IS NOT(vt0.c0)) END) ORDER BY CAST((+ (vt0.c0)) AS BLOB), CASE ((vt1.c0) NOT NULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(x'')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LIKELIHOOD(DISTINCT vt1.c0, 0.9679587979499567) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB), CASE ((vt1.c0) NOT NULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(x'')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LIKELIHOOD(DISTINCT vt1.c0, 0.9679587979499567) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)IS NOT(vt0.c0)) END) ORDER BY CAST((+ (vt0.c0)) AS BLOB), CASE ((vt1.c0) NOT NULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(x'')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LIKELIHOOD(DISTINCT vt1.c0, 0.9679587979499567) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)IS NOT(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB), CASE ((vt1.c0) NOT NULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(x'')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LIKELIHOOD(DISTINCT vt1.c0, 0.9679587979499567) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) ELSE ((vt1.c0)IS NOT(vt0.c0)) END) ORDER BY CAST((+ (vt0.c0)) AS BLOB), CASE ((vt1.c0) NOT NULL)  WHEN ((((vt1.c0)AND(vt1.c0)))AND(x'')) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE LIKELIHOOD(DISTINCT vt1.c0, 0.9679587979499567) END DESC;
SELECT * FROM vt1, vt0 WHERE ((('섳d') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('섳d') ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('섳d') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('섳d') ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((('섳d') ISNULL));
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT (~ (vt0.c0))) WHERE (((((t1.c63) NOTNULL)) NOT BETWEEN (((vt0.c0)+(t1.c0))) AND (t1.c63 COLLATE NOCASE))) ORDER BY CAST((~ (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c63) NOTNULL)) NOT BETWEEN (((vt0.c0)+(t1.c0))) AND (t1.c63 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT (~ (vt0.c0))) ORDER BY CAST((~ (t1.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT (~ (vt0.c0))) WHERE (((((t1.c63) NOTNULL)) NOT BETWEEN (((vt0.c0)+(t1.c0))) AND (t1.c63 COLLATE NOCASE))) ORDER BY CAST((~ (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t1.c63) NOTNULL)) NOT BETWEEN (((vt0.c0)+(t1.c0))) AND (t1.c63 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT (~ (vt0.c0))) ORDER BY CAST((~ (t1.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN vt1 ON UNLIKELY(DISTINCT (~ (vt0.c0))) WHERE (((((t1.c63) NOTNULL)) NOT BETWEEN (((vt0.c0)+(t1.c0))) AND (t1.c63 COLLATE NOCASE))) ORDER BY CAST((~ (t1.c0)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL) ORDER BY ((((((0.7717707189154707)AND(t1.c63)))OR(t1.c0))) IS TRUE) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((0.7717707189154707)AND(t1.c63)))OR(t1.c0))) IS TRUE) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL) ORDER BY ((((((0.7717707189154707)AND(t1.c63)))OR(t1.c0))) IS TRUE) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((0.7717707189154707)AND(t1.c63)))OR(t1.c0))) IS TRUE) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (NULL) ORDER BY ((((((0.7717707189154707)AND(t1.c63)))OR(t1.c0))) IS TRUE) ASC  NULLS FIRST, ((CASE vt0.c0  WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c63) IS TRUE))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c63) IS TRUE))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c63))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c63) IS TRUE))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c63) IS TRUE))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c63))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c63) IS TRUE))OR(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))))OR(t1.c63)));
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c63))) NOT BETWEEN (ABS(t1.c0)) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c63))) NOT BETWEEN (ABS(t1.c0)) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c63))) NOT BETWEEN (ABS(t1.c0)) AND (CAST(t1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c63))) NOT BETWEEN (ABS(t1.c0)) AND (CAST(t1.c0 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((~ (t1.c63))) NOT BETWEEN (ABS(t1.c0)) AND (CAST(t1.c0 AS BLOB))));
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) BETWEEN (((NULL)<<(vt1.c0))) AND (x''))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0)) BETWEEN (((NULL)<<(vt1.c0))) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((~ (vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) BETWEEN (((NULL)<<(vt1.c0))) AND (x''))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((~ (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, vt1.c0)) BETWEEN (((NULL)<<(vt1.c0))) AND (x''))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((~ (vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((IFNULL(vt1.c0, vt1.c0)) BETWEEN (((NULL)<<(vt1.c0))) AND (x''))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<<((~ (vt1.c0)))) DESC;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((0.5410227525518669) ISNULL) RIGHT OUTER JOIN vt0 ON (~ (((t1.c63) IS FALSE))) WHERE (((((vt0.c0) ISNULL))>=(NULL))) ORDER BY (~ ('-50825538')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))>=(NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((0.5410227525518669) ISNULL) RIGHT OUTER JOIN vt0 ON (~ (((t1.c63) IS FALSE))) ORDER BY (~ ('-50825538')) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((0.5410227525518669) ISNULL) RIGHT OUTER JOIN vt0 ON (~ (((t1.c63) IS FALSE))) WHERE (((((vt0.c0) ISNULL))>=(NULL))) ORDER BY (~ ('-50825538')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))>=(NULL))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((0.5410227525518669) ISNULL) RIGHT OUTER JOIN vt0 ON (~ (((t1.c63) IS FALSE))) ORDER BY (~ ('-50825538')) DESC);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((0.5410227525518669) ISNULL) RIGHT OUTER JOIN vt0 ON (~ (((t1.c63) IS FALSE))) WHERE (((((vt0.c0) ISNULL))>=(NULL))) ORDER BY (~ ('-50825538')) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('716489701')GLOB(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((('716489701')GLOB(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('716489701')GLOB(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((('716489701')GLOB(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((('716489701')GLOB(CAST(vt0.c0 AS BLOB)))) ORDER BY CAST(((vt0.c0)GLOB(vt1.c0)) AS REAL) ASC;
SELECT * FROM vt0, t1, vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(NULL))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(NULL))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)||(NULL)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (TRIM('-1998011947', t1.c63) IN ()) FULL OUTER JOIN vt0 ON NULL WHERE (t1.c63) ORDER BY (((t1.c63)) BETWEEN (((('>\nlKatn睰') NOT NULL))) AND ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))))) ASC  NULLS LAST, ((((NULL)AND((t1.c0 IN ()))))OR(t1.c63)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (TRIM('-1998011947', t1.c63) IN ()) FULL OUTER JOIN vt0 ON NULL ORDER BY (((t1.c63)) BETWEEN (((('>\nlKatn睰') NOT NULL))) AND ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))))) ASC  NULLS LAST, ((((NULL)AND((t1.c0 IN ()))))OR(t1.c63)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (TRIM('-1998011947', t1.c63) IN ()) FULL OUTER JOIN vt0 ON NULL WHERE (t1.c63) ORDER BY (((t1.c63)) BETWEEN (((('>\nlKatn睰') NOT NULL))) AND ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))))) ASC  NULLS LAST, ((((NULL)AND((t1.c0 IN ()))))OR(t1.c63)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (TRIM('-1998011947', t1.c63) IN ()) FULL OUTER JOIN vt0 ON NULL ORDER BY (((t1.c63)) BETWEEN (((('>\nlKatn睰') NOT NULL))) AND ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))))) ASC  NULLS LAST, ((((NULL)AND((t1.c0 IN ()))))OR(t1.c63)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (TRIM('-1998011947', t1.c63) IN ()) FULL OUTER JOIN vt0 ON NULL WHERE (t1.c63) ORDER BY (((t1.c63)) BETWEEN (((('>\nlKatn睰') NOT NULL))) AND ((((((vt0.c0)OR(t1.c0)))AND(vt1.c0))))) ASC  NULLS LAST, ((((NULL)AND((t1.c0 IN ()))))OR(t1.c63)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE ((((NULL) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((NULL) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((NULL) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY ((((t1.c63) NOT BETWEEN ('MVS J') AND (vt0.c0)))&(((t1.c63) NOTNULL))) ASC  NULLS LAST, ((((CAST(vt1.c0 AS NUMERIC))OR(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((vt0.c0) BETWEEN (t1.c63) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((t1.c63) NOT BETWEEN ('MVS J') AND (vt0.c0)))&(((t1.c63) NOTNULL))) ASC  NULLS LAST, ((((CAST(vt1.c0 AS NUMERIC))OR(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((vt0.c0) BETWEEN (t1.c63) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY ((((t1.c63) NOT BETWEEN ('MVS J') AND (vt0.c0)))&(((t1.c63) NOTNULL))) ASC  NULLS LAST, ((((CAST(vt1.c0 AS NUMERIC))OR(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((vt0.c0) BETWEEN (t1.c63) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((t1.c63) NOT BETWEEN ('MVS J') AND (vt0.c0)))&(((t1.c63) NOTNULL))) ASC  NULLS LAST, ((((CAST(vt1.c0 AS NUMERIC))OR(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((vt0.c0) BETWEEN (t1.c63) AND (t1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (NULL) ORDER BY ((((t1.c63) NOT BETWEEN ('MVS J') AND (vt0.c0)))&(((t1.c63) NOTNULL))) ASC  NULLS LAST, ((((CAST(vt1.c0 AS NUMERIC))OR(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN t1.c0 THEN t1.c0 END)))OR(((vt0.c0) BETWEEN (t1.c63) AND (t1.c0)))) DESC  NULLS FIRST;
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST((~ (t1.c63)) AS REAL) WHERE (LIKELIHOOD(((t1.c63)>=(vt0.c0)), 0.7700476952021695));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t1.c63)>=(vt0.c0)), 0.7700476952021695)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST((~ (t1.c63)) AS REAL));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST((~ (t1.c63)) AS REAL) WHERE (LIKELIHOOD(((t1.c63)>=(vt0.c0)), 0.7700476952021695));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((t1.c63)>=(vt0.c0)), 0.7700476952021695)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON CAST((~ (t1.c63)) AS REAL));
SELECT * FROM t1 FULL OUTER JOIN vt0 ON CAST((~ (t1.c63)) AS REAL) WHERE (LIKELIHOOD(((t1.c63)>=(vt0.c0)), 0.7700476952021695));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), '')) AND (((((vt1.c0))>((vt1.c0))), ((vt1.c0)||(vt1.c0)), x'')))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0)=(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), '')) AND (((((vt1.c0))>((vt1.c0))), ((vt1.c0)||(vt1.c0)), x'')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0)=(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), '')) AND (((((vt1.c0))>((vt1.c0))), ((vt1.c0)||(vt1.c0)), x'')))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0)=(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), '')) AND (((((vt1.c0))>((vt1.c0))), ((vt1.c0)||(vt1.c0)), x'')))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0)=(vt1.c0)) END);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), '')) AND (((((vt1.c0))>((vt1.c0))), ((vt1.c0)||(vt1.c0)), x'')))) ORDER BY ((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), CASE WHEN ((vt1.c0) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0)=(vt1.c0)) END;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN 'G)MA!' END))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC, ((CAST(vt0.c0 AS TEXT))-(0.5766971623565691))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN 'G)MA!' END))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC, ((CAST(vt0.c0 AS TEXT))-(0.5766971623565691))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN 'G)MA!' END))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC, ((CAST(vt0.c0 AS TEXT))-(0.5766971623565691))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN 'G)MA!' END))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC, ((CAST(vt0.c0 AS TEXT))-(0.5766971623565691))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN 'G)MA!' END))) ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC, ((CAST(vt0.c0 AS TEXT))-(0.5766971623565691))  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((((t1.c63)*(t1.c0))) NOT BETWEEN ((t1.c0 IN (vt0.c0, t1.c63))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY CAST(t1.c63 AS BLOB) DESC  NULLS FIRST, ((((t1.c63)*(t1.c0))) ISNULL) DESC  NULLS LAST, (~ (((((t1.c63)AND(vt0.c0)))OR(t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)*(t1.c0))) NOT BETWEEN ((t1.c0 IN (vt0.c0, t1.c63))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(t1.c63 AS BLOB) DESC  NULLS FIRST, ((((t1.c63)*(t1.c0))) ISNULL) DESC  NULLS LAST, (~ (((((t1.c63)AND(vt0.c0)))OR(t1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((t1.c63)*(t1.c0))) NOT BETWEEN ((t1.c0 IN (vt0.c0, t1.c63))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY CAST(t1.c63 AS BLOB) DESC  NULLS FIRST, ((((t1.c63)*(t1.c0))) ISNULL) DESC  NULLS LAST, (~ (((((t1.c63)AND(vt0.c0)))OR(t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)*(t1.c0))) NOT BETWEEN ((t1.c0 IN (vt0.c0, t1.c63))) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 ORDER BY CAST(t1.c63 AS BLOB) DESC  NULLS FIRST, ((((t1.c63)*(t1.c0))) ISNULL) DESC  NULLS LAST, (~ (((((t1.c63)AND(vt0.c0)))OR(t1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0, t1 WHERE (((((t1.c63)*(t1.c0))) NOT BETWEEN ((t1.c0 IN (vt0.c0, t1.c63))) AND (vt0.c0 COLLATE RTRIM))) ORDER BY CAST(t1.c63 AS BLOB) DESC  NULLS FIRST, ((((t1.c63)*(t1.c0))) ISNULL) DESC  NULLS LAST, (~ (((((t1.c63)AND(vt0.c0)))OR(t1.c0)))) ASC  NULLS LAST;
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL))+(((t1.c0)>(vt1.c0))))) ORDER BY ((0.2933706252998075) BETWEEN (NULL) AND (t1.c0)) COLLATE NOCASE  NULLS LAST, CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM ASC, (((0.9797160270220905) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL))+(((t1.c0)>(vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((0.2933706252998075) BETWEEN (NULL) AND (t1.c0)) COLLATE NOCASE  NULLS LAST, CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM ASC, (((0.9797160270220905) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL))+(((t1.c0)>(vt1.c0))))) ORDER BY ((0.2933706252998075) BETWEEN (NULL) AND (t1.c0)) COLLATE NOCASE  NULLS LAST, CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM ASC, (((0.9797160270220905) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL))+(((t1.c0)>(vt1.c0))))) IS TRUE)  as count FROM t1, vt1 ORDER BY ((0.2933706252998075) BETWEEN (NULL) AND (t1.c0)) COLLATE NOCASE  NULLS LAST, CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM ASC, (((0.9797160270220905) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL))+(((t1.c0)>(vt1.c0))))) ORDER BY ((0.2933706252998075) BETWEEN (NULL) AND (t1.c0)) COLLATE NOCASE  NULLS LAST, CAST(t1.c0 AS BLOB) COLLATE NOCASE COLLATE RTRIM ASC, (((0.9797160270220905) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((LIKE(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((LIKE(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((LIKE(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((LIKE(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND ((LIKE(vt0.c0, vt0.c0)))));
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (-1.868229627E9)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN (t1.c0) AND (-1.868229627E9)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (-1.868229627E9)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0) BETWEEN (t1.c0) AND (-1.868229627E9)) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (-1.868229627E9)) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) LEFT OUTER JOIN vt1 ON (((t1.c63)>>('1519417182')) IN ((t1.c0 IN ()))) WHERE ((((t1.c63)) BETWEEN ((t1.c63 COLLATE RTRIM)) AND ((((t1.c63) NOTNULL))))) ORDER BY (((t1.c63, ((vt0.c0)IS(vt0.c0)), (((t1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((((((vt0.c0)AND(t1.c0)))OR(t1.c63)), ((t1.c63)OR(vt0.c0)), (-913041786 IN (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c63)) BETWEEN ((t1.c63 COLLATE RTRIM)) AND ((((t1.c63) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) LEFT OUTER JOIN vt1 ON (((t1.c63)>>('1519417182')) IN ((t1.c0 IN ()))) ORDER BY (((t1.c63, ((vt0.c0)IS(vt0.c0)), (((t1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((((((vt0.c0)AND(t1.c0)))OR(t1.c63)), ((t1.c63)OR(vt0.c0)), (-913041786 IN (vt1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) LEFT OUTER JOIN vt1 ON (((t1.c63)>>('1519417182')) IN ((t1.c0 IN ()))) WHERE ((((t1.c63)) BETWEEN ((t1.c63 COLLATE RTRIM)) AND ((((t1.c63) NOTNULL))))) ORDER BY (((t1.c63, ((vt0.c0)IS(vt0.c0)), (((t1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((((((vt0.c0)AND(t1.c0)))OR(t1.c63)), ((t1.c63)OR(vt0.c0)), (-913041786 IN (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c63)) BETWEEN ((t1.c63 COLLATE RTRIM)) AND ((((t1.c63) NOTNULL))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) LEFT OUTER JOIN vt1 ON (((t1.c63)>>('1519417182')) IN ((t1.c0 IN ()))) ORDER BY (((t1.c63, ((vt0.c0)IS(vt0.c0)), (((t1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))<=((((((vt0.c0)AND(t1.c0)))OR(t1.c63)), ((t1.c63)OR(vt0.c0)), (-913041786 IN (vt1.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (((((((t1.c0))>((x'8504'))))OR((vt1.c0 IN ()))))OR(((t1.c63) ISNULL))) WHERE ((~ ((t1.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c63 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (((((((t1.c0))>((x'8504'))))OR((vt1.c0 IN ()))))OR(((t1.c63) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (((((((t1.c0))>((x'8504'))))OR((vt1.c0 IN ()))))OR(((t1.c63) ISNULL))) WHERE ((~ ((t1.c63 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c63 IN ())))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (((((((t1.c0))>((x'8504'))))OR((vt1.c0 IN ()))))OR(((t1.c63) ISNULL))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (((((((t1.c0))>((x'8504'))))OR((vt1.c0 IN ()))))OR(((t1.c63) ISNULL))) WHERE ((~ ((t1.c63 IN ()))));
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c63)) NOT BETWEEN ((((t1.c0)IS NOT(t1.c63)))) AND ((CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63)) NOT BETWEEN ((((t1.c0)IS NOT(t1.c63)))) AND ((CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c63)) NOT BETWEEN ((((t1.c0)IS NOT(t1.c63)))) AND ((CAST(t1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63)) NOT BETWEEN ((((t1.c0)IS NOT(t1.c63)))) AND ((CAST(t1.c0 AS REAL))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c63)) NOT BETWEEN ((((t1.c0)IS NOT(t1.c63)))) AND ((CAST(t1.c0 AS REAL)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN t1.c63 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL) CROSS JOIN t1 ON vt1.c0 WHERE ((((- (t1.c63)))>(NULL))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c63)))>(NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN t1.c63 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL) CROSS JOIN t1 ON vt1.c0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN t1.c63 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL) CROSS JOIN t1 ON vt1.c0 WHERE ((((- (t1.c63)))>(NULL))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c63)))>(NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN t1.c63 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL) CROSS JOIN t1 ON vt1.c0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CASE WHEN t1.c0 THEN t1.c63 WHEN vt1.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) ISNULL) CROSS JOIN t1 ON vt1.c0 WHERE ((((- (t1.c63)))>(NULL))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)<=(t1.c0)))AND(((824854385) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(HEX(t1.c63)))) ORDER BY t1.c63;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)<=(t1.c0)))AND(((824854385) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(HEX(t1.c63)))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c63);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)<=(t1.c0)))AND(((824854385) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(HEX(t1.c63)))) ORDER BY t1.c63;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)<=(t1.c0)))AND(((824854385) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(HEX(t1.c63)))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c63);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((t1.c0)<=(t1.c0)))AND(((824854385) NOT BETWEEN (vt0.c0) AND (t1.c0)))))OR(HEX(t1.c63)))) ORDER BY t1.c63;
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((((((((1131981812)AND(NULL)))OR(t1.c63)))OR(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))))OR(CAST(t1.c63 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((((1131981812)AND(NULL)))OR(t1.c63)))OR(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))))OR(CAST(t1.c63 AS REAL)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((((((((1131981812)AND(NULL)))OR(t1.c63)))OR(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))))OR(CAST(t1.c63 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY ((((((((1131981812)AND(NULL)))OR(t1.c63)))OR(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))))OR(CAST(t1.c63 AS REAL)))  NULLS LAST);
SELECT ALL * FROM t1 WHERE (t1.c0) ORDER BY ((((((((1131981812)AND(NULL)))OR(t1.c63)))OR(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))))OR(CAST(t1.c63 AS REAL)))  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((- (t1.c0))) AND (((x'')!=(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((- (t1.c0))) AND (((x'')<>(t1.c63))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((- (t1.c0))) AND (((x'')!=(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((- (t1.c0))) AND (((x'')<>(t1.c63))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((UPPER(DISTINCT vt0.c0)) NOT BETWEEN ((- (t1.c0))) AND (((x'')!=(t1.c63)))));
SELECT * FROM vt0, vt1 WHERE (((NULL) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x''))) AND (UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x''))) AND (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((NULL) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x''))) AND (UPPER(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x''))) AND (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((NULL) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (x''))) AND (UPPER(DISTINCT vt1.c0))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')AND(vt0.c0)))AND(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(vt0.c0)))AND(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')AND(vt0.c0)))AND(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(vt0.c0)))AND(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((x'')AND(vt0.c0)))AND(NULL)) COLLATE BINARY);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((t1.c0)=(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)==(t1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((t1.c0)=(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0)==(t1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (CAST(((t1.c0)=(t1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((t1.c63))!=((vt0.c0))) COLLATE RTRIM WHERE (COALESCE(DISTINCT vt0.c0, t1.c63) COLLATE NOCASE) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END IN (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0, t1.c63) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((t1.c63))<>((vt0.c0))) COLLATE RTRIM ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END IN (x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((t1.c63))!=((vt0.c0))) COLLATE RTRIM WHERE (COALESCE(DISTINCT vt0.c0, t1.c63) COLLATE NOCASE) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END IN (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT vt0.c0, t1.c63) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((t1.c63))<>((vt0.c0))) COLLATE RTRIM ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END IN (x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((t1.c63))!=((vt0.c0))) COLLATE RTRIM WHERE (COALESCE(DISTINCT vt0.c0, t1.c63) COLLATE NOCASE) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END IN (x''))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (LIKELY(DISTINCT (((t1.c63)) BETWEEN ((0.863631615945635)) AND ((vt0.c0))))) ORDER BY (json_array_length(t1.c63, vt0.c0) IN (((vt0.c0) NOT NULL), (((t1.c63))>=((t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((t1.c63)) BETWEEN ((0.863631615945635)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (json_array_length(t1.c63, vt0.c0) IN (((vt0.c0) NOT NULL), (((t1.c63))>=((t1.c0))))) ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (LIKELY(DISTINCT (((t1.c63)) BETWEEN ((0.863631615945635)) AND ((vt0.c0))))) ORDER BY (json_array_length(t1.c63, vt0.c0) IN (((vt0.c0) NOT NULL), (((t1.c63))>=((t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((t1.c63)) BETWEEN ((0.863631615945635)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (json_array_length(t1.c63, vt0.c0) IN (((vt0.c0) NOT NULL), (((t1.c63))>=((t1.c0))))) ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (LIKELY(DISTINCT (((t1.c63)) BETWEEN ((0.863631615945635)) AND ((vt0.c0))))) ORDER BY (json_array_length(t1.c63, vt0.c0) IN (((vt0.c0) NOT NULL), (((t1.c63))>=((t1.c0))))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))/(((vt1.c0) ISNULL))));
SELECT * FROM t1, vt1 WHERE ((t1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((t1.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE ((t1.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((303592421)OR(x'')))OR(((vt0.c0)|(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) IS TRUE)))) ORDER BY '1922379090' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((303592421)OR(x'')))OR(((vt0.c0)|(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY '1922379090' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((303592421)OR(x'')))OR(((vt0.c0)|(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) IS TRUE)))) ORDER BY '1922379090' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((303592421)OR(x'')))OR(((vt0.c0)|(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY '1922379090' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((303592421)OR(x'')))OR(((vt0.c0)|(vt0.c0)))))AND(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0) IS TRUE)))) ORDER BY '1922379090' ASC;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY (- (NULLIF(vt0.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (- (NULLIF(vt0.c0, vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY (- (NULLIF(vt0.c0, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (- (NULLIF(vt0.c0, vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY (- (NULLIF(vt0.c0, vt1.c0)))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*((~ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*((~ (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR(vt0.c0 COLLATE NOCASE)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))*((~ (vt0.c0)))) ASC;
SELECT * FROM t1 WHERE (((x'' COLLATE RTRIM)==(t1.c63)));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)=(t1.c63))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'' COLLATE RTRIM)==(t1.c63)));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE RTRIM)=(t1.c63))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((x'' COLLATE RTRIM)==(t1.c63)));
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) ASC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) ASC);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY ((CAST(vt1.c0 AS INTEGER)) ISNULL) ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE (648606269) ORDER BY ((((t1.c0) IS FALSE))>>(CAST(t1.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((648606269) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) IS FALSE))>>(CAST(t1.c63 AS TEXT))));
SELECT COUNT(*) FROM vt0, t1 WHERE (648606269) ORDER BY ((((t1.c0) IS FALSE))>>(CAST(t1.c63 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((648606269) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) IS FALSE))>>(CAST(t1.c63 AS TEXT))));
SELECT COUNT(*) FROM vt0, t1 WHERE (648606269) ORDER BY ((((t1.c0) IS FALSE))>>(CAST(t1.c63 AS TEXT)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(x''))) ORDER BY ((((vt0.c0)%(NULL)))IS((((vt0.c0))>((NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(NULL)))IS((((vt0.c0))>((NULL))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(x''))) ORDER BY ((((vt0.c0)%(NULL)))IS((((vt0.c0))>((NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))==(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(NULL)))IS((((vt0.c0))>((NULL))))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))=(x''))) ORDER BY ((((vt0.c0)%(NULL)))IS((((vt0.c0))>((NULL)))));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((vt0.c0) NOTNULL)) ORDER BY 0.15919611216268326 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) ORDER BY 0.15919611216268326 COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((vt0.c0) NOTNULL)) ORDER BY 0.15919611216268326 COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) ORDER BY 0.15919611216268326 COLLATE RTRIM DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0)!=(vt0.c0)) IN ()) WHERE (((vt0.c0) NOTNULL)) ORDER BY 0.15919611216268326 COLLATE RTRIM DESC;
SELECT * FROM vt1, vt0, t1 WHERE (((NULLIF(t1.c63, '183068425'))==(((vt1.c0)!=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c63, '183068425'))=(((vt1.c0)!=(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((NULLIF(t1.c63, '183068425'))==(((vt1.c0)!=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c63, '183068425'))=(((vt1.c0)!=(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (((NULLIF(t1.c63, '183068425'))==(((vt1.c0)!=(t1.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON t1.c0 LEFT OUTER JOIN vt1 ON CASE WHEN t1.c63 THEN NULL ELSE t1.c63 END COLLATE BINARY WHERE ((((vt0.c0 IN (t1.c63))) NOT BETWEEN (CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t1.c63))) NOT BETWEEN (CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0 LEFT OUTER JOIN vt1 ON CASE WHEN t1.c63 THEN NULL ELSE t1.c63 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON t1.c0 LEFT OUTER JOIN vt1 ON CASE WHEN t1.c63 THEN NULL ELSE t1.c63 END COLLATE BINARY WHERE ((((vt0.c0 IN (t1.c63))) NOT BETWEEN (CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END) AND ((+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t1.c63))) NOT BETWEEN (CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END) AND ((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0 LEFT OUTER JOIN vt1 ON CASE WHEN t1.c63 THEN NULL ELSE t1.c63 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON t1.c0 LEFT OUTER JOIN vt1 ON CASE WHEN t1.c63 THEN NULL ELSE t1.c63 END COLLATE BINARY WHERE ((((vt0.c0 IN (t1.c63))) NOT BETWEEN (CASE t1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END) AND ((+ (vt1.c0)))));
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (CAST(x'' AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (x'db11' COLLATE BINARY) ORDER BY CAST((vt1.c0 IN (t1.c63, t1.c0)) AS INTEGER) ASC, ((((CAST(t1.c0 AS TEXT))OR(vt1.c0)))AND((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'db11' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST((vt1.c0 IN (t1.c63, t1.c0)) AS INTEGER) ASC, ((((CAST(t1.c0 AS TEXT))OR(vt1.c0)))AND((~ (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (x'db11' COLLATE BINARY) ORDER BY CAST((vt1.c0 IN (t1.c63, t1.c0)) AS INTEGER) ASC, ((((CAST(t1.c0 AS TEXT))OR(vt1.c0)))AND((~ (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((x'db11' COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST((vt1.c0 IN (t1.c63, t1.c0)) AS INTEGER) ASC, ((((CAST(t1.c0 AS TEXT))OR(vt1.c0)))AND((~ (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (x'db11' COLLATE BINARY) ORDER BY CAST((vt1.c0 IN (t1.c63, t1.c0)) AS INTEGER) ASC, ((((CAST(t1.c0 AS TEXT))OR(vt1.c0)))AND((~ (vt0.c0)))) DESC;
SELECT COUNT(*) FROM t1 WHERE (((((NULL) NOT BETWEEN (t1.c63) AND (t1.c63))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (t1.c63) AND (t1.c63))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((NULL) NOT BETWEEN (t1.c63) AND (t1.c63))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (t1.c63) AND (t1.c63))) IS FALSE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((((NULL) NOT BETWEEN (t1.c63) AND (t1.c63))) IS FALSE));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t1 ON ((t1.c63 IN (vt0.c0)) IN ()) WHERE (HEX(DISTINCT CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t1 ON ((t1.c63 IN (vt0.c0)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t1 ON ((t1.c63 IN (vt0.c0)) IN ()) WHERE (HEX(DISTINCT CAST(t1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CAST(t1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t1 ON ((t1.c63 IN (vt0.c0)) IN ()));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN t1 ON ((t1.c63 IN (vt0.c0)) IN ()) WHERE (HEX(DISTINCT CAST(t1.c0 AS INTEGER)));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE (LOWER(((NULL)+(vt0.c0)))) ORDER BY t1.c63, CAST(((t1.c0) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LOWER(((NULL)+(vt0.c0)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY t1.c63, CAST(((t1.c0) IS TRUE) AS INTEGER));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE (LOWER(((NULL)+(vt0.c0)))) ORDER BY t1.c63, CAST(((t1.c0) IS TRUE) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((LOWER(((NULL)+(vt0.c0)))) IS TRUE)  as count FROM t1 NATURAL JOIN vt0 ORDER BY t1.c63, CAST(((t1.c0) IS TRUE) AS INTEGER));
SELECT ALL * FROM t1 NATURAL JOIN vt0 WHERE (LOWER(((NULL)+(vt0.c0)))) ORDER BY t1.c63, CAST(((t1.c0) IS TRUE) AS INTEGER);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))*(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c0)))*(((vt0.c0) NOTNULL))));
SELECT ALL * FROM t1 WHERE (CAST(MIN(x'', t1.c63, t1.c0, t1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(MIN(x'', t1.c63, t1.c0, t1.c0) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(MIN(x'', t1.c63, t1.c0, t1.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(MIN(x'', t1.c63, t1.c0, t1.c0) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (CAST(MIN(x'', t1.c63, t1.c0, t1.c0) AS TEXT));
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt1.c0, t1.c0, 0Xfffffffffb89b146)) NOT BETWEEN ((t1.c0, t1.c0, t1.c63, vt0.c0, t1.c0)) AND ((vt1.c0, t1.c0, t1.c63, vt1.c0, t1.c0)))) IS TRUE)) ORDER BY ((((((t1.c63)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt0.c0, vt1.c0, t1.c0, 0Xfffffffffb89b146)) NOT BETWEEN ((t1.c0, t1.c0, t1.c63, vt0.c0, t1.c0)) AND ((vt1.c0, t1.c0, t1.c63, vt1.c0, t1.c0)))) IS TRUE)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((((((t1.c63)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)));
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt1.c0, t1.c0, 0Xfffffffffb89b146)) NOT BETWEEN ((t1.c0, t1.c0, t1.c63, vt0.c0, t1.c0)) AND ((vt1.c0, t1.c0, t1.c63, vt1.c0, t1.c0)))) IS TRUE)) ORDER BY ((((((t1.c63)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt0.c0, vt1.c0, t1.c0, 0Xfffffffffb89b146)) NOT BETWEEN ((t1.c0, t1.c0, t1.c63, vt0.c0, t1.c0)) AND ((vt1.c0, t1.c0, t1.c63, vt1.c0, t1.c0)))) IS TRUE)) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((((((t1.c63)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)));
SELECT * FROM t1, vt0, vt1 WHERE ((((((vt1.c0, vt0.c0, vt1.c0, t1.c0, 0Xfffffffffb89b146)) NOT BETWEEN ((t1.c0, t1.c0, t1.c63, vt0.c0, t1.c0)) AND ((vt1.c0, t1.c0, t1.c63, vt1.c0, t1.c0)))) IS TRUE)) ORDER BY ((((((t1.c63)OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0));
SELECT ALL * FROM vt1, vt0, t1 WHERE (COALESCE(((((t1.c63)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((1839909233)||(t1.c0)))))AND(SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((t1.c63)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((1839909233)||(t1.c0)))))AND(SQLITE_VERSION())));
SELECT ALL * FROM vt1, vt0, t1 WHERE (COALESCE(((((t1.c63)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((1839909233)||(t1.c0)))))AND(SQLITE_VERSION()));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((t1.c63)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((1839909233)||(t1.c0)))))AND(SQLITE_VERSION())));
SELECT ALL * FROM vt1, vt0, t1 WHERE (COALESCE(((((t1.c63)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) ISNULL))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(((1839909233)||(t1.c0)))))AND(SQLITE_VERSION()));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c63 END)*(LIKELY(DISTINCT t1.c0)))) ORDER BY (((((+ (NULL)))OR(((t1.c63) IS TRUE))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c63 END)*(LIKELY(DISTINCT t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((((+ (NULL)))OR(((t1.c63) IS TRUE))))OR(x'')));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c63 END)*(LIKELY(DISTINCT t1.c0)))) ORDER BY (((((+ (NULL)))OR(((t1.c63) IS TRUE))))OR(x''));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c0 THEN t1.c63 END)*(LIKELY(DISTINCT t1.c0)))) IS TRUE)  as count FROM t1 ORDER BY (((((+ (NULL)))OR(((t1.c63) IS TRUE))))OR(x'')));
SELECT * FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c63 END)*(LIKELY(DISTINCT t1.c0)))) ORDER BY (((((+ (NULL)))OR(((t1.c63) IS TRUE))))OR(x''));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (- (vt1.c0 COLLATE NOCASE)) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)/(vt1.c0)))) ORDER BY (('')>=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('')>=((~ (vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)/(vt1.c0)))) ORDER BY (('')>=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)/(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('')>=((~ (vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)/(vt1.c0)))) ORDER BY (('')>=((~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(x'')))OR(CASE '787008360'  WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(x'')))OR(CASE '787008360'  WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(x'')))OR(CASE '787008360'  WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(x'')))OR(CASE '787008360'  WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>=((vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((((((vt0.c0 IN ()))AND((vt0.c0 IN ()))))AND(x'')))OR(CASE '787008360'  WHEN vt0.c0 THEN vt0.c0 END)))OR((((vt0.c0))>=((vt0.c0))))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t1.c0 END)>(((vt0.c0) NOT NULL))) WHERE (((t1.c0)<<(NULLIF(t1.c0, t1.c63))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<<(NULLIF(t1.c0, t1.c63)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t1.c0 END)>(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t1.c0 END)>(((vt0.c0) NOT NULL))) WHERE (((t1.c0)<<(NULLIF(t1.c0, t1.c63))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<<(NULLIF(t1.c0, t1.c63)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t1.c0 END)>(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN t1.c0 END)>(((vt0.c0) NOT NULL))) WHERE (((t1.c0)<<(NULLIF(t1.c0, t1.c63))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((vt0.c0 IN ()))IS((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((vt0.c0 IN ()))IS((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))IS((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((vt0.c0 IN ()))IS((~ (vt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM t1 WHERE (((t1.c63) NOT NULL) COLLATE BINARY) ORDER BY UPPER(DISTINCT t1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY UPPER(DISTINCT t1.c0)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c63) NOT NULL) COLLATE BINARY) ORDER BY UPPER(DISTINCT t1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY UPPER(DISTINCT t1.c0)  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((t1.c63) NOT NULL) COLLATE BINARY) ORDER BY UPPER(DISTINCT t1.c0)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY x''  NULLS LAST, 0.5317540488590793 ASC  NULLS FIRST, (NOT ((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY x''  NULLS LAST, 0.5317540488590793 ASC  NULLS FIRST, (NOT ((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY x''  NULLS LAST, 0.5317540488590793 ASC  NULLS FIRST, (NOT ((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY x''  NULLS LAST, 0.5317540488590793 ASC  NULLS FIRST, (NOT ((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE (NULL) ORDER BY x''  NULLS LAST, 0.5317540488590793 ASC  NULLS FIRST, (NOT ((NOT (t1.c0))));
SELECT * FROM t1, vt0, vt1 WHERE ((((vt1.c0, x'1238', vt0.c0, vt1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)/(vt1.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c63 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((vt0.c0))!=((vt0.c0))))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c0)<<(t1.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'1238', vt0.c0, vt1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)/(vt1.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c63 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((vt0.c0))<>((vt0.c0))))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c0)<<(t1.c63)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE ((((vt1.c0, x'1238', vt0.c0, vt1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)/(vt1.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c63 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((vt0.c0))!=((vt0.c0))))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c0)<<(t1.c63))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'1238', vt0.c0, vt1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)/(vt1.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c63 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((vt0.c0))<>((vt0.c0))))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c0)<<(t1.c63)))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT * FROM t1, vt0, vt1 WHERE ((((vt1.c0, x'1238', vt0.c0, vt1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)/(vt1.c0)), (NOT (vt0.c0)), CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c63 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END, ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)), (((vt0.c0))!=((vt0.c0))))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM, (t1.c0 IN ()), ((t1.c0)<<(t1.c63))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('1627457306')OR(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('1627457306')OR(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('1627457306')OR(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((('1627457306')OR(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('1627457306')OR(vt1.c0 COLLATE RTRIM)))OR(((vt0.c0)IS NOT(vt0.c0)))));
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN vt1);
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN vt1);
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (vt0.c0);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON (+ (((t1.c0) BETWEEN (t1.c63) AND (vt1.c0)))) WHERE ((+ (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (+ (((t1.c0) BETWEEN (t1.c63) AND (vt1.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON (+ (((t1.c0) BETWEEN (t1.c63) AND (vt1.c0)))) WHERE ((+ (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (+ (((t1.c0) BETWEEN (t1.c63) AND (vt1.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON (+ (((t1.c0) BETWEEN (t1.c63) AND (vt1.c0)))) WHERE ((+ (CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('171722432') ISNULL) WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('171722432') ISNULL) ORDER BY ((CAST(vt1.c0 AS REAL))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('171722432') ISNULL) WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL))OR(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (('171722432') ISNULL) ORDER BY ((CAST(vt1.c0 AS REAL))OR(vt1.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (('171722432') ISNULL) WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS REAL))OR(vt1.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 INDEXED BY i75 WHERE (((vt1.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (NULL) AND ('-31937793'))))) ORDER BY ((((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))<=(1325230353)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (NULL) AND ('-31937793'))))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i75 ORDER BY ((((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))<=(1325230353)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 INDEXED BY i75 WHERE (((vt1.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (NULL) AND ('-31937793'))))) ORDER BY ((((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))<=(1325230353)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (NULL) AND ('-31937793'))))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i75 ORDER BY ((((((((((((((vt1.c0)OR(x'')))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))<=(1325230353)) DESC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT) WHERE ((0.1804564773265407 IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.1804564773265407 IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT) WHERE ((0.1804564773265407 IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.1804564773265407 IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS TEXT) WHERE ((0.1804564773265407 IN ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt1 INDEXED BY i75, t1 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN NULL WHEN (+ (vt1.c0)) THEN t1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN (t1.c0 IN (vt1.c0, t1.c0)) ELSE CASE WHEN t1.c63 THEN vt1.c0 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN t1.c63 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 INDEXED BY i75, t1 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN NULL WHEN (+ (vt1.c0)) THEN t1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN (t1.c0 IN (vt1.c0, t1.c0)) ELSE CASE WHEN t1.c63 THEN vt1.c0 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN t1.c63 END END  NULLS LAST);
SELECT COUNT(*) FROM vt1 INDEXED BY i75, t1 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN NULL WHEN (+ (vt1.c0)) THEN t1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN (t1.c0 IN (vt1.c0, t1.c0)) ELSE CASE WHEN t1.c63 THEN vt1.c0 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN t1.c63 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 INDEXED BY i75, t1 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN NULL WHEN (+ (vt1.c0)) THEN t1.c0 WHEN (vt1.c0 IN (vt1.c0)) THEN (t1.c0 IN (vt1.c0, t1.c0)) ELSE CASE WHEN t1.c63 THEN vt1.c0 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN t1.c63 END END  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) END WHERE (CASE WHEN json_quote(vt1.c0) THEN ((vt1.c0)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(vt1.c0) THEN ((vt1.c0)<(vt1.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) END WHERE (CASE WHEN json_quote(vt1.c0) THEN ((vt1.c0)<(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(vt1.c0) THEN ((vt1.c0)<(vt1.c0)) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (vt1.c0 IN ()) END WHERE (CASE WHEN json_quote(vt1.c0) THEN ((vt1.c0)<(vt1.c0)) END);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ()) WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((NULL))==((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ()) ORDER BY (((NULL))==((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ()) WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((NULL))==((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ()) ORDER BY (((NULL))==((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) IN ()) WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (vt1.c0))) AND (((vt0.c0) IS FALSE)))) ORDER BY (((NULL))==((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.28691532055639346)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.28691532055639346))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.28691532055639346)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.28691532055639346))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) ORDER BY (- ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.28691532055639346)))));
SELECT * FROM vt1, t1 WHERE (((NULLIF(t1.c0, t1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) AND (x'38ff'))) ORDER BY (+ ((- (x'')))) ASC, (((t1.c0 IN ())) BETWEEN ((~ (1325230353))) AND ((t1.c63 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(t1.c0, t1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) AND (x'38ff'))) IS TRUE)  as count FROM vt1, t1 ORDER BY (+ ((- (x'')))) ASC, (((t1.c0 IN ())) BETWEEN ((~ (1325230353))) AND ((t1.c63 IN ()))) DESC);
SELECT * FROM vt1, t1 WHERE (((NULLIF(t1.c0, t1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) AND (x'38ff'))) ORDER BY (+ ((- (x'')))) ASC, (((t1.c0 IN ())) BETWEEN ((~ (1325230353))) AND ((t1.c63 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(t1.c0, t1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) AND (x'38ff'))) IS TRUE)  as count FROM vt1, t1 ORDER BY (+ ((- (x'')))) ASC, (((t1.c0 IN ())) BETWEEN ((~ (1325230353))) AND ((t1.c63 IN ()))) DESC);
SELECT * FROM vt1, t1 WHERE (((NULLIF(t1.c0, t1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 ELSE t1.c0 END) AND (x'38ff'))) ORDER BY (+ ((- (x'')))) ASC, (((t1.c0 IN ())) BETWEEN ((~ (1325230353))) AND ((t1.c63 IN ()))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(vt1.c0)) ASC, (- (CAST('851886878' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(vt1.c0)) ASC, (- (CAST('851886878' AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(vt1.c0)) ASC, (- (CAST('851886878' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(vt1.c0)) ASC, (- (CAST('851886878' AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt0.c0) ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(vt1.c0)) ASC, (- (CAST('851886878' AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c63))>((vt1.c0))) IN ((~ (0.5123571322186992))))) ORDER BY (((t1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((x'326fd54e'))) DESC, (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c63))>((vt1.c0))) IN ((~ (0.5123571322186992))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((t1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((x'326fd54e'))) DESC, (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) DESC);
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c63))>((vt1.c0))) IN ((~ (0.5123571322186992))))) ORDER BY (((t1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((x'326fd54e'))) DESC, (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c63))>((vt1.c0))) IN ((~ (0.5123571322186992))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((t1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((x'326fd54e'))) DESC, (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) DESC);
SELECT ALL * FROM t1, vt1 WHERE (((((t1.c63))>((vt1.c0))) IN ((~ (0.5123571322186992))))) ORDER BY (((t1.c0)) BETWEEN ((((vt1.c0)>=(vt1.c0)))) AND ((x'326fd54e'))) DESC, (((((t1.c0) BETWEEN (t1.c0) AND (vt1.c0))))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c0))))) DESC;
SELECT ALL * FROM vt1, t1 WHERE (((t1.c63) BETWEEN (t1.c63) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) BETWEEN (t1.c63) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((t1.c63) BETWEEN (t1.c63) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) BETWEEN (t1.c63) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (((t1.c63) BETWEEN (t1.c63) AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (load_extension(TRIM(DISTINCT vt0.c0, vt0.c0), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(TRIM(DISTINCT vt0.c0, vt0.c0), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (load_extension(TRIM(DISTINCT vt0.c0, vt0.c0), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(TRIM(DISTINCT vt0.c0, vt0.c0), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (load_extension(TRIM(DISTINCT vt0.c0, vt0.c0), CAST(vt1.c0 AS TEXT)));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON vt1.c0 COLLATE RTRIM WHERE ((((t1.c0)>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON vt1.c0 COLLATE RTRIM);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON vt1.c0 COLLATE RTRIM WHERE ((((t1.c0)>(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)>(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON vt1.c0 COLLATE RTRIM);
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON vt1.c0 COLLATE RTRIM WHERE ((((t1.c0)>(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, t1 WHERE ((t1.c0 COLLATE BINARY IN ())) ORDER BY ((((t1.c0)IS NOT(t1.c0)))>>((((vt1.c0)) BETWEEN ((t1.c63)) AND ((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0)IS NOT(t1.c0)))>>((((vt1.c0)) BETWEEN ((t1.c63)) AND ((t1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((t1.c0 COLLATE BINARY IN ())) ORDER BY ((((t1.c0)IS NOT(t1.c0)))>>((((vt1.c0)) BETWEEN ((t1.c63)) AND ((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((t1.c0)IS NOT(t1.c0)))>>((((vt1.c0)) BETWEEN ((t1.c63)) AND ((t1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1 WHERE ((t1.c0 COLLATE BINARY IN ())) ORDER BY ((((t1.c0)IS NOT(t1.c0)))>>((((vt1.c0)) BETWEEN ((t1.c63)) AND ((t1.c0)))))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (('xL(v}uk&' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('xL(v}uk&' IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (('xL(v}uk&' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('xL(v}uk&' IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (('xL(v}uk&' IN ()));
SELECT * FROM vt0 WHERE (0.5667636311347525) ORDER BY (LIKELY(vt0.c0) IN ())  NULLS FIRST, ((vt0.c0) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5667636311347525) IS TRUE)  as count FROM vt0 ORDER BY (LIKELY(vt0.c0) IN ())  NULLS FIRST, ((vt0.c0) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.5667636311347525) ORDER BY (LIKELY(vt0.c0) IN ())  NULLS FIRST, ((vt0.c0) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.5667636311347525) IS TRUE)  as count FROM vt0 ORDER BY (LIKELY(vt0.c0) IN ())  NULLS FIRST, ((vt0.c0) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (0.5667636311347525) ORDER BY (LIKELY(vt0.c0) IN ())  NULLS FIRST, ((vt0.c0) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t1, vt0 WHERE ((NOT (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63))))) ORDER BY (((t1.c63)) BETWEEN (((t1.c63 IN ()))) AND ((((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((t1.c63)) BETWEEN (((t1.c63 IN ()))) AND ((((vt1.c0) IS FALSE)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((NOT (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63))))) ORDER BY (((t1.c63)) BETWEEN (((t1.c63 IN ()))) AND ((((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((t1.c63)) BETWEEN (((t1.c63 IN ()))) AND ((((vt1.c0) IS FALSE)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((NOT (((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63))))) ORDER BY (((t1.c63)) BETWEEN (((t1.c63 IN ()))) AND ((((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD((- (vt0.c0)), 0.13899184816760102)) ORDER BY (LOWER(t1.c0) IN ())  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ASC, (+ ((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.13899184816760102)) IS TRUE)  as count FROM vt0, t1 ORDER BY (LOWER(t1.c0) IN ())  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ASC, (+ ((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD((- (vt0.c0)), 0.13899184816760102)) ORDER BY (LOWER(t1.c0) IN ())  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ASC, (+ ((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((- (vt0.c0)), 0.13899184816760102)) IS TRUE)  as count FROM vt0, t1 ORDER BY (LOWER(t1.c0) IN ())  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ASC, (+ ((t1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (LIKELIHOOD((- (vt0.c0)), 0.13899184816760102)) ORDER BY (LOWER(t1.c0) IN ())  NULLS FIRST, (((t1.c0)) NOT BETWEEN ((x'')) AND ((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0))))) ASC, (+ ((t1.c0 IN ())));
SELECT * FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0))>((vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0))>((vt1.c0))))AND(((vt1.c0)<=(vt1.c0)))))AND((- (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0)) BETWEEN (((t1.c63 IN ()))) AND (((~ (t1.c63))))) WHERE ((((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((t1.c63)))) ORDER BY '-1746651333' DESC, ((CAST(vt0.c0 AS INTEGER))=(0.1915500773666977)) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((t1.c63)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0)) BETWEEN (((t1.c63 IN ()))) AND (((~ (t1.c63))))) ORDER BY '-1746651333' DESC, ((CAST(vt0.c0 AS INTEGER))==(0.1915500773666977)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0)) BETWEEN (((t1.c63 IN ()))) AND (((~ (t1.c63))))) WHERE ((((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((t1.c63)))) ORDER BY '-1746651333' DESC, ((CAST(vt0.c0 AS INTEGER))=(0.1915500773666977)) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((t1.c63)))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0)) BETWEEN (((t1.c63 IN ()))) AND (((~ (t1.c63))))) ORDER BY '-1746651333' DESC, ((CAST(vt0.c0 AS INTEGER))==(0.1915500773666977)) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (((vt1.c0)) BETWEEN (((t1.c63 IN ()))) AND (((~ (t1.c63))))) WHERE ((((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((t1.c63)))) ORDER BY '-1746651333' DESC, ((CAST(vt0.c0 AS INTEGER))=(0.1915500773666977)) ASC;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((CASE WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 END IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND (vt0.c0)), LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 END IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND (vt0.c0)), LAST_INSERT_ROWID() ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((CASE WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 END IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND (vt0.c0)), LAST_INSERT_ROWID() ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 END IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND (vt0.c0)), LAST_INSERT_ROWID() ASC);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((CASE WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c63 END IN ())) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((x'')GLOB(vt0.c0))) AND (vt0.c0)), LAST_INSERT_ROWID() ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49150119561706906) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'3f1e')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860513547E9)))AND(vt0.c0)))))OR((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.49150119561706906) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'3f1e')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860513547E9)))AND(vt0.c0)))))OR((+ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49150119561706906) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'3f1e')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860513547E9)))AND(vt0.c0)))))OR((+ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.49150119561706906) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'3f1e')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860513547E9)))AND(vt0.c0)))))OR((+ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49150119561706906) ORDER BY ((((((((((vt0.c0)%(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))AND(x'3f1e')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(-1.860513547E9)))AND(vt0.c0)))))OR((+ (vt0.c0)))) ASC;
SELECT * FROM vt1 WHERE ('-1131888994');
SELECT SUM(count) FROM (SELECT ALL (('-1131888994') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-1131888994');
SELECT SUM(count) FROM (SELECT ALL (('-1131888994') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('-1131888994');
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))IS((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))!=(((x'') IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))IS((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))<>(((x'') IS TRUE))) ASC);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))IS((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))!=(((x'') IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))IS((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0)))<>(((x'') IS TRUE))) ASC);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))IS((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c0)>=(vt0.c0)))!=(((x'') IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt1.c0)))AND(206635750)))) ASC, (((('錤!')IS NOT(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((('0.31618829669227555', vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1243876352', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((+ (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt1.c0)))AND(206635750)))) ASC, (((('錤!')IS NOT(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((('0.31618829669227555', vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1243876352', vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt1.c0)))AND(206635750)))) ASC, (((('錤!')IS NOT(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((('0.31618829669227555', vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1243876352', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((+ (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt1.c0)))AND(206635750)))) ASC, (((('錤!')IS NOT(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((('0.31618829669227555', vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1243876352', vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0 COLLATE RTRIM) ORDER BY ((+ (vt0.c0)) IN (CASE WHEN vt0.c0 THEN vt0.c0 END, ((((vt0.c0)OR(vt1.c0)))AND(206635750)))) ASC, (((('錤!')IS NOT(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((('0.31618829669227555', vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, '-1243876352', vt1.c0)))));
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 END) AND (t1.c63 COLLATE BINARY)) WHERE (((t1.c63 COLLATE NOCASE)||(((((((((t1.c63)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c63))))) ORDER BY (((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))>=(((t1.c63 IN (t1.c0)))))  NULLS LAST, (((CAST(t1.c63 AS NUMERIC)))<((((t1.c0)AND(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63 COLLATE NOCASE)||(((((((((t1.c63)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c63))))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((vt1.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 END) AND (t1.c63 COLLATE BINARY)) ORDER BY (((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))>=(((t1.c63 IN (t1.c0)))))  NULLS LAST, (((CAST(t1.c63 AS NUMERIC)))<((((t1.c0)AND(t1.c63))))));
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 END) AND (t1.c63 COLLATE BINARY)) WHERE (((t1.c63 COLLATE NOCASE)||(((((((((t1.c63)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c63))))) ORDER BY (((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))>=(((t1.c63 IN (t1.c0)))))  NULLS LAST, (((CAST(t1.c63 AS NUMERIC)))<((((t1.c0)AND(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63 COLLATE NOCASE)||(((((((((t1.c63)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c63))))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON ((vt1.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 END) AND (t1.c63 COLLATE BINARY)) ORDER BY (((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))>=(((t1.c63 IN (t1.c0)))))  NULLS LAST, (((CAST(t1.c63 AS NUMERIC)))<((((t1.c0)AND(t1.c63))))));
SELECT * FROM t1 INNER JOIN vt1 ON ((vt1.c0) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN t1.c0 END) AND (t1.c63 COLLATE BINARY)) WHERE (((t1.c63 COLLATE NOCASE)||(((((((((t1.c63)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(t1.c63))))) ORDER BY (((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))>=(((t1.c63 IN (t1.c0)))))  NULLS LAST, (((CAST(t1.c63 AS NUMERIC)))<((((t1.c0)AND(t1.c63)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON ((((vt1.c0)AND(t1.c63)))AND('-150853962')) COLLATE NOCASE WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((vt1.c0)AND(t1.c63)))AND('-150853962')) COLLATE NOCASE ORDER BY vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON ((((vt1.c0)AND(t1.c63)))AND('-150853962')) COLLATE NOCASE WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((((vt1.c0)AND(t1.c63)))AND('-150853962')) COLLATE NOCASE ORDER BY vt1.c0);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON ((((vt1.c0)AND(t1.c63)))AND('-150853962')) COLLATE NOCASE WHERE ((vt1.c0 COLLATE BINARY IN ())) ORDER BY vt1.c0;
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON (((((((((NOT (t1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND((~ (t1.c63)))))AND((~ (vt1.c0)))))AND(((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c63)))AND(NULL)))) WHERE ((((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL))<>(json_valid(t1.c63)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<>((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON (((((((((NOT (t1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND((~ (t1.c63)))))AND((~ (vt1.c0)))))AND(((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c63)))AND(NULL)))) ORDER BY ((((vt0.c0) ISNULL))!=(json_valid(t1.c63)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON (((((((((NOT (t1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND((~ (t1.c63)))))AND((~ (vt1.c0)))))AND(((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c63)))AND(NULL)))) WHERE ((((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL))<>(json_valid(t1.c63)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))<>((vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON (((((((((NOT (t1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND((~ (t1.c63)))))AND((~ (vt1.c0)))))AND(((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c63)))AND(NULL)))) ORDER BY ((((vt0.c0) ISNULL))!=(json_valid(t1.c63)))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON (((((((((NOT (t1.c0)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0))))AND((~ (t1.c63)))))AND((~ (vt1.c0)))))AND(((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c63)))AND(NULL)))) WHERE ((((vt0.c0 COLLATE NOCASE))!=((vt0.c0)))) ORDER BY ((((vt0.c0) ISNULL))<>(json_valid(t1.c63)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>(((vt1.c0 IN (vt1.c0)))))) ORDER BY 1921228543 DESC  NULLS FIRST, ((((vt1.c0)>(vt1.c0))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((- (0.2947448160152)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY 1921228543 DESC  NULLS FIRST, ((((vt1.c0)>(vt1.c0))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((- (0.2947448160152)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>(((vt1.c0 IN (vt1.c0)))))) ORDER BY 1921228543 DESC  NULLS FIRST, ((((vt1.c0)>(vt1.c0))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((- (0.2947448160152)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))>(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY 1921228543 DESC  NULLS FIRST, ((((vt1.c0)>(vt1.c0))) BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ((- (0.2947448160152)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (((((((vt1.c0)+(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (((((((vt1.c0)+(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)+(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t1 WHERE (((((((vt1.c0)+(vt1.c0)))AND(LOWER(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)GLOB(vt1.c0)))IS NOT(((vt1.c0)OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(vt0.c0)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(vt0.c0));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (-1515516407) AND (vt1.c0))) BETWEEN ((((t1.c0))<>((t1.c0)))) AND (((t1.c63) IS TRUE))) DESC  NULLS FIRST, (((t1.c0 IN (vt1.c0)))<=((+ (t1.c0)))) DESC, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), 0.8730181796007882)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((vt1.c0) NOT BETWEEN (-1515516407) AND (vt1.c0))) BETWEEN ((((t1.c0))<>((t1.c0)))) AND (((t1.c63) IS TRUE))) DESC  NULLS FIRST, (((t1.c0 IN (vt1.c0)))<=((+ (t1.c0)))) DESC, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), 0.8730181796007882)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (-1515516407) AND (vt1.c0))) BETWEEN ((((t1.c0))<>((t1.c0)))) AND (((t1.c63) IS TRUE))) DESC  NULLS FIRST, (((t1.c0 IN (vt1.c0)))<=((+ (t1.c0)))) DESC, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), 0.8730181796007882)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((vt1.c0) NOT BETWEEN (-1515516407) AND (vt1.c0))) BETWEEN ((((t1.c0))<>((t1.c0)))) AND (((t1.c63) IS TRUE))) DESC  NULLS FIRST, (((t1.c0 IN (vt1.c0)))<=((+ (t1.c0)))) DESC, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), 0.8730181796007882)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (-1515516407) AND (vt1.c0))) BETWEEN ((((t1.c0))<>((t1.c0)))) AND (((t1.c63) IS TRUE))) DESC  NULLS FIRST, (((t1.c0 IN (vt1.c0)))<=((+ (t1.c0)))) DESC, LIKELIHOOD(DISTINCT ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)), 0.8730181796007882)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((CASE vt1.c0  WHEN '-159781423' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)-(x''))))  NULLS FIRST, '䨁V瑼ഀ [' ASC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN '-159781423' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)-(x''))))  NULLS FIRST, '䨁V瑼ഀ [' ASC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((CASE vt1.c0  WHEN '-159781423' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)-(x''))))  NULLS FIRST, '䨁V瑼ഀ [' ASC;
SELECT SUM(count) FROM (SELECT ((((NOT (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN '-159781423' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)-(x''))))  NULLS FIRST, '䨁V瑼ഀ [' ASC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE (((NOT (vt1.c0)) IN ())) ORDER BY ((CASE vt1.c0  WHEN '-159781423' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)OR(((vt1.c0)-(x''))))  NULLS FIRST, '䨁V瑼ഀ [' ASC;
SELECT ALL * FROM t1, vt0 WHERE (((((x'')AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((x'')AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((x'')AND(((vt0.c0) NOT NULL))))AND(((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (TYPEOF(t1.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t1.c63 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (TYPEOF(t1.c63 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(t1.c63 COLLATE BINARY)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 CROSS JOIN t1 ON t1.c0 WHERE (TYPEOF(t1.c63 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))>=((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)>>(-1192429816)))OR(((vt1.c0)||(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0)) DESC, ((CHANGES())||(-2.1409961E7)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt1.c0))))>=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)>>(-1192429816)))OR(((vt1.c0)||(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0)) DESC, ((CHANGES())||(-2.1409961E7)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))>=((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)>>(-1192429816)))OR(((vt1.c0)||(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0)) DESC, ((CHANGES())||(-2.1409961E7)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt1.c0))))>=((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)>>(-1192429816)))OR(((vt1.c0)||(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0)) DESC, ((CHANGES())||(-2.1409961E7)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0))))>=((vt1.c0 IN ())))) ORDER BY ((((((vt1.c0)>>(-1192429816)))OR(((vt1.c0)||(vt1.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST, ((JULIANDAY(vt1.c0, vt1.c0, vt1.c0))OR(vt1.c0)) DESC, ((CHANGES())||(-2.1409961E7)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(((vt0.c0)<=('-1126282142')), ((t1.c0) BETWEEN (t1.c0) AND ('')))) ORDER BY (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN (((((t1.c0)OR(vt0.c0)))OR(vt0.c0)), CAST('-33648822' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)<=('-1126282142')), ((t1.c0) BETWEEN (t1.c0) AND ('')))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN (((((t1.c0)OR(vt0.c0)))OR(vt0.c0)), CAST('-33648822' AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(((vt0.c0)<=('-1126282142')), ((t1.c0) BETWEEN (t1.c0) AND ('')))) ORDER BY (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN (((((t1.c0)OR(vt0.c0)))OR(vt0.c0)), CAST('-33648822' AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt0.c0)<=('-1126282142')), ((t1.c0) BETWEEN (t1.c0) AND ('')))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN (((((t1.c0)OR(vt0.c0)))OR(vt0.c0)), CAST('-33648822' AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE (IFNULL(((vt0.c0)<=('-1126282142')), ((t1.c0) BETWEEN (t1.c0) AND ('')))) ORDER BY (((vt0.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN (((((t1.c0)OR(vt0.c0)))OR(vt0.c0)), CAST('-33648822' AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST(((((t1.c63)AND(t1.c0)))AND(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c63)AND(t1.c0)))AND(t1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST(((((t1.c63)AND(t1.c0)))AND(t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c63)AND(t1.c0)))AND(t1.c0)) AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CAST(((((t1.c63)AND(t1.c0)))AND(t1.c0)) AS REAL));
SELECT ALL * FROM vt1, vt0, t1 WHERE ((UNLIKELY(DISTINCT 0.6633061842620283) IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT 0.6633061842620283) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((UNLIKELY(DISTINCT 0.6633061842620283) IN ()));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT 0.6633061842620283) IN ())) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((UNLIKELY(DISTINCT 0.6633061842620283) IN ()));
SELECT * FROM t1, vt0 WHERE (((x'444e')<<(((((t1.c63)AND(t1.c63)))OR(t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((x'444e')<<(((((t1.c63)AND(t1.c63)))OR(t1.c63))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((x'444e')<<(((((t1.c63)AND(t1.c63)))OR(t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((x'444e')<<(((((t1.c63)AND(t1.c63)))OR(t1.c63))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((x'444e')<<(((((t1.c63)AND(t1.c63)))OR(t1.c63)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) IS TRUE)) IS TRUE));
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) NOT BETWEEN ((0.42796491518863444)) AND ((highlight(vt0.c0, x'', vt1.c0, t1.c0)))) LEFT OUTER JOIN vt1 ON NULL WHERE (t1.c63 COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)|(x'')))AND((+ (t1.c0)))))OR(t1.c0)))AND(x'')))AND((((vt1.c0))=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c63 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) NOT BETWEEN ((0.42796491518863444)) AND ((highlight(vt0.c0, x'', vt1.c0, t1.c0)))) LEFT OUTER JOIN vt1 ON NULL ORDER BY ((((((((((vt1.c0)|(x'')))AND((+ (t1.c0)))))OR(t1.c0)))AND(x'')))AND((((vt1.c0))==((vt1.c0))))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) NOT BETWEEN ((0.42796491518863444)) AND ((highlight(vt0.c0, x'', vt1.c0, t1.c0)))) LEFT OUTER JOIN vt1 ON NULL WHERE (t1.c63 COLLATE NOCASE) ORDER BY ((((((((((vt1.c0)|(x'')))AND((+ (t1.c0)))))OR(t1.c0)))AND(x'')))AND((((vt1.c0))=((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c63 COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON (((vt1.c0)) NOT BETWEEN ((0.42796491518863444)) AND ((highlight(vt0.c0, x'', vt1.c0, t1.c0)))) LEFT OUTER JOIN vt1 ON NULL ORDER BY ((((((((((vt1.c0)|(x'')))AND((+ (t1.c0)))))OR(t1.c0)))AND(x'')))AND((((vt1.c0))==((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(CASE WHEN NULL THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))>(CASE WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))>(CASE WHEN NULL THEN vt0.c0 END)));
SELECT * FROM vt1, t1, vt0 WHERE ((((((((((((((- (t1.c0)))AND('SW#	+eI')))AND(t1.c63 COLLATE BINARY)))AND(((vt0.c0) NOTNULL))))OR(((t1.c0) IS FALSE))))OR(((vt1.c0)<>(vt1.c0)))))AND((((vt0.c0, t1.c63, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))))) ORDER BY (((vt0.c0 IN ()))AND(((x'')%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (t1.c0)))AND('SW#	+eI')))AND(t1.c63 COLLATE BINARY)))AND(((vt0.c0) NOTNULL))))OR(((t1.c0) IS FALSE))))OR(((vt1.c0)<>(vt1.c0)))))AND((((vt0.c0, t1.c63, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c0 IN ()))AND(((x'')%(vt1.c0)))));
SELECT * FROM vt1, t1, vt0 WHERE ((((((((((((((- (t1.c0)))AND('SW#	+eI')))AND(t1.c63 COLLATE BINARY)))AND(((vt0.c0) NOTNULL))))OR(((t1.c0) IS FALSE))))OR(((vt1.c0)<>(vt1.c0)))))AND((((vt0.c0, t1.c63, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))))) ORDER BY (((vt0.c0 IN ()))AND(((x'')%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (t1.c0)))AND('SW#	+eI')))AND(t1.c63 COLLATE BINARY)))AND(((vt0.c0) NOTNULL))))OR(((t1.c0) IS FALSE))))OR(((vt1.c0)<>(vt1.c0)))))AND((((vt0.c0, t1.c63, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((vt0.c0 IN ()))AND(((x'')%(vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON (CASE WHEN t1.c0 THEN t1.c0 END IN ()) INNER JOIN vt0 ON (((((((t1.c63)AND(t1.c0)))OR(t1.c63))))>=((NULL))) WHERE (NULL COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((((((((t1.c63)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))AND(vt0.c0)))) AND (((+ (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (CASE WHEN t1.c0 THEN t1.c0 END IN ()) INNER JOIN vt0 ON (((((((t1.c63)AND(t1.c0)))OR(t1.c63))))>=((NULL))) ORDER BY (((vt1.c0)) BETWEEN ((((((((((t1.c63)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))AND(vt0.c0)))) AND (((+ (vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON (CASE WHEN t1.c0 THEN t1.c0 END IN ()) INNER JOIN vt0 ON (((((((t1.c63)AND(t1.c0)))OR(t1.c63))))>=((NULL))) WHERE (NULL COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((((((((t1.c63)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))AND(vt0.c0)))) AND (((+ (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON (CASE WHEN t1.c0 THEN t1.c0 END IN ()) INNER JOIN vt0 ON (((((((t1.c63)AND(t1.c0)))OR(t1.c63))))>=((NULL))) ORDER BY (((vt1.c0)) BETWEEN ((((((((((t1.c63)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))AND(vt0.c0)))) AND (((+ (vt1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON (CASE WHEN t1.c0 THEN t1.c0 END IN ()) INNER JOIN vt0 ON (((((((t1.c63)AND(t1.c0)))OR(t1.c63))))>=((NULL))) WHERE (NULL COLLATE BINARY) ORDER BY (((vt1.c0)) BETWEEN ((((((((((t1.c63)OR(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))AND(vt0.c0)))) AND (((+ (vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c63 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c63 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c63 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c63 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (t1.c63 COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM t1, vt0, vt1 WHERE ('101111180') ORDER BY (((vt1.c0 IN ()))OR((((vt1.c0, t1.c63, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, 'm[}3VDX')) AND ((vt1.c0, t1.c63, vt0.c0))))) DESC, (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('101111180') IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((vt1.c0 IN ()))OR((((vt1.c0, t1.c63, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, 'm[}3VDX')) AND ((vt1.c0, t1.c63, vt0.c0))))) DESC, (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE ('101111180') ORDER BY (((vt1.c0 IN ()))OR((((vt1.c0, t1.c63, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, 'm[}3VDX')) AND ((vt1.c0, t1.c63, vt0.c0))))) DESC, (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('101111180') IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((vt1.c0 IN ()))OR((((vt1.c0, t1.c63, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, 'm[}3VDX')) AND ((vt1.c0, t1.c63, vt0.c0))))) DESC, (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t1, vt0, vt1 WHERE ('101111180') ORDER BY (((vt1.c0 IN ()))OR((((vt1.c0, t1.c63, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, 'm[}3VDX')) AND ((vt1.c0, t1.c63, vt0.c0))))) DESC, (NOT (t1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON (((x'')LIKE(vt1.c0)) IN ()) WHERE (((((((((((t1.c63) IS FALSE))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CHANGES())))AND(CAST(vt1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((((((((((((t1.c63)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c0)))OR((vt1.c0 IN ()))))AND(CASE WHEN NULL THEN t1.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c63) IS FALSE))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CHANGES())))AND(CAST(vt1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON (((x'')LIKE(vt1.c0)) IN ()) ORDER BY ((((((((((((t1.c63)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c0)))OR((vt1.c0 IN ()))))AND(CASE WHEN NULL THEN t1.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON (((x'')LIKE(vt1.c0)) IN ()) WHERE (((((((((((t1.c63) IS FALSE))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CHANGES())))AND(CAST(vt1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((((((((((((t1.c63)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c0)))OR((vt1.c0 IN ()))))AND(CASE WHEN NULL THEN t1.c0 ELSE vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c63) IS FALSE))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CHANGES())))AND(CAST(vt1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN vt1 ON (((x'')LIKE(vt1.c0)) IN ()) ORDER BY ((((((((((((t1.c63)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c0)))OR((vt1.c0 IN ()))))AND(CASE WHEN NULL THEN t1.c0 ELSE vt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN vt1 ON (((x'')LIKE(vt1.c0)) IN ()) WHERE (((((((((((t1.c63) IS FALSE))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c63 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c0 END)))AND(CHANGES())))AND(CAST(vt1.c0 AS BLOB))))AND(t1.c0 COLLATE RTRIM))) ORDER BY ((((((((((((t1.c63)OR(t1.c0)))AND(vt0.c0)))OR(t1.c0)))AND(t1.c0)))OR((vt1.c0 IN ()))))AND(CASE WHEN NULL THEN t1.c0 ELSE vt0.c0 END)) ASC;
SELECT ALL * FROM vt1, vt0, t1 WHERE (UPPER((((vt0.c0))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((vt0.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (UPPER((((vt0.c0))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((UPPER((((vt0.c0))>((vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (UPPER((((vt0.c0))>((vt1.c0)))));
SELECT ALL * FROM vt0 WHERE ((('ચU' COLLATE BINARY) NOTNULL)) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST, (- (1838488809));
SELECT SUM(count) FROM (SELECT ALL (((('ચU' COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST, (- (1838488809)));
SELECT ALL * FROM vt0 WHERE ((('ચU' COLLATE BINARY) NOTNULL)) ORDER BY TOTAL_CHANGES() ASC  NULLS LAST, (- (1838488809));
SELECT SUM(count) FROM (SELECT ALL (((('ચU' COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY TOTAL_CHANGES() ASC  NULLS LAST, (- (1838488809)));
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON ((t1.c63) ISNULL) WHERE (CAST((t1.c0 IN (vt0.c0)) AS INTEGER)) ORDER BY ((t1.c0) BETWEEN (t1.c63) AND (vt0.c0)) COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN ('v 0r,߼Sq#') AND (vt0.c0))))!=((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((t1.c63) ISNULL) ORDER BY ((t1.c0) BETWEEN (t1.c63) AND (vt0.c0)) COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN ('v 0r,߼Sq#') AND (vt0.c0))))<>((((vt0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON ((t1.c63) ISNULL) WHERE (CAST((t1.c0 IN (vt0.c0)) AS INTEGER)) ORDER BY ((t1.c0) BETWEEN (t1.c63) AND (vt0.c0)) COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN ('v 0r,߼Sq#') AND (vt0.c0))))!=((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((t1.c63) ISNULL) ORDER BY ((t1.c0) BETWEEN (t1.c63) AND (vt0.c0)) COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN ('v 0r,߼Sq#') AND (vt0.c0))))<>((((vt0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t1 ON ((t1.c63) ISNULL) WHERE (CAST((t1.c0 IN (vt0.c0)) AS INTEGER)) ORDER BY ((t1.c0) BETWEEN (t1.c63) AND (vt0.c0)) COLLATE NOCASE, (((((vt0.c0) NOT BETWEEN ('v 0r,߼Sq#') AND (vt0.c0))))!=((((vt0.c0) ISNULL))))  NULLS LAST;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)<=((t1.c63 IN ()))) WHERE (NULL) ORDER BY (((((t1.c63))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c0)<=((t1.c63 IN ()))) ORDER BY (((((t1.c63))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)<=((t1.c63 IN ()))) WHERE (NULL) ORDER BY (((((t1.c63))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON ((vt0.c0)<=((t1.c63 IN ()))) ORDER BY (((((t1.c63))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON ((vt0.c0)<=((t1.c63 IN ()))) WHERE (NULL) ORDER BY (((((t1.c63))==((vt0.c0)))) NOT BETWEEN (vt0.c0) AND ((+ (vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt1.c0))<=(('.0. S/')))) BETWEEN ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=(('.0. S/')))) BETWEEN ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt1.c0))<=(('.0. S/')))) BETWEEN ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=(('.0. S/')))) BETWEEN ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE ((((((vt1.c0))<=(('.0. S/')))) BETWEEN ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 END)));
SELECT * FROM t1 WHERE (CASE (t1.c0 IN (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN (((t1.c63)) NOT BETWEEN ((0.2730799336254224)) AND ((t1.c0))) WHEN ((((t1.c63)OR(NULL)))OR(t1.c63)) THEN ((((t1.c63)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE t1.c63 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN (((t1.c63)) NOT BETWEEN ((0.2730799336254224)) AND ((t1.c0))) WHEN ((((t1.c63)OR(NULL)))OR(t1.c63)) THEN ((((t1.c63)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE t1.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE (t1.c0 IN (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN (((t1.c63)) NOT BETWEEN ((0.2730799336254224)) AND ((t1.c0))) WHEN ((((t1.c63)OR(NULL)))OR(t1.c63)) THEN ((((t1.c63)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE t1.c63 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c0 IN (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN (((t1.c63)) NOT BETWEEN ((0.2730799336254224)) AND ((t1.c0))) WHEN ((((t1.c63)OR(NULL)))OR(t1.c63)) THEN ((((t1.c63)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE t1.c63 COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE (t1.c0 IN (t1.c0))  WHEN ((t1.c0) IS TRUE) THEN (((t1.c63)) NOT BETWEEN ((0.2730799336254224)) AND ((t1.c0))) WHEN ((((t1.c63)OR(NULL)))OR(t1.c63)) THEN ((((t1.c63)OR(t1.c0)))AND(t1.c0)) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE t1.c63 COLLATE NOCASE END);
SELECT * FROM vt1, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=(((vt0.c0 IN ()))))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=(((vt0.c0 IN ()))))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY);
SELECT * FROM vt1, vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))>=(((vt0.c0 IN ()))))) ORDER BY ((vt1.c0) NOTNULL) COLLATE BINARY;
SELECT ALL * FROM t1, vt1 WHERE (((((((((HEX(t1.c0))AND(((((t1.c63)AND(vt1.c0)))OR(t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) ISNULL))))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((HEX(t1.c0))AND(((((t1.c63)AND(vt1.c0)))OR(t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) ISNULL))))OR(t1.c0))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((((((HEX(t1.c0))AND(((((t1.c63)AND(vt1.c0)))OR(t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) ISNULL))))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((HEX(t1.c0))AND(((((t1.c63)AND(vt1.c0)))OR(t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) ISNULL))))OR(t1.c0))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (((((((((HEX(t1.c0))AND(((((t1.c63)AND(vt1.c0)))OR(t1.c0)))))AND(t1.c0 COLLATE NOCASE)))OR(((vt1.c0) ISNULL))))OR(t1.c0)));
SELECT * FROM vt0, t1 WHERE ((NOT (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((NOT (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE ((NOT (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST('1747171070' AS TEXT))||(((vt0.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1747171070' AS TEXT))||(((vt0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST('1747171070' AS TEXT))||(((vt0.c0)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('1747171070' AS TEXT))||(((vt0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST('1747171070' AS TEXT))||(((vt0.c0)<=(vt1.c0)))));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0, (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ());
SELECT * FROM vt1, t1 WHERE (-1.035507049E9) ORDER BY ABS((((vt1.c0))<((t1.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.035507049E9) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 ORDER BY ABS((((vt1.c0))<((t1.c63)))) DESC);
SELECT * FROM vt1, t1 WHERE (-1.035507049E9) ORDER BY ABS((((vt1.c0))<((t1.c63)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-1.035507049E9) IS TRUE)  as count FROM vt1 NOT INDEXED, t1 ORDER BY ABS((((vt1.c0))<((t1.c63)))) DESC);
SELECT * FROM vt1, t1 WHERE (-1.035507049E9) ORDER BY ABS((((vt1.c0))<((t1.c63)))) DESC;
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((t1.c63) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63) NOTNULL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((t1.c63) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63) NOTNULL) IN ())) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE ((((t1.c63) NOTNULL) IN ()));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (vt1.c0))) IS TRUE) WHERE ((+ ('1570153089')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ ('1570153089')) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((+ (vt1.c0))) IS TRUE));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (vt1.c0))) IS TRUE) WHERE ((+ ('1570153089')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ ('1570153089')) COLLATE BINARY) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((+ (vt1.c0))) IS TRUE));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON (((+ (vt1.c0))) IS TRUE) WHERE ((+ ('1570153089')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c63) ORDER BY CASE t1.c0  WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE t1.c0  WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c63) ORDER BY CASE t1.c0  WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM vt0, t1 ORDER BY CASE t1.c0  WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (t1.c63) ORDER BY CASE t1.c0  WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c0 END COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (-1.860275928E9);
SELECT SUM(count) FROM (SELECT ((-1.860275928E9) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (-1.860275928E9);
SELECT SUM(count) FROM (SELECT ((-1.860275928E9) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (-1.860275928E9);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c63))))OR(((vt1.c0)/(t1.c0)))))AND(CASE WHEN NULL THEN vt1.c0 ELSE '-636636005' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c63))))OR(((vt1.c0)/(t1.c0)))))AND(CASE WHEN NULL THEN vt1.c0 ELSE '-636636005' END))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c63))))OR(((vt1.c0)/(t1.c0)))))AND(CASE WHEN NULL THEN vt1.c0 ELSE '-636636005' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c63))))OR(((vt1.c0)/(t1.c0)))))AND(CASE WHEN NULL THEN vt1.c0 ELSE '-636636005' END))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c63))))OR(((vt1.c0)/(t1.c0)))))AND(CASE WHEN NULL THEN vt1.c0 ELSE '-636636005' END)));
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE (((((((vt0.c0)<<(402056273)))AND(LOWER(DISTINCT NULL))))AND((('0.8114377395800476') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(402056273)))AND(LOWER(DISTINCT NULL))))AND((('0.8114377395800476') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE (((((((vt0.c0)<<(402056273)))AND(LOWER(DISTINCT NULL))))AND((('0.8114377395800476') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<<(402056273)))AND(LOWER(DISTINCT NULL))))AND((('0.8114377395800476') BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON x'');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON x'' WHERE (((((((vt0.c0)<<(402056273)))AND(LOWER(DISTINCT NULL))))AND((('0.8114377395800476') BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)AND(t1.c0)) AS INTEGER)) ORDER BY LIKELY((- (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY LIKELY((- (t1.c0))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)AND(t1.c0)) AS INTEGER)) ORDER BY LIKELY((- (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c0)AND(t1.c0)) AS INTEGER)) IS TRUE)  as count FROM t1 ORDER BY LIKELY((- (t1.c0))));
SELECT ALL * FROM t1 WHERE (CAST(((t1.c0)AND(t1.c0)) AS INTEGER)) ORDER BY LIKELY((- (t1.c0)));
SELECT * FROM t1 NOT INDEXED INNER JOIN vt0 ON highlight(((((vt0.c0)AND(vt1.c0)))AND(0.01654807068655395)), UPPER(DISTINCT vt1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c63)), ((vt1.c0) NOTNULL)) INNER JOIN vt1 ON CAST(0Xffffffff9852f0b0 COLLATE BINARY AS INTEGER) WHERE ((((((vt0.c0 IN ()))OR((('Of')|(t1.c63)))))AND((((vt0.c0))<=((t1.c63)))))) ORDER BY (((t1.c63)IS NOT(vt1.c0)) IN ((((t1.c0)) NOT BETWEEN (('mN')) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR((('Of')|(t1.c63)))))AND((((vt0.c0))<=((t1.c63)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON highlight(((((vt0.c0)AND(vt1.c0)))AND(0.01654807068655395)), UPPER(DISTINCT vt1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c63)), ((vt1.c0) NOTNULL)) INNER JOIN vt1 ON CAST(0xffffffff9852f0b0 COLLATE BINARY AS INTEGER) ORDER BY (((t1.c63)IS NOT(vt1.c0)) IN ((((t1.c0)) NOT BETWEEN (('mN')) AND ((t1.c0))))) DESC);
SELECT * FROM t1 NOT INDEXED INNER JOIN vt0 ON highlight(((((vt0.c0)AND(vt1.c0)))AND(0.01654807068655395)), UPPER(DISTINCT vt1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c63)), ((vt1.c0) NOTNULL)) INNER JOIN vt1 ON CAST(0Xffffffff9852f0b0 COLLATE BINARY AS INTEGER) WHERE ((((((vt0.c0 IN ()))OR((('Of')|(t1.c63)))))AND((((vt0.c0))<=((t1.c63)))))) ORDER BY (((t1.c63)IS NOT(vt1.c0)) IN ((((t1.c0)) NOT BETWEEN (('mN')) AND ((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR((('Of')|(t1.c63)))))AND((((vt0.c0))<=((t1.c63)))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON highlight(((((vt0.c0)AND(vt1.c0)))AND(0.01654807068655395)), UPPER(DISTINCT vt1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c63)), ((vt1.c0) NOTNULL)) INNER JOIN vt1 ON CAST(0xffffffff9852f0b0 COLLATE BINARY AS INTEGER) ORDER BY (((t1.c63)IS NOT(vt1.c0)) IN ((((t1.c0)) NOT BETWEEN (('mN')) AND ((t1.c0))))) DESC);
SELECT * FROM t1 NOT INDEXED INNER JOIN vt0 ON highlight(((((vt0.c0)AND(vt1.c0)))AND(0.01654807068655395)), UPPER(DISTINCT vt1.c0), ((t1.c0) BETWEEN (t1.c0) AND (t1.c63)), ((vt1.c0) NOTNULL)) INNER JOIN vt1 ON CAST(0Xffffffff9852f0b0 COLLATE BINARY AS INTEGER) WHERE ((((((vt0.c0 IN ()))OR((('Of')|(t1.c63)))))AND((((vt0.c0))<=((t1.c63)))))) ORDER BY (((t1.c63)IS NOT(vt1.c0)) IN ((((t1.c0)) NOT BETWEEN (('mN')) AND ((t1.c0))))) DESC;
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))&(((0.21761414568880932)GLOB(t1.c63))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))&(((0.21761414568880932)GLOB(t1.c63)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))&(((0.21761414568880932)GLOB(t1.c63))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))&(((0.21761414568880932)GLOB(t1.c63)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0) NOTNULL) COLLATE BINARY) ORDER BY ((((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))&(((0.21761414568880932)GLOB(t1.c63))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0))<((t1.c63))))>(x'7ddd')));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<((t1.c63))))>(x'7ddd'))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0))<((t1.c63))))>(x'7ddd')));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<((t1.c63))))>(x'7ddd'))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c0))<((t1.c63))))>(x'7ddd')));
SELECT * FROM vt1 FULL OUTER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63))  WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN (vt1.c0 IN ()) END WHERE ((('-2073426224')-(CASE WHEN t1.c63 THEN '-547530115' END))) ORDER BY COALESCE(DISTINCT (t1.c0 IN ()), vt1.c0 COLLATE BINARY, (t1.c63 IN ()), t1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-2073426224')-(CASE WHEN t1.c63 THEN '-547530115' END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63))  WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN (vt1.c0 IN ()) END ORDER BY COALESCE(DISTINCT (t1.c0 IN ()), vt1.c0 COLLATE BINARY, (t1.c63 IN ()), t1.c0)  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63))  WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN (vt1.c0 IN ()) END WHERE ((('-2073426224')-(CASE WHEN t1.c63 THEN '-547530115' END))) ORDER BY COALESCE(DISTINCT (t1.c0 IN ()), vt1.c0 COLLATE BINARY, (t1.c63 IN ()), t1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-2073426224')-(CASE WHEN t1.c63 THEN '-547530115' END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63))  WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN (vt1.c0 IN ()) END ORDER BY COALESCE(DISTINCT (t1.c0 IN ()), vt1.c0 COLLATE BINARY, (t1.c63 IN ()), t1.c0)  NULLS LAST);
SELECT * FROM vt1 FULL OUTER JOIN t1 ON CASE ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63))  WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN (vt1.c0 IN ()) END WHERE ((('-2073426224')-(CASE WHEN t1.c63 THEN '-547530115' END))) ORDER BY COALESCE(DISTINCT (t1.c0 IN ()), vt1.c0 COLLATE BINARY, (t1.c63 IN ()), t1.c0)  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED LEFT OUTER JOIN vt1 ON (((vt1.c0, 's),!?', NULL)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN t1.c0 END, (- (vt1.c0)))) AND ((((((t1.c0)AND(NULL)))OR(vt0.c0)), (((vt1.c0))>=((vt1.c0))), t1.c63))) WHERE ((((('-723350147')IS(t1.c63))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-723350147')IS(t1.c63))) NOTNULL)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((vt1.c0, 's),!?', NULL)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN t1.c0 END, (- (vt1.c0)))) AND ((((((t1.c0)AND(NULL)))OR(vt0.c0)), (((vt1.c0))>=((vt1.c0))), t1.c63))));
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED LEFT OUTER JOIN vt1 ON (((vt1.c0, 's),!?', NULL)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN t1.c0 END, (- (vt1.c0)))) AND ((((((t1.c0)AND(NULL)))OR(vt0.c0)), (((vt1.c0))>=((vt1.c0))), t1.c63))) WHERE ((((('-723350147')IS(t1.c63))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('-723350147')IS(t1.c63))) NOTNULL)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON (((vt1.c0, 's),!?', NULL)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN t1.c0 END, (- (vt1.c0)))) AND ((((((t1.c0)AND(NULL)))OR(vt0.c0)), (((vt1.c0))>=((vt1.c0))), t1.c63))));
SELECT COUNT(*) FROM vt0, t1 NOT INDEXED LEFT OUTER JOIN vt1 ON (((vt1.c0, 's),!?', NULL)) NOT BETWEEN (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN t1.c0 END, (- (vt1.c0)))) AND ((((((t1.c0)AND(NULL)))OR(vt0.c0)), (((vt1.c0))>=((vt1.c0))), t1.c63))) WHERE ((((('-723350147')IS(t1.c63))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((+ (vt0.c0))))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN json_array_length(vt0.c0) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN json_array_length(vt0.c0) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((+ (vt0.c0))))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN json_array_length(vt0.c0) ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN json_array_length(vt0.c0) ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((+ ((+ (vt0.c0))))) ORDER BY CASE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0))  WHEN ((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) THEN json_array_length(vt0.c0) ELSE vt0.c0 END;
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (json_remove(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('㦩')), ((t1.c63)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('㦩')), ((t1.c63)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (json_remove(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('㦩')), ((t1.c63)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('㦩')), ((t1.c63)<<(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (json_remove(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('㦩')), ((t1.c63)<<(vt1.c0))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0))==((vt1.c0))) IN ())) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))%(CASE t1.c0  WHEN vt0.c0 THEN t1.c63 ELSE t1.c63 END))  NULLS FIRST, x'' ASC  NULLS FIRST, CASE vt0.c0  WHEN t1.c63 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0))=((vt1.c0))) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))%(CASE t1.c0  WHEN vt0.c0 THEN t1.c63 ELSE t1.c63 END))  NULLS FIRST, x'' ASC  NULLS FIRST, CASE vt0.c0  WHEN t1.c63 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0))==((vt1.c0))) IN ())) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))%(CASE t1.c0  WHEN vt0.c0 THEN t1.c63 ELSE t1.c63 END))  NULLS FIRST, x'' ASC  NULLS FIRST, CASE vt0.c0  WHEN t1.c63 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0))=((vt1.c0))) IN ())) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))%(CASE t1.c0  WHEN vt0.c0 THEN t1.c63 ELSE t1.c63 END))  NULLS FIRST, x'' ASC  NULLS FIRST, CASE vt0.c0  WHEN t1.c63 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (((((t1.c0))==((vt1.c0))) IN ())) ORDER BY (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))%(CASE t1.c0  WHEN vt0.c0 THEN t1.c63 ELSE t1.c63 END))  NULLS FIRST, x'' ASC  NULLS FIRST, CASE vt0.c0  WHEN t1.c63 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE))=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))==(NULL))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE))=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS FALSE))==(NULL))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((vt1.c0) IS FALSE))=(NULL)));
SELECT COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (t1.c63)))) AND ((0Xffffffffb666c2f2)))) ORDER BY (((((((((+ (t1.c63)))AND((((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN t1.c0 THEN '0.17398797296735802' ELSE t1.c0 END)))AND(CASE WHEN vt1.c0 THEN t1.c63 END)))AND((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (t1.c63)))) AND ((0xffffffffb666c2f2)))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((((((+ (t1.c63)))AND((((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN t1.c0 THEN '0.17398797296735802' ELSE t1.c0 END)))AND(CASE WHEN vt1.c0 THEN t1.c63 END)))AND((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (t1.c63)))) AND ((0Xffffffffb666c2f2)))) ORDER BY (((((((((+ (t1.c63)))AND((((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN t1.c0 THEN '0.17398797296735802' ELSE t1.c0 END)))AND(CASE WHEN vt1.c0 THEN t1.c63 END)))AND((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (t1.c63)))) AND ((0xffffffffb666c2f2)))) IS TRUE)  as count FROM t1, vt1 ORDER BY (((((((((+ (t1.c63)))AND((((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN t1.c0 THEN '0.17398797296735802' ELSE t1.c0 END)))AND(CASE WHEN vt1.c0 THEN t1.c63 END)))AND((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)) NOT BETWEEN ((((vt1.c0) BETWEEN (NULL) AND (t1.c63)))) AND ((0Xffffffffb666c2f2)))) ORDER BY (((((((((+ (t1.c63)))AND((((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(CASE vt1.c0  WHEN t1.c0 THEN '0.17398797296735802' ELSE t1.c0 END)))AND(CASE WHEN vt1.c0 THEN t1.c63 END)))AND((((vt1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c0), NULL, ((vt1.c0)LIKE(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c0), NULL, ((vt1.c0)LIKE(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c0), NULL, ((vt1.c0)LIKE(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c0), NULL, ((vt1.c0)LIKE(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt1.c0)IS NOT(vt1.c0)) END) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c0), NULL, ((vt1.c0)LIKE(vt1.c0)))) AND ((vt1.c0, vt1.c0 COLLATE RTRIM, ((vt1.c0) IS TRUE))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)>=(NULL))))) ORDER BY (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)>=(NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)>=(NULL))))) ORDER BY (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)>=(NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(((vt1.c0)>=(NULL))))) ORDER BY (((vt1.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0))) ASC  NULLS FIRST, vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM))=((CAST(t1.c0 AS TEXT)))) FULL OUTER JOIN t1 ON ((CAST(t1.c63 AS TEXT)) IS TRUE) WHERE (((x'f084')=(CAST(x'' AS BLOB)))) ORDER BY ((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)*(NULLIF(DISTINCT vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'f084')=(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM))=((CAST(t1.c0 AS TEXT)))) FULL OUTER JOIN t1 ON ((CAST(t1.c63 AS TEXT)) IS TRUE) ORDER BY ((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)*(NULLIF(DISTINCT vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM))=((CAST(t1.c0 AS TEXT)))) FULL OUTER JOIN t1 ON ((CAST(t1.c63 AS TEXT)) IS TRUE) WHERE (((x'f084')=(CAST(x'' AS BLOB)))) ORDER BY ((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)*(NULLIF(DISTINCT vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((x'f084')=(CAST(x'' AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0 COLLATE RTRIM))=((CAST(t1.c0 AS TEXT)))) FULL OUTER JOIN t1 ON ((CAST(t1.c63 AS TEXT)) IS TRUE) ORDER BY ((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)*(NULLIF(DISTINCT vt1.c0, vt1.c0))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c63);
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c63);
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (t1.c63);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)>(t1.c0)))-(vt0.c0))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((t1.c0 IN ())) AND ((t1.c63 IN (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))-(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t1 ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((t1.c0 IN ())) AND ((t1.c63 IN (NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)>(t1.c0)))-(vt0.c0))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((t1.c0 IN ())) AND ((t1.c63 IN (NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(t1.c0)))-(vt0.c0))) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t1 ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((t1.c0 IN ())) AND ((t1.c63 IN (NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)>(t1.c0)))-(vt0.c0))) ORDER BY ((CAST(t1.c0 AS BLOB)) BETWEEN ((t1.c0 IN ())) AND ((t1.c63 IN (NULL)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c63) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c63) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c63) ORDER BY ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))>=((t1.c63))) IN ((t1.c63 IN (t1.c63, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))>=((t1.c63))) IN ((t1.c63 IN (t1.c63, t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))>=((t1.c63))) IN ((t1.c63 IN (t1.c63, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0))>=((t1.c63))) IN ((t1.c63 IN (t1.c63, t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((((t1.c0))>=((t1.c63))) IN ((t1.c63 IN (t1.c63, t1.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)OR(t1.c63)))AND(t1.c63))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t1.c63)))AND(t1.c63))) NOT NULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)OR(t1.c63)))AND(t1.c63))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(t1.c63)))AND(t1.c63))) NOT NULL)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((vt0.c0)OR(t1.c63)))AND(t1.c63))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED WHERE (((((((NULL)/(t1.c63)))AND(((t1.c63) ISNULL))))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)/(t1.c63)))AND(((t1.c63) ISNULL))))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED WHERE (((((((NULL)/(t1.c63)))AND(((t1.c63) ISNULL))))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END)));
SELECT SUM(count) FROM (SELECT ((((((((NULL)/(t1.c63)))AND(((t1.c63) ISNULL))))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 NOT INDEXED WHERE (((((((NULL)/(t1.c63)))AND(((t1.c63) ISNULL))))OR(CASE t1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c63 END)));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('1662463168' IN (vt1.c0, vt1.c0)))>>((vt1.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))) DESC, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('1662463168' IN (vt1.c0, vt1.c0)))>>((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))) DESC, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('1662463168' IN (vt1.c0, vt1.c0)))>>((vt1.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))) DESC, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('1662463168' IN (vt1.c0, vt1.c0)))>>((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))) DESC, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((('1662463168' IN (vt1.c0, vt1.c0)))>>((vt1.c0 IN (vt0.c0))))) ORDER BY ((((vt0.c0) IS FALSE))IS NOT(COALESCE(DISTINCT vt0.c0, vt0.c0))) DESC, CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST, CASE WHEN ((-1311053349) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY NULL DESC  NULLS LAST, CASE WHEN ((-1311053349) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST, CASE WHEN ((-1311053349) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY NULL DESC  NULLS LAST, CASE WHEN ((-1311053349) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY NULL DESC  NULLS LAST, CASE WHEN ((-1311053349) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END ASC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND ('j-z鎲묯.p')))) WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.23838001319815894) AS INTEGER)) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.23838001319815894) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND ('j-z鎲묯.p')))) ORDER BY (((vt1.c0) IS FALSE) IN ()));
SELECT * FROM vt0 CROSS JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND ('j-z鎲묯.p')))) WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.23838001319815894) AS INTEGER)) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.23838001319815894) AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND ('j-z鎲묯.p')))) ORDER BY (((vt1.c0) IS FALSE) IN ()));
SELECT * FROM vt0 CROSS JOIN vt1 ON (~ (((vt0.c0) BETWEEN (vt1.c0) AND ('j-z鎲묯.p')))) WHERE (CAST(LIKELIHOOD(DISTINCT vt1.c0, 0.23838001319815894) AS INTEGER)) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((((t1.c0, vt1.c0, vt0.c0))!=((vt0.c0, 1383739878, vt1.c0))))) INNER JOIN t1 ON (~ (((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((NULL)==(vt1.c0)))%((((t1.c0, t1.c63, '1239934044')) NOT BETWEEN ((t1.c0, t1.c0, vt1.c0)) AND ((t1.c63, vt0.c0, vt0.c0)))))) ORDER BY ((((NOT (vt0.c0))))=(('-1473264049')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)==(vt1.c0)))%((((t1.c0, t1.c63, '1239934044')) NOT BETWEEN ((t1.c0, t1.c0, vt1.c0)) AND ((t1.c63, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((((t1.c0, vt1.c0, vt0.c0))<>((vt0.c0, 1383739878, vt1.c0))))) INNER JOIN t1 ON (~ (((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((NOT (vt0.c0))))=(('-1473264049'))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((((t1.c0, vt1.c0, vt0.c0))!=((vt0.c0, 1383739878, vt1.c0))))) INNER JOIN t1 ON (~ (((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE (((((NULL)==(vt1.c0)))%((((t1.c0, t1.c63, '1239934044')) NOT BETWEEN ((t1.c0, t1.c0, vt1.c0)) AND ((t1.c63, vt0.c0, vt0.c0)))))) ORDER BY ((((NOT (vt0.c0))))=(('-1473264049')));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)==(vt1.c0)))%((((t1.c0, t1.c63, '1239934044')) NOT BETWEEN ((t1.c0, t1.c0, vt1.c0)) AND ((t1.c63, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN ((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))) AND ((((t1.c0, vt1.c0, vt0.c0))<>((vt0.c0, 1383739878, vt1.c0))))) INNER JOIN t1 ON (~ (((t1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) ORDER BY ((((NOT (vt0.c0))))=(('-1473264049'))));
SELECT ALL COUNT(*) FROM vt1 WHERE (0.4255614876183199);
SELECT SUM(count) FROM (SELECT ALL ((0.4255614876183199) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.4255614876183199);
SELECT SUM(count) FROM (SELECT ALL ((0.4255614876183199) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0.4255614876183199);
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((t1.c63) NOTNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((t1.c63 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c63 IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((t1.c63 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c63 IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE ((t1.c63 IN ()));
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c0))<((vt0.c0))) AS BLOB));
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE WHEN (~ (vt0.c0)) THEN t1.c63 COLLATE BINARY ELSE (t1.c63 IN (t1.c63)) END) ORDER BY (- (CASE WHEN vt1.c0 THEN 0.8908693854324241 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)), x'' DESC, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN t1.c63 COLLATE BINARY ELSE (t1.c63 IN (t1.c63)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (- (CASE WHEN vt1.c0 THEN 0.8908693854324241 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)), x'' DESC, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE WHEN (~ (vt0.c0)) THEN t1.c63 COLLATE BINARY ELSE (t1.c63 IN (t1.c63)) END) ORDER BY (- (CASE WHEN vt1.c0 THEN 0.8908693854324241 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)), x'' DESC, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN t1.c63 COLLATE BINARY ELSE (t1.c63 IN (t1.c63)) END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (- (CASE WHEN vt1.c0 THEN 0.8908693854324241 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)), x'' DESC, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, t1 WHERE (CASE WHEN (~ (vt0.c0)) THEN t1.c63 COLLATE BINARY ELSE (t1.c63 IN (t1.c63)) END) ORDER BY (- (CASE WHEN vt1.c0 THEN 0.8908693854324241 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END)), x'' DESC, (~ (CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ('1131333020'));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ('1131333020')));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ('1131333020'));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ('1131333020')));
SELECT * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ('1131333020'));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((t1.c0) NOTNULL) COLLATE RTRIM WHERE (CAST(CAST(t1.c63 AS REAL) AS TEXT)) ORDER BY t1.c63 ASC, '1꯴	*QESB';
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c63 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((t1.c0) NOTNULL) COLLATE RTRIM ORDER BY t1.c63 ASC, '1꯴	*QESB');
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((t1.c0) NOTNULL) COLLATE RTRIM WHERE (CAST(CAST(t1.c63 AS REAL) AS TEXT)) ORDER BY t1.c63 ASC, '1꯴	*QESB';
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c63 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((t1.c0) NOTNULL) COLLATE RTRIM ORDER BY t1.c63 ASC, '1꯴	*QESB');
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t1 ON ((t1.c0) NOTNULL) COLLATE RTRIM WHERE (CAST(CAST(t1.c63 AS REAL) AS TEXT)) ORDER BY t1.c63 ASC, '1꯴	*QESB';
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CAST((- (x'e377')) AS INTEGER) WHERE ((vt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON CAST((- (x'e377')) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CAST((- (x'e377')) AS INTEGER) WHERE ((vt1.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON CAST((- (x'e377')) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON CAST((- (x'e377')) AS INTEGER) WHERE ((vt1.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'') AND (1704801865))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (x'') AND (1704801865))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'') AND (1704801865))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (x'') AND (1704801865))) IS TRUE)  NULLS FIRST);
SELECT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (x'') AND (1704801865))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((LIKELY(DISTINCT t1.c0))GLOB(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t1.c0))GLOB(((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((LIKELY(DISTINCT t1.c0))GLOB(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT t1.c0))GLOB(((t1.c63) BETWEEN (t1.c0) AND (t1.c63))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((LIKELY(DISTINCT t1.c0))GLOB(((t1.c63) BETWEEN (t1.c0) AND (t1.c63)))));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((x'a1c4')<<((t1.c63 IN (vt1.c0, vt1.c0))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'a1c4')<<((t1.c63 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((x'a1c4')<<((t1.c63 IN (vt1.c0, vt1.c0))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'a1c4')<<((t1.c63 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LAST_INSERT_ROWID()  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (((x'a1c4')<<((t1.c63 IN (vt1.c0, vt1.c0))))) ORDER BY LAST_INSERT_ROWID()  NULLS FIRST;
SELECT * FROM vt1, t1 WHERE (((UPPER(vt1.c0))!=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))<>(t1.c0))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((UPPER(vt1.c0))!=(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt1.c0))<>(t1.c0))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (((UPPER(vt1.c0))!=(t1.c0)));
SELECT * FROM vt0, t1, vt1 WHERE (HEX(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ORDER BY LTRIM(t1.c63 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LTRIM(t1.c63 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (HEX(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ORDER BY LTRIM(t1.c63 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((HEX(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY LTRIM(t1.c63 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (HEX(((t1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ORDER BY LTRIM(t1.c63 COLLATE RTRIM, ((vt1.c0) IS TRUE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c0)AND(t1.c0)))OR(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (- (NULL)) END RIGHT OUTER JOIN t1 ON (+ ((((('')OR(vt1.c0)))AND(t1.c0)))) WHERE (((CASE WHEN vt1.c0 THEN '-729688138' END)IS(t1.c0 COLLATE RTRIM))) ORDER BY ((((INSTR(t1.c63, vt0.c0))OR(CAST(t1.c0 AS NUMERIC))))AND(CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN x'' THEN NULL WHEN vt1.c0 THEN vt0.c0 ELSE x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN '-729688138' END)IS(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c0)AND(t1.c0)))OR(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (- (NULL)) END RIGHT OUTER JOIN t1 ON (+ ((((('')OR(vt1.c0)))AND(t1.c0)))) ORDER BY ((((INSTR(t1.c63, vt0.c0))OR(CAST(t1.c0 AS NUMERIC))))AND(CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN x'' THEN NULL WHEN vt1.c0 THEN vt0.c0 ELSE x'' END)) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c0)AND(t1.c0)))OR(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (- (NULL)) END RIGHT OUTER JOIN t1 ON (+ ((((('')OR(vt1.c0)))AND(t1.c0)))) WHERE (((CASE WHEN vt1.c0 THEN '-729688138' END)IS(t1.c0 COLLATE RTRIM))) ORDER BY ((((INSTR(t1.c63, vt0.c0))OR(CAST(t1.c0 AS NUMERIC))))AND(CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN x'' THEN NULL WHEN vt1.c0 THEN vt0.c0 ELSE x'' END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN '-729688138' END)IS(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CASE CASE WHEN vt0.c0 THEN t1.c0 ELSE vt0.c0 END  WHEN t1.c0 THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE BINARY THEN ((((vt1.c0)AND(t1.c0)))OR(vt1.c0)) WHEN vt1.c0 COLLATE NOCASE THEN (- (NULL)) END RIGHT OUTER JOIN t1 ON (+ ((((('')OR(vt1.c0)))AND(t1.c0)))) ORDER BY ((((INSTR(t1.c63, vt0.c0))OR(CAST(t1.c0 AS NUMERIC))))AND(CASE vt0.c0  WHEN NULL THEN t1.c0 WHEN x'' THEN NULL WHEN vt1.c0 THEN vt0.c0 ELSE x'' END)) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON x'' RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<=(TRIM(vt0.c0, t1.c63))) WHERE ((((((x'', t1.c0, -950747857)) NOT BETWEEN ((t1.c0, t1.c63, NULL)) AND ((t1.c63, t1.c63, t1.c63)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((NULL) BETWEEN (vt0.c0) AND (t1.c63))))) ORDER BY (((- (vt0.c0)))>>((('?危hbP') NOT BETWEEN (x'f7db') AND (t1.c63))));
SELECT SUM(count) FROM (SELECT (((((((x'', t1.c0, -950747857)) NOT BETWEEN ((t1.c0, t1.c63, NULL)) AND ((t1.c63, t1.c63, t1.c63)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((NULL) BETWEEN (vt0.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON x'' RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<=(TRIM(vt0.c0, t1.c63))) ORDER BY (((- (vt0.c0)))>>((('?危hbP') NOT BETWEEN (x'f7db') AND (t1.c63)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON x'' RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<=(TRIM(vt0.c0, t1.c63))) WHERE ((((((x'', t1.c0, -950747857)) NOT BETWEEN ((t1.c0, t1.c63, NULL)) AND ((t1.c63, t1.c63, t1.c63)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((NULL) BETWEEN (vt0.c0) AND (t1.c63))))) ORDER BY (((- (vt0.c0)))>>((('?危hbP') NOT BETWEEN (x'f7db') AND (t1.c63))));
SELECT SUM(count) FROM (SELECT (((((((x'', t1.c0, -950747857)) NOT BETWEEN ((t1.c0, t1.c63, NULL)) AND ((t1.c63, t1.c63, t1.c63)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((NULL) BETWEEN (vt0.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON x'' RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<=(TRIM(vt0.c0, t1.c63))) ORDER BY (((- (vt0.c0)))>>((('?危hbP') NOT BETWEEN (x'f7db') AND (t1.c63)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON x'' RIGHT OUTER JOIN vt0 ON (((NOT (vt0.c0)))<=(TRIM(vt0.c0, t1.c63))) WHERE ((((((x'', t1.c0, -950747857)) NOT BETWEEN ((t1.c0, t1.c63, NULL)) AND ((t1.c63, t1.c63, t1.c63)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN t1.c0 END) AND (((NULL) BETWEEN (vt0.c0) AND (t1.c63))))) ORDER BY (((- (vt0.c0)))>>((('?危hbP') NOT BETWEEN (x'f7db') AND (t1.c63))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))<>((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt0.c0, vt0.c0)))<>((TOTAL_CHANGES())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))<>((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT ALL (((((IFNULL(DISTINCT vt0.c0, vt0.c0)))<>((TOTAL_CHANGES())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))<>((TOTAL_CHANGES()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN 0.12143813097260125 THEN vt1.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.12143813097260125 THEN vt1.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN 0.12143813097260125 THEN vt1.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN 0.12143813097260125 THEN vt1.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN 0.12143813097260125 THEN vt1.c0 ELSE vt0.c0 END)LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON (+ (((t1.c0)<<(vt0.c0)))) CROSS JOIN vt0 ON (((t1.c0 IN (0x5430a99)))IS((vt0.c0 IN ()))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON (+ (((t1.c0)<<(vt0.c0)))) CROSS JOIN vt0 ON (((t1.c0 IN (0x5430a99)))IS((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON (+ (((t1.c0)<<(vt0.c0)))) CROSS JOIN vt0 ON (((t1.c0 IN (0x5430a99)))IS((vt0.c0 IN ()))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON (+ (((t1.c0)<<(vt0.c0)))) CROSS JOIN vt0 ON (((t1.c0 IN (0x5430a99)))IS((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON (+ (((t1.c0)<<(vt0.c0)))) CROSS JOIN vt0 ON (((t1.c0 IN (0x5430a99)))IS((vt0.c0 IN ()))) WHERE (CAST(t1.c0 COLLATE RTRIM AS REAL));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((~ (CAST(vt0.c0 AS TEXT))));
SELECT * FROM t1 WHERE (((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE 0.36992010246002427 END) NOT NULL)) ORDER BY t1.c0 ASC  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN ('-1359697032') AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63)))))OR(LOWER(DISTINCT t1.c63))))OR(CASE t1.c63  WHEN t1.c0 THEN NULL END)))OR((t1.c63 IN ())))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c63) AND (t1.c63)))/(CAST(t1.c63 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE 0.36992010246002427 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN ('-1359697032') AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63)))))OR(LOWER(DISTINCT t1.c63))))OR(CASE t1.c63  WHEN t1.c0 THEN NULL END)))OR((t1.c63 IN ())))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c63) AND (t1.c63)))/(CAST(t1.c63 AS INTEGER))));
SELECT * FROM t1 WHERE (((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE 0.36992010246002427 END) NOT NULL)) ORDER BY t1.c0 ASC  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN ('-1359697032') AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63)))))OR(LOWER(DISTINCT t1.c63))))OR(CASE t1.c63  WHEN t1.c0 THEN NULL END)))OR((t1.c63 IN ())))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c63) AND (t1.c63)))/(CAST(t1.c63 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE 0.36992010246002427 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0 ASC  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN ('-1359697032') AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63)))))OR(LOWER(DISTINCT t1.c63))))OR(CASE t1.c63  WHEN t1.c0 THEN NULL END)))OR((t1.c63 IN ())))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c63) AND (t1.c63)))/(CAST(t1.c63 AS INTEGER))));
SELECT * FROM t1 WHERE (((CASE t1.c63  WHEN t1.c0 THEN t1.c63 ELSE 0.36992010246002427 END) NOT NULL)) ORDER BY t1.c0 ASC  NULLS LAST, ((((((((((t1.c0) NOT BETWEEN ('-1359697032') AND (t1.c0)))AND(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c63)))))OR(LOWER(DISTINCT t1.c63))))OR(CASE t1.c63  WHEN t1.c0 THEN NULL END)))OR((t1.c63 IN ())))  NULLS LAST, ((((t1.c0) BETWEEN (t1.c63) AND (t1.c63)))/(CAST(t1.c63 AS INTEGER)));
SELECT * FROM vt1, vt0, t1 WHERE ((((vt1.c0 IN (vt0.c0)))=(((((t1.c63)AND(vt0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((t1.c0)-(vt0.c0)) THEN vt0.c0 END, CAST(CAST(0.037585932252849896 AS REAL) AS REAL) ASC, ((TYPEOF(t1.c63))LIKE((((t1.c63))>((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt0.c0)))=(((((t1.c63)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN ((t1.c0)-(vt0.c0)) THEN vt0.c0 END, CAST(CAST(0.037585932252849896 AS REAL) AS REAL) ASC, ((TYPEOF(t1.c63))LIKE((((t1.c63))>((t1.c0))))) DESC);
SELECT * FROM vt1, vt0, t1 WHERE ((((vt1.c0 IN (vt0.c0)))=(((((t1.c63)AND(vt0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((t1.c0)-(vt0.c0)) THEN vt0.c0 END, CAST(CAST(0.037585932252849896 AS REAL) AS REAL) ASC, ((TYPEOF(t1.c63))LIKE((((t1.c63))>((t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt0.c0)))=(((((t1.c63)AND(vt0.c0)))AND(NULL))))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY CASE WHEN ((t1.c0)-(vt0.c0)) THEN vt0.c0 END, CAST(CAST(0.037585932252849896 AS REAL) AS REAL) ASC, ((TYPEOF(t1.c63))LIKE((((t1.c63))>((t1.c0))))) DESC);
SELECT * FROM vt1, vt0, t1 WHERE ((((vt1.c0 IN (vt0.c0)))=(((((t1.c63)AND(vt0.c0)))AND(NULL))))) ORDER BY CASE WHEN ((t1.c0)-(vt0.c0)) THEN vt0.c0 END, CAST(CAST(0.037585932252849896 AS REAL) AS REAL) ASC, ((TYPEOF(t1.c63))LIKE((((t1.c63))>((t1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((((vt0.c0)OR(t1.c63)))AND(t1.c0))))) ORDER BY json_type(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63)))OR(-1799551377)))AND(0X5430a99))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(t1.c63)))AND(t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY json_type(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63)))OR(-1799551377)))AND(0X5430a99))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((((vt0.c0)OR(t1.c63)))AND(t1.c0))))) ORDER BY json_type(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63)))OR(-1799551377)))AND(0X5430a99))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((vt0.c0)OR(t1.c63)))AND(t1.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY json_type(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63)))OR(-1799551377)))AND(0X5430a99))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE ((- (((((vt0.c0)OR(t1.c63)))AND(t1.c0))))) ORDER BY json_type(((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63)))OR(-1799551377)))AND(0X5430a99))) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND ((((('')OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND ((((('')OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND ((((('')OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>=(vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND ((((('')OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) BETWEEN (LOWER(vt1.c0)) AND ((((('')OR(vt1.c0)))OR(vt1.c0)))));
SELECT * FROM vt1, vt0 INNER JOIN t1 ON ((((((t1.c63)/(t1.c63)))OR(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(t1.c63)))) WHERE ('-1664485031') ORDER BY 'mS*!\%If' COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, ((((((((t1.c63)OR(NULL)))OR(vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c63)))))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC, CASE WHEN ((vt1.c0)GLOB('-1141592030')) THEN CASE WHEN vt1.c0 THEN t1.c0 WHEN '~uH	}0.E&' THEN t1.c63 WHEN t1.c0 THEN 0.8314734991661915 END ELSE CAST(vt1.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1664485031') IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON ((((((t1.c63)/(t1.c63)))OR(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(t1.c63)))) ORDER BY 'mS*!\%If' COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, ((((((((t1.c63)OR(NULL)))OR(vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c63)))))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC, CASE WHEN ((vt1.c0)GLOB('-1141592030')) THEN CASE WHEN vt1.c0 THEN t1.c0 WHEN '~uH	}0.E&' THEN t1.c63 WHEN t1.c0 THEN 0.8314734991661915 END ELSE CAST(vt1.c0 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 INNER JOIN t1 ON ((((((t1.c63)/(t1.c63)))OR(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(t1.c63)))) WHERE ('-1664485031') ORDER BY 'mS*!\%If' COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, ((((((((t1.c63)OR(NULL)))OR(vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c63)))))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC, CASE WHEN ((vt1.c0)GLOB('-1141592030')) THEN CASE WHEN vt1.c0 THEN t1.c0 WHEN '~uH	}0.E&' THEN t1.c63 WHEN t1.c0 THEN 0.8314734991661915 END ELSE CAST(vt1.c0 AS TEXT) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-1664485031') IS TRUE)  as count FROM vt1, vt0 INNER JOIN t1 ON ((((((t1.c63)/(t1.c63)))OR(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(t1.c63)))) ORDER BY 'mS*!\%If' COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, ((((((((t1.c63)OR(NULL)))OR(vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c63)))))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC, CASE WHEN ((vt1.c0)GLOB('-1141592030')) THEN CASE WHEN vt1.c0 THEN t1.c0 WHEN '~uH	}0.E&' THEN t1.c63 WHEN t1.c0 THEN 0.8314734991661915 END ELSE CAST(vt1.c0 AS TEXT) END ASC  NULLS LAST);
SELECT * FROM vt1, vt0 INNER JOIN t1 ON ((((((t1.c63)/(t1.c63)))OR(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))OR(t1.c63)))) WHERE ('-1664485031') ORDER BY 'mS*!\%If' COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, ((((((((t1.c63)OR(NULL)))OR(vt1.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c63)))))AND((((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) ASC, CASE WHEN ((vt1.c0)GLOB('-1141592030')) THEN CASE WHEN vt1.c0 THEN t1.c0 WHEN '~uH	}0.E&' THEN t1.c63 WHEN t1.c0 THEN 0.8314734991661915 END ELSE CAST(vt1.c0 AS TEXT) END ASC  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE (t1.c0) ORDER BY TRIM(t1.c0) DESC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END, (NOT (((((t1.c63)OR(t1.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY TRIM(t1.c0) DESC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END, (NOT (((((t1.c63)OR(t1.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (t1.c0) ORDER BY TRIM(t1.c0) DESC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END, (NOT (((((t1.c63)OR(t1.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY TRIM(t1.c0) DESC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END, (NOT (((((t1.c63)OR(t1.c0)))OR(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (t1.c0) ORDER BY TRIM(t1.c0) DESC, CASE WHEN ((vt0.c0) IS TRUE) THEN CAST(vt1.c0 AS NUMERIC) END, (NOT (((((t1.c63)OR(t1.c0)))OR(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS REAL)) ORDER BY NULLIF(0.5731264999842334, CAST(t1.c0 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY NULLIF(0.5731264999842334, CAST(t1.c0 AS INTEGER))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS REAL)) ORDER BY NULLIF(0.5731264999842334, CAST(t1.c0 AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY NULLIF(0.5731264999842334, CAST(t1.c0 AS INTEGER))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(CAST(t1.c0 AS REAL) AS REAL)) ORDER BY NULLIF(0.5731264999842334, CAST(t1.c0 AS INTEGER))  NULLS FIRST;
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(t1.c0 AS INTEGER)) BETWEEN (((t1.c63)<=(vt1.c0))) AND ((((vt0.c0))<((x'')))))) ORDER BY ((t1.c63) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) BETWEEN (((t1.c63)<=(vt1.c0))) AND ((((vt0.c0))<((x'')))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c63) IS TRUE) DESC);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(t1.c0 AS INTEGER)) BETWEEN (((t1.c63)<=(vt1.c0))) AND ((((vt0.c0))<((x'')))))) ORDER BY ((t1.c63) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER)) BETWEEN (((t1.c63)<=(vt1.c0))) AND ((((vt0.c0))<((x'')))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c63) IS TRUE) DESC);
SELECT * FROM vt0, vt1, t1 WHERE (((CAST(t1.c0 AS INTEGER)) BETWEEN (((t1.c63)<=(vt1.c0))) AND ((((vt0.c0))<((x'')))))) ORDER BY ((t1.c63) IS TRUE) DESC;
SELECT * FROM vt0 INNER JOIN t1 ON CASE ((x'')>>(t1.c63))  WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c63) NOT BETWEEN ('/䮸') AND (t1.c0)) WHEN ('101111180' IN (t1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((t1.c0, t1.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0))) THEN (NOT ('6')) WHEN (t1.c0 IN ()) THEN ((vt0.c0)%(t1.c63)) WHEN vt1.c0 THEN UPPER(DISTINCT vt1.c0) ELSE CASE vt0.c0  WHEN t1.c63 THEN t1.c0 END END INNER JOIN vt1 ON ((((x'')<<(vt1.c0))) BETWEEN (((vt0.c0)/(t1.c0))) AND ((NOT (t1.c63)))) WHERE (vt0.c0) ORDER BY CASE t1.c63  WHEN vt0.c0 THEN x'' WHEN (((vt1.c0)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE WHEN t1.c63 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c63)) THEN (((vt0.c0, t1.c63, t1.c63))=((t1.c63, 0.7138772904616048, vt1.c0))) ELSE ((((vt1.c0)OR(x'')))AND(vt0.c0)) END DESC  NULLS LAST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))=(((t1.c63) BETWEEN ('聤s') AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON CASE ((x'')>>(t1.c63))  WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c63) NOT BETWEEN ('/䮸') AND (t1.c0)) WHEN ('101111180' IN (t1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((t1.c0, t1.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0))) THEN (NOT ('6')) WHEN (t1.c0 IN ()) THEN ((vt0.c0)%(t1.c63)) WHEN vt1.c0 THEN UPPER(DISTINCT vt1.c0) ELSE CASE vt0.c0  WHEN t1.c63 THEN t1.c0 END END INNER JOIN vt1 ON ((((x'')<<(vt1.c0))) BETWEEN (((vt0.c0)/(t1.c0))) AND ((NOT (t1.c63)))) ORDER BY CASE t1.c63  WHEN vt0.c0 THEN x'' WHEN (((vt1.c0)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE WHEN t1.c63 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c63)) THEN (((vt0.c0, t1.c63, t1.c63))=((t1.c63, 0.7138772904616048, vt1.c0))) ELSE ((((vt1.c0)OR(x'')))AND(vt0.c0)) END DESC  NULLS LAST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))=(((t1.c63) BETWEEN ('聤s') AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t1 ON CASE ((x'')>>(t1.c63))  WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c63) NOT BETWEEN ('/䮸') AND (t1.c0)) WHEN ('101111180' IN (t1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((t1.c0, t1.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0))) THEN (NOT ('6')) WHEN (t1.c0 IN ()) THEN ((vt0.c0)%(t1.c63)) WHEN vt1.c0 THEN UPPER(DISTINCT vt1.c0) ELSE CASE vt0.c0  WHEN t1.c63 THEN t1.c0 END END INNER JOIN vt1 ON ((((x'')<<(vt1.c0))) BETWEEN (((vt0.c0)/(t1.c0))) AND ((NOT (t1.c63)))) WHERE (vt0.c0) ORDER BY CASE t1.c63  WHEN vt0.c0 THEN x'' WHEN (((vt1.c0)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE WHEN t1.c63 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c63)) THEN (((vt0.c0, t1.c63, t1.c63))=((t1.c63, 0.7138772904616048, vt1.c0))) ELSE ((((vt1.c0)OR(x'')))AND(vt0.c0)) END DESC  NULLS LAST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))=(((t1.c63) BETWEEN ('聤s') AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON CASE ((x'')>>(t1.c63))  WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c63) NOT BETWEEN ('/䮸') AND (t1.c0)) WHEN ('101111180' IN (t1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((t1.c0, t1.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0))) THEN (NOT ('6')) WHEN (t1.c0 IN ()) THEN ((vt0.c0)%(t1.c63)) WHEN vt1.c0 THEN UPPER(DISTINCT vt1.c0) ELSE CASE vt0.c0  WHEN t1.c63 THEN t1.c0 END END INNER JOIN vt1 ON ((((x'')<<(vt1.c0))) BETWEEN (((vt0.c0)/(t1.c0))) AND ((NOT (t1.c63)))) ORDER BY CASE t1.c63  WHEN vt0.c0 THEN x'' WHEN (((vt1.c0)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE WHEN t1.c63 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c63)) THEN (((vt0.c0, t1.c63, t1.c63))=((t1.c63, 0.7138772904616048, vt1.c0))) ELSE ((((vt1.c0)OR(x'')))AND(vt0.c0)) END DESC  NULLS LAST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))=(((t1.c63) BETWEEN ('聤s') AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN t1 ON CASE ((x'')>>(t1.c63))  WHEN CAST(vt0.c0 AS REAL) THEN ((t1.c63) NOT BETWEEN ('/䮸') AND (t1.c0)) WHEN ('101111180' IN (t1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((t1.c0, t1.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt1.c0))) THEN (NOT ('6')) WHEN (t1.c0 IN ()) THEN ((vt0.c0)%(t1.c63)) WHEN vt1.c0 THEN UPPER(DISTINCT vt1.c0) ELSE CASE vt0.c0  WHEN t1.c63 THEN t1.c0 END END INNER JOIN vt1 ON ((((x'')<<(vt1.c0))) BETWEEN (((vt0.c0)/(t1.c0))) AND ((NOT (t1.c63)))) WHERE (vt0.c0) ORDER BY CASE t1.c63  WHEN vt0.c0 THEN x'' WHEN (((vt1.c0)) NOT BETWEEN ((t1.c63)) AND ((vt1.c0))) THEN CASE WHEN t1.c63 THEN vt1.c0 ELSE vt1.c0 END WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c63)) THEN (((vt0.c0, t1.c63, t1.c63))=((t1.c63, 0.7138772904616048, vt1.c0))) ELSE ((((vt1.c0)OR(x'')))AND(vt0.c0)) END DESC  NULLS LAST, (((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))=(((t1.c63) BETWEEN ('聤s') AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((+ ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c63)+(0.0773816398545989)) IN (vt1.c0 COLLATE BINARY, (((t1.c0, t1.c0, t1.c0))=((t1.c63, t1.c63, vt1.c0)))))) ORDER BY (~ (((t1.c0)&(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c63)+(0.0773816398545989)) IN (vt1.c0 COLLATE BINARY, (((t1.c0, t1.c0, t1.c0))=((t1.c63, t1.c63, vt1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (((t1.c0)&(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c63)+(0.0773816398545989)) IN (vt1.c0 COLLATE BINARY, (((t1.c0, t1.c0, t1.c0))=((t1.c63, t1.c63, vt1.c0)))))) ORDER BY (~ (((t1.c0)&(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c63)+(0.0773816398545989)) IN (vt1.c0 COLLATE BINARY, (((t1.c0, t1.c0, t1.c0))=((t1.c63, t1.c63, vt1.c0)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (~ (((t1.c0)&(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c63)+(0.0773816398545989)) IN (vt1.c0 COLLATE BINARY, (((t1.c0, t1.c0, t1.c0))=((t1.c63, t1.c63, vt1.c0)))))) ORDER BY (~ (((t1.c0)&(t1.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY (((NULL)AND(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((NULL)AND(t1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY (((NULL)AND(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((NULL)AND(t1.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CAST(t1.c0 AS NUMERIC)) ORDER BY (((NULL)AND(t1.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (t1.c63) AND (vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) THEN (((t1.c63, x'962d', vt1.c0))!=((t1.c0, t1.c63, vt0.c0))) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE (((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (t1.c63) AND (vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) THEN (((t1.c63, x'962d', vt1.c0))!=((t1.c0, t1.c63, vt0.c0))) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE (((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))) END DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (t1.c63) AND (vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) THEN (((t1.c63, x'962d', vt1.c0))!=((t1.c0, t1.c63, vt0.c0))) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE (((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (t1.c63) AND (vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) THEN (((t1.c63, x'962d', vt1.c0))!=((t1.c0, t1.c63, vt0.c0))) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE (((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))) END DESC);
SELECT ALL * FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN ((vt0.c0) NOT BETWEEN (t1.c63) AND (vt1.c0)) WHEN ((t1.c0) BETWEEN (t1.c0) AND (vt1.c0)) THEN (((t1.c63, x'962d', vt1.c0))!=((t1.c0, t1.c63, vt0.c0))) WHEN t1.c0 THEN t1.c63 COLLATE NOCASE ELSE (((t1.c63)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))) END DESC;
SELECT ALL * FROM vt0, t1, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT ALL * FROM vt0, t1, vt1 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((vt1.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ())))>=((((vt1.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((vt1.c0)%(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 IN ())))>=((((vt1.c0)%(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt1.c0 IN ())))>=((((vt1.c0)%(vt0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), (((vt0.c0))<((0Xade89c5))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0)), CAST(vt1.c0 AS BLOB), 0.44733041859722855))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), (((vt0.c0))<((0Xade89c5))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0)), CAST(vt1.c0 AS BLOB), 0.44733041859722855))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), (((vt0.c0))<((0Xade89c5))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0)), CAST(vt1.c0 AS BLOB), 0.44733041859722855))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), (((vt0.c0))<((0Xade89c5))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0)), CAST(vt1.c0 AS BLOB), 0.44733041859722855))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((- (vt1.c0)), (((vt0.c0))<((0Xade89c5))), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((((vt0.c0)<=(vt0.c0)), CAST(vt1.c0 AS BLOB), 0.44733041859722855))) WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM vt1, t1, vt0 WHERE (vt0.c0) ORDER BY ((((t1.c63)-(t1.c63)))GLOB(((t1.c63) NOT BETWEEN (t1.c63) AND (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(-1965942343)))>(((t1.c0)IS NOT(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c63)-(t1.c63)))GLOB(((t1.c63) NOT BETWEEN (t1.c63) AND (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(-1965942343)))>(((t1.c0)IS NOT(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, t1, vt0 WHERE (vt0.c0) ORDER BY ((((t1.c63)-(t1.c63)))GLOB(((t1.c63) NOT BETWEEN (t1.c63) AND (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(-1965942343)))>(((t1.c0)IS NOT(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c63)-(t1.c63)))GLOB(((t1.c63) NOT BETWEEN (t1.c63) AND (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(-1965942343)))>(((t1.c0)IS NOT(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, t1, vt0 WHERE (vt0.c0) ORDER BY ((((t1.c63)-(t1.c63)))GLOB(((t1.c63) NOT BETWEEN (t1.c63) AND (vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)AND(-1965942343)))>(((t1.c0)IS NOT(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((((((NULL)) NOT BETWEEN ((769357715)) AND (('Z8(3x먌U袶E'))), (- (t1.c0)), ((vt0.c0)>=(t1.c63))))!=((((t1.c63) BETWEEN (t1.c0) AND (t1.c63)), ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)) NOT BETWEEN ((769357715)) AND (('Z8(3x먌U袶E'))), (- (t1.c0)), ((vt0.c0)>=(t1.c63))))<>((((t1.c63) BETWEEN (t1.c0) AND (t1.c63)), ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), t1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((((((NULL)) NOT BETWEEN ((769357715)) AND (('Z8(3x먌U袶E'))), (- (t1.c0)), ((vt0.c0)>=(t1.c63))))!=((((t1.c63) BETWEEN (t1.c0) AND (t1.c63)), ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)) NOT BETWEEN ((769357715)) AND (('Z8(3x먌U袶E'))), (- (t1.c0)), ((vt0.c0)>=(t1.c63))))<>((((t1.c63) BETWEEN (t1.c0) AND (t1.c63)), ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), t1.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((((((NULL)) NOT BETWEEN ((769357715)) AND (('Z8(3x먌U袶E'))), (- (t1.c0)), ((vt0.c0)>=(t1.c63))))!=((((t1.c63) BETWEEN (t1.c0) AND (t1.c63)), ((((t1.c0)AND(vt0.c0)))AND(vt0.c0)), t1.c0))));
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((NOT (t1.c63))))<((((((vt1.c0)OR(t1.c0)))AND(0.8540016119532869))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t1.c63))))<((((((vt1.c0)OR(t1.c0)))AND(0.8540016119532869)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((NOT (t1.c63))))<((((((vt1.c0)OR(t1.c0)))AND(0.8540016119532869))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t1.c63))))<((((((vt1.c0)OR(t1.c0)))AND(0.8540016119532869)))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((NOT (t1.c63))))<((((((vt1.c0)OR(t1.c0)))AND(0.8540016119532869))))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((- (vt0.c0)))*(CAST(t1.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))*(CAST(t1.c63 AS REAL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((- (vt0.c0)))*(CAST(t1.c63 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))*(CAST(t1.c63 AS REAL)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((- (vt0.c0)))*(CAST(t1.c63 AS REAL))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)-(vt1.c0))) NOT NULL) INNER JOIN t1 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE (((((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))/(COALESCE(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))/(COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)-(vt1.c0))) NOT NULL) INNER JOIN t1 ON ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)-(vt1.c0))) NOT NULL) INNER JOIN t1 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE (((((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))/(COALESCE(t1.c0, t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))/(COALESCE(t1.c0, t1.c0)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)-(vt1.c0))) NOT NULL) INNER JOIN t1 ON ((vt0.c0) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)-(vt1.c0))) NOT NULL) INNER JOIN t1 ON ((vt0.c0) IS FALSE) COLLATE BINARY WHERE (((((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))/(COALESCE(t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((t1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((t1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOT NULL)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, t1 WHERE (((t1.c0) NOT NULL));
SELECT ALL * FROM t1 WHERE ((((((t1.c0) IS TRUE)))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c63)))))) ORDER BY (((t1.c0))==((t1.c63))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) IS TRUE)))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c63)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))=((t1.c63))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((((t1.c0) IS TRUE)))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c63)))))) ORDER BY (((t1.c0))==((t1.c63))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((t1.c0) IS TRUE)))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c63)))))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0))=((t1.c63))) COLLATE BINARY);
SELECT ALL * FROM t1 WHERE ((((((t1.c0) IS TRUE)))>((((t1.c0) BETWEEN (t1.c0) AND (t1.c63)))))) ORDER BY (((t1.c0))==((t1.c63))) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (vt0.c0 IN ()) ELSE (~ (vt0.c0)) END) ORDER BY CASE WHEN (((vt0.c0))>((vt0.c0))) THEN ((vt0.c0) NOT NULL) ELSE (~ (vt0.c0)) END ASC;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((t1.c0)AND(((0.039483887755841995) ISNULL))) WHERE ((- ((t1.c63 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c63 IN (vt0.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((t1.c0)AND(((0.039483887755841995) ISNULL))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((t1.c0)AND(((0.039483887755841995) ISNULL))) WHERE ((- ((t1.c63 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c63 IN (vt0.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((t1.c0)AND(((0.039483887755841995) ISNULL))));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((t1.c0)AND(((0.039483887755841995) ISNULL))) WHERE ((- ((t1.c63 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((vt0.c0)OR(t1.c0)))AND(''))) AND (t1.c0)) CROSS JOIN t1 ON (CAST(vt0.c0 AS INTEGER) IN ((((vt1.c0))<((t1.c0))))) WHERE (t1.c0) ORDER BY (((((t1.c0, vt1.c0, t1.c63)) NOT BETWEEN ((x'770b', vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((vt0.c0)OR(t1.c0)))AND(''))) AND (t1.c0)) CROSS JOIN t1 ON (CAST(vt0.c0 AS INTEGER) IN ((((vt1.c0))<((t1.c0))))) ORDER BY (((((t1.c0, vt1.c0, t1.c63)) NOT BETWEEN ((x'770b', vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))) ISNULL) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((vt0.c0)OR(t1.c0)))AND(''))) AND (t1.c0)) CROSS JOIN t1 ON (CAST(vt0.c0 AS INTEGER) IN ((((vt1.c0))<((t1.c0))))) WHERE (t1.c0) ORDER BY (((((t1.c0, vt1.c0, t1.c63)) NOT BETWEEN ((x'770b', vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((vt0.c0)OR(t1.c0)))AND(''))) AND (t1.c0)) CROSS JOIN t1 ON (CAST(vt0.c0 AS INTEGER) IN ((((vt1.c0))<((t1.c0))))) ORDER BY (((((t1.c0, vt1.c0, t1.c63)) NOT BETWEEN ((x'770b', vt1.c0, t1.c63)) AND ((vt0.c0, t1.c0, t1.c63)))) ISNULL) DESC);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY -323326413  NULLS FIRST, 0.971289144035496 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY -323326413  NULLS FIRST, 0.971289144035496 DESC);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) ORDER BY -323326413  NULLS FIRST, 0.971289144035496 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1 ORDER BY -323326413  NULLS FIRST, 0.971289144035496 DESC);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((t1.c63) NOT NULL)) ORDER BY (- ((((x'', vt0.c0, vt1.c0))=((vt0.c0, '-562902338', t1.c63))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) NOT NULL)) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY (- ((((x'', vt0.c0, vt1.c0))=((vt0.c0, '-562902338', t1.c63))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((t1.c63) NOT NULL)) ORDER BY (- ((((x'', vt0.c0, vt1.c0))=((vt0.c0, '-562902338', t1.c63))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63) NOT NULL)) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON vt1.c0 ORDER BY (- ((((x'', vt0.c0, vt1.c0))=((vt0.c0, '-562902338', t1.c63))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, vt1 INNER JOIN vt0 ON vt1.c0 WHERE (((t1.c63) NOT NULL)) ORDER BY (- ((((x'', vt0.c0, vt1.c0))=((vt0.c0, '-562902338', t1.c63))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c63)&(t1.c63)), ((t1.c63)&(t1.c0)), ((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c63)), (t1.c63 IN ()), ((vt0.c0)LIKE(t1.c0))))=((((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)), ((t1.c0)-(t1.c63)), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((t1.c63)&(t1.c63)), ((t1.c63)&(t1.c0)), ((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c63)), (t1.c63 IN ()), ((vt0.c0)LIKE(t1.c0))))==((((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)), ((t1.c0)-(t1.c63)), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c63)&(t1.c63)), ((t1.c63)&(t1.c0)), ((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c63)), (t1.c63 IN ()), ((vt0.c0)LIKE(t1.c0))))=((((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)), ((t1.c0)-(t1.c63)), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((((t1.c63)&(t1.c63)), ((t1.c63)&(t1.c0)), ((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c63)), (t1.c63 IN ()), ((vt0.c0)LIKE(t1.c0))))==((((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)), ((t1.c0)-(t1.c63)), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((((t1.c63)&(t1.c63)), ((t1.c63)&(t1.c0)), ((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c63)), (t1.c63 IN ()), ((vt0.c0)LIKE(t1.c0))))=((((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)), ((t1.c0)-(t1.c63)), CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ())))));
SELECT * FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.9162629899326467))) ORDER BY ((vt0.c0)OR((- (vt0.c0))))  NULLS FIRST, (((((vt0.c0))<((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.9162629899326467))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR((- (vt0.c0))))  NULLS FIRST, (((((vt0.c0))<((vt0.c0)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.9162629899326467))) ORDER BY ((vt0.c0)OR((- (vt0.c0))))  NULLS FIRST, (((((vt0.c0))<((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.9162629899326467))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)OR((- (vt0.c0))))  NULLS FIRST, (((((vt0.c0))<((vt0.c0)))) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND(UNLIKELY(DISTINCT vt0.c0))))OR(((vt0.c0)GLOB(vt0.c0)))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(0.9162629899326467))) ORDER BY ((vt0.c0)OR((- (vt0.c0))))  NULLS FIRST, (((((vt0.c0))<((vt0.c0)))) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CAST(x'1f0e18fe' AS BLOB))LIKE(ABS(DISTINCT vt1.c0)))) ORDER BY x'72434a60';
SELECT SUM(count) FROM (SELECT ((((CAST(x'1f0e18fe' AS BLOB))LIKE(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'72434a60');
SELECT ALL * FROM vt1 WHERE (((CAST(x'1f0e18fe' AS BLOB))LIKE(ABS(DISTINCT vt1.c0)))) ORDER BY x'72434a60';
SELECT SUM(count) FROM (SELECT ((((CAST(x'1f0e18fe' AS BLOB))LIKE(ABS(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'72434a60');
SELECT ALL * FROM vt1 WHERE (((CAST(x'1f0e18fe' AS BLOB))LIKE(ABS(DISTINCT vt1.c0)))) ORDER BY x'72434a60';
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0)IS NOT(vt0.c0)) COLLATE RTRIM);
SELECT * FROM t1, vt1, vt0 WHERE (CASE WHEN x'' THEN CAST(t1.c0 AS NUMERIC) WHEN 0.21433794544633644 COLLATE RTRIM THEN 0.9841620556270786 WHEN (((vt0.c0))<=((t1.c63))) THEN IFNULL(vt0.c0, t1.c63) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY ((CAST(0.6508983810447533 AS INTEGER)) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c63)AND(t1.c63)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(t1.c0 AS NUMERIC) WHEN 0.21433794544633644 COLLATE RTRIM THEN 0.9841620556270786 WHEN (((vt0.c0))<=((t1.c63))) THEN IFNULL(vt0.c0, t1.c63) ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((CAST(0.6508983810447533 AS INTEGER)) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c63)AND(t1.c63)))OR(vt0.c0)))));
SELECT * FROM t1, vt1, vt0 WHERE (CASE WHEN x'' THEN CAST(t1.c0 AS NUMERIC) WHEN 0.21433794544633644 COLLATE RTRIM THEN 0.9841620556270786 WHEN (((vt0.c0))<=((t1.c63))) THEN IFNULL(vt0.c0, t1.c63) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY ((CAST(0.6508983810447533 AS INTEGER)) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c63)AND(t1.c63)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN CAST(t1.c0 AS NUMERIC) WHEN 0.21433794544633644 COLLATE RTRIM THEN 0.9841620556270786 WHEN (((vt0.c0))<=((t1.c63))) THEN IFNULL(vt0.c0, t1.c63) ELSE CAST(t1.c0 AS BLOB) END) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((CAST(0.6508983810447533 AS INTEGER)) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c63)AND(t1.c63)))OR(vt0.c0)))));
SELECT * FROM t1, vt1, vt0 WHERE (CASE WHEN x'' THEN CAST(t1.c0 AS NUMERIC) WHEN 0.21433794544633644 COLLATE RTRIM THEN 0.9841620556270786 WHEN (((vt0.c0))<=((t1.c63))) THEN IFNULL(vt0.c0, t1.c63) ELSE CAST(t1.c0 AS BLOB) END) ORDER BY ((CAST(0.6508983810447533 AS INTEGER)) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (((((t1.c63)AND(t1.c63)))OR(vt0.c0))));
SELECT ALL * FROM vt0, t1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((((vt0.c0)OR(t1.c0)))AND(t1.c63)) THEN '-459674120' WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN t1.c63 WHEN json_extract(vt0.c0, 0.9511478174429734) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((((vt0.c0)OR(t1.c0)))AND(t1.c63)) THEN '-459674120' WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN t1.c63 WHEN json_extract(vt0.c0, 0.9511478174429734) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((((vt0.c0)OR(t1.c0)))AND(t1.c63)) THEN '-459674120' WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN t1.c63 WHEN json_extract(vt0.c0, 0.9511478174429734) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN ((((vt0.c0)OR(t1.c0)))AND(t1.c63)) THEN '-459674120' WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN t1.c63 WHEN json_extract(vt0.c0, 0.9511478174429734) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN ((((vt0.c0)OR(t1.c0)))AND(t1.c63)) THEN '-459674120' WHEN CASE WHEN t1.c63 THEN t1.c0 END THEN t1.c63 WHEN json_extract(vt0.c0, 0.9511478174429734) THEN (t1.c0 IN ()) END);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c63) IS TRUE) IN (CAST(t1.c0 AS BLOB), t1.c0))) ORDER BY ((t1.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((t1.c63) IS TRUE) IN (CAST(t1.c0 AS BLOB), t1.c0))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c63) IS TRUE) IN (CAST(t1.c0 AS BLOB), t1.c0))) ORDER BY ((t1.c0) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((t1.c63) IS TRUE) IN (CAST(t1.c0 AS BLOB), t1.c0))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c63) IS TRUE) IN (CAST(t1.c0 AS BLOB), t1.c0))) ORDER BY ((t1.c0) NOT NULL);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))))AND(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))))AND(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))))AND(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))))AND(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))))OR(NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((((((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))))AND(vt0.c0)))AND(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (UPPER((((t1.c63, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, t1.c0, vt1.c0))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((t1.c63, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, t1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (UPPER((((t1.c63, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, t1.c0, vt1.c0))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((t1.c63, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, t1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (UPPER((((t1.c63, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, t1.c0, vt1.c0))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c63)=('0.31618829669227555')))>(((t1.c63) BETWEEN ('') AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c63)=('0.31618829669227555')))>(((t1.c63) BETWEEN ('') AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c63)=('0.31618829669227555')))>(((t1.c63) BETWEEN ('') AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c63)=('0.31618829669227555')))>(((t1.c63) BETWEEN ('') AND (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c63)=('0.31618829669227555')))>(((t1.c63) BETWEEN ('') AND (t1.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (((vt0.c0)<<(vt0.c0))) AND (((vt0.c0)IS(vt0.c0))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((vt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON (json_array(vt0.c0, vt1.c0) IN ()) WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (0.9813556684993704))) NOT BETWEEN ((~ (t1.c63))) AND (vt1.c0))) ORDER BY ((t1.c63 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (vt0.c0) AND (0.9813556684993704))) NOT BETWEEN ((~ (t1.c63))) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON (json_array(vt0.c0, vt1.c0) IN ()) ORDER BY ((t1.c63 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON (json_array(vt0.c0, vt1.c0) IN ()) WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (0.9813556684993704))) NOT BETWEEN ((~ (t1.c63))) AND (vt1.c0))) ORDER BY ((t1.c63 IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0) BETWEEN (vt0.c0) AND (0.9813556684993704))) NOT BETWEEN ((~ (t1.c63))) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON (json_array(vt0.c0, vt1.c0) IN ()) ORDER BY ((t1.c63 IN ()) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON (json_array(vt0.c0, vt1.c0) IN ()) WHERE (((((t1.c0) BETWEEN (vt0.c0) AND (0.9813556684993704))) NOT BETWEEN ((~ (t1.c63))) AND (vt1.c0))) ORDER BY ((t1.c63 IN ()) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN 0.8896397500245108 WHEN vt1.c0 THEN vt1.c0 WHEN '824854385' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (((vt1.c0))>((vt1.c0))) END) ORDER BY (((vt1.c0 IN (0x5d198968)))|(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN 0.8896397500245108 WHEN vt1.c0 THEN vt1.c0 WHEN '824854385' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (((vt1.c0))>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (0x5d198968)))|(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN 0.8896397500245108 WHEN vt1.c0 THEN vt1.c0 WHEN '824854385' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (((vt1.c0))>((vt1.c0))) END) ORDER BY (((vt1.c0 IN (0x5d198968)))|(((vt1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN 0.8896397500245108 WHEN vt1.c0 THEN vt1.c0 WHEN '824854385' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (((vt1.c0))>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN (0x5d198968)))|(((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN 0.8896397500245108 WHEN vt1.c0 THEN vt1.c0 WHEN '824854385' THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE (((vt1.c0))>((vt1.c0))) END) ORDER BY (((vt1.c0 IN (0x5d198968)))|(((vt1.c0) NOTNULL)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST(x'a0e0' AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(x'a0e0' AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST(x'a0e0' AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CAST(x'a0e0' AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND ((vt1.c0 IN ())))) ORDER BY CAST(x'a0e0' AS TEXT) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c0))) ORDER BY (((~ (vt1.c0)))<<(UPPER(vt1.c0)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS FIRST, CASE vt1.c0  WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))<<(UPPER(vt1.c0)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS FIRST, CASE vt1.c0  WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c0))) ORDER BY (((~ (vt1.c0)))<<(UPPER(vt1.c0)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS FIRST, CASE vt1.c0  WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0)))<<(UPPER(vt1.c0)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS FIRST, CASE vt1.c0  WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0)>(vt1.c0))) ORDER BY (((~ (vt1.c0)))<<(UPPER(vt1.c0)))  NULLS FIRST, NULL COLLATE NOCASE  NULLS FIRST, CASE vt1.c0  WHEN (- (vt1.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL))GLOB(CASE WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END)) WHERE ((NOT (((t1.c63)-(t1.c63)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c63)-(t1.c63))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL))GLOB(CASE WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL))GLOB(CASE WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END)) WHERE ((NOT (((t1.c63)-(t1.c63)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c63)-(t1.c63))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL))GLOB(CASE WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END)));
SELECT COUNT(*) FROM t1 CROSS JOIN vt0 ON ((((vt0.c0) NOT NULL))GLOB(CASE WHEN t1.c63 THEN t1.c63 ELSE t1.c63 END)) WHERE ((NOT (((t1.c63)-(t1.c63)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((((0.23877246944379626)) BETWEEN ((t1.c63)) AND ((vt0.c0)))) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (CHAR(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((0.23877246944379626)) BETWEEN ((t1.c63)) AND ((vt0.c0)))) BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((((0.23877246944379626)) BETWEEN ((t1.c63)) AND ((vt0.c0)))) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (CHAR(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((0.23877246944379626)) BETWEEN ((t1.c63)) AND ((vt0.c0)))) BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (CHAR(vt1.c0)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE ((((((0.23877246944379626)) BETWEEN ((t1.c63)) AND ((vt0.c0)))) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (CHAR(vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- ((NOT (vt0.c0))))  NULLS LAST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_patch(vt0.c0, vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((NOT (vt0.c0))))  NULLS LAST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- ((NOT (vt0.c0))))  NULLS LAST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_patch(vt0.c0, vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (- ((NOT (vt0.c0))))  NULLS LAST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((json_patch(vt0.c0, vt0.c0))GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (- ((NOT (vt0.c0))))  NULLS LAST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.c0)))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))AND((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c63))) BETWEEN (0.8896397500245108) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY t1.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c0)))AND(t1.c63))) BETWEEN (0.8896397500245108) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY t1.c63 ASC);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c63))) BETWEEN (0.8896397500245108) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY t1.c63 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c0)))AND(t1.c63))) BETWEEN (0.8896397500245108) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY t1.c63 ASC);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((((t1.c0)AND(t1.c0)))AND(t1.c63))) BETWEEN (0.8896397500245108) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY t1.c63 ASC;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON json_valid(t1.c63 COLLATE RTRIM) WHERE (((t1.c63 IN ()) IN ())) ORDER BY (NOT ('u]]ngd뵁dU' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c63 IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON json_valid(t1.c63 COLLATE RTRIM) ORDER BY (NOT ('u]]ngd뵁dU' COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON json_valid(t1.c63 COLLATE RTRIM) WHERE (((t1.c63 IN ()) IN ())) ORDER BY (NOT ('u]]ngd뵁dU' COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t1.c63 IN ()) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON json_valid(t1.c63 COLLATE RTRIM) ORDER BY (NOT ('u]]ngd뵁dU' COLLATE BINARY)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON json_valid(t1.c63 COLLATE RTRIM) WHERE (((t1.c63 IN ()) IN ())) ORDER BY (NOT ('u]]ngd뵁dU' COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND ('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND ('')) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND ('')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt1.c0) AND ('')) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt1.c0) AND ('')) AS BLOB));
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c63)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c63)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c63)) BETWEEN ((((vt1.c0) IS TRUE))) AND ((SQLITE_COMPILEOPTION_GET(vt1.c0)))));
SELECT * FROM vt0 INNER JOIN vt1 ON ((0Xffffffffa1cd4e66) BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) WHERE (CASE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, x'', vt0.c0)))  WHEN PRINTF('-0.0') THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (+ (''));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, x'', vt0.c0)))  WHEN PRINTF('-0.0') THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((0Xffffffffa1cd4e66) BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ORDER BY (+ ('')));
SELECT * FROM vt0 INNER JOIN vt1 ON ((0Xffffffffa1cd4e66) BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) WHERE (CASE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, x'', vt0.c0)))  WHEN PRINTF('-0.0') THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (+ (''));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, x'', vt0.c0)))  WHEN PRINTF('-0.0') THEN CAST(vt1.c0 AS BLOB) END) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((0Xffffffffa1cd4e66) BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) ORDER BY (+ ('')));
SELECT * FROM vt0 INNER JOIN vt1 ON ((0Xffffffffa1cd4e66) BETWEEN (vt0.c0) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) WHERE (CASE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, x'', vt0.c0)))  WHEN PRINTF('-0.0') THEN CAST(vt1.c0 AS BLOB) END) ORDER BY (+ (''));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE ((t1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE ((t1.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 NOT INDEXED WHERE ((t1.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt1, t1 WHERE ((((NOT (t1.c63)))==(t1.c63))) ORDER BY CASE WHEN (+ (t1.c63)) THEN HEX(t1.c63) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c63)))==(t1.c63))) IS TRUE)  as count FROM vt1, t1 ORDER BY CASE WHEN (+ (t1.c63)) THEN HEX(t1.c63) END DESC);
SELECT * FROM vt1, t1 WHERE ((((NOT (t1.c63)))==(t1.c63))) ORDER BY CASE WHEN (+ (t1.c63)) THEN HEX(t1.c63) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c63)))==(t1.c63))) IS TRUE)  as count FROM vt1, t1 ORDER BY CASE WHEN (+ (t1.c63)) THEN HEX(t1.c63) END DESC);
SELECT * FROM vt1, t1 WHERE ((((NOT (t1.c63)))==(t1.c63))) ORDER BY CASE WHEN (+ (t1.c63)) THEN HEX(t1.c63) END DESC;
SELECT ALL * FROM vt0, vt1, t1 WHERE ((- ((~ ('1131981812'))))) ORDER BY (- (((((((((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- ((~ ('1131981812'))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (- (((((((((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((- ((~ ('1131981812'))))) ORDER BY (- (((((((((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((- ((~ ('1131981812'))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (- (((((((((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))OR(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((- ((~ ('1131981812'))))) ORDER BY (- (((((((((((((vt0.c0)AND(t1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t1.c63)))OR(vt0.c0))));
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c63) BETWEEN (vt1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c63) BETWEEN (vt1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c63) BETWEEN (vt1.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c63) BETWEEN (vt1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN t1.c0 COLLATE RTRIM THEN vt1.c0 ELSE ((t1.c63) BETWEEN (vt1.c0) AND (t1.c0)) END);
SELECT * FROM vt1 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ('')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (''))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT ('')));
SELECT * FROM vt1 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE NOCASE)+(((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)+(((vt1.c0) ISNULL))) ASC);
SELECT * FROM vt1 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE NOCASE)+(((vt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)+(((vt1.c0) ISNULL))) ASC);
SELECT * FROM vt1 WHERE (((((((NULL)AND(vt1.c0)))OR(vt1.c0))) IS TRUE)) ORDER BY ((vt1.c0 COLLATE NOCASE)+(((vt1.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c0)*(vt0.c0)) END WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END IN (CHAR(t1.c0)))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END IN (CHAR(t1.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c0)*(vt0.c0)) END ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c0)*(vt0.c0)) END WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END IN (CHAR(t1.c0)))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END IN (CHAR(t1.c0)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c0)*(vt0.c0)) END ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t1 ON CASE WHEN CAST(vt0.c0 AS BLOB) THEN ((t1.c0)*(vt0.c0)) END WHERE ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c63 THEN t1.c63 END IN (CHAR(t1.c0)))) ORDER BY vt1.c0 DESC;
SELECT * FROM vt1, t1, vt0 WHERE ((((vt1.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN t1.c0 END, ABS(DISTINCT t1.c63)))) ORDER BY CASE json_extract(vt0.c0, t1.c63)  WHEN CASE vt1.c0  WHEN x'559f' THEN t1.c0 ELSE vt1.c0 END THEN (t1.c63 IN ()) ELSE '[N(!5uC6' END DESC  NULLS FIRST, (+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN t1.c0 END, ABS(DISTINCT t1.c63)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE json_extract(vt0.c0, t1.c63)  WHEN CASE vt1.c0  WHEN x'559f' THEN t1.c0 ELSE vt1.c0 END THEN (t1.c63 IN ()) ELSE '[N(!5uC6' END DESC  NULLS FIRST, (+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, t1, vt0 WHERE ((((vt1.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN t1.c0 END, ABS(DISTINCT t1.c63)))) ORDER BY CASE json_extract(vt0.c0, t1.c63)  WHEN CASE vt1.c0  WHEN x'559f' THEN t1.c0 ELSE vt1.c0 END THEN (t1.c63 IN ()) ELSE '[N(!5uC6' END DESC  NULLS FIRST, (+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN t1.c0 END, ABS(DISTINCT t1.c63)))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY CASE json_extract(vt0.c0, t1.c63)  WHEN CASE vt1.c0  WHEN x'559f' THEN t1.c0 ELSE vt1.c0 END THEN (t1.c63 IN ()) ELSE '[N(!5uC6' END DESC  NULLS FIRST, (+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, t1, vt0 WHERE ((((vt1.c0) IS FALSE) IN (CASE WHEN vt1.c0 THEN t1.c0 END, ABS(DISTINCT t1.c63)))) ORDER BY CASE json_extract(vt0.c0, t1.c63)  WHEN CASE vt1.c0  WHEN x'559f' THEN t1.c0 ELSE vt1.c0 END THEN (t1.c63 IN ()) ELSE '[N(!5uC6' END DESC  NULLS FIRST, (+ ((((t1.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CASE ((t1.c0)%(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)+(vt1.c0)) END) ORDER BY (NOT (((x'') BETWEEN (vt0.c0) AND (t1.c0)))) DESC, CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)%(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (NOT (((x'') BETWEEN (vt0.c0) AND (t1.c0)))) DESC, CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CASE ((t1.c0)%(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)+(vt1.c0)) END) ORDER BY (NOT (((x'') BETWEEN (vt0.c0) AND (t1.c0)))) DESC, CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0)%(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)+(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (NOT (((x'') BETWEEN (vt0.c0) AND (t1.c0)))) DESC, CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) END);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (CASE ((t1.c0)%(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)+(vt1.c0)) END) ORDER BY (NOT (((x'') BETWEEN (vt0.c0) AND (t1.c0)))) DESC, CASE (~ (vt0.c0))  WHEN ((((((((vt0.c0)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) END;
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(CASE vt0.c0  WHEN t1.c0 THEN t1.c63 END, LENGTH(t1.c63))) ORDER BY ((((t1.c0)GLOB('1131333020')))GLOB(((((t1.c0)AND(t1.c63)))OR(t1.c0))))  NULLS LAST, (((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))AND('779025186'))))<>(((t1.c63 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN t1.c0 THEN t1.c63 END, LENGTH(t1.c63))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0)GLOB('1131333020')))GLOB(((((t1.c0)AND(t1.c63)))OR(t1.c0))))  NULLS LAST, (((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))AND('779025186'))))<>(((t1.c63 IN (t1.c0))))));
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(CASE vt0.c0  WHEN t1.c0 THEN t1.c63 END, LENGTH(t1.c63))) ORDER BY ((((t1.c0)GLOB('1131333020')))GLOB(((((t1.c0)AND(t1.c63)))OR(t1.c0))))  NULLS LAST, (((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))AND('779025186'))))<>(((t1.c63 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN t1.c0 THEN t1.c63 END, LENGTH(t1.c63))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0)GLOB('1131333020')))GLOB(((((t1.c0)AND(t1.c63)))OR(t1.c0))))  NULLS LAST, (((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))AND('779025186'))))<>(((t1.c63 IN (t1.c0))))));
SELECT ALL * FROM t1, vt0 WHERE (COALESCE(CASE vt0.c0  WHEN t1.c0 THEN t1.c63 END, LENGTH(t1.c63))) ORDER BY ((((t1.c0)GLOB('1131333020')))GLOB(((((t1.c0)AND(t1.c63)))OR(t1.c0))))  NULLS LAST, (((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)))AND('779025186'))))<>(((t1.c63 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0)<=(t1.c63)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN (((vt1.c0)<=(t1.c63))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0)<=(t1.c63)))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE RTRIM IN (((vt1.c0)<=(t1.c63))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ((vt1.c0 COLLATE RTRIM IN (((vt1.c0)<=(t1.c63)))));
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)<<(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)<<(((vt1.c0)>=(vt1.c0)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)<<(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c0)<<(((vt1.c0)>=(vt1.c0)))) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((vt0.c0)<<(((vt1.c0)>=(vt1.c0)))) ASC;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT (vt0.c0)));
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))=((vt0.c0)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) ASC);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))=((vt0.c0)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) ASC);
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0))=((vt0.c0)))))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<(vt0.c0)))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))||(vt1.c0)) WHERE (((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST, (((vt0.c0 IN ()))=((((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))||(vt1.c0)) ORDER BY vt1.c0  NULLS LAST, (((vt0.c0 IN ()))==((((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))||(vt1.c0)) WHERE (((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST, (((vt0.c0 IN ()))=((((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))||(vt1.c0)) ORDER BY vt1.c0  NULLS LAST, (((vt0.c0 IN ()))==((((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))||(vt1.c0)) WHERE (((((vt0.c0)IS(vt1.c0))) NOT BETWEEN ((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, vt0.c0)))) AND (((vt1.c0)||(vt1.c0))))) ORDER BY vt1.c0  NULLS LAST, (((vt0.c0 IN ()))=((((vt0.c0, vt1.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt0.c0)))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((1341595238))>=((vt1.c0))) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((1341595238))>=((vt1.c0))) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC);
SELECT * FROM vt1 WHERE (((((1341595238))>=((vt1.c0))) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((1341595238))>=((vt1.c0))) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC);
SELECT * FROM vt1 WHERE (((((1341595238))>=((vt1.c0))) IN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ORDER BY CAST((vt1.c0 IN ()) AS TEXT) DESC;
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)|(t1.c0)))=(vt0.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND (((('0.24103868941815643')<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(t1.c0)))=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND (((('0.24103868941815643')!=(vt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)|(t1.c0)))=(vt0.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND (((('0.24103868941815643')<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(t1.c0)))=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0 ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND (((('0.24103868941815643')!=(vt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)|(t1.c0)))=(vt0.c0 COLLATE RTRIM))) ORDER BY (((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0)))) AND (((('0.24103868941815643')<>(vt0.c0)))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON (((((((((('') IS FALSE))AND(((t1.c0)&(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((((t1.c63)) BETWEEN ((vt0.c0)) AND ((t1.c63))))))AND((NOT (x'')))) CROSS JOIN vt0 ON ((vt1.c0)&(CAST(t1.c0 AS INTEGER))) WHERE (((((t1.c0)<>(t1.c63)))-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)!=(t1.c63)))-(vt0.c0))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((((((((('') IS FALSE))AND(((t1.c0)&(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((((t1.c63)) BETWEEN ((vt0.c0)) AND ((t1.c63))))))AND((NOT (x'')))) CROSS JOIN vt0 ON ((vt1.c0)&(CAST(t1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON (((((((((('') IS FALSE))AND(((t1.c0)&(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((((t1.c63)) BETWEEN ((vt0.c0)) AND ((t1.c63))))))AND((NOT (x'')))) CROSS JOIN vt0 ON ((vt1.c0)&(CAST(t1.c0 AS INTEGER))) WHERE (((((t1.c0)<>(t1.c63)))-(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)!=(t1.c63)))-(vt0.c0))) IS TRUE)  as count FROM t1 INNER JOIN vt1 ON (((((((((('') IS FALSE))AND(((t1.c0)&(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((((t1.c63)) BETWEEN ((vt0.c0)) AND ((t1.c63))))))AND((NOT (x'')))) CROSS JOIN vt0 ON ((vt1.c0)&(CAST(t1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt1 ON (((((((((('') IS FALSE))AND(((t1.c0)&(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((((t1.c63)) BETWEEN ((vt0.c0)) AND ((t1.c63))))))AND((NOT (x'')))) CROSS JOIN vt0 ON ((vt1.c0)&(CAST(t1.c0 AS INTEGER))) WHERE (((((t1.c0)<>(t1.c63)))-(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((x'9d8da737') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (UPPER(DISTINCT 'w4')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'9d8da737') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (UPPER(DISTINCT 'w4'))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((x'9d8da737') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (UPPER(DISTINCT 'w4')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0 ORDER BY ((x'9d8da737') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (UPPER(DISTINCT 'w4'))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ORDER BY ((x'9d8da737') BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (UPPER(DISTINCT 'w4')));
SELECT ALL * FROM vt0, vt1, t1 WHERE (0.9458553775509494);
SELECT SUM(count) FROM (SELECT ALL ((0.9458553775509494) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (0.9458553775509494);
SELECT SUM(count) FROM (SELECT ALL ((0.9458553775509494) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE (0.9458553775509494);
SELECT COUNT(*) FROM vt0 WHERE (0.7428480230715797);
SELECT SUM(count) FROM (SELECT ALL ((0.7428480230715797) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7428480230715797);
SELECT SUM(count) FROM (SELECT ALL ((0.7428480230715797) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.7428480230715797);
SELECT * FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0))<((t1.c0))) WHEN ((('-1192429816')) BETWEEN ((0.007886362974246497)) AND ((vt1.c0))) THEN ((t1.c0) IS TRUE) WHEN (~ (vt1.c0)) THEN CAST(t1.c63 AS TEXT) END) ORDER BY (((((0.7952383287574251, t1.c63, NULL)) NOT BETWEEN ((t1.c0, vt1.c0, t1.c63)) AND ((t1.c0, t1.c0, t1.c0)))) IS TRUE) DESC, ((('rK*')) NOT BETWEEN ((CASE WHEN t1.c63 THEN t1.c63 ELSE vt1.c0 END)) AND ((((t1.c0)+(t1.c63))))), 0Xffffffff8912016c DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0))<((t1.c0))) WHEN ((('-1192429816')) BETWEEN ((0.007886362974246497)) AND ((vt1.c0))) THEN ((t1.c0) IS TRUE) WHEN (~ (vt1.c0)) THEN CAST(t1.c63 AS TEXT) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1 ORDER BY (((((0.7952383287574251, t1.c63, NULL)) NOT BETWEEN ((t1.c0, vt1.c0, t1.c63)) AND ((t1.c0, t1.c0, t1.c0)))) IS TRUE) DESC, ((('rK*')) NOT BETWEEN ((CASE WHEN t1.c63 THEN t1.c63 ELSE vt1.c0 END)) AND ((((t1.c0)+(t1.c63))))), 0Xffffffff8912016c DESC);
SELECT * FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0))<((t1.c0))) WHEN ((('-1192429816')) BETWEEN ((0.007886362974246497)) AND ((vt1.c0))) THEN ((t1.c0) IS TRUE) WHEN (~ (vt1.c0)) THEN CAST(t1.c63 AS TEXT) END) ORDER BY (((((0.7952383287574251, t1.c63, NULL)) NOT BETWEEN ((t1.c0, vt1.c0, t1.c63)) AND ((t1.c0, t1.c0, t1.c0)))) IS TRUE) DESC, ((('rK*')) NOT BETWEEN ((CASE WHEN t1.c63 THEN t1.c63 ELSE vt1.c0 END)) AND ((((t1.c0)+(t1.c63))))), 0Xffffffff8912016c DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0))<((t1.c0))) WHEN ((('-1192429816')) BETWEEN ((0.007886362974246497)) AND ((vt1.c0))) THEN ((t1.c0) IS TRUE) WHEN (~ (vt1.c0)) THEN CAST(t1.c63 AS TEXT) END) IS TRUE)  as count FROM vt1 NATURAL JOIN t1 ORDER BY (((((0.7952383287574251, t1.c63, NULL)) NOT BETWEEN ((t1.c0, vt1.c0, t1.c63)) AND ((t1.c0, t1.c0, t1.c0)))) IS TRUE) DESC, ((('rK*')) NOT BETWEEN ((CASE WHEN t1.c63 THEN t1.c63 ELSE vt1.c0 END)) AND ((((t1.c0)+(t1.c63))))), 0Xffffffff8912016c DESC);
SELECT * FROM vt1 NATURAL JOIN t1 WHERE (CASE WHEN ((vt1.c0)GLOB(vt1.c0)) THEN (((vt1.c0))<((t1.c0))) WHEN ((('-1192429816')) BETWEEN ((0.007886362974246497)) AND ((vt1.c0))) THEN ((t1.c0) IS TRUE) WHEN (~ (vt1.c0)) THEN CAST(t1.c63 AS TEXT) END) ORDER BY (((((0.7952383287574251, t1.c63, NULL)) NOT BETWEEN ((t1.c0, vt1.c0, t1.c63)) AND ((t1.c0, t1.c0, t1.c0)))) IS TRUE) DESC, ((('rK*')) NOT BETWEEN ((CASE WHEN t1.c63 THEN t1.c63 ELSE vt1.c0 END)) AND ((((t1.c0)+(t1.c63))))), 0Xffffffff8912016c DESC;
SELECT ALL COUNT(*) FROM t1 WHERE ('g0') ORDER BY (NOT (((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('g0') IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ('g0') ORDER BY (NOT (((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('g0') IS TRUE)  as count FROM t1 ORDER BY (NOT (((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ('g0') ORDER BY (NOT (((t1.c63) NOT BETWEEN (t1.c0) AND (t1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((NOT (((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((0.42043664670636016)/(t1.c63)))/(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((((t1.c63))=((vt0.c0)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.42043664670636016)/(t1.c63)))/(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((((t1.c63))==((vt0.c0)))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((0.42043664670636016)/(t1.c63)))/(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((((t1.c63))=((vt0.c0)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.42043664670636016)/(t1.c63)))/(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (((((t1.c63))==((vt0.c0)))) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((0.42043664670636016)/(t1.c63)))/(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ORDER BY (((((t1.c63))=((vt0.c0)))) IS TRUE) DESC;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0X658adcc5 FULL OUTER JOIN t1 ON vt0.c0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 0x658adcc5 FULL OUTER JOIN t1 ON vt0.c0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0X658adcc5 FULL OUTER JOIN t1 ON vt0.c0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON 0x658adcc5 FULL OUTER JOIN t1 ON vt0.c0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON 0X658adcc5 FULL OUTER JOIN t1 ON vt0.c0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (+ ('V5㲄xqQo'))  WHEN ((t1.c63) IS TRUE) THEN x'' END CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE BINARY))) WHERE (((((vt0.c0)<(vt0.c0)))|(((t1.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))|(((t1.c0)<(t1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (+ ('V5㲄xqQo'))  WHEN ((t1.c63) IS TRUE) THEN x'' END CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE BINARY))));
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (+ ('V5㲄xqQo'))  WHEN ((t1.c63) IS TRUE) THEN x'' END CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE BINARY))) WHERE (((((vt0.c0)<(vt0.c0)))|(((t1.c0)<(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0)))|(((t1.c0)<(t1.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE (+ ('V5㲄xqQo'))  WHEN ((t1.c63) IS TRUE) THEN x'' END CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE BINARY))));
SELECT * FROM vt0 CROSS JOIN vt1 ON CASE (+ ('V5㲄xqQo'))  WHEN ((t1.c63) IS TRUE) THEN x'' END CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((vt1.c0 COLLATE BINARY))) WHERE (((((vt0.c0)<(vt0.c0)))|(((t1.c0)<(t1.c0)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))|('0.46826770885157687')) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))|('0.46826770885157687')) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))|('0.46826770885157687')) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))|('0.46826770885157687')) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c0 AS INTEGER))|('0.46826770885157687')) WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY ((vt0.c0 COLLATE BINARY) IS TRUE) ASC;
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c0) IS TRUE))<>(t1.c0))) ORDER BY (((t1.c0))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))!=(t1.c0))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c0))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))) ASC  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c0) IS TRUE))<>(t1.c0))) ORDER BY (((t1.c0))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE))!=(t1.c0))) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (((t1.c0))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))) ASC  NULLS LAST);
SELECT * FROM t1, vt0, vt1 WHERE (((((vt0.c0) IS TRUE))<>(t1.c0))) ORDER BY (((t1.c0))<=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 NATURAL JOIN t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1);
SELECT * FROM vt0, vt1 NATURAL JOIN t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1);
SELECT * FROM vt0, vt1 NATURAL JOIN t1 WHERE (t1.c0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((json_array(vt0.c0, vt0.c0), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((json_array(vt0.c0, vt0.c0), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((json_array(vt0.c0, vt0.c0), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((json_array(vt0.c0, vt0.c0), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))<((json_array(vt0.c0, vt0.c0), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (- (vt1.c0)) LEFT OUTER JOIN t1 ON ((t1.c63) IS TRUE) WHERE ((t1.c63 COLLATE NOCASE IN (((vt1.c0)<=(t1.c63)), (('7&.K')OR(vt0.c0))))) ORDER BY PRINTF(CASE t1.c0  WHEN x'' THEN x'f09c' ELSE vt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c63 COLLATE NOCASE IN (((vt1.c0)<=(t1.c63)), (('7&.K')OR(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (- (vt1.c0)) LEFT OUTER JOIN t1 ON ((t1.c63) IS TRUE) ORDER BY PRINTF(CASE t1.c0  WHEN x'' THEN x'f09c' ELSE vt0.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (- (vt1.c0)) LEFT OUTER JOIN t1 ON ((t1.c63) IS TRUE) WHERE ((t1.c63 COLLATE NOCASE IN (((vt1.c0)<=(t1.c63)), (('7&.K')OR(vt0.c0))))) ORDER BY PRINTF(CASE t1.c0  WHEN x'' THEN x'f09c' ELSE vt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c63 COLLATE NOCASE IN (((vt1.c0)<=(t1.c63)), (('7&.K')OR(vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (- (vt1.c0)) LEFT OUTER JOIN t1 ON ((t1.c63) IS TRUE) ORDER BY PRINTF(CASE t1.c0  WHEN x'' THEN x'f09c' ELSE vt0.c0 END)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (- (vt1.c0)) LEFT OUTER JOIN t1 ON ((t1.c63) IS TRUE) WHERE ((t1.c63 COLLATE NOCASE IN (((vt1.c0)<=(t1.c63)), (('7&.K')OR(vt0.c0))))) ORDER BY PRINTF(CASE t1.c0  WHEN x'' THEN x'f09c' ELSE vt0.c0 END)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)|(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC, vt0.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (CASE CAST(t1.c63 AS TEXT)  WHEN ((t1.c0)<>(t1.c63)) THEN (~ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c63 AS TEXT)  WHEN ((t1.c0)!=(t1.c63)) THEN (~ (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE CAST(t1.c63 AS TEXT)  WHEN ((t1.c0)<>(t1.c63)) THEN (~ (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t1.c63 AS TEXT)  WHEN ((t1.c0)!=(t1.c63)) THEN (~ (t1.c0)) END) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE CAST(t1.c63 AS TEXT)  WHEN ((t1.c0)<>(t1.c63)) THEN (~ (t1.c0)) END);
SELECT ALL * FROM vt1 WHERE ('') ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT ALL * FROM vt1 WHERE ('') ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC);
SELECT ALL * FROM vt1 WHERE ('') ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE NOCASE ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END ASC;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c63 IN ()))AND(((t1.c0)IS NOT(t1.c0)))))AND(SUBSTR(vt0.c0, t1.c63))) FULL OUTER JOIN vt1 ON ((((vt0.c0)LIKE(x'cf265477'))) BETWEEN (((((((((vt0.c0)OR(t1.c0)))OR(t1.c63)))OR(vt0.c0)))AND(t1.c0))) AND ((- (t1.c0)))) WHERE (t1.c63) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c63 IN ()))AND(((t1.c0)IS NOT(t1.c0)))))AND(SUBSTR(vt0.c0, t1.c63))) FULL OUTER JOIN vt1 ON ((((vt0.c0)LIKE(x'cf265477'))) BETWEEN (((((((((vt0.c0)OR(t1.c0)))OR(t1.c63)))OR(vt0.c0)))AND(t1.c0))) AND ((- (t1.c0)))) ORDER BY t1.c0 DESC);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c63 IN ()))AND(((t1.c0)IS NOT(t1.c0)))))AND(SUBSTR(vt0.c0, t1.c63))) FULL OUTER JOIN vt1 ON ((((vt0.c0)LIKE(x'cf265477'))) BETWEEN (((((((((vt0.c0)OR(t1.c0)))OR(t1.c63)))OR(vt0.c0)))AND(t1.c0))) AND ((- (t1.c0)))) WHERE (t1.c63) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((t1.c63) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c63 IN ()))AND(((t1.c0)IS NOT(t1.c0)))))AND(SUBSTR(vt0.c0, t1.c63))) FULL OUTER JOIN vt1 ON ((((vt0.c0)LIKE(x'cf265477'))) BETWEEN (((((((((vt0.c0)OR(t1.c0)))OR(t1.c63)))OR(vt0.c0)))AND(t1.c0))) AND ((- (t1.c0)))) ORDER BY t1.c0 DESC);
SELECT ALL * FROM t1 LEFT OUTER JOIN vt0 ON (((((t1.c63 IN ()))AND(((t1.c0)IS NOT(t1.c0)))))AND(SUBSTR(vt0.c0, t1.c63))) FULL OUTER JOIN vt1 ON ((((vt0.c0)LIKE(x'cf265477'))) BETWEEN (((((((((vt0.c0)OR(t1.c0)))OR(t1.c63)))OR(vt0.c0)))AND(t1.c0))) AND ((- (t1.c0)))) WHERE (t1.c63) ORDER BY t1.c0 DESC;
SELECT ALL * FROM t1 WHERE ('z4');
SELECT SUM(count) FROM (SELECT ALL (('z4') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('z4');
SELECT SUM(count) FROM (SELECT ALL (('z4') IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ('z4');
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS REAL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS REAL)) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS REAL)) ORDER BY vt1.c0 ASC;
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)>=(((((x'')AND(t1.c63)))OR(t1.c63)))) WHERE (TYPEOF(((t1.c0) ISNULL))) ORDER BY TRIM(DISTINCT vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0) ISNULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)>=(((((x'')AND(t1.c63)))OR(t1.c63)))) ORDER BY TRIM(DISTINCT vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)>=(((((x'')AND(t1.c63)))OR(t1.c63)))) WHERE (TYPEOF(((t1.c0) ISNULL))) ORDER BY TRIM(DISTINCT vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t1.c0) ISNULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)>=(((((x'')AND(t1.c63)))OR(t1.c63)))) ORDER BY TRIM(DISTINCT vt1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t1 RIGHT OUTER JOIN vt1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)>=(((((x'')AND(t1.c63)))OR(t1.c63)))) WHERE (TYPEOF(((t1.c0) ISNULL))) ORDER BY TRIM(DISTINCT vt1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))!=(((vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)GLOB(vt1.c0))))<>(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))!=(((vt1.c0 IN (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)GLOB(vt1.c0))))<>(((vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)GLOB(vt1.c0))))!=(((vt1.c0 IN (vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)+((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS TEXT))IS NOT(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)+((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))IS NOT(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)+((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS TEXT))IS NOT(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)+((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS TEXT))IS NOT(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE ''  WHEN vt1.c0 THEN vt1.c0 END)+((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY ((CAST(vt1.c0 AS TEXT))IS NOT(((vt1.c0)AND(vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 INNER JOIN vt1 ON (((~ (t1.c63))) NOTNULL) WHERE (((((vt0.c0)OR(vt1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY (- ((t1.c63 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 INNER JOIN vt1 ON (((~ (t1.c63))) NOTNULL) ORDER BY (- ((t1.c63 IN ()))));
SELECT ALL * FROM t1, vt0 INNER JOIN vt1 ON (((~ (t1.c63))) NOTNULL) WHERE (((((vt0.c0)OR(vt1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY (- ((t1.c63 IN ())));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 INNER JOIN vt1 ON (((~ (t1.c63))) NOTNULL) ORDER BY (- ((t1.c63 IN ()))));
SELECT ALL * FROM t1, vt0 INNER JOIN vt1 ON (((~ (t1.c63))) NOTNULL) WHERE (((((vt0.c0)OR(vt1.c0)))OR(t1.c0)) COLLATE RTRIM) ORDER BY (- ((t1.c63 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0) NOT NULL))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0) IS FALSE))) ASC;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((('260915175') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('260915175') ISNULL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((('260915175') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('260915175') ISNULL)) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE ((('260915175') ISNULL));
SELECT ALL * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c63 END) NOT BETWEEN (((((t1.c63)AND(vt0.c0)))AND(t1.c0))) AND ((- (t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN t1.c63 END) NOT BETWEEN (((((t1.c63)AND(vt0.c0)))AND(t1.c0))) AND ((- (t1.c63))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c63 END) NOT BETWEEN (((((t1.c63)AND(vt0.c0)))AND(t1.c0))) AND ((- (t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c0  WHEN vt0.c0 THEN t1.c63 END) NOT BETWEEN (((((t1.c63)AND(vt0.c0)))AND(t1.c0))) AND ((- (t1.c63))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE (((CASE t1.c0  WHEN vt0.c0 THEN t1.c63 END) NOT BETWEEN (((((t1.c63)AND(vt0.c0)))AND(t1.c0))) AND ((- (t1.c63)))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)LIKE(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)LIKE(vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c63, x'5bb6', vt0.c0)) BETWEEN ((((vt1.c0)/(vt1.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)))) AND ((vt0.c0, CAST(vt1.c0 AS BLOB), ('P7' IN ())))) CROSS JOIN vt0 ON t1.c0 WHERE (((((NULL) IS FALSE))LIKE(((vt0.c0)|(t1.c63))))) ORDER BY (NULL IN ()), (((x'') NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE))LIKE(((vt0.c0)|(t1.c63))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c63, x'5bb6', vt0.c0)) BETWEEN ((((vt1.c0)/(vt1.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)))) AND ((vt0.c0, CAST(vt1.c0 AS BLOB), ('P7' IN ())))) CROSS JOIN vt0 ON t1.c0 ORDER BY (NULL IN ()), (((x'') NOTNULL) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c63, x'5bb6', vt0.c0)) BETWEEN ((((vt1.c0)/(vt1.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)))) AND ((vt0.c0, CAST(vt1.c0 AS BLOB), ('P7' IN ())))) CROSS JOIN vt0 ON t1.c0 WHERE (((((NULL) IS FALSE))LIKE(((vt0.c0)|(t1.c63))))) ORDER BY (NULL IN ()), (((x'') NOTNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE))LIKE(((vt0.c0)|(t1.c63))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((t1.c63, x'5bb6', vt0.c0)) BETWEEN ((((vt1.c0)/(vt1.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c63) BETWEEN (t1.c0) AND (vt0.c0)))) AND ((vt0.c0, CAST(vt1.c0 AS BLOB), ('P7' IN ())))) CROSS JOIN vt0 ON t1.c0 ORDER BY (NULL IN ()), (((x'') NOTNULL) IN ()) ASC  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)&(vt0.c0)))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND('%+')))OR(vt0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)&(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND('%+')))OR(vt0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)&(vt0.c0)))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND('%+')))OR(vt0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt1.c0)&(vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND('%+')))OR(vt0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ())))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (LOWER(((vt1.c0)&(vt0.c0)))) ORDER BY ((((vt1.c0) NOTNULL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND('%+')))OR(vt0.c0)))AND(vt1.c0))) AND ((vt0.c0 IN ())))  NULLS LAST;
SELECT * FROM t1, vt1 WHERE (((((((((((t1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((((((((t1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((((((((t1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t1.c0)))OR(t1.c0))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND((vt0.c0 IN ()))))AND(((vt0.c0)%(vt0.c0)))));
SELECT * FROM t1 INDEXED BY i77 RIGHT OUTER JOIN vt0 ON ((((t1.c0) IS FALSE))>(((((t1.c63)AND(vt0.c0)))OR(t1.c63)))) WHERE ((((t1.c0 IN ())) IS TRUE)) ORDER BY ((t1.c63) NOT NULL)  NULLS LAST, (~ (((vt0.c0)IS NOT(t1.c63)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1 INDEXED BY i77 RIGHT OUTER JOIN vt0 ON ((((t1.c0) IS FALSE))>(((((t1.c63)AND(vt0.c0)))OR(t1.c63)))) ORDER BY ((t1.c63) NOT NULL)  NULLS LAST, (~ (((vt0.c0)IS NOT(t1.c63)))) DESC);
SELECT * FROM t1 INDEXED BY i77 RIGHT OUTER JOIN vt0 ON ((((t1.c0) IS FALSE))>(((((t1.c63)AND(vt0.c0)))OR(t1.c63)))) WHERE ((((t1.c0 IN ())) IS TRUE)) ORDER BY ((t1.c63) NOT NULL)  NULLS LAST, (~ (((vt0.c0)IS NOT(t1.c63)))) DESC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1 INDEXED BY i77 RIGHT OUTER JOIN vt0 ON ((((t1.c0) IS FALSE))>(((((t1.c63)AND(vt0.c0)))OR(t1.c63)))) ORDER BY ((t1.c63) NOT NULL)  NULLS LAST, (~ (((vt0.c0)IS NOT(t1.c63)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0)==(vt0.c0))))) ORDER BY IFNULL(ABS(vt0.c0), (vt0.c0 IN (vt0.c0))), ((((vt0.c0)<(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(ABS(vt0.c0), (vt0.c0 IN (vt0.c0))), ((((vt0.c0)<(vt0.c0)))>(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0)==(vt0.c0))))) ORDER BY IFNULL(ABS(vt0.c0), (vt0.c0 IN (vt0.c0))), ((((vt0.c0)<(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(ABS(vt0.c0), (vt0.c0 IN (vt0.c0))), ((((vt0.c0)<(vt0.c0)))>(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0)==(vt0.c0))))) ORDER BY IFNULL(ABS(vt0.c0), (vt0.c0 IN (vt0.c0))), ((((vt0.c0)<(vt0.c0)))>(vt0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY '' ASC, vt0.c0  NULLS LAST, ((0.5984112638561413) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY '' ASC, vt0.c0  NULLS LAST, ((0.5984112638561413) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY '' ASC, vt0.c0  NULLS LAST, ((0.5984112638561413) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY '' ASC, vt0.c0  NULLS LAST, ((0.5984112638561413) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY '' ASC, vt0.c0  NULLS LAST, ((0.5984112638561413) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) ISNULL) WHERE (((x'') NOT NULL)) ORDER BY 0.86079417268664;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) ISNULL) ORDER BY 0.86079417268664);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) ISNULL) WHERE (((x'') NOT NULL)) ORDER BY 0.86079417268664;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT NULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) ISNULL) ORDER BY 0.86079417268664);
SELECT ALL COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0) NOT NULL)) ISNULL) WHERE (((x'') NOT NULL)) ORDER BY 0.86079417268664;
SELECT ALL * FROM t1 WHERE (((((t1.c63) IS TRUE))IS(t1.c0 COLLATE NOCASE))) ORDER BY LTRIM(CASE WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) IS TRUE))IS(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY LTRIM(CASE WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c63) IS TRUE))IS(t1.c0 COLLATE NOCASE))) ORDER BY LTRIM(CASE WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63) IS TRUE))IS(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY LTRIM(CASE WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) DESC);
SELECT ALL * FROM t1 WHERE (((((t1.c63) IS TRUE))IS(t1.c0 COLLATE NOCASE))) ORDER BY LTRIM(CASE WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) DESC;
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((0.5152680751202317)) AND ((t1.c63))) THEN t1.c63 END) ORDER BY ((CAST(t1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((0.5152680751202317)) AND ((t1.c63))) THEN t1.c63 END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CAST(t1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((0.5152680751202317)) AND ((t1.c63))) THEN t1.c63 END) ORDER BY ((CAST(t1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((0.5152680751202317)) AND ((t1.c63))) THEN t1.c63 END) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((CAST(t1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (CASE ((t1.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((0.5152680751202317)) AND ((t1.c63))) THEN t1.c63 END) ORDER BY ((CAST(t1.c0 AS REAL)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)=(((t1.c63) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)==(((t1.c63) IS TRUE)))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)=(((t1.c63) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)==(((t1.c63) IS TRUE)))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((vt0.c0 COLLATE NOCASE)=(((t1.c63) IS TRUE))));
SELECT ALL * FROM vt0, t1 WHERE (0.5189113381115402) ORDER BY ((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((0.5189113381115402) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))) NOT NULL));
SELECT ALL * FROM vt0, t1 WHERE (0.5189113381115402) ORDER BY ((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((0.5189113381115402) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))) NOT NULL));
SELECT ALL * FROM vt0, t1 WHERE (0.5189113381115402) ORDER BY ((((t1.c63) BETWEEN (t1.c0) AND (t1.c63))) NOT NULL);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c63) IS TRUE)))) ORDER BY LIKELY(t1.c0);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c63) IS TRUE)))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY LIKELY(t1.c0));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c63) IS TRUE)))) ORDER BY LIKELY(t1.c0);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c63) IS TRUE)))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY LIKELY(t1.c0));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c63) IS TRUE)))) ORDER BY LIKELY(t1.c0);
SELECT * FROM t1, vt1, vt0 WHERE (t1.c63 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c63 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (t1.c63 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((t1.c63 COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT * FROM t1, vt1, vt0 WHERE (t1.c63 COLLATE NOCASE);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((vt1.c0 IN ()) AS REAL));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)AND(vt1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(vt1.c0)))AND(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((vt1.c0) NOTNULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)AND(vt1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(vt1.c0)))AND(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((vt1.c0) NOTNULL)) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (((((t1.c0)AND(vt1.c0)))AND(t1.c0)) COLLATE BINARY) ORDER BY ((((vt1.c0) NOTNULL)) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE (json_array_length(((((0.7022215123982456)AND(vt0.c0)))AND(t1.c0)), CASE WHEN t1.c63 THEN t1.c63 END)) ORDER BY (('170604899' COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((0.7022215123982456)AND(vt0.c0)))AND(t1.c0)), CASE WHEN t1.c63 THEN t1.c63 END)) IS TRUE)  as count FROM vt0, t1 ORDER BY (('170604899' COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt0, t1 WHERE (json_array_length(((((0.7022215123982456)AND(vt0.c0)))AND(t1.c0)), CASE WHEN t1.c63 THEN t1.c63 END)) ORDER BY (('170604899' COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((((0.7022215123982456)AND(vt0.c0)))AND(t1.c0)), CASE WHEN t1.c63 THEN t1.c63 END)) IS TRUE)  as count FROM vt0, t1 ORDER BY (('170604899' COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt0, t1 WHERE (json_array_length(((((0.7022215123982456)AND(vt0.c0)))AND(t1.c0)), CASE WHEN t1.c63 THEN t1.c63 END)) ORDER BY (('170604899' COLLATE BINARY) NOTNULL);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((((vt1.c0))<((vt1.c0))))))OR((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((((vt1.c0))<((vt1.c0))))))OR((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((((vt1.c0))<((vt1.c0))))))OR((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((((vt1.c0))<((vt1.c0))))))OR((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((((vt1.c0))<((vt1.c0))))))OR((((vt1.c0))>=((vt1.c0))))) ASC  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (MAX(((vt0.c0)IS(vt0.c0)), (t1.c63 IN (vt1.c0)))) ORDER BY ((((t1.c63)==(t1.c0))) BETWEEN ((((0.9091712832770624, vt0.c0, t1.c0)) BETWEEN ((t1.c63, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, vt1.c0)))) AND (((t1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, 0.9314292148617255, ((((((t1.c63) IS FALSE))AND(((vt1.c0)=(vt0.c0)))))AND(x'0407'));
SELECT SUM(count) FROM (SELECT ((MAX(((vt0.c0)IS(vt0.c0)), (t1.c63 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c63)=(t1.c0))) BETWEEN ((((0.9091712832770624, vt0.c0, t1.c0)) BETWEEN ((t1.c63, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, vt1.c0)))) AND (((t1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, 0.9314292148617255, ((((((t1.c63) IS FALSE))AND(((vt1.c0)=(vt0.c0)))))AND(x'0407')));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (MAX(((vt0.c0)IS(vt0.c0)), (t1.c63 IN (vt1.c0)))) ORDER BY ((((t1.c63)==(t1.c0))) BETWEEN ((((0.9091712832770624, vt0.c0, t1.c0)) BETWEEN ((t1.c63, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, vt1.c0)))) AND (((t1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, 0.9314292148617255, ((((((t1.c63) IS FALSE))AND(((vt1.c0)=(vt0.c0)))))AND(x'0407'));
SELECT SUM(count) FROM (SELECT ((MAX(((vt0.c0)IS(vt0.c0)), (t1.c63 IN (vt1.c0)))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c63)=(t1.c0))) BETWEEN ((((0.9091712832770624, vt0.c0, t1.c0)) BETWEEN ((t1.c63, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, vt1.c0)))) AND (((t1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, 0.9314292148617255, ((((((t1.c63) IS FALSE))AND(((vt1.c0)=(vt0.c0)))))AND(x'0407')));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE (MAX(((vt0.c0)IS(vt0.c0)), (t1.c63 IN (vt1.c0)))) ORDER BY ((((t1.c63)==(t1.c0))) BETWEEN ((((0.9091712832770624, vt0.c0, t1.c0)) BETWEEN ((t1.c63, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, vt1.c0)))) AND (((t1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, 0.9314292148617255, ((((((t1.c63) IS FALSE))AND(((vt1.c0)=(vt0.c0)))))AND(x'0407'));
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(0x2e3acd64 AS INTEGER)))=((NULLIF(t1.c63, 0.2313281807422135))))) ORDER BY CAST((- (t1.c63)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0X2e3acd64 AS INTEGER)))=((NULLIF(t1.c63, 0.2313281807422135))))) IS TRUE)  as count FROM t1 ORDER BY CAST((- (t1.c63)) AS REAL));
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(0x2e3acd64 AS INTEGER)))=((NULLIF(t1.c63, 0.2313281807422135))))) ORDER BY CAST((- (t1.c63)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(0X2e3acd64 AS INTEGER)))=((NULLIF(t1.c63, 0.2313281807422135))))) IS TRUE)  as count FROM t1 ORDER BY CAST((- (t1.c63)) AS REAL));
SELECT ALL COUNT(*) FROM t1 WHERE ((((CAST(0x2e3acd64 AS INTEGER)))=((NULLIF(t1.c63, 0.2313281807422135))))) ORDER BY CAST((- (t1.c63)) AS REAL);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((((vt1.c0, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c0, t1.c0)) AND ((t1.c63, NULL, t1.c63))))OR(((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))))AND(CASE WHEN x'' THEN t1.c63 END)));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c0, t1.c0)) AND ((t1.c63, NULL, t1.c63))))OR(((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))))AND(CASE WHEN x'' THEN t1.c63 END))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((((vt1.c0, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c0, t1.c0)) AND ((t1.c63, NULL, t1.c63))))OR(((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))))AND(CASE WHEN x'' THEN t1.c63 END)));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c0, t1.c0)) AND ((t1.c63, NULL, t1.c63))))OR(((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))))AND(CASE WHEN x'' THEN t1.c63 END))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE ((((((((vt1.c0, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c0, t1.c0)) AND ((t1.c63, NULL, t1.c63))))OR(((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))))AND(CASE WHEN x'' THEN t1.c63 END)));
SELECT * FROM vt1, t1, vt0 WHERE (((0.7131369559709291) NOTNULL)) ORDER BY (((((~ (vt1.c0)))AND(t1.c0)))AND(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((0.7131369559709291) NOTNULL)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((((~ (vt1.c0)))AND(t1.c0)))AND(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt1, t1, vt0 WHERE (((0.7131369559709291) NOTNULL)) ORDER BY (((((~ (vt1.c0)))AND(t1.c0)))AND(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((0.7131369559709291) NOTNULL)) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY (((((~ (vt1.c0)))AND(t1.c0)))AND(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM vt1, t1, vt0 WHERE (((0.7131369559709291) NOTNULL)) ORDER BY (((((~ (vt1.c0)))AND(t1.c0)))AND(((t1.c63) NOT BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0 COLLATE RTRIM)IS(t1.c0))) ORDER BY ABS(DISTINCT ((vt0.c0)OR(vt0.c0))), CHAR('*䙢/b퇪LQ]') ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)IS(t1.c0))) IS TRUE)  as count FROM vt0, t1 ORDER BY ABS(DISTINCT ((vt0.c0)OR(vt0.c0))), CHAR('*䙢/b퇪LQ]') ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0 COLLATE RTRIM)IS(t1.c0))) ORDER BY ABS(DISTINCT ((vt0.c0)OR(vt0.c0))), CHAR('*䙢/b퇪LQ]') ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c0 COLLATE RTRIM)IS(t1.c0))) IS TRUE)  as count FROM vt0, t1 ORDER BY ABS(DISTINCT ((vt0.c0)OR(vt0.c0))), CHAR('*䙢/b퇪LQ]') ASC);
SELECT COUNT(*) FROM vt0, t1 WHERE (((t1.c0 COLLATE RTRIM)IS(t1.c0))) ORDER BY ABS(DISTINCT ((vt0.c0)OR(vt0.c0))), CHAR('*䙢/b퇪LQ]') ASC;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (0.7548585522474083)))OR(((((x'')OR(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN ())))) ORDER BY x'', (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (0.7548585522474083)))OR(((((x'')OR(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'', (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (0.7548585522474083)))OR(((((x'')OR(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN ())))) ORDER BY x'', (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) BETWEEN (vt0.c0) AND (0.7548585522474083)))OR(((((x'')OR(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'', (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (0.7548585522474083)))OR(((((x'')OR(vt0.c0)))OR(NULL)))))AND((vt0.c0 IN ())))) ORDER BY x'', (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY TYPEOF(((((t1.c0)OR(t1.c0)))AND(t1.c63)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY TYPEOF(((((t1.c0)OR(t1.c0)))AND(t1.c63))));
SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY TYPEOF(((((t1.c0)OR(t1.c0)))AND(t1.c63)));
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c0))) IS TRUE)  as count FROM t1 ORDER BY TYPEOF(((((t1.c0)OR(t1.c0)))AND(t1.c63))));
SELECT * FROM t1 WHERE ((+ (t1.c0))) ORDER BY TYPEOF(((((t1.c0)OR(t1.c0)))AND(t1.c63)));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c63) IS FALSE) END) ORDER BY ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c63) IS FALSE) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c63) IS FALSE) END) ORDER BY ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c63) IS FALSE) END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c0) NOTNULL) THEN ((t1.c63) IS FALSE) END) ORDER BY ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((- (vt1.c0)) IN ()));
SELECT ALL * FROM t1 WHERE (((('-786314069'))>((t1.c63)))) ORDER BY ((((t1.c0)IS(t1.c0)))>=(((t1.c63) NOT BETWEEN (t1.c63) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-786314069'))>((t1.c63)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)IS(t1.c0)))>=(((t1.c63) NOT BETWEEN (t1.c63) AND (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((('-786314069'))>((t1.c63)))) ORDER BY ((((t1.c0)IS(t1.c0)))>=(((t1.c63) NOT BETWEEN (t1.c63) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-786314069'))>((t1.c63)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)IS(t1.c0)))>=(((t1.c63) NOT BETWEEN (t1.c63) AND (t1.c0))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((('-786314069'))>((t1.c63)))) ORDER BY ((((t1.c0)IS(t1.c0)))>=(((t1.c63) NOT BETWEEN (t1.c63) AND (t1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON MAX(((vt0.c0) ISNULL), t1.c63) WHERE (((CASE t1.c63  WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(DISTINCT t1.c0, t1.c63))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c63  WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(DISTINCT t1.c0, t1.c63)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON MAX(((vt0.c0) ISNULL), t1.c63));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON MAX(((vt0.c0) ISNULL), t1.c63) WHERE (((CASE t1.c63  WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(DISTINCT t1.c0, t1.c63))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c63  WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(DISTINCT t1.c0, t1.c63)))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON MAX(((vt0.c0) ISNULL), t1.c63));
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON MAX(((vt0.c0) ISNULL), t1.c63) WHERE (((CASE t1.c63  WHEN t1.c63 THEN t1.c0 ELSE t1.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (COALESCE(DISTINCT t1.c0, t1.c63))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_object(vt1.c0, vt1.c0))IS NOT(vt1.c0))) ORDER BY (~ (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))IS NOT(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_object(vt1.c0, vt1.c0))IS NOT(vt1.c0))) ORDER BY (~ (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))IS NOT(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt1.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((json_object(vt1.c0, vt1.c0))IS NOT(vt1.c0))) ORDER BY (~ (vt1.c0 COLLATE NOCASE)) ASC;
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE ((- (t1.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (t1.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE ((- (t1.c63)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (t1.c63)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1 NOT INDEXED, t1 WHERE ((- (t1.c63)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (((TIME(vt1.c0, vt1.c0, vt1.c0))IS NOT((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt1.c0, vt1.c0, vt1.c0))IS NOT((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TIME(vt1.c0, vt1.c0, vt1.c0))IS NOT((((vt1.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((TIME(vt1.c0, vt1.c0, vt1.c0))IS NOT((((vt1.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((TIME(vt1.c0, vt1.c0, vt1.c0))IS NOT((((vt1.c0))>((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t1.c63))) AND (((vt1.c0)-(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t1.c63))) AND (((vt1.c0)-(t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t1.c63))) AND (((vt1.c0)-(t1.c63)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t1.c63))) AND (((vt1.c0)-(t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t1.c63))) AND (((vt1.c0)-(t1.c63)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS NOT(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<((vt0.c0))))IS NOT(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0))<((vt0.c0))))IS NOT(vt0.c0)));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON ((TYPEOF(vt0.c0)) IS TRUE) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON ((TYPEOF(vt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON ((TYPEOF(vt0.c0)) IS TRUE) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t1 ON ((TYPEOF(vt0.c0)) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN t1 ON ((TYPEOF(vt0.c0)) IS TRUE) WHERE (vt1.c0 COLLATE BINARY);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((t1.c0, t1.c63, t1.c63)) BETWEEN (('385243437' COLLATE NOCASE, ((t1.c63)<>(t1.c0)), ((t1.c0) IS TRUE))) AND (((- (x'')), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), (((vt1.c0))<=((t1.c63))))))) ORDER BY ((((t1.c0 IN ()), ((vt1.c0)||(vt1.c0)), CASE WHEN t1.c63 THEN vt1.c0 WHEN -1263093672 THEN vt1.c0 WHEN vt0.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))>((vt1.c0 COLLATE NOCASE, CASE t1.c0  WHEN NULL THEN vt0.c0 ELSE t1.c63 END, LIKELIHOOD(DISTINCT t1.c63, 0.6292754111581583))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c63, t1.c63)) BETWEEN (('385243437' COLLATE NOCASE, ((t1.c63)<>(t1.c0)), ((t1.c0) IS TRUE))) AND (((- (x'')), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), (((vt1.c0))<=((t1.c63))))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c0 IN ()), ((vt1.c0)||(vt1.c0)), CASE WHEN t1.c63 THEN vt1.c0 WHEN -1263093672 THEN vt1.c0 WHEN vt0.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))>((vt1.c0 COLLATE NOCASE, CASE t1.c0  WHEN NULL THEN vt0.c0 ELSE t1.c63 END, LIKELIHOOD(DISTINCT t1.c63, 0.6292754111581583))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((t1.c0, t1.c63, t1.c63)) BETWEEN (('385243437' COLLATE NOCASE, ((t1.c63)<>(t1.c0)), ((t1.c0) IS TRUE))) AND (((- (x'')), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), (((vt1.c0))<=((t1.c63))))))) ORDER BY ((((t1.c0 IN ()), ((vt1.c0)||(vt1.c0)), CASE WHEN t1.c63 THEN vt1.c0 WHEN -1263093672 THEN vt1.c0 WHEN vt0.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))>((vt1.c0 COLLATE NOCASE, CASE t1.c0  WHEN NULL THEN vt0.c0 ELSE t1.c63 END, LIKELIHOOD(DISTINCT t1.c63, 0.6292754111581583))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0, t1.c63, t1.c63)) BETWEEN (('385243437' COLLATE NOCASE, ((t1.c63)<>(t1.c0)), ((t1.c0) IS TRUE))) AND (((- (x'')), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), (((vt1.c0))<=((t1.c63))))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c0 IN ()), ((vt1.c0)||(vt1.c0)), CASE WHEN t1.c63 THEN vt1.c0 WHEN -1263093672 THEN vt1.c0 WHEN vt0.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))>((vt1.c0 COLLATE NOCASE, CASE t1.c0  WHEN NULL THEN vt0.c0 ELSE t1.c63 END, LIKELIHOOD(DISTINCT t1.c63, 0.6292754111581583))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE ((((t1.c0, t1.c63, t1.c63)) BETWEEN (('385243437' COLLATE NOCASE, ((t1.c63)<>(t1.c0)), ((t1.c0) IS TRUE))) AND (((- (x'')), (((vt0.c0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), (((vt1.c0))<=((t1.c63))))))) ORDER BY ((((t1.c0 IN ()), ((vt1.c0)||(vt1.c0)), CASE WHEN t1.c63 THEN vt1.c0 WHEN -1263093672 THEN vt1.c0 WHEN vt0.c0 THEN t1.c63 WHEN t1.c63 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))>((vt1.c0 COLLATE NOCASE, CASE t1.c0  WHEN NULL THEN vt0.c0 ELSE t1.c63 END, LIKELIHOOD(DISTINCT t1.c63, 0.6292754111581583))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL))&(vt1.c0))) ORDER BY ')' ASC  NULLS LAST, ']Wడ(' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))&(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ')' ASC  NULLS LAST, ']Wడ(' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL))&(vt1.c0))) ORDER BY ')' ASC  NULLS LAST, ']Wడ(' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))&(vt1.c0))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ')' ASC  NULLS LAST, ']Wడ(' DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c0) NOTNULL))&(vt1.c0))) ORDER BY ')' ASC  NULLS LAST, ']Wడ(' DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN ('1220823612') AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST, CASE WHEN json(vt1.c0) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN ('1220823612') AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST, CASE WHEN json(vt1.c0) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN ('1220823612') AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST, CASE WHEN json(vt1.c0) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) BETWEEN ('1220823612') AND (((vt1.c0)IS(vt1.c0))))  NULLS LAST, CASE WHEN json(vt1.c0) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END ASC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST);
SELECT * FROM vt0, vt1, t1 WHERE (vt0.c0) ORDER BY ((((t1.c0) NOTNULL)) BETWEEN (((vt1.c0) NOTNULL)) AND ((((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (NULL) ORDER BY LIKE(NULL, CASE vt0.c0  WHEN NULL THEN NULL ELSE vt1.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NOT INDEXED INNER JOIN vt0 ON vt1.c0 ORDER BY LIKE(NULL, CASE vt0.c0  WHEN NULL THEN NULL ELSE vt1.c0 END) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (NULL) ORDER BY LIKE(NULL, CASE vt0.c0  WHEN NULL THEN NULL ELSE vt1.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 NOT INDEXED INNER JOIN vt0 ON vt1.c0 ORDER BY LIKE(NULL, CASE vt0.c0  WHEN NULL THEN NULL ELSE vt1.c0 END) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON vt1.c0 WHERE (NULL) ORDER BY LIKE(NULL, CASE vt0.c0  WHEN NULL THEN NULL ELSE vt1.c0 END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))/(((t1.c63)>(t1.c63))))) ORDER BY CASE WHEN t1.c63 THEN ((t1.c63)>>(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT))/(((t1.c63)>(t1.c63))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CASE WHEN t1.c63 THEN ((t1.c63)>>(t1.c0)) END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))/(((t1.c63)>(t1.c63))))) ORDER BY CASE WHEN t1.c63 THEN ((t1.c63)>>(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS TEXT))/(((t1.c63)>(t1.c63))))) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY CASE WHEN t1.c63 THEN ((t1.c63)>>(t1.c0)) END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c0 AS TEXT))/(((t1.c63)>(t1.c63))))) ORDER BY CASE WHEN t1.c63 THEN ((t1.c63)>>(t1.c0)) END ASC;
SELECT ALL * FROM vt1, vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (vt0.c0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c0 WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 END THEN ((x'') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c0 WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 END THEN ((x'') NOT NULL) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c0 WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 END THEN ((x'') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c0 WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 END THEN ((x'') NOT NULL) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c0 THEN t1.c63 WHEN vt0.c0 THEN t1.c0 WHEN t1.c63 THEN vt0.c0 WHEN t1.c0 THEN t1.c63 END THEN ((x'') NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL * FROM t1, vt1 CROSS JOIN vt0 ON (((((t1.c63))!=((vt1.c0)))) IS FALSE) WHERE (TIME(((vt0.c0)<=(vt0.c0)), HEX(vt1.c0), t1.c63 COLLATE NOCASE, (('1328494426')>(vt1.c0)), ((((((((((((t1.c63)OR(vt1.c0)))AND(t1.c0)))AND(t1.c63)))AND(t1.c0)))OR(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0)<=(vt0.c0)), HEX(vt1.c0), t1.c63 COLLATE NOCASE, (('1328494426')>(vt1.c0)), ((((((((((((t1.c63)OR(vt1.c0)))AND(t1.c0)))AND(t1.c63)))AND(t1.c0)))OR(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON (((((t1.c63))<>((vt1.c0)))) IS FALSE));
SELECT ALL * FROM t1, vt1 CROSS JOIN vt0 ON (((((t1.c63))!=((vt1.c0)))) IS FALSE) WHERE (TIME(((vt0.c0)<=(vt0.c0)), HEX(vt1.c0), t1.c63 COLLATE NOCASE, (('1328494426')>(vt1.c0)), ((((((((((((t1.c63)OR(vt1.c0)))AND(t1.c0)))AND(t1.c63)))AND(t1.c0)))OR(vt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((vt0.c0)<=(vt0.c0)), HEX(vt1.c0), t1.c63 COLLATE NOCASE, (('1328494426')>(vt1.c0)), ((((((((((((t1.c63)OR(vt1.c0)))AND(t1.c0)))AND(t1.c63)))AND(t1.c0)))OR(vt0.c0)))AND(vt1.c0)))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON (((((t1.c63))<>((vt1.c0)))) IS FALSE));
SELECT ALL * FROM t1, vt1 CROSS JOIN vt0 ON (((((t1.c63))!=((vt1.c0)))) IS FALSE) WHERE (TIME(((vt0.c0)<=(vt0.c0)), HEX(vt1.c0), t1.c63 COLLATE NOCASE, (('1328494426')>(vt1.c0)), ((((((((((((t1.c63)OR(vt1.c0)))AND(t1.c0)))AND(t1.c63)))AND(t1.c0)))OR(vt0.c0)))AND(vt1.c0))));
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (UNLIKELY('787008360')) ORDER BY json_extract((+ (vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)==(vt0.c0)), vt1.c0, vt0.c0 COLLATE NOCASE, ((vt0.c0)<<(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('787008360')) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_extract((+ (vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)==(vt0.c0)), vt1.c0, vt0.c0 COLLATE NOCASE, ((vt0.c0)<<(vt1.c0))) DESC);
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (UNLIKELY('787008360')) ORDER BY json_extract((+ (vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)==(vt0.c0)), vt1.c0, vt0.c0 COLLATE NOCASE, ((vt0.c0)<<(vt1.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY('787008360')) IS TRUE)  as count FROM vt0, vt1 ORDER BY json_extract((+ (vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)==(vt0.c0)), vt1.c0, vt0.c0 COLLATE NOCASE, ((vt0.c0)<<(vt1.c0))) DESC);
SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE (UNLIKELY('787008360')) ORDER BY json_extract((+ (vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0)==(vt0.c0)), vt1.c0, vt0.c0 COLLATE NOCASE, ((vt0.c0)<<(vt1.c0))) DESC;
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (vt1.c0);
SELECT * FROM vt0 WHERE ((((NULLIF(vt0.c0, NULL)))>=(((NOT (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, NULL)))>=(((NOT (NULL)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NULLIF(vt0.c0, NULL)))>=(((NOT (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((NULLIF(vt0.c0, NULL)))>=(((NOT (NULL)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NULLIF(vt0.c0, NULL)))>=(((NOT (NULL))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ('513958811');
SELECT SUM(count) FROM (SELECT ALL (('513958811') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ('513958811');
SELECT SUM(count) FROM (SELECT ALL (('513958811') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON t1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON t1.c0 WHERE ('513958811');
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) NOT NULL) CROSS JOIN t1 ON '-1356776316' WHERE (((((t1.c63)LIKE(vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) BETWEEN (t1.c0) AND (t1.c63))))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END) AND (((t1.c63)&(t1.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)LIKE(vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) BETWEEN (t1.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) NOT NULL) CROSS JOIN t1 ON '-1356776316' ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END) AND (((t1.c63)&(t1.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) NOT NULL) CROSS JOIN t1 ON '-1356776316' WHERE (((((t1.c63)LIKE(vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) BETWEEN (t1.c0) AND (t1.c63))))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END) AND (((t1.c63)&(t1.c63))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c63)LIKE(vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) BETWEEN (t1.c0) AND (t1.c63))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) NOT NULL) CROSS JOIN t1 ON '-1356776316' ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END) AND (((t1.c63)&(t1.c63))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0)/(vt1.c0))) NOT NULL) CROSS JOIN t1 ON '-1356776316' WHERE (((((t1.c63)LIKE(vt0.c0))) NOT BETWEEN ((~ (vt1.c0))) AND (((vt1.c0) BETWEEN (t1.c0) AND (t1.c63))))) ORDER BY ((CASE WHEN t1.c0 THEN vt1.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN t1.c63 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt1.c0 END) AND (((t1.c63)&(t1.c63))))  NULLS FIRST;
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((t1.c63 COLLATE BINARY))==((t1.c63 COLLATE BINARY)))) ORDER BY ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63 COLLATE BINARY))==((t1.c63 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((t1.c63 COLLATE BINARY))==((t1.c63 COLLATE BINARY)))) ORDER BY ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63 COLLATE BINARY))==((t1.c63 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM vt0, t1, vt1 WHERE ((((t1.c63 COLLATE BINARY))==((t1.c63 COLLATE BINARY)))) ORDER BY ((vt1.c0 IN ()) IN (CAST(vt0.c0 AS TEXT)));
SELECT COUNT(*) FROM vt0, t1 WHERE ((((('뻐N')<=(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('뻐N')<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((('뻐N')<=(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('뻐N')<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 WHERE ((((('뻐N')<=(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0) NOTNULL) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((vt0.c0)AND(0.14443674986973454)))AND(x'675e5f7f')))))) ORDER BY ((((vt0.c0)<=(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((vt0.c0)AND(0.14443674986973454)))AND(x'675e5f7f')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((vt0.c0)AND(0.14443674986973454)))AND(x'675e5f7f')))))) ORDER BY ((((vt0.c0)<=(vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((vt0.c0)AND(0.14443674986973454)))AND(x'675e5f7f')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0)<=(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))<((((((vt0.c0)AND(0.14443674986973454)))AND(x'675e5f7f')))))) ORDER BY ((((vt0.c0)<=(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0, t1 WHERE (0.4617626441475783);
SELECT SUM(count) FROM (SELECT ((0.4617626441475783) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (0.4617626441475783);
SELECT SUM(count) FROM (SELECT ((0.4617626441475783) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL * FROM vt1, vt0, t1 WHERE (0.4617626441475783);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((((((((vt0.c0 IN (t1.c63)))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND((((t1.c63)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))))OR('\nH'))) ORDER BY CAST(((x'')|(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (t1.c63)))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND((((t1.c63)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))))OR('\nH'))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((x'')|(t1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((((((((vt0.c0 IN (t1.c63)))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND((((t1.c63)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))))OR('\nH'))) ORDER BY CAST(((x'')|(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN (t1.c63)))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND((((t1.c63)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))))OR('\nH'))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY CAST(((x'')|(t1.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((((((((vt0.c0 IN (t1.c63)))AND(vt0.c0 COLLATE RTRIM)))AND((NOT (vt1.c0)))))AND((((t1.c63)) NOT BETWEEN ((t1.c0)) AND ((t1.c63))))))OR('\nH'))) ORDER BY CAST(((x'')|(t1.c0)) AS NUMERIC);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((vt1.c0)==(vt1.c0))) IS TRUE) WHERE (TYPEOF(t1.c0 COLLATE NOCASE)) ORDER BY (((('ퟨkPaI') NOT NULL))==(LOWER(NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((((vt1.c0)==(vt1.c0))) IS TRUE) ORDER BY (((('ퟨkPaI') NOT NULL))==(LOWER(NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((vt1.c0)==(vt1.c0))) IS TRUE) WHERE (TYPEOF(t1.c0 COLLATE NOCASE)) ORDER BY (((('ퟨkPaI') NOT NULL))==(LOWER(NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(t1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((((vt1.c0)==(vt1.c0))) IS TRUE) ORDER BY (((('ퟨkPaI') NOT NULL))==(LOWER(NULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((vt1.c0)==(vt1.c0))) IS TRUE) WHERE (TYPEOF(t1.c0 COLLATE NOCASE)) ORDER BY (((('ퟨkPaI') NOT NULL))==(LOWER(NULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt1.c0 WHERE ((- (t1.c63)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT NULL))OR(((((((((((((vt0.c0)AND(t1.c63)))OR(vt0.c0)))AND(t1.c63)))AND(t1.c0)))AND(t1.c63)))AND(t1.c63))));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c63)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt1.c0 ORDER BY ((((t1.c0) NOT NULL))OR(((((((((((((vt0.c0)AND(t1.c63)))OR(vt0.c0)))AND(t1.c63)))AND(t1.c0)))AND(t1.c63)))AND(t1.c63)))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt1.c0 WHERE ((- (t1.c63)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT NULL))OR(((((((((((((vt0.c0)AND(t1.c63)))OR(vt0.c0)))AND(t1.c63)))AND(t1.c0)))AND(t1.c63)))AND(t1.c63))));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c63)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt1.c0 ORDER BY ((((t1.c0) NOT NULL))OR(((((((((((((vt0.c0)AND(t1.c63)))OR(vt0.c0)))AND(t1.c63)))AND(t1.c0)))AND(t1.c63)))AND(t1.c63)))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON vt1.c0 WHERE ((- (t1.c63)) COLLATE NOCASE) ORDER BY ((((t1.c0) NOT NULL))OR(((((((((((((vt0.c0)AND(t1.c63)))OR(vt0.c0)))AND(t1.c63)))AND(t1.c0)))AND(t1.c63)))AND(t1.c63))));
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((((0.04858532535755178)OR(vt1.c0)))OR(t1.c63))) NOT BETWEEN (INSTR(vt1.c0, t1.c63)) AND (CASE vt1.c0  WHEN t1.c63 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((0.04858532535755178)OR(vt1.c0)))OR(t1.c63))) NOT BETWEEN (INSTR(vt1.c0, t1.c63)) AND (CASE vt1.c0  WHEN t1.c63 THEN t1.c0 END))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((((0.04858532535755178)OR(vt1.c0)))OR(t1.c63))) NOT BETWEEN (INSTR(vt1.c0, t1.c63)) AND (CASE vt1.c0  WHEN t1.c63 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((0.04858532535755178)OR(vt1.c0)))OR(t1.c63))) NOT BETWEEN (INSTR(vt1.c0, t1.c63)) AND (CASE vt1.c0  WHEN t1.c63 THEN t1.c0 END))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((((((0.04858532535755178)OR(vt1.c0)))OR(t1.c63))) NOT BETWEEN (INSTR(vt1.c0, t1.c63)) AND (CASE vt1.c0  WHEN t1.c63 THEN t1.c0 END)));
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST(t1.c0 AS NUMERIC))<<(((((t1.c0)OR(vt0.c0)))OR(t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))<<(((((t1.c0)OR(vt0.c0)))OR(t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST(t1.c0 AS NUMERIC))<<(((((t1.c0)OR(vt0.c0)))OR(t1.c63)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))<<(((((t1.c0)OR(vt0.c0)))OR(t1.c63))))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (((CAST(t1.c0 AS NUMERIC))<<(((((t1.c0)OR(vt0.c0)))OR(t1.c63)))));
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>=(((x'')-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>=(((x'')-(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>=(((x'')-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>=(((x'')-(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)>=(((x'')-(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)<>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((~ ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((~ ((+ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c0))))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE ((~ ((+ (t1.c0)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON '-1035507049' WHERE (0.0866037894575653);
SELECT SUM(count) FROM (SELECT ((0.0866037894575653) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON '-1035507049');
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON '-1035507049' WHERE (0.0866037894575653);
SELECT SUM(count) FROM (SELECT ((0.0866037894575653) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON '-1035507049');
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON '-1035507049' WHERE (0.0866037894575653);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON 0.9109428831064534 COLLATE BINARY WHERE (TIME(CASE 0.1591071041827572  WHEN 0x490acdc3 THEN vt0.c0 ELSE t1.c63 END, (((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE 0.1591071041827572  WHEN 0x490acdc3 THEN vt0.c0 ELSE t1.c63 END, (((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED LEFT OUTER JOIN t1 ON 0.9109428831064534 COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON 0.9109428831064534 COLLATE BINARY WHERE (TIME(CASE 0.1591071041827572  WHEN 0x490acdc3 THEN vt0.c0 ELSE t1.c63 END, (((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE 0.1591071041827572  WHEN 0x490acdc3 THEN vt0.c0 ELSE t1.c63 END, (((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((vt1.c0) ISNULL))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED LEFT OUTER JOIN t1 ON 0.9109428831064534 COLLATE BINARY);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t1 ON 0.9109428831064534 COLLATE BINARY WHERE (TIME(CASE 0.1591071041827572  WHEN 0x490acdc3 THEN vt0.c0 ELSE t1.c63 END, (((vt1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))), ((vt1.c0) ISNULL)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (NULLIF(DISTINCT (((t1.c0)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((t1.c0)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (NULLIF(DISTINCT (((t1.c0)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((t1.c0)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (NULLIF(DISTINCT (((t1.c0)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c63)) COLLATE RTRIM INNER JOIN t1 ON (t1.c0 COLLATE BINARY IN ()) WHERE ('*Q') ORDER BY t1.c63 DESC  NULLS LAST, ((((vt1.c0)||(t1.c63)))AND(RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('*Q') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c63)) COLLATE RTRIM INNER JOIN t1 ON (t1.c0 COLLATE BINARY IN ()) ORDER BY t1.c63 DESC  NULLS LAST, ((((vt1.c0)||(t1.c63)))AND(RTRIM(vt0.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c63)) COLLATE RTRIM INNER JOIN t1 ON (t1.c0 COLLATE BINARY IN ()) WHERE ('*Q') ORDER BY t1.c63 DESC  NULLS LAST, ((((vt1.c0)||(t1.c63)))AND(RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT (('*Q') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c63)) COLLATE RTRIM INNER JOIN t1 ON (t1.c0 COLLATE BINARY IN ()) ORDER BY t1.c63 DESC  NULLS LAST, ((((vt1.c0)||(t1.c63)))AND(RTRIM(vt0.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c63)) COLLATE RTRIM INNER JOIN t1 ON (t1.c0 COLLATE BINARY IN ()) WHERE ('*Q') ORDER BY t1.c63 DESC  NULLS LAST, ((((vt1.c0)||(t1.c63)))AND(RTRIM(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63)) AS BLOB)) ORDER BY UPPER(DISTINCT CAST(x'8f96' AS NUMERIC)) DESC  NULLS LAST, ((((t1.c0)>(NULL))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY UPPER(DISTINCT CAST(x'8f96' AS NUMERIC)) DESC  NULLS LAST, ((((t1.c0)>(NULL))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63)) AS BLOB)) ORDER BY UPPER(DISTINCT CAST(x'8f96' AS NUMERIC)) DESC  NULLS LAST, ((((t1.c0)>(NULL))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY UPPER(DISTINCT CAST(x'8f96' AS NUMERIC)) DESC  NULLS LAST, ((((t1.c0)>(NULL))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE (CAST(((t1.c0) NOT BETWEEN (vt1.c0) AND (t1.c63)) AS BLOB)) ORDER BY UPPER(DISTINCT CAST(x'8f96' AS NUMERIC)) DESC  NULLS LAST, ((((t1.c0)>(NULL))) NOT BETWEEN (((vt0.c0) ISNULL)) AND ((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM) ORDER BY vt1.c0  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ''  NULLS FIRST);
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM) ORDER BY vt1.c0  NULLS LAST, ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST, ''  NULLS FIRST);
SELECT * FROM vt1 WHERE (IFNULL(DISTINCT vt1.c0, vt1.c0) COLLATE RTRIM) ORDER BY vt1.c0  NULLS LAST, ''  NULLS FIRST;
SELECT * FROM vt0 INDEXED BY i77 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('(')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INDEXED BY i77 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('(')))) ASC  NULLS FIRST);
SELECT * FROM vt0 INDEXED BY i77 WHERE (((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('(')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INDEXED BY i77 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('(')))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (0.8166753005253862);
SELECT SUM(count) FROM (SELECT ((0.8166753005253862) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.8166753005253862);
SELECT SUM(count) FROM (SELECT ((0.8166753005253862) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (0.8166753005253862);
SELECT ALL * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((t1.c0 COLLATE BINARY IN (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((t1.c0 COLLATE BINARY IN (((t1.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt0.c0) NOT NULL))AND(((((t1.c0)OR('-31937793')))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN t1.c0 THEN t1.c63 END))) ORDER BY ((((t1.c0)!=(vt1.c0)))<=(((t1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))AND(((((t1.c0)OR('-31937793')))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN t1.c0 THEN t1.c63 END))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((t1.c0)!=(vt1.c0)))<=(((t1.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt0.c0) NOT NULL))AND(((((t1.c0)OR('-31937793')))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN t1.c0 THEN t1.c63 END))) ORDER BY ((((t1.c0)!=(vt1.c0)))<=(((t1.c0) IS TRUE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT NULL))AND(((((t1.c0)OR('-31937793')))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN t1.c0 THEN t1.c63 END))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY ((((t1.c0)!=(vt1.c0)))<=(((t1.c0) IS TRUE)))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((((((vt0.c0) NOT NULL))AND(((((t1.c0)OR('-31937793')))OR(vt0.c0)))))AND(CASE vt1.c0  WHEN t1.c0 THEN t1.c63 END))) ORDER BY ((((t1.c0)!=(vt1.c0)))<=(((t1.c0) IS TRUE)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.014047277436144645)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY (~ ((- (x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.014047277436144645)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((- (x'')))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.014047277436144645)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY (~ ((- (x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.014047277436144645)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (~ ((- (x'')))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.014047277436144645)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY (~ ((- (x''))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT * FROM t1, vt0 WHERE ((((t1.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0)<=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)<=(vt0.c0)) IN ())) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c0)<=(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)>=(''))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))||(((t1.c63)%(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)>=(''))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)IS(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))||(((t1.c63)%(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)>=(''))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))||(((t1.c63)%(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)>=(''))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c0)IS(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))||(((t1.c63)%(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c0)>=(''))) ORDER BY ((t1.c0)IS(t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))||(((t1.c63)%(t1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (+ (vt1.c0)) COLLATE RTRIM WHERE (((((((t1.c63)OR(t1.c63)))AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c63)OR(t1.c63)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (+ (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (+ (vt1.c0)) COLLATE RTRIM WHERE (((((((t1.c63)OR(t1.c63)))AND(vt0.c0)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c63)OR(t1.c63)))AND(vt0.c0)))OR(vt0.c0))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (+ (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (+ (vt1.c0)) COLLATE RTRIM WHERE (((((((t1.c63)OR(t1.c63)))AND(vt0.c0)))OR(vt0.c0)));
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))LIKE(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) IS FALSE)) ORDER BY (((NOT (vt1.c0)))GLOB(((vt1.c0)*(vt1.c0))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)<>(LIKELIHOOD(DISTINCT vt1.c0, 0.002064312512877531))), ((vt1.c0)<=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.c0)))GLOB(((vt1.c0)*(vt1.c0))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)!=(LIKELIHOOD(DISTINCT vt1.c0, 0.002064312512877531))), ((vt1.c0)<=((~ (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) IS FALSE)) ORDER BY (((NOT (vt1.c0)))GLOB(((vt1.c0)*(vt1.c0))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)<>(LIKELIHOOD(DISTINCT vt1.c0, 0.002064312512877531))), ((vt1.c0)<=((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NOT (vt1.c0)))GLOB(((vt1.c0)*(vt1.c0))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)!=(LIKELIHOOD(DISTINCT vt1.c0, 0.002064312512877531))), ((vt1.c0)<=((~ (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((NOT (vt1.c0))) IS FALSE)) ORDER BY (((NOT (vt1.c0)))GLOB(((vt1.c0)*(vt1.c0))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)<>(LIKELIHOOD(DISTINCT vt1.c0, 0.002064312512877531))), ((vt1.c0)<=((~ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF((vt0.c0 IN (vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF((vt0.c0 IN (vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt0.c0 IN (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TYPEOF((vt0.c0 IN (vt0.c0)))) ORDER BY vt0.c0  NULLS LAST;
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt1.c0, t1.c63) ELSE ((t1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt1.c0, t1.c63) ELSE ((t1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt1.c0, t1.c63) ELSE ((t1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt1.c0, t1.c63) ELSE ((t1.c0) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE (CASE WHEN ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN COALESCE(vt0.c0, vt0.c0, vt1.c0, t1.c63) ELSE ((t1.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(t1.c63 AS INTEGER)) NOT BETWEEN (t1.c0) AND (((((((((t1.c63)OR(vt0.c0)))OR(t1.c63)))OR(t1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c63 AS INTEGER)) NOT BETWEEN (t1.c0) AND (((((((((t1.c63)OR(vt0.c0)))OR(t1.c63)))OR(t1.c0)))AND(x''))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(t1.c63 AS INTEGER)) NOT BETWEEN (t1.c0) AND (((((((((t1.c63)OR(vt0.c0)))OR(t1.c63)))OR(t1.c0)))AND(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c63 AS INTEGER)) NOT BETWEEN (t1.c0) AND (((((((((t1.c63)OR(vt0.c0)))OR(t1.c63)))OR(t1.c0)))AND(x''))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CAST(t1.c63 AS INTEGER)) NOT BETWEEN (t1.c0) AND (((((((((t1.c63)OR(vt0.c0)))OR(t1.c63)))OR(t1.c0)))AND(x'')))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) ORDER BY CAST(((vt0.c0)<(vt0.c0)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c0, t1.c63, t1.c63, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c63, t1.c0, t1.c63, t1.c63)) AND ((t1.c0, t1.c0, t1.c63, t1.c0, t1.c0))) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN (+ (t1.c0)) THEN CASE WHEN x'926e' THEN t1.c0 END WHEN (t1.c63 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (- (((t1.c63)-('414286450')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0, t1.c63, t1.c63, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c63, t1.c0, t1.c63, t1.c63)) AND ((t1.c0, t1.c0, t1.c63, t1.c0, t1.c0))) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN (+ (t1.c0)) THEN CASE WHEN x'926e' THEN t1.c0 END WHEN (t1.c63 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c63)-('414286450')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c0, t1.c63, t1.c63, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c63, t1.c0, t1.c63, t1.c63)) AND ((t1.c0, t1.c0, t1.c63, t1.c0, t1.c0))) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN (+ (t1.c0)) THEN CASE WHEN x'926e' THEN t1.c0 END WHEN (t1.c63 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (- (((t1.c63)-('414286450')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t1.c0, t1.c63, t1.c63, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c63, t1.c0, t1.c63, t1.c63)) AND ((t1.c0, t1.c0, t1.c63, t1.c0, t1.c0))) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN (+ (t1.c0)) THEN CASE WHEN x'926e' THEN t1.c0 END WHEN (t1.c63 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (- (((t1.c63)-('414286450')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (((t1.c0, t1.c63, t1.c63, t1.c63, t1.c63)) NOT BETWEEN ((t1.c63, t1.c63, t1.c0, t1.c63, t1.c63)) AND ((t1.c0, t1.c0, t1.c63, t1.c0, t1.c0))) THEN CASE WHEN t1.c0 THEN t1.c0 END WHEN (+ (t1.c0)) THEN CASE WHEN x'926e' THEN t1.c0 END WHEN (t1.c63 IN ()) THEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (- (((t1.c63)-('414286450')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((t1.c63)) NOT BETWEEN ((((t1.c63)AND(t1.c0)))) AND ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))))) LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE BINARY) IS FALSE) WHERE (((vt0.c0) BETWEEN (0Xffffffffaef4ab78) AND (t1.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (0xffffffffaef4ab78) AND (t1.c63))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((t1.c63)) NOT BETWEEN ((((t1.c63)AND(t1.c0)))) AND ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))))) LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((t1.c63)) NOT BETWEEN ((((t1.c63)AND(t1.c0)))) AND ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))))) LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE BINARY) IS FALSE) WHERE (((vt0.c0) BETWEEN (0Xffffffffaef4ab78) AND (t1.c63)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (0xffffffffaef4ab78) AND (t1.c63))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((t1.c63)) NOT BETWEEN ((((t1.c63)AND(t1.c0)))) AND ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))))) LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (((t1.c63)) NOT BETWEEN ((((t1.c63)AND(t1.c0)))) AND ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c63))))) LEFT OUTER JOIN t1 ON ((t1.c0 COLLATE BINARY) IS FALSE) WHERE (((vt0.c0) BETWEEN (0Xffffffffaef4ab78) AND (t1.c63)));
SELECT ALL * FROM vt0, t1 WHERE (((t1.c63 COLLATE BINARY)||(((t1.c63)GLOB(vt0.c0))))) ORDER BY (((vt0.c0, t1.c0, '1019019970')) BETWEEN ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c0)), ((((t1.c63)OR(t1.c63)))AND('-1750647453')), t1.c63)) AND ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)), CAST(t1.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63 COLLATE BINARY)||(((t1.c63)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0, t1.c0, '1019019970')) BETWEEN ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c0)), ((((t1.c63)OR(t1.c63)))AND('-1750647453')), t1.c63)) AND ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)), CAST(t1.c0 AS BLOB)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (((t1.c63 COLLATE BINARY)||(((t1.c63)GLOB(vt0.c0))))) ORDER BY (((vt0.c0, t1.c0, '1019019970')) BETWEEN ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c0)), ((((t1.c63)OR(t1.c63)))AND('-1750647453')), t1.c63)) AND ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)), CAST(t1.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c63 COLLATE BINARY)||(((t1.c63)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0, t1.c0, '1019019970')) BETWEEN ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c0)), ((((t1.c63)OR(t1.c63)))AND('-1750647453')), t1.c63)) AND ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)), CAST(t1.c0 AS BLOB)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (((t1.c63 COLLATE BINARY)||(((t1.c63)GLOB(vt0.c0))))) ORDER BY (((vt0.c0, t1.c0, '1019019970')) BETWEEN ((((t1.c63) BETWEEN (vt0.c0) AND (t1.c0)), ((((t1.c63)OR(t1.c63)))AND('-1750647453')), t1.c63)) AND ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt0.c0)), ((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)), CAST(t1.c0 AS BLOB)))) DESC  NULLS LAST;
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)&(LIKELY(DISTINCT t1.c0))) WHERE (t1.c0) ORDER BY (((vt1.c0, t1.c63, vt1.c0)) BETWEEN (('48189398', ((vt1.c0)AND(vt1.c0)), ((t1.c63) NOT BETWEEN (t1.c63) AND (vt1.c0)))) AND ((t1.c63, TYPEOF(t1.c63), ((t1.c63) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST, GLOB(t1.c63, vt1.c0) COLLATE NOCASE, ((((((((((vt1.c0)AND(t1.c63)))OR('-1977863448')))AND(vt1.c0)))OR(NULL)))>(UPPER(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)&(LIKELY(DISTINCT t1.c0))) ORDER BY (((vt1.c0, t1.c63, vt1.c0)) BETWEEN (('48189398', ((vt1.c0)AND(vt1.c0)), ((t1.c63) NOT BETWEEN (t1.c63) AND (vt1.c0)))) AND ((t1.c63, TYPEOF(t1.c63), ((t1.c63) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST, GLOB(t1.c63, vt1.c0) COLLATE NOCASE, ((((((((((vt1.c0)AND(t1.c63)))OR('-1977863448')))AND(vt1.c0)))OR(NULL)))>(UPPER(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)&(LIKELY(DISTINCT t1.c0))) WHERE (t1.c0) ORDER BY (((vt1.c0, t1.c63, vt1.c0)) BETWEEN (('48189398', ((vt1.c0)AND(vt1.c0)), ((t1.c63) NOT BETWEEN (t1.c63) AND (vt1.c0)))) AND ((t1.c63, TYPEOF(t1.c63), ((t1.c63) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST, GLOB(t1.c63, vt1.c0) COLLATE NOCASE, ((((((((((vt1.c0)AND(t1.c63)))OR('-1977863448')))AND(vt1.c0)))OR(NULL)))>(UPPER(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)&(LIKELY(DISTINCT t1.c0))) ORDER BY (((vt1.c0, t1.c63, vt1.c0)) BETWEEN (('48189398', ((vt1.c0)AND(vt1.c0)), ((t1.c63) NOT BETWEEN (t1.c63) AND (vt1.c0)))) AND ((t1.c63, TYPEOF(t1.c63), ((t1.c63) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST, GLOB(t1.c63, vt1.c0) COLLATE NOCASE, ((((((((((vt1.c0)AND(t1.c63)))OR('-1977863448')))AND(vt1.c0)))OR(NULL)))>(UPPER(vt1.c0)))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c0  WHEN vt1.c0 THEN t1.c0 END)&(LIKELY(DISTINCT t1.c0))) WHERE (t1.c0) ORDER BY (((vt1.c0, t1.c63, vt1.c0)) BETWEEN (('48189398', ((vt1.c0)AND(vt1.c0)), ((t1.c63) NOT BETWEEN (t1.c63) AND (vt1.c0)))) AND ((t1.c63, TYPEOF(t1.c63), ((t1.c63) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS LAST, GLOB(t1.c63, vt1.c0) COLLATE NOCASE, ((((((((((vt1.c0)AND(t1.c63)))OR('-1977863448')))AND(vt1.c0)))OR(NULL)))>(UPPER(vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 END AS TEXT) WHERE ((- (vt0.c0))) ORDER BY ((((('sx')) BETWEEN ((t1.c63)) AND ((vt1.c0))))|('-1977863448'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 END AS TEXT) ORDER BY ((((('sx')) BETWEEN ((t1.c63)) AND ((vt1.c0))))|('-1977863448'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 END AS TEXT) WHERE ((- (vt0.c0))) ORDER BY ((((('sx')) BETWEEN ((t1.c63)) AND ((vt1.c0))))|('-1977863448'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM t1, vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 END AS TEXT) ORDER BY ((((('sx')) BETWEEN ((t1.c63)) AND ((vt1.c0))))|('-1977863448'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1 INNER JOIN vt0 ON CAST(CASE WHEN vt0.c0 THEN t1.c0 END AS TEXT) WHERE ((- (vt0.c0))) ORDER BY ((((('sx')) BETWEEN ((t1.c63)) AND ((vt1.c0))))|('-1977863448'))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (ABS(((vt1.c0)<<(vt1.c0)))) ORDER BY ((((((((CASE 'R奵'  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'27d1' WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CASE 'R奵'  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'27d1' WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE (ABS(((vt1.c0)<<(vt1.c0)))) ORDER BY ((((((((CASE 'R奵'  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'27d1' WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c0)<<(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((CASE 'R奵'  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'27d1' WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, vt1 WHERE (ABS(((vt1.c0)<<(vt1.c0)))) ORDER BY ((((((((CASE 'R奵'  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'27d1' WHEN vt1.c0 THEN vt0.c0 END)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(vt0.c0)))OR(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END));
SELECT * FROM vt1, vt0, t1 WHERE ((~ ((((((((('8E')OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((((((('8E')OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE ((~ ((((((((('8E')OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((((((('8E')OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt1, vt0, t1);
SELECT * FROM vt1, vt0, t1 WHERE ((~ ((((((((('8E')OR(vt0.c0)))AND(t1.c0)))AND(vt1.c0)))OR(t1.c0)))));
SELECT * FROM vt0, t1, vt1 WHERE (((((vt1.c0)<=(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE t1.c0  WHEN vt1.c0 THEN NULL ELSE t1.c0 END))) ORDER BY (('63064456')LIKE(((((t1.c63)AND(t1.c0)))AND(t1.c63)))) DESC, (((vt1.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((((t1.c63)OR(vt1.c0)))||(((NULL)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE t1.c0  WHEN vt1.c0 THEN NULL ELSE t1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (('63064456')LIKE(((((t1.c63)AND(t1.c0)))AND(t1.c63)))) DESC, (((vt1.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((((t1.c63)OR(vt1.c0)))||(((NULL)||(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (((((vt1.c0)<=(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE t1.c0  WHEN vt1.c0 THEN NULL ELSE t1.c0 END))) ORDER BY (('63064456')LIKE(((((t1.c63)AND(t1.c0)))AND(t1.c63)))) DESC, (((vt1.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((((t1.c63)OR(vt1.c0)))||(((NULL)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE t1.c0  WHEN vt1.c0 THEN NULL ELSE t1.c0 END))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY (('63064456')LIKE(((((t1.c63)AND(t1.c0)))AND(t1.c63)))) DESC, (((vt1.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((((t1.c63)OR(vt1.c0)))||(((NULL)||(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE (((((vt1.c0)<=(t1.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (CASE t1.c0  WHEN vt1.c0 THEN NULL ELSE t1.c0 END))) ORDER BY (('63064456')LIKE(((((t1.c63)AND(t1.c0)))AND(t1.c63)))) DESC, (((vt1.c0 IN ())) IS TRUE) ASC  NULLS LAST, ((((t1.c63)OR(vt1.c0)))||(((NULL)||(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))>=(((t1.c0)OR(vt1.c0)))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL) WHERE (((NULL) BETWEEN (ABS(vt0.c0)) AND ('0w'))) ORDER BY CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t1.c63))  WHEN CASE t1.c63  WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN t1.c63 ELSE vt0.c0 END THEN (+ (t1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (ABS(vt0.c0)) AND ('0w'))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))>=(((t1.c0)OR(vt1.c0)))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL) ORDER BY CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t1.c63))  WHEN CASE t1.c63  WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN t1.c63 ELSE vt0.c0 END THEN (+ (t1.c0)) END);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))>=(((t1.c0)OR(vt1.c0)))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL) WHERE (((NULL) BETWEEN (ABS(vt0.c0)) AND ('0w'))) ORDER BY CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t1.c63))  WHEN CASE t1.c63  WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN t1.c63 ELSE vt0.c0 END THEN (+ (t1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (ABS(vt0.c0)) AND ('0w'))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))>=(((t1.c0)OR(vt1.c0)))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL) ORDER BY CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t1.c63))  WHEN CASE t1.c63  WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN t1.c63 ELSE vt0.c0 END THEN (+ (t1.c0)) END);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt1 ON ((((vt1.c0)|(vt1.c0)))>=(((t1.c0)OR(vt1.c0)))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOTNULL) WHERE (((NULL) BETWEEN (ABS(vt0.c0)) AND ('0w'))) ORDER BY CASE ((vt0.c0) BETWEEN (vt1.c0) AND (t1.c63))  WHEN CASE t1.c63  WHEN NULL THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'' THEN t1.c63 ELSE vt0.c0 END THEN (+ (t1.c0)) END;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (~ (t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN (~ (t1.c63)) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c63 AS INTEGER) WHEN (((vt0.c0))<=((t1.c63))) THEN t1.c0 END WHERE (((((t1.c0) IS FALSE)) BETWEEN (t1.c0 COLLATE NOCASE) AND ((- (t1.c63))))) ORDER BY (highlight(vt0.c0, t1.c0, 0.7200208081740903, vt0.c0) IN (((vt0.c0)IS(vt0.c0)), LIKE(t1.c63, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS FALSE)) BETWEEN (t1.c0 COLLATE NOCASE) AND ((- (t1.c63))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (~ (t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN (~ (t1.c63)) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c63 AS INTEGER) WHEN (((vt0.c0))<=((t1.c63))) THEN t1.c0 END ORDER BY (highlight(vt0.c0, t1.c0, 0.7200208081740903, vt0.c0) IN (((vt0.c0)IS(vt0.c0)), LIKE(t1.c63, vt0.c0))));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (~ (t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN (~ (t1.c63)) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c63 AS INTEGER) WHEN (((vt0.c0))<=((t1.c63))) THEN t1.c0 END WHERE (((((t1.c0) IS FALSE)) BETWEEN (t1.c0 COLLATE NOCASE) AND ((- (t1.c63))))) ORDER BY (highlight(vt0.c0, t1.c0, 0.7200208081740903, vt0.c0) IN (((vt0.c0)IS(vt0.c0)), LIKE(t1.c63, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS FALSE)) BETWEEN (t1.c0 COLLATE NOCASE) AND ((- (t1.c63))))) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON CASE (~ (t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN (~ (t1.c63)) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c63 AS INTEGER) WHEN (((vt0.c0))<=((t1.c63))) THEN t1.c0 END ORDER BY (highlight(vt0.c0, t1.c0, 0.7200208081740903, vt0.c0) IN (((vt0.c0)IS(vt0.c0)), LIKE(t1.c63, vt0.c0))));
SELECT ALL * FROM t1 CROSS JOIN vt0 ON CASE (~ (t1.c0))  WHEN ((vt0.c0)LIKE(t1.c0)) THEN (~ (t1.c63)) WHEN t1.c0 COLLATE RTRIM THEN CAST(t1.c63 AS INTEGER) WHEN (((vt0.c0))<=((t1.c63))) THEN t1.c0 END WHERE (((((t1.c0) IS FALSE)) BETWEEN (t1.c0 COLLATE NOCASE) AND ((- (t1.c63))))) ORDER BY (highlight(vt0.c0, t1.c0, 0.7200208081740903, vt0.c0) IN (((vt0.c0)IS(vt0.c0)), LIKE(t1.c63, vt0.c0)));
SELECT * FROM vt0 INNER JOIN vt1 ON NULL INNER JOIN t1 ON (((((vt0.c0))>=((t1.c63)))) IS FALSE) WHERE (IFNULL(RTRIM(vt1.c0), -2016700260));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(RTRIM(vt1.c0), -2016700260)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON NULL INNER JOIN t1 ON (((((vt0.c0))>=((t1.c63)))) IS FALSE));
SELECT * FROM vt0 INNER JOIN vt1 ON NULL INNER JOIN t1 ON (((((vt0.c0))>=((t1.c63)))) IS FALSE) WHERE (IFNULL(RTRIM(vt1.c0), -2016700260));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(RTRIM(vt1.c0), -2016700260)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON NULL INNER JOIN t1 ON (((((vt0.c0))>=((t1.c63)))) IS FALSE));
SELECT * FROM vt0 INNER JOIN vt1 ON NULL INNER JOIN t1 ON (((((vt0.c0))>=((t1.c63)))) IS FALSE) WHERE (IFNULL(RTRIM(vt1.c0), -2016700260));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (NULL) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN ((t1.c0)>>(vt1.c0)) THEN vt0.c0 WHEN t1.c0 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t1.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((ABS(DISTINCT t1.c0))GLOB((NOT (t1.c63)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)>>(vt1.c0)) THEN vt0.c0 WHEN t1.c0 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t1.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((ABS(DISTINCT t1.c0))GLOB((NOT (t1.c63)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN ((t1.c0)>>(vt1.c0)) THEN vt0.c0 WHEN t1.c0 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t1.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((ABS(DISTINCT t1.c0))GLOB((NOT (t1.c63)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0)>>(vt1.c0)) THEN vt0.c0 WHEN t1.c0 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t1.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((ABS(DISTINCT t1.c0))GLOB((NOT (t1.c63)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t1, vt1 WHERE (CASE WHEN ((t1.c0)>>(vt1.c0)) THEN vt0.c0 WHEN t1.c0 THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(t1.c0 AS TEXT) THEN vt0.c0 COLLATE RTRIM END) ORDER BY ((ABS(DISTINCT t1.c0))GLOB((NOT (t1.c63)))) DESC  NULLS LAST;
SELECT * FROM t1, vt1 WHERE (((json_object(t1.c63, t1.c0)) BETWEEN ((+ (t1.c63))) AND (((t1.c63) NOT BETWEEN (vt1.c0) AND ('851886878'))))) ORDER BY (~ ((t1.c0 IN ()))), CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_object(t1.c63, t1.c0)) BETWEEN ((+ (t1.c63))) AND (((t1.c63) NOT BETWEEN (vt1.c0) AND ('851886878'))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (~ ((t1.c0 IN ()))), CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS NUMERIC)  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (((json_object(t1.c63, t1.c0)) BETWEEN ((+ (t1.c63))) AND (((t1.c63) NOT BETWEEN (vt1.c0) AND ('851886878'))))) ORDER BY (~ ((t1.c0 IN ()))), CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_object(t1.c63, t1.c0)) BETWEEN ((+ (t1.c63))) AND (((t1.c63) NOT BETWEEN (vt1.c0) AND ('851886878'))))) IS TRUE)  as count FROM t1, vt1 ORDER BY (~ ((t1.c0 IN ()))), CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS NUMERIC)  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (((json_object(t1.c63, t1.c0)) BETWEEN ((+ (t1.c63))) AND (((t1.c63) NOT BETWEEN (vt1.c0) AND ('851886878'))))) ORDER BY (~ ((t1.c0 IN ()))), CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))OR(t1.c63)))AND(((0.13622078546485816) ISNULL))))AND(CASE WHEN t1.c0 THEN t1.c63 ELSE '' END)))OR(((((((((((((NULL)OR(t1.c0)))OR('-665923342')))OR(t1.c0)))OR(NULL)))AND(t1.c63)))OR(t1.c0))))) ORDER BY ((((x'45d0') IS FALSE))*(((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))OR(t1.c63)))AND(((0.13622078546485816) ISNULL))))AND(CASE WHEN t1.c0 THEN t1.c63 ELSE '' END)))OR(((((((((((((NULL)OR(t1.c0)))OR('-665923342')))OR(t1.c0)))OR(NULL)))AND(t1.c63)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'45d0') IS FALSE))*(((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))OR(t1.c63)))AND(((0.13622078546485816) ISNULL))))AND(CASE WHEN t1.c0 THEN t1.c63 ELSE '' END)))OR(((((((((((((NULL)OR(t1.c0)))OR('-665923342')))OR(t1.c0)))OR(NULL)))AND(t1.c63)))OR(t1.c0))))) ORDER BY ((((x'45d0') IS FALSE))*(((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))OR(t1.c63)))AND(((0.13622078546485816) ISNULL))))AND(CASE WHEN t1.c0 THEN t1.c63 ELSE '' END)))OR(((((((((((((NULL)OR(t1.c0)))OR('-665923342')))OR(t1.c0)))OR(NULL)))AND(t1.c63)))OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'45d0') IS FALSE))*(((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0) NOT BETWEEN (t1.c63) AND (t1.c63)))OR(t1.c63)))AND(((0.13622078546485816) ISNULL))))AND(CASE WHEN t1.c0 THEN t1.c63 ELSE '' END)))OR(((((((((((((NULL)OR(t1.c0)))OR('-665923342')))OR(t1.c0)))OR(NULL)))AND(t1.c63)))OR(t1.c0))))) ORDER BY ((((x'45d0') IS FALSE))*(((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0)<=(t1.c63))) BETWEEN (((vt1.c0) BETWEEN (t1.c63) AND (t1.c0))) AND (((t1.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY t1.c63 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c63))) BETWEEN (((vt1.c0) BETWEEN (t1.c63) AND (t1.c0))) AND (((t1.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY t1.c63 COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0)<=(t1.c63))) BETWEEN (((vt1.c0) BETWEEN (t1.c63) AND (t1.c0))) AND (((t1.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY t1.c63 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c63))) BETWEEN (((vt1.c0) BETWEEN (t1.c63) AND (t1.c0))) AND (((t1.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY t1.c63 COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (((((vt1.c0)<=(t1.c63))) BETWEEN (((vt1.c0) BETWEEN (t1.c63) AND (t1.c0))) AND (((t1.c63) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY t1.c63 COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, 0.5252317654757134, '-2137206376'))))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0))))) ORDER BY ((t1.c0)IS(((((vt1.c0)AND(vt1.c0)))OR(t1.c63))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, 0.5252317654757134, '-2137206376'))))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c0)IS(((((vt1.c0)AND(vt1.c0)))OR(t1.c63)))));
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, 0.5252317654757134, '-2137206376'))))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0))))) ORDER BY ((t1.c0)IS(((((vt1.c0)AND(vt1.c0)))OR(t1.c63))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, 0.5252317654757134, '-2137206376'))))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY ((t1.c0)IS(((((vt1.c0)AND(vt1.c0)))OR(t1.c63)))));
SELECT * FROM vt0, vt1, t1 WHERE ((((((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt1.c0, 0.5252317654757134, '-2137206376'))))OR(((((((((t1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(t1.c0)))AND(t1.c0))))) ORDER BY ((t1.c0)IS(((((vt1.c0)AND(vt1.c0)))OR(t1.c63))));
SELECT * FROM vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST, 0.8269274739659436  NULLS LAST, CASE vt1.c0  WHEN ((t1.c0)<>('')) THEN CAST('_2f|' AS TEXT) ELSE vt1.c0 END, (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1 ORDER BY NULL DESC  NULLS LAST, 0.8269274739659436  NULLS LAST, CASE vt1.c0  WHEN ((t1.c0)!=('')) THEN CAST('_2f|' AS TEXT) ELSE vt1.c0 END, (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST, 0.8269274739659436  NULLS LAST, CASE vt1.c0  WHEN ((t1.c0)<>('')) THEN CAST('_2f|' AS TEXT) ELSE vt1.c0 END, (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1 ORDER BY NULL DESC  NULLS LAST, 0.8269274739659436  NULLS LAST, CASE vt1.c0  WHEN ((t1.c0)!=('')) THEN CAST('_2f|' AS TEXT) ELSE vt1.c0 END, (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (t1.c0 COLLATE NOCASE) ORDER BY NULL DESC  NULLS LAST, 0.8269274739659436  NULLS LAST, CASE vt1.c0  WHEN ((t1.c0)<>('')) THEN CAST('_2f|' AS TEXT) ELSE vt1.c0 END, (+ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY 0X455c0f81  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0x455c0f81  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY 0X455c0f81  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0x455c0f81  NULLS LAST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))))AND((vt0.c0 IN ()))))OR((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c63, t1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))OR(((vt0.c0) BETWEEN ('') AND ('-1568145295')))) LEFT OUTER JOIN vt1 ON (((((t1.c0)OR(vt0.c0)))AND('')) IN ()) WHERE (0.3544721415374724) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((0.3544721415374724) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))))AND((vt0.c0 IN ()))))OR((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c63, t1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))OR(((vt0.c0) BETWEEN ('') AND ('-1568145295')))) LEFT OUTER JOIN vt1 ON (((((t1.c0)OR(vt0.c0)))AND('')) IN ()) ORDER BY NULL);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))))AND((vt0.c0 IN ()))))OR((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c63, t1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))OR(((vt0.c0) BETWEEN ('') AND ('-1568145295')))) LEFT OUTER JOIN vt1 ON (((((t1.c0)OR(vt0.c0)))AND('')) IN ()) WHERE (0.3544721415374724) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((0.3544721415374724) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(IFNULL(DISTINCT vt0.c0, t1.c0))))AND((vt0.c0 IN ()))))OR((((t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c63, t1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))OR(((vt0.c0) BETWEEN ('') AND ('-1568145295')))) LEFT OUTER JOIN vt1 ON (((((t1.c0)OR(vt0.c0)))AND('')) IN ()) ORDER BY NULL);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ (NULL)));
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (MIN((((NULL))<>((vt0.c0))), ((vt1.c0)<=(vt1.c0)), ((vt0.c0)OR(vt0.c0)), ((vt1.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN((((NULL))<>((vt0.c0))), ((vt1.c0)<=(vt1.c0)), ((vt0.c0)OR(vt0.c0)), ((vt1.c0)<=(vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (MIN((((NULL))<>((vt0.c0))), ((vt1.c0)<=(vt1.c0)), ((vt0.c0)OR(vt0.c0)), ((vt1.c0)<=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MIN((((NULL))<>((vt0.c0))), ((vt1.c0)<=(vt1.c0)), ((vt0.c0)OR(vt0.c0)), ((vt1.c0)<=(vt0.c0)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt1.c0);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON vt1.c0 WHERE (MIN((((NULL))<>((vt0.c0))), ((vt1.c0)<=(vt1.c0)), ((vt0.c0)OR(vt0.c0)), ((vt1.c0)<=(vt0.c0))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL INNER JOIN vt0 ON (((('513958811') NOTNULL)) NOTNULL) WHERE (0.5750760414777356);
SELECT SUM(count) FROM (SELECT ALL ((0.5750760414777356) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON NULL INNER JOIN vt0 ON (((('513958811') NOTNULL)) NOTNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL INNER JOIN vt0 ON (((('513958811') NOTNULL)) NOTNULL) WHERE (0.5750760414777356);
SELECT SUM(count) FROM (SELECT ALL ((0.5750760414777356) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON NULL INNER JOIN vt0 ON (((('513958811') NOTNULL)) NOTNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t1 ON NULL INNER JOIN vt0 ON (((('513958811') NOTNULL)) NOTNULL) WHERE (0.5750760414777356);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)&(vt1.c0))) IS TRUE) WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)&(vt1.c0))) IS TRUE));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)&(vt1.c0))) IS TRUE) WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)&(vt1.c0))) IS TRUE));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((((vt0.c0)&(vt1.c0))) IS TRUE) WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON CASE NULL  WHEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN '' THEN t1.c63 WHEN t1.c63 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN CASE t1.c63  WHEN vt1.c0 THEN t1.c63 ELSE t1.c63 END END WHERE ((UNLIKELY(t1.c0) IN (((-9.48289577E8) NOT BETWEEN (t1.c63) AND (t1.c63)), ((0.2236847020270396)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(t1.c0) IN (((-9.48289577E8) NOT BETWEEN (t1.c63) AND (t1.c63)), ((0.2236847020270396)IS NOT(vt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON CASE NULL  WHEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN '' THEN t1.c63 WHEN t1.c63 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN CASE t1.c63  WHEN vt1.c0 THEN t1.c63 ELSE t1.c63 END END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON CASE NULL  WHEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN '' THEN t1.c63 WHEN t1.c63 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN CASE t1.c63  WHEN vt1.c0 THEN t1.c63 ELSE t1.c63 END END WHERE ((UNLIKELY(t1.c0) IN (((-9.48289577E8) NOT BETWEEN (t1.c63) AND (t1.c63)), ((0.2236847020270396)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((UNLIKELY(t1.c0) IN (((-9.48289577E8) NOT BETWEEN (t1.c63) AND (t1.c63)), ((0.2236847020270396)IS NOT(vt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON CASE NULL  WHEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN '' THEN t1.c63 WHEN t1.c63 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN CASE t1.c63  WHEN vt1.c0 THEN t1.c63 ELSE t1.c63 END END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt1 ON CASE NULL  WHEN ((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) THEN ((vt1.c0)>=(t1.c0)) WHEN CASE WHEN t1.c0 THEN t1.c63 WHEN t1.c63 THEN t1.c63 WHEN '' THEN t1.c63 WHEN t1.c63 THEN t1.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END THEN t1.c0 WHEN ((t1.c0) ISNULL) THEN CASE t1.c63  WHEN vt1.c0 THEN t1.c63 ELSE t1.c63 END END WHERE ((UNLIKELY(t1.c0) IN (((-9.48289577E8) NOT BETWEEN (t1.c63) AND (t1.c63)), ((0.2236847020270396)IS NOT(vt1.c0)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)/(t1.c0)) WHEN ((t1.c63)IS(vt1.c0)) THEN t1.c0 COLLATE BINARY WHEN MIN(t1.c0, t1.c0) THEN (~ (t1.c0)) ELSE (+ (t1.c63)) END CROSS JOIN vt1 ON ((((vt1.c0)AND((((NULL))==((t1.c63))))))AND(((((vt1.c0)OR(t1.c0)))AND(t1.c63)))) WHERE ((((((- (vt0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(((0.18864045393878082)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(((0.18864045393878082)<=(vt0.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)/(t1.c0)) WHEN ((t1.c63)IS(vt1.c0)) THEN t1.c0 COLLATE BINARY WHEN MIN(t1.c0, t1.c0) THEN (~ (t1.c0)) ELSE (+ (t1.c63)) END CROSS JOIN vt1 ON ((((vt1.c0)AND((((NULL))==((t1.c63))))))AND(((((vt1.c0)OR(t1.c0)))AND(t1.c63)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)/(t1.c0)) WHEN ((t1.c63)IS(vt1.c0)) THEN t1.c0 COLLATE BINARY WHEN MIN(t1.c0, t1.c0) THEN (~ (t1.c0)) ELSE (+ (t1.c63)) END CROSS JOIN vt1 ON ((((vt1.c0)AND((((NULL))==((t1.c63))))))AND(((((vt1.c0)OR(t1.c0)))AND(t1.c63)))) WHERE ((((((- (vt0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(((0.18864045393878082)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND(((0.18864045393878082)<=(vt0.c0))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN ((t1.c0)/(t1.c0)) WHEN ((t1.c63)IS(vt1.c0)) THEN t1.c0 COLLATE BINARY WHEN MIN(t1.c0, t1.c0) THEN (~ (t1.c0)) ELSE (+ (t1.c63)) END CROSS JOIN vt1 ON ((((vt1.c0)AND((((NULL))==((t1.c63))))))AND(((((vt1.c0)OR(t1.c0)))AND(t1.c63)))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((t1.c0)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0)))) WHERE (((((((((t1.c0)AND(t1.c63)))OR(t1.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((-1.131888994E9)) BETWEEN ((t1.c63)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)AND(t1.c63)))OR(t1.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((-1.131888994E9)) BETWEEN ((t1.c63)) AND ((x'')))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((t1.c0)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((t1.c0)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0)))) WHERE (((((((((t1.c0)AND(t1.c63)))OR(t1.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((-1.131888994E9)) BETWEEN ((t1.c63)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c0)AND(t1.c63)))OR(t1.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((-1.131888994E9)) BETWEEN ((t1.c63)) AND ((x'')))))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((t1.c0)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN t1 ON (((vt0.c0)) BETWEEN ((t1.c0)) AND ((SQLITE_COMPILEOPTION_USED(vt0.c0)))) WHERE (((((((((t1.c0)AND(t1.c63)))OR(t1.c0)))AND(((vt0.c0)&(vt0.c0)))))OR((((-1.131888994E9)) BETWEEN ((t1.c63)) AND ((x''))))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)%(vt1.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), NULL, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)))) ORDER BY (((((vt1.c0)-(vt0.c0)), 0.45965639681423276, ((vt1.c0)/(vt1.c0))))==(((vt1.c0 IN ()), ((vt0.c0)&(vt1.c0)), vt1.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)%(vt1.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), NULL, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)-(vt0.c0)), 0.45965639681423276, ((vt1.c0)/(vt1.c0))))=(((vt1.c0 IN ()), ((vt0.c0)&(vt1.c0)), vt1.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)%(vt1.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), NULL, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)))) ORDER BY (((((vt1.c0)-(vt0.c0)), 0.45965639681423276, ((vt1.c0)/(vt1.c0))))==(((vt1.c0 IN ()), ((vt0.c0)&(vt1.c0)), vt1.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)%(vt1.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), NULL, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((vt1.c0)-(vt0.c0)), 0.45965639681423276, ((vt1.c0)/(vt1.c0))))=(((vt1.c0 IN ()), ((vt0.c0)&(vt1.c0)), vt1.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt1.c0)/(vt1.c0)), vt1.c0 COLLATE BINARY, ((vt1.c0)%(vt1.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)), NULL, CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE '' END)))) ORDER BY (((((vt1.c0)-(vt0.c0)), 0.45965639681423276, ((vt1.c0)/(vt1.c0))))==(((vt1.c0 IN ()), ((vt0.c0)&(vt1.c0)), vt1.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c63 THEN t1.c63 END AS REAL)) ORDER BY CAST(t1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c63 THEN t1.c63 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c63 THEN t1.c63 END AS REAL)) ORDER BY CAST(t1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c0  WHEN t1.c63 THEN t1.c63 END AS REAL)) IS TRUE)  as count FROM t1 ORDER BY CAST(t1.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c63 THEN t1.c63 END AS REAL)) ORDER BY CAST(t1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON CAST(((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) AS REAL) WHERE ((~ (((t1.c0)|(vt0.c0))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN (NOT (vt1.c0)) WHEN (+ (t1.c63)) THEN (t1.c0 IN ()) WHEN (((('JL')OR(t1.c0)))AND('-80297907')) THEN vt1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CAST(((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) AS REAL) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN (NOT (vt1.c0)) WHEN (+ (t1.c63)) THEN (t1.c0 IN ()) WHEN (((('JL')OR(t1.c0)))AND('-80297907')) THEN vt1.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON CAST(((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) AS REAL) WHERE ((~ (((t1.c0)|(vt0.c0))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN (NOT (vt1.c0)) WHEN (+ (t1.c63)) THEN (t1.c0 IN ()) WHEN (((('JL')OR(t1.c0)))AND('-80297907')) THEN vt1.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c0)|(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t1 ON CAST(((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) AS REAL) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN (NOT (vt1.c0)) WHEN (+ (t1.c63)) THEN (t1.c0 IN ()) WHEN (((('JL')OR(t1.c0)))AND('-80297907')) THEN vt1.c0 COLLATE RTRIM END ASC);
SELECT ALL * FROM vt1, vt0 CROSS JOIN t1 ON CAST(((((t1.c0)AND(vt1.c0)))OR(vt1.c0)) AS REAL) WHERE ((~ (((t1.c0)|(vt0.c0))))) ORDER BY CASE WHEN SQLITE_COMPILEOPTION_USED(vt0.c0) THEN (NOT (vt1.c0)) WHEN (+ (t1.c63)) THEN (t1.c0 IN ()) WHEN (((('JL')OR(t1.c0)))AND('-80297907')) THEN vt1.c0 COLLATE RTRIM END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((SUBSTR(vt0.c0, '}Z'))OR(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.5399503477701766 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((SUBSTR(vt0.c0, '}Z'))OR(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.5399503477701766 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((SUBSTR(vt0.c0, '}Z'))OR(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.5399503477701766 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((SUBSTR(vt0.c0, '}Z'))OR(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.5399503477701766 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((SUBSTR(vt0.c0, '}Z'))OR(vt0.c0)))OR(((vt0.c0)+(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(0.5399503477701766 AS REAL))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ ((~ (vt1.c0)))) WHERE (((((~ (vt1.c0)), vt0.c0, TRIM(vt1.c0)))<>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xfffffffffe18aaff, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST(x'' AS NUMERIC), CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), vt0.c0, TRIM(vt1.c0)))!=(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xfffffffffe18aaff, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST(x'' AS NUMERIC), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ ((~ (vt1.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ ((~ (vt1.c0)))) WHERE (((((~ (vt1.c0)), vt0.c0, TRIM(vt1.c0)))<>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xfffffffffe18aaff, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST(x'' AS NUMERIC), CAST(vt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt1.c0)), vt0.c0, TRIM(vt1.c0)))!=(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xfffffffffe18aaff, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST(x'' AS NUMERIC), CAST(vt0.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (+ ((~ (vt1.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (+ ((~ (vt1.c0)))) WHERE (((((~ (vt1.c0)), vt0.c0, TRIM(vt1.c0)))<>(((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((0xfffffffffe18aaff, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), CAST(x'' AS NUMERIC), CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t1 WHERE (((x'')<=(TYPEOF(vt1.c0)))) ORDER BY (((t1.c0, t1.c63, t1.c63)) BETWEEN (((vt1.c0 IN ()), t1.c0 COLLATE BINARY, (vt1.c0 IN ()))) AND (('', CAST(x'a8d1296e' AS BLOB), CASE t1.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<=(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((t1.c0, t1.c63, t1.c63)) BETWEEN (((vt1.c0 IN ()), t1.c0 COLLATE BINARY, (vt1.c0 IN ()))) AND (('', CAST(x'a8d1296e' AS BLOB), CASE t1.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t1 WHERE (((x'')<=(TYPEOF(vt1.c0)))) ORDER BY (((t1.c0, t1.c63, t1.c63)) BETWEEN (((vt1.c0 IN ()), t1.c0 COLLATE BINARY, (vt1.c0 IN ()))) AND (('', CAST(x'a8d1296e' AS BLOB), CASE t1.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'')<=(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((t1.c0, t1.c63, t1.c63)) BETWEEN (((vt1.c0 IN ()), t1.c0 COLLATE BINARY, (vt1.c0 IN ()))) AND (('', CAST(x'a8d1296e' AS BLOB), CASE t1.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, t1 WHERE (((x'')<=(TYPEOF(vt1.c0)))) ORDER BY (((t1.c0, t1.c63, t1.c63)) BETWEEN (((vt1.c0 IN ()), t1.c0 COLLATE BINARY, (vt1.c0 IN ()))) AND (('', CAST(x'a8d1296e' AS BLOB), CASE t1.c0  WHEN vt1.c0 THEN t1.c0 ELSE vt1.c0 END))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE x''  WHEN t1.c0 THEN vt1.c0 ELSE 0.925252533146775 END) BETWEEN (((t1.c0) IS FALSE)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN t1.c0 THEN vt1.c0 ELSE 0.925252533146775 END) BETWEEN (((t1.c0) IS FALSE)) AND (x''))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE x''  WHEN t1.c0 THEN vt1.c0 ELSE 0.925252533146775 END) BETWEEN (((t1.c0) IS FALSE)) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN t1.c0 THEN vt1.c0 ELSE 0.925252533146775 END) BETWEEN (((t1.c0) IS FALSE)) AND (x''))) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE x''  WHEN t1.c0 THEN vt1.c0 ELSE 0.925252533146775 END) BETWEEN (((t1.c0) IS FALSE)) AND (x'')));
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((vt1.c0 COLLATE NOCASE)%(((vt1.c0)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)%(((vt1.c0)%(t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((vt1.c0 COLLATE NOCASE)%(((vt1.c0)%(t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)%(((vt1.c0)%(t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (((vt1.c0 COLLATE NOCASE)%(((vt1.c0)%(t1.c0)))));
SELECT * FROM t1, vt0 WHERE ((((t1.c63 IN (t1.c0)))/(CASE t1.c63  WHEN NULL THEN t1.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63 IN (t1.c0)))/(CASE t1.c63  WHEN NULL THEN t1.c63 END))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c63 IN (t1.c0)))/(CASE t1.c63  WHEN NULL THEN t1.c63 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63 IN (t1.c0)))/(CASE t1.c63  WHEN NULL THEN t1.c63 END))) IS TRUE)  as count FROM t1 NOT INDEXED, vt0);
SELECT * FROM t1, vt0 WHERE ((((t1.c63 IN (t1.c0)))/(CASE t1.c63  WHEN NULL THEN t1.c63 END)));
SELECT * FROM t1 WHERE (((t1.c63 COLLATE RTRIM)<(LOWER(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c63 COLLATE RTRIM)<(LOWER(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c63 COLLATE RTRIM)<(LOWER(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((t1.c63 COLLATE RTRIM)<(LOWER(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c63 COLLATE RTRIM)<(LOWER(t1.c0))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (t1.c63))) ORDER BY ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))<(((((vt0.c0)AND(NULL)))AND(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (t1.c63))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))<(((((vt0.c0)AND(NULL)))AND(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (t1.c63))) ORDER BY ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))<(((((vt0.c0)AND(NULL)))AND(t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (t1.c63))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))<(((((vt0.c0)AND(NULL)))AND(t1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN (t1.c63))) ORDER BY ((((t1.c63) NOT BETWEEN (t1.c0) AND (vt1.c0)))<(((((vt0.c0)AND(NULL)))AND(t1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (ABS(vt1.c0)))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (ABS(vt1.c0)))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL (((~ (ABS(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (ABS(vt1.c0)))) ORDER BY (((NOT (vt1.c0))) BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (vt1.c0));
SELECT * FROM vt0, t1, vt1 WHERE ((((((t1.c0)*(vt0.c0))))<=(((((t1.c0))<=((t1.c0))))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)*(vt0.c0))))<=(((((t1.c0))<=((t1.c0))))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE ((((((t1.c0)*(vt0.c0))))<=(((((t1.c0))<=((t1.c0))))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)*(vt0.c0))))<=(((((t1.c0))<=((t1.c0))))))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY CHANGES()  NULLS FIRST);
SELECT * FROM vt0, t1, vt1 WHERE ((((((t1.c0)*(vt0.c0))))<=(((((t1.c0))<=((t1.c0))))))) ORDER BY CHANGES()  NULLS FIRST;
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (t1.c63) ORDER BY ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (t1.c63) ORDER BY ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c63) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t1 WHERE (t1.c63) ORDER BY ((((((t1.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>>((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>>((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>>((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))>>((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c0) IS FALSE))>>((NOT (vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, vt1.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, vt1.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, vt1.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, vt1.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((COALESCE(DISTINCT vt1.c0, vt0.c0, vt1.c0, vt1.c0))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt0.c0 ELSE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN 0.9472344122985168 ELSE t1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN t1.c0 THEN 0.9472344122985168 ELSE t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN 0.9472344122985168 ELSE t1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN t1.c0 THEN 0.9472344122985168 ELSE t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN 0.9472344122985168 ELSE t1.c0 END) NOT NULL));
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(1.180592762E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.180592762E9 AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(1.180592762E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.180592762E9 AS INTEGER)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST(1.180592762E9 AS INTEGER));
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-1.359697032E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.359697032E9) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-1.359697032E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.359697032E9) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT COUNT(*) FROM t1, vt0, vt1 WHERE (-1.359697032E9);
SELECT ALL * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0 IN (t1.c0, t1.c63, t1.c0)))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0, t1.c63, t1.c0)))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0 IN (t1.c0, t1.c63, t1.c0)))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0 IN (t1.c0, t1.c63, t1.c0)))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(((((t1.c0)AND(t1.c0)))AND(t1.c0)) AS BLOB)) ORDER BY (((((t1.c0 IN (t1.c0, t1.c63, t1.c0)))OR(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN t1.c63 ELSE t1.c63 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (((vt0.c0, t1.c63, 0.4046700954534286)) NOT BETWEEN (((((vt0.c0, t1.c63, vt1.c0)) BETWEEN ((t1.c63, vt0.c0, vt1.c0)) AND ((t1.c0, vt1.c0, t1.c0))), CASE vt0.c0  WHEN t1.c0 THEN x'c0a7' END, ((vt0.c0)<<(vt0.c0)))) AND (((- (vt1.c0)), (- (t1.c0)), t1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt1 ON ((((((((((t1.c63)AND(t1.c0)))OR(vt0.c0)))AND(t1.c63)))AND(vt1.c0))) NOT NULL) WHERE (TYPEOF(DISTINCT (((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((vt0.c0, t1.c63, 0.4046700954534286)) NOT BETWEEN (((((vt0.c0, t1.c63, vt1.c0)) BETWEEN ((t1.c63, vt0.c0, vt1.c0)) AND ((t1.c0, vt1.c0, t1.c0))), CASE vt0.c0  WHEN t1.c0 THEN x'c0a7' END, ((vt0.c0)<<(vt0.c0)))) AND (((- (vt1.c0)), (- (t1.c0)), t1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt1 ON ((((((((((t1.c63)AND(t1.c0)))OR(vt0.c0)))AND(t1.c63)))AND(vt1.c0))) NOT NULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON (((vt0.c0, t1.c63, 0.4046700954534286)) NOT BETWEEN (((((vt0.c0, t1.c63, vt1.c0)) BETWEEN ((t1.c63, vt0.c0, vt1.c0)) AND ((t1.c0, vt1.c0, t1.c0))), CASE vt0.c0  WHEN t1.c0 THEN x'c0a7' END, ((vt0.c0)<<(vt0.c0)))) AND (((- (vt1.c0)), (- (t1.c0)), t1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt1 ON ((((((((((t1.c63)AND(t1.c0)))OR(vt0.c0)))AND(t1.c63)))AND(vt1.c0))) NOT NULL) WHERE (TYPEOF(DISTINCT (((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (((vt0.c0, t1.c63, 0.4046700954534286)) NOT BETWEEN (((((vt0.c0, t1.c63, vt1.c0)) BETWEEN ((t1.c63, vt0.c0, vt1.c0)) AND ((t1.c0, vt1.c0, t1.c0))), CASE vt0.c0  WHEN t1.c0 THEN x'c0a7' END, ((vt0.c0)<<(vt0.c0)))) AND (((- (vt1.c0)), (- (t1.c0)), t1.c0 COLLATE RTRIM))) FULL OUTER JOIN vt1 ON ((((((((((t1.c63)AND(t1.c0)))OR(vt0.c0)))AND(t1.c63)))AND(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c0) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((0.8771409866997225) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY ((0.8771409866997225) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))));
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((0.8771409866997225) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY ((0.8771409866997225) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))));
SELECT * FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER)))>((vt1.c0 COLLATE RTRIM)))) ORDER BY ((0.8771409866997225) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (JULIANDAY(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((MAX(vt0.c0, vt0.c0, vt0.c0, '916331636') IN ((NULL IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((MAX(vt0.c0, vt0.c0, vt0.c0, '916331636') IN ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((MAX(vt0.c0, vt0.c0, vt0.c0, '916331636') IN ((NULL IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((MAX(vt0.c0, vt0.c0, vt0.c0, '916331636') IN ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt0 WHERE ((MAX(vt0.c0, vt0.c0, vt0.c0, '916331636') IN ((NULL IN ())))) ORDER BY x'' DESC;
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN ((vt1.c0) IS TRUE) THEN (vt1.c0 IN ()) ELSE '1719529091' END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0 COLLATE BINARY  WHEN ((vt1.c0) IS TRUE) THEN (vt1.c0 IN ()) ELSE '1719529091' END) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN ((vt1.c0) IS TRUE) THEN (vt1.c0 IN ()) ELSE '1719529091' END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c0 COLLATE BINARY  WHEN ((vt1.c0) IS TRUE) THEN (vt1.c0 IN ()) ELSE '1719529091' END) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (CASE t1.c0 COLLATE BINARY  WHEN ((vt1.c0) IS TRUE) THEN (vt1.c0 IN ()) ELSE '1719529091' END);
SELECT ALL * FROM t1, vt1, vt0 WHERE (x'02bb') ORDER BY (((('EbWB~&(')OR((((x'194e')) BETWEEN ((vt1.c0)) AND ((t1.c0))))))AND((vt0.c0 IN ())))  NULLS LAST, ((((((t1.c63)AND(t1.c63)))OR(t1.c63))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'02bb') IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((('EbWB~&(')OR((((x'194e')) BETWEEN ((vt1.c0)) AND ((t1.c0))))))AND((vt0.c0 IN ())))  NULLS LAST, ((((((t1.c63)AND(t1.c63)))OR(t1.c63))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (x'02bb') ORDER BY (((('EbWB~&(')OR((((x'194e')) BETWEEN ((vt1.c0)) AND ((t1.c0))))))AND((vt0.c0 IN ())))  NULLS LAST, ((((((t1.c63)AND(t1.c63)))OR(t1.c63))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'02bb') IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY (((('EbWB~&(')OR((((x'194e')) BETWEEN ((vt1.c0)) AND ((t1.c0))))))AND((vt0.c0 IN ())))  NULLS LAST, ((((((t1.c63)AND(t1.c63)))OR(t1.c63))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))) WHERE ((('285655206')IS NOT((((vt1.c0)) BETWEEN ((t1.c63)) AND ((vt1.c0)))))) ORDER BY ((t1.c63)IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('285655206')IS NOT((((vt1.c0)) BETWEEN ((t1.c63)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))) ORDER BY ((t1.c63)IS((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))) WHERE ((('285655206')IS NOT((((vt1.c0)) BETWEEN ((t1.c63)) AND ((vt1.c0)))))) ORDER BY ((t1.c63)IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('285655206')IS NOT((((vt1.c0)) BETWEEN ((t1.c63)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))) ORDER BY ((t1.c63)IS((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN t1 ON (+ (((vt0.c0) BETWEEN (t1.c63) AND (vt0.c0)))) WHERE ((('285655206')IS NOT((((vt1.c0)) BETWEEN ((t1.c63)) AND ((vt1.c0)))))) ORDER BY ((t1.c63)IS((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63))) BETWEEN (((((t1.c0)OR(NULL)))OR(vt0.c0))) AND (((t1.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63))) BETWEEN (((((t1.c0)OR(NULL)))OR(vt0.c0))) AND (((t1.c63) IS FALSE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63))) BETWEEN (((((t1.c0)OR(NULL)))OR(vt0.c0))) AND (((t1.c63) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63))) BETWEEN (((((t1.c0)OR(NULL)))OR(vt0.c0))) AND (((t1.c63) IS FALSE)))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((((((((t1.c0)AND(t1.c0)))AND(vt0.c0)))AND(t1.c63)))AND(t1.c63))) BETWEEN (((((t1.c0)OR(NULL)))OR(vt0.c0))) AND (((t1.c63) IS FALSE))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(0.7792176243093016)))OR(0.24103868941815643)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c0)OR(0.7792176243093016)))OR(0.24103868941815643)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(0.7792176243093016)))OR(0.24103868941815643)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(((((vt1.c0)OR(0.7792176243093016)))OR(0.24103868941815643)))))OR(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(((((vt1.c0)OR(0.7792176243093016)))OR(0.24103868941815643)))))OR(NULL)));
SELECT ALL * FROM t1 WHERE ((((t1.c63, t1.c0, t1.c0)) BETWEEN ((CASE 0x21f713e6  WHEN t1.c0 THEN t1.c63 END, (((t1.c0))>((t1.c63))), ((t1.c0) NOT NULL))) AND (((((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), CAST(t1.c63 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63, t1.c0, t1.c0)) BETWEEN ((CASE 0X21f713e6  WHEN t1.c0 THEN t1.c63 END, (((t1.c0))>((t1.c63))), ((t1.c0) NOT NULL))) AND (((((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), CAST(t1.c63 AS REAL))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c63, t1.c0, t1.c0)) BETWEEN ((CASE 0x21f713e6  WHEN t1.c0 THEN t1.c63 END, (((t1.c0))>((t1.c63))), ((t1.c0) NOT NULL))) AND (((((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), CAST(t1.c63 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c63, t1.c0, t1.c0)) BETWEEN ((CASE 0X21f713e6  WHEN t1.c0 THEN t1.c63 END, (((t1.c0))>((t1.c63))), ((t1.c0) NOT NULL))) AND (((((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), CAST(t1.c63 AS REAL))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c63, t1.c0, t1.c0)) BETWEEN ((CASE 0x21f713e6  WHEN t1.c0 THEN t1.c63 END, (((t1.c0))>((t1.c63))), ((t1.c0) NOT NULL))) AND (((((t1.c63)) BETWEEN ((t1.c63)) AND ((t1.c63))), ((t1.c0) BETWEEN (t1.c63) AND (t1.c0)), CAST(t1.c63 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c0))OR(LOWER(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (0.6230587753306098) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((json_patch(vt0.c0, vt0.c0))OR(LOWER(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (0.6230587753306098) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c0))OR(LOWER(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (0.6230587753306098) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((json_patch(vt0.c0, vt0.c0))OR(LOWER(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (0.6230587753306098) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((json_patch(vt0.c0, vt0.c0))OR(LOWER(vt0.c0))))AND(((vt0.c0) NOT BETWEEN (0.6230587753306098) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i71 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i71);
SELECT COUNT(*) FROM vt0 INDEXED BY i71 WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INDEXED BY i71);
SELECT ALL * FROM vt1, t1, vt0 WHERE (json_patch(((t1.c63) IS TRUE), '\Q#xtY>#}'));
SELECT SUM(count) FROM (SELECT ((json_patch(((t1.c63) IS TRUE), '\Q#xtY>#}')) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (json_patch(((t1.c63) IS TRUE), '\Q#xtY>#}'));
SELECT SUM(count) FROM (SELECT ((json_patch(((t1.c63) IS TRUE), '\Q#xtY>#}')) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (json_patch(((t1.c63) IS TRUE), '\Q#xtY>#}'));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT NULL))GLOB((((t1.c63))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT NULL))GLOB((((t1.c63))>((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT NULL))GLOB((((t1.c63))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0) NOT NULL))GLOB((((t1.c63))>((vt0.c0)))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT NULL))GLOB((((t1.c63))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((t1.c0)<>(t1.c63)))/(t1.c0))) ORDER BY t1.c63, CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)<=(t1.c0)) THEN ((0.26724396449904) ISNULL) WHEN '-2883524' THEN CASE vt1.c0  WHEN vt1.c0 THEN t1.c63 END WHEN t1.c63 COLLATE BINARY THEN ((t1.c0)*(t1.c63)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)!=(t1.c63)))/(t1.c0))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY t1.c63, CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)<=(t1.c0)) THEN ((0.26724396449904) ISNULL) WHEN '-2883524' THEN CASE vt1.c0  WHEN vt1.c0 THEN t1.c63 END WHEN t1.c63 COLLATE BINARY THEN ((t1.c0)*(t1.c63)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((t1.c0)<>(t1.c63)))/(t1.c0))) ORDER BY t1.c63, CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)<=(t1.c0)) THEN ((0.26724396449904) ISNULL) WHEN '-2883524' THEN CASE vt1.c0  WHEN vt1.c0 THEN t1.c63 END WHEN t1.c63 COLLATE BINARY THEN ((t1.c0)*(t1.c63)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)!=(t1.c63)))/(t1.c0))) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY t1.c63, CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)<=(t1.c0)) THEN ((0.26724396449904) ISNULL) WHEN '-2883524' THEN CASE vt1.c0  WHEN vt1.c0 THEN t1.c63 END WHEN t1.c63 COLLATE BINARY THEN ((t1.c0)*(t1.c63)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1 WHERE (((((t1.c0)<>(t1.c63)))/(t1.c0))) ORDER BY t1.c63, CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)<=(t1.c0)) THEN ((0.26724396449904) ISNULL) WHEN '-2883524' THEN CASE vt1.c0  WHEN vt1.c0 THEN t1.c63 END WHEN t1.c63 COLLATE BINARY THEN ((t1.c0)*(t1.c63)) END  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON CASE ((((vt0.c0)OR(t1.c0)))AND(t1.c63))  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>((vt0.c0))) END INNER JOIN vt1 ON ((((((((NULLIF(t1.c0, x'fcaf'))AND((~ (t1.c63)))))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END)))AND(CASE WHEN NULL THEN t1.c0 WHEN x'3038' THEN NULL WHEN t1.c0 THEN t1.c63 END)))AND(((vt0.c0)IS(vt0.c0)))) WHERE (LIKELIHOOD(t1.c0, 0.037722697798573734) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t1.c0, 0.037722697798573734) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE ((((vt0.c0)OR(t1.c0)))AND(t1.c63))  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>((vt0.c0))) END INNER JOIN vt1 ON ((((((((NULLIF(t1.c0, x'fcaf'))AND((~ (t1.c63)))))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END)))AND(CASE WHEN NULL THEN t1.c0 WHEN x'3038' THEN NULL WHEN t1.c0 THEN t1.c63 END)))AND(((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON CASE ((((vt0.c0)OR(t1.c0)))AND(t1.c63))  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>((vt0.c0))) END INNER JOIN vt1 ON ((((((((NULLIF(t1.c0, x'fcaf'))AND((~ (t1.c63)))))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END)))AND(CASE WHEN NULL THEN t1.c0 WHEN x'3038' THEN NULL WHEN t1.c0 THEN t1.c63 END)))AND(((vt0.c0)IS(vt0.c0)))) WHERE (LIKELIHOOD(t1.c0, 0.037722697798573734) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(t1.c0, 0.037722697798573734) COLLATE RTRIM) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE ((((vt0.c0)OR(t1.c0)))AND(t1.c63))  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>((vt0.c0))) END INNER JOIN vt1 ON ((((((((NULLIF(t1.c0, x'fcaf'))AND((~ (t1.c63)))))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END)))AND(CASE WHEN NULL THEN t1.c0 WHEN x'3038' THEN NULL WHEN t1.c0 THEN t1.c63 END)))AND(((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t1 ON CASE ((((vt0.c0)OR(t1.c0)))AND(t1.c63))  WHEN ((vt0.c0) IS TRUE) THEN (((vt0.c0))>((vt0.c0))) END INNER JOIN vt1 ON ((((((((NULLIF(t1.c0, x'fcaf'))AND((~ (t1.c63)))))AND(CASE WHEN vt1.c0 THEN t1.c63 WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 ELSE t1.c63 END)))AND(CASE WHEN NULL THEN t1.c0 WHEN x'3038' THEN NULL WHEN t1.c0 THEN t1.c63 END)))AND(((vt0.c0)IS(vt0.c0)))) WHERE (LIKELIHOOD(t1.c0, 0.037722697798573734) COLLATE RTRIM);
SELECT ALL * FROM t1, vt1 WHERE ((((x''))=((((t1.c63) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE ((((x''))=((((t1.c63) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((((t1.c63) BETWEEN (t1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE ((((x''))=((((t1.c63) BETWEEN (t1.c0) AND (t1.c0))))));
SELECT * FROM t1, vt0 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((((((((vt0.c0)AND(t1.c63)))OR(472275389)))OR(NULL)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) ISNULL) THEN ((((((((vt0.c0)AND(t1.c63)))OR(472275389)))OR(NULL)))OR(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((((((((vt0.c0)AND(t1.c63)))OR(472275389)))OR(NULL)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c0) ISNULL) THEN ((((((((vt0.c0)AND(t1.c63)))OR(472275389)))OR(NULL)))OR(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN ((t1.c0) ISNULL) THEN ((((((((vt0.c0)AND(t1.c63)))OR(472275389)))OR(NULL)))OR(vt0.c0)) END);
SELECT * FROM t1 FULL OUTER JOIN vt1 ON (((+ (vt1.c0))) NOT NULL) WHERE (((load_extension(t1.c0, t1.c0))-((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t1.c0, t1.c0))-((~ (vt1.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (((+ (vt1.c0))) NOT NULL));
SELECT * FROM t1 FULL OUTER JOIN vt1 ON (((+ (vt1.c0))) NOT NULL) WHERE (((load_extension(t1.c0, t1.c0))-((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t1.c0, t1.c0))-((~ (vt1.c0))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON (((+ (vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ ((- (vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((~ ((- (vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (''))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (''))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (''))) IS TRUE) ASC;
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((+ (vt0.c0))))>=((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((+ (vt0.c0))))>=((((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL * FROM t1, vt1, vt0 WHERE (((((+ (vt0.c0))))>=((((vt0.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON vt1.c0 FULL OUTER JOIN vt0 ON CAST(t1.c0 COLLATE NOCASE AS BLOB) WHERE ('-530431827');
SELECT SUM(count) FROM (SELECT (('-530431827') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON vt1.c0 FULL OUTER JOIN vt0 ON CAST(t1.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON vt1.c0 FULL OUTER JOIN vt0 ON CAST(t1.c0 COLLATE NOCASE AS BLOB) WHERE ('-530431827');
SELECT SUM(count) FROM (SELECT (('-530431827') IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON vt1.c0 FULL OUTER JOIN vt0 ON CAST(t1.c0 COLLATE NOCASE AS BLOB));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON vt1.c0 FULL OUTER JOIN vt0 ON CAST(t1.c0 COLLATE NOCASE AS BLOB) WHERE ('-530431827');
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c0)OR(t1.c0)))>>(json_type(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)OR(t1.c0)))>>(json_type(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c0)OR(t1.c0)))>>(json_type(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)OR(t1.c0)))>>(json_type(t1.c0)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((t1.c0)OR(t1.c0)))>>(json_type(t1.c0))));
SELECT ALL * FROM vt1 WHERE (-9.4466005E7);
SELECT SUM(count) FROM (SELECT ALL ((-9.4466005E7) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (-9.4466005E7);
SELECT SUM(count) FROM (SELECT ALL ((-9.4466005E7) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (-9.4466005E7);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, vt1 WHERE (((NULLIF(t1.c63, vt0.c0))>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c63, vt0.c0))>((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, vt1 WHERE (((NULLIF(t1.c63, vt0.c0))>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c63, vt0.c0))>((vt1.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0 NOT INDEXED, vt1 WHERE (((NULLIF(t1.c63, vt0.c0))>((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT))&(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
